

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Mon Sep 14 17:33:11 2020


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	const,global,class=CODE,delta=1
     4                           	psect	text,global,reloc=2,class=CODE,delta=1
     5                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     6                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     7                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97                           
    98                           	psect	const
    99                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   100                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   101                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   102                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   103                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   104                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   105                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   106                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   107                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   108                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   109                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   110                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   111                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   112                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   113                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   114                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   115                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   116                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   117                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   118                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   119                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   120                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   121                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   122                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   123                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   124                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   125                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   126                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   127                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   128                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   129                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   130                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   131                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   132                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   133                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   134                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   135                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   136                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   137                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   138                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   139                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   140                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   141                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   142                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   143                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   144                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   145                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   146                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   147                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   148                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   149                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   150                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   151                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   152                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   153                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   154                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   155                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   156                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   157                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   158                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   159                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   160                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   161                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   162                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   163                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   164                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   165                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   166                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   167                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   168                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   169                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   170                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   171                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   172                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   173                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   174                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   175                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   176                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   177                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   178                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   179                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   180                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   181                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   182                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   183                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   184                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   185                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   186                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   187                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   188                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   189                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   190                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   191                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   192                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   193                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   194                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   195                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   196                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   197                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   198                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   199  001000                     _Nastawa:
   200  001000  01                 	db	1
   201  001001  01                 	db	1
   202  001002  14                 	db	20
   203  001003  14                 	db	20
   204  001004  02                 	db	2
   205  001005  04                 	db	4
   206  001006  02                 	db	2
   207  001007  02                 	db	2
   208  001008  02                 	db	2
   209  001009  02                 	db	2
   210  00100A  04                 	db	4
   211  00100B  08                 	db	8
   212  00100C  0A                 	db	10
   213  00100D  05                 	db	5
   214  00100E  02                 	db	2
   215  00100F  02                 	db	2
   216  001010  02                 	db	2
   217  001011  02                 	db	2
   218  001012  14                 	db	20
   219  001013  01                 	db	1
   220  001014  14                 	db	20
   221  001015  01                 	db	1
   222  001016  0A                 	db	10
   223  001017  05                 	db	5
   224  001018  14                 	db	20
   225  001019  14                 	db	20
   226  00101A  14                 	db	20
   227  00101B  14                 	db	20
   228  00101C  05                 	db	5
   229  00101D  05                 	db	5
   230  00101E  05                 	db	5
   231  00101F  14                 	db	20
   232  001020  0A                 	db	10
   233  001021  0A                 	db	10
   234  001022  14                 	db	20
   235  001023  14                 	db	20
   236  001024  05                 	db	5
   237  001025  05                 	db	5
   238  001026  08                 	db	8
   239  001027  08                 	db	8
   240  001028  14                 	db	20
   241  001029  14                 	db	20
   242  00102A  14                 	db	20
   243  00102B  14                 	db	20
   244  00102C  14                 	db	20
   245  00102D  14                 	db	20
   246                           
   247                           	psect	text
   248                           ;port.c: 28: static const Opoznienie Nastawa[23]
      +                          ={
   249                           ;port.c: 29: 1,1,
   250                           ;port.c: 30: 20,20,
   251                           ;port.c: 31: 2,4,
   252                           ;port.c: 32: 2,2,
   253                           ;port.c: 33: 2,2,
   254                           ;port.c: 34: 4,8,
   255                           ;port.c: 35: 10,5,
   256                           ;port.c: 36: 2,2,
   257                           ;port.c: 37: 2,2,
   258                           ;port.c: 38: 20,1,
   259                           ;port.c: 39: 20,1,
   260                           ;port.c: 40: 10,5,
   261                           ;port.c: 41: 20,20,
   262                           ;port.c: 42: 20,20,
   263                           ;port.c: 43: 5,5,
   264                           ;port.c: 44: 5,20,
   265                           ;port.c: 45: 10,10,
   266                           ;port.c: 46: 20,20,
   267                           ;port.c: 47: 5,5,
   268                           ;port.c: 48: 8,8,
   269                           ;port.c: 49: 20,20,
   270                           ;port.c: 50: 20,20,
   271                           ;port.c: 51: 20,20
   272                           ;port.c: 52: };
   273                           ;port.c: 54: static volatile IOPort SPort[23];
   274                           ;port.c: 59: void RefStan(void)
   275                           ;port.c: 60: {
   276  00EF58                     _RefStan:
   277  000000                     
   278                           ;port.c: 62: SPort[0].Input=0;
   279  00EF58  010E               	movlb	_SPort shr (0+8)	;volatile
   280  00EF5A  9194               	bcf	_SPort& (0+255),0,b	;volatile
   281                           ;port.c: 64: SPort[1].Input=(RB5)?1:0;
   282  00EF5C  010E               	movlb	(_SPort+1) shr (0+8)
   283  00EF5E  9195               	bcf	(_SPort+1)& (0+255),0,b
   284  00EF60  BA81               	btfsc	3969,5,c	;volatile
   285  00EF62  8195               	bsf	(_SPort+1)& (0+255),0,b
   286                           ;port.c: 66: SPort[2].Input=(RC0&&RA7)?1:0;
   287  00EF64  B082               	btfsc	3970,0,c	;volatile
   288  00EF66  AE80               	btfss	3968,7,c	;volatile
   289  00EF68  D002               	goto	u40
   290  00EF6A  0E01               	movlw	1
   291  00EF6C  D001               	goto	u50
   292  00EF6E                     u40:
   293  00EF6E  0E00               	movlw	0
   294  00EF70                     u50:
   295  00EF70  6E00               	movwf	btemp,c
   296  00EF72  EE0E  F096         	lfsr	0,_SPort+2
   297  00EF76  18EF               	xorwf	indf0,w,c
   298  00EF78  0BFE               	andlw	-2
   299  00EF7A  1800               	xorwf	btemp,w,c
   300  00EF7C  6EEF               	movwf	indf0,c
   301                           ;port.c: 68: SPort[3].Input=(RA6&&RA7)?1:0;
   302  00EF7E  BC80               	btfsc	3968,6,c	;volatile
   303  00EF80  AE80               	btfss	3968,7,c	;volatile
   304  00EF82  D002               	goto	u80
   305  00EF84  0E01               	movlw	1
   306  00EF86  D001               	goto	u90
   307  00EF88                     u80:
   308  00EF88  0E00               	movlw	0
   309  00EF8A                     u90:
   310  00EF8A  6E00               	movwf	btemp,c
   311  00EF8C  EE0E  F097         	lfsr	0,_SPort+3
   312  00EF90  18EF               	xorwf	indf0,w,c
   313  00EF92  0BFE               	andlw	-2
   314  00EF94  1800               	xorwf	btemp,w,c
   315  00EF96  6EEF               	movwf	indf0,c
   316                           ;port.c: 70: SPort[4].Input=(RA7)?1:0;
   317  00EF98  010E               	movlb	(_SPort+4) shr (0+8)
   318  00EF9A  9198               	bcf	(_SPort+4)& (0+255),0,b
   319  00EF9C  BE80               	btfsc	3968,7,c	;volatile
   320  00EF9E  8198               	bsf	(_SPort+4)& (0+255),0,b
   321                           ;port.c: 72: SPort[5].Input=(RD4)?0:1;
   322  00EFA0  0E00               	movlw	0
   323  00EFA2  A883               	btfss	3971,4,c	;volatile
   324  00EFA4  0E01               	movlw	1
   325  00EFA6  6E00               	movwf	btemp,c
   326  00EFA8  EE0E  F099         	lfsr	0,_SPort+5
   327  00EFAC  18EF               	xorwf	indf0,w,c
   328  00EFAE  0BFE               	andlw	-2
   329  00EFB0  1800               	xorwf	btemp,w,c
   330  00EFB2  6EEF               	movwf	indf0,c
   331                           ;port.c: 74: SPort[6].Input=(RA4)?0:1;
   332  00EFB4  0E00               	movlw	0
   333  00EFB6  A880               	btfss	3968,4,c	;volatile
   334  00EFB8  0E01               	movlw	1
   335  00EFBA  6E00               	movwf	btemp,c
   336  00EFBC  EE0E  F09A         	lfsr	0,_SPort+6
   337  00EFC0  18EF               	xorwf	indf0,w,c
   338  00EFC2  0BFE               	andlw	-2
   339  00EFC4  1800               	xorwf	btemp,w,c
   340  00EFC6  6EEF               	movwf	indf0,c
   341                           ;port.c: 76: SPort[7].Input=0;
   342  00EFC8  010E               	movlb	(_SPort+7) shr (0+8)
   343  00EFCA  919B               	bcf	(_SPort+7)& (0+255),0,b
   344                           ;port.c: 78: SPort[8].Input=(RC5)?0:1;
   345  00EFCC  0E00               	movlw	0
   346  00EFCE  AA82               	btfss	3970,5,c	;volatile
   347  00EFD0  0E01               	movlw	1
   348  00EFD2  6E00               	movwf	btemp,c
   349  00EFD4  EE0E  F09C         	lfsr	0,_SPort+8
   350  00EFD8  18EF               	xorwf	indf0,w,c
   351  00EFDA  0BFE               	andlw	-2
   352  00EFDC  1800               	xorwf	btemp,w,c
   353  00EFDE  6EEF               	movwf	indf0,c
   354                           ;port.c: 80: SPort[9].Input=(DtCO._on_DZ_CO)?1:0
      +                          ;
   355  00EFE0  0100               	movlb	_DtCO shr (0+8)
   356  00EFE2  0E00               	movlw	0
   357  00EFE4  BB7D               	btfsc	_DtCO& (0+255),5,b
   358  00EFE6  0E01               	movlw	1
   359  00EFE8  6E00               	movwf	btemp,c
   360  00EFEA  EE0E  F09D         	lfsr	0,_SPort+9
   361  00EFEE  18EF               	xorwf	indf0,w,c
   362  00EFF0  0BFE               	andlw	-2
   363  00EFF2  1800               	xorwf	btemp,w,c
   364  00EFF4  6EEF               	movwf	indf0,c
   365                           ;port.c: 82: SPort[10].Input=(DtCW._on_DZ_CW)?1:
      +                          0;
   366  00EFF6  0100               	movlb	_DtCW shr (0+8)
   367  00EFF8  0E00               	movlw	0
   368  00EFFA  B96E               	btfsc	_DtCW& (0+255),4,b
   369  00EFFC  0E01               	movlw	1
   370  00EFFE  6E00               	movwf	btemp,c
   371  00F000  EE0E  F09E         	lfsr	0,_SPort+10
   372  00F004  18EF               	xorwf	indf0,w,c
   373  00F006  0BFE               	andlw	-2
   374  00F008  1800               	xorwf	btemp,w,c
   375  00F00A  6EEF               	movwf	indf0,c
   376                           ;port.c: 84: SPort[11].Input=((RA4)?0:1)||((M._L
      +                          IN_CW)?1:0)||((M._IOT_CW)?1:0);
   377  00F00C  A880               	btfss	3968,4,c	;volatile
   378  00F00E  D006               	goto	u151
   379  00F010  0103               	movlb	(_M+6) shr (0+8)
   380  00F012  B10C               	btfsc	(_M+6)& (0+255),0,b
   381  00F014  D003               	goto	u151
   382  00F016  0103               	movlb	(_M+7) shr (0+8)
   383  00F018  A30D               	btfss	(_M+7)& (0+255),1,b
   384  00F01A  D002               	goto	u150
   385  00F01C                     u151:
   386  00F01C  0E01               	movlw	1
   387  00F01E  D001               	goto	u160
   388  00F020                     u150:
   389  00F020  0E00               	movlw	0
   390  00F022                     u160:
   391  00F022  6E00               	movwf	btemp,c
   392  00F024  EE0E  F09F         	lfsr	0,_SPort+11
   393  00F028  18EF               	xorwf	indf0,w,c
   394  00F02A  0BFE               	andlw	-2
   395  00F02C  1800               	xorwf	btemp,w,c
   396  00F02E  6EEF               	movwf	indf0,c
   397                           ;port.c: 86: SPort[12].Input=((!((M._AKTYWNE_PGD
      +                          2)?1:0))&&(((RD5)?1:0)||((M._LIN_RT)?1:0)||((M._
      +                          I10V_RT)?1:0)||((M._IOT_RT)?1:0)))||(((M._AKTYWN
      +                          E_PGD2)?1:0)&&((M._pob_PGDRT)?1:0));
   398  00F030  0103               	movlb	(_M+3) shr (0+8)
   399  00F032  B509               	btfsc	(_M+3)& (0+255),2,b
   400  00F034  D00B               	goto	u250
   401  00F036  BA83               	btfsc	3971,5,c	;volatile
   402  00F038  D00F               	goto	u281
   403  00F03A  0103               	movlb	(_M+5) shr (0+8)
   404  00F03C  BF0B               	btfsc	(_M+5)& (0+255),7,b
   405  00F03E  D00C               	goto	u281
   406  00F040  0103               	movlb	(_M+6) shr (0+8)
   407  00F042  BD0C               	btfsc	(_M+6)& (0+255),6,b
   408  00F044  D009               	goto	u281
   409  00F046  0103               	movlb	(_M+7) shr (0+8)
   410  00F048  B10D               	btfsc	(_M+7)& (0+255),0,b
   411  00F04A  D006               	goto	u281
   412  00F04C                     u250:
   413  00F04C  0103               	movlb	(_M+3) shr (0+8)
   414  00F04E  A509               	btfss	(_M+3)& (0+255),2,b
   415  00F050  D005               	goto	u290
   416  00F052  0103               	movlb	(_M+1) shr (0+8)
   417  00F054  A107               	btfss	(_M+1)& (0+255),0,b
   418  00F056  D002               	goto	u290
   419  00F058                     u281:
   420  00F058  0E01               	movlw	1
   421  00F05A  D001               	goto	u300
   422  00F05C                     u290:
   423  00F05C  0E00               	movlw	0
   424  00F05E                     u300:
   425  00F05E  6E00               	movwf	btemp,c
   426  00F060  EE0E  F0A0         	lfsr	0,_SPort+12
   427  00F064  18EF               	xorwf	indf0,w,c
   428  00F066  0BFE               	andlw	-2
   429  00F068  1800               	xorwf	btemp,w,c
   430  00F06A  6EEF               	movwf	indf0,c
   431                           ;port.c: 88: SPort[13].Input=(DtCO._cold_CO||DtC
      +                          O._hot_CO)?1:0;
   432  00F06C  0100               	movlb	(_DtCO+1) shr (0+8)
   433  00F06E  B57E               	btfsc	(_DtCO+1)& (0+255),2,b
   434  00F070  D003               	goto	u331
   435  00F072  0100               	movlb	(_DtCO+1) shr (0+8)
   436  00F074  A77E               	btfss	(_DtCO+1)& (0+255),3,b
   437  00F076  D002               	goto	u330
   438  00F078                     u331:
   439  00F078  0E01               	movlw	1
   440  00F07A  D001               	goto	u340
   441  00F07C                     u330:
   442  00F07C  0E00               	movlw	0
   443  00F07E                     u340:
   444  00F07E  6E00               	movwf	btemp,c
   445  00F080  EE0E  F0A1         	lfsr	0,_SPort+13
   446  00F084  18EF               	xorwf	indf0,w,c
   447  00F086  0BFE               	andlw	-2
   448  00F088  1800               	xorwf	btemp,w,c
   449  00F08A  6EEF               	movwf	indf0,c
   450                           ;port.c: 90: SPort[14].Input=(DtCS._error)?1:0;
   451  00F08C  0100               	movlb	_DtCS shr (0+8)
   452  00F08E  0E00               	movlw	0
   453  00F090  B75F               	btfsc	_DtCS& (0+255),3,b
   454  00F092  0E01               	movlw	1
   455  00F094  6E00               	movwf	btemp,c
   456  00F096  EE0E  F0A2         	lfsr	0,_SPort+14
   457  00F09A  18EF               	xorwf	indf0,w,c
   458  00F09C  0BFE               	andlw	-2
   459  00F09E  1800               	xorwf	btemp,w,c
   460  00F0A0  6EEF               	movwf	indf0,c
   461                           ;port.c: 92: SPort[15].Input=(DtCS._work)?1:0;
   462  00F0A2  0E00               	movlw	0
   463  00F0A4  B95F               	btfsc	_DtCS& (0+255),4,b
   464  00F0A6  0E01               	movlw	1
   465  00F0A8  6E00               	movwf	btemp,c
   466  00F0AA  EE0E  F0A3         	lfsr	0,_SPort+15
   467  00F0AE  18EF               	xorwf	indf0,w,c
   468  00F0B0  0BFE               	andlw	-2
   469  00F0B2  1800               	xorwf	btemp,w,c
   470  00F0B4  6EEF               	movwf	indf0,c
   471                           ;port.c: 94: SPort[16].Input=(DtCS._lo)?1:0;
   472  00F0B6  0E00               	movlw	0
   473  00F0B8  B35F               	btfsc	_DtCS& (0+255),1,b
   474  00F0BA  0E01               	movlw	1
   475  00F0BC  6E00               	movwf	btemp,c
   476  00F0BE  EE0E  F0A4         	lfsr	0,_SPort+16
   477  00F0C2  18EF               	xorwf	indf0,w,c
   478  00F0C4  0BFE               	andlw	-2
   479  00F0C6  1800               	xorwf	btemp,w,c
   480  00F0C8  6EEF               	movwf	indf0,c
   481                           ;port.c: 96: SPort[17].Input=(DtCW._cold_CW)?1:0
      +                          ;
   482  00F0CA  0100               	movlb	_DtCW shr (0+8)
   483  00F0CC  0E00               	movlw	0
   484  00F0CE  BF6E               	btfsc	_DtCW& (0+255),7,b
   485  00F0D0  0E01               	movlw	1
   486  00F0D2  6E00               	movwf	btemp,c
   487  00F0D4  EE0E  F0A5         	lfsr	0,_SPort+17
   488  00F0D8  18EF               	xorwf	indf0,w,c
   489  00F0DA  0BFE               	andlw	-2
   490  00F0DC  1800               	xorwf	btemp,w,c
   491  00F0DE  6EEF               	movwf	indf0,c
   492                           ;port.c: 98: SPort[18].Input=(DtCO._err_CO)?1:0;
   493  00F0E0  0100               	movlb	_DtCO shr (0+8)
   494  00F0E2  0E00               	movlw	0
   495  00F0E4  B17D               	btfsc	_DtCO& (0+255),0,b
   496  00F0E6  0E01               	movlw	1
   497  00F0E8  6E00               	movwf	btemp,c
   498  00F0EA  EE0E  F0A6         	lfsr	0,_SPort+18
   499  00F0EE  18EF               	xorwf	indf0,w,c
   500  00F0F0  0BFE               	andlw	-2
   501  00F0F2  1800               	xorwf	btemp,w,c
   502  00F0F4  6EEF               	movwf	indf0,c
   503                           ;port.c: 100: SPort[19].Input=(DtCO._ad_CO)?1:0;
   504  00F0F6  0E00               	movlw	0
   505  00F0F8  B57D               	btfsc	_DtCO& (0+255),2,b
   506  00F0FA  0E01               	movlw	1
   507  00F0FC  6E00               	movwf	btemp,c
   508  00F0FE  EE0E  F0A7         	lfsr	0,_SPort+19
   509  00F102  18EF               	xorwf	indf0,w,c
   510  00F104  0BFE               	andlw	-2
   511  00F106  1800               	xorwf	btemp,w,c
   512  00F108  6EEF               	movwf	indf0,c
   513                           ;port.c: 102: SPort[20].Input=(DtZW._on_ZW)?1:0;
   514  00F10A  0100               	movlb	_DtZW shr (0+8)
   515  00F10C  0E00               	movlw	0
   516  00F10E  B163               	btfsc	_DtZW& (0+255),0,b
   517  00F110  0E01               	movlw	1
   518  00F112  6E00               	movwf	btemp,c
   519  00F114  EE0E  F0A8         	lfsr	0,_SPort+20
   520  00F118  18EF               	xorwf	indf0,w,c
   521  00F11A  0BFE               	andlw	-2
   522  00F11C  1800               	xorwf	btemp,w,c
   523  00F11E  6EEF               	movwf	indf0,c
   524                           ;port.c: 104: SPort[21].Input=(RA6)?1:0;
   525  00F120  010E               	movlb	(_SPort+21) shr (0+8)
   526  00F122  91A9               	bcf	(_SPort+21)& (0+255),0,b
   527  00F124  BC80               	btfsc	3968,6,c	;volatile
   528  00F126  81A9               	bsf	(_SPort+21)& (0+255),0,b
   529                           ;port.c: 106: SPort[22].Input=(RD5)?1:0;
   530  00F128  010E               	movlb	(_SPort+22) shr (0+8)
   531  00F12A  91AA               	bcf	(_SPort+22)& (0+255),0,b
   532  00F12C  BA83               	btfsc	3971,5,c	;volatile
   533  00F12E  81AA               	bsf	(_SPort+22)& (0+255),0,b
   534                           ;port.c: 108: }
   535  00F130  0012               	return	
   536  00F132                     __end_of_RefStan:
   537                           ;port.c: 112: void FrsStan(void)
   538                           ;port.c: 113: {
   539  00F132                     _FrsStan:
   540  000000                     
   541                           ;port.c: 115: SPort[0].Output=SPort[0].Input;
   542  00F132  CE94  F000         	movff	_SPort,btemp	;volatile
   543  00F136  010E               	movlb	_SPort shr (0+8)	;volatile
   544  00F138  9394               	bcf	_SPort& (0+255),1,b	;volatile
   545  00F13A  B000               	btfsc	btemp,0,c
   546  00F13C  8394               	bsf	_SPort& (0+255),1,b	;volatile
   547                           ;port.c: 116: SPort[0].Timer=0;
   548  00F13E  EE0E  F094         	lfsr	0,_SPort	;volatile
   549  00F142  0E03               	movlw	-253
   550  00F144  16EF               	andwf	indf0,f,c
   551                           ;port.c: 119: SPort[1].Output=SPort[1].Input;
   552  00F146  CE95  F000         	movff	_SPort+1,btemp
   553  00F14A  010E               	movlb	(_SPort+1) shr (0+8)
   554  00F14C  9395               	bcf	(_SPort+1)& (0+255),1,b
   555  00F14E  B000               	btfsc	btemp,0,c
   556  00F150  8395               	bsf	(_SPort+1)& (0+255),1,b
   557                           ;port.c: 120: SPort[1].Timer=0;
   558  00F152  EE0E  F095         	lfsr	0,_SPort+1
   559  00F156  16EF               	andwf	indf0,f,c
   560                           ;port.c: 123: SPort[2].Output=SPort[2].Input;
   561  00F158  CE96  F000         	movff	_SPort+2,btemp
   562  00F15C  010E               	movlb	(_SPort+2) shr (0+8)
   563  00F15E  9396               	bcf	(_SPort+2)& (0+255),1,b
   564  00F160  B000               	btfsc	btemp,0,c
   565  00F162  8396               	bsf	(_SPort+2)& (0+255),1,b
   566                           ;port.c: 124: SPort[2].Timer=0;
   567  00F164  EE0E  F096         	lfsr	0,_SPort+2
   568  00F168  16EF               	andwf	indf0,f,c
   569                           ;port.c: 127: SPort[3].Output=SPort[3].Input;
   570  00F16A  CE97  F000         	movff	_SPort+3,btemp
   571  00F16E  010E               	movlb	(_SPort+3) shr (0+8)
   572  00F170  9397               	bcf	(_SPort+3)& (0+255),1,b
   573  00F172  B000               	btfsc	btemp,0,c
   574  00F174  8397               	bsf	(_SPort+3)& (0+255),1,b
   575                           ;port.c: 128: SPort[3].Timer=0;
   576  00F176  EE0E  F097         	lfsr	0,_SPort+3
   577  00F17A  16EF               	andwf	indf0,f,c
   578                           ;port.c: 131: SPort[4].Output=SPort[4].Input;
   579  00F17C  CE98  F000         	movff	_SPort+4,btemp
   580  00F180  010E               	movlb	(_SPort+4) shr (0+8)
   581  00F182  9398               	bcf	(_SPort+4)& (0+255),1,b
   582  00F184  B000               	btfsc	btemp,0,c
   583  00F186  8398               	bsf	(_SPort+4)& (0+255),1,b
   584                           ;port.c: 132: SPort[4].Timer=0;
   585  00F188  EE0E  F098         	lfsr	0,_SPort+4
   586  00F18C  16EF               	andwf	indf0,f,c
   587                           ;port.c: 135: SPort[5].Output=SPort[5].Input;
   588  00F18E  CE99  F000         	movff	_SPort+5,btemp
   589  00F192  010E               	movlb	(_SPort+5) shr (0+8)
   590  00F194  9399               	bcf	(_SPort+5)& (0+255),1,b
   591  00F196  B000               	btfsc	btemp,0,c
   592  00F198  8399               	bsf	(_SPort+5)& (0+255),1,b
   593                           ;port.c: 136: SPort[5].Timer=0;
   594  00F19A  EE0E  F099         	lfsr	0,_SPort+5
   595  00F19E  16EF               	andwf	indf0,f,c
   596                           ;port.c: 139: SPort[6].Output=SPort[6].Input;
   597  00F1A0  CE9A  F000         	movff	_SPort+6,btemp
   598  00F1A4  010E               	movlb	(_SPort+6) shr (0+8)
   599  00F1A6  939A               	bcf	(_SPort+6)& (0+255),1,b
   600  00F1A8  B000               	btfsc	btemp,0,c
   601  00F1AA  839A               	bsf	(_SPort+6)& (0+255),1,b
   602                           ;port.c: 140: SPort[6].Timer=0;
   603  00F1AC  EE0E  F09A         	lfsr	0,_SPort+6
   604  00F1B0  16EF               	andwf	indf0,f,c
   605                           ;port.c: 143: SPort[7].Output=SPort[7].Input;
   606  00F1B2  CE9B  F000         	movff	_SPort+7,btemp
   607  00F1B6  010E               	movlb	(_SPort+7) shr (0+8)
   608  00F1B8  939B               	bcf	(_SPort+7)& (0+255),1,b
   609  00F1BA  B000               	btfsc	btemp,0,c
   610  00F1BC  839B               	bsf	(_SPort+7)& (0+255),1,b
   611                           ;port.c: 144: SPort[7].Timer=0;
   612  00F1BE  EE0E  F09B         	lfsr	0,_SPort+7
   613  00F1C2  16EF               	andwf	indf0,f,c
   614                           ;port.c: 147: SPort[8].Output=SPort[8].Input;
   615  00F1C4  CE9C  F000         	movff	_SPort+8,btemp
   616  00F1C8  010E               	movlb	(_SPort+8) shr (0+8)
   617  00F1CA  939C               	bcf	(_SPort+8)& (0+255),1,b
   618  00F1CC  B000               	btfsc	btemp,0,c
   619  00F1CE  839C               	bsf	(_SPort+8)& (0+255),1,b
   620                           ;port.c: 148: SPort[8].Timer=0;
   621  00F1D0  EE0E  F09C         	lfsr	0,_SPort+8
   622  00F1D4  16EF               	andwf	indf0,f,c
   623                           ;port.c: 151: SPort[9].Output=SPort[9].Input;
   624  00F1D6  CE9D  F000         	movff	_SPort+9,btemp
   625  00F1DA  010E               	movlb	(_SPort+9) shr (0+8)
   626  00F1DC  939D               	bcf	(_SPort+9)& (0+255),1,b
   627  00F1DE  B000               	btfsc	btemp,0,c
   628  00F1E0  839D               	bsf	(_SPort+9)& (0+255),1,b
   629                           ;port.c: 152: SPort[9].Timer=0;
   630  00F1E2  EE0E  F09D         	lfsr	0,_SPort+9
   631  00F1E6  16EF               	andwf	indf0,f,c
   632                           ;port.c: 155: SPort[10].Output=SPort[10].Input;
   633  00F1E8  CE9E  F000         	movff	_SPort+10,btemp
   634  00F1EC  010E               	movlb	(_SPort+10) shr (0+8)
   635  00F1EE  939E               	bcf	(_SPort+10)& (0+255),1,b
   636  00F1F0  B000               	btfsc	btemp,0,c
   637  00F1F2  839E               	bsf	(_SPort+10)& (0+255),1,b
   638                           ;port.c: 156: SPort[10].Timer=0;
   639  00F1F4  EE0E  F09E         	lfsr	0,_SPort+10
   640  00F1F8  16EF               	andwf	indf0,f,c
   641                           ;port.c: 159: SPort[11].Output=SPort[11].Input;
   642  00F1FA  CE9F  F000         	movff	_SPort+11,btemp
   643  00F1FE  010E               	movlb	(_SPort+11) shr (0+8)
   644  00F200  939F               	bcf	(_SPort+11)& (0+255),1,b
   645  00F202  B000               	btfsc	btemp,0,c
   646  00F204  839F               	bsf	(_SPort+11)& (0+255),1,b
   647                           ;port.c: 160: SPort[11].Timer=0;
   648  00F206  EE0E  F09F         	lfsr	0,_SPort+11
   649  00F20A  16EF               	andwf	indf0,f,c
   650                           ;port.c: 163: SPort[12].Output=SPort[12].Input;
   651  00F20C  CEA0  F000         	movff	_SPort+12,btemp
   652  00F210  010E               	movlb	(_SPort+12) shr (0+8)
   653  00F212  93A0               	bcf	(_SPort+12)& (0+255),1,b
   654  00F214  B000               	btfsc	btemp,0,c
   655  00F216  83A0               	bsf	(_SPort+12)& (0+255),1,b
   656                           ;port.c: 164: SPort[12].Timer=0;
   657  00F218  EE0E  F0A0         	lfsr	0,_SPort+12
   658  00F21C  16EF               	andwf	indf0,f,c
   659                           ;port.c: 167: SPort[13].Output=SPort[13].Input;
   660  00F21E  CEA1  F000         	movff	_SPort+13,btemp
   661  00F222  010E               	movlb	(_SPort+13) shr (0+8)
   662  00F224  93A1               	bcf	(_SPort+13)& (0+255),1,b
   663  00F226  B000               	btfsc	btemp,0,c
   664  00F228  83A1               	bsf	(_SPort+13)& (0+255),1,b
   665                           ;port.c: 168: SPort[13].Timer=0;
   666  00F22A  EE0E  F0A1         	lfsr	0,_SPort+13
   667  00F22E  16EF               	andwf	indf0,f,c
   668                           ;port.c: 171: SPort[14].Output=SPort[14].Input;
   669  00F230  CEA2  F000         	movff	_SPort+14,btemp
   670  00F234  010E               	movlb	(_SPort+14) shr (0+8)
   671  00F236  93A2               	bcf	(_SPort+14)& (0+255),1,b
   672  00F238  B000               	btfsc	btemp,0,c
   673  00F23A  83A2               	bsf	(_SPort+14)& (0+255),1,b
   674                           ;port.c: 172: SPort[14].Timer=0;
   675  00F23C  EE0E  F0A2         	lfsr	0,_SPort+14
   676  00F240  16EF               	andwf	indf0,f,c
   677                           ;port.c: 175: SPort[15].Output=SPort[15].Input;
   678  00F242  CEA3  F000         	movff	_SPort+15,btemp
   679  00F246  010E               	movlb	(_SPort+15) shr (0+8)
   680  00F248  93A3               	bcf	(_SPort+15)& (0+255),1,b
   681  00F24A  B000               	btfsc	btemp,0,c
   682  00F24C  83A3               	bsf	(_SPort+15)& (0+255),1,b
   683                           ;port.c: 176: SPort[15].Timer=0;
   684  00F24E  EE0E  F0A3         	lfsr	0,_SPort+15
   685  00F252  16EF               	andwf	indf0,f,c
   686                           ;port.c: 179: SPort[16].Output=SPort[16].Input;
   687  00F254  CEA4  F000         	movff	_SPort+16,btemp
   688  00F258  010E               	movlb	(_SPort+16) shr (0+8)
   689  00F25A  93A4               	bcf	(_SPort+16)& (0+255),1,b
   690  00F25C  B000               	btfsc	btemp,0,c
   691  00F25E  83A4               	bsf	(_SPort+16)& (0+255),1,b
   692                           ;port.c: 180: SPort[16].Timer=0;
   693  00F260  EE0E  F0A4         	lfsr	0,_SPort+16
   694  00F264  16EF               	andwf	indf0,f,c
   695                           ;port.c: 183: SPort[17].Output=SPort[17].Input;
   696  00F266  CEA5  F000         	movff	_SPort+17,btemp
   697  00F26A  010E               	movlb	(_SPort+17) shr (0+8)
   698  00F26C  93A5               	bcf	(_SPort+17)& (0+255),1,b
   699  00F26E  B000               	btfsc	btemp,0,c
   700  00F270  83A5               	bsf	(_SPort+17)& (0+255),1,b
   701                           ;port.c: 184: SPort[17].Timer=0;
   702  00F272  EE0E  F0A5         	lfsr	0,_SPort+17
   703  00F276  16EF               	andwf	indf0,f,c
   704                           ;port.c: 187: SPort[18].Output=SPort[18].Input;
   705  00F278  CEA6  F000         	movff	_SPort+18,btemp
   706  00F27C  010E               	movlb	(_SPort+18) shr (0+8)
   707  00F27E  93A6               	bcf	(_SPort+18)& (0+255),1,b
   708  00F280  B000               	btfsc	btemp,0,c
   709  00F282  83A6               	bsf	(_SPort+18)& (0+255),1,b
   710                           ;port.c: 188: SPort[18].Timer=0;
   711  00F284  EE0E  F0A6         	lfsr	0,_SPort+18
   712  00F288  16EF               	andwf	indf0,f,c
   713                           ;port.c: 191: SPort[19].Output=SPort[19].Input;
   714  00F28A  CEA7  F000         	movff	_SPort+19,btemp
   715  00F28E  010E               	movlb	(_SPort+19) shr (0+8)
   716  00F290  93A7               	bcf	(_SPort+19)& (0+255),1,b
   717  00F292  B000               	btfsc	btemp,0,c
   718  00F294  83A7               	bsf	(_SPort+19)& (0+255),1,b
   719                           ;port.c: 192: SPort[19].Timer=0;
   720  00F296  EE0E  F0A7         	lfsr	0,_SPort+19
   721  00F29A  16EF               	andwf	indf0,f,c
   722                           ;port.c: 195: SPort[20].Output=SPort[20].Input;
   723  00F29C  CEA8  F000         	movff	_SPort+20,btemp
   724  00F2A0  010E               	movlb	(_SPort+20) shr (0+8)
   725  00F2A2  93A8               	bcf	(_SPort+20)& (0+255),1,b
   726  00F2A4  B000               	btfsc	btemp,0,c
   727  00F2A6  83A8               	bsf	(_SPort+20)& (0+255),1,b
   728                           ;port.c: 196: SPort[20].Timer=0;
   729  00F2A8  EE0E  F0A8         	lfsr	0,_SPort+20
   730  00F2AC  16EF               	andwf	indf0,f,c
   731                           ;port.c: 199: SPort[21].Output=SPort[21].Input;
   732  00F2AE  CEA9  F000         	movff	_SPort+21,btemp
   733  00F2B2  010E               	movlb	(_SPort+21) shr (0+8)
   734  00F2B4  93A9               	bcf	(_SPort+21)& (0+255),1,b
   735  00F2B6  B000               	btfsc	btemp,0,c
   736  00F2B8  83A9               	bsf	(_SPort+21)& (0+255),1,b
   737                           ;port.c: 200: SPort[21].Timer=0;
   738  00F2BA  EE0E  F0A9         	lfsr	0,_SPort+21
   739  00F2BE  16EF               	andwf	indf0,f,c
   740                           ;port.c: 203: SPort[22].Output=SPort[22].Input;
   741  00F2C0  CEAA  F000         	movff	_SPort+22,btemp
   742  00F2C4  010E               	movlb	(_SPort+22) shr (0+8)
   743  00F2C6  93AA               	bcf	(_SPort+22)& (0+255),1,b
   744  00F2C8  B000               	btfsc	btemp,0,c
   745  00F2CA  83AA               	bsf	(_SPort+22)& (0+255),1,b
   746                           ;port.c: 204: SPort[22].Timer=0;
   747  00F2CC  EE0E  F0AA         	lfsr	0,_SPort+22
   748  00F2D0  16EF               	andwf	indf0,f,c
   749                           ;port.c: 206: }
   750  00F2D2  0C03               	retlw	3
   751  00F2D4                     __end_of_FrsStan:
   752                           ;port.c: 211: void InitPort(void)
   753                           ;port.c: 212: {
   754  00F2D4                     _InitPort:
   755  000000                     
   756                           ;port.c: 225: PORTA=0b00000000;
   757  00F2D4  6A80               	clrf	3968,c	;volatile
   758                           ;port.c: 226: TRISA=0b11111111;
   759  00F2D6  6892               	setf	3986,c	;volatile
   760                           ;port.c: 227: PORTB=0b00000000;
   761  00F2D8  6A81               	clrf	3969,c	;volatile
   762                           ;port.c: 228: TRISB=0b11111111;
   763  00F2DA  6893               	setf	3987,c	;volatile
   764                           ;port.c: 229: PORTC=0b00000000;
   765  00F2DC  6A82               	clrf	3970,c	;volatile
   766                           ;port.c: 230: TRISC=0b11111001;
   767  00F2DE  0EF9               	movlw	249
   768  00F2E0  6E94               	movwf	3988,c	;volatile
   769                           ;port.c: 231: PORTD=0b00000000;
   770  00F2E2  6A83               	clrf	3971,c	;volatile
   771                           ;port.c: 232: TRISD=0b00110000;
   772  00F2E4  0E30               	movlw	48
   773  00F2E6  6E95               	movwf	3989,c	;volatile
   774                           ;port.c: 233: PORTE=0b00000000;
   775  00F2E8  6A84               	clrf	3972,c	;volatile
   776                           ;port.c: 234: TRISE=(TRISE&0b11111000)|(0b111111
      +                          11&0b00000111);
   777  00F2EA  5096               	movf	3990,w,c	;volatile
   778  00F2EC  0BF8               	andlw	-8
   779  00F2EE  0907               	iorlw	7
   780  00F2F0  6E96               	movwf	3990,c	;volatile
   781                           ;port.c: 237: RefStan();
   782  00F2F2  DE32               	call	_RefStan	;wreg free
   783                           ;port.c: 238: FrsStan();
   784  00F2F4  D71E               	goto	_FrsStan	;wreg free
   785                           ;port.c: 240: }
   786  00F2F6                     __end_of_InitPort:
   787                           ;port.c: 243: void StabPort(void)
   788                           ;port.c: 244: {
   789  00F2F6                     _StabPort:
   790  000000                     
   791                           ;port.c: 245: static unsigned char tim=0;
   792  00F2F6  010E               	movlb	F1474 shr (0+8)
   793  00F2F8  2B93               	incf	F1474& (0+255),f,b
   794  00F2FA  0593               	decf	F1474& (0+255),w,b
   795  00F2FC  6E00               	movwf	btemp,c
   796  00F2FE  0E05               	movlw	5
   797  00F300  5C00               	subwf	btemp,w,c
   798  00F302  A0D8               	btfss	status,0,c
   799  00F304  0012               	return	
   800                           ;port.c: 250: tim=0;
   801  00F306  6B93               	clrf	F1474& (0+255),b
   802                           ;port.c: 253: RefStan();
   803  00F308  DE27               	call	_RefStan	;wreg free
   804                           ;port.c: 256: for(i=0;i<23;i++)
   805  00F30A  6AD9               	clrf	fsr2l,c
   806  00F30C                     l16:
   807                           ;port.c: 257: {
   808  00F30C  50D9               	movf	fsr2l,w,c
   809  00F30E  EE0E  F094         	lfsr	0,_SPort
   810  00F312  26E9               	addwf	fsr0l,f,c
   811  00F314  0E00               	movlw	0
   812  00F316  22EA               	addwfc	fsr0h,f,c
   813  00F318  30EF               	rrcf	indf0,w,c
   814  00F31A  6E00               	movwf	btemp,c
   815  00F31C  3000               	rrcf	btemp,w,c
   816  00F31E  0B3F               	andlw	63
   817  00F320  E114               	bnz	l19
   818                           ;port.c: 259: {
   819  00F322  50D9               	movf	fsr2l,w,c
   820  00F324  EE0E  F094         	lfsr	0,_SPort
   821  00F328  26E9               	addwf	fsr0l,f,c
   822  00F32A  0E00               	movlw	0
   823  00F32C  22EA               	addwfc	fsr0h,f,c
   824  00F32E  50EF               	movf	indf0,w,c
   825  00F330  0B01               	andlw	1
   826  00F332  6E00               	movwf	btemp,c
   827  00F334  50D9               	movf	fsr2l,w,c
   828  00F336  EE0E  F094         	lfsr	0,_SPort
   829  00F33A  26E9               	addwf	fsr0l,f,c
   830  00F33C  0E00               	movlw	0
   831  00F33E  22EA               	addwfc	fsr0h,f,c
   832  00F340  30EF               	rrcf	indf0,w,c
   833  00F342  0B01               	andlw	1
   834  00F344  1800               	xorwf	btemp,w,c
   835  00F346  E073               	bz	l18
   836  00F348  D05F               	goto	l27
   837                           ;port.c: 261: continue;
   838                           ;port.c: 262: else SPort[i].Timer++;
   839                           ;port.c: 263: }
   840  00F34A                     l19:
   841                           ;port.c: 264: else
   842  00F34A  50D9               	movf	fsr2l,w,c
   843  00F34C  EE0E  F094         	lfsr	0,_SPort
   844  00F350  26E9               	addwf	fsr0l,f,c
   845  00F352  0E00               	movlw	0
   846  00F354  22EA               	addwfc	fsr0h,f,c
   847  00F356  50EF               	movf	indf0,w,c
   848  00F358  6E00               	movwf	btemp,c
   849  00F35A  50D9               	movf	fsr2l,w,c
   850  00F35C  0D02               	mullw	2
   851  00F35E  50F3               	movf	prodl,w,c
   852  00F360  0F00               	addlw	low _Nastawa
   853  00F362  6EF6               	movwf	tblptrl,c
   854  00F364  50F4               	movf	prodh,w,c
   855  00F366  6EF7               	movwf	tblptrh,c
   856  00F368  0E10               	movlw	high _Nastawa
   857                           ;port.c: 267: else delay=Nastawa[i].Delay2;
   858  00F36A  22F7               	addwfc	tblptrh,f,c
   859  00F36C  A200               	btfss	btemp,1,c
   860  00F36E  D003               	goto	L5
   861  00F370  2AF6               	incf	tblptrl,f,c
   862  00F372  0E00               	movlw	0
   863  00F374  22F7               	addwfc	tblptrh,f,c
   864  00F376                     L5:
   865  00F376  0008               	tblrd		*
   866  00F378  50F5               	movf	tablat,w,c
   867  00F37A  6EE1               	movwf	fsr1l,c
   868                           ;port.c: 269: if(SPort[i].Timer>=delay)
   869  00F37C  50D9               	movf	fsr2l,w,c
   870  00F37E  EE0E  F094         	lfsr	0,_SPort
   871  00F382  26E9               	addwf	fsr0l,f,c
   872  00F384  0E00               	movlw	0
   873  00F386  22EA               	addwfc	fsr0h,f,c
   874  00F388  30EF               	rrcf	indf0,w,c
   875  00F38A  6E00               	movwf	btemp,c
   876  00F38C  3000               	rrcf	btemp,w,c
   877  00F38E  0B3F               	andlw	63
   878  00F390  6E00               	movwf	btemp,c
   879  00F392  50E1               	movf	fsr1l,w,c
   880  00F394  5C00               	subwf	btemp,w,c
   881  00F396  E31C               	bnc	l25
   882                           ;port.c: 270: {
   883  00F398  50D9               	movf	fsr2l,w,c
   884  00F39A  EE0E  F094         	lfsr	0,_SPort
   885  00F39E  26E9               	addwf	fsr0l,f,c
   886  00F3A0  0E00               	movlw	0
   887  00F3A2  22EA               	addwfc	fsr0h,f,c
   888  00F3A4  0E03               	movlw	-253
   889  00F3A6  16EF               	andwf	indf0,f,c
   890                           ;port.c: 272: SPort[i].Output=SPort[i].Input;
   891  00F3A8  50D9               	movf	fsr2l,w,c
   892  00F3AA  EE0E  F094         	lfsr	0,_SPort
   893  00F3AE  26E9               	addwf	fsr0l,f,c
   894  00F3B0  0E00               	movlw	0
   895  00F3B2  22EA               	addwfc	fsr0h,f,c
   896  00F3B4  50EF               	movf	indf0,w,c
   897  00F3B6  0B01               	andlw	1
   898  00F3B8  6E00               	movwf	btemp,c
   899  00F3BA  50D9               	movf	fsr2l,w,c
   900  00F3BC  EE0E  F094         	lfsr	0,_SPort
   901  00F3C0  26E9               	addwf	fsr0l,f,c
   902  00F3C2  0E00               	movlw	0
   903  00F3C4  22EA               	addwfc	fsr0h,f,c
   904  00F3C6  3600               	rlcf	btemp,f,c
   905  00F3C8  50EF               	movf	indf0,w,c
   906  00F3CA  1800               	xorwf	btemp,w,c
   907  00F3CC  0BFD               	andlw	-3
   908  00F3CE  D02D               	goto	L3
   909                           ;port.c: 273: }
   910  00F3D0                     l25:
   911                           ;port.c: 274: else
   912  00F3D0  50D9               	movf	fsr2l,w,c
   913  00F3D2  EE0E  F094         	lfsr	0,_SPort
   914  00F3D6  26E9               	addwf	fsr0l,f,c
   915  00F3D8  0E00               	movlw	0
   916  00F3DA  22EA               	addwfc	fsr0h,f,c
   917  00F3DC  50EF               	movf	indf0,w,c
   918  00F3DE  0B01               	andlw	1
   919  00F3E0  6E00               	movwf	btemp,c
   920  00F3E2  50D9               	movf	fsr2l,w,c
   921  00F3E4  EE0E  F094         	lfsr	0,_SPort
   922  00F3E8  26E9               	addwf	fsr0l,f,c
   923  00F3EA  0E00               	movlw	0
   924  00F3EC  22EA               	addwfc	fsr0h,f,c
   925  00F3EE  30EF               	rrcf	indf0,w,c
   926  00F3F0  0B01               	andlw	1
   927  00F3F2  1800               	xorwf	btemp,w,c
   928  00F3F4  E109               	bnz	l27
   929                           ;port.c: 277: SPort[i].Timer=0;
   930  00F3F6  50D9               	movf	fsr2l,w,c
   931  00F3F8  EE0E  F094         	lfsr	0,_SPort
   932  00F3FC  26E9               	addwf	fsr0l,f,c
   933  00F3FE  0E00               	movlw	0
   934  00F400  22EA               	addwfc	fsr0h,f,c
   935  00F402  0E03               	movlw	-253
   936  00F404  16EF               	andwf	indf0,f,c
   937  00F406  D013               	goto	l18
   938  00F408                     l27:
   939                           ;port.c: 278: else SPort[i].Timer++;
   940  00F408  50D9               	movf	fsr2l,w,c
   941  00F40A  EE0E  F094         	lfsr	0,_SPort
   942  00F40E  26E9               	addwf	fsr0l,f,c
   943  00F410  0E00               	movlw	0
   944  00F412  22EA               	addwfc	fsr0h,f,c
   945  00F414  30EF               	rrcf	indf0,w,c
   946  00F416  6E00               	movwf	btemp,c
   947  00F418  3000               	rrcf	btemp,w,c
   948  00F41A  0B3F               	andlw	63
   949  00F41C  6E00               	movwf	btemp,c
   950  00F41E  2A00               	incf	btemp,f,c
   951  00F420  3600               	rlcf	btemp,f,c
   952  00F422  3600               	rlcf	btemp,f,c
   953  00F424  50EF               	movf	indf0,w,c
   954  00F426  1800               	xorwf	btemp,w,c
   955  00F428  0B03               	andlw	-253
   956  00F42A                     L3:
   957  00F42A  1800               	xorwf	btemp,w,c
   958  00F42C  6EEF               	movwf	indf0,c
   959  00F42E                     l18:
   960  00F42E  2AD9               	incf	fsr2l,f,c
   961  00F430  0E16               	movlw	22
   962  00F432  64D9               	cpfsgt	fsr2l,c
   963  00F434  D76B               	goto	l16
   964  00F436  0C16               	retlw	22
   965                           ;port.c: 279: }
   966  00F438                     __end_of_StabPort:
   967                           ;port.c: 285: bit RdPrt(const unsigned char Inde
      +                          x)
   968                           ;port.c: 286: {
   969  00F438                     _RdPrt:
   970  000000                     
   971                           ; _Index loaded to fsr2l
   972  00F438  6ED9               	movwf	fsr2l,c
   973                           ;port.c: 287: if (Index>23-1) asm("RESET");
   974  00F43A  0E16               	movlw	22
   975  00F43C  64D9               	cpfsgt	fsr2l,c
   976  00F43E  D001               	goto	l30
   977  00F440  00FF               	reset		;#
   978  00F442                     l30:
   979                           ;port.c: 288: return SPort[Index].Output;
   980  00F442  50D9               	movf	fsr2l,w,c
   981  00F444  EE0E  F094         	lfsr	0,_SPort
   982  00F448  26E9               	addwf	fsr0l,f,c
   983  00F44A  0E00               	movlw	0
   984  00F44C  22EA               	addwfc	fsr0h,f,c
   985  00F44E  30EF               	rrcf	indf0,w,c
   986  00F450  0B01               	andlw	1
   987  00F452  6E00               	movwf	btemp,c
   988  00F454  3000               	rrcf	btemp,w,c
   989  00F456  0012               	return	
   990                           ;port.c: 289: }
   991  00F458                     __end_of_RdPrt:
   992                           ;       param _nw assigned to ?_SetPrt+0
   993  000000                     _SetPrt$nw	set	?_SetPrt
   994                           ;port.c: 292: void SetPrt(const unsigned char In
      +                          dex, const unsigned char nw)
   995                           ;port.c: 293: {
   996  00F458  00AD               	dw	?_SetPrt
   997  00F45A                     _SetPrt:
   998  000000                     
   999                           ; _Index loaded to fsr2l
  1000  00F45A  6ED9               	movwf	fsr2l,c
  1001                           ;port.c: 294: if (Index>23-1) asm("RESET");
  1002  00F45C  0E16               	movlw	22
  1003  00F45E  64D9               	cpfsgt	fsr2l,c
  1004  00F460  D001               	goto	l32
  1005  00F462  00FF               	reset		;#
  1006  00F464                     l32:
  1007                           ;port.c: 295: SPort[Index].Output=((!nw)?0:1);
  1008  00F464  0E00               	movlw	0
  1009  00F466  6A00               	clrf	btemp,c
  1010  00F468  0100               	movlb	__Lparam shr (0+8)
  1011  00F46A  63AD               	cpfseq	?_SetPrt^(__Lparam& (0+65280)),b
  1012  00F46C  2A00               	incf	btemp,f,c
  1013  00F46E  50D9               	movf	fsr2l,w,c
  1014  00F470  EE0E  F094         	lfsr	0,_SPort
  1015  00F474  26E9               	addwf	fsr0l,f,c
  1016  00F476  0E00               	movlw	0
  1017  00F478  22EA               	addwfc	fsr0h,f,c
  1018  00F47A  3600               	rlcf	btemp,f,c
  1019  00F47C  50EF               	movf	indf0,w,c
  1020  00F47E  1800               	xorwf	btemp,w,c
  1021  00F480  0BFD               	andlw	-3
  1022  00F482  1800               	xorwf	btemp,w,c
  1023  00F484  6EEF               	movwf	indf0,c
  1024                           ;port.c: 296: SPort[Index].Timer=0;
  1025  00F486  50D9               	movf	fsr2l,w,c
  1026  00F488  EE0E  F094         	lfsr	0,_SPort
  1027  00F48C  26E9               	addwf	fsr0l,f,c
  1028  00F48E  0E00               	movlw	0
  1029  00F490  22EA               	addwfc	fsr0h,f,c
  1030  00F492  0E03               	movlw	-253
  1031  00F494  16EF               	andwf	indf0,f,c
  1032                           ;port.c: 297: }
  1033  00F496  0C03               	retlw	3
  1034  00F498                     __end_of_SetPrt:
  1035                           ;port.c: 300: void RefPrt(const unsigned char In
      +                          dex)
  1036                           ;port.c: 301: {
  1037  00F498                     _RefPrt:
  1038  000000                     
  1039                           ; _Index loaded to fsr2l
  1040  00F498  6ED9               	movwf	fsr2l,c
  1041                           ;port.c: 302: if (Index>23-1) asm("RESET");
  1042  00F49A  0E16               	movlw	22
  1043  00F49C  64D9               	cpfsgt	fsr2l,c
  1044  00F49E  D001               	goto	l34
  1045  00F4A0  00FF               	reset		;#
  1046  00F4A2                     l34:
  1047                           ;port.c: 303: SPort[Index].Output=SPort[Index].I
      +                          nput;
  1048  00F4A2  50D9               	movf	fsr2l,w,c
  1049  00F4A4  EE0E  F094         	lfsr	0,_SPort
  1050  00F4A8  26E9               	addwf	fsr0l,f,c
  1051  00F4AA  0E00               	movlw	0
  1052  00F4AC  22EA               	addwfc	fsr0h,f,c
  1053  00F4AE  50EF               	movf	indf0,w,c
  1054  00F4B0  0B01               	andlw	1
  1055  00F4B2  6E00               	movwf	btemp,c
  1056  00F4B4  50D9               	movf	fsr2l,w,c
  1057  00F4B6  EE0E  F094         	lfsr	0,_SPort
  1058  00F4BA  26E9               	addwf	fsr0l,f,c
  1059  00F4BC  0E00               	movlw	0
  1060  00F4BE  22EA               	addwfc	fsr0h,f,c
  1061  00F4C0  3600               	rlcf	btemp,f,c
  1062  00F4C2  50EF               	movf	indf0,w,c
  1063  00F4C4  1800               	xorwf	btemp,w,c
  1064  00F4C6  0BFD               	andlw	-3
  1065  00F4C8  1800               	xorwf	btemp,w,c
  1066  00F4CA  6EEF               	movwf	indf0,c
  1067                           ;port.c: 304: SPort[Index].Timer=0;
  1068  00F4CC  50D9               	movf	fsr2l,w,c
  1069  00F4CE  EE0E  F094         	lfsr	0,_SPort
  1070  00F4D2  26E9               	addwf	fsr0l,f,c
  1071  00F4D4  0E00               	movlw	0
  1072  00F4D6  22EA               	addwfc	fsr0h,f,c
  1073  00F4D8  0E03               	movlw	-253
  1074  00F4DA  16EF               	andwf	indf0,f,c
  1075                           ;port.c: 305: }
  1076  00F4DC  0C03               	retlw	3
  1077  00F4DE                     __end_of_RefPrt:
  1078  000000                     
  1079  000000                     
  1080  000000                     
  1081  000000                     
  1082  000000                     
  1083  000000                     
  1084  000000                     
  1085  000000                     
  1086  000000                     
  1087  000000                     
  1088  000000                     
  1089  000000                     
  1090  000000                     
  1091  000000                     
  1092  000000                     
  1093  000000                     
  1094  000000                     
  1095  000000                     
  1096  000000                     
  1097  000000                     
  1098  000000                     
  1099  000000                     
  1100  000000                     
  1101  000000                     
  1102  000000                     
  1103  000000                     
  1104  000000                     
  1105  000000                     
  1106  000000                     
  1107  000000                     
  1108  000000                     
  1109  000000                     
  1110  000000                     
  1111  000000                     
  1112  000000                     
  1113  000000                     
  1114  000000                     
  1115  000000                     
  1116  000000                     
  1117  000000                     
  1118  000000                     
  1119  000000                     
  1120  000000                     
  1121  000000                     
  1122  000000                     
  1123  000000                     
  1124  000000                     
  1125  000000                     
  1126  000000                     
  1127  000000                     
  1128  000000                     
  1129  000000                     
  1130  000000                     
  1131  000000                     
  1132  000000                     
  1133  000000                     
  1134  000000                     
  1135  000000                     
  1136  000000                     
  1137  000000                     
  1138  000000                     
  1139  000000                     
  1140  000000                     
  1141  000000                     
  1142  000000                     
  1143  000000                     
  1144  000000                     
  1145  000000                     
  1146  000000                     
  1147  000000                     
  1148  000000                     
  1149  000000                     
  1150  000000                     
  1151  000000                     
  1152  000000                     
  1153  000000                     
  1154  000000                     
  1155  000000                     
  1156  000000                     
  1157  000000                     
  1158  000000                     
  1159  000000                     
  1160  000000                     
  1161  000000                     
  1162  000000                     
  1163  000000                     
  1164  000000                     
  1165  000000                     
  1166  000000                     
  1167  000000                     
  1168  000000                     
  1169  000000                     
  1170  000000                     
  1171  000000                     
  1172  000000                     
  1173  000000                     
  1174  000000                     
  1175  000000                     
  1176  000000                     
  1177  000000                     
  1178  000000                     
  1179  000000                     
  1180  000000                     
  1181  000000                     
  1182  000000                     
  1183  000000                     
  1184  000000                     
  1185  000000                     
  1186  000000                     
  1187  000000                     
  1188  000000                     
  1189  000000                     
  1190  000000                     
  1191  000000                     
  1192  000000                     
  1193  000000                     
  1194  000000                     
  1195  000000                     
  1196  000000                     
  1197  000000                     
  1198  000000                     
  1199  000000                     
  1200  000000                     
  1201  000000                     
  1202  000000                     
  1203  000000                     
  1204  000000                     
  1205  000000                     
  1206  000000                     
  1207  000000                     
  1208  000000                     
  1209  000000                     
  1210  000000                     
  1211  000000                     
  1212  000000                     
  1213  000000                     
  1214  000000                     
  1215  000000                     
  1216  000000                     
  1217  000000                     
  1218  000000                     
  1219  000000                     
  1220  000000                     
  1221  000000                     
  1222  000000                     
  1223  000000                     
  1224  000000                     
  1225  000000                     
  1226  000000                     
  1227  000000                     
  1228  000000                     
  1229  000000                     
  1230  000000                     
  1231  000000                     
  1232  000000                     
  1233  000000                     
  1234  000000                     
  1235  000000                     
  1236  000000                     
  1237  000000                     
  1238  000000                     
  1239  000000                     
  1240  000000                     
  1241  000000                     
  1242  000000                     
  1243  000000                     
  1244  000000                     
  1245  000000                     
  1246  000000                     
  1247  000000                     
  1248  000000                     
  1249  000000                     
  1250  000000                     
  1251  000000                     
  1252  000000                     
  1253  000000                     
  1254  000000                     
  1255  000000                     
  1256  000000                     
  1257  000000                     
  1258  000000                     
  1259  000000                     
  1260  000000                     
  1261  000000                     
  1262  000000                     
  1263  000000                     
  1264  000000                     
  1265  000000                     
  1266  000000                     
  1267  000000                     
  1268  000000                     
  1269  000000                     
  1270  000000                     
  1271  000000                     
  1272  000000                     
  1273  000000                     
  1274  000000                     
  1275  000000                     
  1276  000000                     
  1277  000000                     
  1278  000000                     
  1279  000000                     
  1280  000000                     
  1281  000000                     
  1282  000000                     
  1283  000000                     
  1284  000000                     
  1285  000000                     
  1286  000000                     
  1287  000000                     
  1288  000000                     
  1289  000000                     
  1290  000000                     
  1291  000000                     
  1292  000000                     
  1293  000000                     
  1294  000000                     
  1295  000000                     
  1296  000000                     
  1297  000000                     
  1298  000000                     
  1299  000000                     
  1300  000000                     
  1301  000000                     
  1302  000000                     
  1303  000000                     
  1304  000000                     
  1305  000000                     
  1306  000000                     
  1307  000000                     
  1308  000000                     
  1309  000000                     
  1310  000000                     
  1311  000000                     
  1312  000000                     
  1313  000000                     
  1314  000000                     
  1315  000000                     
  1316  000000                     
  1317  000000                     
  1318  000000                     
  1319  000000                     
  1320  000000                     
  1321  000000                     
  1322  000000                     
  1323  000000                     
  1324  000000                     
  1325  000000                     
  1326  000000                     
  1327  000000                     
  1328  000000                     
  1329  000000                     
  1330  000000                     
  1331  000000                     
  1332  000000                     
  1333  000000                     
  1334  000000                     
  1335  000000                     
  1336  000000                     
  1337  000000                     
  1338  000000                     
  1339  000000                     
  1340  000000                     
  1341  000000                     
  1342  000000                     
  1343  000000                     
  1344  000000                     
  1345  000000                     
  1346  000000                     
  1347  000000                     
  1348  000000                     
  1349  000000                     
  1350  000000                     
  1351  000000                     
  1352  000000                     
  1353  000000                     
  1354  000000                     
  1355  000000                     
  1356  000000                     
  1357  000000                     
  1358  000000                     
  1359  000000                     
  1360  000000                     
  1361  000000                     
  1362  000000                     
  1363  000000                     
  1364  000000                     
  1365  000000                     
  1366  000000                     
  1367  000000                     
  1368  000000                     
  1369  000000                     
  1370  000000                     
  1371  000000                     
  1372  000000                     
  1373  000000                     
  1374  000000                     
  1375  000000                     
  1376  000000                     
  1377  000000                     
  1378  000000                     
  1379  000000                     
  1380  000000                     
  1381  000000                     
  1382  000000                     
  1383  000000                     
  1384  000000                     
  1385  000000                     
  1386  000000                     
  1387  000000                     
  1388  000000                     
  1389  000000                     
  1390  000000                     
  1391  000000                     
  1392  000000                     
  1393  000000                     
  1394  000000                     
  1395  000000                     
  1396  000000                     
  1397  000000                     
  1398  000000                     
  1399  000000                     
  1400  000000                     
  1401  000000                     
  1402  000000                     
  1403  000000                     
  1404  000000                     
  1405  000000                     
  1406  000000                     
  1407  000000                     
  1408  000000                     
  1409  000000                     
  1410  000000                     
  1411  000000                     
  1412  000000                     
  1413  000000                     
  1414  000000                     
  1415  000000                     
  1416  000000                     
  1417  000000                     
  1418  000000                     
  1419  000000                     
  1420  000000                     
  1421  000000                     
  1422  000000                     
  1423  000000                     
  1424  000000                     
  1425  000000                     
  1426  000000                     
  1427  000000                     
  1428  000000                     
  1429  000000                     
  1430  000000                     
  1431  000000                     
  1432  000000                     
  1433  000000                     
  1434  000000                     
  1435  000000                     
  1436  000000                     
  1437  000000                     
  1438  000000                     
  1439  000000                     
  1440  000000                     
  1441  000000                     
  1442  000000                     
  1443  000000                     
  1444  000000                     
  1445  000000                     
  1446  000000                     
  1447  000000                     
  1448  000000                     
  1449  000000                     
  1450  000000                     
  1451  000000                     
  1452  000000                     
  1453  000000                     
  1454  000000                     
  1455  000000                     
  1456  000000                     
  1457  000000                     
  1458  000000                     
  1459  000000                     
  1460  000000                     
  1461  000000                     
  1462  000000                     
  1463  000000                     
  1464  000000                     
  1465  000000                     
  1466  000000                     
  1467  000000                     
  1468  000000                     
  1469  000000                     
  1470  000000                     
  1471  000000                     
  1472  000000                     
  1473  000000                     
  1474  000000                     
  1475  000000                     
  1476  000000                     
  1477  000000                     
  1478  000000                     
  1479  000000                     
  1480  000000                     
  1481  000000                     
  1482  000000                     
  1483  000000                     
  1484  000000                     
  1485  000000                     
  1486  000000                     
  1487  000000                     
  1488  000000                     
  1489  000000                     
  1490  000000                     
  1491  000000                     
  1492  000000                     
  1493  000000                     
  1494  000000                     
  1495  000000                     
  1496  000000                     
  1497  000000                     
  1498  000000                     
  1499  000000                     
  1500  000000                     
  1501  000000                     
  1502  000000                     
  1503  000000                     
  1504  000000                     
  1505  000000                     
  1506  000000                     
  1507  000000                     
  1508  000000                     
  1509  000000                     
  1510  000000                     
  1511  000000                     
  1512  000000                     
  1513  000000                     
  1514                           
  1515                           	psect	bigbss
  1516  000E93                     F1474:
  1517  000E93                     	ds	1
  1518  000000                     
  1519  000000                     
  1520  000000                     
  1521  000000                     
  1522  000000                     
  1523  000000                     
  1524  000000                     
  1525  000000                     
  1526  000000                     
  1527  000000                     
  1528  000000                     
  1529  000000                     
  1530  000000                     
  1531  000000                     
  1532  000000                     
  1533  000000                     
  1534  000000                     
  1535  000000                     
  1536  000000                     
  1537  000000                     
  1538  000000                     
  1539  000000                     
  1540  000000                     
  1541  000000                     
  1542  000000                     
  1543  000000                     
  1544  000000                     
  1545  000000                     
  1546  000000                     
  1547  000000                     
  1548  000000                     
  1549  000000                     
  1550  000000                     
  1551  000000                     
  1552  000000                     
  1553  000000                     
  1554  000000                     
  1555  000000                     
  1556  000000                     
  1557  000000                     
  1558  000000                     
  1559  000000                     
  1560  000000                     
  1561  000000                     
  1562  000000                     
  1563  000000                     
  1564  000000                     
  1565  000000                     
  1566  000000                     
  1567  000000                     
  1568  000000                     
  1569  000000                     
  1570  000000                     
  1571  000000                     
  1572  000000                     
  1573  000000                     
  1574  000000                     
  1575  000000                     
  1576  000000                     
  1577  000000                     
  1578  000000                     
  1579  000000                     
  1580  000000                     
  1581  000000                     
  1582  000000                     
  1583  000000                     
  1584  000000                     
  1585  000000                     
  1586  000000                     
  1587  000000                     
  1588  000000                     
  1589  000000                     
  1590  000000                     
  1591  000000                     
  1592  000000                     
  1593  000000                     
  1594  000000                     
  1595  000000                     
  1596  000000                     
  1597  000000                     
  1598  000000                     
  1599  000000                     
  1600  000000                     
  1601  000000                     
  1602  000000                     
  1603  000000                     
  1604  000000                     
  1605  000000                     
  1606  000000                     
  1607  000000                     
  1608  000000                     
  1609  000000                     
  1610  000000                     
  1611  000000                     
  1612  000000                     
  1613  000000                     
  1614  000000                     
  1615  000000                     
  1616  000000                     
  1617  000000                     
  1618  000000                     
  1619  000000                     
  1620  000000                     
  1621  000000                     
  1622  000000                     
  1623  000000                     
  1624  000000                     
  1625  000000                     
  1626  000000                     
  1627  000000                     
  1628  000000                     
  1629  000000                     
  1630  000000                     
  1631  000000                     
  1632  000000                     
  1633  000000                     
  1634  000000                     
  1635  000000                     
  1636  000000                     
  1637  000000                     
  1638  000000                     
  1639  000000                     
  1640  000000                     
  1641  000000                     
  1642  000000                     
  1643  000000                     
  1644  000000                     
  1645  000000                     
  1646  000000                     
  1647  000000                     
  1648  000000                     
  1649  000000                     
  1650  000E93                     _SPort:
  1651  000E93                     	ds	23
  1652                           
  1653                           	psect	temp
  1654  000000                     btemp:
  1655  000000                     	ds	1
  1656                           tblptrh	equ	0xFF7
  1657                           tblptrl	equ	0xFF6
  1658                           tablat	equ	0xFF5
  1659                           prodh	equ	0xFF4
  1660                           prodl	equ	0xFF3
  1661                           indf0	equ	0xFEF
  1662                           fsr0h	equ	0xFEA
  1663                           fsr0l	equ	0xFE9
  1664                           fsr1l	equ	0xFE1
  1665                           fsr2l	equ	0xFD9
  1666                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Mon Sep 14 17:33:11 2020

               _M 0306          _StabPort F2F6                l30 F442  
              l32 F464                l16 F30C                l25 F3D0  
              l34 F4A2                l18 F42E                l27 F408  
              l19 F34A                u40 EF6E                u50 EF70  
              u80 EF88                u90 EF8A               u300 F05E  
             u150 F020               u151 F01C               u160 F022  
             u330 F07C               u250 F04C               u331 F078  
             u340 F07E               u281 F058               u290 F05C  
            F1474 0E93              _DtCO 007D              _DtCS 005F  
            _DtCW 006E              _DtZW 0063              fsr0h 000FEA  
            indf0 000FEF              fsr0l 000FE9              fsr1l 000FE1  
            fsr2l 000FD9              btemp 0000              prodh 000FF4  
            prodl 000FF3   __end_of_FrsStan F2D4   __end_of_RefStan F132  
         ?_SetPrt 00AD     __end_of_RdPrt F458             _SPort 0E94  
           _RdPrt F438        used_btemp0 0001             tablat 000FF5  
           status 000FD8  __end_of_InitPort F2F6           _FrsStan F132  
         _RefStan EF58           _Nastawa 1000           __Lparam 00A4  
__end_of_StabPort F438           __ramtop 1000    __end_of_RefPrt F4DE  
  __end_of_SetPrt F498            _RefPrt F498            _SetPrt F45A  
          tblptrh 000FF7            tblptrl 000FF6          _InitPort F2D4  
