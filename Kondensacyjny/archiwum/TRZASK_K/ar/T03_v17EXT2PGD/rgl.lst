

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Thu Jul 28 10:43:10 2016


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     5                           	psect	const,global,class=CODE,delta=1
     6                           	psect	bss,global,class=RAM,space=1,delta=1
     7                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98                           
    99                           	psect	text
   100                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   101                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   102                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   103                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   104                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   105                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   106                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   107                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   108                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   109                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   110                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   111                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   112                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   113                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   114                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   115                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   116                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   117                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   118                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   119                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   120                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   121                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   122                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   123                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   124                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   125                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   126                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   127                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   128                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   129                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   130                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   131                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   132                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   133                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   134                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   135                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   136                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   137                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   138                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   139                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   140                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   141                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   142                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   143                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   144                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   145                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   146                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   147                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   148                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   149                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   150                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   151                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   152                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   153                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   154                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   155                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   156                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   157                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   158                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   159                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   160                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   161                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   162                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   163                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   164                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   165                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   166                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   167                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   168                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   169                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   170                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   171                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   172                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   173                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   174                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   175                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   176                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   177                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   178                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   179                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   180                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   181                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   182                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   183                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   184                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   185                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   186                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   187                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   188                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   189                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   190                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   191                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   192                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   193                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   194                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   195                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   196                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   197                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   198                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   199                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   200  0037EE                     _Moduluj:
   201                           ;	_pv assigned to ?a_ProcToMod+1
   202  000000                     _ProcToMod$pv	set	?a_ProcToMod+1
   203                           ;	_prvnt assigned to ?a_ProcToMod+0
   204  000000                     _ProcToMod$prvnt	set	?a_ProcToMod
   205                           ;	_v assigned to ?a_NewPop_SMOD+5
   206  000000                     _NewPop_SMOD$v	set	?a_NewPop_SMOD+5
   207                           ;	_pv assigned to ?a_NewPop_SMOD+3
   208  000000                     _NewPop_SMOD$pv	set	?a_NewPop_SMOD+3
   209                           ;	_ppv assigned to ?a_NewPop_SMOD+2
   210  000000                     _NewPop_SMOD$ppv	set	?a_NewPop_SMOD+2
   211                           ;	_mrg assigned to ?a_NewPop_SMOD+1
   212  000000                     _NewPop_SMOD$mrg	set	?a_NewPop_SMOD+1
   213                           ;	_pw assigned to ?a_NewPop_SMOD+0
   214  000000                     _NewPop_SMOD$pw	set	?a_NewPop_SMOD
   215                           ;	_pw assigned to ?a_New_SMOD+1
   216  000000                     _New_SMOD$pw	set	?a_New_SMOD+1
   217                           ;	_pv assigned to ?a_New_SMOD+0
   218  000000                     _New_SMOD$pv	set	?a_New_SMOD
   219                           ;	_v assigned to ?a_NewPop_MAX_CO+3
   220  000000                     _NewPop_MAX_CO$v	set	?a_NewPop_MAX_CO+3
   221                           ;	_pv assigned to ?a_NewPop_MAX_CO+1
   222  000000                     _NewPop_MAX_CO$pv	set	?a_NewPop_MAX_CO+1
   223                           ;	_ppv assigned to ?a_NewPop_MAX_CO+0
   224  000000                     _NewPop_MAX_CO$ppv	set	?a_NewPop_MAX_CO
   225                           ;	_v assigned to ?a_NewPop_MAX_CW+3
   226  000000                     _NewPop_MAX_CW$v	set	?a_NewPop_MAX_CW+3
   227                           ;	_pv assigned to ?a_NewPop_MAX_CW+1
   228  000000                     _NewPop_MAX_CW$pv	set	?a_NewPop_MAX_CW+1
   229                           ;	_ppv assigned to ?a_NewPop_MAX_CW+0
   230  000000                     _NewPop_MAX_CW$ppv	set	?a_NewPop_MAX_CW
   231                           ;	_v assigned to ?a_NewPop_MIN+2
   232  000000                     _NewPop_MIN$v	set	?a_NewPop_MIN+2
   233                           ;	_pv assigned to ?a_NewPop_MIN+0
   234  000000                     _NewPop_MIN$pv	set	?a_NewPop_MIN
   235                           ;	_k assigned to ?a_ModPruCW2+0
   236  000000                     _ModPruCW2$k	set	?a_ModPruCW2
   237                           ;	_m assigned to ?a_ModDkCW2+0
   238  000000                     _ModDkCW2$m	set	?a_ModDkCW2
   239                           ;	_m assigned to ?a_ModZgCW2+0
   240  000000                     _ModZgCW2$m	set	?a_ModZgCW2
   241                           ;	_ada2 assigned to ?a_SetStab+0
   242  000000                     _SetStab$ada2	set	?a_SetStab
   243                           ;       param _res assigned to ?_SetStab+1
   244  000000                     _SetStab$res	set	?_SetStab+1
   245                           ;       param _k assigned to ?_SetStab+0
   246  000000                     _SetStab$k	set	?_SetStab
   247                           ;	_k assigned to ?a_ModPruCO+0
   248  000000                     _ModPruCO$k	set	?a_ModPruCO
   249                           ;	_m assigned to ?a_ModDkCO+2
   250  000000                     _ModDkCO$m	set	?a_ModDkCO+2
   251                           ;	_k assigned to ?a_ModDkCO+1
   252  000000                     _ModDkCO$k	set	?a_ModDkCO+1
   253                           ;	_ada assigned to ?a_ModDkCO+0
   254  000000                     _ModDkCO$ada	set	?a_ModDkCO
   255                           ;	_m assigned to ?a_ModZgCO+0
   256  000000                     _ModZgCO$m	set	?a_ModZgCO
   257                           ;	_m assigned to ?a_FirstXMOD+1
   258  000000                     _FirstXMOD$m	set	?a_FirstXMOD+1
   259  000000                     
   260                           ;rgl.c: 29: unsigned int wpw;
   261  0037EE  D107               	goto	l16
   262  0037F0                     l17:
   263                           ;rgl.c: 33: {
   264                           ;rgl.c: 35: {
   265  0037F0  0103               	movlb	_M shr (0+8)
   266  0037F2  AB06               	btfss	_M& (0+255),5,b
   267  0037F4  D02E               	goto	l18
   268                           ;rgl.c: 37: {
   269  0037F6  0E0C               	movlw	12
   270  0037F8  ECC9  F063         	call	_RTdS
   271  0037FC  6E00               	movwf	btemp,c
   272  0037FE  0E02               	movlw	2
   273  003800  5C00               	subwf	btemp,w,c
   274  003802  E307               	bnc	l19
   275                           ;rgl.c: 40: {
   276  003804  0E0C               	movlw	12
   277  003806  ECB7  F063         	call	_StartRTdS
   278                           ;rgl.c: 42: NewPop_MIN();
   279  00380A  EC57  F02A         	call	_NewPop_MIN	;wreg free
   280                           ;rgl.c: 43: NewPop_MAX_CO();
   281  00380E  ECA1  F02B         	call	_NewPop_MAX_CO	;wreg free
   282  003812                     l19:
   283                           ;rgl.c: 44: }
   284  003812  EC48  F02C         	call	_New_MIN	;wreg free
   285                           ;rgl.c: 46: New_MAX_CO();
   286  003816  ECB8  F02C         	call	_New_MAX_CO	;wreg free
   287                           ;rgl.c: 48: StartCO2();
   288  00381A  D8FA               	call	_StartCO2	;wreg free
   289                           ;rgl.c: 49: ReadDataCO2();
   290  00381C  EC34  F026         	call	_ReadDataCO2	;wreg free
   291                           ;rgl.c: 50: ModToCO2();
   292  003820  EC17  F026         	call	_ModToCO2	;wreg free
   293                           ;rgl.c: 51: ModZgCO();
   294  003824  DB8C               	call	_ModZgCO	;wreg free
   295                           ;rgl.c: 52: ModDkCO();
   296  003826  EC92  F020         	call	_ModDkCO	;wreg free
   297                           ;rgl.c: 53: if(RTdS(3)>10)
   298  00382A  0E03               	movlw	3
   299  00382C  ECC9  F063         	call	_RTdS
   300  003830  6E00               	movwf	btemp,c
   301  003832  0E0B               	movlw	11
   302  003834  5C00               	subwf	btemp,w,c
   303  003836  E309               	bnc	l20
   304                           ;rgl.c: 54: {
   305  003838  0E03               	movlw	3
   306  00383A  ECB7  F063         	call	_StartRTdS
   307                           ;rgl.c: 56: IncConstCO2();
   308  00383E  EC2C  F026         	call	_IncConstCO2	;wreg free
   309                           ;rgl.c: 57: IncMaxCO();
   310  003842  ECCB  F022         	call	_IncMaxCO	;wreg free
   311                           ;rgl.c: 58: ModPruCO();
   312  003846  ECFA  F020         	call	_ModPruCO	;wreg free
   313  00384A                     l20:
   314                           ;rgl.c: 59: }
   315  00384A  EC50  F023         	call	_ModPrzCO	;wreg free
   316                           ;rgl.c: 62: PropOPT();
   317  00384E  EF0F  F025         	goto	_PropOPT	;wreg free
   318                           ;rgl.c: 63: }
   319  003852                     l18:
   320                           ;rgl.c: 64: else
   321  003852  0103               	movlb	_M shr (0+8)
   322  003854  A906               	btfss	_M& (0+255),4,b
   323  003856  0012               	return	
   324                           ;rgl.c: 66: {
   325  003858  0E0C               	movlw	12
   326  00385A  ECC9  F063         	call	_RTdS
   327  00385E  6E00               	movwf	btemp,c
   328  003860  0E02               	movlw	2
   329  003862  5C00               	subwf	btemp,w,c
   330  003864  E307               	bnc	l23
   331                           ;rgl.c: 69: {
   332  003866  0E0C               	movlw	12
   333  003868  ECB7  F063         	call	_StartRTdS
   334                           ;rgl.c: 71: NewPop_MIN();
   335  00386C  EC57  F02A         	call	_NewPop_MIN	;wreg free
   336                           ;rgl.c: 72: NewPop_MAX_CW();
   337  003870  ECFA  F02A         	call	_NewPop_MAX_CW	;wreg free
   338  003874                     l23:
   339                           ;rgl.c: 73: }
   340  003874  EC48  F02C         	call	_New_MIN	;wreg free
   341                           ;rgl.c: 75: New_MAX_CW();
   342  003878  EC80  F02C         	call	_New_MAX_CW	;wreg free
   343                           ;rgl.c: 77: StartMCW2();
   344  00387C  ECBB  F025         	call	_StartMCW2	;wreg free
   345                           ;rgl.c: 78: ReadDataCW2();
   346  003880  EC39  F026         	call	_ReadDataCW2	;wreg free
   347                           ;rgl.c: 79: ModToCW2();
   348  003884  EC11  F026         	call	_ModToCW2	;wreg free
   349                           ;rgl.c: 80: ModZgCW2();
   350  003888  EC42  F026         	call	_ModZgCW2	;wreg free
   351                           ;rgl.c: 81: ModDkCW2();
   352  00388C  EC43  F027         	call	_ModDkCW2	;wreg free
   353                           ;rgl.c: 83: if(RTdS(3)>10)
   354  003890  0E03               	movlw	3
   355  003892  ECC9  F063         	call	_RTdS
   356  003896  6E00               	movwf	btemp,c
   357  003898  0E0B               	movlw	11
   358  00389A  5C00               	subwf	btemp,w,c
   359  00389C  E309               	bnc	l24
   360                           ;rgl.c: 84: {
   361  00389E  0E03               	movlw	3
   362  0038A0  ECB7  F063         	call	_StartRTdS
   363                           ;rgl.c: 86: IncConstCW2();
   364  0038A4  EC1D  F026         	call	_IncConstCW2	;wreg free
   365                           ;rgl.c: 87: IncMaxCW2();
   366  0038A8  EC55  F029         	call	_IncMaxCW2	;wreg free
   367                           ;rgl.c: 88: ModPruCW2();
   368  0038AC  ECA6  F027         	call	_ModPruCW2	;wreg free
   369  0038B0                     l24:
   370                           ;rgl.c: 89: }
   371  0038B0  EC8D  F029         	call	_ModPrzCW2	;wreg free
   372                           ;rgl.c: 91: PropCO2();
   373  0038B4  EFD6  F029         	goto	_PropCO2	;wreg free
   374                           ;rgl.c: 93: }
   375  0038B8                     l25:
   376                           ;rgl.c: 95: }
   377                           ;rgl.c: 97: {
   378  0038B8  0E0C               	movlw	12
   379  0038BA  ECC9  F063         	call	_RTdS
   380  0038BE  6E00               	movwf	btemp,c
   381  0038C0  0E02               	movlw	2
   382  0038C2  5C00               	subwf	btemp,w,c
   383  0038C4  E310               	bnc	l26
   384                           ;rgl.c: 100: {
   385  0038C6  0E0C               	movlw	12
   386  0038C8  ECB7  F063         	call	_StartRTdS
   387                           ;rgl.c: 102: NewPop_MIN();
   388  0038CC  EC57  F02A         	call	_NewPop_MIN	;wreg free
   389                           ;rgl.c: 103: if(M._pob_CW||M._pob_AL)
   390  0038D0  0103               	movlb	_M shr (0+8)
   391  0038D2  B906               	btfsc	_M& (0+255),4,b
   392  0038D4  D003               	goto	u100
   393  0038D6  0103               	movlb	_M shr (0+8)
   394  0038D8  A706               	btfss	_M& (0+255),3,b
   395  0038DA  D003               	goto	l27
   396  0038DC                     u100:
   397                           ;rgl.c: 104: {
   398  0038DC  ECFA  F02A         	call	_NewPop_MAX_CW	;wreg free
   399                           ;rgl.c: 106: }
   400  0038E0  D002               	goto	l26
   401  0038E2                     l27:
   402                           ;rgl.c: 107: else
   403  0038E2  ECA1  F02B         	call	_NewPop_MAX_CO	;wreg free
   404  0038E6                     l26:
   405                           ;rgl.c: 110: }
   406  0038E6  EC48  F02C         	call	_New_MIN	;wreg free
   407                           ;rgl.c: 113: if(M._pob_CW||M._pob_AL)
   408  0038EA  0103               	movlb	_M shr (0+8)
   409  0038EC  B906               	btfsc	_M& (0+255),4,b
   410  0038EE  D003               	goto	u130
   411  0038F0  0103               	movlb	_M shr (0+8)
   412  0038F2  A706               	btfss	_M& (0+255),3,b
   413  0038F4  D003               	goto	l29
   414  0038F6                     u130:
   415                           ;rgl.c: 114: {
   416  0038F6  EC80  F02C         	call	_New_MAX_CW	;wreg free
   417                           ;rgl.c: 116: }
   418  0038FA  D002               	goto	l30
   419  0038FC                     l29:
   420                           ;rgl.c: 117: else
   421  0038FC  ECB8  F02C         	call	_New_MAX_CO	;wreg free
   422  003900                     l30:
   423                           ;rgl.c: 120: }
   424  003900  D887               	call	_StartCO2	;wreg free
   425                           ;rgl.c: 123: ReadDataCO2();
   426  003902  EC34  F026         	call	_ReadDataCO2	;wreg free
   427                           ;rgl.c: 124: ModToCO2();
   428  003906  EC17  F026         	call	_ModToCO2	;wreg free
   429                           ;rgl.c: 125: ModZgCO();
   430  00390A  DB19               	call	_ModZgCO	;wreg free
   431                           ;rgl.c: 126: ModDkCO();
   432  00390C  EC92  F020         	call	_ModDkCO	;wreg free
   433                           ;rgl.c: 127: if(RTdS(3)>10)
   434  003910  0E03               	movlw	3
   435  003912  ECC9  F063         	call	_RTdS
   436  003916  6E00               	movwf	btemp,c
   437  003918  0E0B               	movlw	11
   438  00391A  5C00               	subwf	btemp,w,c
   439  00391C  E309               	bnc	l31
   440                           ;rgl.c: 128: {
   441  00391E  0E03               	movlw	3
   442  003920  ECB7  F063         	call	_StartRTdS
   443                           ;rgl.c: 130: IncConstCO2();
   444  003924  EC2C  F026         	call	_IncConstCO2	;wreg free
   445                           ;rgl.c: 131: IncMaxCO();
   446  003928  ECCB  F022         	call	_IncMaxCO	;wreg free
   447                           ;rgl.c: 132: ModPruCO();
   448  00392C  ECFA  F020         	call	_ModPruCO	;wreg free
   449  003930                     l31:
   450                           ;rgl.c: 133: }
   451  003930  EC50  F023         	call	_ModPrzCO	;wreg free
   452                           ;rgl.c: 136: PropOPT();
   453  003934  EF0F  F025         	goto	_PropOPT	;wreg free
   454                           ;rgl.c: 137: break;
   455  003938                     l32:
   456                           ;rgl.c: 138: }
   457                           ;rgl.c: 140: {
   458  003938  0103               	movlb	_M shr (0+8)
   459  00393A  AB06               	btfss	_M& (0+255),5,b
   460  00393C  D02D               	goto	l33
   461                           ;rgl.c: 142: {
   462  00393E  0E0C               	movlw	12
   463  003940  ECC9  F063         	call	_RTdS
   464  003944  6E00               	movwf	btemp,c
   465  003946  0E02               	movlw	2
   466  003948  5C00               	subwf	btemp,w,c
   467  00394A  E307               	bnc	l34
   468                           ;rgl.c: 145: {
   469  00394C  0E0C               	movlw	12
   470  00394E  ECB7  F063         	call	_StartRTdS
   471                           ;rgl.c: 147: NewPop_MIN();
   472  003952  EC57  F02A         	call	_NewPop_MIN	;wreg free
   473                           ;rgl.c: 148: NewPop_MAX_CO();
   474  003956  ECA1  F02B         	call	_NewPop_MAX_CO	;wreg free
   475  00395A                     l34:
   476                           ;rgl.c: 149: }
   477  00395A  EC48  F02C         	call	_New_MIN	;wreg free
   478                           ;rgl.c: 151: New_MAX_CO();
   479  00395E  ECB8  F02C         	call	_New_MAX_CO	;wreg free
   480                           ;rgl.c: 153: StartCO2();
   481  003962  D856               	call	_StartCO2	;wreg free
   482                           ;rgl.c: 154: ReadDataCO2();
   483  003964  EC34  F026         	call	_ReadDataCO2	;wreg free
   484                           ;rgl.c: 155: ModToCO2();
   485  003968  EC17  F026         	call	_ModToCO2	;wreg free
   486                           ;rgl.c: 156: ModZgCO();
   487  00396C  DAE8               	call	_ModZgCO	;wreg free
   488                           ;rgl.c: 157: ModDkCO();
   489  00396E  DBDA               	call	_ModDkCO	;wreg free
   490                           ;rgl.c: 158: if(RTdS(3)>10)
   491  003970  0E03               	movlw	3
   492  003972  ECC9  F063         	call	_RTdS
   493  003976  6E00               	movwf	btemp,c
   494  003978  0E0B               	movlw	11
   495  00397A  5C00               	subwf	btemp,w,c
   496  00397C  E309               	bnc	l35
   497                           ;rgl.c: 159: {
   498  00397E  0E03               	movlw	3
   499  003980  ECB7  F063         	call	_StartRTdS
   500                           ;rgl.c: 161: IncConstCO2();
   501  003984  EC2C  F026         	call	_IncConstCO2	;wreg free
   502                           ;rgl.c: 162: IncMaxCO();
   503  003988  ECCB  F022         	call	_IncMaxCO	;wreg free
   504                           ;rgl.c: 163: ModPruCO();
   505  00398C  ECFA  F020         	call	_ModPruCO	;wreg free
   506  003990                     l35:
   507                           ;rgl.c: 164: }
   508  003990  EC50  F023         	call	_ModPrzCO	;wreg free
   509                           ;rgl.c: 166: PropOPT();
   510  003994  EF0F  F025         	goto	_PropOPT	;wreg free
   511                           ;rgl.c: 167: }
   512  003998                     l33:
   513                           ;rgl.c: 168: else
   514  003998  0103               	movlb	_M shr (0+8)
   515  00399A  A906               	btfss	_M& (0+255),4,b
   516  00399C  0012               	return	
   517                           ;rgl.c: 170: {
   518  00399E  0E0C               	movlw	12
   519  0039A0  ECC9  F063         	call	_RTdS
   520  0039A4  6E00               	movwf	btemp,c
   521  0039A6  0E02               	movlw	2
   522  0039A8  5C00               	subwf	btemp,w,c
   523  0039AA  E307               	bnc	l38
   524                           ;rgl.c: 173: {
   525  0039AC  0E0C               	movlw	12
   526  0039AE  ECB7  F063         	call	_StartRTdS
   527                           ;rgl.c: 175: NewPop_MIN();
   528  0039B2  EC57  F02A         	call	_NewPop_MIN	;wreg free
   529                           ;rgl.c: 176: NewPop_MAX_CW();
   530  0039B6  ECFA  F02A         	call	_NewPop_MAX_CW	;wreg free
   531  0039BA                     l38:
   532                           ;rgl.c: 177: }
   533  0039BA  EC48  F02C         	call	_New_MIN	;wreg free
   534                           ;rgl.c: 179: New_MAX_CW();
   535  0039BE  EC80  F02C         	call	_New_MAX_CW	;wreg free
   536                           ;rgl.c: 181: StartMCW2();
   537  0039C2  ECBB  F025         	call	_StartMCW2	;wreg free
   538                           ;rgl.c: 182: ReadDataCW2();
   539  0039C6  EC39  F026         	call	_ReadDataCW2	;wreg free
   540                           ;rgl.c: 183: ModToCW2();
   541  0039CA  EC11  F026         	call	_ModToCW2	;wreg free
   542                           ;rgl.c: 184: ModZgCW2();
   543  0039CE  EC42  F026         	call	_ModZgCW2	;wreg free
   544                           ;rgl.c: 185: ModDkCW2();
   545  0039D2  EC43  F027         	call	_ModDkCW2	;wreg free
   546                           ;rgl.c: 187: if(RTdS(3)>10)
   547  0039D6  0E03               	movlw	3
   548  0039D8  ECC9  F063         	call	_RTdS
   549  0039DC  6E00               	movwf	btemp,c
   550  0039DE  0E0B               	movlw	11
   551  0039E0  5C00               	subwf	btemp,w,c
   552  0039E2  E309               	bnc	l39
   553                           ;rgl.c: 188: {
   554  0039E4  0E03               	movlw	3
   555  0039E6  ECB7  F063         	call	_StartRTdS
   556                           ;rgl.c: 190: IncConstCW2();
   557  0039EA  EC1D  F026         	call	_IncConstCW2	;wreg free
   558                           ;rgl.c: 191: IncMaxCW2();
   559  0039EE  EC55  F029         	call	_IncMaxCW2	;wreg free
   560                           ;rgl.c: 192: ModPruCW2();
   561  0039F2  ECA6  F027         	call	_ModPruCW2	;wreg free
   562  0039F6                     l39:
   563                           ;rgl.c: 193: }
   564  0039F6  EC8D  F029         	call	_ModPrzCW2	;wreg free
   565                           ;rgl.c: 195: PropCO2();
   566  0039FA  EFD6  F029         	goto	_PropCO2	;wreg free
   567                           ;rgl.c: 197: }
   568  0039FE                     l16:
   569  0039FE  C1C2  FFE8         	movff	_DtKNF+14,wreg
   570  003A02  0A00               	xorlw	0
   571  003A04  E101 D758          	bz	l25
   572  003A08  0A03               	xorlw	3
   573  003A0A  E101 D6F1          	bz	l17
   574  003A0E  D794               	goto	l32
   575                           ;rgl.c: 201: }
   576  003A10                     __end_of_Moduluj:
   577                           ;rgl.c: 261: unsigned char FirstXMOD(void);
   578                           ;rgl.c: 262: void StartCO2(void)
   579                           ;rgl.c: 263: {
   580  003A10                     _StartCO2:
   581  000000                     
   582                           ;rgl.c: 264: if(rgl.btco||rgl.btcw) return;
   583  003A10  0101               	movlb	_rgl shr (0+8)
   584  003A12  A1F3               	btfss	_rgl& (0+255),0,b
   585  003A14  B3F3               	btfsc	_rgl& (0+255),1,b
   586  003A16  0012               	return	
   587                           ;rgl.c: 265: StartRTdS(3);
   588  003A18  0E03               	movlw	3
   589  003A1A  ECB7  F063         	call	_StartRTdS
   590                           ;rgl.c: 266: popMIN=0;
   591  003A1E  010E               	movlb	_popMIN shr (0+8)
   592  003A20  6BE8               	clrf	_popMIN& (0+255),b
   593                           ;rgl.c: 267: popMAXCO=0;
   594  003A22  010E               	movlb	_popMAXCO shr (0+8)
   595  003A24  6BE6               	clrf	_popMAXCO& (0+255),b
   596                           ;rgl.c: 268: DtCO.dDCO=0;
   597  003A26  0100               	movlb	(_DtCO+10) shr (0+8)
   598  003A28  6B89               	clrf	(_DtCO+10)& (0+255),b
   599                           ;rgl.c: 269: DtCW.dDCW=0;
   600  003A2A  0100               	movlb	(_DtCW+8) shr (0+8)
   601  003A2C  6B78               	clrf	(_DtCW+8)& (0+255),b
   602                           ;rgl.c: 270: DtCO.ddDCO=0;
   603  003A2E  0100               	movlb	(_DtCO+11) shr (0+8)
   604  003A30  6B8A               	clrf	(_DtCO+11)& (0+255),b
   605                           ;rgl.c: 271: DtCW.ddDCW=0;
   606  003A32  0100               	movlb	(_DtCW+9) shr (0+8)
   607  003A34  6B79               	clrf	(_DtCW+9)& (0+255),b
   608                           ;rgl.c: 272: DtCO.indCO=0;
   609  003A36  0100               	movlb	(_DtCO+12) shr (0+8)
   610  003A38  6B8B               	clrf	(_DtCO+12)& (0+255),b
   611                           ;rgl.c: 273: DtCW.indCW=0;
   612  003A3A  0100               	movlb	(_DtCW+10) shr (0+8)
   613  003A3C  6B7A               	clrf	(_DtCW+10)& (0+255),b
   614                           ;rgl.c: 274: rgl.fz=0;
   615  003A3E  0101               	movlb	_rgl shr (0+8)
   616  003A40  95F3               	bcf	_rgl& (0+255),2,b
   617                           ;rgl.c: 275: rgl.med_up=0;
   618  003A42  97F3               	bcf	_rgl& (0+255),3,b
   619                           ;rgl.c: 276: rgl.fast_up=0;
   620  003A44  99F3               	bcf	_rgl& (0+255),4,b
   621                           ;rgl.c: 277: rgl.srp=0;
   622  003A46  6BFA               	clrf	(_rgl+7)& (0+255),b
   623                           ;rgl.c: 278: rgl.ytmp=0;
   624  003A48  6BF9               	clrf	(_rgl+6)& (0+255),b
   625                           ;rgl.c: 279: rgl.nmod=0;
   626  003A4A  9BF3               	bcf	_rgl& (0+255),5,b
   627                           ;rgl.c: 280: rgl.del1s=0;
   628  003A4C  9DF3               	bcf	_rgl& (0+255),6,b
   629                           ;rgl.c: 281: rgl.inv_mod=0;
   630  003A4E  91F4               	bcf	(_rgl+1)& (0+255),0,b
   631                           ;rgl.c: 282: rgl.xmod=FirstXMOD();
   632  003A50  D82E               	call	_FirstXMOD	;wreg free
   633  003A52  CFE8 F1FB          	movff	wreg,_rgl+8
   634                           ;rgl.c: 283: tmr=1;
   635  003A56  0E01               	movlw	1
   636  003A58  CFE8 FEEE          	movff	wreg,_tmr
   637                           ;rgl.c: 284: tmr2=1;
   638  003A5C  CFE8 FEEF          	movff	wreg,_tmr2
   639                           ;rgl.c: 285: pwm_center=PWM.MINPWM+(PWM.MAXPWM-P
      +                          WM.MINPWM)/2;
   640  003A60  0E02               	movlw	2
   641  003A62  6E02               	movwf	btemp+2,c
   642  003A64  6A03               	clrf	btemp+3,c
   643  003A66  C1F1  FFE8         	movff	_PWM+27,wreg
   644  003A6A  C1F2  F000         	movff	_PWM+28,btemp
   645  003A6E  6A01               	clrf	btemp+1,c
   646  003A70  5E00               	subwf	btemp,f,c
   647  003A72  0E00               	movlw	0
   648  003A74  5A01               	subwfb	btemp+1,f,c
   649  003A76  EC5C  F06D         	call	awdiv
   650  003A7A  C1F1  F000         	movff	_PWM+27,btemp
   651  003A7E  5000               	movf	btemp,w,c
   652  003A80  2404               	addwf	btemp+4,w,c
   653  003A82  CFE8 FEEC          	movff	wreg,_pwm_center
   654                           ;rgl.c: 286: pwm_kwr=PWM.MINPWM+(PWM.MAXPWM-PWM.
      +                          MINPWM)/4;
   655  003A86  0E04               	movlw	4
   656  003A88  6E02               	movwf	btemp+2,c
   657  003A8A  6A03               	clrf	btemp+3,c
   658  003A8C  C1F1  FFE8         	movff	_PWM+27,wreg
   659  003A90  C1F2  F000         	movff	_PWM+28,btemp
   660  003A94  6A01               	clrf	btemp+1,c
   661  003A96  5E00               	subwf	btemp,f,c
   662  003A98  0E00               	movlw	0
   663  003A9A  5A01               	subwfb	btemp+1,f,c
   664  003A9C  EC5C  F06D         	call	awdiv
   665  003AA0  C1F1  F000         	movff	_PWM+27,btemp
   666  003AA4  5000               	movf	btemp,w,c
   667  003AA6  2404               	addwf	btemp+4,w,c
   668  003AA8  CFE8 FEED          	movff	wreg,_pwm_kwr
   669                           ;rgl.c: 288: }
   670  003AAC  0012               	return	
   671  003AAE                     __end_of_StartCO2:
   672                           ;rgl.c: 291: unsigned char FirstXMOD(void)
   673                           ;rgl.c: 292: {
   674  003AAE                     _FirstXMOD:
   675  000000                     
   676                           ;	_p assigned to ?a_FirstXMOD+0
   677  000000                     _FirstXMOD$p	set	?a_FirstXMOD
   678                           ;rgl.c: 293: signed long m;
   679  003AAE  0E0A               	movlw	10
   680  003AB0  6E02               	movwf	btemp+2,c
   681  003AB2  6A03               	clrf	btemp+3,c
   682  003AB4  C1F1  FFE8         	movff	_PWM+27,wreg
   683  003AB8  C1F2  F000         	movff	_PWM+28,btemp
   684  003ABC  6A01               	clrf	btemp+1,c
   685  003ABE  5E00               	subwf	btemp,f,c
   686  003AC0  0E00               	movlw	0
   687  003AC2  5A01               	subwfb	btemp+1,f,c
   688  003AC4  EC5C  F06D         	call	awdiv
   689  003AC8  90D8               	bcf	status,0,c
   690  003ACA  3604               	rlcf	btemp+4,f,c
   691  003ACC  90D8               	bcf	status,0,c
   692  003ACE  3404               	rlcf	btemp+4,w,c
   693  003AD0  0101               	movlb	(_PWM+28) shr (0+8)
   694  003AD2  5DF2               	subwf	(_PWM+28)& (0+255),w,b
   695  003AD4  CFE8 F1E7          	movff	wreg,_PWM+17
   696                           ;rgl.c: 299: tmp=(PWM.FIRSTPB-PWM.MINPWM)/4;
   697  003AD8  0E04               	movlw	4
   698  003ADA  6E02               	movwf	btemp+2,c
   699  003ADC  6A03               	clrf	btemp+3,c
   700  003ADE  C1F1  FFE8         	movff	_PWM+27,wreg
   701  003AE2  C1E7  F000         	movff	_PWM+17,btemp
   702  003AE6  6A01               	clrf	btemp+1,c
   703  003AE8  5E00               	subwf	btemp,f,c
   704  003AEA  0E00               	movlw	0
   705  003AEC  5A01               	subwfb	btemp+1,f,c
   706  003AEE  EC5C  F06D         	call	awdiv
   707  003AF2  5004               	movf	btemp+4,w,c
   708  003AF4  6ED9               	movwf	fsr2l,c
   709                           ;rgl.c: 300: if(PWM.MAXPWM>(PWM.FIRSTPB+tmp))
   710  003AF6  C1F2  F000         	movff	_PWM+28,btemp
   711  003AFA  6A01               	clrf	btemp+1,c
   712  003AFC  50D9               	movf	fsr2l,w,c
   713  003AFE  C1E7  F002         	movff	_PWM+17,btemp+2
   714  003B02  6A03               	clrf	btemp+3,c
   715  003B04  2602               	addwf	btemp+2,f,c
   716  003B06  0E00               	movlw	0
   717  003B08  2203               	addwfc	btemp+3,f,c
   718  003B0A  5003               	movf	btemp+3,w,c
   719  003B0C  0A80               	xorlw	128
   720  003B0E  6E04               	movwf	btemp+4,c
   721  003B10  5001               	movf	btemp+1,w,c
   722  003B12  0A80               	xorlw	128
   723  003B14  5C04               	subwf	btemp+4,w,c
   724  003B16  E102               	bnz	u245
   725  003B18  5000               	movf	btemp,w,c
   726  003B1A  5C02               	subwf	btemp+2,w,c
   727  003B1C                     u245:
   728  003B1C  E205               	bc	l43
   729                           ;rgl.c: 301: {
   730  003B1E  50D9               	movf	fsr2l,w,c
   731  003B20  0101               	movlb	(_PWM+17) shr (0+8)
   732  003B22  25E7               	addwf	(_PWM+17)& (0+255),w,b
   733  003B24  6EE1               	movwf	fsr1l,c
   734                           ;rgl.c: 303: }
   735  003B26  D002               	goto	l44
   736  003B28                     l43:
   737                           ;rgl.c: 304: else
   738  003B28  C1F2  FFE1         	movff	_PWM+28,fsr1l
   739  003B2C                     l44:
   740                           ;rgl.c: 307: }
   741  003B2C  50E1               	movf	fsr1l,w,c
   742  003B2E  0100               	movlb	__Lparam shr (0+8)
   743  003B30  6FA6               	movwf	?a_FirstXMOD^(__Lparam& (0+65280)),b
   744                           ;rgl.c: 312: if(DtCO.CO>=20&&DtCO.CO<=80)
   745  003B32  0E13               	movlw	19
   746  003B34  0100               	movlb	(_DtCO+3) shr (0+8)
   747  003B36  6582               	cpfsgt	(_DtCO+3)& (0+255),b
   748  003B38  D072               	goto	l45
   749  003B3A  0E51               	movlw	81
   750  003B3C  6182               	cpfslt	(_DtCO+3)& (0+255),b
   751  003B3E  D06F               	goto	l45
   752                           ;rgl.c: 313: {
   753  003B40  0E0A               	movlw	10
   754  003B42  6E04               	movwf	btemp+4,c
   755  003B44  6A05               	clrf	btemp+5,c
   756  003B46  6A06               	clrf	btemp+6,c
   757  003B48  6A07               	clrf	btemp+7,c
   758  003B4A  0E50               	movlw	80
   759  003B4C  6E00               	movwf	btemp,c
   760  003B4E  6A01               	clrf	btemp+1,c
   761  003B50  C082  FFE8         	movff	_DtCO+3,wreg
   762  003B54  5E00               	subwf	btemp,f,c
   763  003B56  0E00               	movlw	0
   764  003B58  5A01               	subwfb	btemp+1,f,c
   765  003B5A  BE01               	btfsc	btemp+1,7,c
   766  003B5C  0EFF               	movlw	255
   767  003B5E  6E02               	movwf	btemp+2,c
   768  003B60  6E03               	movwf	btemp+3,c
   769  003B62  EC69  F06B         	call	almul
   770  003B66  C000  F0A7         	movff	btemp,?a_FirstXMOD+1
   771  003B6A  C001  F0A8         	movff	btemp+1,?a_FirstXMOD+2
   772  003B6E  C002  F0A9         	movff	btemp+2,?a_FirstXMOD+3
   773  003B72  C003  F0AA         	movff	btemp+3,?a_FirstXMOD+4
   774                           ;rgl.c: 315: m=m/(signed long)(80-20);
   775  003B76  0E3C               	movlw	60
   776  003B78  6E04               	movwf	btemp+4,c
   777  003B7A  6A05               	clrf	btemp+5,c
   778  003B7C  6A06               	clrf	btemp+6,c
   779  003B7E  6A07               	clrf	btemp+7,c
   780  003B80  0EA7               	movlw	low (?a_FirstXMOD+1)
   781  003B82  6EE9               	movwf	fsr0l,c
   782  003B84  0E00               	movlw	high (?a_FirstXMOD+1)
   783  003B86  6EEA               	movwf	fsr0h,c
   784  003B88  ECF5  F06D         	call	aldiv_f
   785                           ;rgl.c: 316: m=m*(signed long)(maxmod-PWM.MINPWM
      +                          );
   786  003B8C  C1F1  FFE8         	movff	_PWM+27,wreg
   787  003B90  5CE1               	subwf	fsr1l,w,c
   788  003B92  6E04               	movwf	btemp+4,c
   789  003B94  6A05               	clrf	btemp+5,c
   790  003B96  A0D8               	btfss	status,0,c
   791  003B98  0605               	decf	btemp+5,f,c
   792  003B9A  6A06               	clrf	btemp+6,c
   793  003B9C  BE05               	btfsc	btemp+5,7,c
   794  003B9E  0606               	decf	btemp+6,f,c
   795  003BA0  5006               	movf	btemp+6,w,c
   796  003BA2  6E07               	movwf	btemp+7,c
   797  003BA4  0EA7               	movlw	low (?a_FirstXMOD+1)
   798  003BA6  6EE9               	movwf	fsr0l,c
   799  003BA8  0E00               	movlw	high (?a_FirstXMOD+1)
   800  003BAA  6EEA               	movwf	fsr0h,c
   801  003BAC  ECEB  F06D         	call	almul_f
   802                           ;rgl.c: 317: if(m<0) m=0;
   803  003BB0  0100               	movlb	__Lparam shr (0+8)
   804  003BB2  AFAA               	btfss	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),7,
      +                          b
   805  003BB4  D004               	goto	l46
   806  003BB6  6BA7               	clrf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),b
   807  003BB8  6BA8               	clrf	(?a_FirstXMOD+2)^(__Lparam& (0+65280)),b
   808  003BBA  6BA9               	clrf	(?a_FirstXMOD+3)^(__Lparam& (0+65280)),b
   809  003BBC  6BAA               	clrf	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),b
   810  003BBE                     l46:
   811                           ;rgl.c: 318: m=m/10+PWM.MINPWM;
   812  003BBE  0E0A               	movlw	10
   813  003BC0  6E04               	movwf	btemp+4,c
   814  003BC2  6A05               	clrf	btemp+5,c
   815  003BC4  6A06               	clrf	btemp+6,c
   816  003BC6  6A07               	clrf	btemp+7,c
   817  003BC8  C0A7  F000         	movff	?a_FirstXMOD+1,btemp
   818  003BCC  C0A8  F001         	movff	?a_FirstXMOD+2,btemp+1
   819  003BD0  C0A9  F002         	movff	?a_FirstXMOD+3,btemp+2
   820  003BD4  C0AA  F003         	movff	?a_FirstXMOD+4,btemp+3
   821  003BD8  ECF4  F06C         	call	aldiv
   822  003BDC  C1F1  FFE8         	movff	_PWM+27,wreg
   823  003BE0  2400               	addwf	btemp,w,c
   824  003BE2  0100               	movlb	__Lparam shr (0+8)
   825  003BE4  6FA7               	movwf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),b
   826  003BE6  0E00               	movlw	0
   827  003BE8  2001               	addwfc	btemp+1,w,c
   828  003BEA  6FA8               	movwf	(?a_FirstXMOD+2)^(__Lparam& (0+65280)),b
   829  003BEC  0E00               	movlw	0
   830  003BEE  2002               	addwfc	btemp+2,w,c
   831  003BF0  6FA9               	movwf	(?a_FirstXMOD+3)^(__Lparam& (0+65280)),b
   832  003BF2  0E00               	movlw	0
   833  003BF4  2003               	addwfc	btemp+3,w,c
   834  003BF6  6FAA               	movwf	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),b
   835                           ;rgl.c: 319: if(m>0xff) p=maxmod;
   836  003BF8  51AA               	movf	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),w
   837  003BFA  0A80               	xorlw	128
   838  003BFC  0F80               	addlw	128
   839  003BFE  E108               	bnz	u295
   840  003C00  0E00               	movlw	0
   841  003C02  5DA9               	subwf	(?a_FirstXMOD+3)^(__Lparam& (0+65280)),w
   842  003C04  E105               	bnz	u295
   843  003C06  0E01               	movlw	1
   844  003C08  5DA8               	subwf	(?a_FirstXMOD+2)^(__Lparam& (0+65280)),w
   845  003C0A  E102               	bnz	u295
   846  003C0C  0E00               	movlw	0
   847  003C0E  5DA7               	subwf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),w
   848  003C10                     u295:
   849  003C10  E303               	bnc	l47
   850  003C12  50E1               	movf	fsr1l,w,c
   851  003C14                     L1:
   852  003C14  6FA6               	movwf	?a_FirstXMOD^(__Lparam& (0+65280)),b
   853  003C16  D010               	goto	l49
   854  003C18                     l47:
   855                           ;rgl.c: 320: else p=(unsigned char)m;
   856  003C18  0100               	movlb	__Lparam shr (0+8)
   857  003C1A  51A7               	movf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),w
   858  003C1C  D7FB               	goto	L1
   859                           ;rgl.c: 321: }
   860  003C1E                     l45:
   861                           ;rgl.c: 322: else
   862  003C1E  0E14               	movlw	20
   863  003C20  0100               	movlb	(_DtCO+3) shr (0+8)
   864  003C22  6182               	cpfslt	(_DtCO+3)& (0+255),b
   865  003C24  D003               	goto	l50
   866  003C26  50E1               	movf	fsr1l,w,c
   867  003C28  0100               	movlb	__Lparam shr (0+8)
   868  003C2A  6FA6               	movwf	?a_FirstXMOD^(__Lparam& (0+65280)),b
   869  003C2C                     l50:
   870                           ;rgl.c: 325: if(DtCO.CO>80) p=PWM.MINPWM;
   871  003C2C  0E50               	movlw	80
   872  003C2E  0100               	movlb	(_DtCO+3) shr (0+8)
   873  003C30  6582               	cpfsgt	(_DtCO+3)& (0+255),b
   874  003C32  D002               	goto	l49
   875  003C34  C1F1  F0A6         	movff	_PWM+27,?a_FirstXMOD
   876  003C38                     l49:
   877                           ;rgl.c: 326: }
   878  003C38  EE01  F0CE         	lfsr	0,_DtKNF+26
   879  003C3C  50EF               	movf	indf0,w,c
   880  003C3E  E176               	bnz	l52
   881                           ;rgl.c: 330: {
   882  003C40  0E27               	movlw	39
   883  003C42  0100               	movlb	(_DtCO+5) shr (0+8)
   884  003C44  6584               	cpfsgt	(_DtCO+5)& (0+255),b
   885  003C46  D0E9               	goto	l59
   886  003C48  0E51               	movlw	81
   887  003C4A  6184               	cpfslt	(_DtCO+5)& (0+255),b
   888  003C4C  D0E6               	goto	l59
   889                           ;rgl.c: 332: {
   890  003C4E  0E0A               	movlw	10
   891  003C50  6E04               	movwf	btemp+4,c
   892  003C52  6A05               	clrf	btemp+5,c
   893  003C54  6A06               	clrf	btemp+6,c
   894  003C56  6A07               	clrf	btemp+7,c
   895  003C58  C084  F000         	movff	_DtCO+5,btemp
   896  003C5C  0ED8               	movlw	216
   897  003C5E  2400               	addwf	btemp,w,c
   898  003C60  6E02               	movwf	btemp+2,c
   899  003C62  6A03               	clrf	btemp+3,c
   900  003C64  0EFF               	movlw	255
   901  003C66  2203               	addwfc	btemp+3,f,c
   902  003C68  C002  F000         	movff	btemp+2,btemp
   903  003C6C  C003  F001         	movff	btemp+3,btemp+1
   904  003C70  0E00               	movlw	0
   905  003C72  BE01               	btfsc	btemp+1,7,c
   906  003C74  0EFF               	movlw	255
   907  003C76  6E02               	movwf	btemp+2,c
   908  003C78  6E03               	movwf	btemp+3,c
   909  003C7A  EC69  F06B         	call	almul
   910  003C7E  C000  F0A7         	movff	btemp,?a_FirstXMOD+1
   911  003C82  C001  F0A8         	movff	btemp+1,?a_FirstXMOD+2
   912  003C86  C002  F0A9         	movff	btemp+2,?a_FirstXMOD+3
   913  003C8A  C003  F0AA         	movff	btemp+3,?a_FirstXMOD+4
   914                           ;rgl.c: 334: m=m/(signed long)(80-40);
   915  003C8E  0E28               	movlw	40
   916  003C90  6E04               	movwf	btemp+4,c
   917  003C92  6A05               	clrf	btemp+5,c
   918  003C94  6A06               	clrf	btemp+6,c
   919  003C96  6A07               	clrf	btemp+7,c
   920  003C98  0EA7               	movlw	low (?a_FirstXMOD+1)
   921  003C9A  6EE9               	movwf	fsr0l,c
   922  003C9C  0E00               	movlw	high (?a_FirstXMOD+1)
   923  003C9E  6EEA               	movwf	fsr0h,c
   924  003CA0  ECF5  F06D         	call	aldiv_f
   925                           ;rgl.c: 335: m=m*(signed long)(maxmod-PWM.MINPWM
      +                          );
   926  003CA4  C1F1  FFE8         	movff	_PWM+27,wreg
   927  003CA8  5CE1               	subwf	fsr1l,w,c
   928  003CAA  6E04               	movwf	btemp+4,c
   929  003CAC  6A05               	clrf	btemp+5,c
   930  003CAE  A0D8               	btfss	status,0,c
   931  003CB0  0605               	decf	btemp+5,f,c
   932  003CB2  6A06               	clrf	btemp+6,c
   933  003CB4  BE05               	btfsc	btemp+5,7,c
   934  003CB6  0606               	decf	btemp+6,f,c
   935  003CB8  5006               	movf	btemp+6,w,c
   936  003CBA  6E07               	movwf	btemp+7,c
   937  003CBC  0EA7               	movlw	low (?a_FirstXMOD+1)
   938  003CBE  6EE9               	movwf	fsr0l,c
   939  003CC0  0E00               	movlw	high (?a_FirstXMOD+1)
   940  003CC2  6EEA               	movwf	fsr0h,c
   941  003CC4  ECEB  F06D         	call	almul_f
   942                           ;rgl.c: 336: if(m<0) m=0;
   943  003CC8  0100               	movlb	__Lparam shr (0+8)
   944  003CCA  AFAA               	btfss	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),7,
      +                          b
   945  003CCC  D004               	goto	l54
   946  003CCE  6BA7               	clrf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),b
   947  003CD0  6BA8               	clrf	(?a_FirstXMOD+2)^(__Lparam& (0+65280)),b
   948  003CD2  6BA9               	clrf	(?a_FirstXMOD+3)^(__Lparam& (0+65280)),b
   949  003CD4  6BAA               	clrf	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),b
   950  003CD6                     l54:
   951                           ;rgl.c: 337: m=m/10+PWM.MINPWM;
   952  003CD6  0E0A               	movlw	10
   953  003CD8  6E04               	movwf	btemp+4,c
   954  003CDA  6A05               	clrf	btemp+5,c
   955  003CDC  6A06               	clrf	btemp+6,c
   956  003CDE  6A07               	clrf	btemp+7,c
   957  003CE0  C0A7  F000         	movff	?a_FirstXMOD+1,btemp
   958  003CE4  C0A8  F001         	movff	?a_FirstXMOD+2,btemp+1
   959  003CE8  C0A9  F002         	movff	?a_FirstXMOD+3,btemp+2
   960  003CEC  C0AA  F003         	movff	?a_FirstXMOD+4,btemp+3
   961  003CF0  ECF4  F06C         	call	aldiv
   962  003CF4  C1F1  FFE8         	movff	_PWM+27,wreg
   963  003CF8  2400               	addwf	btemp,w,c
   964  003CFA  0100               	movlb	__Lparam shr (0+8)
   965  003CFC  6FA7               	movwf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),b
   966  003CFE  0E00               	movlw	0
   967  003D00  2001               	addwfc	btemp+1,w,c
   968  003D02  6FA8               	movwf	(?a_FirstXMOD+2)^(__Lparam& (0+65280)),b
   969  003D04  0E00               	movlw	0
   970  003D06  2002               	addwfc	btemp+2,w,c
   971  003D08  6FA9               	movwf	(?a_FirstXMOD+3)^(__Lparam& (0+65280)),b
   972  003D0A  0E00               	movlw	0
   973  003D0C  2003               	addwfc	btemp+3,w,c
   974  003D0E  6FAA               	movwf	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),b
   975                           ;rgl.c: 338: if(m>0xff) p2=maxmod;
   976  003D10  51AA               	movf	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),w
   977  003D12  0A80               	xorlw	128
   978  003D14  0F80               	addlw	128
   979  003D16  E17E               	bnz	u375
   980  003D18  0E00               	movlw	0
   981  003D1A  5DA9               	subwf	(?a_FirstXMOD+3)^(__Lparam& (0+65280)),w
   982  003D1C  E17B               	bnz	u375
   983  003D1E  0E01               	movlw	1
   984  003D20  5DA8               	subwf	(?a_FirstXMOD+2)^(__Lparam& (0+65280)),w
   985  003D22  E178               	bnz	u375
   986  003D24  D075               	goto	L21
   987  003D26                     l55:
   988                           ;rgl.c: 339: else p2=(unsigned char)m;
   989  003D26  0100               	movlb	__Lparam shr (0+8)
   990  003D28  51A7               	movf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),w
   991  003D2A  D079               	goto	L18
   992                           ;rgl.c: 340: }else p2=p;
   993                           ;rgl.c: 341: }
   994  003D2C                     l52:
   995                           ;rgl.c: 342: else
   996  003D2C  0E18               	movlw	24
   997  003D2E  0100               	movlb	(_DtCO+5) shr (0+8)
   998  003D30  6584               	cpfsgt	(_DtCO+5)& (0+255),b
   999  003D32  D073               	goto	l59
  1000  003D34  0E38               	movlw	56
  1001  003D36  6184               	cpfslt	(_DtCO+5)& (0+255),b
  1002  003D38  D070               	goto	l59
  1003                           ;rgl.c: 345: {
  1004  003D3A  0E0A               	movlw	10
  1005  003D3C  6E04               	movwf	btemp+4,c
  1006  003D3E  6A05               	clrf	btemp+5,c
  1007  003D40  6A06               	clrf	btemp+6,c
  1008  003D42  6A07               	clrf	btemp+7,c
  1009  003D44  C084  F000         	movff	_DtCO+5,btemp
  1010  003D48  0EE7               	movlw	231
  1011  003D4A  2400               	addwf	btemp,w,c
  1012  003D4C  6E02               	movwf	btemp+2,c
  1013  003D4E  6A03               	clrf	btemp+3,c
  1014  003D50  0EFF               	movlw	255
  1015  003D52  2203               	addwfc	btemp+3,f,c
  1016  003D54  C002  F000         	movff	btemp+2,btemp
  1017  003D58  C003  F001         	movff	btemp+3,btemp+1
  1018  003D5C  0E00               	movlw	0
  1019  003D5E  BE01               	btfsc	btemp+1,7,c
  1020  003D60  0EFF               	movlw	255
  1021  003D62  6E02               	movwf	btemp+2,c
  1022  003D64  6E03               	movwf	btemp+3,c
  1023  003D66  EC69  F06B         	call	almul
  1024  003D6A  C000  F0A7         	movff	btemp,?a_FirstXMOD+1
  1025  003D6E  C001  F0A8         	movff	btemp+1,?a_FirstXMOD+2
  1026  003D72  C002  F0A9         	movff	btemp+2,?a_FirstXMOD+3
  1027  003D76  C003  F0AA         	movff	btemp+3,?a_FirstXMOD+4
  1028                           ;rgl.c: 347: m=m/(signed long)(55-25);
  1029  003D7A  0E1E               	movlw	30
  1030  003D7C  6E04               	movwf	btemp+4,c
  1031  003D7E  6A05               	clrf	btemp+5,c
  1032  003D80  6A06               	clrf	btemp+6,c
  1033  003D82  6A07               	clrf	btemp+7,c
  1034  003D84  0EA7               	movlw	low (?a_FirstXMOD+1)
  1035  003D86  6EE9               	movwf	fsr0l,c
  1036  003D88  0E00               	movlw	high (?a_FirstXMOD+1)
  1037  003D8A  6EEA               	movwf	fsr0h,c
  1038  003D8C  ECF5  F06D         	call	aldiv_f
  1039                           ;rgl.c: 348: m=m*(signed long)(maxmod-PWM.MINPWM
      +                          );
  1040  003D90  C1F1  FFE8         	movff	_PWM+27,wreg
  1041  003D94  5CE1               	subwf	fsr1l,w,c
  1042  003D96  6E04               	movwf	btemp+4,c
  1043  003D98  6A05               	clrf	btemp+5,c
  1044  003D9A  A0D8               	btfss	status,0,c
  1045  003D9C  0605               	decf	btemp+5,f,c
  1046  003D9E  6A06               	clrf	btemp+6,c
  1047  003DA0  BE05               	btfsc	btemp+5,7,c
  1048  003DA2  0606               	decf	btemp+6,f,c
  1049  003DA4  5006               	movf	btemp+6,w,c
  1050  003DA6  6E07               	movwf	btemp+7,c
  1051  003DA8  0EA7               	movlw	low (?a_FirstXMOD+1)
  1052  003DAA  6EE9               	movwf	fsr0l,c
  1053  003DAC  0E00               	movlw	high (?a_FirstXMOD+1)
  1054  003DAE  6EEA               	movwf	fsr0h,c
  1055  003DB0  ECEB  F06D         	call	almul_f
  1056                           ;rgl.c: 349: if(m<0) m=0;
  1057  003DB4  0100               	movlb	__Lparam shr (0+8)
  1058  003DB6  AFAA               	btfss	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),7,
      +                          b
  1059  003DB8  D004               	goto	l60
  1060  003DBA  6BA7               	clrf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),b
  1061  003DBC  6BA8               	clrf	(?a_FirstXMOD+2)^(__Lparam& (0+65280)),b
  1062  003DBE  6BA9               	clrf	(?a_FirstXMOD+3)^(__Lparam& (0+65280)),b
  1063  003DC0  6BAA               	clrf	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),b
  1064  003DC2                     l60:
  1065                           ;rgl.c: 350: m=m/10+PWM.MINPWM;
  1066  003DC2  0E0A               	movlw	10
  1067  003DC4  6E04               	movwf	btemp+4,c
  1068  003DC6  6A05               	clrf	btemp+5,c
  1069  003DC8  6A06               	clrf	btemp+6,c
  1070  003DCA  6A07               	clrf	btemp+7,c
  1071  003DCC  C0A7  F000         	movff	?a_FirstXMOD+1,btemp
  1072  003DD0  C0A8  F001         	movff	?a_FirstXMOD+2,btemp+1
  1073  003DD4  C0A9  F002         	movff	?a_FirstXMOD+3,btemp+2
  1074  003DD8  C0AA  F003         	movff	?a_FirstXMOD+4,btemp+3
  1075  003DDC  ECF4  F06C         	call	aldiv
  1076  003DE0  C1F1  FFE8         	movff	_PWM+27,wreg
  1077  003DE4  2400               	addwf	btemp,w,c
  1078  003DE6  0100               	movlb	__Lparam shr (0+8)
  1079  003DE8  6FA7               	movwf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),b
  1080  003DEA  0E00               	movlw	0
  1081  003DEC  2001               	addwfc	btemp+1,w,c
  1082  003DEE  6FA8               	movwf	(?a_FirstXMOD+2)^(__Lparam& (0+65280)),b
  1083  003DF0  0E00               	movlw	0
  1084  003DF2  2002               	addwfc	btemp+2,w,c
  1085  003DF4  6FA9               	movwf	(?a_FirstXMOD+3)^(__Lparam& (0+65280)),b
  1086  003DF6  0E00               	movlw	0
  1087  003DF8  2003               	addwfc	btemp+3,w,c
  1088  003DFA  6FAA               	movwf	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),b
  1089                           ;rgl.c: 351: if(m>0xff) p2=maxmod;
  1090  003DFC  51AA               	movf	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),w
  1091  003DFE  0A80               	xorlw	128
  1092  003E00  0F80               	addlw	128
  1093  003E02  E108               	bnz	u425
  1094  003E04  0E00               	movlw	0
  1095  003E06  5DA9               	subwf	(?a_FirstXMOD+3)^(__Lparam& (0+65280)),w
  1096  003E08  E105               	bnz	u425
  1097  003E0A  0E01               	movlw	1
  1098  003E0C  5DA8               	subwf	(?a_FirstXMOD+2)^(__Lparam& (0+65280)),w
  1099  003E0E  E102               	bnz	u425
  1100  003E10                     L21:
  1101  003E10  0E00               	movlw	0
  1102  003E12  5DA7               	subwf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),w
  1103  003E14                     u375:
  1104  003E14                     u425:
  1105  003E14  E388               	bnc	l55
  1106  003E16  50E1               	movf	fsr1l,w,c
  1107  003E18  D002               	goto	L18
  1108                           ;rgl.c: 352: else p2=(unsigned char)m;
  1109                           ;rgl.c: 353: }else p2=p;
  1110  003E1A                     l59:
  1111  003E1A  0100               	movlb	__Lparam shr (0+8)
  1112  003E1C  51A6               	movf	?a_FirstXMOD^(__Lparam& (0+65280)),w
  1113  003E1E                     L18:
  1114  003E1E  6ED9               	movwf	fsr2l,c
  1115                           ;rgl.c: 354: }
  1116  003E20  0100               	movlb	__Lparam shr (0+8)
  1117  003E22  51A6               	movf	?a_FirstXMOD^(__Lparam& (0+65280)),w
  1118  003E24  60D9               	cpfslt	fsr2l,c
  1119  003E26  D002               	goto	l64
  1120  003E28  50D9               	movf	fsr2l,w,c
  1121  003E2A  6FA6               	movwf	?a_FirstXMOD^(__Lparam& (0+65280)),b
  1122  003E2C                     l64:
  1123                           ;rgl.c: 360: if(DtCO.DCO>=0&&DtCO.DCO<=40)
  1124  003E2C  C088  F000         	movff	_DtCO+9,btemp
  1125  003E30  C088  FFE8         	movff	_DtCO+9,wreg
  1126  003E34  0A80               	xorlw	128
  1127  003E36  BE00               	btfsc	btemp,7,c
  1128  003E38  D070               	goto	L27
  1129  003E3A  0F57               	addlw	-169
  1130  003E3C  E26B               	bc	l65
  1131                           ;rgl.c: 361: {
  1132  003E3E  0E0A               	movlw	10
  1133  003E40  6E04               	movwf	btemp+4,c
  1134  003E42  6A05               	clrf	btemp+5,c
  1135  003E44  6A06               	clrf	btemp+6,c
  1136  003E46  6A07               	clrf	btemp+7,c
  1137  003E48  C088  F000         	movff	_DtCO+9,btemp
  1138  003E4C  0E00               	movlw	0
  1139  003E4E  BE00               	btfsc	btemp,7,c
  1140  003E50  0EFF               	movlw	255
  1141  003E52  6E01               	movwf	btemp+1,c
  1142  003E54  6E02               	movwf	btemp+2,c
  1143  003E56  6E03               	movwf	btemp+3,c
  1144  003E58  EC69  F06B         	call	almul
  1145  003E5C  C000  F0A7         	movff	btemp,?a_FirstXMOD+1
  1146  003E60  C001  F0A8         	movff	btemp+1,?a_FirstXMOD+2
  1147  003E64  C002  F0A9         	movff	btemp+2,?a_FirstXMOD+3
  1148  003E68  C003  F0AA         	movff	btemp+3,?a_FirstXMOD+4
  1149                           ;rgl.c: 363: m=m/(signed long)(40-0);
  1150  003E6C  0E28               	movlw	40
  1151  003E6E  6E04               	movwf	btemp+4,c
  1152  003E70  6A05               	clrf	btemp+5,c
  1153  003E72  6A06               	clrf	btemp+6,c
  1154  003E74  6A07               	clrf	btemp+7,c
  1155  003E76  0EA7               	movlw	low (?a_FirstXMOD+1)
  1156  003E78  6EE9               	movwf	fsr0l,c
  1157  003E7A  0E00               	movlw	high (?a_FirstXMOD+1)
  1158  003E7C  6EEA               	movwf	fsr0h,c
  1159  003E7E  ECF5  F06D         	call	aldiv_f
  1160                           ;rgl.c: 364: m=m*(signed long)(maxmod-PWM.MINPWM
      +                          );
  1161  003E82  C1F1  FFE8         	movff	_PWM+27,wreg
  1162  003E86  5CE1               	subwf	fsr1l,w,c
  1163  003E88  6E04               	movwf	btemp+4,c
  1164  003E8A  6A05               	clrf	btemp+5,c
  1165  003E8C  A0D8               	btfss	status,0,c
  1166  003E8E  0605               	decf	btemp+5,f,c
  1167  003E90  6A06               	clrf	btemp+6,c
  1168  003E92  BE05               	btfsc	btemp+5,7,c
  1169  003E94  0606               	decf	btemp+6,f,c
  1170  003E96  5006               	movf	btemp+6,w,c
  1171  003E98  6E07               	movwf	btemp+7,c
  1172  003E9A  0EA7               	movlw	low (?a_FirstXMOD+1)
  1173  003E9C  6EE9               	movwf	fsr0l,c
  1174  003E9E  0E00               	movlw	high (?a_FirstXMOD+1)
  1175  003EA0  6EEA               	movwf	fsr0h,c
  1176  003EA2  ECEB  F06D         	call	almul_f
  1177                           ;rgl.c: 365: if(m<0) m=0;
  1178  003EA6  0100               	movlb	__Lparam shr (0+8)
  1179  003EA8  AFAA               	btfss	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),7,
      +                          b
  1180  003EAA  D004               	goto	l66
  1181  003EAC  6BA7               	clrf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),b
  1182  003EAE  6BA8               	clrf	(?a_FirstXMOD+2)^(__Lparam& (0+65280)),b
  1183  003EB0  6BA9               	clrf	(?a_FirstXMOD+3)^(__Lparam& (0+65280)),b
  1184  003EB2  6BAA               	clrf	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),b
  1185  003EB4                     l66:
  1186                           ;rgl.c: 366: m=m/10+PWM.MINPWM;
  1187  003EB4  0E0A               	movlw	10
  1188  003EB6  6E04               	movwf	btemp+4,c
  1189  003EB8  6A05               	clrf	btemp+5,c
  1190  003EBA  6A06               	clrf	btemp+6,c
  1191  003EBC  6A07               	clrf	btemp+7,c
  1192  003EBE  C0A7  F000         	movff	?a_FirstXMOD+1,btemp
  1193  003EC2  C0A8  F001         	movff	?a_FirstXMOD+2,btemp+1
  1194  003EC6  C0A9  F002         	movff	?a_FirstXMOD+3,btemp+2
  1195  003ECA  C0AA  F003         	movff	?a_FirstXMOD+4,btemp+3
  1196  003ECE  ECF4  F06C         	call	aldiv
  1197  003ED2  C1F1  FFE8         	movff	_PWM+27,wreg
  1198  003ED6  2400               	addwf	btemp,w,c
  1199  003ED8  0100               	movlb	__Lparam shr (0+8)
  1200  003EDA  6FA7               	movwf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),b
  1201  003EDC  0E00               	movlw	0
  1202  003EDE  2001               	addwfc	btemp+1,w,c
  1203  003EE0  6FA8               	movwf	(?a_FirstXMOD+2)^(__Lparam& (0+65280)),b
  1204  003EE2  0E00               	movlw	0
  1205  003EE4  2002               	addwfc	btemp+2,w,c
  1206  003EE6  6FA9               	movwf	(?a_FirstXMOD+3)^(__Lparam& (0+65280)),b
  1207  003EE8  0E00               	movlw	0
  1208  003EEA  2003               	addwfc	btemp+3,w,c
  1209  003EEC  6FAA               	movwf	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),b
  1210                           ;rgl.c: 367: if(m>0xff) p2=maxmod;
  1211  003EEE  51AA               	movf	(?a_FirstXMOD+4)^(__Lparam& (0+65280)),w
  1212  003EF0  0A80               	xorlw	128
  1213  003EF2  0F80               	addlw	128
  1214  003EF4  E108               	bnz	u485
  1215  003EF6  0E00               	movlw	0
  1216  003EF8  5DA9               	subwf	(?a_FirstXMOD+3)^(__Lparam& (0+65280)),w
  1217  003EFA  E105               	bnz	u485
  1218  003EFC  0E01               	movlw	1
  1219  003EFE  5DA8               	subwf	(?a_FirstXMOD+2)^(__Lparam& (0+65280)),w
  1220  003F00  E102               	bnz	u485
  1221  003F02  0E00               	movlw	0
  1222  003F04  5DA7               	subwf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),w
  1223  003F06                     u485:
  1224  003F06  E303               	bnc	l67
  1225  003F08  50E1               	movf	fsr1l,w,c
  1226  003F0A                     L3:
  1227  003F0A  6ED9               	movwf	fsr2l,c
  1228  003F0C  D00F               	goto	l69
  1229  003F0E                     l67:
  1230                           ;rgl.c: 368: else p2=(unsigned char)m;
  1231  003F0E  0100               	movlb	__Lparam shr (0+8)
  1232  003F10  51A7               	movf	(?a_FirstXMOD+1)^(__Lparam& (0+65280)),w
  1233  003F12  D7FB               	goto	L3
  1234                           ;rgl.c: 369: }
  1235  003F14                     l65:
  1236                           ;rgl.c: 370: else
  1237  003F14  C088  FFE8         	movff	_DtCO+9,wreg
  1238  003F18  0A80               	xorlw	128
  1239  003F1A                     L27:
  1240  003F1A  0F57               	addlw	-169
  1241  003F1C  E302               	bnc	l70
  1242  003F1E  50E1               	movf	fsr1l,w,c
  1243  003F20  6ED9               	movwf	fsr2l,c
  1244  003F22                     l70:
  1245                           ;rgl.c: 373: if(DtCO.DCO<0) p2=PWM.MINPWM;
  1246  003F22  C088  F000         	movff	_DtCO+9,btemp
  1247  003F26  BE00               	btfsc	btemp,7,c
  1248  003F28  C1F1  FFD9         	movff	_PWM+27,fsr2l
  1249  003F2C                     l69:
  1250                           ;rgl.c: 374: }
  1251  003F2C  0100               	movlb	__Lparam shr (0+8)
  1252  003F2E  51A6               	movf	?a_FirstXMOD^(__Lparam& (0+65280)),w
  1253  003F30  60D9               	cpfslt	fsr2l,c
  1254  003F32  D002               	goto	l72
  1255  003F34  50D9               	movf	fsr2l,w,c
  1256  003F36  6FA6               	movwf	?a_FirstXMOD^(__Lparam& (0+65280)),b
  1257  003F38                     l72:
  1258                           ;rgl.c: 379: return p;
  1259  003F38  0100               	movlb	__Lparam shr (0+8)
  1260  003F3A  51A6               	movf	?a_FirstXMOD^(__Lparam& (0+65280)),w
  1261  003F3C  0012               	return	
  1262                           ;rgl.c: 381: }
  1263  003F3E                     __end_of_FirstXMOD:
  1264                           ;rgl.c: 438: void ModZgCO(void)
  1265                           ;rgl.c: 439: {
  1266  003F3E                     _ModZgCO:
  1267  000000                     
  1268                           ;rgl.c: 440: signed long m;
  1269  003F3E  0101               	movlb	_rgl shr (0+8)
  1270  003F40  A5F3               	btfss	_rgl& (0+255),2,b
  1271  003F42  D00C               	goto	l74
  1272                           ;rgl.c: 443: {
  1273  003F44  0E03               	movlw	3
  1274  003F46  ECD4  F02E         	call	_Tnizsza
  1275  003F4A  A0D8               	btfss	status,0,c
  1276  003F4C  0012               	return	
  1277                           ;rgl.c: 445: {
  1278  003F4E  C1D7  F1FB         	movff	_PWM+1,_rgl+8
  1279                           ;rgl.c: 447: rgl.srp=0;
  1280  003F52  0101               	movlb	(_rgl+7) shr (0+8)
  1281  003F54  6BFA               	clrf	(_rgl+7)& (0+255),b
  1282                           ;rgl.c: 448: rgl.ytmp=0;
  1283  003F56  6BF9               	clrf	(_rgl+6)& (0+255),b
  1284                           ;rgl.c: 449: rgl.nmod=0;
  1285  003F58  9BF3               	bcf	_rgl& (0+255),5,b
  1286                           ;rgl.c: 450: rgl.del1s=0;
  1287  003F5A  9DF3               	bcf	_rgl& (0+255),6,b
  1288                           ;rgl.c: 451: }
  1289                           ;rgl.c: 452: else return;
  1290  003F5C                     l74:
  1291                           ;rgl.c: 453: }
  1292  003F5C  0E00               	movlw	0
  1293  003F5E  ECE1  F02E         	call	_Twyzsza
  1294  003F62  E317               	bnc	l77
  1295  003F64  ECCD  F02E         	call	_Tstoi	;wreg free
  1296  003F68  E314               	bnc	l77
  1297                           ;rgl.c: 455: {
  1298  003F6A  0101               	movlb	_rgl shr (0+8)
  1299  003F6C  85F3               	bsf	_rgl& (0+255),2,b
  1300                           ;rgl.c: 457: rgl.fast_up=0;
  1301  003F6E  99F3               	bcf	_rgl& (0+255),4,b
  1302                           ;rgl.c: 458: rgl.med_up=0;
  1303  003F70  97F3               	bcf	_rgl& (0+255),3,b
  1304                           ;rgl.c: 459: rgl.srp=PWM.BufPWM;
  1305  003F72  C1D7  F1FA         	movff	_PWM+1,_rgl+7
  1306                           ;rgl.c: 460: rgl.xmod=PWM.BufPWM;
  1307  003F76  C1D7  F1FB         	movff	_PWM+1,_rgl+8
  1308                           ;rgl.c: 461: if(rgl.xmod>PWM.MAXPWM)
  1309  003F7A  C1FB  FFE8         	movff	_rgl+8,wreg
  1310  003F7E  0101               	movlb	(_PWM+28) shr (0+8)
  1311  003F80  61F2               	cpfslt	(_PWM+28)& (0+255),b
  1312  003F82  D004               	goto	l78
  1313                           ;rgl.c: 462: {
  1314  003F84  C1F2  F1FA         	movff	_PWM+28,_rgl+7
  1315                           ;rgl.c: 464: rgl.xmod=PWM.MAXPWM;
  1316  003F88  C1F2  F1FB         	movff	_PWM+28,_rgl+8
  1317  003F8C                     l78:
  1318                           ;rgl.c: 465: }
  1319  003F8C  0101               	movlb	(_rgl+1) shr (0+8)
  1320  003F8E  93F4               	bcf	(_rgl+1)& (0+255),1,b
  1321                           ;rgl.c: 467: return;
  1322  003F90  0012               	return	
  1323  003F92                     l77:
  1324                           ;rgl.c: 468: }
  1325  003F92  C1F1  FFE8         	movff	_PWM+27,wreg
  1326  003F96  0101               	movlb	(_rgl+8) shr (0+8)
  1327  003F98  5DFB               	subwf	(_rgl+8)& (0+255),w,b
  1328  003F9A  E318               	bnc	l79
  1329  003F9C  0E0A               	movlw	10
  1330  003F9E  6E02               	movwf	btemp+2,c
  1331  003FA0  6A03               	clrf	btemp+3,c
  1332  003FA2  C1F1  FFE8         	movff	_PWM+27,wreg
  1333  003FA6  C1FB  F000         	movff	_rgl+8,btemp
  1334  003FAA  6A01               	clrf	btemp+1,c
  1335  003FAC  5E00               	subwf	btemp,f,c
  1336  003FAE  0E00               	movlw	0
  1337  003FB0  5A01               	subwfb	btemp+1,f,c
  1338  003FB2  ECB7  F06D         	call	awmul
  1339  003FB6  0100               	movlb	__Lparam shr (0+8)
  1340  003FB8  C004  F0A6         	movff	btemp+4,?a_ModZgCO
  1341  003FBC  C005  F0A7         	movff	btemp+5,?a_ModZgCO+1
  1342  003FC0  0E00               	movlw	0
  1343  003FC2  BFA7               	btfsc	(?a_ModZgCO+1)^(__Lparam& (0+65280)),7,b
  1344  003FC4  0EFF               	movlw	-1
  1345  003FC6  6FA8               	movwf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),b
  1346  003FC8  6FA9               	movwf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),b
  1347  003FCA  D005               	goto	l80
  1348  003FCC                     l79:
  1349                           ;rgl.c: 470: else m=0;
  1350  003FCC  0100               	movlb	__Lparam shr (0+8)
  1351  003FCE  6BA6               	clrf	?a_ModZgCO^(__Lparam& (0+65280)),b
  1352  003FD0  6BA7               	clrf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),b
  1353  003FD2  6BA8               	clrf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),b
  1354  003FD4  6BA9               	clrf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),b
  1355  003FD6                     l80:
  1356                           ;rgl.c: 471: m=m/(signed long)(DtCO.MAD_CO-DtCO.
      +                          DAD_CO);
  1357  003FD6  C08F  FFE8         	movff	_DtCO+16,wreg
  1358  003FDA  C08E  F000         	movff	_DtCO+15,btemp
  1359  003FDE  5C00               	subwf	btemp,w,c
  1360  003FE0  6E04               	movwf	btemp+4,c
  1361  003FE2  6A05               	clrf	btemp+5,c
  1362  003FE4  A0D8               	btfss	status,0,c
  1363  003FE6  0605               	decf	btemp+5,f,c
  1364  003FE8  6A06               	clrf	btemp+6,c
  1365  003FEA  BE05               	btfsc	btemp+5,7,c
  1366  003FEC  0606               	decf	btemp+6,f,c
  1367  003FEE  5006               	movf	btemp+6,w,c
  1368  003FF0  6E07               	movwf	btemp+7,c
  1369  003FF2  0EA6               	movlw	low ?a_ModZgCO
  1370  003FF4  6EE9               	movwf	fsr0l,c
  1371  003FF6  0E00               	movlw	high ?a_ModZgCO
  1372  003FF8  6EEA               	movwf	fsr0h,c
  1373  003FFA  ECF5  F06D         	call	aldiv_f
  1374                           ;rgl.c: 472: m=m*(signed long)(DtCO.AC_CO-DtCO.D
      +                          AD_CO);
  1375  003FFE  C08F  FFE8         	movff	_DtCO+16,wreg
  1376  004002  C08D  F000         	movff	_DtCO+14,btemp
  1377  004006  5C00               	subwf	btemp,w,c
  1378  004008  6E04               	movwf	btemp+4,c
  1379  00400A  6A05               	clrf	btemp+5,c
  1380  00400C  A0D8               	btfss	status,0,c
  1381  00400E  0605               	decf	btemp+5,f,c
  1382  004010  6A06               	clrf	btemp+6,c
  1383  004012  BE05               	btfsc	btemp+5,7,c
  1384  004014  0606               	decf	btemp+6,f,c
  1385  004016  5006               	movf	btemp+6,w,c
  1386  004018  6E07               	movwf	btemp+7,c
  1387  00401A  0EA6               	movlw	low ?a_ModZgCO
  1388  00401C  6EE9               	movwf	fsr0l,c
  1389  00401E  0E00               	movlw	high ?a_ModZgCO
  1390  004020  6EEA               	movwf	fsr0h,c
  1391  004022  ECEB  F06D         	call	almul_f
  1392                           ;rgl.c: 473: if(m<0) m=0;
  1393  004026  0100               	movlb	__Lparam shr (0+8)
  1394  004028  AFA9               	btfss	(?a_ModZgCO+3)^(__Lparam& (0+65280)),7,b
  1395  00402A  D004               	goto	l81
  1396  00402C  6BA6               	clrf	?a_ModZgCO^(__Lparam& (0+65280)),b
  1397  00402E  6BA7               	clrf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),b
  1398  004030  6BA8               	clrf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),b
  1399  004032  6BA9               	clrf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),b
  1400  004034                     l81:
  1401                           ;rgl.c: 474: m=m/10+PWM.MINPWM;
  1402  004034  0E0A               	movlw	10
  1403  004036  6E04               	movwf	btemp+4,c
  1404  004038  6A05               	clrf	btemp+5,c
  1405  00403A  6A06               	clrf	btemp+6,c
  1406  00403C  6A07               	clrf	btemp+7,c
  1407  00403E  C0A6  F000         	movff	?a_ModZgCO,btemp
  1408  004042  C0A7  F001         	movff	?a_ModZgCO+1,btemp+1
  1409  004046  C0A8  F002         	movff	?a_ModZgCO+2,btemp+2
  1410  00404A  C0A9  F003         	movff	?a_ModZgCO+3,btemp+3
  1411  00404E  ECF4  F06C         	call	aldiv
  1412  004052  C1F1  FFE8         	movff	_PWM+27,wreg
  1413  004056  2400               	addwf	btemp,w,c
  1414  004058  0100               	movlb	__Lparam shr (0+8)
  1415  00405A  6FA6               	movwf	?a_ModZgCO^(__Lparam& (0+65280)),b
  1416  00405C  0E00               	movlw	0
  1417  00405E  2001               	addwfc	btemp+1,w,c
  1418  004060  6FA7               	movwf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),b
  1419  004062  0E00               	movlw	0
  1420  004064  2002               	addwfc	btemp+2,w,c
  1421  004066  6FA8               	movwf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),b
  1422  004068  0E00               	movlw	0
  1423  00406A  2003               	addwfc	btemp+3,w,c
  1424  00406C  6FA9               	movwf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),b
  1425                           ;rgl.c: 475: if(m>0xff)
  1426  00406E  51A9               	movf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),w
  1427  004070  0A80               	xorlw	128
  1428  004072  0F80               	addlw	128
  1429  004074  E108               	bnz	u605
  1430  004076  0E00               	movlw	0
  1431  004078  5DA8               	subwf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),w
  1432  00407A  E105               	bnz	u605
  1433  00407C  0E01               	movlw	1
  1434  00407E  5DA7               	subwf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),w
  1435  004080  E102               	bnz	u605
  1436  004082  0E00               	movlw	0
  1437  004084  5DA6               	subwf	?a_ModZgCO^(__Lparam& (0+65280)),w
  1438  004086                     u605:
  1439                           ;rgl.c: 476: {
  1440  004086  0101               	movlb	_rgl shr (0+8)
  1441  004088  E304               	bnc	L28
  1442  00408A  95F3               	bcf	_rgl& (0+255),2,b
  1443                           ;rgl.c: 478: rgl.tmp_pwm=rgl.xmod;
  1444  00408C  C1FB  F1FC         	movff	_rgl+8,_rgl+9
  1445                           ;rgl.c: 479: return;
  1446  004090  0012               	return	
  1447                           ;rgl.c: 480: }
  1448  004092                     L28:
  1449  004092  A5F3               	btfss	_rgl& (0+255),2,b
  1450  004094  D01C               	goto	l83
  1451  004096  C1FB  F000         	movff	_rgl+8,btemp
  1452  00409A  6A01               	clrf	btemp+1,c
  1453  00409C  6A02               	clrf	btemp+2,c
  1454  00409E  6A03               	clrf	btemp+3,c
  1455  0040A0  0100               	movlb	__Lparam shr (0+8)
  1456  0040A2  51A9               	movf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),w
  1457  0040A4  0A80               	xorlw	128
  1458  0040A6  6E04               	movwf	btemp+4,c
  1459  0040A8  5003               	movf	btemp+3,w,c
  1460  0040AA  0A80               	xorlw	128
  1461  0040AC  5C04               	subwf	btemp+4,w,c
  1462  0040AE  E108               	bnz	u625
  1463  0040B0  5002               	movf	btemp+2,w,c
  1464  0040B2  5DA8               	subwf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),w
  1465  0040B4  E105               	bnz	u625
  1466  0040B6  5001               	movf	btemp+1,w,c
  1467  0040B8  5DA7               	subwf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),w
  1468  0040BA  E102               	bnz	u625
  1469  0040BC  5000               	movf	btemp,w,c
  1470  0040BE  5DA6               	subwf	?a_ModZgCO^(__Lparam& (0+65280)),w
  1471  0040C0                     u625:
  1472  0040C0  E206               	bc	l83
  1473                           ;rgl.c: 482: rgl.srp=(rgl.xmod-m);
  1474  0040C2  0100               	movlb	__Lparam shr (0+8)
  1475  0040C4  51A6               	movf	?a_ModZgCO^(__Lparam& (0+65280)),w
  1476  0040C6  0101               	movlb	(_rgl+8) shr (0+8)
  1477  0040C8  5DFB               	subwf	(_rgl+8)& (0+255),w,b
  1478  0040CA  CFE8 F1FA          	movff	wreg,_rgl+7
  1479  0040CE                     l83:
  1480                           ;rgl.c: 483: m+=rgl.srp;
  1481  0040CE  C1FA  FFE8         	movff	_rgl+7,wreg
  1482  0040D2  0100               	movlb	__Lparam shr (0+8)
  1483  0040D4  27A6               	addwf	?a_ModZgCO^(__Lparam& (0+65280)),f,b
  1484  0040D6  0E01               	movlw	1
  1485  0040D8  B0D8               	btfsc	status,0,c
  1486  0040DA  27A7               	addwf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),f,b
  1487  0040DC  B0D8               	btfsc	status,0,c
  1488  0040DE  27A8               	addwf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),f,b
  1489  0040E0  B0D8               	btfsc	status,0,c
  1490  0040E2  27A9               	addwf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),f,b
  1491                           ;rgl.c: 484: if(m>rgl.xmod) p=rgl.xmod;
  1492  0040E4  C1FB  F000         	movff	_rgl+8,btemp
  1493  0040E8  6A01               	clrf	btemp+1,c
  1494  0040EA  6A02               	clrf	btemp+2,c
  1495  0040EC  6A03               	clrf	btemp+3,c
  1496  0040EE  5003               	movf	btemp+3,w,c
  1497  0040F0  0A80               	xorlw	128
  1498  0040F2  6E04               	movwf	btemp+4,c
  1499  0040F4  51A9               	movf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),w
  1500  0040F6  0A80               	xorlw	128
  1501  0040F8  5C04               	subwf	btemp+4,w,c
  1502  0040FA  E108               	bnz	u645
  1503  0040FC  51A8               	movf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),w
  1504  0040FE  5C02               	subwf	btemp+2,w,c
  1505  004100  E105               	bnz	u645
  1506  004102  51A7               	movf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),w
  1507  004104  5C01               	subwf	btemp+1,w,c
  1508  004106  E102               	bnz	u645
  1509  004108  51A6               	movf	?a_ModZgCO^(__Lparam& (0+65280)),w
  1510  00410A  5C00               	subwf	btemp,w,c
  1511  00410C                     u645:
  1512  00410C  E203               	bc	l84
  1513  00410E  C1FB  FFD9         	movff	_rgl+8,fsr2l
  1514  004112  D003               	goto	l85
  1515  004114                     l84:
  1516                           ;rgl.c: 485: else p=(unsigned char)m;
  1517  004114  0100               	movlb	__Lparam shr (0+8)
  1518  004116  51A6               	movf	?a_ModZgCO^(__Lparam& (0+65280)),w
  1519  004118  6ED9               	movwf	fsr2l,c
  1520  00411A                     l85:
  1521                           ;rgl.c: 486: rgl.fz=0;
  1522  00411A  0101               	movlb	_rgl shr (0+8)
  1523  00411C  95F3               	bcf	_rgl& (0+255),2,b
  1524                           ;rgl.c: 487: rgl.tmp_pwm=p;
  1525  00411E  CFD9 F1FC          	movff	fsr2l,_rgl+9
  1526                           ;rgl.c: 488: }
  1527  004122  0012               	return	
  1528  004124                     __end_of_ModZgCO:
  1529                           ;rgl.c: 532: void ModDkCO(void)
  1530                           ;rgl.c: 533: {
  1531  004124                     _ModDkCO:
  1532  000000                     
  1533                           ;rgl.c: 534: signed long m;
  1534  004124  0101               	movlb	_rgl shr (0+8)
  1535  004126  A5F3               	btfss	_rgl& (0+255),2,b
  1536  004128  0012               	return	
  1537                           ;rgl.c: 539: ada=DtCO.AC_CO-DtCO.DAD_CO;
  1538  00412A  C08F  FFE8         	movff	_DtCO+16,wreg
  1539  00412E  0100               	movlb	(_DtCO+14) shr (0+8)
  1540  004130  5D8D               	subwf	(_DtCO+14)& (0+255),w,b
  1541  004132  0100               	movlb	__Lparam shr (0+8)
  1542  004134  6FA6               	movwf	?a_ModDkCO^(__Lparam& (0+65280)),b
  1543                           ;rgl.c: 540: k=2;
  1544  004136  0E02               	movlw	2
  1545  004138  6FA7               	movwf	(?a_ModDkCO+1)^(__Lparam& (0+65280)),b
  1546                           ;rgl.c: 541: if(Trowna()) return;
  1547  00413A  ECFC  F02E         	call	_Trowna	;wreg free
  1548  00413E  B0D8               	btfsc	status,0,c
  1549  004140  0012               	return	
  1550                           ;rgl.c: 542: if(Tnizsza(0))
  1551  004142  0E00               	movlw	0
  1552  004144  ECD4  F02E         	call	_Tnizsza
  1553  004148  E303               	bnc	l89
  1554                           ;rgl.c: 543: {
  1555  00414A  0E03               	movlw	3
  1556  00414C  0100               	movlb	__Lparam shr (0+8)
  1557  00414E  6FA7               	movwf	(?a_ModDkCO+1)^(__Lparam& (0+65280)),b
  1558  004150                     l89:
  1559                           ;rgl.c: 545: }
  1560  004150  C0A6  F002         	movff	?a_ModDkCO,btemp+2
  1561  004154  6A03               	clrf	btemp+3,c
  1562  004156  BE02               	btfsc	btemp+2,7,c
  1563  004158  0603               	decf	btemp+3,f,c
  1564  00415A  C0A7  F000         	movff	?a_ModDkCO+1,btemp
  1565  00415E  6A01               	clrf	btemp+1,c
  1566  004160  ECB7  F06D         	call	awmul
  1567  004164  C1FA  FFE8         	movff	_rgl+7,wreg
  1568  004168  2404               	addwf	btemp+4,w,c
  1569  00416A  6E00               	movwf	btemp,c
  1570  00416C  0E00               	movlw	0
  1571  00416E  2005               	addwfc	btemp+5,w,c
  1572  004170  6E01               	movwf	btemp+1,c
  1573  004172  0100               	movlb	__Lparam shr (0+8)
  1574  004174  C000  F0A8         	movff	btemp,?a_ModDkCO+2
  1575  004178  C001  F0A9         	movff	btemp+1,?a_ModDkCO+3
  1576  00417C  0E00               	movlw	0
  1577  00417E  BFA9               	btfsc	(?a_ModDkCO+3)^(__Lparam& (0+65280)),7,b
  1578  004180  0EFF               	movlw	-1
  1579  004182  6FAA               	movwf	(?a_ModDkCO+4)^(__Lparam& (0+65280)),b
  1580  004184  6FAB               	movwf	(?a_ModDkCO+5)^(__Lparam& (0+65280)),b
  1581                           ;rgl.c: 547: if(m>rgl.xmod) p=rgl.xmod;
  1582  004186  C1FB  F000         	movff	_rgl+8,btemp
  1583  00418A  6A01               	clrf	btemp+1,c
  1584  00418C  6A02               	clrf	btemp+2,c
  1585  00418E  6A03               	clrf	btemp+3,c
  1586  004190  5003               	movf	btemp+3,w,c
  1587  004192  0A80               	xorlw	128
  1588  004194  6E04               	movwf	btemp+4,c
  1589  004196  51AB               	movf	(?a_ModDkCO+5)^(__Lparam& (0+65280)),w
  1590  004198  0A80               	xorlw	128
  1591  00419A  5C04               	subwf	btemp+4,w,c
  1592  00419C  E108               	bnz	u685
  1593  00419E  51AA               	movf	(?a_ModDkCO+4)^(__Lparam& (0+65280)),w
  1594  0041A0  5C02               	subwf	btemp+2,w,c
  1595  0041A2  E105               	bnz	u685
  1596  0041A4  51A9               	movf	(?a_ModDkCO+3)^(__Lparam& (0+65280)),w
  1597  0041A6  5C01               	subwf	btemp+1,w,c
  1598  0041A8  E102               	bnz	u685
  1599  0041AA  51A8               	movf	(?a_ModDkCO+2)^(__Lparam& (0+65280)),w
  1600  0041AC  5C00               	subwf	btemp,w,c
  1601  0041AE                     u685:
  1602  0041AE  E203               	bc	l90
  1603  0041B0  C1FB  FFD9         	movff	_rgl+8,fsr2l
  1604  0041B4  D01C               	goto	l91
  1605  0041B6                     l90:
  1606                           ;rgl.c: 548: else
  1607  0041B6  C1F1  F000         	movff	_PWM+27,btemp
  1608  0041BA  6A01               	clrf	btemp+1,c
  1609  0041BC  6A02               	clrf	btemp+2,c
  1610  0041BE  6A03               	clrf	btemp+3,c
  1611  0041C0  0100               	movlb	__Lparam shr (0+8)
  1612  0041C2  51AB               	movf	(?a_ModDkCO+5)^(__Lparam& (0+65280)),w
  1613  0041C4  0A80               	xorlw	128
  1614  0041C6  6E04               	movwf	btemp+4,c
  1615  0041C8  5003               	movf	btemp+3,w,c
  1616  0041CA  0A80               	xorlw	128
  1617  0041CC  5C04               	subwf	btemp+4,w,c
  1618  0041CE  E108               	bnz	u695
  1619  0041D0  5002               	movf	btemp+2,w,c
  1620  0041D2  5DAA               	subwf	(?a_ModDkCO+4)^(__Lparam& (0+65280)),w
  1621  0041D4  E105               	bnz	u695
  1622  0041D6  5001               	movf	btemp+1,w,c
  1623  0041D8  5DA9               	subwf	(?a_ModDkCO+3)^(__Lparam& (0+65280)),w
  1624  0041DA  E102               	bnz	u695
  1625  0041DC  5000               	movf	btemp,w,c
  1626  0041DE  5DA8               	subwf	(?a_ModDkCO+2)^(__Lparam& (0+65280)),w
  1627  0041E0                     u695:
  1628  0041E0  E203               	bc	l92
  1629  0041E2  C1F1  FFD9         	movff	_PWM+27,fsr2l
  1630  0041E6  D003               	goto	l91
  1631  0041E8                     l92:
  1632                           ;rgl.c: 550: else p=(unsigned char)m;
  1633  0041E8  0100               	movlb	__Lparam shr (0+8)
  1634  0041EA  51A8               	movf	(?a_ModDkCO+2)^(__Lparam& (0+65280)),w
  1635  0041EC  6ED9               	movwf	fsr2l,c
  1636  0041EE                     l91:
  1637                           ;rgl.c: 551: rgl.tmp_pwm=p;
  1638  0041EE  CFD9 F1FC          	movff	fsr2l,_rgl+9
  1639                           ;rgl.c: 552: }
  1640  0041F2  0012               	return	
  1641  0041F4                     __end_of_ModDkCO:
  1642                           ;rgl.c: 633: void ModPruCO(void)
  1643                           ;rgl.c: 634: {
  1644  0041F4                     _ModPruCO:
  1645  000000                     
  1646                           ;rgl.c: 635: static unsigned char l,m,o,p,q,r,s;
  1647  0041F4  0101               	movlb	_rgl shr (0+8)
  1648  0041F6  B5F3               	btfsc	_rgl& (0+255),2,b
  1649  0041F8  D0F8               	goto	l95
  1650                           ;rgl.c: 640: {
  1651  0041FA  010E               	movlb	F1790 shr (0+8)
  1652  0041FC  6BBA               	clrf	F1790& (0+255),b
  1653                           ;rgl.c: 642: m=0;
  1654  0041FE  010E               	movlb	F1791 shr (0+8)
  1655  004200  6BBB               	clrf	F1791& (0+255),b
  1656                           ;rgl.c: 643: o=0;
  1657  004202  010E               	movlb	F1792 shr (0+8)
  1658  004204  6BBC               	clrf	F1792& (0+255),b
  1659                           ;rgl.c: 644: p=0;
  1660  004206  010E               	movlb	F1793 shr (0+8)
  1661  004208  6BBD               	clrf	F1793& (0+255),b
  1662                           ;rgl.c: 645: if(q<255) q++;
  1663  00420A  CEBE  F000         	movff	F1794,btemp
  1664  00420E  2800               	incf	btemp,w,c
  1665  004210  E002               	bz	l96
  1666  004212  010E               	movlb	F1794 shr (0+8)
  1667  004214  2BBE               	incf	F1794& (0+255),f,b
  1668  004216                     l96:
  1669                           ;rgl.c: 646: if(s<255) s++;
  1670  004216  CEC0  F000         	movff	F1796,btemp
  1671  00421A  2800               	incf	btemp,w,c
  1672  00421C  E002               	bz	l97
  1673  00421E  010E               	movlb	F1796 shr (0+8)
  1674  004220  2BC0               	incf	F1796& (0+255),f,b
  1675  004222                     l97:
  1676                           ;rgl.c: 647: if(DtCO._newPCO) s=0;
  1677  004222  0100               	movlb	(_DtCO+1) shr (0+8)
  1678  004224  AF80               	btfss	(_DtCO+1)& (0+255),7,b
  1679  004226  D002               	goto	l98
  1680  004228  010E               	movlb	F1796 shr (0+8)
  1681  00422A  6BC0               	clrf	F1796& (0+255),b
  1682  00422C                     l98:
  1683                           ;rgl.c: 648: if(Tnizsza(0))
  1684  00422C  0E00               	movlw	0
  1685  00422E  ECD4  F02E         	call	_Tnizsza
  1686  004232  A0D8               	btfss	status,0,c
  1687  004234  0012               	return	
  1688                           ;rgl.c: 649: {
  1689  004236  0E0A               	movlw	10
  1690  004238  ECD4  F02E         	call	_Tnizsza
  1691  00423C  B0D8               	btfsc	status,0,c
  1692  00423E  0012               	return	
  1693                           ;rgl.c: 651: {
  1694  004240  0100               	movlb	__Lparam shr (0+8)
  1695  004242  6BA6               	clrf	?a_ModPruCO^(__Lparam& (0+65280)),b
  1696                           ;rgl.c: 653: if(rgl.tmp_pwm>=pwm_center)
  1697  004244  CEEC  FFE8         	movff	_pwm_center,wreg
  1698  004248  0101               	movlb	(_rgl+9) shr (0+8)
  1699  00424A  5DFC               	subwf	(_rgl+9)& (0+255),w,b
  1700  00424C  E330               	bnc	l101
  1701                           ;rgl.c: 654: {
  1702  00424E  0E05               	movlw	5
  1703  004250  ECD4  F02E         	call	_Tnizsza
  1704  004254  E30A               	bnc	l102
  1705  004256  ECCD  F02E         	call	_Tstoi	;wreg free
  1706  00425A  E307               	bnc	l102
  1707  00425C  0E00               	movlw	0
  1708  00425E  010E               	movlb	F1796 shr (0+8)
  1709  004260  65C0               	cpfsgt	F1796& (0+255),b
  1710  004262  D003               	goto	l102
  1711                           ;rgl.c: 656: {
  1712  004264  6BC0               	clrf	F1796& (0+255),b
  1713                           ;rgl.c: 658: k=20;
  1714  004266  0E14               	movlw	20
  1715  004268  D06B               	goto	L19
  1716                           ;rgl.c: 659: }
  1717  00426A                     l102:
  1718                           ;rgl.c: 660: else
  1719  00426A  0E04               	movlw	4
  1720  00426C  ECD4  F02E         	call	_Tnizsza
  1721  004270  E30A               	bnc	l104
  1722  004272  ECCD  F02E         	call	_Tstoi	;wreg free
  1723  004276  E307               	bnc	l104
  1724  004278  0E00               	movlw	0
  1725  00427A  010E               	movlb	F1796 shr (0+8)
  1726  00427C  65C0               	cpfsgt	F1796& (0+255),b
  1727  00427E  D003               	goto	l104
  1728                           ;rgl.c: 662: {
  1729  004280  6BC0               	clrf	F1796& (0+255),b
  1730                           ;rgl.c: 664: k=15;
  1731  004282  0E0F               	movlw	15
  1732  004284  D05D               	goto	L19
  1733                           ;rgl.c: 665: }
  1734  004286                     l104:
  1735                           ;rgl.c: 666: else
  1736  004286  0E02               	movlw	2
  1737  004288  ECD4  F02E         	call	_Tnizsza
  1738  00428C  E308               	bnc	l106
  1739  00428E  ECCD  F02E         	call	_Tstoi	;wreg free
  1740  004292  E305               	bnc	l106
  1741  004294  0E00               	movlw	0
  1742  004296  010E               	movlb	F1796 shr (0+8)
  1743  004298  65C0               	cpfsgt	F1796& (0+255),b
  1744  00429A  D001               	goto	l106
  1745  00429C  D018               	goto	u1000
  1746                           ;rgl.c: 668: {
  1747                           ;rgl.c: 670: k=10;
  1748                           ;rgl.c: 671: }
  1749  00429E                     l106:
  1750                           ;rgl.c: 672: else
  1751  00429E  ECCD  F02E         	call	_Tstoi	;wreg free
  1752  0042A2  E350               	bnc	l109
  1753  0042A4  0E00               	movlw	0
  1754  0042A6  010E               	movlb	F1796 shr (0+8)
  1755  0042A8  65C0               	cpfsgt	F1796& (0+255),b
  1756  0042AA  D04C               	goto	l109
  1757  0042AC  D03C               	goto	u1180
  1758                           ;rgl.c: 674: {
  1759                           ;rgl.c: 676: k=5;
  1760                           ;rgl.c: 677: }
  1761  0042AE                     l101:
  1762                           ;rgl.c: 679: else
  1763  0042AE  CEED  FFE8         	movff	_pwm_kwr,wreg
  1764  0042B2  0101               	movlb	(_rgl+9) shr (0+8)
  1765  0042B4  5DFC               	subwf	(_rgl+9)& (0+255),w,b
  1766  0042B6  E32C               	bnc	l110
  1767                           ;rgl.c: 682: {
  1768  0042B8  0E05               	movlw	5
  1769  0042BA  ECD4  F02E         	call	_Tnizsza
  1770  0042BE  E30B               	bnc	l111
  1771  0042C0  ECCD  F02E         	call	_Tstoi	;wreg free
  1772  0042C4  E308               	bnc	l111
  1773  0042C6  0E00               	movlw	0
  1774  0042C8  010E               	movlb	F1796 shr (0+8)
  1775  0042CA  65C0               	cpfsgt	F1796& (0+255),b
  1776  0042CC  D004               	goto	l111
  1777  0042CE                     u1000:
  1778                           ;rgl.c: 684: {
  1779  0042CE  010E               	movlb	F1796 shr (0+8)
  1780  0042D0  6BC0               	clrf	F1796& (0+255),b
  1781                           ;rgl.c: 686: k=10;
  1782  0042D2  0E0A               	movlw	10
  1783  0042D4  D035               	goto	L19
  1784                           ;rgl.c: 687: }
  1785  0042D6                     l111:
  1786                           ;rgl.c: 688: else
  1787  0042D6  0E04               	movlw	4
  1788  0042D8  ECD4  F02E         	call	_Tnizsza
  1789  0042DC  E30A               	bnc	l113
  1790  0042DE  ECCD  F02E         	call	_Tstoi	;wreg free
  1791  0042E2  E307               	bnc	l113
  1792  0042E4  0E00               	movlw	0
  1793  0042E6  010E               	movlb	F1796 shr (0+8)
  1794  0042E8  65C0               	cpfsgt	F1796& (0+255),b
  1795  0042EA  D003               	goto	l113
  1796                           ;rgl.c: 690: {
  1797  0042EC  6BC0               	clrf	F1796& (0+255),b
  1798                           ;rgl.c: 692: k=8;
  1799  0042EE  0E08               	movlw	8
  1800  0042F0  D027               	goto	L19
  1801                           ;rgl.c: 693: }
  1802  0042F2                     l113:
  1803                           ;rgl.c: 694: else
  1804  0042F2  0E02               	movlw	2
  1805  0042F4  ECD4  F02E         	call	_Tnizsza
  1806  0042F8  E308               	bnc	l115
  1807  0042FA  ECCD  F02E         	call	_Tstoi	;wreg free
  1808  0042FE  E305               	bnc	l115
  1809  004300  0E00               	movlw	0
  1810  004302  010E               	movlb	F1796 shr (0+8)
  1811  004304  65C0               	cpfsgt	F1796& (0+255),b
  1812  004306  D001               	goto	l115
  1813  004308  D00E               	goto	u1180
  1814                           ;rgl.c: 696: {
  1815                           ;rgl.c: 698: k=5;
  1816                           ;rgl.c: 699: }
  1817  00430A                     l115:
  1818                           ;rgl.c: 700: else
  1819  00430A  ECCD  F02E         	call	_Tstoi	;wreg free
  1820  00430E  D011               	goto	L22
  1821                           ;rgl.c: 702: {
  1822                           ;rgl.c: 704: k=2;
  1823                           ;rgl.c: 705: }
  1824  004310                     l110:
  1825                           ;rgl.c: 707: else
  1826  004310  0E02               	movlw	2
  1827  004312  ECD4  F02E         	call	_Tnizsza
  1828  004316  E30B               	bnc	l119
  1829  004318  ECCD  F02E         	call	_Tstoi	;wreg free
  1830  00431C  E308               	bnc	l119
  1831  00431E  0E00               	movlw	0
  1832  004320  010E               	movlb	F1796 shr (0+8)
  1833  004322  65C0               	cpfsgt	F1796& (0+255),b
  1834  004324  D004               	goto	l119
  1835  004326                     u1180:
  1836                           ;rgl.c: 710: {
  1837  004326  010E               	movlb	F1796 shr (0+8)
  1838  004328  6BC0               	clrf	F1796& (0+255),b
  1839                           ;rgl.c: 712: k=5;
  1840  00432A  0E05               	movlw	5
  1841  00432C  D009               	goto	L19
  1842                           ;rgl.c: 713: }
  1843  00432E                     l119:
  1844                           ;rgl.c: 714: else
  1845  00432E  ECCD  F02E         	call	_Tstoi	;wreg free
  1846  004332                     L22:
  1847  004332  E308               	bnc	l109
  1848  004334  0E00               	movlw	0
  1849  004336  010E               	movlb	F1796 shr (0+8)
  1850  004338  65C0               	cpfsgt	F1796& (0+255),b
  1851  00433A  D004               	goto	l109
  1852                           ;rgl.c: 716: {
  1853  00433C  6BC0               	clrf	F1796& (0+255),b
  1854                           ;rgl.c: 718: k=2;
  1855  00433E  0E02               	movlw	2
  1856  004340                     L19:
  1857  004340  0100               	movlb	__Lparam shr (0+8)
  1858  004342  6FA6               	movwf	?a_ModPruCO^(__Lparam& (0+65280)),b
  1859  004344                     l109:
  1860                           ;rgl.c: 719: }
  1861  004344  CEED  FFE8         	movff	_pwm_kwr,wreg
  1862  004348  0101               	movlb	(_rgl+9) shr (0+8)
  1863  00434A  5DFC               	subwf	(_rgl+9)& (0+255),w,b
  1864  00434C  E316               	bnc	l122
  1865                           ;rgl.c: 723: {
  1866  00434E  0E01               	movlw	1
  1867  004350  ECA5  F02E         	call	_Trosnie
  1868  004354  E310               	bnc	l123
  1869  004356  0E00               	movlw	0
  1870  004358  010E               	movlb	F1796 shr (0+8)
  1871  00435A  65C0               	cpfsgt	F1796& (0+255),b
  1872  00435C  D00C               	goto	l123
  1873                           ;rgl.c: 725: {
  1874  00435E  6BC0               	clrf	F1796& (0+255),b
  1875                           ;rgl.c: 727: k=10;
  1876  004360  0E0A               	movlw	10
  1877  004362  0100               	movlb	__Lparam shr (0+8)
  1878  004364  6FA6               	movwf	?a_ModPruCO^(__Lparam& (0+65280)),b
  1879                           ;rgl.c: 728: if(Trosnie(2)) k=8;
  1880  004366  0E02               	movlw	2
  1881  004368  ECA5  F02E         	call	_Trosnie
  1882  00436C  E306               	bnc	l122
  1883  00436E  0E08               	movlw	8
  1884  004370  0100               	movlb	__Lparam shr (0+8)
  1885  004372  6FA6               	movwf	?a_ModPruCO^(__Lparam& (0+65280)),b
  1886                           ;rgl.c: 729: }
  1887  004374  D002               	goto	l122
  1888  004376                     l123:
  1889                           ;rgl.c: 730: else
  1890  004376  0101               	movlb	(_rgl+6) shr (0+8)
  1891  004378  6BF9               	clrf	(_rgl+6)& (0+255),b
  1892  00437A                     l122:
  1893                           ;rgl.c: 732: }
  1894  00437A  C1FB  FFE8         	movff	_rgl+8,wreg
  1895  00437E  0101               	movlb	(_PWM+1) shr (0+8)
  1896  004380  61D7               	cpfslt	(_PWM+1)& (0+255),b
  1897  004382  D006               	goto	l126
  1898  004384  C1D7  FFE8         	movff	_PWM+1,wreg
  1899  004388  0101               	movlb	(_rgl+8) shr (0+8)
  1900  00438A  5DFB               	subwf	(_rgl+8)& (0+255),w,b
  1901  00438C  6ED9               	movwf	fsr2l,c
  1902  00438E  D001               	goto	l127
  1903  004390                     l126:
  1904                           ;rgl.c: 734: else tmp=0;
  1905  004390  6AD9               	clrf	fsr2l,c
  1906  004392                     l127:
  1907                           ;rgl.c: 735: if(tmp&&k>tmp) k=tmp;
  1908  004392  50D9               	movf	fsr2l,w,c
  1909  004394  E00B               	bz	l128
  1910  004396  50D9               	movf	fsr2l,w,c
  1911  004398  0100               	movlb	__Lparam shr (0+8)
  1912  00439A  94D8               	bcf	status,2,c
  1913  00439C  90D8               	bcf	status,0,c
  1914  00439E  AFA6               	btfss	?a_ModPruCO^(__Lparam& (0+65280)),7,b
  1915  0043A0  5DA6               	subwf	?a_ModPruCO^(__Lparam& (0+65280)),w
  1916  0043A2  B4D8               	btfsc	status,2,c
  1917  0043A4  90D8               	bcf	status,0,c
  1918  0043A6  E302               	bnc	l128
  1919  0043A8  50D9               	movf	fsr2l,w,c
  1920  0043AA  6FA6               	movwf	?a_ModPruCO^(__Lparam& (0+65280)),b
  1921  0043AC                     l128:
  1922                           ;rgl.c: 736: if(rgl.srp+k>PWM.MAXPWM) rgl.srp=PW
      +                          M.MAXPWM;
  1923  0043AC  C1FA  FFE8         	movff	_rgl+7,wreg
  1924  0043B0  0100               	movlb	__Lparam shr (0+8)
  1925  0043B2  25A6               	addwf	?a_ModPruCO^(__Lparam& (0+65280)),w
  1926  0043B4  6E02               	movwf	btemp+2,c
  1927  0043B6  6A03               	clrf	btemp+3,c
  1928  0043B8  B0D8               	btfsc	status,0,c
  1929  0043BA  2A03               	incf	btemp+3,f,c
  1930  0043BC  BFA6               	btfsc	?a_ModPruCO^(__Lparam& (0+65280)),7,b
  1931  0043BE  0603               	decf	btemp+3,f,c
  1932  0043C0  C1F2  F000         	movff	_PWM+28,btemp
  1933  0043C4  6A01               	clrf	btemp+1,c
  1934  0043C6  5001               	movf	btemp+1,w,c
  1935  0043C8  0A80               	xorlw	128
  1936  0043CA  6E04               	movwf	btemp+4,c
  1937  0043CC  5003               	movf	btemp+3,w,c
  1938  0043CE  0A80               	xorlw	128
  1939  0043D0  5C04               	subwf	btemp+4,w,c
  1940  0043D2  E102               	bnz	u1315
  1941  0043D4  5002               	movf	btemp+2,w,c
  1942  0043D6  5C00               	subwf	btemp,w,c
  1943  0043D8                     u1315:
  1944  0043D8  E203               	bc	l129
  1945  0043DA  C1F2  F1FA         	movff	_PWM+28,_rgl+7
  1946  0043DE  0012               	return	
  1947  0043E0                     l129:
  1948                           ;rgl.c: 737: else rgl.srp+=k;
  1949  0043E0  0100               	movlb	__Lparam shr (0+8)
  1950  0043E2  51A6               	movf	?a_ModPruCO^(__Lparam& (0+65280)),w
  1951  0043E4  0101               	movlb	(_rgl+7) shr (0+8)
  1952  0043E6  27FA               	addwf	(_rgl+7)& (0+255),f,b
  1953                           ;rgl.c: 738: return;
  1954  0043E8  0012               	return	
  1955                           ;rgl.c: 740: else return;
  1956                           ;rgl.c: 742: else return;
  1957  0043EA                     l95:
  1958                           ;rgl.c: 744: else
  1959  0043EA  010E               	movlb	F1794 shr (0+8)
  1960  0043EC  6BBE               	clrf	F1794& (0+255),b
  1961                           ;rgl.c: 747: r=0;
  1962  0043EE  010E               	movlb	F1795 shr (0+8)
  1963  0043F0  6BBF               	clrf	F1795& (0+255),b
  1964                           ;rgl.c: 748: s=0;
  1965  0043F2  010E               	movlb	F1796 shr (0+8)
  1966  0043F4  6BC0               	clrf	F1796& (0+255),b
  1967                           ;rgl.c: 749: if(m<255) m++;
  1968  0043F6  CEBB  F000         	movff	F1791,btemp
  1969  0043FA  2800               	incf	btemp,w,c
  1970  0043FC  E002               	bz	l134
  1971  0043FE  010E               	movlb	F1791 shr (0+8)
  1972  004400  2BBB               	incf	F1791& (0+255),f,b
  1973  004402                     l134:
  1974                           ;rgl.c: 750: if(p<255) p++;
  1975  004402  CEBD  F000         	movff	F1793,btemp
  1976  004406  2800               	incf	btemp,w,c
  1977  004408  E002               	bz	l135
  1978  00440A  010E               	movlb	F1793 shr (0+8)
  1979  00440C  2BBD               	incf	F1793& (0+255),f,b
  1980  00440E                     l135:
  1981                           ;rgl.c: 751: if(o<255) o++;
  1982  00440E  CEBC  F000         	movff	F1792,btemp
  1983  004412  2800               	incf	btemp,w,c
  1984  004414  E002               	bz	l136
  1985  004416  010E               	movlb	F1792 shr (0+8)
  1986  004418  2BBC               	incf	F1792& (0+255),f,b
  1987  00441A                     l136:
  1988                           ;rgl.c: 752: if(DtCO.DAD_CO>DtCO.AC_CO)
  1989  00441A  C08F  FFE8         	movff	_DtCO+16,wreg
  1990  00441E  0100               	movlb	(_DtCO+14) shr (0+8)
  1991  004420  618D               	cpfslt	(_DtCO+14)& (0+255),b
  1992  004422  D067               	goto	l137
  1993                           ;rgl.c: 753: {
  1994  004424  0100               	movlb	__Lparam shr (0+8)
  1995  004426  6BA6               	clrf	?a_ModPruCO^(__Lparam& (0+65280)),b
  1996                           ;rgl.c: 755: if(Trosnie(0))
  1997  004428  0E00               	movlw	0
  1998  00442A  ECA5  F02E         	call	_Trosnie
  1999  00442E  E310               	bnc	l138
  2000                           ;rgl.c: 756: {
  2001  004430  0E01               	movlw	1
  2002  004432  010E               	movlb	F1791 shr (0+8)
  2003  004434  65BB               	cpfsgt	F1791& (0+255),b
  2004  004436  D02F               	goto	l140
  2005                           ;rgl.c: 758: {
  2006  004438  010E               	movlb	F1793 shr (0+8)
  2007  00443A  6BBD               	clrf	F1793& (0+255),b
  2008                           ;rgl.c: 760: o=0;
  2009  00443C  010E               	movlb	F1792 shr (0+8)
  2010  00443E  6BBC               	clrf	F1792& (0+255),b
  2011                           ;rgl.c: 761: l=0;
  2012  004440  010E               	movlb	F1790 shr (0+8)
  2013  004442  6BBA               	clrf	F1790& (0+255),b
  2014                           ;rgl.c: 762: m=0;
  2015  004444  010E               	movlb	F1791 shr (0+8)
  2016  004446  6BBB               	clrf	F1791& (0+255),b
  2017                           ;rgl.c: 763: k=2;
  2018  004448  0E02               	movlw	2
  2019  00444A  0100               	movlb	__Lparam shr (0+8)
  2020  00444C  6FA6               	movwf	?a_ModPruCO^(__Lparam& (0+65280)),b
  2021                           ;rgl.c: 764: }
  2022  00444E  D023               	goto	l140
  2023  004450                     l138:
  2024                           ;rgl.c: 766: else
  2025  004450  0E01               	movlw	1
  2026  004452  ECE1  F02E         	call	_Twyzsza
  2027  004456  E31D               	bnc	l141
  2028                           ;rgl.c: 768: {
  2029  004458  ECCD  F02E         	call	_Tstoi	;wreg free
  2030  00445C  E31C               	bnc	l140
  2031                           ;rgl.c: 770: {
  2032  00445E  0E01               	movlw	1
  2033  004460  010E               	movlb	F1790 shr (0+8)
  2034  004462  65BA               	cpfsgt	F1790& (0+255),b
  2035  004464  D00A               	goto	l143
  2036                           ;rgl.c: 772: {
  2037  004466  0100               	movlb	__Lparam shr (0+8)
  2038  004468  6FA6               	movwf	?a_ModPruCO^(__Lparam& (0+65280)),b
  2039                           ;rgl.c: 774: if(Twyzsza(3)) k=15;
  2040  00446A  0E03               	movlw	3
  2041  00446C  ECE1  F02E         	call	_Twyzsza
  2042  004470  E310               	bnc	l141
  2043  004472  0E0F               	movlw	15
  2044  004474  0100               	movlb	__Lparam shr (0+8)
  2045  004476  6FA6               	movwf	?a_ModPruCO^(__Lparam& (0+65280)),b
  2046  004478  D00C               	goto	l141
  2047                           ;rgl.c: 775: l=0;
  2048                           ;rgl.c: 776: }
  2049  00447A                     l143:
  2050                           ;rgl.c: 777: else
  2051  00447A  0100               	movlb	__Lparam shr (0+8)
  2052  00447C  6BA6               	clrf	?a_ModPruCO^(__Lparam& (0+65280)),b
  2053                           ;rgl.c: 780: if(Twyzsza(2)) k=5;
  2054  00447E  0E02               	movlw	2
  2055  004480  ECE1  F02E         	call	_Twyzsza
  2056  004484  E303               	bnc	l146
  2057  004486  0E05               	movlw	5
  2058  004488  0100               	movlb	__Lparam shr (0+8)
  2059  00448A  6FA6               	movwf	?a_ModPruCO^(__Lparam& (0+65280)),b
  2060  00448C                     l146:
  2061                           ;rgl.c: 781: l++;
  2062  00448C  010E               	movlb	F1790 shr (0+8)
  2063  00448E  2BBA               	incf	F1790& (0+255),f,b
  2064                           ;rgl.c: 782: }
  2065  004490  D002               	goto	l140
  2066  004492                     l141:
  2067  004492  010E               	movlb	F1790 shr (0+8)
  2068  004494  6BBA               	clrf	F1790& (0+255),b
  2069  004496                     l140:
  2070                           ;rgl.c: 785: if(rgl.srp>PWM.MAXPWM) rgl.srp=PWM.
      +                          MAXPWM;
  2071  004496  C1FA  FFE8         	movff	_rgl+7,wreg
  2072  00449A  0101               	movlb	(_PWM+28) shr (0+8)
  2073  00449C  61F2               	cpfslt	(_PWM+28)& (0+255),b
  2074  00449E  D002               	goto	l148
  2075  0044A0  C1F2  F1FA         	movff	_PWM+28,_rgl+7
  2076  0044A4                     l148:
  2077                           ;rgl.c: 786: if(rgl.srp-k<PWM.MINPWM) rgl.srp=PW
      +                          M.MINPWM;
  2078  0044A4  C1F1  F000         	movff	_PWM+27,btemp
  2079  0044A8  6A01               	clrf	btemp+1,c
  2080  0044AA  C1FA  F002         	movff	_rgl+7,btemp+2
  2081  0044AE  0100               	movlb	__Lparam shr (0+8)
  2082  0044B0  51A6               	movf	?a_ModPruCO^(__Lparam& (0+65280)),w
  2083  0044B2  5C02               	subwf	btemp+2,w,c
  2084  0044B4  6EF6               	movwf	tblptrl,c
  2085  0044B6  6AF7               	clrf	tblptrh,c
  2086  0044B8  B0D8               	btfsc	status,0,c
  2087  0044BA  2AF7               	incf	tblptrh,f,c
  2088  0044BC  AFA6               	btfss	?a_ModPruCO^(__Lparam& (0+65280)),7,b
  2089  0044BE  06F7               	decf	tblptrh,f,c
  2090  0044C0  50F7               	movf	tblptrh,w,c
  2091  0044C2  0A80               	xorlw	128
  2092  0044C4  6E02               	movwf	btemp+2,c
  2093  0044C6  5001               	movf	btemp+1,w,c
  2094  0044C8  0A80               	xorlw	128
  2095  0044CA  5C02               	subwf	btemp+2,w,c
  2096  0044CC  E102               	bnz	u1445
  2097  0044CE  5000               	movf	btemp,w,c
  2098  0044D0  5CF6               	subwf	tblptrl,w,c
  2099  0044D2                     u1445:
  2100  0044D2  E203               	bc	l149
  2101  0044D4  C1F1  F1FA         	movff	_PWM+27,_rgl+7
  2102  0044D8  D004               	goto	l150
  2103  0044DA                     l149:
  2104                           ;rgl.c: 787: else rgl.srp-=k;
  2105  0044DA  0100               	movlb	__Lparam shr (0+8)
  2106  0044DC  51A6               	movf	?a_ModPruCO^(__Lparam& (0+65280)),w
  2107  0044DE  0101               	movlb	(_rgl+7) shr (0+8)
  2108  0044E0  5FFA               	subwf	(_rgl+7)& (0+255),f,b
  2109  0044E2                     l150:
  2110                           ;rgl.c: 788: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.s
      +                          rp;
  2111  0044E2  C1FA  FFE8         	movff	_rgl+7,wreg
  2112  0044E6  0101               	movlb	(_rgl+8) shr (0+8)
  2113  0044E8  61FB               	cpfslt	(_rgl+8)& (0+255),b
  2114  0044EA  0012               	return	
  2115  0044EC  C1FA  F1FB         	movff	_rgl+7,_rgl+8
  2116                           ;rgl.c: 789: return;
  2117  0044F0  0012               	return	
  2118  0044F2                     l137:
  2119                           ;rgl.c: 791: else
  2120  0044F2  0100               	movlb	__Lparam shr (0+8)
  2121  0044F4  6BA6               	clrf	?a_ModPruCO^(__Lparam& (0+65280)),b
  2122                           ;rgl.c: 794: if(Tmaleje(0))
  2123  0044F6  0E00               	movlw	0
  2124  0044F8  ECB2  F02E         	call	_Tmaleje
  2125  0044FC  E310               	bnc	l153
  2126                           ;rgl.c: 795: {
  2127  0044FE  0E01               	movlw	1
  2128  004500  010E               	movlb	F1791 shr (0+8)
  2129  004502  65BB               	cpfsgt	F1791& (0+255),b
  2130  004504  D022               	goto	l155
  2131                           ;rgl.c: 797: {
  2132  004506  010E               	movlb	F1793 shr (0+8)
  2133  004508  6BBD               	clrf	F1793& (0+255),b
  2134                           ;rgl.c: 799: o=0;
  2135  00450A  010E               	movlb	F1792 shr (0+8)
  2136  00450C  6BBC               	clrf	F1792& (0+255),b
  2137                           ;rgl.c: 800: l=0;
  2138  00450E  010E               	movlb	F1790 shr (0+8)
  2139  004510  6BBA               	clrf	F1790& (0+255),b
  2140                           ;rgl.c: 801: m=0;
  2141  004512  010E               	movlb	F1791 shr (0+8)
  2142  004514  6BBB               	clrf	F1791& (0+255),b
  2143                           ;rgl.c: 802: k=5;
  2144  004516  0E05               	movlw	5
  2145  004518  0100               	movlb	__Lparam shr (0+8)
  2146  00451A  6FA6               	movwf	?a_ModPruCO^(__Lparam& (0+65280)),b
  2147                           ;rgl.c: 803: }
  2148  00451C  D016               	goto	l155
  2149  00451E                     l153:
  2150                           ;rgl.c: 805: else
  2151  00451E  0E00               	movlw	0
  2152  004520  ECD4  F02E         	call	_Tnizsza
  2153  004524  E310               	bnc	l156
  2154                           ;rgl.c: 807: {
  2155  004526  ECCD  F02E         	call	_Tstoi	;wreg free
  2156  00452A  E30F               	bnc	l155
  2157                           ;rgl.c: 809: {
  2158  00452C  0E02               	movlw	2
  2159  00452E  010E               	movlb	F1790 shr (0+8)
  2160  004530  65BA               	cpfsgt	F1790& (0+255),b
  2161  004532  D004               	goto	l158
  2162                           ;rgl.c: 811: {
  2163  004534  0E05               	movlw	5
  2164  004536  0100               	movlb	__Lparam shr (0+8)
  2165  004538  6FA6               	movwf	?a_ModPruCO^(__Lparam& (0+65280)),b
  2166  00453A  D005               	goto	l156
  2167                           ;rgl.c: 813: l=0;
  2168                           ;rgl.c: 814: }
  2169  00453C                     l158:
  2170                           ;rgl.c: 815: else
  2171  00453C  0100               	movlb	__Lparam shr (0+8)
  2172  00453E  6BA6               	clrf	?a_ModPruCO^(__Lparam& (0+65280)),b
  2173                           ;rgl.c: 818: l++;
  2174  004540  010E               	movlb	F1790 shr (0+8)
  2175  004542  2BBA               	incf	F1790& (0+255),f,b
  2176                           ;rgl.c: 819: }
  2177  004544  D002               	goto	l155
  2178  004546                     l156:
  2179  004546  010E               	movlb	F1790 shr (0+8)
  2180  004548  6BBA               	clrf	F1790& (0+255),b
  2181  00454A                     l155:
  2182                           ;rgl.c: 822: if(rgl.srp+k>PWM.MAXPWM) rgl.srp=PW
      +                          M.MAXPWM;
  2183  00454A  C1FA  FFE8         	movff	_rgl+7,wreg
  2184  00454E  0100               	movlb	__Lparam shr (0+8)
  2185  004550  25A6               	addwf	?a_ModPruCO^(__Lparam& (0+65280)),w
  2186  004552  6E02               	movwf	btemp+2,c
  2187  004554  6A03               	clrf	btemp+3,c
  2188  004556  B0D8               	btfsc	status,0,c
  2189  004558  2A03               	incf	btemp+3,f,c
  2190  00455A  BFA6               	btfsc	?a_ModPruCO^(__Lparam& (0+65280)),7,b
  2191  00455C  0603               	decf	btemp+3,f,c
  2192  00455E  C1F2  F000         	movff	_PWM+28,btemp
  2193  004562  6A01               	clrf	btemp+1,c
  2194  004564  5001               	movf	btemp+1,w,c
  2195  004566  0A80               	xorlw	128
  2196  004568  6E04               	movwf	btemp+4,c
  2197  00456A  5003               	movf	btemp+3,w,c
  2198  00456C  0A80               	xorlw	128
  2199  00456E  5C04               	subwf	btemp+4,w,c
  2200  004570  E102               	bnz	u1515
  2201  004572  5002               	movf	btemp+2,w,c
  2202  004574  5C00               	subwf	btemp,w,c
  2203  004576                     u1515:
  2204  004576  E203               	bc	l161
  2205  004578  C1F2  F1FA         	movff	_PWM+28,_rgl+7
  2206  00457C  D004               	goto	l162
  2207  00457E                     l161:
  2208                           ;rgl.c: 823: else rgl.srp+=k;
  2209  00457E  0100               	movlb	__Lparam shr (0+8)
  2210  004580  51A6               	movf	?a_ModPruCO^(__Lparam& (0+65280)),w
  2211  004582  0101               	movlb	(_rgl+7) shr (0+8)
  2212  004584  27FA               	addwf	(_rgl+7)& (0+255),f,b
  2213  004586                     l162:
  2214                           ;rgl.c: 824: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.s
      +                          rp;
  2215  004586  C1FA  FFE8         	movff	_rgl+7,wreg
  2216  00458A  0101               	movlb	(_rgl+8) shr (0+8)
  2217  00458C  61FB               	cpfslt	(_rgl+8)& (0+255),b
  2218  00458E  0012               	return	
  2219  004590  C1FA  F1FB         	movff	_rgl+7,_rgl+8
  2220                           ;rgl.c: 825: return;
  2221  004594  0012               	return	
  2222                           ;rgl.c: 826: }
  2223  004596                     __end_of_ModPruCO:
  2224                           ;rgl.c: 853: void IncMaxCO(void)
  2225                           ;rgl.c: 854: {
  2226  004596                     _IncMaxCO:
  2227  000000                     
  2228                           ;rgl.c: 855: unsigned char k;
  2229  004596  0101               	movlb	_rgl shr (0+8)
  2230  004598  A5F3               	btfss	_rgl& (0+255),2,b
  2231  00459A  D008               	goto	l165
  2232                           ;rgl.c: 860: {
  2233  00459C  C1FB  FFE8         	movff	_rgl+8,wreg
  2234  0045A0  0101               	movlb	(_PWM+28) shr (0+8)
  2235  0045A2  61F2               	cpfslt	(_PWM+28)& (0+255),b
  2236  0045A4  0012               	return	
  2237  0045A6  C1F2  F1FB         	movff	_PWM+28,_rgl+8
  2238                           ;rgl.c: 862: return;
  2239  0045AA  0012               	return	
  2240  0045AC                     l165:
  2241                           ;rgl.c: 863: }
  2242  0045AC  0E02               	movlw	2
  2243  0045AE  ECA5  F02E         	call	_Trosnie
  2244  0045B2  E320               	bnc	l167
  2245  0045B4  0101               	movlb	_rgl shr (0+8)
  2246  0045B6  B7F3               	btfsc	_rgl& (0+255),3,b
  2247  0045B8  D01D               	goto	l167
  2248                           ;rgl.c: 867: {
  2249  0045BA  0101               	movlb	_rgl shr (0+8)
  2250  0045BC  87F3               	bsf	_rgl& (0+255),3,b
  2251                           ;rgl.c: 869: k=5;
  2252  0045BE  0E05               	movlw	5
  2253  0045C0  6ED9               	movwf	fsr2l,c
  2254                           ;rgl.c: 870: if(rgl.srp+k>PWM.MAXPWM) rgl.srp=PW
      +                          M.MAXPWM;
  2255  0045C2  C1FA  F002         	movff	_rgl+7,btemp+2
  2256  0045C6  6A03               	clrf	btemp+3,c
  2257  0045C8  2602               	addwf	btemp+2,f,c
  2258  0045CA  0E00               	movlw	0
  2259  0045CC  2203               	addwfc	btemp+3,f,c
  2260  0045CE  C1F2  F000         	movff	_PWM+28,btemp
  2261  0045D2  6A01               	clrf	btemp+1,c
  2262  0045D4  5001               	movf	btemp+1,w,c
  2263  0045D6  0A80               	xorlw	128
  2264  0045D8  6E04               	movwf	btemp+4,c
  2265  0045DA  5003               	movf	btemp+3,w,c
  2266  0045DC  0A80               	xorlw	128
  2267  0045DE  5C04               	subwf	btemp+4,w,c
  2268  0045E0  E102               	bnz	u1585
  2269  0045E2  5002               	movf	btemp+2,w,c
  2270  0045E4  5C00               	subwf	btemp,w,c
  2271  0045E6                     u1585:
  2272  0045E6  E203               	bc	l168
  2273  0045E8  C1F2  F1FA         	movff	_PWM+28,_rgl+7
  2274  0045EC  D003               	goto	l167
  2275  0045EE                     l168:
  2276                           ;rgl.c: 871: else rgl.srp+=k;
  2277  0045EE  0101               	movlb	(_rgl+7) shr (0+8)
  2278  0045F0  0E05               	movlw	5
  2279  0045F2  27FA               	addwf	(_rgl+7)& (0+255),f,b
  2280  0045F4                     l167:
  2281                           ;rgl.c: 873: }
  2282  0045F4  0E03               	movlw	3
  2283  0045F6  ECA5  F02E         	call	_Trosnie
  2284  0045FA  E320               	bnc	l170
  2285  0045FC  0101               	movlb	_rgl shr (0+8)
  2286  0045FE  B9F3               	btfsc	_rgl& (0+255),4,b
  2287  004600  D01D               	goto	l170
  2288                           ;rgl.c: 875: {
  2289  004602  0101               	movlb	_rgl shr (0+8)
  2290  004604  89F3               	bsf	_rgl& (0+255),4,b
  2291                           ;rgl.c: 877: k=8;
  2292  004606  0E08               	movlw	8
  2293  004608  6ED9               	movwf	fsr2l,c
  2294                           ;rgl.c: 878: if(rgl.srp+k>PWM.MAXPWM) rgl.srp=PW
      +                          M.MAXPWM;
  2295  00460A  C1FA  F002         	movff	_rgl+7,btemp+2
  2296  00460E  6A03               	clrf	btemp+3,c
  2297  004610  2602               	addwf	btemp+2,f,c
  2298  004612  0E00               	movlw	0
  2299  004614  2203               	addwfc	btemp+3,f,c
  2300  004616  C1F2  F000         	movff	_PWM+28,btemp
  2301  00461A  6A01               	clrf	btemp+1,c
  2302  00461C  5001               	movf	btemp+1,w,c
  2303  00461E  0A80               	xorlw	128
  2304  004620  6E04               	movwf	btemp+4,c
  2305  004622  5003               	movf	btemp+3,w,c
  2306  004624  0A80               	xorlw	128
  2307  004626  5C04               	subwf	btemp+4,w,c
  2308  004628  E102               	bnz	u1625
  2309  00462A  5002               	movf	btemp+2,w,c
  2310  00462C  5C00               	subwf	btemp,w,c
  2311  00462E                     u1625:
  2312  00462E  E203               	bc	l171
  2313  004630  C1F2  F1FA         	movff	_PWM+28,_rgl+7
  2314  004634  D003               	goto	l170
  2315  004636                     l171:
  2316                           ;rgl.c: 879: else rgl.srp+=k;
  2317  004636  0101               	movlb	(_rgl+7) shr (0+8)
  2318  004638  0E08               	movlw	8
  2319  00463A  27FA               	addwf	(_rgl+7)& (0+255),f,b
  2320  00463C                     l170:
  2321                           ;rgl.c: 880: }
  2322  00463C  CEED  FFE8         	movff	_pwm_kwr,wreg
  2323  004640  0101               	movlb	(_rgl+9) shr (0+8)
  2324  004642  5DFC               	subwf	(_rgl+9)& (0+255),w,b
  2325  004644  E304               	bnc	l173
  2326                           ;rgl.c: 884: {
  2327  004646  0E02               	movlw	2
  2328  004648  ECA5  F02E         	call	_Trosnie
  2329  00464C  D003               	goto	L23
  2330                           ;rgl.c: 886: }
  2331  00464E                     l173:
  2332                           ;rgl.c: 887: else
  2333  00464E  0E01               	movlw	1
  2334  004650  ECA5  F02E         	call	_Trosnie
  2335  004654                     L23:
  2336  004654  B0D8               	btfsc	status,0,c
  2337  004656  0012               	return	
  2338                           ;rgl.c: 890: }
  2339  004658  0E05               	movlw	5
  2340  00465A  6ED9               	movwf	fsr2l,c
  2341                           ;rgl.c: 892: if(rgl.slow_inc) k=2;
  2342  00465C  0101               	movlb	(_rgl+1) shr (0+8)
  2343  00465E  A3F4               	btfss	(_rgl+1)& (0+255),1,b
  2344  004660  D002               	goto	l177
  2345  004662  0E02               	movlw	2
  2346  004664  6ED9               	movwf	fsr2l,c
  2347  004666                     l177:
  2348                           ;rgl.c: 893: if(rgl.xmod+k>PWM.MAXPWM)
  2349  004666  50D9               	movf	fsr2l,w,c
  2350  004668  C1FB  F002         	movff	_rgl+8,btemp+2
  2351  00466C  6A03               	clrf	btemp+3,c
  2352  00466E  2602               	addwf	btemp+2,f,c
  2353  004670  0E00               	movlw	0
  2354  004672  2203               	addwfc	btemp+3,f,c
  2355  004674  C1F2  F000         	movff	_PWM+28,btemp
  2356  004678  6A01               	clrf	btemp+1,c
  2357  00467A  5001               	movf	btemp+1,w,c
  2358  00467C  0A80               	xorlw	128
  2359  00467E  6E04               	movwf	btemp+4,c
  2360  004680  5003               	movf	btemp+3,w,c
  2361  004682  0A80               	xorlw	128
  2362  004684  5C04               	subwf	btemp+4,w,c
  2363  004686  E102               	bnz	u1675
  2364  004688  5002               	movf	btemp+2,w,c
  2365  00468A  5C00               	subwf	btemp,w,c
  2366  00468C                     u1675:
  2367  00468C  E204               	bc	l178
  2368                           ;rgl.c: 894: {
  2369  00468E  C1F2  F1FB         	movff	_PWM+28,_rgl+8
  2370                           ;rgl.c: 896: PmpToUP();
  2371  004692  EF72  F05D         	goto	_PmpToUP	;wreg free
  2372                           ;rgl.c: 897: }
  2373  004696                     l178:
  2374                           ;rgl.c: 898: else
  2375  004696  50D9               	movf	fsr2l,w,c
  2376  004698  0101               	movlb	(_rgl+8) shr (0+8)
  2377  00469A  27FB               	addwf	(_rgl+8)& (0+255),f,b
  2378                           ;rgl.c: 901: PmpToDW();
  2379  00469C  EF9A  F05D         	goto	_PmpToDW	;wreg free
  2380                           ;rgl.c: 902: }
  2381  0046A0                     __end_of_IncMaxCO:
  2382                           ;rgl.c: 928: void ModPrzCO(void)
  2383                           ;rgl.c: 929: {
  2384  0046A0                     _ModPrzCO:
  2385  000000                     
  2386                           ;rgl.c: 930: unsigned char k,p,m,maxmod,mdmod;
  2387  0046A0  0E00               	movlw	0
  2388  0046A2  ECD4  F02E         	call	_Tnizsza
  2389  0046A6  E201 D17F          	bnc	l181
  2390                           ;rgl.c: 936: {
  2391  0046AA  C1F2  FFE1         	movff	_PWM+28,fsr1l
  2392                           ;rgl.c: 939: if(rgl.tmp_pwm>=pwm_center)
  2393  0046AE  CEEC  FFE8         	movff	_pwm_center,wreg
  2394  0046B2  0101               	movlb	(_rgl+9) shr (0+8)
  2395  0046B4  5DFC               	subwf	(_rgl+9)& (0+255),w,b
  2396  0046B6  E201 D0BE          	bnc	l182
  2397                           ;rgl.c: 940: {
  2398  0046BA  C1FB  FFE8         	movff	_rgl+8,wreg
  2399  0046BE  5CE1               	subwf	fsr1l,w,c
  2400  0046C0  E303               	bnc	l183
  2401  0046C2  C1FB  FFD9         	movff	_rgl+8,fsr2l
  2402  0046C6  D004               	goto	l184
  2403  0046C8                     l183:
  2404                           ;rgl.c: 942: else
  2405  0046C8  50E1               	movf	fsr1l,w,c
  2406  0046CA  6ED9               	movwf	fsr2l,c
  2407                           ;rgl.c: 945: rgl.xmod=maxmod;
  2408  0046CC  CFE1 F1FB          	movff	fsr1l,_rgl+8
  2409  0046D0                     l184:
  2410                           ;rgl.c: 946: }
  2411  0046D0  C08A  FFE8         	movff	_DtCO+11,wreg
  2412  0046D4  0A80               	xorlw	128
  2413  0046D6  0F79               	addlw	-135
  2414  0046D8  E335               	bnc	l185
  2415  0046DA  0E01               	movlw	1
  2416  0046DC  010E               	movlb	_tmr shr (0+8)
  2417  0046DE  65EE               	cpfsgt	_tmr& (0+255),b
  2418  0046E0  D031               	goto	l185
  2419                           ;rgl.c: 948: {
  2420  0046E2  6BEE               	clrf	_tmr& (0+255),b
  2421                           ;rgl.c: 950: r=p-PWM.MINPWM;
  2422  0046E4  C1F1  FFE8         	movff	_PWM+27,wreg
  2423  0046E8  5CD9               	subwf	fsr2l,w,c
  2424  0046EA  6EF3               	movwf	prodl,c
  2425  0046EC  6AF4               	clrf	prodh,c
  2426  0046EE  A0D8               	btfss	status,0,c
  2427  0046F0  06F4               	decf	prodh,f,c
  2428                           ;rgl.c: 951: if((p-(r/3))>PWM.MINPWM) p-=r/3;
  2429  0046F2  0E03               	movlw	3
  2430  0046F4  6E02               	movwf	btemp+2,c
  2431  0046F6  6A03               	clrf	btemp+3,c
  2432  0046F8  CFF3 F000          	movff	prodl,btemp
  2433  0046FC  CFF4 F001          	movff	prodh,btemp+1
  2434  004700  EC5C  F06D         	call	awdiv
  2435  004704  5004               	movf	btemp+4,w,c
  2436  004706  5CD9               	subwf	fsr2l,w,c
  2437  004708  6E00               	movwf	btemp,c
  2438  00470A  5005               	movf	btemp+5,w,c
  2439  00470C  A0D8               	btfss	status,0,c
  2440  00470E  2805               	incf	btemp+5,w,c
  2441  004710  6A01               	clrf	btemp+1,c
  2442  004712  5E01               	subwf	btemp+1,f,c
  2443  004714  C1F1  F002         	movff	_PWM+27,btemp+2
  2444  004718  6A03               	clrf	btemp+3,c
  2445  00471A  5003               	movf	btemp+3,w,c
  2446  00471C  0A80               	xorlw	128
  2447  00471E  6E04               	movwf	btemp+4,c
  2448  004720  5001               	movf	btemp+1,w,c
  2449  004722  0A80               	xorlw	128
  2450  004724  5C04               	subwf	btemp+4,w,c
  2451  004726  E102               	bnz	u1745
  2452  004728  5000               	movf	btemp,w,c
  2453  00472A  5C02               	subwf	btemp+2,w,c
  2454  00472C                     u1745:
  2455  00472C  E301 D138          	bc	l208
  2456  004730  0E03               	movlw	3
  2457  004732  6E02               	movwf	btemp+2,c
  2458  004734  6A03               	clrf	btemp+3,c
  2459  004736  CFF3 F000          	movff	prodl,btemp
  2460  00473A  CFF4 F001          	movff	prodh,btemp+1
  2461  00473E  EC5C  F06D         	call	awdiv
  2462  004742  D039               	goto	L26
  2463                           ;rgl.c: 952: else p=PWM.MINPWM;
  2464                           ;rgl.c: 953: rgl.xmod=p;
  2465                           ;rgl.c: 954: }
  2466  004744                     l185:
  2467                           ;rgl.c: 955: else
  2468  004744  C08A  FFE8         	movff	_DtCO+11,wreg
  2469  004748  0A80               	xorlw	128
  2470  00474A  0F7B               	addlw	-133
  2471  00474C  E337               	bnc	l189
  2472  00474E  0E01               	movlw	1
  2473  004750  010E               	movlb	_tmr shr (0+8)
  2474  004752  65EE               	cpfsgt	_tmr& (0+255),b
  2475  004754  D033               	goto	l189
  2476                           ;rgl.c: 957: {
  2477  004756  6BEE               	clrf	_tmr& (0+255),b
  2478                           ;rgl.c: 959: r=p-PWM.MINPWM;
  2479  004758  C1F1  FFE8         	movff	_PWM+27,wreg
  2480  00475C  5CD9               	subwf	fsr2l,w,c
  2481  00475E  6EF3               	movwf	prodl,c
  2482  004760  6AF4               	clrf	prodh,c
  2483  004762  A0D8               	btfss	status,0,c
  2484  004764  06F4               	decf	prodh,f,c
  2485                           ;rgl.c: 960: if((p-(r/4))>PWM.MINPWM) p-=r/4;
  2486  004766  0E04               	movlw	4
  2487  004768  6E02               	movwf	btemp+2,c
  2488  00476A  6A03               	clrf	btemp+3,c
  2489  00476C  CFF3 F000          	movff	prodl,btemp
  2490  004770  CFF4 F001          	movff	prodh,btemp+1
  2491  004774  EC5C  F06D         	call	awdiv
  2492  004778  5004               	movf	btemp+4,w,c
  2493  00477A  5CD9               	subwf	fsr2l,w,c
  2494  00477C  6E00               	movwf	btemp,c
  2495  00477E  5005               	movf	btemp+5,w,c
  2496  004780  A0D8               	btfss	status,0,c
  2497  004782  2805               	incf	btemp+5,w,c
  2498  004784  6A01               	clrf	btemp+1,c
  2499  004786  5E01               	subwf	btemp+1,f,c
  2500  004788  C1F1  F002         	movff	_PWM+27,btemp+2
  2501  00478C  6A03               	clrf	btemp+3,c
  2502  00478E  5003               	movf	btemp+3,w,c
  2503  004790  0A80               	xorlw	128
  2504  004792  6E04               	movwf	btemp+4,c
  2505  004794  5001               	movf	btemp+1,w,c
  2506  004796  0A80               	xorlw	128
  2507  004798  5C04               	subwf	btemp+4,w,c
  2508  00479A  E102               	bnz	u1785
  2509  00479C  5000               	movf	btemp,w,c
  2510  00479E  5C02               	subwf	btemp+2,w,c
  2511  0047A0                     u1785:
  2512  0047A0  E301 D0FE          	bc	l208
  2513  0047A4  0E04               	movlw	4
  2514  0047A6  6E02               	movwf	btemp+2,c
  2515  0047A8  6A03               	clrf	btemp+3,c
  2516  0047AA  CFF3 F000          	movff	prodl,btemp
  2517  0047AE  CFF4 F001          	movff	prodh,btemp+1
  2518  0047B2  EC5C  F06D         	call	awdiv
  2519  0047B6                     L26:
  2520  0047B6  5004               	movf	btemp+4,w,c
  2521  0047B8  5ED9               	subwf	fsr2l,f,c
  2522  0047BA  D0F4               	goto	l209
  2523                           ;rgl.c: 961: else p=PWM.MINPWM;
  2524                           ;rgl.c: 962: rgl.xmod=p;
  2525                           ;rgl.c: 963: }
  2526  0047BC                     l189:
  2527                           ;rgl.c: 964: else
  2528  0047BC  C08A  FFE8         	movff	_DtCO+11,wreg
  2529  0047C0  0A80               	xorlw	128
  2530  0047C2  0F7C               	addlw	-132
  2531  0047C4  E201 D0F0          	bnc	l181
  2532  0047C8  010E               	movlb	_tmr shr (0+8)
  2533  0047CA  53EE               	movf	_tmr& (0+255),f,b
  2534  0047CC  E101 D0EC          	bz	l181
  2535                           ;rgl.c: 966: {
  2536  0047D0  6BEE               	clrf	_tmr& (0+255),b
  2537                           ;rgl.c: 968: r=p-PWM.MINPWM;
  2538  0047D2  C1F1  FFE8         	movff	_PWM+27,wreg
  2539  0047D6  5CD9               	subwf	fsr2l,w,c
  2540  0047D8  6EF3               	movwf	prodl,c
  2541  0047DA  6AF4               	clrf	prodh,c
  2542  0047DC  A0D8               	btfss	status,0,c
  2543  0047DE  06F4               	decf	prodh,f,c
  2544                           ;rgl.c: 969: if((p-(r/14))>PWM.MINPWM) p-=r/14;
  2545  0047E0  0E0E               	movlw	14
  2546  0047E2  6E02               	movwf	btemp+2,c
  2547  0047E4  6A03               	clrf	btemp+3,c
  2548  0047E6  CFF3 F000          	movff	prodl,btemp
  2549  0047EA  CFF4 F001          	movff	prodh,btemp+1
  2550  0047EE  EC5C  F06D         	call	awdiv
  2551  0047F2  5004               	movf	btemp+4,w,c
  2552  0047F4  5CD9               	subwf	fsr2l,w,c
  2553  0047F6  6E00               	movwf	btemp,c
  2554  0047F8  5005               	movf	btemp+5,w,c
  2555  0047FA  A0D8               	btfss	status,0,c
  2556  0047FC  2805               	incf	btemp+5,w,c
  2557  0047FE  6A01               	clrf	btemp+1,c
  2558  004800  5E01               	subwf	btemp+1,f,c
  2559  004802  C1F1  F002         	movff	_PWM+27,btemp+2
  2560  004806  6A03               	clrf	btemp+3,c
  2561  004808  5003               	movf	btemp+3,w,c
  2562  00480A  0A80               	xorlw	128
  2563  00480C  6E04               	movwf	btemp+4,c
  2564  00480E  5001               	movf	btemp+1,w,c
  2565  004810  0A80               	xorlw	128
  2566  004812  5C04               	subwf	btemp+4,w,c
  2567  004814  E102               	bnz	u1825
  2568  004816  5000               	movf	btemp,w,c
  2569  004818  5C02               	subwf	btemp+2,w,c
  2570  00481A                     u1825:
  2571  00481A  E301 D0C1          	bc	l208
  2572  00481E  0E0E               	movlw	14
  2573  004820  6E02               	movwf	btemp+2,c
  2574  004822  6A03               	clrf	btemp+3,c
  2575  004824  CFF3 F000          	movff	prodl,btemp
  2576  004828  CFF4 F001          	movff	prodh,btemp+1
  2577  00482C  EC5C  F06D         	call	awdiv
  2578  004830                     L24:
  2579  004830  5004               	movf	btemp+4,w,c
  2580  004832  5ED9               	subwf	fsr2l,f,c
  2581  004834  D0B7               	goto	l209
  2582                           ;rgl.c: 970: else p=PWM.MINPWM;
  2583                           ;rgl.c: 971: rgl.xmod=p;
  2584                           ;rgl.c: 972: }
  2585  004836                     l182:
  2586                           ;rgl.c: 974: else
  2587  004836  C1FB  FFE8         	movff	_rgl+8,wreg
  2588  00483A  5CE1               	subwf	fsr1l,w,c
  2589  00483C  E303               	bnc	l197
  2590  00483E  C1FB  FFD9         	movff	_rgl+8,fsr2l
  2591  004842  D004               	goto	l198
  2592  004844                     l197:
  2593                           ;rgl.c: 977: else
  2594  004844  50E1               	movf	fsr1l,w,c
  2595  004846  6ED9               	movwf	fsr2l,c
  2596                           ;rgl.c: 980: rgl.xmod=maxmod;
  2597  004848  CFE1 F1FB          	movff	fsr1l,_rgl+8
  2598  00484C                     l198:
  2599                           ;rgl.c: 981: }
  2600  00484C  C08A  FFE8         	movff	_DtCO+11,wreg
  2601  004850  0A80               	xorlw	128
  2602  004852  0F79               	addlw	-135
  2603  004854  E334               	bnc	l199
  2604  004856  0E01               	movlw	1
  2605  004858  010E               	movlb	_tmr shr (0+8)
  2606  00485A  65EE               	cpfsgt	_tmr& (0+255),b
  2607  00485C  D030               	goto	l199
  2608                           ;rgl.c: 983: {
  2609  00485E  6BEE               	clrf	_tmr& (0+255),b
  2610                           ;rgl.c: 985: r=p-PWM.MINPWM;
  2611  004860  C1F1  FFE8         	movff	_PWM+27,wreg
  2612  004864  5CD9               	subwf	fsr2l,w,c
  2613  004866  6EF3               	movwf	prodl,c
  2614  004868  6AF4               	clrf	prodh,c
  2615  00486A  A0D8               	btfss	status,0,c
  2616  00486C  06F4               	decf	prodh,f,c
  2617                           ;rgl.c: 986: if((p-(r/2))>PWM.MINPWM) p-=r/2;
  2618  00486E  0E02               	movlw	2
  2619  004870  6E02               	movwf	btemp+2,c
  2620  004872  6A03               	clrf	btemp+3,c
  2621  004874  CFF3 F000          	movff	prodl,btemp
  2622  004878  CFF4 F001          	movff	prodh,btemp+1
  2623  00487C  EC5C  F06D         	call	awdiv
  2624  004880  5004               	movf	btemp+4,w,c
  2625  004882  5CD9               	subwf	fsr2l,w,c
  2626  004884  6E00               	movwf	btemp,c
  2627  004886  5005               	movf	btemp+5,w,c
  2628  004888  A0D8               	btfss	status,0,c
  2629  00488A  2805               	incf	btemp+5,w,c
  2630  00488C  6A01               	clrf	btemp+1,c
  2631  00488E  5E01               	subwf	btemp+1,f,c
  2632  004890  C1F1  F002         	movff	_PWM+27,btemp+2
  2633  004894  6A03               	clrf	btemp+3,c
  2634  004896  5003               	movf	btemp+3,w,c
  2635  004898  0A80               	xorlw	128
  2636  00489A  6E04               	movwf	btemp+4,c
  2637  00489C  5001               	movf	btemp+1,w,c
  2638  00489E  0A80               	xorlw	128
  2639  0048A0  5C04               	subwf	btemp+4,w,c
  2640  0048A2  E102               	bnz	u1875
  2641  0048A4  5000               	movf	btemp,w,c
  2642  0048A6  5C02               	subwf	btemp+2,w,c
  2643  0048A8                     u1875:
  2644  0048A8  E27B               	bc	l208
  2645  0048AA  0E02               	movlw	2
  2646  0048AC  6E02               	movwf	btemp+2,c
  2647  0048AE  6A03               	clrf	btemp+3,c
  2648  0048B0  CFF3 F000          	movff	prodl,btemp
  2649  0048B4  CFF4 F001          	movff	prodh,btemp+1
  2650  0048B8  EC5C  F06D         	call	awdiv
  2651  0048BC  D7B9               	goto	L24
  2652                           ;rgl.c: 987: else p=PWM.MINPWM;
  2653                           ;rgl.c: 988: rgl.xmod=p;
  2654                           ;rgl.c: 989: }
  2655  0048BE                     l199:
  2656                           ;rgl.c: 990: else
  2657  0048BE  C08A  FFE8         	movff	_DtCO+11,wreg
  2658  0048C2  0A80               	xorlw	128
  2659  0048C4  0F7B               	addlw	-133
  2660  0048C6  E334               	bnc	l203
  2661  0048C8  0E01               	movlw	1
  2662  0048CA  010E               	movlb	_tmr shr (0+8)
  2663  0048CC  65EE               	cpfsgt	_tmr& (0+255),b
  2664  0048CE  D030               	goto	l203
  2665                           ;rgl.c: 992: {
  2666  0048D0  6BEE               	clrf	_tmr& (0+255),b
  2667                           ;rgl.c: 994: r=p-PWM.MINPWM;
  2668  0048D2  C1F1  FFE8         	movff	_PWM+27,wreg
  2669  0048D6  5CD9               	subwf	fsr2l,w,c
  2670  0048D8  6EF3               	movwf	prodl,c
  2671  0048DA  6AF4               	clrf	prodh,c
  2672  0048DC  A0D8               	btfss	status,0,c
  2673  0048DE  06F4               	decf	prodh,f,c
  2674                           ;rgl.c: 995: if((p-(r/3))>PWM.MINPWM) p-=r/3;
  2675  0048E0  0E03               	movlw	3
  2676  0048E2  6E02               	movwf	btemp+2,c
  2677  0048E4  6A03               	clrf	btemp+3,c
  2678  0048E6  CFF3 F000          	movff	prodl,btemp
  2679  0048EA  CFF4 F001          	movff	prodh,btemp+1
  2680  0048EE  EC5C  F06D         	call	awdiv
  2681  0048F2  5004               	movf	btemp+4,w,c
  2682  0048F4  5CD9               	subwf	fsr2l,w,c
  2683  0048F6  6E00               	movwf	btemp,c
  2684  0048F8  5005               	movf	btemp+5,w,c
  2685  0048FA  A0D8               	btfss	status,0,c
  2686  0048FC  2805               	incf	btemp+5,w,c
  2687  0048FE  6A01               	clrf	btemp+1,c
  2688  004900  5E01               	subwf	btemp+1,f,c
  2689  004902  C1F1  F002         	movff	_PWM+27,btemp+2
  2690  004906  6A03               	clrf	btemp+3,c
  2691  004908  5003               	movf	btemp+3,w,c
  2692  00490A  0A80               	xorlw	128
  2693  00490C  6E04               	movwf	btemp+4,c
  2694  00490E  5001               	movf	btemp+1,w,c
  2695  004910  0A80               	xorlw	128
  2696  004912  5C04               	subwf	btemp+4,w,c
  2697  004914  E102               	bnz	u1915
  2698  004916  5000               	movf	btemp,w,c
  2699  004918  5C02               	subwf	btemp+2,w,c
  2700  00491A                     u1915:
  2701  00491A  E242               	bc	l208
  2702  00491C  0E03               	movlw	3
  2703  00491E  6E02               	movwf	btemp+2,c
  2704  004920  6A03               	clrf	btemp+3,c
  2705  004922  CFF3 F000          	movff	prodl,btemp
  2706  004926  CFF4 F001          	movff	prodh,btemp+1
  2707  00492A  EC5C  F06D         	call	awdiv
  2708  00492E  D780               	goto	L24
  2709                           ;rgl.c: 996: else p=PWM.MINPWM;
  2710                           ;rgl.c: 997: rgl.xmod=p;
  2711                           ;rgl.c: 998: }
  2712  004930                     l203:
  2713                           ;rgl.c: 999: else
  2714  004930  C08A  FFE8         	movff	_DtCO+11,wreg
  2715  004934  0A80               	xorlw	128
  2716  004936  0F7C               	addlw	-132
  2717  004938  E337               	bnc	l181
  2718  00493A  010E               	movlb	_tmr shr (0+8)
  2719  00493C  53EE               	movf	_tmr& (0+255),f,b
  2720  00493E  E034               	bz	l181
  2721                           ;rgl.c: 1001: {
  2722  004940  6BEE               	clrf	_tmr& (0+255),b
  2723                           ;rgl.c: 1003: r=p-PWM.MINPWM;
  2724  004942  C1F1  FFE8         	movff	_PWM+27,wreg
  2725  004946  5CD9               	subwf	fsr2l,w,c
  2726  004948  6EF3               	movwf	prodl,c
  2727  00494A  6AF4               	clrf	prodh,c
  2728  00494C  A0D8               	btfss	status,0,c
  2729  00494E  06F4               	decf	prodh,f,c
  2730                           ;rgl.c: 1004: if((p-(r/4))>PWM.MINPWM) p-=r/4;
  2731  004950  0E04               	movlw	4
  2732  004952  6E02               	movwf	btemp+2,c
  2733  004954  6A03               	clrf	btemp+3,c
  2734  004956  CFF3 F000          	movff	prodl,btemp
  2735  00495A  CFF4 F001          	movff	prodh,btemp+1
  2736  00495E  EC5C  F06D         	call	awdiv
  2737  004962  5004               	movf	btemp+4,w,c
  2738  004964  5CD9               	subwf	fsr2l,w,c
  2739  004966  6E00               	movwf	btemp,c
  2740  004968  5005               	movf	btemp+5,w,c
  2741  00496A  A0D8               	btfss	status,0,c
  2742  00496C  2805               	incf	btemp+5,w,c
  2743  00496E  6A01               	clrf	btemp+1,c
  2744  004970  5E01               	subwf	btemp+1,f,c
  2745  004972  C1F1  F002         	movff	_PWM+27,btemp+2
  2746  004976  6A03               	clrf	btemp+3,c
  2747  004978  5003               	movf	btemp+3,w,c
  2748  00497A  0A80               	xorlw	128
  2749  00497C  6E04               	movwf	btemp+4,c
  2750  00497E  5001               	movf	btemp+1,w,c
  2751  004980  0A80               	xorlw	128
  2752  004982  5C04               	subwf	btemp+4,w,c
  2753  004984  E102               	bnz	u1955
  2754  004986  5000               	movf	btemp,w,c
  2755  004988  5C02               	subwf	btemp+2,w,c
  2756  00498A                     u1955:
  2757  00498A  E20A               	bc	l208
  2758  00498C  0E04               	movlw	4
  2759  00498E  6E02               	movwf	btemp+2,c
  2760  004990  6A03               	clrf	btemp+3,c
  2761  004992  CFF3 F000          	movff	prodl,btemp
  2762  004996  CFF4 F001          	movff	prodh,btemp+1
  2763  00499A  EC5C  F06D         	call	awdiv
  2764  00499E  D70B               	goto	L26
  2765  0049A0                     l208:
  2766                           ;rgl.c: 1005: else p=PWM.MINPWM;
  2767  0049A0  C1F1  FFD9         	movff	_PWM+27,fsr2l
  2768  0049A4                     l209:
  2769                           ;rgl.c: 1006: rgl.xmod=p;
  2770  0049A4  CFD9 F1FB          	movff	fsr2l,_rgl+8
  2771  0049A8                     l181:
  2772                           ;rgl.c: 1007: }
  2773  0049A8  0101               	movlb	_rgl shr (0+8)
  2774  0049AA  BBF3               	btfsc	_rgl& (0+255),5,b
  2775  0049AC  D02F               	goto	l210
  2776                           ;rgl.c: 1012: {
  2777  0049AE  A5F3               	btfss	_rgl& (0+255),2,b
  2778  0049B0  0012               	return	
  2779                           ;rgl.c: 1014: {
  2780  0049B2  0E00               	movlw	0
  2781  0049B4  ECB2  F02E         	call	_Tmaleje
  2782  0049B8  B0D8               	btfsc	status,0,c
  2783  0049BA  0012               	return	
  2784                           ;rgl.c: 1016: {
  2785  0049BC  0E04               	movlw	4
  2786  0049BE  ECE1  F02E         	call	_Twyzsza
  2787  0049C2  A0D8               	btfss	status,0,c
  2788  0049C4  0012               	return	
  2789                           ;rgl.c: 1018: {
  2790  0049C6  CEED  FFE8         	movff	_pwm_kwr,wreg
  2791  0049CA  0101               	movlb	(_rgl+9) shr (0+8)
  2792  0049CC  5DFC               	subwf	(_rgl+9)& (0+255),w,b
  2793  0049CE  E31B               	bnc	l214
  2794                           ;rgl.c: 1020: {
  2795  0049D0  C1F1  F000         	movff	_PWM+27,btemp
  2796  0049D4  6A01               	clrf	btemp+1,c
  2797  0049D6  C1FA  F002         	movff	_rgl+7,btemp+2
  2798  0049DA  0EF1               	movlw	241
  2799  0049DC  2402               	addwf	btemp+2,w,c
  2800  0049DE  6EF6               	movwf	tblptrl,c
  2801  0049E0  6AF7               	clrf	tblptrh,c
  2802  0049E2  0EFF               	movlw	255
  2803  0049E4  22F7               	addwfc	tblptrh,f,c
  2804  0049E6  50F7               	movf	tblptrh,w,c
  2805  0049E8  0A80               	xorlw	128
  2806  0049EA  6E02               	movwf	btemp+2,c
  2807  0049EC  5001               	movf	btemp+1,w,c
  2808  0049EE  0A80               	xorlw	128
  2809  0049F0  5C02               	subwf	btemp+2,w,c
  2810  0049F2  E102               	bnz	u2015
  2811  0049F4  5000               	movf	btemp,w,c
  2812  0049F6  5CF6               	subwf	tblptrl,w,c
  2813  0049F8                     u2015:
  2814  0049F8  E203               	bc	l215
  2815  0049FA  C1F1  F1FA         	movff	_PWM+27,_rgl+7
  2816  0049FE  D003               	goto	l214
  2817  004A00                     l215:
  2818                           ;rgl.c: 1022: else rgl.srp-=15;
  2819  004A00  0101               	movlb	(_rgl+7) shr (0+8)
  2820  004A02  0EF1               	movlw	-15
  2821  004A04  27FA               	addwf	(_rgl+7)& (0+255),f,b
  2822  004A06                     l214:
  2823                           ;rgl.c: 1023: }
  2824  004A06  0101               	movlb	_rgl shr (0+8)
  2825  004A08  8BF3               	bsf	_rgl& (0+255),5,b
  2826                           ;rgl.c: 1025: return;
  2827  004A0A  0012               	return	
  2828                           ;rgl.c: 1027: else return;
  2829                           ;rgl.c: 1029: else return;
  2830                           ;rgl.c: 1031: else return;
  2831  004A0C                     l210:
  2832                           ;rgl.c: 1033: else
  2833  004A0C  0E00               	movlw	0
  2834  004A0E  ECB2  F02E         	call	_Tmaleje
  2835  004A12  E302               	bnc	l220
  2836                           ;rgl.c: 1036: rgl.nmod=0;
  2837  004A14  0101               	movlb	_rgl shr (0+8)
  2838  004A16  9BF3               	bcf	_rgl& (0+255),5,b
  2839  004A18                     l220:
  2840                           ;rgl.c: 1037: }
  2841  004A18  010E               	movlb	F1810 shr (0+8)
  2842  004A1A  2BC1               	incf	F1810& (0+255),f,b
  2843                           ;rgl.c: 1059: }
  2844  004A1C  0C01               	retlw	1
  2845  004A1E                     __end_of_ModPrzCO:
  2846                           ;rgl.c: 1063: void PropOPT(void)
  2847                           ;rgl.c: 1064: {
  2848  004A1E                     _PropOPT:
  2849  000000                     
  2850                           ;rgl.c: 1065: if(rgl.nmod)
  2851  004A1E  0101               	movlb	_rgl shr (0+8)
  2852                           ;rgl.c: 1066: {
  2853  004A20  C1F1  FFE8         	movff	_PWM+27,wreg
  2854  004A24  BBF3               	btfsc	_rgl& (0+255),5,b
  2855  004A26  EFDF  F067         	goto	_WritePWM
  2856                           ;rgl.c: 1068: }
  2857                           ;rgl.c: 1069: else
  2858  004A2A  0101               	movlb	(_rgl+9) shr (0+8)
  2859  004A2C  61FC               	cpfslt	(_rgl+9)& (0+255),b
  2860  004A2E  EF4F  F02A         	goto	l381
  2861  004A32  C1F1  F1FC         	movff	_PWM+27,_rgl+9
  2862  004A36  EF4F  F02A         	goto	l381
  2863                           ;rgl.c: 1072: WritePWM(rgl.tmp_pwm);
  2864                           ;rgl.c: 1073: }
  2865  004A3A                     __end_of_PropOPT:
  2866                           ;rgl.c: 2301: unsigned char SetStab(unsigned cha
      +                          r ada2,unsigned char k,unsigned char res)
  2867                           ;rgl.c: 2302: {
  2868  004A3A  00A6               	dw	?_SetStab
  2869  004A3C                     _SetStab:
  2870  000000                     
  2871                           ;_ada2 stored from wreg
  2872  004A3C  0100               	movlb	__Lparam shr (0+8)
  2873  004A3E  6FA6               	movwf	?a_SetStab^(__Lparam& (0+65280)),b
  2874                           ;rgl.c: 2303: static unsigned char pop;
  2875  004A40  51A7               	movf	(?_SetStab+1)^(__Lparam& (0+65280)),w
  2876  004A42  E017               	bz	l227
  2877                           ;rgl.c: 2309: {
  2878  004A44  010E               	movlb	F1820 shr (0+8)
  2879  004A46  6BC5               	clrf	F1820& (0+255),b
  2880                           ;rgl.c: 2311: pk=0;
  2881  004A48  010E               	movlb	F1819 shr (0+8)
  2882  004A4A  6BC4               	clrf	F1819& (0+255),b
  2883                           ;rgl.c: 2312: t2=0;
  2884  004A4C  010E               	movlb	F1823 shr (0+8)
  2885  004A4E  6BC8               	clrf	F1823& (0+255),b
  2886                           ;rgl.c: 2313: pk2=0;
  2887  004A50  010E               	movlb	F1822 shr (0+8)
  2888  004A52  6BC7               	clrf	F1822& (0+255),b
  2889                           ;rgl.c: 2314: pop=0;
  2890  004A54  010E               	movlb	F1817 shr (0+8)
  2891  004A56  6BC2               	clrf	F1817& (0+255),b
  2892                           ;rgl.c: 2315: bada2=ada2;
  2893  004A58  C0A6  FECA         	movff	?a_SetStab,F1825
  2894                           ;rgl.c: 2316: tpk=0;
  2895  004A5C  010E               	movlb	F1818 shr (0+8)
  2896  004A5E  6BC3               	clrf	F1818& (0+255),b
  2897                           ;rgl.c: 2317: btpk=0;
  2898  004A60  010E               	movlb	F1826 shr (0+8)
  2899  004A62  6BCB               	clrf	F1826& (0+255),b
  2900                           ;rgl.c: 2318: tpk2=0;
  2901  004A64  010E               	movlb	F1821 shr (0+8)
  2902  004A66  6BC6               	clrf	F1821& (0+255),b
  2903                           ;rgl.c: 2319: btpk2=0;
  2904  004A68  010E               	movlb	F1827 shr (0+8)
  2905  004A6A  6BCC               	clrf	F1827& (0+255),b
  2906                           ;rgl.c: 2320: t3=0;
  2907  004A6C  010E               	movlb	F1824 shr (0+8)
  2908  004A6E  6BC9               	clrf	F1824& (0+255),b
  2909                           ;rgl.c: 2321: return 0;
  2910  004A70  0C00               	retlw	0
  2911  004A72                     l227:
  2912                           ;rgl.c: 2322: }
  2913  004A72  0E03               	movlw	3
  2914  004A74  ECE1  F02E         	call	_Twyzsza
  2915  004A78  E26B               	bc	l228
  2916  004A7A  0E02               	movlw	2
  2917  004A7C  ECD4  F02E         	call	_Tnizsza
  2918  004A80  E267               	bc	l228
  2919                           ;rgl.c: 2324: {
  2920  004A82  0E00               	movlw	0
  2921  004A84  ECA5  F02E         	call	_Trosnie
  2922  004A88  0E00               	movlw	0
  2923  004A8A  E233               	bc	L30
  2924  004A8C  EC03  F02F         	call	_TFrosnie
  2925  004A90  E22F               	bc	l229
  2926                           ;rgl.c: 2326: {
  2927  004A92  0100               	movlb	__Lparam shr (0+8)
  2928  004A94  CECA  FFE8         	movff	F1825,wreg
  2929  004A98  5DA6               	subwf	?a_SetStab^(__Lparam& (0+65280)),w
  2930  004A9A  0E00               	movlw	0
  2931  004A9C  A0D8               	btfss	status,0,c
  2932  004A9E  0E01               	movlw	1
  2933  004AA0  CFE8 FEC3          	movff	wreg,F1818
  2934                           ;rgl.c: 2328: if(tpk&&tpk!=btpk) pk=1;
  2935  004AA4  010E               	movlb	F1818 shr (0+8)
  2936  004AA6  53C3               	movf	F1818& (0+255),f,b
  2937  004AA8  E008               	bz	l230
  2938  004AAA  CEC3  FFE8         	movff	F1818,wreg
  2939  004AAE  010E               	movlb	F1826 shr (0+8)
  2940  004AB0  19CB               	xorwf	F1826& (0+255),w,b
  2941  004AB2  E003               	bz	l230
  2942  004AB4  0E01               	movlw	1
  2943  004AB6  CFE8 FEC4          	movff	wreg,F1819
  2944  004ABA                     l230:
  2945                           ;rgl.c: 2329: if(pk&&++t>5)
  2946  004ABA  010E               	movlb	F1819 shr (0+8)
  2947  004ABC  53C4               	movf	F1819& (0+255),f,b
  2948  004ABE  E018               	bz	l229
  2949  004AC0  010E               	movlb	F1820 shr (0+8)
  2950  004AC2  2BC5               	incf	F1820& (0+255),f,b
  2951  004AC4  0E05               	movlw	5
  2952  004AC6  65C5               	cpfsgt	F1820& (0+255),b
  2953  004AC8  D013               	goto	l229
  2954                           ;rgl.c: 2330: {
  2955  004ACA  6BC5               	clrf	F1820& (0+255),b
  2956                           ;rgl.c: 2332: pk=0;
  2957  004ACC  010E               	movlb	F1819 shr (0+8)
  2958  004ACE  6BC4               	clrf	F1819& (0+255),b
  2959                           ;rgl.c: 2333: t2=0;
  2960  004AD0  010E               	movlb	F1823 shr (0+8)
  2961  004AD2  6BC8               	clrf	F1823& (0+255),b
  2962                           ;rgl.c: 2334: pk2=0;
  2963  004AD4  010E               	movlb	F1822 shr (0+8)
  2964  004AD6  6BC7               	clrf	F1822& (0+255),b
  2965                           ;rgl.c: 2335: pop+=2;
  2966  004AD8  010E               	movlb	F1817 shr (0+8)
  2967  004ADA  0E02               	movlw	2
  2968  004ADC  27C2               	addwf	F1817& (0+255),f,b
  2969                           ;rgl.c: 2336: if(pop>=k) pop=k-1;
  2970  004ADE  0100               	movlb	__Lparam shr (0+8)
  2971  004AE0  51A6               	movf	?_SetStab^(__Lparam& (0+65280)),w
  2972  004AE2  010E               	movlb	F1817 shr (0+8)
  2973  004AE4  5DC2               	subwf	F1817& (0+255),w,b
  2974  004AE6  E304               	bnc	l229
  2975  004AE8  0100               	movlb	__Lparam shr (0+8)
  2976  004AEA  05A6               	decf	?_SetStab^(__Lparam& (0+65280)),w
  2977  004AEC  CFE8 FEC2          	movff	wreg,F1817
  2978  004AF0                     l229:
  2979                           ;rgl.c: 2337: }
  2980  004AF0  0E00               	movlw	0
  2981  004AF2                     L30:
  2982  004AF2  ECB2  F02E         	call	_Tmaleje
  2983  004AF6  E236               	bc	l237
  2984  004AF8  0E00               	movlw	0
  2985  004AFA  EC10  F02F         	call	_TFmaleje
  2986  004AFE  E232               	bc	l237
  2987                           ;rgl.c: 2340: {
  2988  004B00  0100               	movlb	__Lparam shr (0+8)
  2989  004B02  51A6               	movf	?a_SetStab^(__Lparam& (0+65280)),w
  2990  004B04  010E               	movlb	F1825 shr (0+8)
  2991  004B06  5DCA               	subwf	F1825& (0+255),w,b
  2992  004B08  0E00               	movlw	0
  2993  004B0A  A0D8               	btfss	status,0,c
  2994  004B0C  0E01               	movlw	1
  2995  004B0E  CFE8 FEC6          	movff	wreg,F1821
  2996                           ;rgl.c: 2342: if(tpk2&&tpk2!=btpk2) pk2=1;
  2997  004B12  010E               	movlb	F1821 shr (0+8)
  2998  004B14  53C6               	movf	F1821& (0+255),f,b
  2999  004B16  E008               	bz	l234
  3000  004B18  CEC6  FFE8         	movff	F1821,wreg
  3001  004B1C  010E               	movlb	F1827 shr (0+8)
  3002  004B1E  19CC               	xorwf	F1827& (0+255),w,b
  3003  004B20  E003               	bz	l234
  3004  004B22  0E01               	movlw	1
  3005  004B24  CFE8 FEC7          	movff	wreg,F1822
  3006  004B28                     l234:
  3007                           ;rgl.c: 2343: if(pk2&&++t2>5)
  3008  004B28  010E               	movlb	F1822 shr (0+8)
  3009  004B2A  53C7               	movf	F1822& (0+255),f,b
  3010  004B2C  E01B               	bz	l237
  3011  004B2E  010E               	movlb	F1823 shr (0+8)
  3012  004B30  2BC8               	incf	F1823& (0+255),f,b
  3013  004B32  0E05               	movlw	5
  3014  004B34  65C8               	cpfsgt	F1823& (0+255),b
  3015  004B36  D016               	goto	l237
  3016                           ;rgl.c: 2344: {
  3017  004B38  6BC8               	clrf	F1823& (0+255),b
  3018                           ;rgl.c: 2346: pk2=0;
  3019  004B3A  010E               	movlb	F1822 shr (0+8)
  3020  004B3C  6BC7               	clrf	F1822& (0+255),b
  3021                           ;rgl.c: 2347: t=0;
  3022  004B3E  010E               	movlb	F1820 shr (0+8)
  3023  004B40  6BC5               	clrf	F1820& (0+255),b
  3024                           ;rgl.c: 2348: pk=0;
  3025  004B42  010E               	movlb	F1819 shr (0+8)
  3026  004B44  6BC4               	clrf	F1819& (0+255),b
  3027                           ;rgl.c: 2349: if(pop>0) pop-=1;
  3028  004B46  010E               	movlb	F1817 shr (0+8)
  3029  004B48  53C2               	movf	F1817& (0+255),f,b
  3030  004B4A  E00C               	bz	l237
  3031  004B4C  07C2               	decf	F1817& (0+255),f,b
  3032                           ;rgl.c: 2350: }
  3033  004B4E  D00A               	goto	l237
  3034  004B50                     l228:
  3035                           ;rgl.c: 2353: else
  3036  004B50  010E               	movlb	F1820 shr (0+8)
  3037  004B52  6BC5               	clrf	F1820& (0+255),b
  3038                           ;rgl.c: 2356: pk=0;
  3039  004B54  010E               	movlb	F1819 shr (0+8)
  3040  004B56  6BC4               	clrf	F1819& (0+255),b
  3041                           ;rgl.c: 2357: t2=0;
  3042  004B58  010E               	movlb	F1823 shr (0+8)
  3043  004B5A  6BC8               	clrf	F1823& (0+255),b
  3044                           ;rgl.c: 2358: pk2=0;
  3045  004B5C  010E               	movlb	F1822 shr (0+8)
  3046  004B5E  6BC7               	clrf	F1822& (0+255),b
  3047                           ;rgl.c: 2359: pop=0;
  3048  004B60  010E               	movlb	F1817 shr (0+8)
  3049  004B62  6BC2               	clrf	F1817& (0+255),b
  3050  004B64                     l237:
  3051                           ;rgl.c: 2360: }
  3052  004B64  CEC3  FECB         	movff	F1818,F1826
  3053                           ;rgl.c: 2362: btpk2=tpk2;
  3054  004B68  CEC6  FECC         	movff	F1821,F1827
  3055                           ;rgl.c: 2363: bada2=ada2;
  3056  004B6C  C0A6  FECA         	movff	?a_SetStab,F1825
  3057                           ;rgl.c: 2364: return pop;
  3058  004B70  CEC2  FFE8         	movff	F1817,wreg
  3059  004B74  0012               	return	
  3060                           ;rgl.c: 2365: }
  3061  004B76                     __end_of_SetStab:
  3062                           ;rgl.c: 2368: unsigned char FirstXMOD2(void);
  3063                           ;rgl.c: 2369: void StartMCW2(void)
  3064                           ;rgl.c: 2370: {
  3065  004B76                     _StartMCW2:
  3066  000000                     
  3067                           ;rgl.c: 2371: if(rgl.btco||rgl.btcw) return;
  3068  004B76  0101               	movlb	_rgl shr (0+8)
  3069  004B78  A1F3               	btfss	_rgl& (0+255),0,b
  3070  004B7A  B3F3               	btfsc	_rgl& (0+255),1,b
  3071  004B7C  0012               	return	
  3072                           ;rgl.c: 2372: StartRTdS(3);
  3073  004B7E  0E03               	movlw	3
  3074  004B80  ECB7  F063         	call	_StartRTdS
  3075                           ;rgl.c: 2373: popMIN=0;
  3076  004B84  010E               	movlb	_popMIN shr (0+8)
  3077  004B86  6BE8               	clrf	_popMIN& (0+255),b
  3078                           ;rgl.c: 2374: popMAXCW=0;
  3079  004B88  010E               	movlb	_popMAXCW shr (0+8)
  3080  004B8A  6BE7               	clrf	_popMAXCW& (0+255),b
  3081                           ;rgl.c: 2375: DtCO.dDCO=0;
  3082  004B8C  0100               	movlb	(_DtCO+10) shr (0+8)
  3083  004B8E  6B89               	clrf	(_DtCO+10)& (0+255),b
  3084                           ;rgl.c: 2376: DtCW.dDCW=0;
  3085  004B90  0100               	movlb	(_DtCW+8) shr (0+8)
  3086  004B92  6B78               	clrf	(_DtCW+8)& (0+255),b
  3087                           ;rgl.c: 2377: DtCO.indCO=0;
  3088  004B94  0100               	movlb	(_DtCO+12) shr (0+8)
  3089  004B96  6B8B               	clrf	(_DtCO+12)& (0+255),b
  3090                           ;rgl.c: 2378: DtCW.indCW=0;
  3091  004B98  0100               	movlb	(_DtCW+10) shr (0+8)
  3092  004B9A  6B7A               	clrf	(_DtCW+10)& (0+255),b
  3093                           ;rgl.c: 2379: rgl.fz=0;
  3094  004B9C  0101               	movlb	_rgl shr (0+8)
  3095  004B9E  95F3               	bcf	_rgl& (0+255),2,b
  3096                           ;rgl.c: 2380: rgl.xmod=FirstXMOD2();
  3097  004BA0  D807               	call	_FirstXMOD2	;wreg free
  3098  004BA2  CFE8 F1FB          	movff	wreg,_rgl+8
  3099                           ;rgl.c: 2381: rgl.srp=0;
  3100  004BA6  0101               	movlb	(_rgl+7) shr (0+8)
  3101  004BA8  6BFA               	clrf	(_rgl+7)& (0+255),b
  3102                           ;rgl.c: 2382: rgl.ytmp=0;
  3103  004BAA  6BF9               	clrf	(_rgl+6)& (0+255),b
  3104                           ;rgl.c: 2383: rgl.del1s=0;
  3105  004BAC  9DF3               	bcf	_rgl& (0+255),6,b
  3106                           ;rgl.c: 2384: }
  3107  004BAE  0012               	return	
  3108  004BB0                     __end_of_StartMCW2:
  3109                           ;rgl.c: 2387: unsigned char FirstXMOD2(void)
  3110                           ;rgl.c: 2388: {
  3111  004BB0                     _FirstXMOD2:
  3112  000000                     
  3113                           ;rgl.c: 2403: {
  3114  004BB0  0E0A               	movlw	10
  3115  004BB2  6E02               	movwf	btemp+2,c
  3116  004BB4  6A03               	clrf	btemp+3,c
  3117  004BB6  C1F1  FFE8         	movff	_PWM+27,wreg
  3118  004BBA  C1F2  F000         	movff	_PWM+28,btemp
  3119  004BBE  6A01               	clrf	btemp+1,c
  3120  004BC0  5E00               	subwf	btemp,f,c
  3121  004BC2  0E00               	movlw	0
  3122  004BC4  5A01               	subwfb	btemp+1,f,c
  3123  004BC6  EC5C  F06D         	call	awdiv
  3124  004BCA  90D8               	bcf	status,0,c
  3125  004BCC  3604               	rlcf	btemp+4,f,c
  3126  004BCE  90D8               	bcf	status,0,c
  3127  004BD0  3404               	rlcf	btemp+4,w,c
  3128  004BD2  0101               	movlb	(_PWM+28) shr (0+8)
  3129  004BD4  5DF2               	subwf	(_PWM+28)& (0+255),w,b
  3130  004BD6  CFE8 F1E7          	movff	wreg,_PWM+17
  3131                           ;rgl.c: 2405: if(DtCW.DCW>0) return PWM.MAXPWM;
  3132  004BDA  C077  FFE8         	movff	_DtCW+7,wreg
  3133  004BDE  0A80               	xorlw	128
  3134  004BE0  0F7F               	addlw	-129
  3135  004BE2  C1F2  FFE8         	movff	_PWM+28,wreg
  3136  004BE6  E301               	bnc	L31
  3137  004BE8  0012               	return	
  3138                           ;rgl.c: 2406: else
  3139  004BEA                     L31:
  3140  004BEA  0101               	movlb	(_PWM+17) shr (0+8)
  3141  004BEC  61E7               	cpfslt	(_PWM+17)& (0+255),b
  3142  004BEE  D003               	goto	l243
  3143  004BF0  C1E7  FFE8         	movff	_PWM+17,wreg
  3144  004BF4  0012               	return	
  3145  004BF6                     l243:
  3146                           ;rgl.c: 2409: else return PWM.MAXPWM;
  3147  004BF6  C1F2  FFE8         	movff	_PWM+28,wreg
  3148  004BFA  0012               	return	
  3149                           ;rgl.c: 2410: }
  3150  004BFC                     __end_of_FirstXMOD2:
  3151                           ;rgl.c: 2476: void ClrMod2(void)
  3152                           ;rgl.c: 2477: {
  3153  004BFC                     _ClrMod2:
  3154  000000                     
  3155                           ;rgl.c: 2478: rgl.fz=0;
  3156  004BFC  0101               	movlb	_rgl shr (0+8)
  3157  004BFE  95F3               	bcf	_rgl& (0+255),2,b
  3158                           ;rgl.c: 2479: rgl.med_up=0;
  3159  004C00  97F3               	bcf	_rgl& (0+255),3,b
  3160                           ;rgl.c: 2480: rgl.fast_up=0;
  3161  004C02  99F3               	bcf	_rgl& (0+255),4,b
  3162                           ;rgl.c: 2481: if(rgl.btco) rgl.xmod=PWM.BufPWM;
  3163  004C04  A1F3               	btfss	_rgl& (0+255),0,b
  3164  004C06  D003               	goto	l246
  3165  004C08  C1D7  F1FB         	movff	_PWM+1,_rgl+8
  3166  004C0C  D003               	goto	l247
  3167  004C0E                     l246:
  3168                           ;rgl.c: 2482: else rgl.xmod=FirstXMOD2();
  3169  004C0E  DFD0               	call	_FirstXMOD2	;wreg free
  3170  004C10  CFE8 F1FB          	movff	wreg,_rgl+8
  3171  004C14                     l247:
  3172                           ;rgl.c: 2483: rgl.srp=0;
  3173  004C14  0101               	movlb	(_rgl+7) shr (0+8)
  3174  004C16  6BFA               	clrf	(_rgl+7)& (0+255),b
  3175                           ;rgl.c: 2484: rgl.ytmp=0;
  3176  004C18  6BF9               	clrf	(_rgl+6)& (0+255),b
  3177                           ;rgl.c: 2485: rgl.nmod=0;
  3178  004C1A  9BF3               	bcf	_rgl& (0+255),5,b
  3179                           ;rgl.c: 2486: rgl.del1s=0;
  3180  004C1C  9DF3               	bcf	_rgl& (0+255),6,b
  3181                           ;rgl.c: 2487: rgl.inv_mod=0;
  3182  004C1E  91F4               	bcf	(_rgl+1)& (0+255),0,b
  3183                           ;rgl.c: 2488: }
  3184  004C20  0012               	return	
  3185  004C22                     __end_of_ClrMod2:
  3186                           ;rgl.c: 2491: void ModToCW2(void)
  3187                           ;rgl.c: 2492: {
  3188  004C22                     _ModToCW2:
  3189  000000                     
  3190                           ;rgl.c: 2493: rgl.btcw=1;
  3191  004C22  0101               	movlb	_rgl shr (0+8)
  3192  004C24  83F3               	bsf	_rgl& (0+255),1,b
  3193                           ;rgl.c: 2494: if(rgl.btco)
  3194  004C26  A1F3               	btfss	_rgl& (0+255),0,b
  3195  004C28  0012               	return	
  3196                           ;rgl.c: 2495: {
  3197  004C2A  91F3               	bcf	_rgl& (0+255),0,b
  3198                           ;rgl.c: 2497: ClrMod2();
  3199  004C2C  D7E7               	goto	_ClrMod2	;wreg free
  3200                           ;rgl.c: 2498: }
  3201  004C2E                     __end_of_ModToCW2:
  3202                           ;rgl.c: 2502: void ModToCO2(void)
  3203                           ;rgl.c: 2503: {
  3204  004C2E                     _ModToCO2:
  3205  000000                     
  3206                           ;rgl.c: 2504: rgl.btco=1;
  3207  004C2E  0101               	movlb	_rgl shr (0+8)
  3208  004C30  81F3               	bsf	_rgl& (0+255),0,b
  3209                           ;rgl.c: 2505: if(rgl.btcw)
  3210  004C32  A3F3               	btfss	_rgl& (0+255),1,b
  3211  004C34  0012               	return	
  3212                           ;rgl.c: 2506: {
  3213  004C36  93F3               	bcf	_rgl& (0+255),1,b
  3214                           ;rgl.c: 2508: ClrMod2();
  3215  004C38  D7E1               	goto	_ClrMod2	;wreg free
  3216                           ;rgl.c: 2509: }
  3217  004C3A                     __end_of_ModToCO2:
  3218                           ;rgl.c: 2513: void IncConstCW2(void)
  3219                           ;rgl.c: 2514: {
  3220  004C3A                     _IncConstCW2:
  3221  000000                     
  3222                           ;rgl.c: 2515: if(!TFrosnie(0))
  3223  004C3A  0E00               	movlw	0
  3224  004C3C  EC03  F02F         	call	_TFrosnie
  3225  004C40  E208               	bc	l253
  3226                           ;rgl.c: 2516: {
  3227  004C42  ECCD  F02E         	call	_Tstoi	;wreg free
  3228  004C46  0101               	movlb	(_rgl+6) shr (0+8)
  3229  004C48  E302               	bnc	L32
  3230  004C4A  2BF9               	incf	(_rgl+6)& (0+255),f,b
  3231  004C4C  0C01               	retlw	1
  3232                           ;rgl.c: 2518: else rgl.ytmp=0;
  3233  004C4E                     L32:
  3234  004C4E  6BF9               	clrf	(_rgl+6)& (0+255),b
  3235                           ;rgl.c: 2519: }
  3236  004C50  0012               	return	
  3237  004C52                     l253:
  3238                           ;rgl.c: 2520: else rgl.ytmp=0;
  3239  004C52  0101               	movlb	(_rgl+6) shr (0+8)
  3240  004C54  6BF9               	clrf	(_rgl+6)& (0+255),b
  3241                           ;rgl.c: 2521: }
  3242  004C56  0012               	return	
  3243  004C58                     __end_of_IncConstCW2:
  3244                           ;rgl.c: 2523: void IncConstCO2(void)
  3245                           ;rgl.c: 2524: {
  3246  004C58                     _IncConstCO2:
  3247  000000                     
  3248                           ;rgl.c: 2525: if(Tstoi()) rgl.ytmp++;
  3249  004C58  ECCD  F02E         	call	_Tstoi	;wreg free
  3250  004C5C  0101               	movlb	(_rgl+6) shr (0+8)
  3251  004C5E  E302               	bnc	L33
  3252  004C60  2BF9               	incf	(_rgl+6)& (0+255),f,b
  3253  004C62  0C01               	retlw	1
  3254                           ;rgl.c: 2526: else rgl.ytmp=0;
  3255  004C64                     L33:
  3256  004C64  6BF9               	clrf	(_rgl+6)& (0+255),b
  3257                           ;rgl.c: 2527: }
  3258  004C66  0012               	return	
  3259  004C68                     __end_of_IncConstCO2:
  3260                           ;rgl.c: 2530: void ReadDataCO2(void)
  3261                           ;rgl.c: 2531: {
  3262  004C68                     _ReadDataCO2:
  3263  000000                     
  3264                           ;rgl.c: 2532: rgl.x_t=DtCO.DCO;
  3265  004C68  C088  F1F5         	movff	_DtCO+9,_rgl+2
  3266                           ;rgl.c: 2533: rgl.x_dt=DtCO.dDCO;
  3267  004C6C  C089  F1F7         	movff	_DtCO+10,_rgl+4
  3268                           ;rgl.c: 2534: }
  3269  004C70  0012               	return	
  3270  004C72                     __end_of_ReadDataCO2:
  3271                           ;rgl.c: 2537: void ReadDataCW2(void)
  3272                           ;rgl.c: 2538: {
  3273  004C72                     _ReadDataCW2:
  3274  000000                     
  3275                           ;rgl.c: 2539: rgl.x_t=DtCW.DCW;
  3276  004C72  C077  F1F5         	movff	_DtCW+7,_rgl+2
  3277                           ;rgl.c: 2540: rgl.x_f=DtCO.DCO;
  3278  004C76  C088  F1F6         	movff	_DtCO+9,_rgl+3
  3279                           ;rgl.c: 2541: rgl.x_dt=DtCW.dDCW;
  3280  004C7A  C078  F1F7         	movff	_DtCW+8,_rgl+4
  3281                           ;rgl.c: 2542: rgl.x_df=DtCO.dDCO;
  3282  004C7E  C089  F1F8         	movff	_DtCO+10,_rgl+5
  3283                           ;rgl.c: 2543: }
  3284  004C82  0012               	return	
  3285  004C84                     __end_of_ReadDataCW2:
  3286                           ;rgl.c: 2547: void ModZgCW2(void)
  3287                           ;rgl.c: 2548: {
  3288  004C84                     _ModZgCW2:
  3289  000000                     
  3290                           ;rgl.c: 2549: signed long m;
  3291  004C84  0E06               	movlw	6
  3292  004C86  ECD4  F02E         	call	_Tnizsza
  3293  004C8A  E305               	bnc	l263
  3294                           ;rgl.c: 2554: {
  3295  004C8C  010E               	movlb	F1842 shr (0+8)
  3296  004C8E  6BCD               	clrf	F1842& (0+255),b
  3297                           ;rgl.c: 2556: rgl.xmod=FirstXMOD2();
  3298  004C90  DF8F               	call	_FirstXMOD2	;wreg free
  3299  004C92  CFE8 F1FB          	movff	wreg,_rgl+8
  3300  004C96                     l263:
  3301                           ;rgl.c: 2557: }
  3302  004C96  0101               	movlb	_rgl shr (0+8)
  3303  004C98  A5F3               	btfss	_rgl& (0+255),2,b
  3304  004C9A  D00D               	goto	l264
  3305                           ;rgl.c: 2559: {
  3306  004C9C  0E02               	movlw	2
  3307  004C9E  ECD4  F02E         	call	_Tnizsza
  3308  004CA2  A0D8               	btfss	status,0,c
  3309  004CA4  0012               	return	
  3310                           ;rgl.c: 2561: {
  3311  004CA6  C1D7  F1FB         	movff	_PWM+1,_rgl+8
  3312                           ;rgl.c: 2563: rgl.srp=0;
  3313  004CAA  0101               	movlb	(_rgl+7) shr (0+8)
  3314  004CAC  6BFA               	clrf	(_rgl+7)& (0+255),b
  3315                           ;rgl.c: 2564: rgl.ytmp=0;
  3316  004CAE  6BF9               	clrf	(_rgl+6)& (0+255),b
  3317                           ;rgl.c: 2565: rgl.del1s=0;
  3318  004CB0  9DF3               	bcf	_rgl& (0+255),6,b
  3319                           ;rgl.c: 2566: pop=0;
  3320  004CB2  010E               	movlb	F1842 shr (0+8)
  3321  004CB4  6BCD               	clrf	F1842& (0+255),b
  3322                           ;rgl.c: 2567: }
  3323                           ;rgl.c: 2568: else return;
  3324  004CB6                     l264:
  3325                           ;rgl.c: 2569: }
  3326  004CB6  0E01               	movlw	1
  3327  004CB8  ECD4  F02E         	call	_Tnizsza
  3328  004CBC  E21B               	bc	l267
  3329                           ;rgl.c: 2571: {
  3330  004CBE  0101               	movlb	_rgl shr (0+8)
  3331  004CC0  85F3               	bsf	_rgl& (0+255),2,b
  3332                           ;rgl.c: 2573: rgl.fast_up=0;
  3333  004CC2  99F3               	bcf	_rgl& (0+255),4,b
  3334                           ;rgl.c: 2574: rgl.med_up=0;
  3335  004CC4  97F3               	bcf	_rgl& (0+255),3,b
  3336                           ;rgl.c: 2575: rgl.srp=PWM.BufPWM+pop;
  3337  004CC6  CECD  FFE8         	movff	F1842,wreg
  3338  004CCA  0101               	movlb	(_PWM+1) shr (0+8)
  3339  004CCC  25D7               	addwf	(_PWM+1)& (0+255),w,b
  3340  004CCE  CFE8 F1FA          	movff	wreg,_rgl+7
  3341                           ;rgl.c: 2576: rgl.xmod=PWM.BufPWM+pop;
  3342  004CD2  CECD  FFE8         	movff	F1842,wreg
  3343  004CD6  25D7               	addwf	(_PWM+1)& (0+255),w,b
  3344  004CD8  CFE8 F1FB          	movff	wreg,_rgl+8
  3345                           ;rgl.c: 2577: pop=0;
  3346  004CDC  010E               	movlb	F1842 shr (0+8)
  3347  004CDE  6BCD               	clrf	F1842& (0+255),b
  3348                           ;rgl.c: 2578: if(rgl.xmod>PWM.MAXPWM)
  3349  004CE0  C1FB  FFE8         	movff	_rgl+8,wreg
  3350  004CE4  0101               	movlb	(_PWM+28) shr (0+8)
  3351  004CE6  61F2               	cpfslt	(_PWM+28)& (0+255),b
  3352  004CE8  0012               	return	
  3353                           ;rgl.c: 2579: {
  3354  004CEA  C1F2  F1FA         	movff	_PWM+28,_rgl+7
  3355                           ;rgl.c: 2581: rgl.xmod=PWM.MAXPWM;
  3356  004CEE  C1F2  F1FB         	movff	_PWM+28,_rgl+8
  3357                           ;rgl.c: 2582: }
  3358  004CF2  0012               	return	
  3359  004CF4                     l267:
  3360                           ;rgl.c: 2584: }
  3361  004CF4  C1F1  FFE8         	movff	_PWM+27,wreg
  3362  004CF8  0101               	movlb	(_rgl+8) shr (0+8)
  3363  004CFA  5DFB               	subwf	(_rgl+8)& (0+255),w,b
  3364  004CFC  E318               	bnc	l269
  3365  004CFE  0E0A               	movlw	10
  3366  004D00  6E02               	movwf	btemp+2,c
  3367  004D02  6A03               	clrf	btemp+3,c
  3368  004D04  C1F1  FFE8         	movff	_PWM+27,wreg
  3369  004D08  C1FB  F000         	movff	_rgl+8,btemp
  3370  004D0C  6A01               	clrf	btemp+1,c
  3371  004D0E  5E00               	subwf	btemp,f,c
  3372  004D10  0E00               	movlw	0
  3373  004D12  5A01               	subwfb	btemp+1,f,c
  3374  004D14  ECB7  F06D         	call	awmul
  3375  004D18  0100               	movlb	__Lparam shr (0+8)
  3376  004D1A  C004  F0A6         	movff	btemp+4,?a_ModZgCW2
  3377  004D1E  C005  F0A7         	movff	btemp+5,?a_ModZgCW2+1
  3378  004D22  0E00               	movlw	0
  3379  004D24  BFA7               	btfsc	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),7,b
  3380  004D26  0EFF               	movlw	-1
  3381  004D28  6FA8               	movwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),b
  3382  004D2A  6FA9               	movwf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),b
  3383  004D2C  D005               	goto	l270
  3384  004D2E                     l269:
  3385                           ;rgl.c: 2587: else m=0;
  3386  004D2E  0100               	movlb	__Lparam shr (0+8)
  3387  004D30  6BA6               	clrf	?a_ModZgCW2^(__Lparam& (0+65280)),b
  3388  004D32  6BA7               	clrf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),b
  3389  004D34  6BA8               	clrf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),b
  3390  004D36  6BA9               	clrf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),b
  3391  004D38                     l270:
  3392                           ;rgl.c: 2588: m=m/(signed long)(DtCW.MAD_CW-DtCW
      +                          .DAD_CW);
  3393  004D38  C07E  FFE8         	movff	_DtCW+14,wreg
  3394  004D3C  C07D  F000         	movff	_DtCW+13,btemp
  3395  004D40  5C00               	subwf	btemp,w,c
  3396  004D42  6E04               	movwf	btemp+4,c
  3397  004D44  6A05               	clrf	btemp+5,c
  3398  004D46  A0D8               	btfss	status,0,c
  3399  004D48  0605               	decf	btemp+5,f,c
  3400  004D4A  6A06               	clrf	btemp+6,c
  3401  004D4C  BE05               	btfsc	btemp+5,7,c
  3402  004D4E  0606               	decf	btemp+6,f,c
  3403  004D50  5006               	movf	btemp+6,w,c
  3404  004D52  6E07               	movwf	btemp+7,c
  3405  004D54  0EA6               	movlw	low ?a_ModZgCW2
  3406  004D56  6EE9               	movwf	fsr0l,c
  3407  004D58  0E00               	movlw	high ?a_ModZgCW2
  3408  004D5A  6EEA               	movwf	fsr0h,c
  3409  004D5C  ECF5  F06D         	call	aldiv_f
  3410                           ;rgl.c: 2589: m=m*(signed long)(DtCW.AC_CW-DtCW.
      +                          DAD_CW);
  3411  004D60  C07E  FFE8         	movff	_DtCW+14,wreg
  3412  004D64  C07C  F000         	movff	_DtCW+12,btemp
  3413  004D68  5C00               	subwf	btemp,w,c
  3414  004D6A  6E04               	movwf	btemp+4,c
  3415  004D6C  6A05               	clrf	btemp+5,c
  3416  004D6E  A0D8               	btfss	status,0,c
  3417  004D70  0605               	decf	btemp+5,f,c
  3418  004D72  6A06               	clrf	btemp+6,c
  3419  004D74  BE05               	btfsc	btemp+5,7,c
  3420  004D76  0606               	decf	btemp+6,f,c
  3421  004D78  5006               	movf	btemp+6,w,c
  3422  004D7A  6E07               	movwf	btemp+7,c
  3423  004D7C  0EA6               	movlw	low ?a_ModZgCW2
  3424  004D7E  6EE9               	movwf	fsr0l,c
  3425  004D80  0E00               	movlw	high ?a_ModZgCW2
  3426  004D82  6EEA               	movwf	fsr0h,c
  3427  004D84  ECEB  F06D         	call	almul_f
  3428                           ;rgl.c: 2590: if(m<0) m=0;
  3429  004D88  0100               	movlb	__Lparam shr (0+8)
  3430  004D8A  AFA9               	btfss	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),7,b
  3431  004D8C  D004               	goto	l271
  3432  004D8E  6BA6               	clrf	?a_ModZgCW2^(__Lparam& (0+65280)),b
  3433  004D90  6BA7               	clrf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),b
  3434  004D92  6BA8               	clrf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),b
  3435  004D94  6BA9               	clrf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),b
  3436  004D96                     l271:
  3437                           ;rgl.c: 2591: m=m/10+PWM.MINPWM;
  3438  004D96  0E0A               	movlw	10
  3439  004D98  6E04               	movwf	btemp+4,c
  3440  004D9A  6A05               	clrf	btemp+5,c
  3441  004D9C  6A06               	clrf	btemp+6,c
  3442  004D9E  6A07               	clrf	btemp+7,c
  3443  004DA0  C0A6  F000         	movff	?a_ModZgCW2,btemp
  3444  004DA4  C0A7  F001         	movff	?a_ModZgCW2+1,btemp+1
  3445  004DA8  C0A8  F002         	movff	?a_ModZgCW2+2,btemp+2
  3446  004DAC  C0A9  F003         	movff	?a_ModZgCW2+3,btemp+3
  3447  004DB0  ECF4  F06C         	call	aldiv
  3448  004DB4  C1F1  FFE8         	movff	_PWM+27,wreg
  3449  004DB8  2400               	addwf	btemp,w,c
  3450  004DBA  0100               	movlb	__Lparam shr (0+8)
  3451  004DBC  6FA6               	movwf	?a_ModZgCW2^(__Lparam& (0+65280)),b
  3452  004DBE  0E00               	movlw	0
  3453  004DC0  2001               	addwfc	btemp+1,w,c
  3454  004DC2  6FA7               	movwf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),b
  3455  004DC4  0E00               	movlw	0
  3456  004DC6  2002               	addwfc	btemp+2,w,c
  3457  004DC8  6FA8               	movwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),b
  3458  004DCA  0E00               	movlw	0
  3459  004DCC  2003               	addwfc	btemp+3,w,c
  3460  004DCE  6FA9               	movwf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),b
  3461                           ;rgl.c: 2592: if(m>0xff)
  3462  004DD0  51A9               	movf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),w
  3463  004DD2  0A80               	xorlw	128
  3464  004DD4  0F80               	addlw	128
  3465  004DD6  E108               	bnz	u2475
  3466  004DD8  0E00               	movlw	0
  3467  004DDA  5DA8               	subwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),w
  3468  004DDC  E105               	bnz	u2475
  3469  004DDE  0E01               	movlw	1
  3470  004DE0  5DA7               	subwf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),w
  3471  004DE2  E102               	bnz	u2475
  3472  004DE4  0E00               	movlw	0
  3473  004DE6  5DA6               	subwf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  3474  004DE8                     u2475:
  3475                           ;rgl.c: 2593: {
  3476  004DE8  0101               	movlb	_rgl shr (0+8)
  3477  004DEA  E304               	bnc	L34
  3478  004DEC  95F3               	bcf	_rgl& (0+255),2,b
  3479                           ;rgl.c: 2595: rgl.tmp_pwm=rgl.xmod;
  3480  004DEE  C1FB  F1FC         	movff	_rgl+8,_rgl+9
  3481                           ;rgl.c: 2596: return;
  3482  004DF2  0012               	return	
  3483                           ;rgl.c: 2597: }
  3484  004DF4                     L34:
  3485  004DF4  A5F3               	btfss	_rgl& (0+255),2,b
  3486  004DF6  D01C               	goto	l273
  3487  004DF8  C1FB  F000         	movff	_rgl+8,btemp
  3488  004DFC  6A01               	clrf	btemp+1,c
  3489  004DFE  6A02               	clrf	btemp+2,c
  3490  004E00  6A03               	clrf	btemp+3,c
  3491  004E02  0100               	movlb	__Lparam shr (0+8)
  3492  004E04  51A9               	movf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),w
  3493  004E06  0A80               	xorlw	128
  3494  004E08  6E04               	movwf	btemp+4,c
  3495  004E0A  5003               	movf	btemp+3,w,c
  3496  004E0C  0A80               	xorlw	128
  3497  004E0E  5C04               	subwf	btemp+4,w,c
  3498  004E10  E108               	bnz	u2495
  3499  004E12  5002               	movf	btemp+2,w,c
  3500  004E14  5DA8               	subwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),w
  3501  004E16  E105               	bnz	u2495
  3502  004E18  5001               	movf	btemp+1,w,c
  3503  004E1A  5DA7               	subwf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),w
  3504  004E1C  E102               	bnz	u2495
  3505  004E1E  5000               	movf	btemp,w,c
  3506  004E20  5DA6               	subwf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  3507  004E22                     u2495:
  3508  004E22  E206               	bc	l273
  3509                           ;rgl.c: 2599: rgl.srp=(rgl.xmod-m);
  3510  004E24  0100               	movlb	__Lparam shr (0+8)
  3511  004E26  51A6               	movf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  3512  004E28  0101               	movlb	(_rgl+8) shr (0+8)
  3513  004E2A  5DFB               	subwf	(_rgl+8)& (0+255),w,b
  3514  004E2C  CFE8 F1FA          	movff	wreg,_rgl+7
  3515  004E30                     l273:
  3516                           ;rgl.c: 2601: m+=rgl.srp;
  3517  004E30  C1FA  FFE8         	movff	_rgl+7,wreg
  3518  004E34  0100               	movlb	__Lparam shr (0+8)
  3519  004E36  27A6               	addwf	?a_ModZgCW2^(__Lparam& (0+65280)),f,b
  3520  004E38  0E01               	movlw	1
  3521  004E3A  B0D8               	btfsc	status,0,c
  3522  004E3C  27A7               	addwf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),f,b
  3523  004E3E  B0D8               	btfsc	status,0,c
  3524  004E40  27A8               	addwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),f,b
  3525  004E42  B0D8               	btfsc	status,0,c
  3526  004E44  27A9               	addwf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),f,b
  3527                           ;rgl.c: 2602: if(m>rgl.xmod) p=rgl.xmod;
  3528  004E46  C1FB  F000         	movff	_rgl+8,btemp
  3529  004E4A  6A01               	clrf	btemp+1,c
  3530  004E4C  6A02               	clrf	btemp+2,c
  3531  004E4E  6A03               	clrf	btemp+3,c
  3532  004E50  5003               	movf	btemp+3,w,c
  3533  004E52  0A80               	xorlw	128
  3534  004E54  6E04               	movwf	btemp+4,c
  3535  004E56  51A9               	movf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),w
  3536  004E58  0A80               	xorlw	128
  3537  004E5A  5C04               	subwf	btemp+4,w,c
  3538  004E5C  E108               	bnz	u2515
  3539  004E5E  51A8               	movf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),w
  3540  004E60  5C02               	subwf	btemp+2,w,c
  3541  004E62  E105               	bnz	u2515
  3542  004E64  51A7               	movf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),w
  3543  004E66  5C01               	subwf	btemp+1,w,c
  3544  004E68  E102               	bnz	u2515
  3545  004E6A  51A6               	movf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  3546  004E6C  5C00               	subwf	btemp,w,c
  3547  004E6E                     u2515:
  3548  004E6E  E203               	bc	l274
  3549  004E70  C1FB  FFD9         	movff	_rgl+8,fsr2l
  3550  004E74  D003               	goto	l275
  3551  004E76                     l274:
  3552                           ;rgl.c: 2603: else p=(unsigned char)m;
  3553  004E76  0100               	movlb	__Lparam shr (0+8)
  3554  004E78  51A6               	movf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  3555  004E7A  6ED9               	movwf	fsr2l,c
  3556  004E7C                     l275:
  3557                           ;rgl.c: 2604: rgl.fz=0;
  3558  004E7C  0101               	movlb	_rgl shr (0+8)
  3559  004E7E  95F3               	bcf	_rgl& (0+255),2,b
  3560                           ;rgl.c: 2605: rgl.tmp_pwm=p;
  3561  004E80  CFD9 F1FC          	movff	fsr2l,_rgl+9
  3562                           ;rgl.c: 2606: }
  3563  004E84  0012               	return	
  3564  004E86                     __end_of_ModZgCW2:
  3565                           ;rgl.c: 2616: void ModDkCW2(void)
  3566                           ;rgl.c: 2617: {
  3567  004E86                     _ModDkCW2:
  3568  000000                     
  3569                           ;rgl.c: 2618: signed long m;
  3570  004E86  0101               	movlb	_rgl shr (0+8)
  3571  004E88  A5F3               	btfss	_rgl& (0+255),2,b
  3572  004E8A  0012               	return	
  3573                           ;rgl.c: 2623: {
  3574                           ;rgl.c: 2626: }
  3575  004E8C  C07E  FFE8         	movff	_DtCW+14,wreg
  3576  004E90  0100               	movlb	(_DtCW+12) shr (0+8)
  3577  004E92  5D7C               	subwf	(_DtCW+12)& (0+255),w,b
  3578  004E94  6EE1               	movwf	fsr1l,c
  3579                           ;rgl.c: 2629: k=6;
  3580  004E96  0E06               	movlw	6
  3581  004E98  6ED9               	movwf	fsr2l,c
  3582                           ;rgl.c: 2630: if(ada<0) k=5;
  3583  004E9A  AEE1               	btfss	fsr1l,7,c
  3584  004E9C  D002               	goto	l278
  3585  004E9E  0E05               	movlw	5
  3586  004EA0  6ED9               	movwf	fsr2l,c
  3587  004EA2                     l278:
  3588                           ;rgl.c: 2634: pop=0;
  3589  004EA2  6AE9               	clrf	fsr0l,c
  3590                           ;rgl.c: 2636: m=rgl.srp+(k-pop)*(signed long)ada
      +                          ;
  3591  004EA4  50E1               	movf	fsr1l,w,c
  3592  004EA6  6E04               	movwf	btemp+4,c
  3593  004EA8  0E00               	movlw	0
  3594  004EAA  BE04               	btfsc	btemp+4,7,c
  3595  004EAC  0EFF               	movlw	255
  3596  004EAE  6E05               	movwf	btemp+5,c
  3597  004EB0  6E06               	movwf	btemp+6,c
  3598  004EB2  6E07               	movwf	btemp+7,c
  3599  004EB4  CFD9 F000          	movff	fsr2l,btemp
  3600  004EB8  6A01               	clrf	btemp+1,c
  3601  004EBA  6A02               	clrf	btemp+2,c
  3602  004EBC  6A03               	clrf	btemp+3,c
  3603  004EBE  EC69  F06B         	call	almul
  3604  004EC2  C1FA  FFE8         	movff	_rgl+7,wreg
  3605  004EC6  2400               	addwf	btemp,w,c
  3606  004EC8  0100               	movlb	__Lparam shr (0+8)
  3607  004ECA  6FA6               	movwf	?a_ModDkCW2^(__Lparam& (0+65280)),b
  3608  004ECC  0E00               	movlw	0
  3609  004ECE  2001               	addwfc	btemp+1,w,c
  3610  004ED0  6FA7               	movwf	(?a_ModDkCW2+1)^(__Lparam& (0+65280)),b
  3611  004ED2  0E00               	movlw	0
  3612  004ED4  2002               	addwfc	btemp+2,w,c
  3613  004ED6  6FA8               	movwf	(?a_ModDkCW2+2)^(__Lparam& (0+65280)),b
  3614  004ED8  0E00               	movlw	0
  3615  004EDA  2003               	addwfc	btemp+3,w,c
  3616  004EDC  6FA9               	movwf	(?a_ModDkCW2+3)^(__Lparam& (0+65280)),b
  3617                           ;rgl.c: 2637: if(m>rgl.xmod) p=rgl.xmod;
  3618  004EDE  C1FB  F000         	movff	_rgl+8,btemp
  3619  004EE2  6A01               	clrf	btemp+1,c
  3620  004EE4  6A02               	clrf	btemp+2,c
  3621  004EE6  6A03               	clrf	btemp+3,c
  3622  004EE8  5003               	movf	btemp+3,w,c
  3623  004EEA  0A80               	xorlw	128
  3624  004EEC  6E04               	movwf	btemp+4,c
  3625  004EEE  51A9               	movf	(?a_ModDkCW2+3)^(__Lparam& (0+65280)),w
  3626  004EF0  0A80               	xorlw	128
  3627  004EF2  5C04               	subwf	btemp+4,w,c
  3628  004EF4  E108               	bnz	u2545
  3629  004EF6  51A8               	movf	(?a_ModDkCW2+2)^(__Lparam& (0+65280)),w
  3630  004EF8  5C02               	subwf	btemp+2,w,c
  3631  004EFA  E105               	bnz	u2545
  3632  004EFC  51A7               	movf	(?a_ModDkCW2+1)^(__Lparam& (0+65280)),w
  3633  004EFE  5C01               	subwf	btemp+1,w,c
  3634  004F00  E102               	bnz	u2545
  3635  004F02  51A6               	movf	?a_ModDkCW2^(__Lparam& (0+65280)),w
  3636  004F04  5C00               	subwf	btemp,w,c
  3637  004F06                     u2545:
  3638  004F06  E203               	bc	l279
  3639  004F08  C1FB  FFD9         	movff	_rgl+8,fsr2l
  3640  004F0C  D01C               	goto	l280
  3641  004F0E                     l279:
  3642                           ;rgl.c: 2638: else
  3643  004F0E  C1F1  F000         	movff	_PWM+27,btemp
  3644  004F12  6A01               	clrf	btemp+1,c
  3645  004F14  6A02               	clrf	btemp+2,c
  3646  004F16  6A03               	clrf	btemp+3,c
  3647  004F18  0100               	movlb	__Lparam shr (0+8)
  3648  004F1A  51A9               	movf	(?a_ModDkCW2+3)^(__Lparam& (0+65280)),w
  3649  004F1C  0A80               	xorlw	128
  3650  004F1E  6E04               	movwf	btemp+4,c
  3651  004F20  5003               	movf	btemp+3,w,c
  3652  004F22  0A80               	xorlw	128
  3653  004F24  5C04               	subwf	btemp+4,w,c
  3654  004F26  E108               	bnz	u2555
  3655  004F28  5002               	movf	btemp+2,w,c
  3656  004F2A  5DA8               	subwf	(?a_ModDkCW2+2)^(__Lparam& (0+65280)),w
  3657  004F2C  E105               	bnz	u2555
  3658  004F2E  5001               	movf	btemp+1,w,c
  3659  004F30  5DA7               	subwf	(?a_ModDkCW2+1)^(__Lparam& (0+65280)),w
  3660  004F32  E102               	bnz	u2555
  3661  004F34  5000               	movf	btemp,w,c
  3662  004F36  5DA6               	subwf	?a_ModDkCW2^(__Lparam& (0+65280)),w
  3663  004F38                     u2555:
  3664  004F38  E203               	bc	l281
  3665  004F3A  C1F1  FFD9         	movff	_PWM+27,fsr2l
  3666  004F3E  D003               	goto	l280
  3667  004F40                     l281:
  3668                           ;rgl.c: 2640: else p=(unsigned char)m;
  3669  004F40  0100               	movlb	__Lparam shr (0+8)
  3670  004F42  51A6               	movf	?a_ModDkCW2^(__Lparam& (0+65280)),w
  3671  004F44  6ED9               	movwf	fsr2l,c
  3672  004F46                     l280:
  3673                           ;rgl.c: 2641: rgl.tmp_pwm=p;
  3674  004F46  CFD9 F1FC          	movff	fsr2l,_rgl+9
  3675                           ;rgl.c: 2642: }
  3676  004F4A  0012               	return	
  3677  004F4C                     __end_of_ModDkCW2:
  3678                           ;rgl.c: 2648: void ModPruCW2(void)
  3679                           ;rgl.c: 2649: {
  3680  004F4C                     _ModPruCW2:
  3681  000000                     
  3682                           ;rgl.c: 2650: static unsigned char l,m,o,p,q,r,s
      +                          ;
  3683  004F4C  0101               	movlb	_rgl shr (0+8)
  3684  004F4E  B5F3               	btfsc	_rgl& (0+255),2,b
  3685  004F50  D0A1               	goto	l284
  3686                           ;rgl.c: 2655: {
  3687  004F52  010E               	movlb	F1855 shr (0+8)
  3688  004F54  6BCE               	clrf	F1855& (0+255),b
  3689                           ;rgl.c: 2657: m=0;
  3690  004F56  010E               	movlb	F1856 shr (0+8)
  3691  004F58  6BCF               	clrf	F1856& (0+255),b
  3692                           ;rgl.c: 2658: o=0;
  3693  004F5A  010E               	movlb	F1857 shr (0+8)
  3694  004F5C  6BD0               	clrf	F1857& (0+255),b
  3695                           ;rgl.c: 2659: p=0;
  3696  004F5E  010E               	movlb	F1858 shr (0+8)
  3697  004F60  6BD1               	clrf	F1858& (0+255),b
  3698                           ;rgl.c: 2660: if(q<255) q++;
  3699  004F62  CED2  F000         	movff	F1859,btemp
  3700  004F66  2800               	incf	btemp,w,c
  3701  004F68  E002               	bz	l285
  3702  004F6A  010E               	movlb	F1859 shr (0+8)
  3703  004F6C  2BD2               	incf	F1859& (0+255),f,b
  3704  004F6E                     l285:
  3705                           ;rgl.c: 2661: if(s<255) s++;
  3706  004F6E  CED4  F000         	movff	F1861,btemp
  3707  004F72  2800               	incf	btemp,w,c
  3708  004F74  E002               	bz	l286
  3709  004F76  010E               	movlb	F1861 shr (0+8)
  3710  004F78  2BD4               	incf	F1861& (0+255),f,b
  3711  004F7A                     l286:
  3712                           ;rgl.c: 2662: if(DtCW._newPCW) s=0;
  3713  004F7A  0100               	movlb	(_DtCW+1) shr (0+8)
  3714  004F7C  A171               	btfss	(_DtCW+1)& (0+255),0,b
  3715  004F7E  D002               	goto	l287
  3716  004F80  010E               	movlb	F1861 shr (0+8)
  3717  004F82  6BD4               	clrf	F1861& (0+255),b
  3718  004F84                     l287:
  3719                           ;rgl.c: 2663: if(Tnizsza(0))
  3720  004F84  0E00               	movlw	0
  3721  004F86  ECD4  F02E         	call	_Tnizsza
  3722  004F8A  A0D8               	btfss	status,0,c
  3723  004F8C  0012               	return	
  3724                           ;rgl.c: 2664: {
  3725  004F8E  0E0A               	movlw	10
  3726  004F90  ECD4  F02E         	call	_Tnizsza
  3727  004F94  B0D8               	btfsc	status,0,c
  3728  004F96  0012               	return	
  3729                           ;rgl.c: 2666: {
  3730  004F98  0100               	movlb	__Lparam shr (0+8)
  3731  004F9A  6BA6               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  3732                           ;rgl.c: 2668: if((Trosnie(1)||TFrosnie(1)))
  3733  004F9C  0E01               	movlw	1
  3734  004F9E  ECA5  F02E         	call	_Trosnie
  3735  004FA2  E204               	bc	u2640
  3736  004FA4  0E01               	movlw	1
  3737  004FA6  EC03  F02F         	call	_TFrosnie
  3738  004FAA  E314               	bnc	l290
  3739  004FAC                     u2640:
  3740                           ;rgl.c: 2669: {
  3741  004FAC  0E00               	movlw	0
  3742  004FAE  010E               	movlb	F1861 shr (0+8)
  3743  004FB0  65D4               	cpfsgt	F1861& (0+255),b
  3744  004FB2  D036               	goto	l293
  3745                           ;rgl.c: 2671: {
  3746  004FB4  6BD4               	clrf	F1861& (0+255),b
  3747                           ;rgl.c: 2673: q=0;
  3748  004FB6  010E               	movlb	F1859 shr (0+8)
  3749  004FB8  6BD2               	clrf	F1859& (0+255),b
  3750                           ;rgl.c: 2674: k=10;
  3751  004FBA  0E0A               	movlw	10
  3752  004FBC  0100               	movlb	__Lparam shr (0+8)
  3753  004FBE  6FA6               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  3754                           ;rgl.c: 2675: if(Trosnie(2)||TFrosnie(2)) k=8;
  3755  004FC0  0E02               	movlw	2
  3756  004FC2  ECA5  F02E         	call	_Trosnie
  3757  004FC6  E204               	bc	u2680
  3758  004FC8  0E02               	movlw	2
  3759  004FCA  EC03  F02F         	call	_TFrosnie
  3760  004FCE  E328               	bnc	l293
  3761  004FD0                     u2680:
  3762  004FD0  0E08               	movlw	8
  3763  004FD2  D00D               	goto	L5
  3764                           ;rgl.c: 2676: }
  3765  004FD4                     l290:
  3766                           ;rgl.c: 2678: else
  3767  004FD4  0E00               	movlw	0
  3768  004FD6  EC10  F02F         	call	_TFmaleje
  3769  004FDA  E30C               	bnc	l294
  3770                           ;rgl.c: 2680: {
  3771  004FDC  0E00               	movlw	0
  3772  004FDE  010E               	movlb	F1859 shr (0+8)
  3773  004FE0  65D2               	cpfsgt	F1859& (0+255),b
  3774  004FE2  D01E               	goto	l293
  3775                           ;rgl.c: 2682: {
  3776  004FE4  010E               	movlb	F1861 shr (0+8)
  3777  004FE6  6BD4               	clrf	F1861& (0+255),b
  3778                           ;rgl.c: 2684: q=0;
  3779  004FE8  010E               	movlb	F1859 shr (0+8)
  3780  004FEA  6BD2               	clrf	F1859& (0+255),b
  3781                           ;rgl.c: 2685: k=6;
  3782  004FEC  0E06               	movlw	6
  3783  004FEE                     L5:
  3784  004FEE  0100               	movlb	__Lparam shr (0+8)
  3785  004FF0  6FA6               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  3786                           ;rgl.c: 2686: }
  3787  004FF2  D016               	goto	l293
  3788  004FF4                     l294:
  3789                           ;rgl.c: 2688: else
  3790  004FF4  EC2B  F02F         	call	_TFstoi	;wreg free
  3791  004FF8  E313               	bnc	l293
  3792                           ;rgl.c: 2690: {
  3793  004FFA  0E00               	movlw	0
  3794  004FFC  010E               	movlb	F1860 shr (0+8)
  3795  004FFE  65D3               	cpfsgt	F1860& (0+255),b
  3796  005000  D00B               	goto	l298
  3797                           ;rgl.c: 2692: {
  3798  005002  ECA5  F02E         	call	_Trosnie
  3799  005006  E202               	bc	l299
  3800  005008  0E1E               	movlw	30
  3801  00500A  D001               	goto	L6
  3802  00500C                     l299:
  3803                           ;rgl.c: 2694: else k=10;
  3804  00500C  0E0A               	movlw	10
  3805  00500E                     L6:
  3806  00500E  0100               	movlb	__Lparam shr (0+8)
  3807  005010  6FA6               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  3808                           ;rgl.c: 2695: r=0;
  3809  005012  010E               	movlb	F1860 shr (0+8)
  3810  005014  6BD3               	clrf	F1860& (0+255),b
  3811                           ;rgl.c: 2696: }
  3812  005016  D004               	goto	l293
  3813  005018                     l298:
  3814                           ;rgl.c: 2697: else
  3815  005018  0100               	movlb	__Lparam shr (0+8)
  3816  00501A  6BA6               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  3817                           ;rgl.c: 2700: r++;
  3818  00501C  010E               	movlb	F1860 shr (0+8)
  3819  00501E  2BD3               	incf	F1860& (0+255),f,b
  3820  005020                     l293:
  3821                           ;rgl.c: 2701: }
  3822  005020  0101               	movlb	(_rgl+6) shr (0+8)
  3823  005022  6BF9               	clrf	(_rgl+6)& (0+255),b
  3824                           ;rgl.c: 2706: if(PWM.BufPWM<rgl.xmod) tmp=rgl.xm
      +                          od-PWM.BufPWM;
  3825  005024  C1FB  FFE8         	movff	_rgl+8,wreg
  3826  005028  0101               	movlb	(_PWM+1) shr (0+8)
  3827  00502A  61D7               	cpfslt	(_PWM+1)& (0+255),b
  3828  00502C  D006               	goto	l302
  3829  00502E  C1D7  FFE8         	movff	_PWM+1,wreg
  3830  005032  0101               	movlb	(_rgl+8) shr (0+8)
  3831  005034  5DFB               	subwf	(_rgl+8)& (0+255),w,b
  3832  005036  6ED9               	movwf	fsr2l,c
  3833  005038  D001               	goto	l303
  3834  00503A                     l302:
  3835                           ;rgl.c: 2707: else tmp=0;
  3836  00503A  6AD9               	clrf	fsr2l,c
  3837  00503C                     l303:
  3838                           ;rgl.c: 2708: if(tmp&&k>tmp) k=tmp;
  3839  00503C  50D9               	movf	fsr2l,w,c
  3840  00503E  E00B               	bz	l304
  3841  005040  50D9               	movf	fsr2l,w,c
  3842  005042  0100               	movlb	__Lparam shr (0+8)
  3843  005044  94D8               	bcf	status,2,c
  3844  005046  90D8               	bcf	status,0,c
  3845  005048  AFA6               	btfss	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  3846  00504A  5DA6               	subwf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  3847  00504C  B4D8               	btfsc	status,2,c
  3848  00504E  90D8               	bcf	status,0,c
  3849  005050  E302               	bnc	l304
  3850  005052  50D9               	movf	fsr2l,w,c
  3851  005054  6FA6               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  3852  005056                     l304:
  3853                           ;rgl.c: 2709: if(rgl.srp+k>PWM.MAXPWM) rgl.srp=P
      +                          WM.MAXPWM;
  3854  005056  C1FA  FFE8         	movff	_rgl+7,wreg
  3855  00505A  0100               	movlb	__Lparam shr (0+8)
  3856  00505C  25A6               	addwf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  3857  00505E  6E02               	movwf	btemp+2,c
  3858  005060  6A03               	clrf	btemp+3,c
  3859  005062  B0D8               	btfsc	status,0,c
  3860  005064  2A03               	incf	btemp+3,f,c
  3861  005066  BFA6               	btfsc	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  3862  005068  0603               	decf	btemp+3,f,c
  3863  00506A  C1F2  F000         	movff	_PWM+28,btemp
  3864  00506E  6A01               	clrf	btemp+1,c
  3865  005070  5001               	movf	btemp+1,w,c
  3866  005072  0A80               	xorlw	128
  3867  005074  6E04               	movwf	btemp+4,c
  3868  005076  5003               	movf	btemp+3,w,c
  3869  005078  0A80               	xorlw	128
  3870  00507A  5C04               	subwf	btemp+4,w,c
  3871  00507C  E102               	bnz	u2785
  3872  00507E  5002               	movf	btemp+2,w,c
  3873  005080  5C00               	subwf	btemp,w,c
  3874  005082                     u2785:
  3875  005082  E203               	bc	l305
  3876  005084  C1F2  F1FA         	movff	_PWM+28,_rgl+7
  3877  005088  0012               	return	
  3878  00508A                     l305:
  3879                           ;rgl.c: 2710: else rgl.srp+=k;
  3880  00508A  0100               	movlb	__Lparam shr (0+8)
  3881  00508C  51A6               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  3882  00508E  0101               	movlb	(_rgl+7) shr (0+8)
  3883  005090  27FA               	addwf	(_rgl+7)& (0+255),f,b
  3884                           ;rgl.c: 2711: return;
  3885  005092  0012               	return	
  3886                           ;rgl.c: 2713: else return;
  3887                           ;rgl.c: 2715: else return;
  3888  005094                     l284:
  3889                           ;rgl.c: 2717: else
  3890  005094  010E               	movlb	F1859 shr (0+8)
  3891  005096  6BD2               	clrf	F1859& (0+255),b
  3892                           ;rgl.c: 2720: r=0;
  3893  005098  010E               	movlb	F1860 shr (0+8)
  3894  00509A  6BD3               	clrf	F1860& (0+255),b
  3895                           ;rgl.c: 2721: s=0;
  3896  00509C  010E               	movlb	F1861 shr (0+8)
  3897  00509E  6BD4               	clrf	F1861& (0+255),b
  3898                           ;rgl.c: 2722: if(m<255) m++;
  3899  0050A0  CECF  F000         	movff	F1856,btemp
  3900  0050A4  2800               	incf	btemp,w,c
  3901  0050A6  E002               	bz	l310
  3902  0050A8  010E               	movlb	F1856 shr (0+8)
  3903  0050AA  2BCF               	incf	F1856& (0+255),f,b
  3904  0050AC                     l310:
  3905                           ;rgl.c: 2723: if(p<255) p++;
  3906  0050AC  CED1  F000         	movff	F1858,btemp
  3907  0050B0  2800               	incf	btemp,w,c
  3908  0050B2  E002               	bz	l311
  3909  0050B4  010E               	movlb	F1858 shr (0+8)
  3910  0050B6  2BD1               	incf	F1858& (0+255),f,b
  3911  0050B8                     l311:
  3912                           ;rgl.c: 2724: if(o<255) o++;
  3913  0050B8  CED0  F000         	movff	F1857,btemp
  3914  0050BC  2800               	incf	btemp,w,c
  3915  0050BE  E002               	bz	l312
  3916  0050C0  010E               	movlb	F1857 shr (0+8)
  3917  0050C2  2BD0               	incf	F1857& (0+255),f,b
  3918  0050C4                     l312:
  3919                           ;rgl.c: 2726: if(DtCW.DAD_CW>DtCW.AC_CW)
  3920  0050C4  C07E  FFE8         	movff	_DtCW+14,wreg
  3921  0050C8  0100               	movlb	(_DtCW+12) shr (0+8)
  3922  0050CA  617C               	cpfslt	(_DtCW+12)& (0+255),b
  3923  0050CC  D07B               	goto	l313
  3924                           ;rgl.c: 2727: {
  3925  0050CE  0100               	movlb	__Lparam shr (0+8)
  3926  0050D0  6BA6               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  3927                           ;rgl.c: 2729: if(TFmaleje(0)&&!Twyzsza(0))
  3928  0050D2  0E00               	movlw	0
  3929  0050D4  EC10  F02F         	call	_TFmaleje
  3930  0050D8  0E00               	movlw	0
  3931  0050DA  E310               	bnc	L35
  3932  0050DC  ECE1  F02E         	call	_Twyzsza
  3933  0050E0  E20C               	bc	l314
  3934                           ;rgl.c: 2730: {
  3935  0050E2  0E01               	movlw	1
  3936  0050E4  010E               	movlb	F1858 shr (0+8)
  3937  0050E6  65D1               	cpfsgt	F1858& (0+255),b
  3938  0050E8  D03F               	goto	l316
  3939                           ;rgl.c: 2732: {
  3940  0050EA  6BD1               	clrf	F1858& (0+255),b
  3941                           ;rgl.c: 2734: o=0;
  3942  0050EC  010E               	movlb	F1857 shr (0+8)
  3943  0050EE  6BD0               	clrf	F1857& (0+255),b
  3944                           ;rgl.c: 2735: m=0;
  3945  0050F0  010E               	movlb	F1856 shr (0+8)
  3946  0050F2  6BCF               	clrf	F1856& (0+255),b
  3947                           ;rgl.c: 2736: k=-1;
  3948  0050F4  0100               	movlb	__Lparam shr (0+8)
  3949  0050F6  69A6               	setf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  3950                           ;rgl.c: 2737: }
  3951  0050F8  D037               	goto	l316
  3952  0050FA                     l314:
  3953                           ;rgl.c: 2739: else
  3954  0050FA  0E00               	movlw	0
  3955  0050FC                     L35:
  3956  0050FC  EC03  F02F         	call	_TFrosnie
  3957  005100  E308               	bnc	l317
  3958                           ;rgl.c: 2741: {
  3959  005102  0E01               	movlw	1
  3960  005104  010E               	movlb	F1857 shr (0+8)
  3961  005106  65D0               	cpfsgt	F1857& (0+255),b
  3962  005108  D02F               	goto	l316
  3963                           ;rgl.c: 2743: {
  3964  00510A  6BD0               	clrf	F1857& (0+255),b
  3965                           ;rgl.c: 2745: p=0;
  3966  00510C  010E               	movlb	F1858 shr (0+8)
  3967  00510E  6BD1               	clrf	F1858& (0+255),b
  3968  005110  D00C               	goto	L7
  3969                           ;rgl.c: 2746: m=0;
  3970                           ;rgl.c: 2747: k=1;
  3971                           ;rgl.c: 2748: }
  3972  005112                     l317:
  3973                           ;rgl.c: 2750: else
  3974  005112  0E00               	movlw	0
  3975  005114  ECA5  F02E         	call	_Trosnie
  3976  005118  E30E               	bnc	l320
  3977                           ;rgl.c: 2752: {
  3978  00511A  0E01               	movlw	1
  3979  00511C  010E               	movlb	F1856 shr (0+8)
  3980  00511E  65CF               	cpfsgt	F1856& (0+255),b
  3981  005120  D023               	goto	l316
  3982                           ;rgl.c: 2754: {
  3983  005122  010E               	movlb	F1858 shr (0+8)
  3984  005124  6BD1               	clrf	F1858& (0+255),b
  3985                           ;rgl.c: 2756: o=0;
  3986  005126  010E               	movlb	F1857 shr (0+8)
  3987  005128  6BD0               	clrf	F1857& (0+255),b
  3988  00512A                     L7:
  3989                           ;rgl.c: 2757: m=0;
  3990  00512A  010E               	movlb	F1856 shr (0+8)
  3991  00512C  6BCF               	clrf	F1856& (0+255),b
  3992                           ;rgl.c: 2758: k=1;
  3993  00512E  0E01               	movlw	1
  3994  005130  0100               	movlb	__Lparam shr (0+8)
  3995  005132  6FA6               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  3996                           ;rgl.c: 2759: }
  3997  005134  D019               	goto	l316
  3998  005136                     l320:
  3999                           ;rgl.c: 2761: else
  4000  005136  0E02               	movlw	2
  4001  005138  ECE1  F02E         	call	_Twyzsza
  4002  00513C  E313               	bnc	l323
  4003                           ;rgl.c: 2763: {
  4004  00513E  ECCD  F02E         	call	_Tstoi	;wreg free
  4005  005142  E312               	bnc	l316
  4006  005144  EC2B  F02F         	call	_TFstoi	;wreg free
  4007  005148  E30F               	bnc	l316
  4008                           ;rgl.c: 2765: {
  4009  00514A  0E01               	movlw	1
  4010  00514C  010E               	movlb	F1855 shr (0+8)
  4011  00514E  65CE               	cpfsgt	F1855& (0+255),b
  4012  005150  D004               	goto	l325
  4013                           ;rgl.c: 2767: {
  4014  005152  0E02               	movlw	2
  4015  005154  0100               	movlb	__Lparam shr (0+8)
  4016  005156  6FA6               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  4017  005158  D005               	goto	l323
  4018                           ;rgl.c: 2769: l=0;
  4019                           ;rgl.c: 2770: }
  4020  00515A                     l325:
  4021                           ;rgl.c: 2771: else
  4022  00515A  0100               	movlb	__Lparam shr (0+8)
  4023  00515C  6BA6               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  4024                           ;rgl.c: 2774: l++;
  4025  00515E  010E               	movlb	F1855 shr (0+8)
  4026  005160  2BCE               	incf	F1855& (0+255),f,b
  4027                           ;rgl.c: 2775: }
  4028  005162  D002               	goto	l316
  4029  005164                     l323:
  4030  005164  010E               	movlb	F1855 shr (0+8)
  4031  005166  6BCE               	clrf	F1855& (0+255),b
  4032  005168                     l316:
  4033                           ;rgl.c: 2778: if(rgl.srp-k<PWM.MINPWM) rgl.srp=P
      +                          WM.MINPWM;
  4034  005168  C1F1  F000         	movff	_PWM+27,btemp
  4035  00516C  6A01               	clrf	btemp+1,c
  4036  00516E  C1FA  F002         	movff	_rgl+7,btemp+2
  4037  005172  0100               	movlb	__Lparam shr (0+8)
  4038  005174  51A6               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  4039  005176  5C02               	subwf	btemp+2,w,c
  4040  005178  6EF6               	movwf	tblptrl,c
  4041  00517A  6AF7               	clrf	tblptrh,c
  4042  00517C  B0D8               	btfsc	status,0,c
  4043  00517E  2AF7               	incf	tblptrh,f,c
  4044  005180  AFA6               	btfss	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  4045  005182  06F7               	decf	tblptrh,f,c
  4046  005184  50F7               	movf	tblptrh,w,c
  4047  005186  0A80               	xorlw	128
  4048  005188  6E02               	movwf	btemp+2,c
  4049  00518A  5001               	movf	btemp+1,w,c
  4050  00518C  0A80               	xorlw	128
  4051  00518E  5C02               	subwf	btemp+2,w,c
  4052  005190  E102               	bnz	u2965
  4053  005192  5000               	movf	btemp,w,c
  4054  005194  5CF6               	subwf	tblptrl,w,c
  4055  005196                     u2965:
  4056  005196  E203               	bc	l328
  4057  005198  C1F1  F1FA         	movff	_PWM+27,_rgl+7
  4058  00519C  D004               	goto	l329
  4059  00519E                     l328:
  4060                           ;rgl.c: 2779: else rgl.srp-=k;
  4061  00519E  0100               	movlb	__Lparam shr (0+8)
  4062  0051A0  51A6               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  4063  0051A2  0101               	movlb	(_rgl+7) shr (0+8)
  4064  0051A4  5FFA               	subwf	(_rgl+7)& (0+255),f,b
  4065  0051A6                     l329:
  4066                           ;rgl.c: 2780: if(rgl.srp>PWM.MAXPWM) rgl.srp=PWM
      +                          .MAXPWM;
  4067  0051A6  C1FA  FFE8         	movff	_rgl+7,wreg
  4068  0051AA  0101               	movlb	(_PWM+28) shr (0+8)
  4069  0051AC  61F2               	cpfslt	(_PWM+28)& (0+255),b
  4070  0051AE  D002               	goto	l330
  4071  0051B0  C1F2  F1FA         	movff	_PWM+28,_rgl+7
  4072  0051B4                     l330:
  4073                           ;rgl.c: 2781: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.
      +                          srp;
  4074  0051B4  C1FA  FFE8         	movff	_rgl+7,wreg
  4075  0051B8  0101               	movlb	(_rgl+8) shr (0+8)
  4076  0051BA  61FB               	cpfslt	(_rgl+8)& (0+255),b
  4077  0051BC  0012               	return	
  4078  0051BE  C1FA  F1FB         	movff	_rgl+7,_rgl+8
  4079                           ;rgl.c: 2782: return;
  4080  0051C2  0012               	return	
  4081  0051C4                     l313:
  4082                           ;rgl.c: 2785: else
  4083  0051C4  0100               	movlb	__Lparam shr (0+8)
  4084  0051C6  6BA6               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  4085                           ;rgl.c: 2788: if(TFrosnie(0)&&!Tnizsza(0))
  4086  0051C8  0E00               	movlw	0
  4087  0051CA  EC03  F02F         	call	_TFrosnie
  4088  0051CE  0E00               	movlw	0
  4089  0051D0  E312               	bnc	L36
  4090  0051D2  ECD4  F02E         	call	_Tnizsza
  4091  0051D6  E20E               	bc	l333
  4092                           ;rgl.c: 2789: {
  4093  0051D8  0E01               	movlw	1
  4094  0051DA  010E               	movlb	F1857 shr (0+8)
  4095  0051DC  65D0               	cpfsgt	F1857& (0+255),b
  4096  0051DE  D03F               	goto	l335
  4097                           ;rgl.c: 2791: {
  4098  0051E0  6BD0               	clrf	F1857& (0+255),b
  4099                           ;rgl.c: 2793: p=0;
  4100  0051E2  010E               	movlb	F1858 shr (0+8)
  4101  0051E4  6BD1               	clrf	F1858& (0+255),b
  4102                           ;rgl.c: 2794: l=0;
  4103  0051E6  010E               	movlb	F1855 shr (0+8)
  4104  0051E8  6BCE               	clrf	F1855& (0+255),b
  4105                           ;rgl.c: 2795: m=0;
  4106  0051EA  010E               	movlb	F1856 shr (0+8)
  4107  0051EC  6BCF               	clrf	F1856& (0+255),b
  4108                           ;rgl.c: 2796: k=-1;
  4109  0051EE  0100               	movlb	__Lparam shr (0+8)
  4110  0051F0  69A6               	setf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  4111                           ;rgl.c: 2797: }
  4112  0051F2  D035               	goto	l335
  4113  0051F4                     l333:
  4114                           ;rgl.c: 2799: else
  4115  0051F4  0E00               	movlw	0
  4116  0051F6                     L36:
  4117  0051F6  EC10  F02F         	call	_TFmaleje
  4118  0051FA  E305               	bnc	l336
  4119                           ;rgl.c: 2801: {
  4120  0051FC  0E01               	movlw	1
  4121  0051FE  010E               	movlb	F1858 shr (0+8)
  4122  005200  65D1               	cpfsgt	F1858& (0+255),b
  4123  005202  D02D               	goto	l335
  4124  005204  D008               	goto	u3060
  4125                           ;rgl.c: 2803: {
  4126                           ;rgl.c: 2805: o=0;
  4127                           ;rgl.c: 2806: l=0;
  4128                           ;rgl.c: 2807: m=0;
  4129                           ;rgl.c: 2808: k=1;
  4130                           ;rgl.c: 2809: }
  4131  005206                     l336:
  4132                           ;rgl.c: 2811: else
  4133  005206  0E00               	movlw	0
  4134  005208  ECB2  F02E         	call	_Tmaleje
  4135  00520C  E310               	bnc	l339
  4136                           ;rgl.c: 2813: {
  4137  00520E  0E01               	movlw	1
  4138  005210  010E               	movlb	F1856 shr (0+8)
  4139  005212  65CF               	cpfsgt	F1856& (0+255),b
  4140  005214  D024               	goto	l335
  4141  005216                     u3060:
  4142                           ;rgl.c: 2815: {
  4143  005216  010E               	movlb	F1858 shr (0+8)
  4144  005218  6BD1               	clrf	F1858& (0+255),b
  4145                           ;rgl.c: 2817: o=0;
  4146  00521A  010E               	movlb	F1857 shr (0+8)
  4147  00521C  6BD0               	clrf	F1857& (0+255),b
  4148                           ;rgl.c: 2818: l=0;
  4149  00521E  010E               	movlb	F1855 shr (0+8)
  4150  005220  6BCE               	clrf	F1855& (0+255),b
  4151                           ;rgl.c: 2819: m=0;
  4152  005222  010E               	movlb	F1856 shr (0+8)
  4153  005224  6BCF               	clrf	F1856& (0+255),b
  4154                           ;rgl.c: 2820: k=1;
  4155  005226  0E01               	movlw	1
  4156  005228  0100               	movlb	__Lparam shr (0+8)
  4157  00522A  6FA6               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  4158                           ;rgl.c: 2821: }
  4159  00522C  D018               	goto	l335
  4160  00522E                     l339:
  4161                           ;rgl.c: 2823: else
  4162  00522E  0E00               	movlw	0
  4163  005230  ECD4  F02E         	call	_Tnizsza
  4164  005234  E312               	bnc	l342
  4165                           ;rgl.c: 2825: {
  4166  005236  ECCD  F02E         	call	_Tstoi	;wreg free
  4167  00523A  E311               	bnc	l335
  4168  00523C  EC2B  F02F         	call	_TFstoi	;wreg free
  4169  005240  E30E               	bnc	l335
  4170                           ;rgl.c: 2827: {
  4171  005242  0E02               	movlw	2
  4172  005244  010E               	movlb	F1855 shr (0+8)
  4173  005246  65CE               	cpfsgt	F1855& (0+255),b
  4174  005248  D003               	goto	l344
  4175                           ;rgl.c: 2829: {
  4176  00524A  0100               	movlb	__Lparam shr (0+8)
  4177  00524C  6FA6               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  4178  00524E  D005               	goto	l342
  4179                           ;rgl.c: 2831: l=0;
  4180                           ;rgl.c: 2832: }
  4181  005250                     l344:
  4182                           ;rgl.c: 2833: else
  4183  005250  0100               	movlb	__Lparam shr (0+8)
  4184  005252  6BA6               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  4185                           ;rgl.c: 2836: l++;
  4186  005254  010E               	movlb	F1855 shr (0+8)
  4187  005256  2BCE               	incf	F1855& (0+255),f,b
  4188                           ;rgl.c: 2837: }
  4189  005258  D002               	goto	l335
  4190  00525A                     l342:
  4191  00525A  010E               	movlb	F1855 shr (0+8)
  4192  00525C  6BCE               	clrf	F1855& (0+255),b
  4193  00525E                     l335:
  4194                           ;rgl.c: 2840: if(rgl.srp+k>PWM.MAXPWM) rgl.srp=P
      +                          WM.MAXPWM;
  4195  00525E  C1FA  FFE8         	movff	_rgl+7,wreg
  4196  005262  0100               	movlb	__Lparam shr (0+8)
  4197  005264  25A6               	addwf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  4198  005266  6E02               	movwf	btemp+2,c
  4199  005268  6A03               	clrf	btemp+3,c
  4200  00526A  B0D8               	btfsc	status,0,c
  4201  00526C  2A03               	incf	btemp+3,f,c
  4202  00526E  BFA6               	btfsc	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  4203  005270  0603               	decf	btemp+3,f,c
  4204  005272  C1F2  F000         	movff	_PWM+28,btemp
  4205  005276  6A01               	clrf	btemp+1,c
  4206  005278  5001               	movf	btemp+1,w,c
  4207  00527A  0A80               	xorlw	128
  4208  00527C  6E04               	movwf	btemp+4,c
  4209  00527E  5003               	movf	btemp+3,w,c
  4210  005280  0A80               	xorlw	128
  4211  005282  5C04               	subwf	btemp+4,w,c
  4212  005284  E102               	bnz	u3125
  4213  005286  5002               	movf	btemp+2,w,c
  4214  005288  5C00               	subwf	btemp,w,c
  4215  00528A                     u3125:
  4216  00528A  E203               	bc	l347
  4217  00528C  C1F2  F1FA         	movff	_PWM+28,_rgl+7
  4218  005290  D004               	goto	l348
  4219  005292                     l347:
  4220                           ;rgl.c: 2841: else rgl.srp+=k;
  4221  005292  0100               	movlb	__Lparam shr (0+8)
  4222  005294  51A6               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  4223  005296  0101               	movlb	(_rgl+7) shr (0+8)
  4224  005298  27FA               	addwf	(_rgl+7)& (0+255),f,b
  4225  00529A                     l348:
  4226                           ;rgl.c: 2842: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.
      +                          srp;
  4227  00529A  C1FA  FFE8         	movff	_rgl+7,wreg
  4228  00529E  0101               	movlb	(_rgl+8) shr (0+8)
  4229  0052A0  61FB               	cpfslt	(_rgl+8)& (0+255),b
  4230  0052A2  0012               	return	
  4231  0052A4  C1FA  F1FB         	movff	_rgl+7,_rgl+8
  4232                           ;rgl.c: 2843: return;
  4233  0052A8  0012               	return	
  4234                           ;rgl.c: 2844: }
  4235  0052AA                     __end_of_ModPruCW2:
  4236                           ;rgl.c: 2850: void IncMaxCW2(void)
  4237                           ;rgl.c: 2851: {
  4238  0052AA                     _IncMaxCW2:
  4239  000000                     
  4240                           ;rgl.c: 2852: unsigned char k;
  4241  0052AA  0101               	movlb	_rgl shr (0+8)
  4242  0052AC  A5F3               	btfss	_rgl& (0+255),2,b
  4243  0052AE  D008               	goto	l351
  4244                           ;rgl.c: 2856: {
  4245  0052B0  C1FB  FFE8         	movff	_rgl+8,wreg
  4246  0052B4  0101               	movlb	(_PWM+28) shr (0+8)
  4247  0052B6  61F2               	cpfslt	(_PWM+28)& (0+255),b
  4248  0052B8  0012               	return	
  4249  0052BA  C1F2  F1FB         	movff	_PWM+28,_rgl+8
  4250                           ;rgl.c: 2858: return;
  4251  0052BE  0012               	return	
  4252  0052C0                     l351:
  4253                           ;rgl.c: 2859: }
  4254  0052C0  0E00               	movlw	0
  4255  0052C2  EC03  F02F         	call	_TFrosnie
  4256  0052C6  B0D8               	btfsc	status,0,c
  4257  0052C8  0012               	return	
  4258  0052CA  0E00               	movlw	0
  4259  0052CC  ECA5  F02E         	call	_Trosnie
  4260  0052D0  B0D8               	btfsc	status,0,c
  4261  0052D2  0012               	return	
  4262                           ;rgl.c: 2863: k=5;
  4263  0052D4  0E05               	movlw	5
  4264  0052D6  6ED9               	movwf	fsr2l,c
  4265                           ;rgl.c: 2864: if(rgl.xmod+k>PWM.MAXPWM) rgl.xmod
      +                          =PWM.MAXPWM;
  4266  0052D8  C1FB  F002         	movff	_rgl+8,btemp+2
  4267  0052DC  6A03               	clrf	btemp+3,c
  4268  0052DE  2602               	addwf	btemp+2,f,c
  4269  0052E0  0E00               	movlw	0
  4270  0052E2  2203               	addwfc	btemp+3,f,c
  4271  0052E4  C1F2  F000         	movff	_PWM+28,btemp
  4272  0052E8  6A01               	clrf	btemp+1,c
  4273  0052EA  5001               	movf	btemp+1,w,c
  4274  0052EC  0A80               	xorlw	128
  4275  0052EE  6E04               	movwf	btemp+4,c
  4276  0052F0  5003               	movf	btemp+3,w,c
  4277  0052F2  0A80               	xorlw	128
  4278  0052F4  5C04               	subwf	btemp+4,w,c
  4279  0052F6  E102               	bnz	u3195
  4280  0052F8  5002               	movf	btemp+2,w,c
  4281  0052FA  5C00               	subwf	btemp,w,c
  4282  0052FC                     u3195:
  4283  0052FC  E203               	bc	l354
  4284  0052FE  C1F2  F1FB         	movff	_PWM+28,_rgl+8
  4285  005302  D003               	goto	l355
  4286  005304                     l354:
  4287                           ;rgl.c: 2865: else rgl.xmod+=k;
  4288  005304  0101               	movlb	(_rgl+8) shr (0+8)
  4289  005306  0E05               	movlw	5
  4290  005308  27FB               	addwf	(_rgl+8)& (0+255),f,b
  4291  00530A                     l355:
  4292                           ;rgl.c: 2866: if(rgl.xmod>PWM.MAXPWM) rgl.xmod=P
      +                          WM.MAXPWM;
  4293  00530A  C1FB  FFE8         	movff	_rgl+8,wreg
  4294  00530E  0101               	movlb	(_PWM+28) shr (0+8)
  4295  005310  61F2               	cpfslt	(_PWM+28)& (0+255),b
  4296  005312  0012               	return	
  4297  005314  C1F2  F1FB         	movff	_PWM+28,_rgl+8
  4298                           ;rgl.c: 2867: }
  4299  005318  0012               	return	
  4300  00531A                     __end_of_IncMaxCW2:
  4301                           ;rgl.c: 2870: void ModPrzCW2(void)
  4302                           ;rgl.c: 2871: {
  4303  00531A                     _ModPrzCW2:
  4304  000000                     
  4305                           ;rgl.c: 2872: unsigned char k;
  4306  00531A  0101               	movlb	_rgl shr (0+8)
  4307  00531C  BBF3               	btfsc	_rgl& (0+255),5,b
  4308  00531E  D02A               	goto	l358
  4309                           ;rgl.c: 2874: {
  4310  005320  0E00               	movlw	0
  4311  005322  ECB2  F02E         	call	_Tmaleje
  4312  005326  B0D8               	btfsc	status,0,c
  4313  005328  0012               	return	
  4314  00532A  0E03               	movlw	3
  4315  00532C  ECE1  F02E         	call	_Twyzsza
  4316  005330  A0D8               	btfss	status,0,c
  4317  005332  0012               	return	
  4318                           ;rgl.c: 2876: {
  4319  005334  0E19               	movlw	25
  4320  005336  6ED9               	movwf	fsr2l,c
  4321                           ;rgl.c: 2878: if(rgl.srp-k<PWM.MINPWM) rgl.srp=P
      +                          WM.MINPWM;
  4322  005338  C1F1  F000         	movff	_PWM+27,btemp
  4323  00533C  6A01               	clrf	btemp+1,c
  4324  00533E  C1FA  F002         	movff	_rgl+7,btemp+2
  4325  005342  0EE7               	movlw	231
  4326  005344  2402               	addwf	btemp+2,w,c
  4327  005346  6EF6               	movwf	tblptrl,c
  4328  005348  6AF7               	clrf	tblptrh,c
  4329  00534A  0EFF               	movlw	255
  4330  00534C  22F7               	addwfc	tblptrh,f,c
  4331  00534E  50F7               	movf	tblptrh,w,c
  4332  005350  0A80               	xorlw	128
  4333  005352  6E02               	movwf	btemp+2,c
  4334  005354  5001               	movf	btemp+1,w,c
  4335  005356  0A80               	xorlw	128
  4336  005358  5C02               	subwf	btemp+2,w,c
  4337  00535A  E102               	bnz	u3255
  4338  00535C  5000               	movf	btemp,w,c
  4339  00535E  5CF6               	subwf	tblptrl,w,c
  4340  005360                     u3255:
  4341  005360  E203               	bc	l360
  4342  005362  C1F1  F1FA         	movff	_PWM+27,_rgl+7
  4343  005366  D003               	goto	l361
  4344  005368                     l360:
  4345                           ;rgl.c: 2879: else rgl.srp-=k;
  4346  005368  0101               	movlb	(_rgl+7) shr (0+8)
  4347  00536A  0EE7               	movlw	-25
  4348  00536C  27FA               	addwf	(_rgl+7)& (0+255),f,b
  4349  00536E                     l361:
  4350                           ;rgl.c: 2880: rgl.nmod=1;
  4351  00536E  0101               	movlb	_rgl shr (0+8)
  4352  005370  8BF3               	bsf	_rgl& (0+255),5,b
  4353                           ;rgl.c: 2881: }
  4354  005372  0012               	return	
  4355  005374                     l358:
  4356                           ;rgl.c: 2883: else
  4357  005374  0E03               	movlw	3
  4358  005376  ECE1  F02E         	call	_Twyzsza
  4359  00537A  B0D8               	btfsc	status,0,c
  4360  00537C  0012               	return	
  4361                           ;rgl.c: 2886: {
  4362  00537E  0E00               	movlw	0
  4363  005380  ECB2  F02E         	call	_Tmaleje
  4364  005384  E302               	bnc	l364
  4365  005386  0101               	movlb	_rgl shr (0+8)
  4366  005388  9BF3               	bcf	_rgl& (0+255),5,b
  4367  00538A                     l364:
  4368                           ;rgl.c: 2888: if(Tstoi()&&TFmaleje(0)) rgl.nmod=
      +                          0;
  4369  00538A  ECCD  F02E         	call	_Tstoi	;wreg free
  4370  00538E  E306               	bnc	l365
  4371  005390  0E00               	movlw	0
  4372  005392  EC10  F02F         	call	_TFmaleje
  4373  005396  E302               	bnc	l365
  4374  005398  0101               	movlb	_rgl shr (0+8)
  4375  00539A  9BF3               	bcf	_rgl& (0+255),5,b
  4376  00539C                     l365:
  4377                           ;rgl.c: 2889: if(Tnizsza(3)) rgl.nmod=0;
  4378  00539C  0E03               	movlw	3
  4379  00539E  ECD4  F02E         	call	_Tnizsza
  4380  0053A2  A0D8               	btfss	status,0,c
  4381  0053A4  0012               	return	
  4382  0053A6  0101               	movlb	_rgl shr (0+8)
  4383  0053A8  9BF3               	bcf	_rgl& (0+255),5,b
  4384                           ;rgl.c: 2890: }
  4385  0053AA  0012               	return	
  4386  0053AC                     __end_of_ModPrzCW2:
  4387                           ;rgl.c: 2895: void PropCO2(void)
  4388                           ;rgl.c: 2896: {
  4389  0053AC                     _PropCO2:
  4390  000000                     
  4391                           ;rgl.c: 2897: if(!rgl.nmod)
  4392  0053AC  0101               	movlb	_rgl shr (0+8)
  4393  0053AE  BBF3               	btfsc	_rgl& (0+255),5,b
  4394  0053B0  D07A               	goto	l368
  4395                           ;rgl.c: 2898: {
  4396  0053B2  0E07               	movlw	7
  4397  0053B4  6E02               	movwf	btemp+2,c
  4398  0053B6  6A03               	clrf	btemp+3,c
  4399  0053B8  C1F1  FFE8         	movff	_PWM+27,wreg
  4400  0053BC  C1F2  F000         	movff	_PWM+28,btemp
  4401  0053C0  6A01               	clrf	btemp+1,c
  4402  0053C2  5E00               	subwf	btemp,f,c
  4403  0053C4  0E00               	movlw	0
  4404  0053C6  5A01               	subwfb	btemp+1,f,c
  4405  0053C8  EC5C  F06D         	call	awdiv
  4406  0053CC  5004               	movf	btemp+4,w,c
  4407  0053CE  0101               	movlb	(_PWM+28) shr (0+8)
  4408  0053D0  5DF2               	subwf	(_PWM+28)& (0+255),w,b
  4409  0053D2  CFE8 F1E8          	movff	wreg,_PWM+18
  4410                           ;rgl.c: 2900: PWM.PROP2=PWM.MAXPWM-2*((PWM.MAXPW
      +                          M-PWM.MINPWM)/7);
  4411  0053D6  0E07               	movlw	7
  4412  0053D8  6E02               	movwf	btemp+2,c
  4413  0053DA  6A03               	clrf	btemp+3,c
  4414  0053DC  C1F1  FFE8         	movff	_PWM+27,wreg
  4415  0053E0  C1F2  F000         	movff	_PWM+28,btemp
  4416  0053E4  6A01               	clrf	btemp+1,c
  4417  0053E6  5E00               	subwf	btemp,f,c
  4418  0053E8  0E00               	movlw	0
  4419  0053EA  5A01               	subwfb	btemp+1,f,c
  4420  0053EC  EC5C  F06D         	call	awdiv
  4421  0053F0  90D8               	bcf	status,0,c
  4422  0053F2  3404               	rlcf	btemp+4,w,c
  4423  0053F4  0101               	movlb	(_PWM+28) shr (0+8)
  4424  0053F6  5DF2               	subwf	(_PWM+28)& (0+255),w,b
  4425  0053F8  CFE8 F1E9          	movff	wreg,_PWM+19
  4426                           ;rgl.c: 2901: PWM.PROP3=PWM.MAXPWM-3*((PWM.MAXPW
      +                          M-PWM.MINPWM)/7);
  4427  0053FC  0E07               	movlw	7
  4428  0053FE  6E02               	movwf	btemp+2,c
  4429  005400  6A03               	clrf	btemp+3,c
  4430  005402  C1F1  FFE8         	movff	_PWM+27,wreg
  4431  005406  C1F2  F000         	movff	_PWM+28,btemp
  4432  00540A  6A01               	clrf	btemp+1,c
  4433  00540C  5E00               	subwf	btemp,f,c
  4434  00540E  0E00               	movlw	0
  4435  005410  5A01               	subwfb	btemp+1,f,c
  4436  005412  EC5C  F06D         	call	awdiv
  4437  005416  5004               	movf	btemp+4,w,c
  4438  005418  0D03               	mullw	3
  4439  00541A  50F3               	movf	prodl,w,c
  4440  00541C  0101               	movlb	(_PWM+28) shr (0+8)
  4441  00541E  5DF2               	subwf	(_PWM+28)& (0+255),w,b
  4442  005420  CFE8 F1EA          	movff	wreg,_PWM+20
  4443                           ;rgl.c: 2902: if(rgl.x_f==3)
  4444  005424  C1F6  FFE8         	movff	_rgl+3,wreg
  4445  005428  0A03               	xorlw	3
  4446  00542A  E107               	bnz	l369
  4447                           ;rgl.c: 2903: {
  4448  00542C  C1FC  FFE8         	movff	_rgl+9,wreg
  4449  005430  61F2               	cpfslt	(_PWM+28)& (0+255),b
  4450  005432  D027               	goto	l371
  4451                           ;rgl.c: 2905: rgl.tmp_pwm=PWM.MAXPWM;
  4452  005434  C1F2  F1FC         	movff	_PWM+28,_rgl+9
  4453                           ;rgl.c: 2906: }
  4454  005438  D024               	goto	l371
  4455  00543A                     l369:
  4456                           ;rgl.c: 2907: else
  4457  00543A  C1F6  FFE8         	movff	_rgl+3,wreg
  4458  00543E  0A02               	xorlw	2
  4459  005440  E108               	bnz	l372
  4460                           ;rgl.c: 2909: {
  4461  005442  C1FC  FFE8         	movff	_rgl+9,wreg
  4462  005446  0101               	movlb	(_PWM+18) shr (0+8)
  4463  005448  61E8               	cpfslt	(_PWM+18)& (0+255),b
  4464  00544A  D01B               	goto	l371
  4465                           ;rgl.c: 2911: rgl.tmp_pwm=PWM.PROP1;
  4466  00544C  C1E8  F1FC         	movff	_PWM+18,_rgl+9
  4467                           ;rgl.c: 2912: }
  4468  005450  D018               	goto	l371
  4469  005452                     l372:
  4470                           ;rgl.c: 2913: else
  4471  005452  C1F6  F000         	movff	_rgl+3,btemp
  4472  005456  0400               	decf	btemp,w,c
  4473  005458  E108               	bnz	l375
  4474                           ;rgl.c: 2915: {
  4475  00545A  C1FC  FFE8         	movff	_rgl+9,wreg
  4476  00545E  0101               	movlb	(_PWM+19) shr (0+8)
  4477  005460  61E9               	cpfslt	(_PWM+19)& (0+255),b
  4478  005462  D00F               	goto	l371
  4479                           ;rgl.c: 2917: rgl.tmp_pwm=PWM.PROP2;
  4480  005464  C1E9  F1FC         	movff	_PWM+19,_rgl+9
  4481                           ;rgl.c: 2918: }
  4482  005468  D00C               	goto	l371
  4483  00546A                     l375:
  4484                           ;rgl.c: 2919: else
  4485  00546A  C1F6  FFE8         	movff	_rgl+3,wreg
  4486  00546E  0A80               	xorlw	128
  4487  005470  0F7F               	addlw	-129
  4488  005472  E207               	bc	l371
  4489                           ;rgl.c: 2921: {
  4490  005474  C1FC  FFE8         	movff	_rgl+9,wreg
  4491  005478  0101               	movlb	(_PWM+20) shr (0+8)
  4492  00547A  61EA               	cpfslt	(_PWM+20)& (0+255),b
  4493  00547C  D002               	goto	l371
  4494                           ;rgl.c: 2923: rgl.tmp_pwm=PWM.PROP3;
  4495  00547E  C1EA  F1FC         	movff	_PWM+20,_rgl+9
  4496  005482                     l371:
  4497                           ;rgl.c: 2924: }
  4498  005482  C1F1  FFE8         	movff	_PWM+27,wreg
  4499  005486  0101               	movlb	(_rgl+9) shr (0+8)
  4500  005488  61FC               	cpfslt	(_rgl+9)& (0+255),b
  4501  00548A  D002               	goto	l380
  4502  00548C  C1F1  F1FC         	movff	_PWM+27,_rgl+9
  4503  005490                     l380:
  4504                           ;rgl.c: 2926: if(rgl.tmp_pwm>PWM.MAXPWM) rgl.tmp
      +                          _pwm=PWM.MAXPWM;
  4505  005490  C1FC  FFE8         	movff	_rgl+9,wreg
  4506  005494  0101               	movlb	(_PWM+28) shr (0+8)
  4507  005496  61F2               	cpfslt	(_PWM+28)& (0+255),b
  4508  005498  D002               	goto	l381
  4509  00549A  C1F2  F1FC         	movff	_PWM+28,_rgl+9
  4510  00549E                     l381:
  4511                           ;rgl.c: 2927: WritePWM(rgl.tmp_pwm);
  4512  00549E  C1FC  FFE8         	movff	_rgl+9,wreg
  4513  0054A2  EFDF  F067         	goto	_WritePWM
  4514                           ;rgl.c: 2928: }
  4515  0054A6                     l368:
  4516                           ;rgl.c: 2929: else WritePWM(PWM.MINPWM);
  4517  0054A6  C1F1  FFE8         	movff	_PWM+27,wreg
  4518  0054AA  EFDF  F067         	goto	_WritePWM
  4519                           ;rgl.c: 2930: }
  4520  0054AE                     __end_of_PropCO2:
  4521                           ;rgl.c: 2938: const unsigned char kdw=1;
  4522                           ;rgl.c: 2939: const unsigned char kup=1;
  4523                           ;rgl.c: 2941: void NewPop_MIN(void)
  4524                           ;rgl.c: 2942: {
  4525  0054AE                     _NewPop_MIN:
  4526  000000                     
  4527                           ;rgl.c: 2943: static unsigned char bpv,t1,t2,bw1
      +                          ,bw2;
  4528  0054AE  C323  F0A8         	movff	_M+29,?a_NewPop_MIN+2
  4529  0054B2  C324  F0A9         	movff	_M+30,?a_NewPop_MIN+3
  4530                           ;rgl.c: 2948: pv=DtKNF.mmin*100;
  4531  0054B6  C1CB  FFE8         	movff	_DtKNF+23,wreg
  4532  0054BA  0D64               	mullw	100
  4533  0054BC  CFF3 F0A6          	movff	prodl,?a_NewPop_MIN
  4534  0054C0  CFF4 F0A7          	movff	prodh,?a_NewPop_MIN+1
  4535                           ;rgl.c: 2949: SetNstVNT(DtKNF.mmin);
  4536  0054C4  C1CB  FFE8         	movff	_DtKNF+23,wreg
  4537  0054C8  0100               	movlb	__Lparam shr (0+8)
  4538  0054CA  6FB2               	movwf	?_SetNstVNT^(__Lparam& (0+65280)),b
  4539  0054CC  6BB3               	clrf	(?_SetNstVNT+1)^(__Lparam& (0+65280)),b
  4540  0054CE  ECC0  F04B         	call	_SetNstVNT	;wreg free
  4541                           ;rgl.c: 2951: if(rgl.tmp_pwm<=PWM.MINPWM)
  4542  0054D2  C1FC  FFE8         	movff	_rgl+9,wreg
  4543  0054D6  0101               	movlb	(_PWM+27) shr (0+8)
  4544  0054D8  5DF1               	subwf	(_PWM+27)& (0+255),w,b
  4545  0054DA  A0D8               	btfss	status,0,c
  4546  0054DC  0012               	return	
  4547                           ;rgl.c: 2952: {
  4548  0054DE  0E00               	movlw	0
  4549  0054E0  EC4A  F04C         	call	_VTmalejacy
  4550  0054E4  0E00               	movlw	0
  4551  0054E6  E240               	bc	L37
  4552  0054E8  ECDF  F04B         	call	_Vmaleje
  4553  0054EC  E23C               	bc	l385
  4554                           ;rgl.c: 2955: {
  4555  0054EE  0E3C               	movlw	60
  4556  0054F0  C0A6  F000         	movff	?a_NewPop_MIN,btemp
  4557  0054F4  C0A7  F001         	movff	?a_NewPop_MIN+1,btemp+1
  4558  0054F8  2600               	addwf	btemp,f,c
  4559  0054FA  0E00               	movlw	0
  4560  0054FC  2201               	addwfc	btemp+1,f,c
  4561  0054FE  0100               	movlb	__Lparam shr (0+8)
  4562  005500  51A9               	movf	(?a_NewPop_MIN+3)^(__Lparam& (0+65280)),w
  4563  005502  5C01               	subwf	btemp+1,w,c
  4564  005504  E102               	bnz	u3475
  4565  005506  51A8               	movf	(?a_NewPop_MIN+2)^(__Lparam& (0+65280)),w
  4566  005508  5C00               	subwf	btemp,w,c
  4567  00550A                     u3475:
  4568  00550A  E22D               	bc	l385
  4569                           ;rgl.c: 2957: {
  4570  00550C  010E               	movlb	F1874 shr (0+8)
  4571  00550E  6BD5               	clrf	F1874& (0+255),b
  4572                           ;rgl.c: 2959: if((v-pv)>100) w=3;
  4573  005510  C0A8  F000         	movff	?a_NewPop_MIN+2,btemp
  4574  005514  C0A9  F001         	movff	?a_NewPop_MIN+3,btemp+1
  4575  005518  0100               	movlb	__Lparam shr (0+8)
  4576  00551A  51A6               	movf	?a_NewPop_MIN^(__Lparam& (0+65280)),w
  4577  00551C  5E00               	subwf	btemp,f,c
  4578  00551E  51A7               	movf	(?a_NewPop_MIN+1)^(__Lparam& (0+65280)),w
  4579  005520  5A01               	subwfb	btemp+1,f,c
  4580  005522  0E00               	movlw	0
  4581  005524  5C01               	subwf	btemp+1,w,c
  4582  005526  0E65               	movlw	101
  4583  005528  B4D8               	btfsc	status,2,c
  4584  00552A  5C00               	subwf	btemp,w,c
  4585  00552C  E302               	bnc	l387
  4586  00552E  0E03               	movlw	3
  4587  005530  D001               	goto	L8
  4588  005532                     l387:
  4589                           ;rgl.c: 2960: else w=6;
  4590  005532  0E06               	movlw	6
  4591  005534                     L8:
  4592  005534  6ED9               	movwf	fsr2l,c
  4593                           ;rgl.c: 2961: if(bw2) w=8;
  4594  005536  010E               	movlb	F1877 shr (0+8)
  4595  005538  53D8               	movf	F1877& (0+255),f,b
  4596  00553A  E002               	bz	l389
  4597  00553C  0E08               	movlw	8
  4598  00553E  6ED9               	movwf	fsr2l,c
  4599  005540                     l389:
  4600                           ;rgl.c: 2963: if(++t2>w)
  4601  005540  010E               	movlb	F1875 shr (0+8)
  4602  005542  2BD6               	incf	F1875& (0+255),f,b
  4603  005544  CED6  FFE8         	movff	F1875,wreg
  4604  005548  60D9               	cpfslt	fsr2l,c
  4605  00554A  D00D               	goto	l385
  4606                           ;rgl.c: 2964: {
  4607  00554C  6BD6               	clrf	F1875& (0+255),b
  4608                           ;rgl.c: 2966: bw1=1;
  4609  00554E  0E01               	movlw	1
  4610  005550  CFE8 FED7          	movff	wreg,F1876
  4611                           ;rgl.c: 2967: bw2=0;
  4612  005554  010E               	movlb	F1877 shr (0+8)
  4613  005556  6BD8               	clrf	F1877& (0+255),b
  4614                           ;rgl.c: 2968: if(popMIN>-50) popMIN-=kdw;
  4615  005558  CEE8  FFE8         	movff	_popMIN,wreg
  4616  00555C  0A80               	xorlw	128
  4617  00555E  0FB1               	addlw	177
  4618  005560  E302               	bnc	l385
  4619  005562  010E               	movlb	_popMIN shr (0+8)
  4620  005564  07E8               	decf	_popMIN& (0+255),f,b
  4621  005566                     l385:
  4622                           ;rgl.c: 2969: }
  4623  005566  0E00               	movlw	0
  4624  005568                     L37:
  4625  005568  EC34  F04C         	call	_VTrosnacy
  4626  00556C  B0D8               	btfsc	status,0,c
  4627  00556E  0012               	return	
  4628  005570  0E00               	movlw	0
  4629  005572  ECC8  F04B         	call	_Vrosnie
  4630  005576  B0D8               	btfsc	status,0,c
  4631  005578  0012               	return	
  4632                           ;rgl.c: 2974: {
  4633  00557A  0100               	movlb	__Lparam shr (0+8)
  4634  00557C  0EE2               	movlw	226
  4635  00557E  25A6               	addwf	?a_NewPop_MIN^(__Lparam& (0+65280)),w
  4636  005580  6E00               	movwf	btemp,c
  4637  005582  0EFF               	movlw	255
  4638  005584  21A7               	addwfc	(?a_NewPop_MIN+1)^(__Lparam& (0+65280)),
      +                          w
  4639  005586  6E01               	movwf	btemp+1,c
  4640  005588  5001               	movf	btemp+1,w,c
  4641  00558A  5DA9               	subwf	(?a_NewPop_MIN+3)^(__Lparam& (0+65280)),w
  4642  00558C  E102               	bnz	u3555
  4643  00558E  5000               	movf	btemp,w,c
  4644  005590  5DA8               	subwf	(?a_NewPop_MIN+2)^(__Lparam& (0+65280)),w
  4645  005592                     u3555:
  4646  005592  B0D8               	btfsc	status,0,c
  4647  005594  0012               	return	
  4648                           ;rgl.c: 2976: {
  4649  005596  010E               	movlb	F1875 shr (0+8)
  4650  005598  6BD6               	clrf	F1875& (0+255),b
  4651                           ;rgl.c: 2978: if((pv-v)>100) w=5;
  4652  00559A  C0A6  F000         	movff	?a_NewPop_MIN,btemp
  4653  00559E  C0A7  F001         	movff	?a_NewPop_MIN+1,btemp+1
  4654  0055A2  0100               	movlb	__Lparam shr (0+8)
  4655  0055A4  51A8               	movf	(?a_NewPop_MIN+2)^(__Lparam& (0+65280)),w
  4656  0055A6  5E00               	subwf	btemp,f,c
  4657  0055A8  51A9               	movf	(?a_NewPop_MIN+3)^(__Lparam& (0+65280)),w
  4658  0055AA  5A01               	subwfb	btemp+1,f,c
  4659  0055AC  0E00               	movlw	0
  4660  0055AE  5C01               	subwf	btemp+1,w,c
  4661  0055B0  0E65               	movlw	101
  4662  0055B2  B4D8               	btfsc	status,2,c
  4663  0055B4  5C00               	subwf	btemp,w,c
  4664  0055B6  E302               	bnc	l394
  4665  0055B8  0E05               	movlw	5
  4666  0055BA  D001               	goto	L9
  4667  0055BC                     l394:
  4668                           ;rgl.c: 2979: else w=8;
  4669  0055BC  0E08               	movlw	8
  4670  0055BE                     L9:
  4671  0055BE  6ED9               	movwf	fsr2l,c
  4672                           ;rgl.c: 2980: if(bw1) w=10;
  4673  0055C0  010E               	movlb	F1876 shr (0+8)
  4674  0055C2  53D7               	movf	F1876& (0+255),f,b
  4675  0055C4  E002               	bz	l396
  4676  0055C6  0E0A               	movlw	10
  4677  0055C8  6ED9               	movwf	fsr2l,c
  4678  0055CA                     l396:
  4679                           ;rgl.c: 2981: if(++t1>w)
  4680  0055CA  010E               	movlb	F1874 shr (0+8)
  4681  0055CC  2BD5               	incf	F1874& (0+255),f,b
  4682  0055CE  CED5  FFE8         	movff	F1874,wreg
  4683  0055D2  60D9               	cpfslt	fsr2l,c
  4684  0055D4  0012               	return	
  4685                           ;rgl.c: 2982: {
  4686  0055D6  6BD5               	clrf	F1874& (0+255),b
  4687                           ;rgl.c: 2984: bw1=0;
  4688  0055D8  010E               	movlb	F1876 shr (0+8)
  4689  0055DA  6BD7               	clrf	F1876& (0+255),b
  4690                           ;rgl.c: 2985: bw2=1;
  4691  0055DC  0E01               	movlw	1
  4692  0055DE  CFE8 FED8          	movff	wreg,F1877
  4693                           ;rgl.c: 2986: if(popMIN<50) popMIN+=kup;
  4694  0055E2  CEE8  FFE8         	movff	_popMIN,wreg
  4695  0055E6  0A80               	xorlw	128
  4696  0055E8  0F4E               	addlw	-178
  4697  0055EA  B0D8               	btfsc	status,0,c
  4698  0055EC  0012               	return	
  4699  0055EE  010E               	movlb	_popMIN shr (0+8)
  4700  0055F0  2BE8               	incf	_popMIN& (0+255),f,b
  4701                           ;rgl.c: 2987: }
  4702  0055F2  0C01               	retlw	1
  4703  0055F4                     __end_of_NewPop_MIN:
  4704                           ;rgl.c: 2994: void NewPop_MAX_CW(void)
  4705                           ;rgl.c: 2995: {
  4706  0055F4                     _NewPop_MAX_CW:
  4707  000000                     
  4708                           ;rgl.c: 2996: static unsigned char bpv,t1,t2,bw1
      +                          ,bw2;
  4709  0055F4  C323  F0A9         	movff	_M+29,?a_NewPop_MAX_CW+3
  4710  0055F8  C324  F0AA         	movff	_M+30,?a_NewPop_MAX_CW+4
  4711                           ;rgl.c: 3001: ppv=ProcToVNT(DtKNF.mxcw);
  4712  0055FC  C1BB  FFE8         	movff	_DtKNF+7,wreg
  4713  005600  ECB4  F057         	call	_ProcToVNT
  4714  005604  0100               	movlb	__Lparam shr (0+8)
  4715  005606  6FA6               	movwf	?a_NewPop_MAX_CW^(__Lparam& (0+65280)),b
  4716                           ;rgl.c: 3002: SetNstVNT(ppv);
  4717  005608  51A6               	movf	?a_NewPop_MAX_CW^(__Lparam& (0+65280)),w
  4718  00560A  6FB2               	movwf	?_SetNstVNT^(__Lparam& (0+65280)),b
  4719  00560C  6BB3               	clrf	(?_SetNstVNT+1)^(__Lparam& (0+65280)),b
  4720  00560E  ECC0  F04B         	call	_SetNstVNT	;wreg free
  4721                           ;rgl.c: 3003: pv=ppv*100;
  4722  005612  0100               	movlb	__Lparam shr (0+8)
  4723  005614  51A6               	movf	?a_NewPop_MAX_CW^(__Lparam& (0+65280)),w
  4724  005616  0D64               	mullw	100
  4725  005618  CFF3 F0A7          	movff	prodl,?a_NewPop_MAX_CW+1
  4726  00561C  CFF4 F0A8          	movff	prodh,?a_NewPop_MAX_CW+2
  4727                           ;rgl.c: 3005: if(rgl.tmp_pwm>=PWM.MAXPWM)
  4728  005620  C1F2  FFE8         	movff	_PWM+28,wreg
  4729  005624  0101               	movlb	(_rgl+9) shr (0+8)
  4730  005626  5DFC               	subwf	(_rgl+9)& (0+255),w,b
  4731  005628  A0D8               	btfss	status,0,c
  4732  00562A  0012               	return	
  4733                           ;rgl.c: 3006: {
  4734  00562C  0E00               	movlw	0
  4735  00562E  EC4A  F04C         	call	_VTmalejacy
  4736  005632  0E00               	movlw	0
  4737  005634  E240               	bc	L38
  4738  005636  ECDF  F04B         	call	_Vmaleje
  4739  00563A  E23C               	bc	l401
  4740                           ;rgl.c: 3009: {
  4741  00563C  0E3C               	movlw	60
  4742  00563E  C0A7  F000         	movff	?a_NewPop_MAX_CW+1,btemp
  4743  005642  C0A8  F001         	movff	?a_NewPop_MAX_CW+2,btemp+1
  4744  005646  2600               	addwf	btemp,f,c
  4745  005648  0E00               	movlw	0
  4746  00564A  2201               	addwfc	btemp+1,f,c
  4747  00564C  0100               	movlb	__Lparam shr (0+8)
  4748  00564E  51AA               	movf	(?a_NewPop_MAX_CW+4)^(__Lparam& (0+65280))
      +                          ,w
  4749  005650  5C01               	subwf	btemp+1,w,c
  4750  005652  E102               	bnz	u3645
  4751  005654  51A9               	movf	(?a_NewPop_MAX_CW+3)^(__Lparam& (0+65280))
      +                          ,w
  4752  005656  5C00               	subwf	btemp,w,c
  4753  005658                     u3645:
  4754  005658  E22D               	bc	l401
  4755                           ;rgl.c: 3011: {
  4756  00565A  010E               	movlb	F1883 shr (0+8)
  4757  00565C  6BD9               	clrf	F1883& (0+255),b
  4758                           ;rgl.c: 3013: if((v-pv)>100) w=3;
  4759  00565E  C0A9  F000         	movff	?a_NewPop_MAX_CW+3,btemp
  4760  005662  C0AA  F001         	movff	?a_NewPop_MAX_CW+4,btemp+1
  4761  005666  0100               	movlb	__Lparam shr (0+8)
  4762  005668  51A7               	movf	(?a_NewPop_MAX_CW+1)^(__Lparam& (0+65280))
      +                          ,w
  4763  00566A  5E00               	subwf	btemp,f,c
  4764  00566C  51A8               	movf	(?a_NewPop_MAX_CW+2)^(__Lparam& (0+65280))
      +                          ,w
  4765  00566E  5A01               	subwfb	btemp+1,f,c
  4766  005670  0E00               	movlw	0
  4767  005672  5C01               	subwf	btemp+1,w,c
  4768  005674  0E65               	movlw	101
  4769  005676  B4D8               	btfsc	status,2,c
  4770  005678  5C00               	subwf	btemp,w,c
  4771  00567A  E302               	bnc	l403
  4772  00567C  0E03               	movlw	3
  4773  00567E  D001               	goto	L10
  4774  005680                     l403:
  4775                           ;rgl.c: 3014: else w=6;
  4776  005680  0E06               	movlw	6
  4777  005682                     L10:
  4778  005682  6ED9               	movwf	fsr2l,c
  4779                           ;rgl.c: 3015: if(bw2) w=8;
  4780  005684  010E               	movlb	F1886 shr (0+8)
  4781  005686  53DC               	movf	F1886& (0+255),f,b
  4782  005688  E002               	bz	l405
  4783  00568A  0E08               	movlw	8
  4784  00568C  6ED9               	movwf	fsr2l,c
  4785  00568E                     l405:
  4786                           ;rgl.c: 3016: if(++t2>w)
  4787  00568E  010E               	movlb	F1884 shr (0+8)
  4788  005690  2BDA               	incf	F1884& (0+255),f,b
  4789  005692  CEDA  FFE8         	movff	F1884,wreg
  4790  005696  60D9               	cpfslt	fsr2l,c
  4791  005698  D00D               	goto	l401
  4792                           ;rgl.c: 3017: {
  4793  00569A  6BDA               	clrf	F1884& (0+255),b
  4794                           ;rgl.c: 3019: bw1=1;
  4795  00569C  0E01               	movlw	1
  4796  00569E  CFE8 FEDB          	movff	wreg,F1885
  4797                           ;rgl.c: 3020: bw2=0;
  4798  0056A2  010E               	movlb	F1886 shr (0+8)
  4799  0056A4  6BDC               	clrf	F1886& (0+255),b
  4800                           ;rgl.c: 3021: if(popMAXCW>-50) popMAXCW-=kdw;
  4801  0056A6  CEE7  FFE8         	movff	_popMAXCW,wreg
  4802  0056AA  0A80               	xorlw	128
  4803  0056AC  0FB1               	addlw	177
  4804  0056AE  E302               	bnc	l401
  4805  0056B0  010E               	movlb	_popMAXCW shr (0+8)
  4806  0056B2  07E7               	decf	_popMAXCW& (0+255),f,b
  4807  0056B4                     l401:
  4808                           ;rgl.c: 3022: }
  4809  0056B4  0E00               	movlw	0
  4810  0056B6                     L38:
  4811  0056B6  EC34  F04C         	call	_VTrosnacy
  4812  0056BA  B0D8               	btfsc	status,0,c
  4813  0056BC  0012               	return	
  4814  0056BE  0E00               	movlw	0
  4815  0056C0  ECC8  F04B         	call	_Vrosnie
  4816  0056C4  B0D8               	btfsc	status,0,c
  4817  0056C6  0012               	return	
  4818                           ;rgl.c: 3027: {
  4819  0056C8  0100               	movlb	__Lparam shr (0+8)
  4820  0056CA  0EE2               	movlw	226
  4821  0056CC  25A7               	addwf	(?a_NewPop_MAX_CW+1)^(__Lparam& (0+65280)
      +                          ),w
  4822  0056CE  6E00               	movwf	btemp,c
  4823  0056D0  0EFF               	movlw	255
  4824  0056D2  21A8               	addwfc	(?a_NewPop_MAX_CW+2)^(__Lparam& (0+65280
      +                          )),w
  4825  0056D4  6E01               	movwf	btemp+1,c
  4826  0056D6  5001               	movf	btemp+1,w,c
  4827  0056D8  5DAA               	subwf	(?a_NewPop_MAX_CW+4)^(__Lparam& (0+65280)
      +                          ),w
  4828  0056DA  E102               	bnz	u3725
  4829  0056DC  5000               	movf	btemp,w,c
  4830  0056DE  5DA9               	subwf	(?a_NewPop_MAX_CW+3)^(__Lparam& (0+65280)
      +                          ),w
  4831  0056E0                     u3725:
  4832  0056E0  B0D8               	btfsc	status,0,c
  4833  0056E2  0012               	return	
  4834                           ;rgl.c: 3029: {
  4835  0056E4  010E               	movlb	F1884 shr (0+8)
  4836  0056E6  6BDA               	clrf	F1884& (0+255),b
  4837                           ;rgl.c: 3031: if((pv-v)>100) w=5;
  4838  0056E8  C0A7  F000         	movff	?a_NewPop_MAX_CW+1,btemp
  4839  0056EC  C0A8  F001         	movff	?a_NewPop_MAX_CW+2,btemp+1
  4840  0056F0  0100               	movlb	__Lparam shr (0+8)
  4841  0056F2  51A9               	movf	(?a_NewPop_MAX_CW+3)^(__Lparam& (0+65280))
      +                          ,w
  4842  0056F4  5E00               	subwf	btemp,f,c
  4843  0056F6  51AA               	movf	(?a_NewPop_MAX_CW+4)^(__Lparam& (0+65280))
      +                          ,w
  4844  0056F8  5A01               	subwfb	btemp+1,f,c
  4845  0056FA  0E00               	movlw	0
  4846  0056FC  5C01               	subwf	btemp+1,w,c
  4847  0056FE  0E65               	movlw	101
  4848  005700  B4D8               	btfsc	status,2,c
  4849  005702  5C00               	subwf	btemp,w,c
  4850  005704  E302               	bnc	l410
  4851  005706  0E05               	movlw	5
  4852  005708  D001               	goto	L11
  4853  00570A                     l410:
  4854                           ;rgl.c: 3032: else w=8;
  4855  00570A  0E08               	movlw	8
  4856  00570C                     L11:
  4857  00570C  6ED9               	movwf	fsr2l,c
  4858                           ;rgl.c: 3033: if(bw1) w=10;
  4859  00570E  010E               	movlb	F1885 shr (0+8)
  4860  005710  53DB               	movf	F1885& (0+255),f,b
  4861  005712  E002               	bz	l412
  4862  005714  0E0A               	movlw	10
  4863  005716  6ED9               	movwf	fsr2l,c
  4864  005718                     l412:
  4865                           ;rgl.c: 3034: if(++t1>w)
  4866  005718  010E               	movlb	F1883 shr (0+8)
  4867  00571A  2BD9               	incf	F1883& (0+255),f,b
  4868  00571C  CED9  FFE8         	movff	F1883,wreg
  4869  005720  60D9               	cpfslt	fsr2l,c
  4870  005722  0012               	return	
  4871                           ;rgl.c: 3035: {
  4872  005724  6BD9               	clrf	F1883& (0+255),b
  4873                           ;rgl.c: 3037: bw1=0;
  4874  005726  010E               	movlb	F1885 shr (0+8)
  4875  005728  6BDB               	clrf	F1885& (0+255),b
  4876                           ;rgl.c: 3038: bw2=1;
  4877  00572A  0E01               	movlw	1
  4878  00572C  CFE8 FEDC          	movff	wreg,F1886
  4879                           ;rgl.c: 3039: if(popMAXCW<50) popMAXCW+=kup;
  4880  005730  CEE7  FFE8         	movff	_popMAXCW,wreg
  4881  005734  0A80               	xorlw	128
  4882  005736  0F4E               	addlw	-178
  4883  005738  B0D8               	btfsc	status,0,c
  4884  00573A  0012               	return	
  4885  00573C  010E               	movlb	_popMAXCW shr (0+8)
  4886  00573E  2BE7               	incf	_popMAXCW& (0+255),f,b
  4887                           ;rgl.c: 3040: }
  4888  005740  0C01               	retlw	1
  4889  005742                     __end_of_NewPop_MAX_CW:
  4890                           ;rgl.c: 3047: void NewPop_MAX_CO(void)
  4891                           ;rgl.c: 3048: {
  4892  005742                     _NewPop_MAX_CO:
  4893  000000                     
  4894                           ;rgl.c: 3049: static unsigned char bpv,t1,t2,bw1
      +                          ,bw2;
  4895  005742  C323  F0A9         	movff	_M+29,?a_NewPop_MAX_CO+3
  4896  005746  C324  F0AA         	movff	_M+30,?a_NewPop_MAX_CO+4
  4897                           ;rgl.c: 3054: ppv=ProcToVNT(DtKNF.mxco);
  4898  00574A  C1BC  FFE8         	movff	_DtKNF+8,wreg
  4899  00574E  ECB4  F057         	call	_ProcToVNT
  4900  005752  0100               	movlb	__Lparam shr (0+8)
  4901  005754  6FA6               	movwf	?a_NewPop_MAX_CO^(__Lparam& (0+65280)),b
  4902                           ;rgl.c: 3055: SetNstVNT(ppv);
  4903  005756  51A6               	movf	?a_NewPop_MAX_CO^(__Lparam& (0+65280)),w
  4904  005758  6FB2               	movwf	?_SetNstVNT^(__Lparam& (0+65280)),b
  4905  00575A  6BB3               	clrf	(?_SetNstVNT+1)^(__Lparam& (0+65280)),b
  4906  00575C  ECC0  F04B         	call	_SetNstVNT	;wreg free
  4907                           ;rgl.c: 3056: pv=ppv*100;
  4908  005760  0100               	movlb	__Lparam shr (0+8)
  4909  005762  51A6               	movf	?a_NewPop_MAX_CO^(__Lparam& (0+65280)),w
  4910  005764  0D64               	mullw	100
  4911  005766  CFF3 F0A7          	movff	prodl,?a_NewPop_MAX_CO+1
  4912  00576A  CFF4 F0A8          	movff	prodh,?a_NewPop_MAX_CO+2
  4913                           ;rgl.c: 3059: if(rgl.tmp_pwm>=PWM.MAXPWM)
  4914  00576E  C1F2  FFE8         	movff	_PWM+28,wreg
  4915  005772  0101               	movlb	(_rgl+9) shr (0+8)
  4916  005774  5DFC               	subwf	(_rgl+9)& (0+255),w,b
  4917  005776  A0D8               	btfss	status,0,c
  4918  005778  0012               	return	
  4919                           ;rgl.c: 3060: {
  4920  00577A  0E00               	movlw	0
  4921  00577C  EC4A  F04C         	call	_VTmalejacy
  4922  005780  0E00               	movlw	0
  4923  005782  E240               	bc	L39
  4924  005784  ECDF  F04B         	call	_Vmaleje
  4925  005788  E23C               	bc	l417
  4926                           ;rgl.c: 3063: {
  4927  00578A  0E3C               	movlw	60
  4928  00578C  C0A7  F000         	movff	?a_NewPop_MAX_CO+1,btemp
  4929  005790  C0A8  F001         	movff	?a_NewPop_MAX_CO+2,btemp+1
  4930  005794  2600               	addwf	btemp,f,c
  4931  005796  0E00               	movlw	0
  4932  005798  2201               	addwfc	btemp+1,f,c
  4933  00579A  0100               	movlb	__Lparam shr (0+8)
  4934  00579C  51AA               	movf	(?a_NewPop_MAX_CO+4)^(__Lparam& (0+65280))
      +                          ,w
  4935  00579E  5C01               	subwf	btemp+1,w,c
  4936  0057A0  E102               	bnz	u3815
  4937  0057A2  51A9               	movf	(?a_NewPop_MAX_CO+3)^(__Lparam& (0+65280))
      +                          ,w
  4938  0057A4  5C00               	subwf	btemp,w,c
  4939  0057A6                     u3815:
  4940  0057A6  E22D               	bc	l417
  4941                           ;rgl.c: 3065: {
  4942  0057A8  010E               	movlb	F1893 shr (0+8)
  4943  0057AA  6BDD               	clrf	F1893& (0+255),b
  4944                           ;rgl.c: 3067: if((v-pv)>100) w=3;
  4945  0057AC  C0A9  F000         	movff	?a_NewPop_MAX_CO+3,btemp
  4946  0057B0  C0AA  F001         	movff	?a_NewPop_MAX_CO+4,btemp+1
  4947  0057B4  0100               	movlb	__Lparam shr (0+8)
  4948  0057B6  51A7               	movf	(?a_NewPop_MAX_CO+1)^(__Lparam& (0+65280))
      +                          ,w
  4949  0057B8  5E00               	subwf	btemp,f,c
  4950  0057BA  51A8               	movf	(?a_NewPop_MAX_CO+2)^(__Lparam& (0+65280))
      +                          ,w
  4951  0057BC  5A01               	subwfb	btemp+1,f,c
  4952  0057BE  0E00               	movlw	0
  4953  0057C0  5C01               	subwf	btemp+1,w,c
  4954  0057C2  0E65               	movlw	101
  4955  0057C4  B4D8               	btfsc	status,2,c
  4956  0057C6  5C00               	subwf	btemp,w,c
  4957  0057C8  E302               	bnc	l419
  4958  0057CA  0E03               	movlw	3
  4959  0057CC  D001               	goto	L12
  4960  0057CE                     l419:
  4961                           ;rgl.c: 3068: else w=6;
  4962  0057CE  0E06               	movlw	6
  4963  0057D0                     L12:
  4964  0057D0  6ED9               	movwf	fsr2l,c
  4965                           ;rgl.c: 3069: if(bw2) w=8;
  4966  0057D2  010E               	movlb	F1896 shr (0+8)
  4967  0057D4  53E0               	movf	F1896& (0+255),f,b
  4968  0057D6  E002               	bz	l421
  4969  0057D8  0E08               	movlw	8
  4970  0057DA  6ED9               	movwf	fsr2l,c
  4971  0057DC                     l421:
  4972                           ;rgl.c: 3070: if(++t2>w)
  4973  0057DC  010E               	movlb	F1894 shr (0+8)
  4974  0057DE  2BDE               	incf	F1894& (0+255),f,b
  4975  0057E0  CEDE  FFE8         	movff	F1894,wreg
  4976  0057E4  60D9               	cpfslt	fsr2l,c
  4977  0057E6  D00D               	goto	l417
  4978                           ;rgl.c: 3071: {
  4979  0057E8  6BDE               	clrf	F1894& (0+255),b
  4980                           ;rgl.c: 3073: bw1=1;
  4981  0057EA  0E01               	movlw	1
  4982  0057EC  CFE8 FEDF          	movff	wreg,F1895
  4983                           ;rgl.c: 3074: bw2=0;
  4984  0057F0  010E               	movlb	F1896 shr (0+8)
  4985  0057F2  6BE0               	clrf	F1896& (0+255),b
  4986                           ;rgl.c: 3075: if(popMAXCO>-50) popMAXCO-=kdw;
  4987  0057F4  CEE6  FFE8         	movff	_popMAXCO,wreg
  4988  0057F8  0A80               	xorlw	128
  4989  0057FA  0FB1               	addlw	177
  4990  0057FC  E302               	bnc	l417
  4991  0057FE  010E               	movlb	_popMAXCO shr (0+8)
  4992  005800  07E6               	decf	_popMAXCO& (0+255),f,b
  4993  005802                     l417:
  4994                           ;rgl.c: 3076: }
  4995  005802  0E00               	movlw	0
  4996  005804                     L39:
  4997  005804  EC34  F04C         	call	_VTrosnacy
  4998  005808  B0D8               	btfsc	status,0,c
  4999  00580A  0012               	return	
  5000  00580C  0E00               	movlw	0
  5001  00580E  ECC8  F04B         	call	_Vrosnie
  5002  005812  B0D8               	btfsc	status,0,c
  5003  005814  0012               	return	
  5004                           ;rgl.c: 3081: {
  5005  005816  0100               	movlb	__Lparam shr (0+8)
  5006  005818  0EE2               	movlw	226
  5007  00581A  25A7               	addwf	(?a_NewPop_MAX_CO+1)^(__Lparam& (0+65280)
      +                          ),w
  5008  00581C  6E00               	movwf	btemp,c
  5009  00581E  0EFF               	movlw	255
  5010  005820  21A8               	addwfc	(?a_NewPop_MAX_CO+2)^(__Lparam& (0+65280
      +                          )),w
  5011  005822  6E01               	movwf	btemp+1,c
  5012  005824  5001               	movf	btemp+1,w,c
  5013  005826  5DAA               	subwf	(?a_NewPop_MAX_CO+4)^(__Lparam& (0+65280)
      +                          ),w
  5014  005828  E102               	bnz	u3895
  5015  00582A  5000               	movf	btemp,w,c
  5016  00582C  5DA9               	subwf	(?a_NewPop_MAX_CO+3)^(__Lparam& (0+65280)
      +                          ),w
  5017  00582E                     u3895:
  5018  00582E  B0D8               	btfsc	status,0,c
  5019  005830  0012               	return	
  5020                           ;rgl.c: 3083: {
  5021  005832  010E               	movlb	F1894 shr (0+8)
  5022  005834  6BDE               	clrf	F1894& (0+255),b
  5023                           ;rgl.c: 3085: if((pv-v)>100) w=5;
  5024  005836  C0A7  F000         	movff	?a_NewPop_MAX_CO+1,btemp
  5025  00583A  C0A8  F001         	movff	?a_NewPop_MAX_CO+2,btemp+1
  5026  00583E  0100               	movlb	__Lparam shr (0+8)
  5027  005840  51A9               	movf	(?a_NewPop_MAX_CO+3)^(__Lparam& (0+65280))
      +                          ,w
  5028  005842  5E00               	subwf	btemp,f,c
  5029  005844  51AA               	movf	(?a_NewPop_MAX_CO+4)^(__Lparam& (0+65280))
      +                          ,w
  5030  005846  5A01               	subwfb	btemp+1,f,c
  5031  005848  0E00               	movlw	0
  5032  00584A  5C01               	subwf	btemp+1,w,c
  5033  00584C  0E65               	movlw	101
  5034  00584E  B4D8               	btfsc	status,2,c
  5035  005850  5C00               	subwf	btemp,w,c
  5036  005852  E302               	bnc	l426
  5037  005854  0E05               	movlw	5
  5038  005856  D001               	goto	L13
  5039  005858                     l426:
  5040                           ;rgl.c: 3086: else w=8;
  5041  005858  0E08               	movlw	8
  5042  00585A                     L13:
  5043  00585A  6ED9               	movwf	fsr2l,c
  5044                           ;rgl.c: 3087: if(bw1) w=10;
  5045  00585C  010E               	movlb	F1895 shr (0+8)
  5046  00585E  53DF               	movf	F1895& (0+255),f,b
  5047  005860  E002               	bz	l428
  5048  005862  0E0A               	movlw	10
  5049  005864  6ED9               	movwf	fsr2l,c
  5050  005866                     l428:
  5051                           ;rgl.c: 3088: if(++t1>w)
  5052  005866  010E               	movlb	F1893 shr (0+8)
  5053  005868  2BDD               	incf	F1893& (0+255),f,b
  5054  00586A  CEDD  FFE8         	movff	F1893,wreg
  5055  00586E  60D9               	cpfslt	fsr2l,c
  5056  005870  0012               	return	
  5057                           ;rgl.c: 3089: {
  5058  005872  6BDD               	clrf	F1893& (0+255),b
  5059                           ;rgl.c: 3091: bw1=0;
  5060  005874  010E               	movlb	F1895 shr (0+8)
  5061  005876  6BDF               	clrf	F1895& (0+255),b
  5062                           ;rgl.c: 3092: bw2=1;
  5063  005878  0E01               	movlw	1
  5064  00587A  CFE8 FEE0          	movff	wreg,F1896
  5065                           ;rgl.c: 3093: if(popMAXCO<50) popMAXCO+=kup;
  5066  00587E  CEE6  FFE8         	movff	_popMAXCO,wreg
  5067  005882  0A80               	xorlw	128
  5068  005884  0F4E               	addlw	-178
  5069  005886  B0D8               	btfsc	status,0,c
  5070  005888  0012               	return	
  5071  00588A  010E               	movlb	_popMAXCO shr (0+8)
  5072  00588C  2BE6               	incf	_popMAXCO& (0+255),f,b
  5073                           ;rgl.c: 3094: }
  5074  00588E  0C01               	retlw	1
  5075  005890                     __end_of_NewPop_MAX_CO:
  5076                           ;rgl.c: 3101: void New_MIN(void)
  5077                           ;rgl.c: 3102: {
  5078  005890                     _New_MIN:
  5079  000000                     
  5080                           ;rgl.c: 3103: if(PWM.MINPWM+popMIN<31) PWM.MINPW
      +                          M=31;
  5081  005890  CEE8  F000         	movff	_popMIN,btemp
  5082  005894  C1F1  FFE8         	movff	_PWM+27,wreg
  5083  005898  2400               	addwf	btemp,w,c
  5084  00589A  6E02               	movwf	btemp+2,c
  5085  00589C  6A03               	clrf	btemp+3,c
  5086  00589E  B0D8               	btfsc	status,0,c
  5087  0058A0  2A03               	incf	btemp+3,f,c
  5088  0058A2  BE00               	btfsc	btemp,7,c
  5089  0058A4  0603               	decf	btemp+3,f,c
  5090  0058A6  5003               	movf	btemp+3,w,c
  5091  0058A8  0A80               	xorlw	128
  5092  0058AA  0F80               	addlw	-128
  5093  0058AC  0E1F               	movlw	31
  5094  0058AE  B4D8               	btfsc	status,2,c
  5095  0058B0  5C02               	subwf	btemp+2,w,c
  5096  0058B2  E204               	bc	l432
  5097  0058B4  0E1F               	movlw	31
  5098  0058B6  CFE8 F1F1          	movff	wreg,_PWM+27
  5099  0058BA  0C1F               	retlw	31
  5100  0058BC                     l432:
  5101                           ;rgl.c: 3104: else
  5102  0058BC  CEE8  F000         	movff	_popMIN,btemp
  5103  0058C0  C1F1  FFE8         	movff	_PWM+27,wreg
  5104  0058C4  2400               	addwf	btemp,w,c
  5105  0058C6  6E02               	movwf	btemp+2,c
  5106  0058C8  6A03               	clrf	btemp+3,c
  5107  0058CA  B0D8               	btfsc	status,0,c
  5108  0058CC  2A03               	incf	btemp+3,f,c
  5109  0058CE  BE00               	btfsc	btemp,7,c
  5110  0058D0  0603               	decf	btemp+3,f,c
  5111  0058D2  C1F2  F000         	movff	_PWM+28,btemp
  5112  0058D6  6A01               	clrf	btemp+1,c
  5113  0058D8  5001               	movf	btemp+1,w,c
  5114  0058DA  0A80               	xorlw	128
  5115  0058DC  6E04               	movwf	btemp+4,c
  5116  0058DE  5003               	movf	btemp+3,w,c
  5117  0058E0  0A80               	xorlw	128
  5118  0058E2  5C04               	subwf	btemp+4,w,c
  5119  0058E4  E102               	bnz	u3955
  5120  0058E6  5002               	movf	btemp+2,w,c
  5121  0058E8  5C00               	subwf	btemp,w,c
  5122  0058EA                     u3955:
  5123  0058EA  E203               	bc	l434
  5124  0058EC  C1F2  F1F1         	movff	_PWM+28,_PWM+27
  5125  0058F0  0012               	return	
  5126  0058F2                     l434:
  5127                           ;rgl.c: 3106: else PWM.MINPWM=PWM.MDMOD+popMIN;
  5128  0058F2  CEE8  FFE8         	movff	_popMIN,wreg
  5129  0058F6  0101               	movlb	(_PWM+7) shr (0+8)
  5130  0058F8  25DD               	addwf	(_PWM+7)& (0+255),w,b
  5131  0058FA  CFE8 F1F1          	movff	wreg,_PWM+27
  5132                           ;rgl.c: 3107: }
  5133  0058FE  0012               	return	
  5134  005900                     __end_of_New_MIN:
  5135                           ;rgl.c: 3110: void New_MAX_CW(void)
  5136                           ;rgl.c: 3111: {
  5137  005900                     _New_MAX_CW:
  5138  000000                     
  5139                           ;rgl.c: 3112: if(PWM.MAXPWM+popMAXCW<PWM.MDMOD) 
      +                          PWM.MAXPWM=PWM.MDMOD;
  5140  005900  C1DD  F000         	movff	_PWM+7,btemp
  5141  005904  6A01               	clrf	btemp+1,c
  5142  005906  CEE7  F002         	movff	_popMAXCW,btemp+2
  5143  00590A  C1F2  FFE8         	movff	_PWM+28,wreg
  5144  00590E  2402               	addwf	btemp+2,w,c
  5145  005910  6EF6               	movwf	tblptrl,c
  5146  005912  6AF7               	clrf	tblptrh,c
  5147  005914  B0D8               	btfsc	status,0,c
  5148  005916  2AF7               	incf	tblptrh,f,c
  5149  005918  BE02               	btfsc	btemp+2,7,c
  5150  00591A  06F7               	decf	tblptrh,f,c
  5151  00591C  50F7               	movf	tblptrh,w,c
  5152  00591E  0A80               	xorlw	128
  5153  005920  6E02               	movwf	btemp+2,c
  5154  005922  5001               	movf	btemp+1,w,c
  5155  005924  0A80               	xorlw	128
  5156  005926  5C02               	subwf	btemp+2,w,c
  5157  005928  E102               	bnz	u3965
  5158  00592A  5000               	movf	btemp,w,c
  5159  00592C  5CF6               	subwf	tblptrl,w,c
  5160  00592E                     u3965:
  5161  00592E  E203               	bc	l437
  5162  005930  C1DD  F1F2         	movff	_PWM+7,_PWM+28
  5163  005934  0012               	return	
  5164  005936                     l437:
  5165                           ;rgl.c: 3113: else
  5166  005936  CEE7  F000         	movff	_popMAXCW,btemp
  5167  00593A  C1F2  FFE8         	movff	_PWM+28,wreg
  5168  00593E  2400               	addwf	btemp,w,c
  5169  005940  6E02               	movwf	btemp+2,c
  5170  005942  6A03               	clrf	btemp+3,c
  5171  005944  B0D8               	btfsc	status,0,c
  5172  005946  2A03               	incf	btemp+3,f,c
  5173  005948  BE00               	btfsc	btemp,7,c
  5174  00594A  0603               	decf	btemp+3,f,c
  5175  00594C  5003               	movf	btemp+3,w,c
  5176  00594E  0A80               	xorlw	128
  5177  005950  0F7F               	addlw	-129
  5178  005952  0E00               	movlw	0
  5179  005954  B4D8               	btfsc	status,2,c
  5180  005956  5C02               	subwf	btemp+2,w,c
  5181  005958  E304               	bnc	l439
  5182  00595A  0EFF               	movlw	255
  5183  00595C  CFE8 F1F2          	movff	wreg,_PWM+28
  5184  005960  0CFF               	retlw	255
  5185  005962                     l439:
  5186                           ;rgl.c: 3115: else PWM.MAXPWM=PWM.MMAXCW+popMAXC
      +                          W;
  5187  005962  CEE7  FFE8         	movff	_popMAXCW,wreg
  5188  005966  0101               	movlb	(_PWM+25) shr (0+8)
  5189  005968  25EF               	addwf	(_PWM+25)& (0+255),w,b
  5190  00596A  CFE8 F1F2          	movff	wreg,_PWM+28
  5191                           ;rgl.c: 3116: }
  5192  00596E  0012               	return	
  5193  005970                     __end_of_New_MAX_CW:
  5194                           ;rgl.c: 3119: void New_MAX_CO(void)
  5195                           ;rgl.c: 3120: {
  5196  005970                     _New_MAX_CO:
  5197  000000                     
  5198                           ;rgl.c: 3121: if(PWM.MAXPWM+popMAXCO<PWM.MDMOD) 
      +                          PWM.MAXPWM=PWM.MDMOD;
  5199  005970  C1DD  F000         	movff	_PWM+7,btemp
  5200  005974  6A01               	clrf	btemp+1,c
  5201  005976  CEE6  F002         	movff	_popMAXCO,btemp+2
  5202  00597A  C1F2  FFE8         	movff	_PWM+28,wreg
  5203  00597E  2402               	addwf	btemp+2,w,c
  5204  005980  6EF6               	movwf	tblptrl,c
  5205  005982  6AF7               	clrf	tblptrh,c
  5206  005984  B0D8               	btfsc	status,0,c
  5207  005986  2AF7               	incf	tblptrh,f,c
  5208  005988  BE02               	btfsc	btemp+2,7,c
  5209  00598A  06F7               	decf	tblptrh,f,c
  5210  00598C  50F7               	movf	tblptrh,w,c
  5211  00598E  0A80               	xorlw	128
  5212  005990  6E02               	movwf	btemp+2,c
  5213  005992  5001               	movf	btemp+1,w,c
  5214  005994  0A80               	xorlw	128
  5215  005996  5C02               	subwf	btemp+2,w,c
  5216  005998  E102               	bnz	u3985
  5217  00599A  5000               	movf	btemp,w,c
  5218  00599C  5CF6               	subwf	tblptrl,w,c
  5219  00599E                     u3985:
  5220  00599E  E203               	bc	l442
  5221  0059A0  C1DD  F1F2         	movff	_PWM+7,_PWM+28
  5222  0059A4  0012               	return	
  5223  0059A6                     l442:
  5224                           ;rgl.c: 3122: else
  5225  0059A6  CEE6  F000         	movff	_popMAXCO,btemp
  5226  0059AA  C1F2  FFE8         	movff	_PWM+28,wreg
  5227  0059AE  2400               	addwf	btemp,w,c
  5228  0059B0  6E02               	movwf	btemp+2,c
  5229  0059B2  6A03               	clrf	btemp+3,c
  5230  0059B4  B0D8               	btfsc	status,0,c
  5231  0059B6  2A03               	incf	btemp+3,f,c
  5232  0059B8  BE00               	btfsc	btemp,7,c
  5233  0059BA  0603               	decf	btemp+3,f,c
  5234  0059BC  5003               	movf	btemp+3,w,c
  5235  0059BE  0A80               	xorlw	128
  5236  0059C0  0F7F               	addlw	-129
  5237  0059C2  0E00               	movlw	0
  5238  0059C4  B4D8               	btfsc	status,2,c
  5239  0059C6  5C02               	subwf	btemp+2,w,c
  5240  0059C8  E304               	bnc	l444
  5241  0059CA  0EFF               	movlw	255
  5242  0059CC  CFE8 F1F2          	movff	wreg,_PWM+28
  5243  0059D0  0CFF               	retlw	255
  5244  0059D2                     l444:
  5245                           ;rgl.c: 3124: else PWM.MAXPWM=PWM.MMAXCO+popMAXC
      +                          O;
  5246  0059D2  CEE6  FFE8         	movff	_popMAXCO,wreg
  5247  0059D6  0101               	movlb	(_PWM+24) shr (0+8)
  5248  0059D8  25EE               	addwf	(_PWM+24)& (0+255),w,b
  5249  0059DA  CFE8 F1F2          	movff	wreg,_PWM+28
  5250                           ;rgl.c: 3125: }
  5251  0059DE  0012               	return	
  5252  0059E0                     __end_of_New_MAX_CO:
  5253                           ;rgl.c: 3133: unsigned char CalkVNTtoPopPWM(unsi
      +                          gned char nst,unsigned char pop);
  5254                           ;rgl.c: 3137: unsigned char New_SMOD(unsigned ch
      +                          ar pv)
  5255                           ;rgl.c: 3138: {
  5256  0059E0                     _New_SMOD:
  5257  000000                     
  5258                           ;_pv stored from wreg
  5259  0059E0  0100               	movlb	__Lparam shr (0+8)
  5260  0059E2  6FAB               	movwf	?a_New_SMOD^(__Lparam& (0+65280)),b
  5261                           ;rgl.c: 3139: unsigned char pw;
  5262  0059E4  0E02               	movlw	2
  5263  0059E6  6FB2               	movwf	?_CalkVNTtoPopPWM^(__Lparam& (0+65280)),b
  5264  0059E8  51AB               	movf	?a_New_SMOD^(__Lparam& (0+65280)),w
  5265  0059EA  ECA9  F057         	call	_CalkVNTtoPopPWM
  5266  0059EE  0100               	movlb	__Lparam shr (0+8)
  5267  0059F0  6FAC               	movwf	(?a_New_SMOD+1)^(__Lparam& (0+65280)),b
  5268                           ;rgl.c: 3143: if(pw+popSMOD<31) pw=31;
  5269  0059F2  CEEB  F000         	movff	_popSMOD,btemp
  5270  0059F6  51AC               	movf	(?a_New_SMOD+1)^(__Lparam& (0+65280)),w
  5271  0059F8  2400               	addwf	btemp,w,c
  5272  0059FA  6E02               	movwf	btemp+2,c
  5273  0059FC  6A03               	clrf	btemp+3,c
  5274  0059FE  B0D8               	btfsc	status,0,c
  5275  005A00  2A03               	incf	btemp+3,f,c
  5276  005A02  BE00               	btfsc	btemp,7,c
  5277  005A04  0603               	decf	btemp+3,f,c
  5278  005A06  5003               	movf	btemp+3,w,c
  5279  005A08  0A80               	xorlw	128
  5280  005A0A  0F80               	addlw	-128
  5281  005A0C  0E1F               	movlw	31
  5282  005A0E  B4D8               	btfsc	status,2,c
  5283  005A10  5C02               	subwf	btemp+2,w,c
  5284  005A12  E203               	bc	l447
  5285  005A14  0E1F               	movlw	31
  5286  005A16  6FAC               	movwf	(?a_New_SMOD+1)^(__Lparam& (0+65280)),b
  5287  005A18  D01F               	goto	l448
  5288  005A1A                     l447:
  5289                           ;rgl.c: 3144: else
  5290  005A1A  CEEB  F000         	movff	_popSMOD,btemp
  5291  005A1E  0100               	movlb	__Lparam shr (0+8)
  5292  005A20  51AC               	movf	(?a_New_SMOD+1)^(__Lparam& (0+65280)),w
  5293  005A22  2400               	addwf	btemp,w,c
  5294  005A24  6E02               	movwf	btemp+2,c
  5295  005A26  6A03               	clrf	btemp+3,c
  5296  005A28  B0D8               	btfsc	status,0,c
  5297  005A2A  2A03               	incf	btemp+3,f,c
  5298  005A2C  BE00               	btfsc	btemp,7,c
  5299  005A2E  0603               	decf	btemp+3,f,c
  5300  005A30  C1E0  F000         	movff	_PWM+10,btemp
  5301  005A34  6A01               	clrf	btemp+1,c
  5302  005A36  5001               	movf	btemp+1,w,c
  5303  005A38  0A80               	xorlw	128
  5304  005A3A  6E04               	movwf	btemp+4,c
  5305  005A3C  5003               	movf	btemp+3,w,c
  5306  005A3E  0A80               	xorlw	128
  5307  005A40  5C04               	subwf	btemp+4,w,c
  5308  005A42  E102               	bnz	u4015
  5309  005A44  5002               	movf	btemp+2,w,c
  5310  005A46  5C00               	subwf	btemp,w,c
  5311  005A48                     u4015:
  5312  005A48  E203               	bc	l449
  5313  005A4A  C1E0  F0AC         	movff	_PWM+10,?a_New_SMOD+1
  5314  005A4E  D004               	goto	l448
  5315  005A50                     l449:
  5316                           ;rgl.c: 3146: else pw=pw+popSMOD;
  5317  005A50  CEEB  FFE8         	movff	_popSMOD,wreg
  5318  005A54  0100               	movlb	__Lparam shr (0+8)
  5319  005A56  27AC               	addwf	(?a_New_SMOD+1)^(__Lparam& (0+65280)),f,b
  5320  005A58                     l448:
  5321                           ;rgl.c: 3147: return pw;
  5322  005A58  0100               	movlb	__Lparam shr (0+8)
  5323  005A5A  51AC               	movf	(?a_New_SMOD+1)^(__Lparam& (0+65280)),w
  5324  005A5C  0012               	return	
  5325                           ;rgl.c: 3148: }
  5326  005A5E                     __end_of_New_SMOD:
  5327                           ;rgl.c: 3152: void NewPop_SMOD(unsigned char ppv
      +                          )
  5328                           ;rgl.c: 3153: {
  5329  005A5E                     _NewPop_SMOD:
  5330  000000                     
  5331                           ;_ppv stored from wreg
  5332                           ;rgl.c: 3154: unsigned int v,pv;
  5333  005A5E  CFE8 F000          	movff	wreg,btemp
  5334  005A62  6A01               	clrf	btemp+1,c
  5335  005A64  C000  F0B2         	movff	btemp,?_SetNstVNT
  5336  005A68  C001  F0B3         	movff	btemp+1,?_SetNstVNT+1
  5337                           ;_ppv stored from wreg
  5338  005A6C  0100               	movlb	__Lparam shr (0+8)
  5339  005A6E  6FAD               	movwf	(?a_NewPop_SMOD+2)^(__Lparam& (0+65280)),
      +                          b
  5340  005A70  ECC0  F04B         	call	_SetNstVNT	;wreg free
  5341                           ;rgl.c: 3160: v=M.rVVNT;
  5342  005A74  C323  F0B0         	movff	_M+29,?a_NewPop_SMOD+5
  5343  005A78  C324  F0B1         	movff	_M+30,?a_NewPop_SMOD+6
  5344                           ;rgl.c: 3163: pw=CalkVNTtoPopPWM(ppv,2);
  5345  005A7C  0E02               	movlw	2
  5346  005A7E  0100               	movlb	__Lparam shr (0+8)
  5347  005A80  6FB2               	movwf	?_CalkVNTtoPopPWM^(__Lparam& (0+65280)),b
  5348  005A82  51AD               	movf	(?a_NewPop_SMOD+2)^(__Lparam& (0+65280)),w
  5349  005A84  ECA9  F057         	call	_CalkVNTtoPopPWM
  5350  005A88  0100               	movlb	__Lparam shr (0+8)
  5351  005A8A  6FAB               	movwf	?a_NewPop_SMOD^(__Lparam& (0+65280)),b
  5352                           ;rgl.c: 3164: pv=ppv*100;
  5353  005A8C  51AD               	movf	(?a_NewPop_SMOD+2)^(__Lparam& (0+65280)),w
  5354  005A8E  0D64               	mullw	100
  5355  005A90  CFF3 F0AE          	movff	prodl,?a_NewPop_SMOD+3
  5356  005A94  CFF4 F0AF          	movff	prodh,?a_NewPop_SMOD+4
  5357                           ;rgl.c: 3167: if(pw<=PWM.MDMOD) mrg=1;
  5358  005A98  51AB               	movf	?a_NewPop_SMOD^(__Lparam& (0+65280)),w
  5359  005A9A  0101               	movlb	(_PWM+7) shr (0+8)
  5360  005A9C  5DDD               	subwf	(_PWM+7)& (0+255),w,b
  5361  005A9E  E303               	bnc	l452
  5362  005AA0  0E01               	movlw	1
  5363  005AA2  0100               	movlb	__Lparam shr (0+8)
  5364  005AA4  D006               	goto	L14
  5365  005AA6                     l452:
  5366                           ;rgl.c: 3168: else
  5367  005AA6  0100               	movlb	__Lparam shr (0+8)
  5368  005AA8  C1E0  FFE8         	movff	_PWM+10,wreg
  5369  005AAC  5DAB               	subwf	?a_NewPop_SMOD^(__Lparam& (0+65280)),w
  5370  005AAE  E303               	bnc	l454
  5371  005AB0  0E02               	movlw	2
  5372  005AB2                     L14:
  5373  005AB2  6FAC               	movwf	(?a_NewPop_SMOD+1)^(__Lparam& (0+65280)),
      +                          b
  5374  005AB4  D002               	goto	l453
  5375  005AB6                     l454:
  5376                           ;rgl.c: 3170: else mrg=0;
  5377  005AB6  0100               	movlb	__Lparam shr (0+8)
  5378  005AB8  6BAC               	clrf	(?a_NewPop_SMOD+1)^(__Lparam& (0+65280)),b
  5379  005ABA                     l453:
  5380                           ;rgl.c: 3173: if(bpv!=ppv)
  5381  005ABA  CEE1  FFE8         	movff	F1918,wreg
  5382  005ABE  0100               	movlb	__Lparam shr (0+8)
  5383  005AC0  19AD               	xorwf	(?a_NewPop_SMOD+2)^(__Lparam& (0+65280)),
      +                          w
  5384  005AC2  E05A               	bz	l456
  5385                           ;rgl.c: 3174: {
  5386  005AC4  010E               	movlb	F1919 shr (0+8)
  5387  005AC6  6BE2               	clrf	F1919& (0+255),b
  5388                           ;rgl.c: 3176: t2=0;
  5389  005AC8  010E               	movlb	F1920 shr (0+8)
  5390  005ACA  6BE3               	clrf	F1920& (0+255),b
  5391                           ;rgl.c: 3177: bw1=0;
  5392  005ACC  010E               	movlb	F1921 shr (0+8)
  5393  005ACE  6BE4               	clrf	F1921& (0+255),b
  5394                           ;rgl.c: 3178: bw2=0;
  5395  005AD0  010E               	movlb	F1922 shr (0+8)
  5396  005AD2  6BE5               	clrf	F1922& (0+255),b
  5397                           ;rgl.c: 3180: if(bpv>ppv)
  5398  005AD4  CEE1  FFE8         	movff	F1918,wreg
  5399  005AD8  0100               	movlb	__Lparam shr (0+8)
  5400  005ADA  61AD               	cpfslt	(?a_NewPop_SMOD+2)^(__Lparam& (0+65280))
      +                          ,b
  5401  005ADC  D01E               	goto	l457
  5402                           ;rgl.c: 3181: {
  5403  005ADE  CEEB  FFE8         	movff	_popSMOD,wreg
  5404  005AE2  0A80               	xorlw	128
  5405  005AE4  0F7F               	addlw	-129
  5406  005AE6  E30D               	bnc	l458
  5407                           ;rgl.c: 3184: {
  5408  005AE8  51AD               	movf	(?a_NewPop_SMOD+2)^(__Lparam& (0+65280)),w
  5409  005AEA  010E               	movlb	F1918 shr (0+8)
  5410  005AEC  5DE1               	subwf	F1918& (0+255),w,b
  5411  005AEE  010E               	movlb	_popSMOD shr (0+8)
  5412  005AF0  5FEB               	subwf	_popSMOD& (0+255),f,b
  5413                           ;rgl.c: 3186: if(popSMOD<0) {bw2=1;popSMOD=0;}
  5414  005AF2  CEEB  F000         	movff	_popSMOD,btemp
  5415  005AF6  AE00               	btfss	btemp,7,c
  5416  005AF8  D030               	goto	l462
  5417  005AFA                     u4070:
  5418  005AFA  0E01               	movlw	1
  5419  005AFC  CFE8 FEE5          	movff	wreg,F1922
  5420  005B00  D02A               	goto	L20
  5421                           ;rgl.c: 3187: }
  5422  005B02                     l458:
  5423                           ;rgl.c: 3188: else
  5424  005B02  0100               	movlb	__Lparam shr (0+8)
  5425  005B04  51AD               	movf	(?a_NewPop_SMOD+2)^(__Lparam& (0+65280)),w
  5426  005B06  010E               	movlb	F1918 shr (0+8)
  5427  005B08  5DE1               	subwf	F1918& (0+255),w,b
  5428  005B0A  010E               	movlb	_popSMOD shr (0+8)
  5429  005B0C  27EB               	addwf	_popSMOD& (0+255),f,b
  5430                           ;rgl.c: 3191: if(popSMOD>0) {bw2=1;popSMOD=0;}
  5431  005B0E  CEEB  FFE8         	movff	_popSMOD,wreg
  5432  005B12  0A80               	xorlw	128
  5433  005B14  0F7F               	addlw	-129
  5434  005B16  E321               	bnc	l462
  5435  005B18  D7F0               	goto	u4070
  5436                           ;rgl.c: 3192: }
  5437  005B1A                     l457:
  5438                           ;rgl.c: 3195: else
  5439  005B1A  CEEB  FFE8         	movff	_popSMOD,wreg
  5440  005B1E  0A80               	xorlw	128
  5441  005B20  0F7F               	addlw	-129
  5442  005B22  E30B               	bnc	l463
  5443                           ;rgl.c: 3198: {
  5444  005B24  CEE1  FFE8         	movff	F1918,wreg
  5445  005B28  0100               	movlb	__Lparam shr (0+8)
  5446  005B2A  5DAD               	subwf	(?a_NewPop_SMOD+2)^(__Lparam& (0+65280)),
      +                          w
  5447  005B2C  010E               	movlb	_popSMOD shr (0+8)
  5448  005B2E  5FEB               	subwf	_popSMOD& (0+255),f,b
  5449                           ;rgl.c: 3200: if(popSMOD<0) {bw1=1;popSMOD=0;}
  5450  005B30  CEEB  F000         	movff	_popSMOD,btemp
  5451  005B34  AE00               	btfss	btemp,7,c
  5452  005B36  D011               	goto	l462
  5453  005B38  D00B               	goto	L41
  5454                           ;rgl.c: 3201: }
  5455  005B3A                     l463:
  5456                           ;rgl.c: 3202: else
  5457  005B3A  CEE1  FFE8         	movff	F1918,wreg
  5458  005B3E  0100               	movlb	__Lparam shr (0+8)
  5459  005B40  5DAD               	subwf	(?a_NewPop_SMOD+2)^(__Lparam& (0+65280)),
      +                          w
  5460  005B42  010E               	movlb	_popSMOD shr (0+8)
  5461  005B44  27EB               	addwf	_popSMOD& (0+255),f,b
  5462                           ;rgl.c: 3205: if(popSMOD>0) {bw1=1;popSMOD=0;}
  5463  005B46  CEEB  FFE8         	movff	_popSMOD,wreg
  5464  005B4A  0A80               	xorlw	128
  5465  005B4C  0F7F               	addlw	-129
  5466  005B4E  E305               	bnc	l462
  5467  005B50                     L41:
  5468  005B50  0E01               	movlw	1
  5469  005B52  CFE8 FEE4          	movff	wreg,F1921
  5470  005B56                     L20:
  5471  005B56  010E               	movlb	_popSMOD shr (0+8)
  5472  005B58  6BEB               	clrf	_popSMOD& (0+255),b
  5473  005B5A                     l462:
  5474                           ;rgl.c: 3206: }
  5475  005B5A  CEEB  FFE8         	movff	_popSMOD,wreg
  5476  005B5E  0A80               	xorlw	128
  5477  005B60  0F7F               	addlw	-129
  5478  005B62  E302               	bnc	l467
  5479  005B64  010E               	movlb	_popSMOD shr (0+8)
  5480  005B66  07EB               	decf	_popSMOD& (0+255),f,b
  5481  005B68                     l467:
  5482                           ;rgl.c: 3209: if(popSMOD<0) popSMOD++;
  5483  005B68  CEEB  F000         	movff	_popSMOD,btemp
  5484  005B6C  AE00               	btfss	btemp,7,c
  5485  005B6E  D002               	goto	l468
  5486  005B70  010E               	movlb	_popSMOD shr (0+8)
  5487  005B72  2BEB               	incf	_popSMOD& (0+255),f,b
  5488  005B74                     l468:
  5489                           ;rgl.c: 3210: bpv=ppv;
  5490  005B74  C0AD  FEE1         	movff	?a_NewPop_SMOD+2,F1918
  5491  005B78                     l456:
  5492                           ;rgl.c: 3211: }
  5493  005B78  0E00               	movlw	0
  5494  005B7A  EC4A  F04C         	call	_VTmalejacy
  5495  005B7E  0E00               	movlw	0
  5496  005B80  E265               	bc	L40
  5497  005B82  ECDF  F04B         	call	_Vmaleje
  5498  005B86  E261               	bc	l469
  5499                           ;rgl.c: 3219: {
  5500  005B88  0100               	movlb	__Lparam shr (0+8)
  5501  005B8A  51AC               	movf	(?a_NewPop_SMOD+1)^(__Lparam& (0+65280)),w
  5502  005B8C  E10E               	bnz	u4191
  5503  005B8E  0E3C               	movlw	60
  5504  005B90  C0AE  F000         	movff	?a_NewPop_SMOD+3,btemp
  5505  005B94  C0AF  F001         	movff	?a_NewPop_SMOD+4,btemp+1
  5506  005B98  2600               	addwf	btemp,f,c
  5507  005B9A  0E00               	movlw	0
  5508  005B9C  2201               	addwfc	btemp+1,f,c
  5509  005B9E  51B1               	movf	(?a_NewPop_SMOD+6)^(__Lparam& (0+65280)),w
  5510  005BA0  5C01               	subwf	btemp+1,w,c
  5511  005BA2  E102               	bnz	u4185
  5512  005BA4  51B0               	movf	(?a_NewPop_SMOD+5)^(__Lparam& (0+65280)),w
  5513  005BA6  5C00               	subwf	btemp,w,c
  5514  005BA8                     u4185:
  5515  005BA8  E323               	bnc	u4270
  5516  005BAA                     u4191:
  5517  005BAA  0100               	movlb	__Lparam shr (0+8)
  5518  005BAC  05AC               	decf	(?a_NewPop_SMOD+1)^(__Lparam& (0+65280)),w
  5519  005BAE  E10E               	bnz	u4231
  5520  005BB0  0E3C               	movlw	60
  5521  005BB2  C0AE  F000         	movff	?a_NewPop_SMOD+3,btemp
  5522  005BB6  C0AF  F001         	movff	?a_NewPop_SMOD+4,btemp+1
  5523  005BBA  2600               	addwf	btemp,f,c
  5524  005BBC  0E00               	movlw	0
  5525  005BBE  2201               	addwfc	btemp+1,f,c
  5526  005BC0  5001               	movf	btemp+1,w,c
  5527  005BC2  5DB1               	subwf	(?a_NewPop_SMOD+6)^(__Lparam& (0+65280)),
      +                          w
  5528  005BC4  E102               	bnz	u4215
  5529  005BC6  5000               	movf	btemp,w,c
  5530  005BC8  5DB0               	subwf	(?a_NewPop_SMOD+5)^(__Lparam& (0+65280)),
      +                          w
  5531  005BCA                     u4215:
  5532  005BCA  E212               	bc	u4270
  5533  005BCC                     u4231:
  5534  005BCC  0100               	movlb	__Lparam shr (0+8)
  5535  005BCE  51AC               	movf	(?a_NewPop_SMOD+1)^(__Lparam& (0+65280)),w
  5536  005BD0  0A02               	xorlw	2
  5537  005BD2  E13B               	bnz	l469
  5538  005BD4  0E3C               	movlw	60
  5539  005BD6  C0AE  F000         	movff	?a_NewPop_SMOD+3,btemp
  5540  005BDA  C0AF  F001         	movff	?a_NewPop_SMOD+4,btemp+1
  5541  005BDE  2600               	addwf	btemp,f,c
  5542  005BE0  0E00               	movlw	0
  5543  005BE2  2201               	addwfc	btemp+1,f,c
  5544  005BE4  5001               	movf	btemp+1,w,c
  5545  005BE6  5DB1               	subwf	(?a_NewPop_SMOD+6)^(__Lparam& (0+65280)),
      +                          w
  5546  005BE8  E102               	bnz	u4255
  5547  005BEA  5000               	movf	btemp,w,c
  5548  005BEC  5DB0               	subwf	(?a_NewPop_SMOD+5)^(__Lparam& (0+65280)),
      +                          w
  5549  005BEE                     u4255:
  5550  005BEE  E32D               	bnc	l469
  5551  005BF0                     u4270:
  5552                           ;rgl.c: 3221: {
  5553  005BF0  010E               	movlb	F1919 shr (0+8)
  5554  005BF2  6BE2               	clrf	F1919& (0+255),b
  5555                           ;rgl.c: 3223: if((v-pv)>100) w=3;
  5556  005BF4  C0B0  F000         	movff	?a_NewPop_SMOD+5,btemp
  5557  005BF8  C0B1  F001         	movff	?a_NewPop_SMOD+6,btemp+1
  5558  005BFC  0100               	movlb	__Lparam shr (0+8)
  5559  005BFE  51AE               	movf	(?a_NewPop_SMOD+3)^(__Lparam& (0+65280)),w
  5560  005C00  5E00               	subwf	btemp,f,c
  5561  005C02  51AF               	movf	(?a_NewPop_SMOD+4)^(__Lparam& (0+65280)),w
  5562  005C04  5A01               	subwfb	btemp+1,f,c
  5563  005C06  0E00               	movlw	0
  5564  005C08  5C01               	subwf	btemp+1,w,c
  5565  005C0A  0E65               	movlw	101
  5566  005C0C  B4D8               	btfsc	status,2,c
  5567  005C0E  5C00               	subwf	btemp,w,c
  5568  005C10  E302               	bnc	l471
  5569  005C12  0E03               	movlw	3
  5570  005C14  D001               	goto	L16
  5571  005C16                     l471:
  5572                           ;rgl.c: 3224: else w=6;
  5573  005C16  0E06               	movlw	6
  5574  005C18                     L16:
  5575  005C18  6ED9               	movwf	fsr2l,c
  5576                           ;rgl.c: 3225: if(bw2) w=8;
  5577  005C1A  010E               	movlb	F1922 shr (0+8)
  5578  005C1C  53E5               	movf	F1922& (0+255),f,b
  5579  005C1E  E002               	bz	l473
  5580  005C20  0E08               	movlw	8
  5581  005C22  6ED9               	movwf	fsr2l,c
  5582  005C24                     l473:
  5583                           ;rgl.c: 3226: if(++t2>w)
  5584  005C24  010E               	movlb	F1920 shr (0+8)
  5585  005C26  2BE3               	incf	F1920& (0+255),f,b
  5586  005C28  CEE3  FFE8         	movff	F1920,wreg
  5587  005C2C  60D9               	cpfslt	fsr2l,c
  5588  005C2E  D00D               	goto	l469
  5589                           ;rgl.c: 3227: {
  5590  005C30  6BE3               	clrf	F1920& (0+255),b
  5591                           ;rgl.c: 3229: bw1=1;
  5592  005C32  0E01               	movlw	1
  5593  005C34  CFE8 FEE4          	movff	wreg,F1921
  5594                           ;rgl.c: 3230: bw2=0;
  5595  005C38  010E               	movlb	F1922 shr (0+8)
  5596  005C3A  6BE5               	clrf	F1922& (0+255),b
  5597                           ;rgl.c: 3231: if(popSMOD>-50) popSMOD-=kdw;
  5598  005C3C  CEEB  FFE8         	movff	_popSMOD,wreg
  5599  005C40  0A80               	xorlw	128
  5600  005C42  0FB1               	addlw	177
  5601  005C44  E302               	bnc	l469
  5602  005C46  010E               	movlb	_popSMOD shr (0+8)
  5603  005C48  07EB               	decf	_popSMOD& (0+255),f,b
  5604  005C4A                     l469:
  5605                           ;rgl.c: 3232: }
  5606  005C4A  0E00               	movlw	0
  5607  005C4C                     L40:
  5608  005C4C  EC34  F04C         	call	_VTrosnacy
  5609  005C50  B0D8               	btfsc	status,0,c
  5610  005C52  0012               	return	
  5611  005C54  0E00               	movlw	0
  5612  005C56  ECC8  F04B         	call	_Vrosnie
  5613  005C5A  B0D8               	btfsc	status,0,c
  5614  005C5C  0012               	return	
  5615                           ;rgl.c: 3238: {
  5616  005C5E  0100               	movlb	__Lparam shr (0+8)
  5617  005C60  51AC               	movf	(?a_NewPop_SMOD+1)^(__Lparam& (0+65280)),w
  5618  005C62  E10C               	bnz	u4371
  5619  005C64  0EE2               	movlw	226
  5620  005C66  25AE               	addwf	(?a_NewPop_SMOD+3)^(__Lparam& (0+65280)),
      +                          w
  5621  005C68  6E00               	movwf	btemp,c
  5622  005C6A  0EFF               	movlw	255
  5623  005C6C  21AF               	addwfc	(?a_NewPop_SMOD+4)^(__Lparam& (0+65280))
      +                          ,w
  5624  005C6E  6E01               	movwf	btemp+1,c
  5625  005C70  5001               	movf	btemp+1,w,c
  5626  005C72  5DB1               	subwf	(?a_NewPop_SMOD+6)^(__Lparam& (0+65280)),
      +                          w
  5627  005C74  E102               	bnz	u4365
  5628  005C76  5000               	movf	btemp,w,c
  5629  005C78  5DB0               	subwf	(?a_NewPop_SMOD+5)^(__Lparam& (0+65280)),
      +                          w
  5630  005C7A                     u4365:
  5631  005C7A  E321               	bnc	u4450
  5632  005C7C                     u4371:
  5633  005C7C  0100               	movlb	__Lparam shr (0+8)
  5634  005C7E  05AC               	decf	(?a_NewPop_SMOD+1)^(__Lparam& (0+65280)),w
  5635  005C80  E10C               	bnz	u4411
  5636  005C82  0EE2               	movlw	226
  5637  005C84  25AE               	addwf	(?a_NewPop_SMOD+3)^(__Lparam& (0+65280)),
      +                          w
  5638  005C86  6E00               	movwf	btemp,c
  5639  005C88  0EFF               	movlw	255
  5640  005C8A  21AF               	addwfc	(?a_NewPop_SMOD+4)^(__Lparam& (0+65280))
      +                          ,w
  5641  005C8C  6E01               	movwf	btemp+1,c
  5642  005C8E  51B1               	movf	(?a_NewPop_SMOD+6)^(__Lparam& (0+65280)),w
  5643  005C90  5C01               	subwf	btemp+1,w,c
  5644  005C92  E102               	bnz	u4395
  5645  005C94  51B0               	movf	(?a_NewPop_SMOD+5)^(__Lparam& (0+65280)),w
  5646  005C96  5C00               	subwf	btemp,w,c
  5647  005C98                     u4395:
  5648  005C98  E212               	bc	u4450
  5649  005C9A                     u4411:
  5650  005C9A  0100               	movlb	__Lparam shr (0+8)
  5651  005C9C  51AC               	movf	(?a_NewPop_SMOD+1)^(__Lparam& (0+65280)),w
  5652  005C9E  0A02               	xorlw	2
  5653  005CA0  A4D8               	btfss	status,2,c
  5654  005CA2  0012               	return	
  5655  005CA4  0EE2               	movlw	226
  5656  005CA6  25AE               	addwf	(?a_NewPop_SMOD+3)^(__Lparam& (0+65280)),
      +                          w
  5657  005CA8  6E00               	movwf	btemp,c
  5658  005CAA  0EFF               	movlw	255
  5659  005CAC  21AF               	addwfc	(?a_NewPop_SMOD+4)^(__Lparam& (0+65280))
      +                          ,w
  5660  005CAE  6E01               	movwf	btemp+1,c
  5661  005CB0  51B1               	movf	(?a_NewPop_SMOD+6)^(__Lparam& (0+65280)),w
  5662  005CB2  5C01               	subwf	btemp+1,w,c
  5663  005CB4  E102               	bnz	u4435
  5664  005CB6  51B0               	movf	(?a_NewPop_SMOD+5)^(__Lparam& (0+65280)),w
  5665  005CB8  5C00               	subwf	btemp,w,c
  5666  005CBA                     u4435:
  5667  005CBA  A0D8               	btfss	status,0,c
  5668  005CBC  0012               	return	
  5669  005CBE                     u4450:
  5670                           ;rgl.c: 3240: {
  5671  005CBE  010E               	movlb	F1920 shr (0+8)
  5672  005CC0  6BE3               	clrf	F1920& (0+255),b
  5673                           ;rgl.c: 3244: if((pv-v)>100) w=5;
  5674  005CC2  C0AE  F000         	movff	?a_NewPop_SMOD+3,btemp
  5675  005CC6  C0AF  F001         	movff	?a_NewPop_SMOD+4,btemp+1
  5676  005CCA  0100               	movlb	__Lparam shr (0+8)
  5677  005CCC  51B0               	movf	(?a_NewPop_SMOD+5)^(__Lparam& (0+65280)),w
  5678  005CCE  5E00               	subwf	btemp,f,c
  5679  005CD0  51B1               	movf	(?a_NewPop_SMOD+6)^(__Lparam& (0+65280)),w
  5680  005CD2  5A01               	subwfb	btemp+1,f,c
  5681  005CD4  0E00               	movlw	0
  5682  005CD6  5C01               	subwf	btemp+1,w,c
  5683  005CD8  0E65               	movlw	101
  5684  005CDA  B4D8               	btfsc	status,2,c
  5685  005CDC  5C00               	subwf	btemp,w,c
  5686  005CDE  E302               	bnc	l478
  5687  005CE0  0E05               	movlw	5
  5688  005CE2  D001               	goto	L17
  5689  005CE4                     l478:
  5690                           ;rgl.c: 3245: else w=8;
  5691  005CE4  0E08               	movlw	8
  5692  005CE6                     L17:
  5693  005CE6  6ED9               	movwf	fsr2l,c
  5694                           ;rgl.c: 3246: if(bw1) w=10;
  5695  005CE8  010E               	movlb	F1921 shr (0+8)
  5696  005CEA  53E4               	movf	F1921& (0+255),f,b
  5697  005CEC  E002               	bz	l480
  5698  005CEE  0E0A               	movlw	10
  5699  005CF0  6ED9               	movwf	fsr2l,c
  5700  005CF2                     l480:
  5701                           ;rgl.c: 3247: if(++t1>w)
  5702  005CF2  010E               	movlb	F1919 shr (0+8)
  5703  005CF4  2BE2               	incf	F1919& (0+255),f,b
  5704  005CF6  CEE2  FFE8         	movff	F1919,wreg
  5705  005CFA  60D9               	cpfslt	fsr2l,c
  5706  005CFC  0012               	return	
  5707                           ;rgl.c: 3248: {
  5708  005CFE  6BE2               	clrf	F1919& (0+255),b
  5709                           ;rgl.c: 3250: bw1=0;
  5710  005D00  010E               	movlb	F1921 shr (0+8)
  5711  005D02  6BE4               	clrf	F1921& (0+255),b
  5712                           ;rgl.c: 3251: bw2=1;
  5713  005D04  0E01               	movlw	1
  5714  005D06  CFE8 FEE5          	movff	wreg,F1922
  5715                           ;rgl.c: 3252: if(popSMOD<50) popSMOD+=kup;
  5716  005D0A  CEEB  FFE8         	movff	_popSMOD,wreg
  5717  005D0E  0A80               	xorlw	128
  5718  005D10  0F4E               	addlw	-178
  5719  005D12  B0D8               	btfsc	status,0,c
  5720  005D14  0012               	return	
  5721  005D16  010E               	movlb	_popSMOD shr (0+8)
  5722  005D18  2BEB               	incf	_popSMOD& (0+255),f,b
  5723                           ;rgl.c: 3253: }
  5724  005D1A  0C01               	retlw	1
  5725  005D1C                     __end_of_NewPop_SMOD:
  5726                           ;rgl.c: 3378: unsigned char ProcToMod(unsigned c
      +                          har prvnt)
  5727                           ;rgl.c: 3379: {
  5728  005D1C                     _ProcToMod:
  5729  000000                     
  5730                           ;_prvnt stored from wreg
  5731  005D1C  0100               	movlb	__Lparam shr (0+8)
  5732  005D1E  6FA9               	movwf	?a_ProcToMod^(__Lparam& (0+65280)),b
  5733                           ;rgl.c: 3380: unsigned char pv;
  5734  005D20  51A9               	movf	?a_ProcToMod^(__Lparam& (0+65280)),w
  5735  005D22  ECB4  F057         	call	_ProcToVNT
  5736  005D26  0100               	movlb	__Lparam shr (0+8)
  5737  005D28  6FAA               	movwf	(?a_ProcToMod+1)^(__Lparam& (0+65280)),b
  5738                           ;rgl.c: 3383: if(RTdS(12)>1)
  5739  005D2A  0E0C               	movlw	12
  5740  005D2C  ECC9  F063         	call	_RTdS
  5741  005D30  6E00               	movwf	btemp,c
  5742  005D32  0E02               	movlw	2
  5743  005D34  5C00               	subwf	btemp,w,c
  5744  005D36  E306               	bnc	l484
  5745                           ;rgl.c: 3384: {
  5746  005D38  0E0C               	movlw	12
  5747  005D3A  ECB7  F063         	call	_StartRTdS
  5748                           ;rgl.c: 3386: NewPop_SMOD(pv);
  5749  005D3E  0100               	movlb	__Lparam shr (0+8)
  5750  005D40  51AA               	movf	(?a_ProcToMod+1)^(__Lparam& (0+65280)),w
  5751  005D42  DE8D               	call	_NewPop_SMOD
  5752  005D44                     l484:
  5753                           ;rgl.c: 3387: }
  5754  005D44  0100               	movlb	__Lparam shr (0+8)
  5755  005D46  51AA               	movf	(?a_ProcToMod+1)^(__Lparam& (0+65280)),w
  5756  005D48  D64B               	goto	_New_SMOD
  5757                           ;rgl.c: 3391: }
  5758  005D4A                     __end_of_ProcToMod:
  5759                           ;rgl.c: 3462: bit Trosnie(const unsigned char t)
  5760                           ;rgl.c: 3463: {
  5761  005D4A                     _Trosnie:
  5762  000000                     
  5763                           ; _t loaded to fsr2l
  5764  005D4A  6ED9               	movwf	fsr2l,c
  5765                           ;rgl.c: 3464: return (rgl.x_dt>t);
  5766  005D4C  C1F7  F000         	movff	_rgl+4,btemp
  5767  005D50  50D9               	movf	fsr2l,w,c
  5768  005D52  BE00               	btfsc	btemp,7,c
  5769  005D54  D005               	goto	u4510
  5770  005D56  0AFF               	xorlw	255
  5771  005D58  2400               	addwf	btemp,w,c
  5772  005D5A  E302               	bnc	u4510
  5773  005D5C  80D8               	bsf	status,0,c
  5774  005D5E  0012               	return	
  5775  005D60                     u4510:
  5776  005D60  90D8               	bcf	status,0,c
  5777  005D62  0012               	return	
  5778                           ;rgl.c: 3465: }
  5779  005D64                     __end_of_Trosnie:
  5780                           ;rgl.c: 3471: bit Tmaleje(const unsigned char t)
  5781                           ;rgl.c: 3472: {
  5782  005D64                     _Tmaleje:
  5783  000000                     
  5784                           ; _t loaded to fsr2l
  5785  005D64  6ED9               	movwf	fsr2l,c
  5786                           ;rgl.c: 3473: return (rgl.x_dt<(-1*t));
  5787  005D66  CFD9 F000          	movff	fsr2l,btemp
  5788  005D6A  6A01               	clrf	btemp+1,c
  5789  005D6C  1E00               	comf	btemp,f,c
  5790  005D6E  1E01               	comf	btemp+1,f,c
  5791  005D70  4A00               	infsnz	btemp,f,c
  5792  005D72  2A01               	incf	btemp+1,f,c
  5793  005D74  C1F7  F002         	movff	_rgl+4,btemp+2
  5794  005D78  6A03               	clrf	btemp+3,c
  5795  005D7A  BE02               	btfsc	btemp+2,7,c
  5796  005D7C  0603               	decf	btemp+3,f,c
  5797  005D7E  5003               	movf	btemp+3,w,c
  5798  005D80  0A80               	xorlw	128
  5799  005D82  6E04               	movwf	btemp+4,c
  5800  005D84  5001               	movf	btemp+1,w,c
  5801  005D86  0A80               	xorlw	128
  5802  005D88  5C04               	subwf	btemp+4,w,c
  5803  005D8A  E102               	bnz	u4535
  5804  005D8C  5000               	movf	btemp,w,c
  5805  005D8E  5C02               	subwf	btemp+2,w,c
  5806  005D90                     u4535:
  5807  005D90  E202               	bc	u4530
  5808  005D92  80D8               	bsf	status,0,c
  5809  005D94  0012               	return	
  5810  005D96                     u4530:
  5811  005D96  90D8               	bcf	status,0,c
  5812  005D98  0012               	return	
  5813                           ;rgl.c: 3474: }
  5814  005D9A                     __end_of_Tmaleje:
  5815                           ;rgl.c: 3478: bit Tstoi(void)
  5816                           ;rgl.c: 3479: {
  5817  005D9A                     _Tstoi:
  5818  000000                     
  5819                           ;rgl.c: 3480: return !rgl.x_dt;
  5820  005D9A  EE01  F0F7         	lfsr	0,_rgl+4
  5821  005D9E  50EF               	movf	indf0,w,c
  5822  005DA0  90D8               	bcf	status,0,c
  5823  005DA2  B4D8               	btfsc	status,2,c
  5824  005DA4  80D8               	bsf	status,0,c
  5825  005DA6  0012               	return	
  5826                           ;rgl.c: 3481: }
  5827  005DA8                     __end_of_Tstoi:
  5828                           ;rgl.c: 3488: bit Tnizsza(const unsigned char t)
  5829                           ;rgl.c: 3489: {
  5830  005DA8                     _Tnizsza:
  5831  000000                     
  5832                           ; _t loaded to fsr2l
  5833  005DA8  6ED9               	movwf	fsr2l,c
  5834                           ;rgl.c: 3490: return (rgl.x_t>t);
  5835  005DAA  C1F5  F000         	movff	_rgl+2,btemp
  5836  005DAE  50D9               	movf	fsr2l,w,c
  5837  005DB0  BE00               	btfsc	btemp,7,c
  5838  005DB2  D005               	goto	u4550
  5839  005DB4  0AFF               	xorlw	255
  5840  005DB6  2400               	addwf	btemp,w,c
  5841  005DB8  E302               	bnc	u4550
  5842  005DBA  80D8               	bsf	status,0,c
  5843  005DBC  0012               	return	
  5844  005DBE                     u4550:
  5845  005DBE  90D8               	bcf	status,0,c
  5846  005DC0  0012               	return	
  5847                           ;rgl.c: 3491: }
  5848  005DC2                     __end_of_Tnizsza:
  5849                           ;rgl.c: 3497: bit Twyzsza(const unsigned char t)
  5850                           ;rgl.c: 3498: {
  5851  005DC2                     _Twyzsza:
  5852  000000                     
  5853                           ; _t loaded to fsr2l
  5854  005DC2  6ED9               	movwf	fsr2l,c
  5855                           ;rgl.c: 3499: return (rgl.x_t<(-1*t));
  5856  005DC4  CFD9 F000          	movff	fsr2l,btemp
  5857  005DC8  6A01               	clrf	btemp+1,c
  5858  005DCA  1E00               	comf	btemp,f,c
  5859  005DCC  1E01               	comf	btemp+1,f,c
  5860  005DCE  4A00               	infsnz	btemp,f,c
  5861  005DD0  2A01               	incf	btemp+1,f,c
  5862  005DD2  C1F5  F002         	movff	_rgl+2,btemp+2
  5863  005DD6  6A03               	clrf	btemp+3,c
  5864  005DD8  BE02               	btfsc	btemp+2,7,c
  5865  005DDA  0603               	decf	btemp+3,f,c
  5866  005DDC  5003               	movf	btemp+3,w,c
  5867  005DDE  0A80               	xorlw	128
  5868  005DE0  6E04               	movwf	btemp+4,c
  5869  005DE2  5001               	movf	btemp+1,w,c
  5870  005DE4  0A80               	xorlw	128
  5871  005DE6  5C04               	subwf	btemp+4,w,c
  5872  005DE8  E102               	bnz	u4575
  5873  005DEA  5000               	movf	btemp,w,c
  5874  005DEC  5C02               	subwf	btemp+2,w,c
  5875  005DEE                     u4575:
  5876  005DEE  E202               	bc	u4570
  5877  005DF0  80D8               	bsf	status,0,c
  5878  005DF2  0012               	return	
  5879  005DF4                     u4570:
  5880  005DF4  90D8               	bcf	status,0,c
  5881  005DF6  0012               	return	
  5882                           ;rgl.c: 3500: }
  5883  005DF8                     __end_of_Twyzsza:
  5884                           ;rgl.c: 3504: bit Trowna(void)
  5885                           ;rgl.c: 3505: {
  5886  005DF8                     _Trowna:
  5887  000000                     
  5888                           ;rgl.c: 3506: return !rgl.x_t;
  5889  005DF8  EE01  F0F5         	lfsr	0,_rgl+2
  5890  005DFC  50EF               	movf	indf0,w,c
  5891  005DFE  90D8               	bcf	status,0,c
  5892  005E00  B4D8               	btfsc	status,2,c
  5893  005E02  80D8               	bsf	status,0,c
  5894  005E04  0012               	return	
  5895                           ;rgl.c: 3507: }
  5896  005E06                     __end_of_Trowna:
  5897                           ;rgl.c: 3513: bit TFrosnie(const unsigned char t
      +                          )
  5898                           ;rgl.c: 3514: {
  5899  005E06                     _TFrosnie:
  5900  000000                     
  5901                           ; _t loaded to fsr2l
  5902  005E06  6ED9               	movwf	fsr2l,c
  5903                           ;rgl.c: 3515: return (rgl.x_df>t);
  5904  005E08  C1F8  F000         	movff	_rgl+5,btemp
  5905  005E0C  50D9               	movf	fsr2l,w,c
  5906  005E0E  BE00               	btfsc	btemp,7,c
  5907  005E10  D005               	goto	u4590
  5908  005E12  0AFF               	xorlw	255
  5909  005E14  2400               	addwf	btemp,w,c
  5910  005E16  E302               	bnc	u4590
  5911  005E18  80D8               	bsf	status,0,c
  5912  005E1A  0012               	return	
  5913  005E1C                     u4590:
  5914  005E1C  90D8               	bcf	status,0,c
  5915  005E1E  0012               	return	
  5916                           ;rgl.c: 3516: }
  5917  005E20                     __end_of_TFrosnie:
  5918                           ;rgl.c: 3522: bit TFmaleje(const unsigned char t
      +                          )
  5919                           ;rgl.c: 3523: {
  5920  005E20                     _TFmaleje:
  5921  000000                     
  5922                           ; _t loaded to fsr2l
  5923  005E20  6ED9               	movwf	fsr2l,c
  5924                           ;rgl.c: 3524: return (rgl.x_df<(-1*t));
  5925  005E22  CFD9 F000          	movff	fsr2l,btemp
  5926  005E26  6A01               	clrf	btemp+1,c
  5927  005E28  1E00               	comf	btemp,f,c
  5928  005E2A  1E01               	comf	btemp+1,f,c
  5929  005E2C  4A00               	infsnz	btemp,f,c
  5930  005E2E  2A01               	incf	btemp+1,f,c
  5931  005E30  C1F8  F002         	movff	_rgl+5,btemp+2
  5932  005E34  6A03               	clrf	btemp+3,c
  5933  005E36  BE02               	btfsc	btemp+2,7,c
  5934  005E38  0603               	decf	btemp+3,f,c
  5935  005E3A  5003               	movf	btemp+3,w,c
  5936  005E3C  0A80               	xorlw	128
  5937  005E3E  6E04               	movwf	btemp+4,c
  5938  005E40  5001               	movf	btemp+1,w,c
  5939  005E42  0A80               	xorlw	128
  5940  005E44  5C04               	subwf	btemp+4,w,c
  5941  005E46  E102               	bnz	u4615
  5942  005E48  5000               	movf	btemp,w,c
  5943  005E4A  5C02               	subwf	btemp+2,w,c
  5944  005E4C                     u4615:
  5945  005E4C  E202               	bc	u4610
  5946  005E4E  80D8               	bsf	status,0,c
  5947  005E50  0012               	return	
  5948  005E52                     u4610:
  5949  005E52  90D8               	bcf	status,0,c
  5950  005E54  0012               	return	
  5951                           ;rgl.c: 3525: }
  5952  005E56                     __end_of_TFmaleje:
  5953                           ;rgl.c: 3529: bit TFstoi(void)
  5954                           ;rgl.c: 3530: {
  5955  005E56                     _TFstoi:
  5956  000000                     
  5957                           ;rgl.c: 3531: return !rgl.x_df;
  5958  005E56  EE01  F0F8         	lfsr	0,_rgl+5
  5959  005E5A  50EF               	movf	indf0,w,c
  5960  005E5C  90D8               	bcf	status,0,c
  5961  005E5E  B4D8               	btfsc	status,2,c
  5962  005E60  80D8               	bsf	status,0,c
  5963  005E62  0012               	return	
  5964                           ;rgl.c: 3532: }
  5965  005E64                     __end_of_TFstoi:
  5966                           ;rgl.c: 3535: void RestartMod(void)
  5967                           ;rgl.c: 3536: {
  5968  005E64                     _RestartMod:
  5969  000000                     
  5970                           ;rgl.c: 3537: rgl.btco=0;
  5971  005E64  0101               	movlb	_rgl shr (0+8)
  5972  005E66  91F3               	bcf	_rgl& (0+255),0,b
  5973                           ;rgl.c: 3538: rgl.btcw=0;
  5974  005E68  93F3               	bcf	_rgl& (0+255),1,b
  5975                           ;rgl.c: 3539: rgl.fz=0;
  5976  005E6A  95F3               	bcf	_rgl& (0+255),2,b
  5977                           ;rgl.c: 3540: rgl.med_up=0;
  5978  005E6C  97F3               	bcf	_rgl& (0+255),3,b
  5979                           ;rgl.c: 3541: rgl.fast_up=0;
  5980  005E6E  99F3               	bcf	_rgl& (0+255),4,b
  5981                           ;rgl.c: 3542: rgl.nmod=0;
  5982  005E70  9BF3               	bcf	_rgl& (0+255),5,b
  5983                           ;rgl.c: 3543: rgl.del1s=0;
  5984  005E72  9DF3               	bcf	_rgl& (0+255),6,b
  5985                           ;rgl.c: 3544: rgl.deln1=0;
  5986  005E74  9FF3               	bcf	_rgl& (0+255),7,b
  5987                           ;rgl.c: 3545: rgl.inv_mod=0;
  5988  005E76  91F4               	bcf	(_rgl+1)& (0+255),0,b
  5989                           ;rgl.c: 3546: }
  5990  005E78  0012               	return	
  5991  005E7A                     __end_of_RestartMod:
  5992  000000                     
  5993  000000                     
  5994  000000                     
  5995  000000                     
  5996  000000                     
  5997  000000                     
  5998  000000                     
  5999  000000                     
  6000  000000                     
  6001  000000                     
  6002  000000                     
  6003  000000                     
  6004  000000                     
  6005  000000                     
  6006  000000                     
  6007  000000                     
  6008  000000                     
  6009  000000                     
  6010  000000                     
  6011  000000                     
  6012  000000                     
  6013  000000                     
  6014  000000                     
  6015  000000                     
  6016  000000                     
  6017  000000                     
  6018  000000                     
  6019  000000                     
  6020  000000                     
  6021  000000                     
  6022  000000                     
  6023  000000                     
  6024  000000                     
  6025  000000                     
  6026  000000                     
  6027  000000                     
  6028  000000                     
  6029  000000                     
  6030  000000                     
  6031  000000                     
  6032  000000                     
  6033  000000                     
  6034  000000                     
  6035  000000                     
  6036  000000                     
  6037  000000                     
  6038  000000                     
  6039  000000                     
  6040  000000                     
  6041  000000                     
  6042  000000                     
  6043  000000                     
  6044  000000                     
  6045  000000                     
  6046  000000                     
  6047  000000                     
  6048  000000                     
  6049  000000                     
  6050  000000                     
  6051  000000                     
  6052  000000                     
  6053  000000                     
  6054  000000                     
  6055  000000                     
  6056  000000                     
  6057  000000                     
  6058  000000                     
  6059  000000                     
  6060  000000                     
  6061  000000                     
  6062  000000                     
  6063  000000                     
  6064  000000                     
  6065  000000                     
  6066  000000                     
  6067  000000                     
  6068  000000                     
  6069  000000                     
  6070  000000                     
  6071  000000                     
  6072  000000                     
  6073  000000                     
  6074  000000                     
  6075  000000                     
  6076  000000                     
  6077  000000                     
  6078  000000                     
  6079  000000                     
  6080  000000                     
  6081  000000                     
  6082  000000                     
  6083  000000                     
  6084  000000                     
  6085  000000                     
  6086  000000                     
  6087  000000                     
  6088  000000                     
  6089  000000                     
  6090  000000                     
  6091  000000                     
  6092  000000                     
  6093  000000                     
  6094  000000                     
  6095  000000                     
  6096  000000                     
  6097  000000                     
  6098  000000                     
  6099  000000                     
  6100  000000                     
  6101  000000                     
  6102  000000                     
  6103  000000                     
  6104  000000                     
  6105  000000                     
  6106  000000                     
  6107  000000                     
  6108  000000                     
  6109  000000                     
  6110  000000                     
  6111  000000                     
  6112  000000                     
  6113  000000                     
  6114  000000                     
  6115  000000                     
  6116  000000                     
  6117  000000                     
  6118  000000                     
  6119  000000                     
  6120  000000                     
  6121  000000                     
  6122  000000                     
  6123  000000                     
  6124  000000                     
  6125  000000                     
  6126  000000                     
  6127  000000                     
  6128  000000                     
  6129  000000                     
  6130  000000                     
  6131  000000                     
  6132  000000                     
  6133  000000                     
  6134  000000                     
  6135  000000                     
  6136  000000                     
  6137  000000                     
  6138  000000                     
  6139  000000                     
  6140  000000                     
  6141  000000                     
  6142  000000                     
  6143  000000                     
  6144  000000                     
  6145  000000                     
  6146  000000                     
  6147  000000                     
  6148  000000                     
  6149  000000                     
  6150  000000                     
  6151  000000                     
  6152  000000                     
  6153  000000                     
  6154  000000                     
  6155  000000                     
  6156  000000                     
  6157  000000                     
  6158  000000                     
  6159  000000                     
  6160  000000                     
  6161  000000                     
  6162  000000                     
  6163  000000                     
  6164  000000                     
  6165  000000                     
  6166  000000                     
  6167  000000                     
  6168  000000                     
  6169  000000                     
  6170  000000                     
  6171  000000                     
  6172  000000                     
  6173  000000                     
  6174  000000                     
  6175  000000                     
  6176  000000                     
  6177  000000                     
  6178  000000                     
  6179  000000                     
  6180  000000                     
  6181  000000                     
  6182  000000                     
  6183  000000                     
  6184  000000                     
  6185  000000                     
  6186  000000                     
  6187  000000                     
  6188  000000                     
  6189  000000                     
  6190  000000                     
  6191  000000                     
  6192  000000                     
  6193  000000                     
  6194  000000                     
  6195  000000                     
  6196  000000                     
  6197  000000                     
  6198  000000                     
  6199  000000                     
  6200  000000                     
  6201  000000                     
  6202  000000                     
  6203  000000                     
  6204  000000                     
  6205  000000                     
  6206  000000                     
  6207  000000                     
  6208  000000                     
  6209  000000                     
  6210  000000                     
  6211  000000                     
  6212  000000                     
  6213  000000                     
  6214  000000                     
  6215  000000                     
  6216  000000                     
  6217  000000                     
  6218  000000                     
  6219  000000                     
  6220  000000                     
  6221  000000                     
  6222  000000                     
  6223  000000                     
  6224  000000                     
  6225  000000                     
  6226  000000                     
  6227  000000                     
  6228  000000                     
  6229  000000                     
  6230  000000                     
  6231  000000                     
  6232  000000                     
  6233  000000                     
  6234  000000                     
  6235  000000                     
  6236  000000                     
  6237  000000                     
  6238  000000                     
  6239  000000                     
  6240  000000                     
  6241  000000                     
  6242  000000                     
  6243  000000                     
  6244  000000                     
  6245  000000                     
  6246  000000                     
  6247  000000                     
  6248  000000                     
  6249  000000                     
  6250  000000                     
  6251  000000                     
  6252  000000                     
  6253  000000                     
  6254  000000                     
  6255  000000                     
  6256  000000                     
  6257  000000                     
  6258  000000                     
  6259  000000                     
  6260  000000                     
  6261  000000                     
  6262  000000                     
  6263  000000                     
  6264  000000                     
  6265  000000                     
  6266  000000                     
  6267  000000                     
  6268  000000                     
  6269  000000                     
  6270  000000                     
  6271  000000                     
  6272  000000                     
  6273  000000                     
  6274  000000                     
  6275  000000                     
  6276  000000                     
  6277  000000                     
  6278  000000                     
  6279  000000                     
  6280  000000                     
  6281  000000                     
  6282  000000                     
  6283  000000                     
  6284  000000                     
  6285  000000                     
  6286  000000                     
  6287  000000                     
  6288  000000                     
  6289  000000                     
  6290  000000                     
  6291  000000                     
  6292  000000                     
  6293  000000                     
  6294  000000                     
  6295  000000                     
  6296  000000                     
  6297  000000                     
  6298  000000                     
  6299  000000                     
  6300  000000                     
  6301  000000                     
  6302  000000                     
  6303  000000                     
  6304  000000                     
  6305  000000                     
  6306  000000                     
  6307  000000                     
  6308  000000                     
  6309  000000                     
  6310  000000                     
  6311  000000                     
  6312  000000                     
  6313  000000                     
  6314  000000                     
  6315  000000                     
  6316  000000                     
  6317  000000                     
  6318  000000                     
  6319  000000                     
  6320  000000                     
  6321  000000                     
  6322  000000                     
  6323  000000                     
  6324  000000                     
  6325  000000                     
  6326  000000                     
  6327  000000                     
  6328  000000                     
  6329  000000                     
  6330  000000                     
  6331  000000                     
  6332  000000                     
  6333  000000                     
  6334  000000                     
  6335  000000                     
  6336  000000                     
  6337  000000                     
  6338  000000                     
  6339  000000                     
  6340  000000                     
  6341  000000                     
  6342  000000                     
  6343  000000                     
  6344  000000                     
  6345  000000                     
  6346  000000                     
  6347  000000                     
  6348  000000                     
  6349  000000                     
  6350  000000                     
  6351  000000                     
  6352  000000                     
  6353  000000                     
  6354  000000                     
  6355  000000                     
  6356  000000                     
  6357  000000                     
  6358  000000                     
  6359  000000                     
  6360  000000                     
  6361  000000                     
  6362  000000                     
  6363  000000                     
  6364  000000                     
  6365  000000                     
  6366  000000                     
  6367  000000                     
  6368  000000                     
  6369  000000                     
  6370  000000                     
  6371  000000                     
  6372  000000                     
  6373  000000                     
  6374  000000                     
  6375  000000                     
  6376  000000                     
  6377  000000                     
  6378  000000                     
  6379  000000                     
  6380  000000                     
  6381  000000                     
  6382  000000                     
  6383  000000                     
  6384  000000                     
  6385  000000                     
  6386  000000                     
  6387  000000                     
  6388  000000                     
  6389  000000                     
  6390  000000                     
  6391  000000                     
  6392  000000                     
  6393  000000                     
  6394  000000                     
  6395  000000                     
  6396  000000                     
  6397  000000                     
  6398  000000                     
  6399  000000                     
  6400  000000                     
  6401  000000                     
  6402  000000                     
  6403  000000                     
  6404  000000                     
  6405  000000                     
  6406  000000                     
  6407  000000                     
  6408  000000                     
  6409  000000                     
  6410  000000                     
  6411  000000                     
  6412  000000                     
  6413  000000                     
  6414  000000                     
  6415  000000                     
  6416  000000                     
  6417  000000                     
  6418  000000                     
  6419  000000                     
  6420  000000                     
  6421  000000                     
  6422  000000                     
  6423  000000                     
  6424  000000                     
  6425  000000                     
  6426  000000                     
  6427  000000                     
  6428                           
  6429                           	psect	bigbss
  6430  000EBA                     F1790:
  6431  000EBA                     	ds	1
  6432  000EBA                     F1791:
  6433  000EBA                     	ds	1
  6434  000EBA                     F1792:
  6435  000EBA                     	ds	1
  6436  000EBA                     F1793:
  6437  000EBA                     	ds	1
  6438  000EBA                     F1794:
  6439  000EBA                     	ds	1
  6440  000EBA                     F1795:
  6441  000EBA                     	ds	1
  6442  000EBA                     F1796:
  6443  000EBA                     	ds	1
  6444  000EBA                     F1810:
  6445  000EBA                     	ds	1
  6446  000EBA                     F1817:
  6447  000EBA                     	ds	1
  6448  000EBA                     F1818:
  6449  000EBA                     	ds	1
  6450  000EBA                     F1819:
  6451  000EBA                     	ds	1
  6452  000EBA                     F1820:
  6453  000EBA                     	ds	1
  6454  000EBA                     F1821:
  6455  000EBA                     	ds	1
  6456  000EBA                     F1822:
  6457  000EBA                     	ds	1
  6458  000EBA                     F1823:
  6459  000EBA                     	ds	1
  6460  000EBA                     F1824:
  6461  000EBA                     	ds	1
  6462  000EBA                     F1825:
  6463  000EBA                     	ds	1
  6464  000EBA                     F1826:
  6465  000EBA                     	ds	1
  6466  000EBA                     F1827:
  6467  000EBA                     	ds	1
  6468  000EBA                     F1842:
  6469  000EBA                     	ds	1
  6470  000EBA                     F1855:
  6471  000EBA                     	ds	1
  6472  000EBA                     F1856:
  6473  000EBA                     	ds	1
  6474  000EBA                     F1857:
  6475  000EBA                     	ds	1
  6476  000EBA                     F1858:
  6477  000EBA                     	ds	1
  6478  000EBA                     F1859:
  6479  000EBA                     	ds	1
  6480  000EBA                     F1860:
  6481  000EBA                     	ds	1
  6482  000EBA                     F1861:
  6483  000EBA                     	ds	1
  6484  000EBA                     F1874:
  6485  000EBA                     	ds	1
  6486  000EBA                     F1875:
  6487  000EBA                     	ds	1
  6488  000EBA                     F1876:
  6489  000EBA                     	ds	1
  6490  000EBA                     F1877:
  6491  000EBA                     	ds	1
  6492  000EBA                     F1883:
  6493  000EBA                     	ds	1
  6494  000EBA                     F1884:
  6495  000EBA                     	ds	1
  6496  000EBA                     F1885:
  6497  000EBA                     	ds	1
  6498  000EBA                     F1886:
  6499  000EBA                     	ds	1
  6500  000EBA                     F1893:
  6501  000EBA                     	ds	1
  6502  000EBA                     F1894:
  6503  000EBA                     	ds	1
  6504  000EBA                     F1895:
  6505  000EBA                     	ds	1
  6506  000EBA                     F1896:
  6507  000EBA                     	ds	1
  6508  000EBA                     F1918:
  6509  000EBA                     	ds	1
  6510  000EBA                     F1919:
  6511  000EBA                     	ds	1
  6512  000EBA                     F1920:
  6513  000EBA                     	ds	1
  6514  000EBA                     F1921:
  6515  000EBA                     	ds	1
  6516  000EBA                     F1922:
  6517  000EBA                     	ds	1
  6518  000000                     
  6519  000000                     
  6520  000000                     
  6521  000000                     
  6522  000000                     
  6523  000000                     
  6524  000000                     
  6525  000000                     
  6526  000000                     
  6527  000000                     
  6528  000000                     
  6529  000000                     
  6530  000000                     
  6531  000000                     
  6532  000000                     
  6533  000000                     
  6534  000000                     
  6535  000000                     
  6536  000000                     
  6537  000000                     
  6538  000000                     
  6539  000000                     
  6540  000000                     
  6541  000000                     
  6542  000000                     
  6543  000000                     
  6544  000000                     
  6545  000000                     
  6546  000000                     
  6547  000000                     
  6548  000000                     
  6549  000000                     
  6550  000000                     
  6551  000000                     
  6552  000000                     
  6553  000000                     
  6554  000000                     
  6555  000000                     
  6556  000000                     
  6557  000000                     
  6558  000000                     
  6559  000000                     
  6560  000000                     
  6561  000000                     
  6562  000000                     
  6563  000000                     
  6564  000000                     
  6565  000000                     
  6566  000000                     
  6567  000000                     
  6568  000000                     
  6569  000000                     
  6570  000000                     
  6571  000000                     
  6572  000000                     
  6573  000000                     
  6574  000000                     
  6575  000000                     
  6576  000000                     
  6577  000000                     
  6578  000000                     
  6579  000000                     
  6580  000000                     
  6581  000000                     
  6582  000000                     
  6583  000000                     
  6584  000000                     
  6585  000000                     
  6586  000000                     
  6587  000000                     
  6588  000000                     
  6589  000000                     
  6590  000000                     
  6591  000000                     
  6592  000000                     
  6593  000000                     
  6594  000000                     
  6595  000000                     
  6596  000000                     
  6597  000000                     
  6598  000000                     
  6599  000000                     
  6600  000000                     
  6601  000000                     
  6602  000000                     
  6603  000000                     
  6604  000000                     
  6605  000000                     
  6606  000000                     
  6607  000000                     
  6608  000000                     
  6609  000000                     
  6610  000000                     
  6611  000000                     
  6612  000000                     
  6613  000000                     
  6614  000000                     
  6615  000000                     
  6616  000000                     
  6617  000000                     
  6618  000000                     
  6619  000000                     
  6620  000000                     
  6621  000000                     
  6622  000000                     
  6623  000000                     
  6624  000000                     
  6625  000000                     
  6626  000000                     
  6627  000000                     
  6628  000000                     
  6629  000000                     
  6630  000000                     
  6631  000000                     
  6632  000000                     
  6633  000000                     
  6634  000000                     
  6635  000000                     
  6636  000000                     
  6637  000000                     
  6638  000000                     
  6639  000000                     
  6640  000000                     
  6641  000000                     
  6642  000000                     
  6643  000EBA                     _popMAXCO:
  6644  000EBA                     	ds	1
  6645  000EBA                     _popMAXCW:
  6646  000EBA                     	ds	1
  6647  000EBA                     _popMIN:
  6648  000EBA                     	ds	1
  6649  000EBA                     _popSMAX:
  6650  000EBA                     	ds	1
  6651  000EBA                     _popSMIN:
  6652  000EBA                     	ds	1
  6653  000EBA                     _popSMOD:
  6654  000EBA                     	ds	1
  6655  000EBA                     _pwm_center:
  6656  000EBA                     	ds	1
  6657  000EBA                     _pwm_kwr:
  6658  000EBA                     	ds	1
  6659  000EBA                     _tmr:
  6660  000EBA                     	ds	1
  6661  000EBA                     _tmr2:
  6662  000EBA                     	ds	1
  6663  000000                     
  6664  000000                     
  6665  000000                     
  6666  000000                     
  6667  000000                     
  6668  000000                     
  6669  000000                     
  6670                           
  6671                           	psect	const
  6672  00102C                     _kdw:
  6673  00102C  01                 	db	1
  6674  00102D                     _kup:
  6675  00102D  01                 	db	1
  6676                           
  6677                           	psect	bss
  6678  0001F3                     _rgl:
  6679  0001F3                     	ds	10
  6680                           
  6681                           	psect	temp
  6682  000000                     btemp:
  6683  000000                     	ds	8
  6684                           tblptrh	equ	0xFF7
  6685                           tblptrl	equ	0xFF6
  6686                           prodh	equ	0xFF4
  6687                           prodl	equ	0xFF3
  6688                           indf0	equ	0xFEF
  6689                           fsr0h	equ	0xFEA
  6690                           fsr0l	equ	0xFE9
  6691                           wreg	equ	0xFE8
  6692                           fsr1l	equ	0xFE1
  6693                           fsr2l	equ	0xFD9
  6694                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Thu Jul 28 10:43:10 2016

            _SetNstVNT 9780                      _M 0306  
            ?a_ModDkCO 00A6                     l20 384A  
                   l30 3900                     l31 3930  
                   l23 3874                     l32 3938  
                   l24 38B0                     l16 39FE  
                   l33 3998                     l25 38B8  
                   l17 37F0                     l50 3C2C  
                   l34 395A                     l26 38E6  
                   l18 3852                     l43 3B28  
                   l35 3990                     l27 38E2  
                   l19 3812                     l60 3DC2  
                   l52 3D2C                     l44 3B2C  
                   l45 3C1E                     l29 38FC  
           ?_SetNstVNT 00B2                     l70 3F22  
                   l54 3CD6                     l46 3BBE  
                   l38 39BA                     l55 3D26  
                   l47 3C18                     l39 39F6  
                   l80 3FD6                     l72 3F38  
                   l64 3E2C                     l81 4034  
                   l65 3F14                     l49 3C38  
                   l90 41B6                     l74 3F5C  
                   l66 3EB4                     l91 41EE  
                   l83 40CE                     l67 3F0E  
                   l59 3E1A                     l92 41E8  
                   l84 4114                     l85 411A  
                   l77 3F92                     l69 3F2C  
                   l78 3F8C                     l95 43EA  
                   l79 3FCC                     l96 4216  
                   l97 4222                     l89 4150  
                   l98 422C              ?a_ModZgCO 00A6  
             _StartCO2 3A10              _ProcToVNT AF68  
            _ProcToMod 5D1C      __end_of_ProcToMod 5D4A  
        _NewPop_MAX_CO 5742          _NewPop_MAX_CW 55F4  
            ?a_SetStab 00A6             ?a_ModDkCW2 00A6  
                  l101 42AE                    l110 4310  
                  l102 426A                    l111 42D6  
                  l104 4286                    l113 42F2  
                  l210 4A0C                    l122 437A  
                  l106 429E                    l203 4930  
                  l123 4376                    l115 430A  
                  l220 4A18                    l140 4496  
                  l141 4492                    l109 4344  
                  l310 50AC                    l302 503A  
                  l230 4ABA                    l214 4A06  
                  l150 44E2                    l134 4402  
                  l126 4390                    l311 50B8  
                  l303 503C                    l215 4A00  
                  l143 447A                    l135 440E  
                  l127 4392                    l119 432E  
                  l320 5136                    l312 50C4  
                  l304 5056                    l208 49A0  
                  l136 441A                    l128 43AC  
                  l401 56B4                    l313 51C4  
                  l305 508A                    l209 49A4  
                  l161 457E                    l153 451E  
                  l137 44F2                    l129 43E0  
                  l410 570A                    l330 51B4  
                  l314 50FA                    l234 4B28  
                  l170 463C                    l162 4586  
                  l146 448C                    l138 4450  
                  l403 5680                    l323 5164  
                  l243 4BF6                    l227 4A72  
                  l171 4636                    l155 454A  
                  l412 5718                    l316 5168  
                  l228 4B50                    l156 4546  
                  l148 44A4                    l421 57DC  
                  l405 568E                    l333 51F4  
                  l325 515A                    l317 5112  
                  l253 4C52                    l237 4B64  
                  l229 4AF0                    l181 49A8  
                  l173 464E                    l165 45AC  
                  l149 44DA                    l342 525A  
                  l270 4D38                    l246 4C0E  
                  l182 4836                    l158 453C  
                  l351 52C0                    l335 525E  
                  l271 4D96                    l263 4C96  
                  l247 4C14                    l183 46C8  
                  l167 45F4                    l432 58BC  
                  l360 5368                    l344 5250  
                  l336 5206                    l328 519E  
                  l280 4F46                    l264 4CB6  
                  l184 46D0                    l168 45EE  
                  l417 5802                    l361 536E  
                  l329 51A6                    l281 4F40  
                  l273 4E30                    l185 4744  
                  l177 4666                    l442 59A6  
                  l434 58F2                    l426 5858  
                  l354 5304                    l290 4FD4  
                  l274 4E76                    l178 4696  
                  l419 57CE                    l371 5482  
                  l355 530A                    l347 5292  
                  l339 522E                    l275 4E7C  
                  l267 4CF4                    l452 5AA6  
                  l444 59D2                    l428 5866  
                  l380 5490                    l372 5452  
                  l364 538A                    l348 529A  
                  l284 5094                    l453 5ABA  
                  l437 5936                    l381 549E  
                  l365 539C                    l293 5020  
                  l285 4F6E                    l269 4D2E  
                  l197 4844                    l189 47BC  
                  l462 5B5A                    l454 5AB6  
                  l358 5374                    l294 4FF4  
                  l286 4F7A                    l278 4EA2  
                  l198 484C                    l471 5C16  
                  l463 5B3A                    l447 5A1A  
                  l439 5962                    l375 546A  
                  l287 4F84                    l279 4F0E  
                  l199 48BE                    l480 5CF2  
                  l456 5B78                    l448 5A58  
                  l368 54A6                    l473 5C24  
                  l457 5B1A                    l449 5A50  
                  l385 5566                    l369 543A  
                  l458 5B02                    l394 55BC  
                  l298 5018                    l467 5B68  
                  l387 5532                    l299 500C  
                  l484 5D44                    l468 5B74  
                  l396 55CA                    l469 5C4A  
                  l389 5540                    l478 5CE4  
                  u100 38DC                    u130 38F6  
                  u245 3B1C                    u425 3E14  
                  u605 4086                    u375 3E14  
                  u295 3C10                    u625 40C0  
                  u645 410C                    u485 3F06  
                  u685 41AE                    u695 41E0  
                  _PWM 01D6               _WritePWM CFBE  
           ?a_ModZgCW2 00A6             ?a_New_SMOD 00AB  
                  _kdw 102C             ?a_ModPruCO 00A6  
                  _rgl 01F3                    _kup 102D  
            _StartMCW2 4B76                    _tmr 0EEE  
    __end_of_StartMCW2 4BB0                    wreg 000FE8  
            _StartRTdS C76E             _RestartMod 5E64  
                 F1810 0EC1                   F1820 0EC5  
                 F1821 0EC6                   F1822 0EC7  
                 F1823 0EC8                   F1920 0EE3  
                 F1824 0EC9                   F1921 0EE4  
                 F1825 0ECA                   F1817 0EC2  
                 F1922 0EE5                   F1842 0ECD  
                 F1826 0ECB                   F1818 0EC3  
                 F1827 0ECC                   F1819 0EC4  
                 F1860 0ED3                   F1861 0ED4  
                 F1918 0EE1                   F1790 0EBA  
                 F1919 0EE2                   F1855 0ECE  
                 F1791 0EBB                   F1856 0ECF  
                 F1792 0EBC                   F1857 0ED0  
                 F1793 0EBD                   F1874 0ED5  
                 F1858 0ED1                   F1794 0EBE  
                 F1883 0ED9                   F1875 0ED6  
                 F1859 0ED2                   F1795 0EBF  
   __end_of_RestartMod 5E7A                   F1884 0EDA  
                 F1876 0ED7                   F1796 0EC0  
                 F1893 0EDD                   F1885 0EDB  
                 F1877 0ED8                   F1894 0EDE  
                 F1886 0EDC                   F1895 0EDF  
                 F1896 0EE0  __end_of_NewPop_MAX_CO 5890  
__end_of_NewPop_MAX_CW 5742            ?a_FirstXMOD 00A6  
                 u1000 42CE                   u2015 49F8  
                 u1315 43D8                   u1180 4326  
                 u1515 4576                   u3060 5216  
                 u3125 528A                   u1445 44D2  
                 u4015 5A48                   u1625 462E  
                 u2515 4E6E                   u4070 5AFA  
                 u4231 5BCC                   u4215 5BCA  
                 u3255 5360                   u2640 4FAC  
                 u2545 4F06                   u1825 481A  
                 u1745 472C                   u1585 45E6  
                 u4411 5C9A                   u3195 52FC  
                 u2555 4F38                   u2475 4DE8  
                 u1915 491A                   u1675 468C  
                 u4510 5D60                   u4270 5BF0  
                 u4255 5BEE                   u4191 5BAA  
                 u2495 4E22                   u2680 4FD0  
                 u4185 5BA8                   u1785 47A0  
                 u4610 5E52                   u4530 5D96  
                 u4450 5CBE                   u4435 5CBA  
                 u4371 5C7C                   u3555 5592  
                 u3475 550A                   u1955 498A  
                 u1875 48A8                   u4365 5C7A  
                 u3725 56E0                   u3645 5658  
                 u4550 5DBE                   u4615 5E4C  
                 u4535 5D90                   u3815 57A6  
                 u2785 5082                   u4570 5DF4  
                 u4395 5C98                   u2965 5196  
                 u4590 5E1C                   u4575 5DEE  
                 u3955 58EA                   u3965 592E  
                 u3895 582E                   u3985 599E  
                 _DtCO 007F                   _DtCW 0070  
                 _RTdS C792        __end_of_ClrMod2 4C22  
          ?a_ModPruCW2 00A6                   aldiv D9E8  
                 _tmr2 0EEF                   almul D6D2  
                 fsr0h 000FEA                   indf0 000FEF  
                 fsr0l 000FE9                   fsr1l 000FE1  
                 fsr2l 000FD9                   btemp 0000  
                 awdiv DAB8                   awmul DB6E  
      __end_of_ModDkCO 41F4                   prodh 000FF4  
                 prodl 000FF3             _pwm_center 0EEC  
      __end_of_New_MIN 5900        __end_of_ModZgCO 4124  
             _popMAXCO 0EE6               _popMAXCW 0EE7  
      _CalkVNTtoPopPWM AF52        __end_of_Moduluj 3A10  
      __end_of_SetStab 4B76        __end_of_PropCO2 54AE  
      __end_of_Tmaleje 5D9A        __end_of_PropOPT 4A3A  
     ?_CalkVNTtoPopPWM 00B2        __end_of_Tnizsza 5DC2  
      __end_of_Trosnie 5D64        __end_of_Twyzsza 5DF8  
        __end_of_Tstoi 5DA8            ?a_ProcToMod 00A9  
          _IncConstCO2 4C58            _IncConstCW2 4C3A  
                _DtKNF 01B4    __end_of_IncConstCO2 4C68  
  __end_of_IncConstCW2 4C58             used_btemp0 0001  
           used_btemp1 0001             used_btemp2 0001  
           used_btemp3 0001             used_btemp4 0001  
           used_btemp5 0001             used_btemp6 0001  
           used_btemp7 0001                  _Tstoi 5D9A  
     __end_of_TFmaleje 5E56        ?a_NewPop_MAX_CO 00A6  
      ?a_NewPop_MAX_CW 00A6       __end_of_IncMaxCO 46A0  
     __end_of_TFrosnie 5E20           ?a_NewPop_MIN 00A6  
     __end_of_ModDkCW2 4F4C                _ClrMod2 4BFC  
                status 000FD8       __end_of_ModToCO2 4C3A  
     __end_of_ModToCW2 4C2E       __end_of_ModZgCW2 4E86  
     __end_of_New_SMOD 5A5E       __end_of_ModPruCO 4596  
     __end_of_ModPrzCO 4A1E                _ModDkCO 4124  
              _New_MIN 5890                _ModZgCO 3F3E  
              _PmpToDW BB34                _PmpToUP BAE4  
              _Moduluj 37EE                _SetStab 4A3C  
              __Lparam 00A6                _PropCO2 53AC  
             ?_SetStab 00A6                _Tmaleje 5D64  
              _PropOPT 4A1E                _Vmaleje 97BE  
              _Tnizsza 5DA8                _Trosnie 5D4A  
     __end_of_StartCO2 3AAE                _Vrosnie 9790  
              _Twyzsza 5DC2                __ramtop 1000  
       __end_of_TFstoi 5E64                _popSMAX 0EE9  
              _popSMIN 0EEA                _popSMOD 0EEB  
       __end_of_Trowna 5E06            _ReadDataCO2 4C68  
              _pwm_kwr 0EED            _ReadDataCW2 4C72  
  __end_of_ReadDataCO2 4C72    __end_of_ReadDataCW2 4C84  
               _TFstoi 5E56             _FirstXMOD2 4BB0  
          _NewPop_SMOD 5A5E                 _Trowna 5DF8  
   __end_of_FirstXMOD2 4BFC    __end_of_NewPop_SMOD 5D1C  
               aldiv_f DBEA                 _popMIN 0EE8  
               almul_f DBD6             _New_MAX_CO 5970  
           _New_MAX_CW 5900              _IncMaxCW2 52AA  
    __end_of_IncMaxCW2 531A     __end_of_New_MAX_CO 59E0  
   __end_of_New_MAX_CW 5970          ?a_NewPop_SMOD 00AB  
           _VTmalejacy 9894                 tblptrh 000FF7  
               tblptrl 000FF6             _NewPop_MIN 54AE  
            _FirstXMOD 3AAE      __end_of_FirstXMOD 3F3E  
             _TFmaleje 5E20     __end_of_NewPop_MIN 55F4  
             _IncMaxCO 4596               _TFrosnie 5E06  
            _ModPruCW2 4F4C              _ModPrzCW2 531A  
    __end_of_ModPruCW2 52AA      __end_of_ModPrzCW2 53AC  
             _ModDkCW2 4E86               _ModToCO2 4C2E  
             _ModToCW2 4C22               _ModZgCW2 4C84  
             _New_SMOD 59E0               _ModPruCO 41F4  
             _ModPrzCO 46A0              _VTrosnacy 9868  
