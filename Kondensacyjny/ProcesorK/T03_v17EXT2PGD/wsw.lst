

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Tue Feb 01 09:38:31 2011


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	const,global,class=CODE,delta=1
     5                           	psect	bigdata,global,class=BIGRAM,space=1,delta
      +                          =1
     6                           	psect	ibigdata,global,class=CODE,delta=1
     7                           	psect	rbit,global,bit,common,class=COMRAM,space
      +                          =1,delta=1
     8                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     9                           	psect	bss,global,class=RAM,space=1,delta=1
    10                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     
   101                           
   102                           	psect	text
   103                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   104                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   105                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   106                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   107                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   108                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   109                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   110                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   111                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   112                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   113                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   114                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   115                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   116                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   117                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   118                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   119                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   120                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   121                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   122                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   123                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   124                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   125                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   126                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   127                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   128                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   129                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   130                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   131                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   132                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   133                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   134                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   135                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   136                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   137                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   138                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   139                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   140                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   141                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   142                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   143                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   144                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   145                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   146                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   147                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   148                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   149                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   150                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   151                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   152                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   153                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   154                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   155                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   156                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   157                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   158                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   159                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   160                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   161                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   162                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   163                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   164                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   165                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   166                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   167                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   168                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   169                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   170                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   171                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   172                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   173                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   174                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   175                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   176                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   177                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   178                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   179                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   180                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   181                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   182                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   183                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   184                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   185                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   186                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   187                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   188                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   189                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   190                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   191                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   192                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   193                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   194                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   195                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   196                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   197                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   198                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   199                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   200                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   201                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   202                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   203  006698                     _InitWsw:
   204                           ;       param _nrpoz assigned to ?_ResetPoz+0
   205  000000                     _ResetPoz$nrpoz	set	?_ResetPoz
   206                           ;       param _nrpoz assigned to ?_SetPoz+0
   207  000000                     _SetPoz$nrpoz	set	?_SetPoz
   208                           ;       param _nrpoz assigned to ?_GetPoz+0
   209  000000                     _GetPoz$nrpoz	set	?_GetPoz
   210                           ;       param _mask assigned to ?_SetStatus+4
   211  000000                     _SetStatus$mask	set	?_SetStatus+4
   212                           ;       param _wst assigned to ?_SetStatus+2
   213  000000                     _SetStatus$wst	set	?_SetStatus+2
   214                           ;       param _wData assigned to ?_SetStatus+0
   215  000000                     _SetStatus$wData	set	?_SetStatus
   216                           ;       param _wdt0 assigned to ?_SetData+3
   217  000000                     _SetData$wdt0	set	?_SetData+3
   218                           ;       param _wdt1 assigned to ?_SetData+2
   219  000000                     _SetData$wdt1	set	?_SetData+2
   220                           ;       param _wData assigned to ?_SetData+0
   221  000000                     _SetData$wData	set	?_SetData
   222                           ;       param _bt assigned to ?_SetWbtyBit+1
   223  000000                     _SetWbtyBit$bt	set	?_SetWbtyBit+1
   224                           ;       param _nrbit assigned to ?_SetWbtyBit+0
   225  000000                     _SetWbtyBit$nrbit	set	?_SetWbtyBit
   226                           ;	_i assigned to ?a_KolProc+0
   227  000000                     _KolProc$i	set	?a_KolProc
   228  000000                     
   229                           ;wsw.c: 51: unsigned char i;
   230  006698  9681               	bcf	3969,3,c	;volatile
   231                           ;wsw.c: 55: RB2=0;
   232  00669A  9481               	bcf	3969,2,c	;volatile
   233                           ;wsw.c: 56: RB1=0;
   234  00669C  9281               	bcf	3969,1,c	;volatile
   235                           ;wsw.c: 58: wbty[0]=0xff;
   236  00669E  0EFF               	movlw	255
   237  0066A0  CFE8 FEC8          	movff	wreg,_wbty
   238                           ;wsw.c: 59: wbty[1]=0xff;
   239  0066A4  CFE8 FEC9          	movff	wreg,_wbty+1
   240                           ;wsw.c: 60: wsdid=0x00;
   241  0066A8  010E               	movlb	_wsdid shr (0+8)
   242  0066AA  6BC7               	clrf	_wsdid& (0+255),b
   243                           ;wsw.c: 69: for(i=0;i<10-1;i++) PWD[i].St.focus=
      +                          0;
   244  0066AC  6AD9               	clrf	fsr2l,c
   245  0066AE                     l15:
   246  0066AE  50D9               	movf	fsr2l,w,c
   247  0066B0  0D04               	mullw	4
   248  0066B2  0EC8               	movlw	low _PWD
   249  0066B4  24F3               	addwf	prodl,w,c
   250  0066B6  6EE9               	movwf	fsr0l,c
   251  0066B8  0E00               	movlw	high _PWD
   252  0066BA  20F4               	addwfc	prodh,w,c
   253  0066BC  6EEA               	movwf	fsr0h,c
   254  0066BE  0EFE               	movlw	-2
   255  0066C0  16EF               	andwf	indf0,f,c
   256  0066C2  2AD9               	incf	fsr2l,f,c
   257  0066C4  0E08               	movlw	8
   258  0066C6  64D9               	cpfsgt	fsr2l,c
   259  0066C8  D7F2               	goto	l15
   260                           ;wsw.c: 76: SetStatus(&PWD[3],0b0100000000000000
      +                          ,0b1111111111111111);
   261  0066CA  0100               	movlb	__Lparam shr (0+8)
   262  0066CC  0ED4               	movlw	low (_PWD+12)
   263  0066CE  6FF5               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   264  0066D0  0E00               	movlw	high (_PWD+12)
   265  0066D2  6FF6               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   266  0066D4  6BF7               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   267  0066D6  0E40               	movlw	64
   268  0066D8  6FF8               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   269  0066DA  69F9               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   270  0066DC  69FA               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   271  0066DE  ECF6  F03B         	call	_SetStatus	;wreg free
   272                           ;wsw.c: 77: SetStatus(&PWD[4],0b0100000000000000
      +                          ,0b1111111111111111);
   273  0066E2  0100               	movlb	__Lparam shr (0+8)
   274  0066E4  0ED8               	movlw	low (_PWD+16)
   275  0066E6  6FF5               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   276  0066E8  0E00               	movlw	high (_PWD+16)
   277  0066EA  6FF6               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   278  0066EC  6BF7               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   279  0066EE  0E40               	movlw	64
   280  0066F0  6FF8               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   281  0066F2  69F9               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   282  0066F4  69FA               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   283  0066F6  ECF6  F03B         	call	_SetStatus	;wreg free
   284                           ;wsw.c: 78: SetStatus(&PWD[5],0b0010000000000000
      +                          ,0b1111111111111111);
   285  0066FA  0100               	movlb	__Lparam shr (0+8)
   286  0066FC  0EDC               	movlw	low (_PWD+20)
   287  0066FE  6FF5               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   288  006700  0E00               	movlw	high (_PWD+20)
   289  006702  6FF6               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   290  006704  6BF7               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   291  006706  0E20               	movlw	32
   292  006708  6FF8               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   293  00670A  69F9               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   294  00670C  69FA               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   295  00670E  ECF6  F03B         	call	_SetStatus	;wreg free
   296                           ;wsw.c: 79: SetStatus(&PWD[6],0b0100000000000000
      +                          |0b0000010000000000,0b1111111111111111);
   297  006712  0100               	movlb	__Lparam shr (0+8)
   298  006714  0EE0               	movlw	low (_PWD+24)
   299  006716  6FF5               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   300  006718  0E00               	movlw	high (_PWD+24)
   301  00671A  6FF6               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   302  00671C  6BF7               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   303  00671E  0E44               	movlw	68
   304  006720  6FF8               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   305  006722  69F9               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   306  006724  69FA               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   307  006726  ECF6  F03B         	call	_SetStatus	;wreg free
   308                           ;wsw.c: 80: SetStatus(&PWD[7],0b0100000000000000
      +                          ,0b1111111111111111);
   309  00672A  0100               	movlb	__Lparam shr (0+8)
   310  00672C  0EE4               	movlw	low (_PWD+28)
   311  00672E  6FF5               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   312  006730  0E00               	movlw	high (_PWD+28)
   313  006732  6FF6               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   314  006734  6BF7               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   315  006736  0E40               	movlw	64
   316  006738  6FF8               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   317  00673A  69F9               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   318  00673C  69FA               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   319  00673E  ECF6  F03B         	call	_SetStatus	;wreg free
   320                           ;wsw.c: 81: SetStatus(&PWD[8],0b0100000000000000
      +                          ,0b1111111111111111);
   321  006742  0100               	movlb	__Lparam shr (0+8)
   322  006744  0EE8               	movlw	low (_PWD+32)
   323  006746  6FF5               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   324  006748  0E00               	movlw	high (_PWD+32)
   325  00674A  6FF6               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   326  00674C  6BF7               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   327  00674E  0E40               	movlw	64
   328  006750  6FF8               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   329  006752  69F9               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   330  006754  69FA               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   331  006756  EFF6  F03B         	goto	_SetStatus	;wreg free
   332                           ;wsw.c: 87: }
   333  00675A                     __end_of_InitWsw:
   334                           ;wsw.c: 283: const unsigned char Znak[16]={
   335                           ;wsw.c: 284: 0b01010000,
   336                           ;wsw.c: 285: 0b11111001,
   337                           ;wsw.c: 286: 0b00110010,
   338                           ;wsw.c: 287: 0b00110001,
   339                           ;wsw.c: 288: 0b10011001,
   340                           ;wsw.c: 289: 0b00010101,
   341                           ;wsw.c: 290: 0b00010100,
   342                           ;wsw.c: 291: 0b01111001,
   343                           ;wsw.c: 292: 0b00010000,
   344                           ;wsw.c: 293: 0b00010001,
   345                           ;wsw.c: 294: 0b00011000,
   346                           ;wsw.c: 295: 0b10010100,
   347                           ;wsw.c: 296: 0b01010110,
   348                           ;wsw.c: 297: 0b10110000,
   349                           ;wsw.c: 298: 0b00010110,
   350                           ;wsw.c: 299: 0b00011110,
   351                           ;wsw.c: 300: };
   352                           ;wsw.c: 306: void RefreshWSW(void)
   353                           ;wsw.c: 307: {
   354  00675A                     _RefreshWSW:
   355  000000                     
   356                           ;wsw.c: 309: KolProc();
   357  00675A  D806               	call	_KolProc	;wreg free
   358                           ;wsw.c: 311: SetPrWswData();
   359  00675C  EC50  F03A         	call	_SetPrWswData	;wreg free
   360                           ;wsw.c: 312: FormatWswData();
   361  006760  EC7D  F03A         	call	_FormatWswData	;wreg free
   362                           ;wsw.c: 313: PrintWswData();
   363  006764  EF24  F03B         	goto	_PrintWswData	;wreg free
   364                           ;wsw.c: 314: }
   365  006768                     __end_of_RefreshWSW:
   366                           ;wsw.c: 319: void KolProc(void)
   367                           ;wsw.c: 320: {
   368  006768                     _KolProc:
   369  000000                     
   370                           ;wsw.c: 321: unsigned char i,j,k,l,nC;
   371  006768  6AD9               	clrf	fsr2l,c
   372  00676A                     l20:
   373                           ;wsw.c: 324: {
   374  00676A  50D9               	movf	fsr2l,w,c
   375  00676C  0D03               	mullw	3
   376  00676E  50F3               	movf	prodl,w,c
   377  006770  0F70               	addlw	low _Klj
   378  006772  6EF6               	movwf	tblptrl,c
   379  006774  50F4               	movf	prodh,w,c
   380  006776  6EF7               	movwf	tblptrh,c
   381  006778  0E10               	movlw	high _Klj
   382  00677A  22F7               	addwfc	tblptrh,f,c
   383  00677C  0009               	tblrd		*+
   384  00677E  CFF5 F000          	movff	tablat,btemp
   385  006782  0009               	tblrd		*+
   386  006784  CFF5 F001          	movff	tablat,btemp+1
   387  006788  0E08               	movlw	8
   388  00678A  2600               	addwf	btemp,f,c
   389  00678C  0E00               	movlw	0
   390  00678E  2201               	addwfc	btemp+1,f,c
   391  006790  C000  FFF6         	movff	btemp,tblptrl
   392  006794  C001  FFF7         	movff	btemp+1,tblptrh
   393  006798  0E0F               	movlw	(high __ramtop+-1)
   394  00679A  64F7               	cpfsgt	tblptrh,c
   395  00679C  D007               	bra	u27
   396  00679E  0009               	tblrd		*+
   397  0067A0  CFF5 F000          	movff	tablat,btemp
   398  0067A4  0009               	tblrd		*+
   399  0067A6  CFF5 F001          	movff	tablat,btemp+1
   400  0067AA  D008               	bra	u20
   401  0067AC                     u27:
   402  0067AC  CFF6 FFE9          	movff	tblptrl,fsr0l
   403  0067B0  CFF7 FFEA          	movff	tblptrh,fsr0h
   404  0067B4  CFEE F000          	movff	postinc0,btemp
   405  0067B8  CFEE F001          	movff	postinc0,btemp+1
   406  0067BC                     u20:
   407  0067BC  0E02               	movlw	2
   408  0067BE  2600               	addwf	btemp,f,c
   409  0067C0  0E00               	movlw	0
   410  0067C2  2201               	addwfc	btemp+1,f,c
   411  0067C4  C000  FFF6         	movff	btemp,tblptrl
   412  0067C8  C001  FFF7         	movff	btemp+1,tblptrh
   413  0067CC  0E0F               	movlw	(high __ramtop+-1)
   414  0067CE  64F7               	cpfsgt	tblptrh,c
   415  0067D0  D003               	bra	u37
   416  0067D2  0008               	tblrd		*
   417  0067D4  50F5               	movf	tablat,w,c
   418  0067D6  D005               	bra	u30
   419  0067D8                     u37:
   420  0067D8  CFF6 FFE9          	movff	tblptrl,fsr0l
   421  0067DC  CFF7 FFEA          	movff	tblptrh,fsr0h
   422  0067E0  50EF               	movf	indf0,w,c
   423  0067E2                     u30:
   424  0067E2  6EE1               	movwf	fsr1l,c
   425                           ;wsw.c: 326: if((KInd[j].reset)||(nC&&KTim[j].cy
      +                          kl>=nC))
   426  0067E4  50D9               	movf	fsr2l,w,c
   427  0067E6  EE0E  F0CA         	lfsr	0,_KInd
   428  0067EA  26E9               	addwf	fsr0l,f,c
   429  0067EC  0E00               	movlw	0
   430  0067EE  22EA               	addwfc	fsr0h,f,c
   431  0067F0  50EF               	movf	indf0,w,c
   432  0067F2  6E00               	movwf	btemp,c
   433  0067F4  B200               	btfsc	btemp,1,c
   434  0067F6  D00F               	goto	u80
   435  0067F8  50E1               	movf	fsr1l,w,c
   436  0067FA  E063               	bz	l23
   437  0067FC  50D9               	movf	fsr2l,w,c
   438  0067FE  0D03               	mullw	3
   439  006800  0EA2               	movlw	low (_KTim+2)
   440  006802  24F3               	addwf	prodl,w,c
   441  006804  6EE9               	movwf	fsr0l,c
   442  006806  0E00               	movlw	high (_KTim+2)
   443  006808  20F4               	addwfc	prodh,w,c
   444  00680A  6EEA               	movwf	fsr0h,c
   445  00680C  50EF               	movf	indf0,w,c
   446  00680E  6E00               	movwf	btemp,c
   447  006810  50E1               	movf	fsr1l,w,c
   448  006812  5C00               	subwf	btemp,w,c
   449  006814  E356               	bnc	l23
   450  006816                     u80:
   451                           ;wsw.c: 327: {
   452  006816  50D9               	movf	fsr2l,w,c
   453  006818  0D03               	mullw	3
   454  00681A  0EA2               	movlw	low (_KTim+2)
   455  00681C  24F3               	addwf	prodl,w,c
   456  00681E  6EE9               	movwf	fsr0l,c
   457  006820  0E00               	movlw	high (_KTim+2)
   458  006822  20F4               	addwfc	prodh,w,c
   459  006824  6EEA               	movwf	fsr0h,c
   460  006826  6AEF               	clrf	indf0,c
   461                           ;wsw.c: 329: KInd[j].reset=0;
   462  006828  50D9               	movf	fsr2l,w,c
   463  00682A  EE0E  F0CA         	lfsr	0,_KInd
   464  00682E  26E9               	addwf	fsr0l,f,c
   465  006830  0E00               	movlw	0
   466  006832  22EA               	addwfc	fsr0h,f,c
   467  006834  0EFD               	movlw	-3
   468  006836  16EF               	andwf	indf0,f,c
   469                           ;wsw.c: 330: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j]
      +                          .KL).KFc[i].focus=0;
   470  006838  6A02               	clrf	btemp+2,c
   471  00683A                     l27:
   472  00683A  50D9               	movf	fsr2l,w,c
   473  00683C  0D03               	mullw	3
   474  00683E  50F3               	movf	prodl,w,c
   475  006840  0F70               	addlw	low _Klj
   476  006842  6EF6               	movwf	tblptrl,c
   477  006844  50F4               	movf	prodh,w,c
   478  006846  6EF7               	movwf	tblptrh,c
   479  006848  0E10               	movlw	high _Klj
   480  00684A  22F7               	addwfc	tblptrh,f,c
   481  00684C  0E02               	movlw	2
   482  00684E  26F6               	addwf	tblptrl,f,c
   483  006850  0E00               	movlw	0
   484  006852  22F7               	addwfc	tblptrh,f,c
   485  006854  0008               	tblrd		*
   486  006856  50F5               	movf	tablat,w,c
   487  006858  5C02               	subwf	btemp+2,w,c
   488  00685A  E233               	bc	l23
   489  00685C  50D9               	movf	fsr2l,w,c
   490  00685E  0D03               	mullw	3
   491  006860  50F3               	movf	prodl,w,c
   492  006862  0F70               	addlw	low _Klj
   493  006864  6EF6               	movwf	tblptrl,c
   494  006866  50F4               	movf	prodh,w,c
   495  006868  6EF7               	movwf	tblptrh,c
   496  00686A  0E10               	movlw	high _Klj
   497  00686C  22F7               	addwfc	tblptrh,f,c
   498  00686E  0009               	tblrd		*+
   499  006870  CFF5 F000          	movff	tablat,btemp
   500  006874  0009               	tblrd		*+
   501  006876  CFF5 F001          	movff	tablat,btemp+1
   502  00687A  0E06               	movlw	6
   503  00687C  2600               	addwf	btemp,f,c
   504  00687E  0E00               	movlw	0
   505  006880  2201               	addwfc	btemp+1,f,c
   506  006882  C000  FFF6         	movff	btemp,tblptrl
   507  006886  C001  FFF7         	movff	btemp+1,tblptrh
   508  00688A  0E0F               	movlw	(high __ramtop+-1)
   509  00688C  64F7               	cpfsgt	tblptrh,c
   510  00688E  D007               	bra	u97
   511  006890  0009               	tblrd		*+
   512  006892  CFF5 F000          	movff	tablat,btemp
   513  006896  0009               	tblrd		*+
   514  006898  CFF5 F001          	movff	tablat,btemp+1
   515  00689C  D008               	bra	u90
   516  00689E                     u97:
   517  00689E  CFF6 FFE9          	movff	tblptrl,fsr0l
   518  0068A2  CFF7 FFEA          	movff	tblptrh,fsr0h
   519  0068A6  CFEE F000          	movff	postinc0,btemp
   520  0068AA  CFEE F001          	movff	postinc0,btemp+1
   521  0068AE                     u90:
   522  0068AE  5002               	movf	btemp+2,w,c
   523  0068B0  2400               	addwf	btemp,w,c
   524  0068B2  6EE9               	movwf	fsr0l,c
   525  0068B4  0E00               	movlw	0
   526  0068B6  2001               	addwfc	btemp+1,w,c
   527  0068B8  6EEA               	movwf	fsr0h,c
   528  0068BA  0EFE               	movlw	-2
   529  0068BC  16EF               	andwf	indf0,f,c
   530  0068BE  2A02               	incf	btemp+2,f,c
   531  0068C0  D7BC               	goto	l27
   532  0068C2                     l23:
   533                           ;wsw.c: 331: }
   534  0068C2  50D9               	movf	fsr2l,w,c
   535  0068C4  EE0E  F0CA         	lfsr	0,_KInd
   536  0068C8  26E9               	addwf	fsr0l,f,c
   537  0068CA  0E00               	movlw	0
   538  0068CC  22EA               	addwfc	fsr0h,f,c
   539  0068CE  50EF               	movf	indf0,w,c
   540  0068D0  6E00               	movwf	btemp,c
   541  0068D2  A000               	btfss	btemp,0,c
   542  0068D4  D052               	goto	l28
   543  0068D6  50E1               	movf	fsr1l,w,c
   544  0068D8  E050               	bz	l28
   545                           ;wsw.c: 333: {
   546  0068DA  50D9               	movf	fsr2l,w,c
   547  0068DC  0D03               	mullw	3
   548  0068DE  0EA2               	movlw	low (_KTim+2)
   549  0068E0  24F3               	addwf	prodl,w,c
   550  0068E2  6EE9               	movwf	fsr0l,c
   551  0068E4  0E00               	movlw	high (_KTim+2)
   552  0068E6  20F4               	addwfc	prodh,w,c
   553  0068E8  6EEA               	movwf	fsr0h,c
   554  0068EA  6AEF               	clrf	indf0,c
   555                           ;wsw.c: 335: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j]
      +                          .KL).KFc[i].focus=1;
   556  0068EC  6A02               	clrf	btemp+2,c
   557  0068EE                     l32:
   558  0068EE  50D9               	movf	fsr2l,w,c
   559  0068F0  0D03               	mullw	3
   560  0068F2  50F3               	movf	prodl,w,c
   561  0068F4  0F70               	addlw	low _Klj
   562  0068F6  6EF6               	movwf	tblptrl,c
   563  0068F8  50F4               	movf	prodh,w,c
   564  0068FA  6EF7               	movwf	tblptrh,c
   565  0068FC  0E10               	movlw	high _Klj
   566  0068FE  22F7               	addwfc	tblptrh,f,c
   567  006900  0E02               	movlw	2
   568  006902  26F6               	addwf	tblptrl,f,c
   569  006904  0E00               	movlw	0
   570  006906  22F7               	addwfc	tblptrh,f,c
   571  006908  0008               	tblrd		*
   572  00690A  50F5               	movf	tablat,w,c
   573  00690C  5C02               	subwf	btemp+2,w,c
   574  00690E  E235               	bc	l28
   575  006910  50D9               	movf	fsr2l,w,c
   576  006912  0D03               	mullw	3
   577  006914  50F3               	movf	prodl,w,c
   578  006916  0F70               	addlw	low _Klj
   579  006918  6EF6               	movwf	tblptrl,c
   580  00691A  50F4               	movf	prodh,w,c
   581  00691C  6EF7               	movwf	tblptrh,c
   582  00691E  0E10               	movlw	high _Klj
   583  006920  22F7               	addwfc	tblptrh,f,c
   584  006922  0009               	tblrd		*+
   585  006924  CFF5 F000          	movff	tablat,btemp
   586  006928  0009               	tblrd		*+
   587  00692A  CFF5 F001          	movff	tablat,btemp+1
   588  00692E  0E06               	movlw	6
   589  006930  2600               	addwf	btemp,f,c
   590  006932  0E00               	movlw	0
   591  006934  2201               	addwfc	btemp+1,f,c
   592  006936  C000  FFF6         	movff	btemp,tblptrl
   593  00693A  C001  FFF7         	movff	btemp+1,tblptrh
   594  00693E  0E0F               	movlw	(high __ramtop+-1)
   595  006940  64F7               	cpfsgt	tblptrh,c
   596  006942  D007               	bra	u147
   597  006944  0009               	tblrd		*+
   598  006946  CFF5 F000          	movff	tablat,btemp
   599  00694A  0009               	tblrd		*+
   600  00694C  CFF5 F001          	movff	tablat,btemp+1
   601  006950  D008               	bra	u140
   602  006952                     u147:
   603  006952  CFF6 FFE9          	movff	tblptrl,fsr0l
   604  006956  CFF7 FFEA          	movff	tblptrh,fsr0h
   605  00695A  CFEE F000          	movff	postinc0,btemp
   606  00695E  CFEE F001          	movff	postinc0,btemp+1
   607  006962                     u140:
   608  006962  5002               	movf	btemp+2,w,c
   609  006964  2400               	addwf	btemp,w,c
   610  006966  6EE9               	movwf	fsr0l,c
   611  006968  0E00               	movlw	0
   612  00696A  2001               	addwfc	btemp+1,w,c
   613  00696C  6EEA               	movwf	fsr0h,c
   614  00696E  50EF               	movf	indf0,w,c
   615  006970  0BFE               	andlw	-2
   616  006972  0901               	iorlw	1
   617  006974  6EEF               	movwf	indf0,c
   618  006976  2A02               	incf	btemp+2,f,c
   619  006978  D7BA               	goto	l32
   620  00697A                     l28:
   621                           ;wsw.c: 336: }
   622  00697A  50D9               	movf	fsr2l,w,c
   623  00697C  EE0E  F0CA         	lfsr	0,_KInd
   624  006980  26E9               	addwf	fsr0l,f,c
   625  006982  0E00               	movlw	0
   626  006984  22EA               	addwfc	fsr0h,f,c
   627  006986  50EF               	movf	indf0,w,c
   628  006988  6E00               	movwf	btemp,c
   629  00698A  50D9               	movf	fsr2l,w,c
   630  00698C  B000               	btfsc	btemp,0,c
   631  00698E  D047               	goto	L4
   632  006990  0D03               	mullw	3
   633  006992  50F3               	movf	prodl,w,c
   634  006994  0F70               	addlw	low _Klj
   635  006996  6EF6               	movwf	tblptrl,c
   636  006998  50F4               	movf	prodh,w,c
   637  00699A  6EF7               	movwf	tblptrh,c
   638  00699C  0E10               	movlw	high _Klj
   639  00699E  22F7               	addwfc	tblptrh,f,c
   640  0069A0  0009               	tblrd		*+
   641  0069A2  CFF5 F000          	movff	tablat,btemp
   642  0069A6  0009               	tblrd		*+
   643  0069A8  CFF5 F001          	movff	tablat,btemp+1
   644  0069AC  0E08               	movlw	8
   645  0069AE  2600               	addwf	btemp,f,c
   646  0069B0  0E00               	movlw	0
   647  0069B2  2201               	addwfc	btemp+1,f,c
   648  0069B4  C000  FFF6         	movff	btemp,tblptrl
   649  0069B8  C001  FFF7         	movff	btemp+1,tblptrh
   650  0069BC  0E0F               	movlw	(high __ramtop+-1)
   651  0069BE  64F7               	cpfsgt	tblptrh,c
   652  0069C0  D007               	bra	u177
   653  0069C2  0009               	tblrd		*+
   654  0069C4  CFF5 F000          	movff	tablat,btemp
   655  0069C8  0009               	tblrd		*+
   656  0069CA  CFF5 F001          	movff	tablat,btemp+1
   657  0069CE  D008               	bra	u170
   658  0069D0                     u177:
   659  0069D0  CFF6 FFE9          	movff	tblptrl,fsr0l
   660  0069D4  CFF7 FFEA          	movff	tblptrh,fsr0h
   661  0069D8  CFEE F000          	movff	postinc0,btemp
   662  0069DC  CFEE F001          	movff	postinc0,btemp+1
   663  0069E0                     u170:
   664  0069E0  C000  FFF6         	movff	btemp,tblptrl
   665  0069E4  C001  FFF7         	movff	btemp+1,tblptrh
   666  0069E8  0E0F               	movlw	(high __ramtop+-1)
   667  0069EA  64F7               	cpfsgt	tblptrh,c
   668  0069EC  D007               	bra	u187
   669  0069EE  0009               	tblrd		*+
   670  0069F0  CFF5 F000          	movff	tablat,btemp
   671  0069F4  0009               	tblrd		*+
   672  0069F6  CFF5 F001          	movff	tablat,btemp+1
   673  0069FA  D008               	bra	u180
   674  0069FC                     u187:
   675  0069FC  CFF6 FFE9          	movff	tblptrl,fsr0l
   676  006A00  CFF7 FFEA          	movff	tblptrh,fsr0h
   677  006A04  CFEE F000          	movff	postinc0,btemp
   678  006A08  CFEE F001          	movff	postinc0,btemp+1
   679  006A0C                     u180:
   680  006A0C  C000  FFE9         	movff	btemp,fsr0l
   681  006A10  C001  FFEA         	movff	btemp+1,fsr0h
   682  006A14  50EF               	movf	indf0,w,c
   683  006A16  6E00               	movwf	btemp,c
   684  006A18  B000               	btfsc	btemp,0,c
   685  006A1A  D024               	goto	l33
   686                           ;wsw.c: 338: {
   687  006A1C  50D9               	movf	fsr2l,w,c
   688  006A1E                     L4:
   689  006A1E  EE0E  F0CA         	lfsr	0,_KInd
   690  006A22  26E9               	addwf	fsr0l,f,c
   691  006A24  0E00               	movlw	0
   692  006A26  22EA               	addwfc	fsr0h,f,c
   693  006A28  0EFE               	movlw	-2
   694  006A2A  16EF               	andwf	indf0,f,c
   695                           ;wsw.c: 341: if(!nC)
   696  006A2C  50E1               	movf	fsr1l,w,c
   697  006A2E  E11A               	bnz	l33
   698                           ;wsw.c: 342: {
   699  006A30  50D9               	movf	fsr2l,w,c
   700  006A32  EE0E  F0CA         	lfsr	0,_KInd
   701  006A36  26E9               	addwf	fsr0l,f,c
   702  006A38  0E00               	movlw	0
   703  006A3A  22EA               	addwfc	fsr0h,f,c
   704  006A3C  0E03               	movlw	-253
   705  006A3E  16EF               	andwf	indf0,f,c
   706                           ;wsw.c: 344: KTim[j].ncS=0;
   707  006A40  50D9               	movf	fsr2l,w,c
   708  006A42  0D03               	mullw	3
   709  006A44  0EA0               	movlw	low _KTim
   710  006A46  24F3               	addwf	prodl,w,c
   711  006A48  6EE9               	movwf	fsr0l,c
   712  006A4A  0E00               	movlw	high _KTim
   713  006A4C  20F4               	addwfc	prodh,w,c
   714  006A4E  6EEA               	movwf	fsr0h,c
   715  006A50  6AEF               	clrf	indf0,c
   716                           ;wsw.c: 345: KTim[j].ndS=0;
   717  006A52  50D9               	movf	fsr2l,w,c
   718  006A54  0D03               	mullw	3
   719  006A56  0EA1               	movlw	low (_KTim+1)
   720  006A58  24F3               	addwf	prodl,w,c
   721  006A5A  6EE9               	movwf	fsr0l,c
   722  006A5C  0E00               	movlw	high (_KTim+1)
   723  006A5E  20F4               	addwfc	prodh,w,c
   724  006A60  6EEA               	movwf	fsr0h,c
   725  006A62  6AEF               	clrf	indf0,c
   726  006A64                     l33:
   727                           ;wsw.c: 346: }
   728  006A64  50D9               	movf	fsr2l,w,c
   729  006A66  0D03               	mullw	3
   730  006A68  50F3               	movf	prodl,w,c
   731  006A6A  0F70               	addlw	low _Klj
   732  006A6C  6EF6               	movwf	tblptrl,c
   733  006A6E  50F4               	movf	prodh,w,c
   734  006A70  6EF7               	movwf	tblptrh,c
   735  006A72  0E10               	movlw	high _Klj
   736  006A74  22F7               	addwfc	tblptrh,f,c
   737  006A76  0009               	tblrd		*+
   738  006A78  CFF5 F000          	movff	tablat,btemp
   739  006A7C  0009               	tblrd		*+
   740  006A7E  CFF5 F001          	movff	tablat,btemp+1
   741  006A82  0E08               	movlw	8
   742  006A84  2600               	addwf	btemp,f,c
   743  006A86  0E00               	movlw	0
   744  006A88  2201               	addwfc	btemp+1,f,c
   745  006A8A  C000  FFF6         	movff	btemp,tblptrl
   746  006A8E  C001  FFF7         	movff	btemp+1,tblptrh
   747  006A92  0E0F               	movlw	(high __ramtop+-1)
   748  006A94  64F7               	cpfsgt	tblptrh,c
   749  006A96  D007               	bra	u227
   750  006A98  0009               	tblrd		*+
   751  006A9A  CFF5 F000          	movff	tablat,btemp
   752  006A9E  0009               	tblrd		*+
   753  006AA0  CFF5 F001          	movff	tablat,btemp+1
   754  006AA4  D008               	bra	u220
   755  006AA6                     u227:
   756  006AA6  CFF6 FFE9          	movff	tblptrl,fsr0l
   757  006AAA  CFF7 FFEA          	movff	tblptrh,fsr0h
   758  006AAE  CFEE F000          	movff	postinc0,btemp
   759  006AB2  CFEE F001          	movff	postinc0,btemp+1
   760  006AB6                     u220:
   761  006AB6  C000  FFF6         	movff	btemp,tblptrl
   762  006ABA  C001  FFF7         	movff	btemp+1,tblptrh
   763  006ABE  0E0F               	movlw	(high __ramtop+-1)
   764  006AC0  64F7               	cpfsgt	tblptrh,c
   765  006AC2  D007               	bra	u237
   766  006AC4  0009               	tblrd		*+
   767  006AC6  CFF5 F000          	movff	tablat,btemp
   768  006ACA  0009               	tblrd		*+
   769  006ACC  CFF5 F001          	movff	tablat,btemp+1
   770  006AD0  D008               	bra	u230
   771  006AD2                     u237:
   772  006AD2  CFF6 FFE9          	movff	tblptrl,fsr0l
   773  006AD6  CFF7 FFEA          	movff	tblptrh,fsr0h
   774  006ADA  CFEE F000          	movff	postinc0,btemp
   775  006ADE  CFEE F001          	movff	postinc0,btemp+1
   776  006AE2                     u230:
   777  006AE2  C000  FFE9         	movff	btemp,fsr0l
   778  006AE6  C001  FFEA         	movff	btemp+1,fsr0h
   779  006AEA  0EFE               	movlw	-2
   780  006AEC  16EF               	andwf	indf0,f,c
   781                           ;wsw.c: 354: for(i=KInd[j].indeks;i<Klj[j].nPzc;
      +                          i++)
   782  006AEE  50D9               	movf	fsr2l,w,c
   783  006AF0  EE0E  F0CA         	lfsr	0,_KInd
   784  006AF4  26E9               	addwf	fsr0l,f,c
   785  006AF6  0E00               	movlw	0
   786  006AF8  22EA               	addwfc	fsr0h,f,c
   787  006AFA  30EF               	rrcf	indf0,w,c
   788  006AFC  6E00               	movwf	btemp,c
   789  006AFE  3000               	rrcf	btemp,w,c
   790  006B00  0B3F               	andlw	63
   791  006B02  0100               	movlb	__Lparam shr (0+8)
   792  006B04  6FFC               	movwf	?a_KolProc^(__Lparam& (0+65280)),b
   793  006B06                     l38:
   794  006B06  50D9               	movf	fsr2l,w,c
   795  006B08  0D03               	mullw	3
   796  006B0A  50F3               	movf	prodl,w,c
   797  006B0C  0F70               	addlw	low _Klj
   798  006B0E  6EF6               	movwf	tblptrl,c
   799  006B10  50F4               	movf	prodh,w,c
   800  006B12  6EF7               	movwf	tblptrh,c
   801  006B14  0E10               	movlw	high _Klj
   802  006B16  22F7               	addwfc	tblptrh,f,c
   803  006B18  0E02               	movlw	2
   804  006B1A  26F6               	addwf	tblptrl,f,c
   805  006B1C  0E00               	movlw	0
   806  006B1E  22F7               	addwfc	tblptrh,f,c
   807  006B20  0008               	tblrd		*
   808  006B22  50F5               	movf	tablat,w,c
   809  006B24  0100               	movlb	__Lparam shr (0+8)
   810  006B26  5DFC               	subwf	?a_KolProc^(__Lparam& (0+65280)),w
   811  006B28  E302 EF4A  F03A    	bc	l36
   812                           ;wsw.c: 355: {
   813  006B2E  50D9               	movf	fsr2l,w,c
   814  006B30  0D03               	mullw	3
   815  006B32  50F3               	movf	prodl,w,c
   816  006B34  0F70               	addlw	low _Klj
   817  006B36  6EF6               	movwf	tblptrl,c
   818  006B38  50F4               	movf	prodh,w,c
   819  006B3A  6EF7               	movwf	tblptrh,c
   820  006B3C  0E10               	movlw	high _Klj
   821  006B3E  22F7               	addwfc	tblptrh,f,c
   822  006B40  0009               	tblrd		*+
   823  006B42  CFF5 F000          	movff	tablat,btemp
   824  006B46  0009               	tblrd		*+
   825  006B48  CFF5 F001          	movff	tablat,btemp+1
   826  006B4C  0E06               	movlw	6
   827  006B4E  2600               	addwf	btemp,f,c
   828  006B50  0E00               	movlw	0
   829  006B52  2201               	addwfc	btemp+1,f,c
   830  006B54  C000  FFF6         	movff	btemp,tblptrl
   831  006B58  C001  FFF7         	movff	btemp+1,tblptrh
   832  006B5C  0E0F               	movlw	(high __ramtop+-1)
   833  006B5E  64F7               	cpfsgt	tblptrh,c
   834  006B60  D007               	bra	u247
   835  006B62  0009               	tblrd		*+
   836  006B64  CFF5 F000          	movff	tablat,btemp
   837  006B68  0009               	tblrd		*+
   838  006B6A  CFF5 F001          	movff	tablat,btemp+1
   839  006B6E  D008               	bra	u240
   840  006B70                     u247:
   841  006B70  CFF6 FFE9          	movff	tblptrl,fsr0l
   842  006B74  CFF7 FFEA          	movff	tblptrh,fsr0h
   843  006B78  CFEE F000          	movff	postinc0,btemp
   844  006B7C  CFEE F001          	movff	postinc0,btemp+1
   845  006B80                     u240:
   846  006B80  0100               	movlb	__Lparam shr (0+8)
   847  006B82  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
   848  006B84  2400               	addwf	btemp,w,c
   849  006B86  6EE9               	movwf	fsr0l,c
   850  006B88  0E00               	movlw	0
   851  006B8A  2001               	addwfc	btemp+1,w,c
   852  006B8C  6EEA               	movwf	fsr0h,c
   853  006B8E  50EF               	movf	indf0,w,c
   854  006B90  6E00               	movwf	btemp,c
   855  006B92  B000               	btfsc	btemp,0,c
   856  006B94  D023               	goto	l39
   857                           ;wsw.c: 358: {
   858  006B96  50D9               	movf	fsr2l,w,c
   859  006B98  0D03               	mullw	3
   860  006B9A  50F3               	movf	prodl,w,c
   861  006B9C  0F70               	addlw	low _Klj
   862  006B9E  6EF6               	movwf	tblptrl,c
   863  006BA0  50F4               	movf	prodh,w,c
   864  006BA2  6EF7               	movwf	tblptrh,c
   865  006BA4  0E10               	movlw	high _Klj
   866  006BA6  22F7               	addwfc	tblptrh,f,c
   867  006BA8  0E02               	movlw	2
   868  006BAA  26F6               	addwf	tblptrl,f,c
   869  006BAC  0E00               	movlw	0
   870  006BAE  22F7               	addwfc	tblptrh,f,c
   871  006BB0  0008               	tblrd		*
   872  006BB2  50F5               	movf	tablat,w,c
   873  006BB4  6E00               	movwf	btemp,c
   874  006BB6  0FFF               	addlw	255
   875  006BB8  6E02               	movwf	btemp+2,c
   876  006BBA  6A03               	clrf	btemp+3,c
   877  006BBC  0EFF               	movlw	255
   878  006BBE  2203               	addwfc	btemp+3,f,c
   879  006BC0  C0FC  F000         	movff	?a_KolProc,btemp
   880  006BC4  6A01               	clrf	btemp+1,c
   881  006BC6  5001               	movf	btemp+1,w,c
   882  006BC8  0A80               	xorlw	128
   883  006BCA  6E04               	movwf	btemp+4,c
   884  006BCC  5003               	movf	btemp+3,w,c
   885  006BCE  0A80               	xorlw	128
   886  006BD0  5C04               	subwf	btemp+4,w,c
   887  006BD2  E102               	bnz	u265
   888  006BD4  5002               	movf	btemp+2,w,c
   889  006BD6  5C00               	subwf	btemp,w,c
   890  006BD8                     u265:
   891  006BD8  EF32  F03A         	goto	u625
   892                           ;wsw.c: 360: {
   893                           ;wsw.c: 362: if(nC) KTim[j].cykl++;
   894                           ;wsw.c: 363: }
   895  006BDC                     l39:
   896                           ;wsw.c: 365: }
   897  006BDC  C0FC  F000         	movff	?a_KolProc,btemp
   898  006BE0  50D9               	movf	fsr2l,w,c
   899  006BE2  EE0E  F0CA         	lfsr	0,_KInd
   900  006BE6  26E9               	addwf	fsr0l,f,c
   901  006BE8  0E00               	movlw	0
   902  006BEA  22EA               	addwfc	fsr0h,f,c
   903  006BEC  3600               	rlcf	btemp,f,c
   904  006BEE  3600               	rlcf	btemp,f,c
   905  006BF0  50EF               	movf	indf0,w,c
   906  006BF2  1800               	xorwf	btemp,w,c
   907  006BF4  0B03               	andlw	-253
   908  006BF6  1800               	xorwf	btemp,w,c
   909  006BF8  6EEF               	movwf	indf0,c
   910                           ;wsw.c: 370: for(k=j+1;k<4;k++)
   911  006BFA  28D9               	incf	fsr2l,w,c
   912  006BFC  6E02               	movwf	btemp+2,c
   913  006BFE  D08D               	goto	L2
   914  006C00                     l42:
   915                           ;wsw.c: 371: if((*(*Klj[k].KL).KOut).nCykli)
   916  006C00  5002               	movf	btemp+2,w,c
   917  006C02  0D03               	mullw	3
   918  006C04  50F3               	movf	prodl,w,c
   919  006C06  0F70               	addlw	low _Klj
   920  006C08  6EF6               	movwf	tblptrl,c
   921  006C0A  50F4               	movf	prodh,w,c
   922  006C0C  6EF7               	movwf	tblptrh,c
   923  006C0E  0E10               	movlw	high _Klj
   924  006C10  22F7               	addwfc	tblptrh,f,c
   925  006C12  0009               	tblrd		*+
   926  006C14  CFF5 F000          	movff	tablat,btemp
   927  006C18  0009               	tblrd		*+
   928  006C1A  CFF5 F001          	movff	tablat,btemp+1
   929  006C1E  0E08               	movlw	8
   930  006C20  2600               	addwf	btemp,f,c
   931  006C22  0E00               	movlw	0
   932  006C24  2201               	addwfc	btemp+1,f,c
   933  006C26  C000  FFF6         	movff	btemp,tblptrl
   934  006C2A  C001  FFF7         	movff	btemp+1,tblptrh
   935  006C2E  0E0F               	movlw	(high __ramtop+-1)
   936  006C30  64F7               	cpfsgt	tblptrh,c
   937  006C32  D007               	bra	u297
   938  006C34  0009               	tblrd		*+
   939  006C36  CFF5 F000          	movff	tablat,btemp
   940  006C3A  0009               	tblrd		*+
   941  006C3C  CFF5 F001          	movff	tablat,btemp+1
   942  006C40  D008               	bra	u290
   943  006C42                     u297:
   944  006C42  CFF6 FFE9          	movff	tblptrl,fsr0l
   945  006C46  CFF7 FFEA          	movff	tblptrh,fsr0h
   946  006C4A  CFEE F000          	movff	postinc0,btemp
   947  006C4E  CFEE F001          	movff	postinc0,btemp+1
   948  006C52                     u290:
   949  006C52  0E02               	movlw	2
   950  006C54  2600               	addwf	btemp,f,c
   951  006C56  0E00               	movlw	0
   952  006C58  2201               	addwfc	btemp+1,f,c
   953  006C5A  C000  FFF6         	movff	btemp,tblptrl
   954  006C5E  C001  FFF7         	movff	btemp+1,tblptrh
   955  006C62  0E0F               	movlw	(high __ramtop+-1)
   956  006C64  64F7               	cpfsgt	tblptrh,c
   957  006C66  D003               	bra	u307
   958  006C68  0008               	tblrd		*
   959  006C6A  50F5               	movf	tablat,w,c
   960  006C6C  D005               	bra	u300
   961  006C6E                     u307:
   962  006C6E  CFF6 FFE9          	movff	tblptrl,fsr0l
   963  006C72  CFF7 FFEA          	movff	tblptrh,fsr0h
   964  006C76  50EF               	movf	indf0,w,c
   965  006C78                     u300:
   966  006C78  0900               	iorlw	0
   967  006C7A  E04E               	bz	l45
   968                           ;wsw.c: 372: {
   969  006C7C  6A03               	clrf	btemp+3,c
   970  006C7E                     l49:
   971  006C7E  5002               	movf	btemp+2,w,c
   972  006C80  0D03               	mullw	3
   973  006C82  50F3               	movf	prodl,w,c
   974  006C84  0F70               	addlw	low _Klj
   975  006C86  6EF6               	movwf	tblptrl,c
   976  006C88  50F4               	movf	prodh,w,c
   977  006C8A  6EF7               	movwf	tblptrh,c
   978  006C8C  0E10               	movlw	high _Klj
   979  006C8E  22F7               	addwfc	tblptrh,f,c
   980  006C90  0E02               	movlw	2
   981  006C92  26F6               	addwf	tblptrl,f,c
   982  006C94  0E00               	movlw	0
   983  006C96  22F7               	addwfc	tblptrh,f,c
   984  006C98  0008               	tblrd		*
   985  006C9A  50F5               	movf	tablat,w,c
   986  006C9C  5C03               	subwf	btemp+3,w,c
   987  006C9E  E233               	bc	u330
   988  006CA0  5002               	movf	btemp+2,w,c
   989  006CA2  0D03               	mullw	3
   990  006CA4  50F3               	movf	prodl,w,c
   991  006CA6  0F70               	addlw	low _Klj
   992  006CA8  6EF6               	movwf	tblptrl,c
   993  006CAA  50F4               	movf	prodh,w,c
   994  006CAC  6EF7               	movwf	tblptrh,c
   995  006CAE  0E10               	movlw	high _Klj
   996  006CB0  22F7               	addwfc	tblptrh,f,c
   997  006CB2  0009               	tblrd		*+
   998  006CB4  CFF5 F000          	movff	tablat,btemp
   999  006CB8  0009               	tblrd		*+
  1000  006CBA  CFF5 F001          	movff	tablat,btemp+1
  1001  006CBE  0E06               	movlw	6
  1002  006CC0  2600               	addwf	btemp,f,c
  1003  006CC2  0E00               	movlw	0
  1004  006CC4  2201               	addwfc	btemp+1,f,c
  1005  006CC6  C000  FFF6         	movff	btemp,tblptrl
  1006  006CCA  C001  FFF7         	movff	btemp+1,tblptrh
  1007  006CCE  0E0F               	movlw	(high __ramtop+-1)
  1008  006CD0  64F7               	cpfsgt	tblptrh,c
  1009  006CD2  D007               	bra	u327
  1010  006CD4  0009               	tblrd		*+
  1011  006CD6  CFF5 F000          	movff	tablat,btemp
  1012  006CDA  0009               	tblrd		*+
  1013  006CDC  CFF5 F001          	movff	tablat,btemp+1
  1014  006CE0  D008               	bra	u320
  1015  006CE2                     u327:
  1016  006CE2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1017  006CE6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1018  006CEA  CFEE F000          	movff	postinc0,btemp
  1019  006CEE  CFEE F001          	movff	postinc0,btemp+1
  1020  006CF2                     u320:
  1021  006CF2  5003               	movf	btemp+3,w,c
  1022  006CF4  2400               	addwf	btemp,w,c
  1023  006CF6  6EE9               	movwf	fsr0l,c
  1024  006CF8  0E00               	movlw	0
  1025  006CFA  2001               	addwfc	btemp+1,w,c
  1026  006CFC  6EEA               	movwf	fsr0h,c
  1027  006CFE  0EFE               	movlw	-2
  1028  006D00  16EF               	andwf	indf0,f,c
  1029  006D02  2A03               	incf	btemp+3,f,c
  1030  006D04  D7BC               	goto	l49
  1031  006D06                     u330:
  1032                           ;wsw.c: 374: KTim[k].cykl=0;
  1033  006D06  5002               	movf	btemp+2,w,c
  1034  006D08  0D03               	mullw	3
  1035  006D0A  0EA2               	movlw	low (_KTim+2)
  1036  006D0C  24F3               	addwf	prodl,w,c
  1037  006D0E  6EE9               	movwf	fsr0l,c
  1038  006D10  0E00               	movlw	high (_KTim+2)
  1039  006D12  20F4               	addwfc	prodh,w,c
  1040  006D14  6EEA               	movwf	fsr0h,c
  1041  006D16  6AEF               	clrf	indf0,c
  1042  006D18                     l45:
  1043  006D18  2A02               	incf	btemp+2,f,c
  1044  006D1A                     L2:
  1045  006D1A  0E03               	movlw	3
  1046  006D1C  6402               	cpfsgt	btemp+2,c
  1047  006D1E  D770               	goto	l42
  1048                           ;wsw.c: 375: }
  1049  006D20  28D9               	incf	fsr2l,w,c
  1050  006D22  6E02               	movwf	btemp+2,c
  1051  006D24  D01B               	goto	L3
  1052  006D26                     l50:
  1053                           ;wsw.c: 380: {
  1054  006D26  5002               	movf	btemp+2,w,c
  1055  006D28  EE0E  F0CA         	lfsr	0,_KInd
  1056  006D2C  26E9               	addwf	fsr0l,f,c
  1057  006D2E  0E00               	movlw	0
  1058  006D30  22EA               	addwfc	fsr0h,f,c
  1059  006D32  0E03               	movlw	-253
  1060  006D34  16EF               	andwf	indf0,f,c
  1061                           ;wsw.c: 382: KTim[k].ncS=0;
  1062  006D36  5002               	movf	btemp+2,w,c
  1063  006D38  0D03               	mullw	3
  1064  006D3A  0EA0               	movlw	low _KTim
  1065  006D3C  24F3               	addwf	prodl,w,c
  1066  006D3E  6EE9               	movwf	fsr0l,c
  1067  006D40  0E00               	movlw	high _KTim
  1068  006D42  20F4               	addwfc	prodh,w,c
  1069  006D44  6EEA               	movwf	fsr0h,c
  1070  006D46  6AEF               	clrf	indf0,c
  1071                           ;wsw.c: 383: KTim[k].ndS=0;
  1072  006D48  5002               	movf	btemp+2,w,c
  1073  006D4A  0D03               	mullw	3
  1074  006D4C  0EA1               	movlw	low (_KTim+1)
  1075  006D4E  24F3               	addwf	prodl,w,c
  1076  006D50  6EE9               	movwf	fsr0l,c
  1077  006D52  0E00               	movlw	high (_KTim+1)
  1078  006D54  20F4               	addwfc	prodh,w,c
  1079  006D56  6EEA               	movwf	fsr0h,c
  1080  006D58  6AEF               	clrf	indf0,c
  1081  006D5A  2A02               	incf	btemp+2,f,c
  1082  006D5C                     L3:
  1083  006D5C  0E03               	movlw	3
  1084  006D5E  6402               	cpfsgt	btemp+2,c
  1085  006D60  D7E2               	goto	l50
  1086                           ;wsw.c: 384: }
  1087  006D62  50D9               	movf	fsr2l,w,c
  1088  006D64  0D03               	mullw	3
  1089  006D66  50F3               	movf	prodl,w,c
  1090  006D68  0F70               	addlw	low _Klj
  1091  006D6A  6EF6               	movwf	tblptrl,c
  1092  006D6C  50F4               	movf	prodh,w,c
  1093  006D6E  6EF7               	movwf	tblptrh,c
  1094  006D70  0E10               	movlw	high _Klj
  1095  006D72  22F7               	addwfc	tblptrh,f,c
  1096  006D74  0009               	tblrd		*+
  1097  006D76  CFF5 F000          	movff	tablat,btemp
  1098  006D7A  0009               	tblrd		*+
  1099  006D7C  CFF5 F001          	movff	tablat,btemp+1
  1100  006D80  0E08               	movlw	8
  1101  006D82  2600               	addwf	btemp,f,c
  1102  006D84  0E00               	movlw	0
  1103  006D86  2201               	addwfc	btemp+1,f,c
  1104  006D88  C000  FFF6         	movff	btemp,tblptrl
  1105  006D8C  C001  FFF7         	movff	btemp+1,tblptrh
  1106  006D90  0E0F               	movlw	(high __ramtop+-1)
  1107  006D92  64F7               	cpfsgt	tblptrh,c
  1108  006D94  D007               	bra	u377
  1109  006D96  0009               	tblrd		*+
  1110  006D98  CFF5 F000          	movff	tablat,btemp
  1111  006D9C  0009               	tblrd		*+
  1112  006D9E  CFF5 F001          	movff	tablat,btemp+1
  1113  006DA2  D008               	bra	u370
  1114  006DA4                     u377:
  1115  006DA4  CFF6 FFE9          	movff	tblptrl,fsr0l
  1116  006DA8  CFF7 FFEA          	movff	tblptrh,fsr0h
  1117  006DAC  CFEE F000          	movff	postinc0,btemp
  1118  006DB0  CFEE F001          	movff	postinc0,btemp+1
  1119  006DB4                     u370:
  1120  006DB4  C000  FFF6         	movff	btemp,tblptrl
  1121  006DB8  C001  FFF7         	movff	btemp+1,tblptrh
  1122  006DBC  0E0F               	movlw	(high __ramtop+-1)
  1123  006DBE  64F7               	cpfsgt	tblptrh,c
  1124  006DC0  D007               	bra	u387
  1125  006DC2  0009               	tblrd		*+
  1126  006DC4  CFF5 F000          	movff	tablat,btemp
  1127  006DC8  0009               	tblrd		*+
  1128  006DCA  CFF5 F001          	movff	tablat,btemp+1
  1129  006DCE  D008               	bra	u380
  1130  006DD0                     u387:
  1131  006DD0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1132  006DD4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1133  006DD8  CFEE F000          	movff	postinc0,btemp
  1134  006DDC  CFEE F001          	movff	postinc0,btemp+1
  1135  006DE0                     u380:
  1136  006DE0  C000  FFE9         	movff	btemp,fsr0l
  1137  006DE4  C001  FFEA         	movff	btemp+1,fsr0h
  1138  006DE8  50EF               	movf	indf0,w,c
  1139  006DEA  0BFE               	andlw	-2
  1140  006DEC  0901               	iorlw	1
  1141  006DEE  6EEF               	movwf	indf0,c
  1142                           ;wsw.c: 389: Dmask=(*(*Klj[j].KL).KOut).DMask;
  1143  006DF0  50D9               	movf	fsr2l,w,c
  1144  006DF2  0D03               	mullw	3
  1145  006DF4  50F3               	movf	prodl,w,c
  1146  006DF6  0F70               	addlw	low _Klj
  1147  006DF8  6EF6               	movwf	tblptrl,c
  1148  006DFA  50F4               	movf	prodh,w,c
  1149  006DFC  6EF7               	movwf	tblptrh,c
  1150  006DFE  0E10               	movlw	high _Klj
  1151  006E00  22F7               	addwfc	tblptrh,f,c
  1152  006E02  0009               	tblrd		*+
  1153  006E04  CFF5 F000          	movff	tablat,btemp
  1154  006E08  0009               	tblrd		*+
  1155  006E0A  CFF5 F001          	movff	tablat,btemp+1
  1156  006E0E  0E08               	movlw	8
  1157  006E10  2600               	addwf	btemp,f,c
  1158  006E12  0E00               	movlw	0
  1159  006E14  2201               	addwfc	btemp+1,f,c
  1160  006E16  C000  FFF6         	movff	btemp,tblptrl
  1161  006E1A  C001  FFF7         	movff	btemp+1,tblptrh
  1162  006E1E  0E0F               	movlw	(high __ramtop+-1)
  1163  006E20  64F7               	cpfsgt	tblptrh,c
  1164  006E22  D007               	bra	u397
  1165  006E24  0009               	tblrd		*+
  1166  006E26  CFF5 F000          	movff	tablat,btemp
  1167  006E2A  0009               	tblrd		*+
  1168  006E2C  CFF5 F001          	movff	tablat,btemp+1
  1169  006E30  D008               	bra	u390
  1170  006E32                     u397:
  1171  006E32  CFF6 FFE9          	movff	tblptrl,fsr0l
  1172  006E36  CFF7 FFEA          	movff	tblptrh,fsr0h
  1173  006E3A  CFEE F000          	movff	postinc0,btemp
  1174  006E3E  CFEE F001          	movff	postinc0,btemp+1
  1175  006E42                     u390:
  1176  006E42  0E03               	movlw	3
  1177  006E44  2600               	addwf	btemp,f,c
  1178  006E46  0E00               	movlw	0
  1179  006E48  2201               	addwfc	btemp+1,f,c
  1180  006E4A  C000  FFF6         	movff	btemp,tblptrl
  1181  006E4E  C001  FFF7         	movff	btemp+1,tblptrh
  1182  006E52  0E0F               	movlw	(high __ramtop+-1)
  1183  006E54  64F7               	cpfsgt	tblptrh,c
  1184  006E56  D003               	bra	u407
  1185  006E58  0008               	tblrd		*
  1186  006E5A  50F5               	movf	tablat,w,c
  1187  006E5C  D005               	bra	u400
  1188  006E5E                     u407:
  1189  006E5E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1190  006E62  CFF7 FFEA          	movff	tblptrh,fsr0h
  1191  006E66  50EF               	movf	indf0,w,c
  1192  006E68                     u400:
  1193  006E68  CFE8 FEC6          	movff	wreg,_Dmask
  1194                           ;wsw.c: 391: if (KTim[j].ndS<(*Klj[j].KL).KWP[i]
      +                          .delay)
  1195  006E6C  50D9               	movf	fsr2l,w,c
  1196  006E6E  0D03               	mullw	3
  1197  006E70  0EA1               	movlw	low (_KTim+1)
  1198  006E72  24F3               	addwf	prodl,w,c
  1199  006E74  6EE9               	movwf	fsr0l,c
  1200  006E76  0E00               	movlw	high (_KTim+1)
  1201  006E78  20F4               	addwfc	prodh,w,c
  1202  006E7A  6EEA               	movwf	fsr0h,c
  1203  006E7C  50EF               	movf	indf0,w,c
  1204  006E7E  0100               	movlb	__Lparam shr (0+8)
  1205  006E80  6FFD               	movwf	(?a_KolProc+1)^(?a_KolProc& (0+65280)),b
  1206  006E82  50D9               	movf	fsr2l,w,c
  1207  006E84  0D03               	mullw	3
  1208  006E86  50F3               	movf	prodl,w,c
  1209  006E88  0F70               	addlw	low _Klj
  1210  006E8A  6EF6               	movwf	tblptrl,c
  1211  006E8C  50F4               	movf	prodh,w,c
  1212  006E8E  6EF7               	movwf	tblptrh,c
  1213  006E90  0E10               	movlw	high _Klj
  1214  006E92  22F7               	addwfc	tblptrh,f,c
  1215  006E94  0009               	tblrd		*+
  1216  006E96  CFF5 F000          	movff	tablat,btemp
  1217  006E9A  0009               	tblrd		*+
  1218  006E9C  CFF5 F001          	movff	tablat,btemp+1
  1219  006EA0  0E02               	movlw	2
  1220  006EA2  2600               	addwf	btemp,f,c
  1221  006EA4  0E00               	movlw	0
  1222  006EA6  2201               	addwfc	btemp+1,f,c
  1223  006EA8  C000  FFF6         	movff	btemp,tblptrl
  1224  006EAC  C001  FFF7         	movff	btemp+1,tblptrh
  1225  006EB0  0E0F               	movlw	(high __ramtop+-1)
  1226  006EB2  64F7               	cpfsgt	tblptrh,c
  1227  006EB4  D007               	bra	u417
  1228  006EB6  0009               	tblrd		*+
  1229  006EB8  CFF5 F000          	movff	tablat,btemp
  1230  006EBC  0009               	tblrd		*+
  1231  006EBE  CFF5 F001          	movff	tablat,btemp+1
  1232  006EC2  D008               	bra	u410
  1233  006EC4                     u417:
  1234  006EC4  CFF6 FFE9          	movff	tblptrl,fsr0l
  1235  006EC8  CFF7 FFEA          	movff	tblptrh,fsr0h
  1236  006ECC  CFEE F000          	movff	postinc0,btemp
  1237  006ED0  CFEE F001          	movff	postinc0,btemp+1
  1238  006ED4                     u410:
  1239  006ED4  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1240  006ED6  0D03               	mullw	3
  1241  006ED8  5000               	movf	btemp,w,c
  1242  006EDA  24F3               	addwf	prodl,w,c
  1243  006EDC  6E02               	movwf	btemp+2,c
  1244  006EDE  5001               	movf	btemp+1,w,c
  1245  006EE0  20F4               	addwfc	prodh,w,c
  1246  006EE2  6E03               	movwf	btemp+3,c
  1247  006EE4  0E02               	movlw	2
  1248  006EE6  2602               	addwf	btemp+2,f,c
  1249  006EE8  0E00               	movlw	0
  1250  006EEA  2203               	addwfc	btemp+3,f,c
  1251  006EEC  C002  FFF6         	movff	btemp+2,tblptrl
  1252  006EF0  C003  FFF7         	movff	btemp+3,tblptrh
  1253  006EF4  0E0F               	movlw	(high __ramtop+-1)
  1254  006EF6  64F7               	cpfsgt	tblptrh,c
  1255  006EF8  D003               	bra	u427
  1256  006EFA  0008               	tblrd		*
  1257  006EFC  50F5               	movf	tablat,w,c
  1258  006EFE  D005               	bra	u420
  1259  006F00                     u427:
  1260  006F00  CFF6 FFE9          	movff	tblptrl,fsr0l
  1261  006F04  CFF7 FFEA          	movff	tblptrh,fsr0h
  1262  006F08  50EF               	movf	indf0,w,c
  1263  006F0A                     u420:
  1264  006F0A  5DFD               	subwf	(?a_KolProc+1)^(__Lparam& (0+65280)),w
  1265  006F0C  E301 D26C          	bc	l53
  1266                           ;wsw.c: 392: {
  1267  006F10  50D9               	movf	fsr2l,w,c
  1268  006F12  0D03               	mullw	3
  1269  006F14  0EA0               	movlw	low _KTim
  1270  006F16  24F3               	addwf	prodl,w,c
  1271  006F18  6EE9               	movwf	fsr0l,c
  1272  006F1A  0E00               	movlw	high _KTim
  1273  006F1C  20F4               	addwfc	prodh,w,c
  1274  006F1E  6EEA               	movwf	fsr0h,c
  1275  006F20  2AEF               	incf	indf0,f,c
  1276                           ;wsw.c: 394: if (KTim[j].ncS>=10)
  1277  006F22  50D9               	movf	fsr2l,w,c
  1278  006F24  0D03               	mullw	3
  1279  006F26  0EA0               	movlw	low _KTim
  1280  006F28  24F3               	addwf	prodl,w,c
  1281  006F2A  6EE9               	movwf	fsr0l,c
  1282  006F2C  0E00               	movlw	high _KTim
  1283  006F2E  20F4               	addwfc	prodh,w,c
  1284  006F30  6EEA               	movwf	fsr0h,c
  1285  006F32  50EF               	movf	indf0,w,c
  1286  006F34  6E00               	movwf	btemp,c
  1287  006F36  0E0A               	movlw	10
  1288  006F38  5C00               	subwf	btemp,w,c
  1289  006F3A  E312               	bnc	l54
  1290                           ;wsw.c: 395: {
  1291  006F3C  50D9               	movf	fsr2l,w,c
  1292  006F3E  0D03               	mullw	3
  1293  006F40  0EA0               	movlw	low _KTim
  1294  006F42  24F3               	addwf	prodl,w,c
  1295  006F44  6EE9               	movwf	fsr0l,c
  1296  006F46  0E00               	movlw	high _KTim
  1297  006F48  20F4               	addwfc	prodh,w,c
  1298  006F4A  6EEA               	movwf	fsr0h,c
  1299  006F4C  6AEF               	clrf	indf0,c
  1300                           ;wsw.c: 397: KTim[j].ndS++;
  1301  006F4E  50D9               	movf	fsr2l,w,c
  1302  006F50  0D03               	mullw	3
  1303  006F52  0EA1               	movlw	low (_KTim+1)
  1304  006F54  24F3               	addwf	prodl,w,c
  1305  006F56  6EE9               	movwf	fsr0l,c
  1306  006F58  0E00               	movlw	high (_KTim+1)
  1307  006F5A  20F4               	addwfc	prodh,w,c
  1308  006F5C  6EEA               	movwf	fsr0h,c
  1309  006F5E  2AEF               	incf	indf0,f,c
  1310  006F60                     l54:
  1311                           ;wsw.c: 398: }
  1312  006F60  50D9               	movf	fsr2l,w,c
  1313  006F62  0D03               	mullw	3
  1314  006F64  50F3               	movf	prodl,w,c
  1315  006F66  0F70               	addlw	low _Klj
  1316  006F68  6EF6               	movwf	tblptrl,c
  1317  006F6A  50F4               	movf	prodh,w,c
  1318  006F6C  6EF7               	movwf	tblptrh,c
  1319  006F6E  0E10               	movlw	high _Klj
  1320  006F70  22F7               	addwfc	tblptrh,f,c
  1321  006F72  0009               	tblrd		*+
  1322  006F74  CFF5 F000          	movff	tablat,btemp
  1323  006F78  0009               	tblrd		*+
  1324  006F7A  CFF5 F001          	movff	tablat,btemp+1
  1325  006F7E  C000  FFF6         	movff	btemp,tblptrl
  1326  006F82  C001  FFF7         	movff	btemp+1,tblptrh
  1327  006F86  0E0F               	movlw	(high __ramtop+-1)
  1328  006F88  64F7               	cpfsgt	tblptrh,c
  1329  006F8A  D007               	bra	u457
  1330  006F8C  0009               	tblrd		*+
  1331  006F8E  CFF5 F000          	movff	tablat,btemp
  1332  006F92  0009               	tblrd		*+
  1333  006F94  CFF5 F001          	movff	tablat,btemp+1
  1334  006F98  D008               	bra	u450
  1335  006F9A                     u457:
  1336  006F9A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1337  006F9E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1338  006FA2  CFEE F000          	movff	postinc0,btemp
  1339  006FA6  CFEE F001          	movff	postinc0,btemp+1
  1340  006FAA                     u450:
  1341  006FAA  0100               	movlb	__Lparam shr (0+8)
  1342  006FAC  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1343  006FAE  0D02               	mullw	2
  1344  006FB0  5000               	movf	btemp,w,c
  1345  006FB2  24F3               	addwf	prodl,w,c
  1346  006FB4  6E02               	movwf	btemp+2,c
  1347  006FB6  5001               	movf	btemp+1,w,c
  1348  006FB8  20F4               	addwfc	prodh,w,c
  1349  006FBA  6E03               	movwf	btemp+3,c
  1350  006FBC  C002  FFF6         	movff	btemp+2,tblptrl
  1351  006FC0  C003  FFF7         	movff	btemp+3,tblptrh
  1352  006FC4  0E0F               	movlw	(high __ramtop+-1)
  1353  006FC6  64F7               	cpfsgt	tblptrh,c
  1354  006FC8  D007               	bra	u467
  1355  006FCA  0009               	tblrd		*+
  1356  006FCC  CFF5 F000          	movff	tablat,btemp
  1357  006FD0  0009               	tblrd		*+
  1358  006FD2  CFF5 F001          	movff	tablat,btemp+1
  1359  006FD6  D008               	bra	u460
  1360  006FD8                     u467:
  1361  006FD8  CFF6 FFE9          	movff	tblptrl,fsr0l
  1362  006FDC  CFF7 FFEA          	movff	tblptrh,fsr0h
  1363  006FE0  CFEE F000          	movff	postinc0,btemp
  1364  006FE4  CFEE F001          	movff	postinc0,btemp+1
  1365  006FE8                     u460:
  1366  006FE8  5001               	movf	btemp+1,w,c
  1367  006FEA  1000               	iorwf	btemp,w,c
  1368  006FEC  E001 D11F          	bnz	l55
  1369                           ;wsw.c: 400: {
  1370  006FF0  50D9               	movf	fsr2l,w,c
  1371  006FF2  0D03               	mullw	3
  1372  006FF4  50F3               	movf	prodl,w,c
  1373  006FF6  0F70               	addlw	low _Klj
  1374  006FF8  6EF6               	movwf	tblptrl,c
  1375  006FFA  50F4               	movf	prodh,w,c
  1376  006FFC  6EF7               	movwf	tblptrh,c
  1377  006FFE  0E10               	movlw	high _Klj
  1378  007000  22F7               	addwfc	tblptrh,f,c
  1379  007002  0009               	tblrd		*+
  1380  007004  CFF5 F000          	movff	tablat,btemp
  1381  007008  0009               	tblrd		*+
  1382  00700A  CFF5 F001          	movff	tablat,btemp+1
  1383  00700E  0E04               	movlw	4
  1384  007010  2600               	addwf	btemp,f,c
  1385  007012  0E00               	movlw	0
  1386  007014  2201               	addwfc	btemp+1,f,c
  1387  007016  C000  FFF6         	movff	btemp,tblptrl
  1388  00701A  C001  FFF7         	movff	btemp+1,tblptrh
  1389  00701E  0E0F               	movlw	(high __ramtop+-1)
  1390  007020  64F7               	cpfsgt	tblptrh,c
  1391  007022  D007               	bra	u487
  1392  007024  0009               	tblrd		*+
  1393  007026  CFF5 F000          	movff	tablat,btemp
  1394  00702A  0009               	tblrd		*+
  1395  00702C  CFF5 F001          	movff	tablat,btemp+1
  1396  007030  D008               	bra	u480
  1397  007032                     u487:
  1398  007032  CFF6 FFE9          	movff	tblptrl,fsr0l
  1399  007036  CFF7 FFEA          	movff	tblptrh,fsr0h
  1400  00703A  CFEE F000          	movff	postinc0,btemp
  1401  00703E  CFEE F001          	movff	postinc0,btemp+1
  1402  007042                     u480:
  1403  007042  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1404  007044  0D02               	mullw	2
  1405  007046  5000               	movf	btemp,w,c
  1406  007048  24F3               	addwf	prodl,w,c
  1407  00704A  6E02               	movwf	btemp+2,c
  1408  00704C  5001               	movf	btemp+1,w,c
  1409  00704E  20F4               	addwfc	prodh,w,c
  1410  007050  6E03               	movwf	btemp+3,c
  1411  007052  C002  FFF6         	movff	btemp+2,tblptrl
  1412  007056  C003  FFF7         	movff	btemp+3,tblptrh
  1413  00705A  0E0F               	movlw	(high __ramtop+-1)
  1414  00705C  64F7               	cpfsgt	tblptrh,c
  1415  00705E  D007               	bra	u497
  1416  007060  0009               	tblrd		*+
  1417  007062  CFF5 F000          	movff	tablat,btemp
  1418  007066  0009               	tblrd		*+
  1419  007068  CFF5 F001          	movff	tablat,btemp+1
  1420  00706C  D008               	bra	u490
  1421  00706E                     u497:
  1422  00706E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1423  007072  CFF7 FFEA          	movff	tblptrh,fsr0h
  1424  007076  CFEE F000          	movff	postinc0,btemp
  1425  00707A  CFEE F001          	movff	postinc0,btemp+1
  1426  00707E                     u490:
  1427  00707E  50D9               	movf	fsr2l,w,c
  1428  007080  0D03               	mullw	3
  1429  007082  50F3               	movf	prodl,w,c
  1430  007084  0F70               	addlw	low _Klj
  1431  007086  6EF6               	movwf	tblptrl,c
  1432  007088  50F4               	movf	prodh,w,c
  1433  00708A  6EF7               	movwf	tblptrh,c
  1434  00708C  0E10               	movlw	high _Klj
  1435  00708E  22F7               	addwfc	tblptrh,f,c
  1436  007090  0009               	tblrd		*+
  1437  007092  CFF5 F002          	movff	tablat,btemp+2
  1438  007096  0009               	tblrd		*+
  1439  007098  CFF5 F003          	movff	tablat,btemp+3
  1440  00709C  0E08               	movlw	8
  1441  00709E  2602               	addwf	btemp+2,f,c
  1442  0070A0  0E00               	movlw	0
  1443  0070A2  2203               	addwfc	btemp+3,f,c
  1444  0070A4  C002  FFF6         	movff	btemp+2,tblptrl
  1445  0070A8  C003  FFF7         	movff	btemp+3,tblptrh
  1446  0070AC  0E0F               	movlw	(high __ramtop+-1)
  1447  0070AE  64F7               	cpfsgt	tblptrh,c
  1448  0070B0  D007               	bra	u507
  1449  0070B2  0009               	tblrd		*+
  1450  0070B4  CFF5 F002          	movff	tablat,btemp+2
  1451  0070B8  0009               	tblrd		*+
  1452  0070BA  CFF5 F003          	movff	tablat,btemp+3
  1453  0070BE  D008               	bra	u500
  1454  0070C0                     u507:
  1455  0070C0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1456  0070C4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1457  0070C8  CFEE F002          	movff	postinc0,btemp+2
  1458  0070CC  CFEE F003          	movff	postinc0,btemp+3
  1459  0070D0                     u500:
  1460  0070D0  C002  FFF6         	movff	btemp+2,tblptrl
  1461  0070D4  C003  FFF7         	movff	btemp+3,tblptrh
  1462  0070D8  0E0F               	movlw	(high __ramtop+-1)
  1463  0070DA  64F7               	cpfsgt	tblptrh,c
  1464  0070DC  D007               	bra	u517
  1465  0070DE  0009               	tblrd		*+
  1466  0070E0  CFF5 F002          	movff	tablat,btemp+2
  1467  0070E4  0009               	tblrd		*+
  1468  0070E6  CFF5 F003          	movff	tablat,btemp+3
  1469  0070EA  D008               	bra	u510
  1470  0070EC                     u517:
  1471  0070EC  CFF6 FFE9          	movff	tblptrl,fsr0l
  1472  0070F0  CFF7 FFEA          	movff	tblptrh,fsr0h
  1473  0070F4  CFEE F002          	movff	postinc0,btemp+2
  1474  0070F8  CFEE F003          	movff	postinc0,btemp+3
  1475  0070FC                     u510:
  1476  0070FC  C002  FFE9         	movff	btemp+2,fsr0l
  1477  007100  C003  FFEA         	movff	btemp+3,fsr0h
  1478  007104  C000  FFEE         	movff	btemp,postinc0
  1479  007108  C001  FFED         	movff	btemp+1,postdec0
  1480                           ;wsw.c: 402: (*(*(*Klj[j].KL).KOut).CAdr).Dt=(*K
      +                          lj[j].KL).KWP[i].PWrt;
  1481  00710C  50D9               	movf	fsr2l,w,c
  1482  00710E  0D03               	mullw	3
  1483  007110  50F3               	movf	prodl,w,c
  1484  007112  0F70               	addlw	low _Klj
  1485  007114  6EF6               	movwf	tblptrl,c
  1486  007116  50F4               	movf	prodh,w,c
  1487  007118  6EF7               	movwf	tblptrh,c
  1488  00711A  0E10               	movlw	high _Klj
  1489  00711C  22F7               	addwfc	tblptrh,f,c
  1490  00711E  0009               	tblrd		*+
  1491  007120  CFF5 F000          	movff	tablat,btemp
  1492  007124  0009               	tblrd		*+
  1493  007126  CFF5 F001          	movff	tablat,btemp+1
  1494  00712A  0E02               	movlw	2
  1495  00712C  2600               	addwf	btemp,f,c
  1496  00712E  0E00               	movlw	0
  1497  007130  2201               	addwfc	btemp+1,f,c
  1498  007132  C000  FFF6         	movff	btemp,tblptrl
  1499  007136  C001  FFF7         	movff	btemp+1,tblptrh
  1500  00713A  0E0F               	movlw	(high __ramtop+-1)
  1501  00713C  64F7               	cpfsgt	tblptrh,c
  1502  00713E  D007               	bra	u527
  1503  007140  0009               	tblrd		*+
  1504  007142  CFF5 F000          	movff	tablat,btemp
  1505  007146  0009               	tblrd		*+
  1506  007148  CFF5 F001          	movff	tablat,btemp+1
  1507  00714C  D008               	bra	u520
  1508  00714E                     u527:
  1509  00714E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1510  007152  CFF7 FFEA          	movff	tblptrh,fsr0h
  1511  007156  CFEE F000          	movff	postinc0,btemp
  1512  00715A  CFEE F001          	movff	postinc0,btemp+1
  1513  00715E                     u520:
  1514  00715E  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1515  007160  0D03               	mullw	3
  1516  007162  5000               	movf	btemp,w,c
  1517  007164  24F3               	addwf	prodl,w,c
  1518  007166  6E02               	movwf	btemp+2,c
  1519  007168  5001               	movf	btemp+1,w,c
  1520  00716A  20F4               	addwfc	prodh,w,c
  1521  00716C  6E03               	movwf	btemp+3,c
  1522  00716E  C002  FFF6         	movff	btemp+2,tblptrl
  1523  007172  C003  FFF7         	movff	btemp+3,tblptrh
  1524  007176  0E0F               	movlw	(high __ramtop+-1)
  1525  007178  64F7               	cpfsgt	tblptrh,c
  1526  00717A  D007               	bra	u537
  1527  00717C  0009               	tblrd		*+
  1528  00717E  CFF5 F000          	movff	tablat,btemp
  1529  007182  0009               	tblrd		*+
  1530  007184  CFF5 F001          	movff	tablat,btemp+1
  1531  007188  D008               	bra	u530
  1532  00718A                     u537:
  1533  00718A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1534  00718E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1535  007192  CFEE F000          	movff	postinc0,btemp
  1536  007196  CFEE F001          	movff	postinc0,btemp+1
  1537  00719A                     u530:
  1538  00719A  50D9               	movf	fsr2l,w,c
  1539  00719C  0D03               	mullw	3
  1540  00719E  50F3               	movf	prodl,w,c
  1541  0071A0  0F70               	addlw	low _Klj
  1542  0071A2  6EF6               	movwf	tblptrl,c
  1543  0071A4  50F4               	movf	prodh,w,c
  1544  0071A6  6EF7               	movwf	tblptrh,c
  1545  0071A8  0E10               	movlw	high _Klj
  1546  0071AA  22F7               	addwfc	tblptrh,f,c
  1547  0071AC  0009               	tblrd		*+
  1548  0071AE  CFF5 F002          	movff	tablat,btemp+2
  1549  0071B2  0009               	tblrd		*+
  1550  0071B4  CFF5 F003          	movff	tablat,btemp+3
  1551  0071B8  0E08               	movlw	8
  1552  0071BA  2602               	addwf	btemp+2,f,c
  1553  0071BC  0E00               	movlw	0
  1554  0071BE  2203               	addwfc	btemp+3,f,c
  1555  0071C0  C002  FFF6         	movff	btemp+2,tblptrl
  1556  0071C4  C003  FFF7         	movff	btemp+3,tblptrh
  1557  0071C8  0E0F               	movlw	(high __ramtop+-1)
  1558  0071CA  64F7               	cpfsgt	tblptrh,c
  1559  0071CC  D007               	bra	u547
  1560  0071CE  0009               	tblrd		*+
  1561  0071D0  CFF5 F002          	movff	tablat,btemp+2
  1562  0071D4  0009               	tblrd		*+
  1563  0071D6  CFF5 F003          	movff	tablat,btemp+3
  1564  0071DA  D008               	bra	u540
  1565  0071DC                     u547:
  1566  0071DC  CFF6 FFE9          	movff	tblptrl,fsr0l
  1567  0071E0  CFF7 FFEA          	movff	tblptrh,fsr0h
  1568  0071E4  CFEE F002          	movff	postinc0,btemp+2
  1569  0071E8  CFEE F003          	movff	postinc0,btemp+3
  1570  0071EC                     u540:
  1571  0071EC  C002  FFF6         	movff	btemp+2,tblptrl
  1572  0071F0  C003  FFF7         	movff	btemp+3,tblptrh
  1573  0071F4  0E0F               	movlw	(high __ramtop+-1)
  1574  0071F6  64F7               	cpfsgt	tblptrh,c
  1575  0071F8  D007               	bra	u557
  1576  0071FA  0009               	tblrd		*+
  1577  0071FC  CFF5 F002          	movff	tablat,btemp+2
  1578  007200  0009               	tblrd		*+
  1579  007202  CFF5 F003          	movff	tablat,btemp+3
  1580  007206  D008               	bra	u550
  1581  007208                     u557:
  1582  007208  CFF6 FFE9          	movff	tblptrl,fsr0l
  1583  00720C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1584  007210  CFEE F002          	movff	postinc0,btemp+2
  1585  007214  CFEE F003          	movff	postinc0,btemp+3
  1586  007218                     u550:
  1587  007218  0E02               	movlw	2
  1588  00721A  2402               	addwf	btemp+2,w,c
  1589  00721C  6EE9               	movwf	fsr0l,c
  1590  00721E  0E00               	movlw	0
  1591  007220  2003               	addwfc	btemp+3,w,c
  1592  007222  6EEA               	movwf	fsr0h,c
  1593  007224  C000  FFEE         	movff	btemp,postinc0
  1594  007228  C001  FFED         	movff	btemp+1,postdec0
  1595                           ;wsw.c: 403: }else (*(*(*Klj[j].KL).KOut).CAdr)=
      +                          *((*Klj[j].KL).KAP[i].PAdr);
  1596  00722C  D095               	goto	l56
  1597  00722E                     l55:
  1598  00722E  50D9               	movf	fsr2l,w,c
  1599  007230  0D03               	mullw	3
  1600  007232  50F3               	movf	prodl,w,c
  1601  007234  0F70               	addlw	low _Klj
  1602  007236  6EF6               	movwf	tblptrl,c
  1603  007238  50F4               	movf	prodh,w,c
  1604  00723A  6EF7               	movwf	tblptrh,c
  1605  00723C  0E10               	movlw	high _Klj
  1606  00723E  22F7               	addwfc	tblptrh,f,c
  1607  007240  0009               	tblrd		*+
  1608  007242  CFF5 F000          	movff	tablat,btemp
  1609  007246  0009               	tblrd		*+
  1610  007248  CFF5 F001          	movff	tablat,btemp+1
  1611  00724C  C000  FFF6         	movff	btemp,tblptrl
  1612  007250  C001  FFF7         	movff	btemp+1,tblptrh
  1613  007254  0E0F               	movlw	(high __ramtop+-1)
  1614  007256  64F7               	cpfsgt	tblptrh,c
  1615  007258  D007               	bra	u567
  1616  00725A  0009               	tblrd		*+
  1617  00725C  CFF5 F000          	movff	tablat,btemp
  1618  007260  0009               	tblrd		*+
  1619  007262  CFF5 F001          	movff	tablat,btemp+1
  1620  007266  D008               	bra	u560
  1621  007268                     u567:
  1622  007268  CFF6 FFE9          	movff	tblptrl,fsr0l
  1623  00726C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1624  007270  CFEE F000          	movff	postinc0,btemp
  1625  007274  CFEE F001          	movff	postinc0,btemp+1
  1626  007278                     u560:
  1627  007278  0100               	movlb	__Lparam shr (0+8)
  1628  00727A  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1629  00727C  0D02               	mullw	2
  1630  00727E  5000               	movf	btemp,w,c
  1631  007280  24F3               	addwf	prodl,w,c
  1632  007282  6E02               	movwf	btemp+2,c
  1633  007284  5001               	movf	btemp+1,w,c
  1634  007286  20F4               	addwfc	prodh,w,c
  1635  007288  6E03               	movwf	btemp+3,c
  1636  00728A  C002  FFF6         	movff	btemp+2,tblptrl
  1637  00728E  C003  FFF7         	movff	btemp+3,tblptrh
  1638  007292  0E0F               	movlw	(high __ramtop+-1)
  1639  007294  64F7               	cpfsgt	tblptrh,c
  1640  007296  D007               	bra	u577
  1641  007298  0009               	tblrd		*+
  1642  00729A  CFF5 F000          	movff	tablat,btemp
  1643  00729E  0009               	tblrd		*+
  1644  0072A0  CFF5 F001          	movff	tablat,btemp+1
  1645  0072A4  D008               	bra	u570
  1646  0072A6                     u577:
  1647  0072A6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1648  0072AA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1649  0072AE  CFEE F000          	movff	postinc0,btemp
  1650  0072B2  CFEE F001          	movff	postinc0,btemp+1
  1651  0072B6                     u570:
  1652  0072B6  C000  FFE1         	movff	btemp,fsr1l
  1653  0072BA  C001  FFE2         	movff	btemp+1,fsr1h
  1654  0072BE  50D9               	movf	fsr2l,w,c
  1655  0072C0  0D03               	mullw	3
  1656  0072C2  50F3               	movf	prodl,w,c
  1657  0072C4  0F70               	addlw	low _Klj
  1658  0072C6  6EF6               	movwf	tblptrl,c
  1659  0072C8  50F4               	movf	prodh,w,c
  1660  0072CA  6EF7               	movwf	tblptrh,c
  1661  0072CC  0E10               	movlw	high _Klj
  1662  0072CE  22F7               	addwfc	tblptrh,f,c
  1663  0072D0  0009               	tblrd		*+
  1664  0072D2  CFF5 F000          	movff	tablat,btemp
  1665  0072D6  0009               	tblrd		*+
  1666  0072D8  CFF5 F001          	movff	tablat,btemp+1
  1667  0072DC  0E08               	movlw	8
  1668  0072DE  2600               	addwf	btemp,f,c
  1669  0072E0  0E00               	movlw	0
  1670  0072E2  2201               	addwfc	btemp+1,f,c
  1671  0072E4  C000  FFF6         	movff	btemp,tblptrl
  1672  0072E8  C001  FFF7         	movff	btemp+1,tblptrh
  1673  0072EC  0E0F               	movlw	(high __ramtop+-1)
  1674  0072EE  64F7               	cpfsgt	tblptrh,c
  1675  0072F0  D007               	bra	u587
  1676  0072F2  0009               	tblrd		*+
  1677  0072F4  CFF5 F000          	movff	tablat,btemp
  1678  0072F8  0009               	tblrd		*+
  1679  0072FA  CFF5 F001          	movff	tablat,btemp+1
  1680  0072FE  D008               	bra	u580
  1681  007300                     u587:
  1682  007300  CFF6 FFE9          	movff	tblptrl,fsr0l
  1683  007304  CFF7 FFEA          	movff	tblptrh,fsr0h
  1684  007308  CFEE F000          	movff	postinc0,btemp
  1685  00730C  CFEE F001          	movff	postinc0,btemp+1
  1686  007310                     u580:
  1687  007310  C000  FFF6         	movff	btemp,tblptrl
  1688  007314  C001  FFF7         	movff	btemp+1,tblptrh
  1689  007318  0E0F               	movlw	(high __ramtop+-1)
  1690  00731A  64F7               	cpfsgt	tblptrh,c
  1691  00731C  D007               	bra	u597
  1692  00731E  0009               	tblrd		*+
  1693  007320  CFF5 F000          	movff	tablat,btemp
  1694  007324  0009               	tblrd		*+
  1695  007326  CFF5 F001          	movff	tablat,btemp+1
  1696  00732A  D008               	bra	u590
  1697  00732C                     u597:
  1698  00732C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1699  007330  CFF7 FFEA          	movff	tblptrh,fsr0h
  1700  007334  CFEE F000          	movff	postinc0,btemp
  1701  007338  CFEE F001          	movff	postinc0,btemp+1
  1702  00733C                     u590:
  1703  00733C  C000  FFE9         	movff	btemp,fsr0l
  1704  007340  C001  FFEA         	movff	btemp+1,fsr0h
  1705  007344  CFE6 FFEE          	movff	postinc1,postinc0
  1706  007348  CFE6 FFEE          	movff	postinc1,postinc0
  1707  00734C  CFE6 FFEE          	movff	postinc1,postinc0
  1708  007350  CFE5 FFED          	movff	postdec1,postdec0
  1709  007354  52ED               	movf	postdec0,f,c
  1710  007356  52ED               	movf	postdec0,f,c
  1711  007358                     l56:
  1712                           ;wsw.c: 404: (*(*(*Klj[j].KL).KOut).CAdr).St.foc
      +                          us=1;
  1713  007358  50D9               	movf	fsr2l,w,c
  1714  00735A  0D03               	mullw	3
  1715  00735C  50F3               	movf	prodl,w,c
  1716  00735E  0F70               	addlw	low _Klj
  1717  007360  6EF6               	movwf	tblptrl,c
  1718  007362  50F4               	movf	prodh,w,c
  1719  007364  6EF7               	movwf	tblptrh,c
  1720  007366  0E10               	movlw	high _Klj
  1721  007368  22F7               	addwfc	tblptrh,f,c
  1722  00736A  0009               	tblrd		*+
  1723  00736C  CFF5 F000          	movff	tablat,btemp
  1724  007370  0009               	tblrd		*+
  1725  007372  CFF5 F001          	movff	tablat,btemp+1
  1726  007376  0E08               	movlw	8
  1727  007378  2600               	addwf	btemp,f,c
  1728  00737A  0E00               	movlw	0
  1729  00737C  2201               	addwfc	btemp+1,f,c
  1730  00737E  C000  FFF6         	movff	btemp,tblptrl
  1731  007382  C001  FFF7         	movff	btemp+1,tblptrh
  1732  007386  0E0F               	movlw	(high __ramtop+-1)
  1733  007388  64F7               	cpfsgt	tblptrh,c
  1734  00738A  D007               	bra	u607
  1735  00738C  0009               	tblrd		*+
  1736  00738E  CFF5 F000          	movff	tablat,btemp
  1737  007392  0009               	tblrd		*+
  1738  007394  CFF5 F001          	movff	tablat,btemp+1
  1739  007398  D008               	bra	u600
  1740  00739A                     u607:
  1741  00739A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1742  00739E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1743  0073A2  CFEE F000          	movff	postinc0,btemp
  1744  0073A6  CFEE F001          	movff	postinc0,btemp+1
  1745  0073AA                     u600:
  1746  0073AA  C000  FFF6         	movff	btemp,tblptrl
  1747  0073AE  C001  FFF7         	movff	btemp+1,tblptrh
  1748  0073B2  0E0F               	movlw	(high __ramtop+-1)
  1749  0073B4  64F7               	cpfsgt	tblptrh,c
  1750  0073B6  D007               	bra	u617
  1751  0073B8  0009               	tblrd		*+
  1752  0073BA  CFF5 F000          	movff	tablat,btemp
  1753  0073BE  0009               	tblrd		*+
  1754  0073C0  CFF5 F001          	movff	tablat,btemp+1
  1755  0073C4  D008               	bra	u610
  1756  0073C6                     u617:
  1757  0073C6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1758  0073CA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1759  0073CE  CFEE F000          	movff	postinc0,btemp
  1760  0073D2  CFEE F001          	movff	postinc0,btemp+1
  1761  0073D6                     u610:
  1762  0073D6  C000  FFE9         	movff	btemp,fsr0l
  1763  0073DA  C001  FFEA         	movff	btemp+1,fsr0h
  1764  0073DE  50EF               	movf	indf0,w,c
  1765  0073E0  0BFE               	andlw	-2
  1766  0073E2  0901               	iorlw	1
  1767  0073E4  6EEF               	movwf	indf0,c
  1768                           ;wsw.c: 405: break;
  1769  0073E6  D056               	goto	l36
  1770  0073E8                     l53:
  1771                           ;wsw.c: 407: {
  1772  0073E8  50D9               	movf	fsr2l,w,c
  1773  0073EA  0D03               	mullw	3
  1774  0073EC  0EA0               	movlw	low _KTim
  1775  0073EE  24F3               	addwf	prodl,w,c
  1776  0073F0  6EE9               	movwf	fsr0l,c
  1777  0073F2  0E00               	movlw	high _KTim
  1778  0073F4  20F4               	addwfc	prodh,w,c
  1779  0073F6  6EEA               	movwf	fsr0h,c
  1780  0073F8  6AEF               	clrf	indf0,c
  1781                           ;wsw.c: 409: KTim[j].ndS=0;
  1782  0073FA  50D9               	movf	fsr2l,w,c
  1783  0073FC  0D03               	mullw	3
  1784  0073FE  0EA1               	movlw	low (_KTim+1)
  1785  007400  24F3               	addwf	prodl,w,c
  1786  007402  6EE9               	movwf	fsr0l,c
  1787  007404  0E00               	movlw	high (_KTim+1)
  1788  007406  20F4               	addwfc	prodh,w,c
  1789  007408  6EEA               	movwf	fsr0h,c
  1790  00740A  6AEF               	clrf	indf0,c
  1791                           ;wsw.c: 410: if (KInd[j].indeks>=Klj[j].nPzc-1)
  1792  00740C  50D9               	movf	fsr2l,w,c
  1793  00740E  0D03               	mullw	3
  1794  007410  50F3               	movf	prodl,w,c
  1795  007412  0F70               	addlw	low _Klj
  1796  007414  6EF6               	movwf	tblptrl,c
  1797  007416  50F4               	movf	prodh,w,c
  1798  007418  6EF7               	movwf	tblptrh,c
  1799  00741A  0E10               	movlw	high _Klj
  1800  00741C  22F7               	addwfc	tblptrh,f,c
  1801  00741E  0E02               	movlw	2
  1802  007420  26F6               	addwf	tblptrl,f,c
  1803  007422  0E00               	movlw	0
  1804  007424  22F7               	addwfc	tblptrh,f,c
  1805  007426  0008               	tblrd		*
  1806  007428  50F5               	movf	tablat,w,c
  1807  00742A  6E00               	movwf	btemp,c
  1808  00742C  0FFF               	addlw	255
  1809  00742E  6EF6               	movwf	tblptrl,c
  1810  007430  6AF7               	clrf	tblptrh,c
  1811  007432  0EFF               	movlw	255
  1812  007434  22F7               	addwfc	tblptrh,f,c
  1813  007436  50D9               	movf	fsr2l,w,c
  1814  007438  EE0E  F0CA         	lfsr	0,_KInd
  1815  00743C  26E9               	addwf	fsr0l,f,c
  1816  00743E  0E00               	movlw	0
  1817  007440  22EA               	addwfc	fsr0h,f,c
  1818  007442  30EF               	rrcf	indf0,w,c
  1819  007444  6E00               	movwf	btemp,c
  1820  007446  3000               	rrcf	btemp,w,c
  1821  007448  0B3F               	andlw	63
  1822  00744A  6E00               	movwf	btemp,c
  1823  00744C  C000  F002         	movff	btemp,btemp+2
  1824  007450  6A03               	clrf	btemp+3,c
  1825  007452  5003               	movf	btemp+3,w,c
  1826  007454  0A80               	xorlw	128
  1827  007456  6E00               	movwf	btemp,c
  1828  007458  50F7               	movf	tblptrh,w,c
  1829  00745A  0A80               	xorlw	128
  1830  00745C  5C00               	subwf	btemp,w,c
  1831  00745E  E102               	bnz	u625
  1832  007460  50F6               	movf	tblptrl,w,c
  1833  007462  5C02               	subwf	btemp+2,w,c
  1834  007464                     u625:
  1835  007464  E313               	bnc	l37
  1836                           ;wsw.c: 411: {
  1837  007466  50D9               	movf	fsr2l,w,c
  1838  007468  EE0E  F0CA         	lfsr	0,_KInd
  1839  00746C  26E9               	addwf	fsr0l,f,c
  1840  00746E  0E00               	movlw	0
  1841  007470  22EA               	addwfc	fsr0h,f,c
  1842  007472  0E03               	movlw	-253
  1843  007474  16EF               	andwf	indf0,f,c
  1844                           ;wsw.c: 413: if(nC) KTim[j].cykl++;
  1845  007476  50E1               	movf	fsr1l,w,c
  1846  007478  E009               	bz	l37
  1847  00747A  50D9               	movf	fsr2l,w,c
  1848  00747C  0D03               	mullw	3
  1849  00747E  0EA2               	movlw	low (_KTim+2)
  1850  007480  24F3               	addwf	prodl,w,c
  1851  007482  6EE9               	movwf	fsr0l,c
  1852  007484  0E00               	movlw	high (_KTim+2)
  1853  007486  20F4               	addwfc	prodh,w,c
  1854  007488  6EEA               	movwf	fsr0h,c
  1855  00748A  2AEF               	incf	indf0,f,c
  1856  00748C                     l37:
  1857  00748C  0100               	movlb	__Lparam shr (0+8)
  1858  00748E  2BFC               	incf	?a_KolProc^(__Lparam& (0+65280)),f,b
  1859  007490  EF83  F035         	goto	l38
  1860  007494                     l36:
  1861  007494  2AD9               	incf	fsr2l,f,c
  1862  007496  0E03               	movlw	3
  1863  007498  64D9               	cpfsgt	fsr2l,c
  1864  00749A  EFB5  F033         	goto	l20
  1865  00749E  0C03               	retlw	3
  1866                           ;wsw.c: 414: }
  1867  0074A0                     __end_of_KolProc:
  1868                           ;wsw.c: 424: void SetPrWswData(void)
  1869                           ;wsw.c: 425: {
  1870  0074A0                     _SetPrWswData:
  1871  000000                     
  1872                           ;wsw.c: 426: unsigned char i;
  1873  0074A0  6AD9               	clrf	fsr2l,c
  1874  0074A2                     l61:
  1875                           ;wsw.c: 428: {
  1876  0074A2  50D9               	movf	fsr2l,w,c
  1877  0074A4  0D04               	mullw	4
  1878  0074A6  0EC8               	movlw	low _PWD
  1879  0074A8  24F3               	addwf	prodl,w,c
  1880  0074AA  6EE9               	movwf	fsr0l,c
  1881  0074AC  0E00               	movlw	high _PWD
  1882  0074AE  20F4               	addwfc	prodh,w,c
  1883  0074B0  6EEA               	movwf	fsr0h,c
  1884  0074B2  50EF               	movf	indf0,w,c
  1885  0074B4  6E00               	movwf	btemp,c
  1886  0074B6  A000               	btfss	btemp,0,c
  1887  0074B8  D013               	goto	l64
  1888                           ;wsw.c: 430: {
  1889  0074BA  50D9               	movf	fsr2l,w,c
  1890  0074BC  0D04               	mullw	4
  1891  0074BE  0EC8               	movlw	low _PWD
  1892  0074C0  24F3               	addwf	prodl,w,c
  1893  0074C2  6EE9               	movwf	fsr0l,c
  1894  0074C4  0E00               	movlw	high _PWD
  1895  0074C6  20F4               	addwfc	prodh,w,c
  1896  0074C8  6EEA               	movwf	fsr0h,c
  1897  0074CA  CFEE F09C          	movff	postinc0,_WswData
  1898  0074CE  CFEE F09D          	movff	postinc0,_WswData+1
  1899  0074D2  CFEE F09E          	movff	postinc0,_WswData+2
  1900  0074D6  CFED F09F          	movff	postdec0,_WswData+3
  1901  0074DA  52ED               	movf	postdec0,f,c
  1902  0074DC  52ED               	movf	postdec0,f,c
  1903                           ;wsw.c: 432: return;
  1904  0074DE  0012               	return	
  1905  0074E0                     l64:
  1906                           ;wsw.c: 433: };
  1907  0074E0  2AD9               	incf	fsr2l,f,c
  1908  0074E2  0E08               	movlw	8
  1909  0074E4  64D9               	cpfsgt	fsr2l,c
  1910  0074E6  D7DD               	goto	l61
  1911                           ;wsw.c: 434: }
  1912  0074E8  C0EC  F09C         	movff	_PWD+36,_WswData
  1913  0074EC  C0ED  F09D         	movff	_PWD+37,_WswData+1
  1914  0074F0  C0EE  F09E         	movff	_PWD+38,_WswData+2
  1915  0074F4  C0EF  F09F         	movff	_PWD+39,_WswData+3
  1916                           ;wsw.c: 436: }
  1917  0074F8  0C08               	retlw	8
  1918  0074FA                     __end_of_SetPrWswData:
  1919                           ;wsw.c: 438: void Swbty(unsigned char dtd);
  1920                           ;wsw.c: 439: void Rwbty(unsigned char dtd);
  1921                           ;wsw.c: 441: void FormatWswData(void)
  1922                           ;wsw.c: 442: {
  1923  0074FA                     _FormatWswData:
  1924  000000                     
  1925                           ;wsw.c: 443: unsigned char nrbty;
  1926  0074FA  0100               	movlb	_WswData shr (0+8)
  1927  0074FC  A59C               	btfss	_WswData& (0+255),2,b
  1928  0074FE  D019               	goto	l66
  1929                           ;wsw.c: 446: {
  1930  007500  C09F  F000         	movff	_WswData+3,btemp
  1931  007504  0EF0               	movlw	-16
  1932  007506  1600               	andwf	btemp,f,c
  1933  007508  3A00               	swapf	btemp,f,c
  1934  00750A  0E0F               	movlw	15
  1935  00750C  1600               	andwf	btemp,f,c
  1936  00750E  C000  F002         	movff	btemp,btemp+2
  1937  007512  6A03               	clrf	btemp+3,c
  1938  007514  5002               	movf	btemp+2,w,c
  1939  007516  0F7C               	addlw	low _Znak
  1940  007518  6EF6               	movwf	tblptrl,c
  1941  00751A  5003               	movf	btemp+3,w,c
  1942  00751C  6EF7               	movwf	tblptrh,c
  1943  00751E  0E10               	movlw	high _Znak
  1944  007520  22F7               	addwfc	tblptrh,f,c
  1945  007522  0008               	tblrd		*
  1946  007524  CFF5 F09A          	movff	tablat,_LedData+1
  1947                           ;wsw.c: 448: LedData.dLed0=Znak[WswData.Dt.Data0
      +                          &0x0F];
  1948  007528  C09F  F000         	movff	_WswData+3,btemp
  1949  00752C  0E0F               	movlw	15
  1950  00752E  1600               	andwf	btemp,f,c
  1951  007530  D022               	goto	L1
  1952                           ;wsw.c: 449: }else
  1953  007532                     l66:
  1954                           ;wsw.c: 450: if(WswData.St.dec)
  1955  007532  0100               	movlb	_WswData shr (0+8)
  1956  007534  A39C               	btfss	_WswData& (0+255),1,b
  1957  007536  D02D               	goto	l68
  1958                           ;wsw.c: 451: {
  1959  007538  0E63               	movlw	99
  1960  00753A  659F               	cpfsgt	(_WswData+3)& (0+255),b
  1961  00753C  D002               	goto	l69
  1962  00753E  CFE8 F09F          	movff	wreg,_WswData+3
  1963  007542                     l69:
  1964                           ;wsw.c: 453: LedData.dLed1=Znak[WswData.Dt.Data0
      +                          /10];
  1965  007542  0E0A               	movlw	10
  1966  007544  6E01               	movwf	btemp+1,c
  1967  007546  C09F  FFE8         	movff	_WswData+3,wreg
  1968  00754A  ECF0  F060         	call	lbdiv
  1969  00754E  6E00               	movwf	btemp,c
  1970  007550  C000  F002         	movff	btemp,btemp+2
  1971  007554  6A03               	clrf	btemp+3,c
  1972  007556  5002               	movf	btemp+2,w,c
  1973  007558  0F7C               	addlw	low _Znak
  1974  00755A  6EF6               	movwf	tblptrl,c
  1975  00755C  5003               	movf	btemp+3,w,c
  1976  00755E  6EF7               	movwf	tblptrh,c
  1977  007560  0E10               	movlw	high _Znak
  1978  007562  22F7               	addwfc	tblptrh,f,c
  1979  007564  0008               	tblrd		*
  1980  007566  CFF5 F09A          	movff	tablat,_LedData+1
  1981                           ;wsw.c: 454: LedData.dLed0=Znak[WswData.Dt.Data0
      +                          %10];
  1982  00756A  0E0A               	movlw	10
  1983  00756C  6E01               	movwf	btemp+1,c
  1984  00756E  C09F  FFE8         	movff	_WswData+3,wreg
  1985  007572  ECF0  F060         	call	lbmod
  1986  007576                     L1:
  1987  007576  C000  F002         	movff	btemp,btemp+2
  1988  00757A  6A03               	clrf	btemp+3,c
  1989  00757C  5002               	movf	btemp+2,w,c
  1990  00757E  0F7C               	addlw	low _Znak
  1991  007580  6EF6               	movwf	tblptrl,c
  1992  007582  5003               	movf	btemp+3,w,c
  1993  007584  6EF7               	movwf	tblptrh,c
  1994  007586  0E10               	movlw	high _Znak
  1995  007588  22F7               	addwfc	tblptrh,f,c
  1996  00758A  0008               	tblrd		*
  1997  00758C  CFF5 F09B          	movff	tablat,_LedData+2
  1998                           ;wsw.c: 455: }else
  1999  007590  D004               	goto	l67
  2000  007592                     l68:
  2001                           ;wsw.c: 456: {
  2002  007592  C09E  F09A         	movff	_WswData+2,_LedData+1
  2003                           ;wsw.c: 458: LedData.dLed0=WswData.Dt.Data0;
  2004  007596  C09F  F09B         	movff	_WswData+3,_LedData+2
  2005  00759A                     l67:
  2006                           ;wsw.c: 459: }
  2007  00759A  0100               	movlb	_WswData shr (0+8)
  2008  00759C  A79C               	btfss	_WswData& (0+255),3,b
  2009  00759E  D00B               	goto	l71
  2010  0075A0  0E7C               	movlw	low _Znak
  2011  0075A2  6EF6               	movwf	tblptrl,c
  2012  0075A4  0E10               	movlw	high _Znak
  2013  0075A6  6EF7               	movwf	tblptrh,c
  2014  0075A8  0008               	tblrd		*
  2015  0075AA  50F5               	movf	tablat,w,c
  2016  0075AC  639A               	cpfseq	(_LedData+1)& (0+255),b
  2017  0075AE  D003               	goto	l71
  2018                           ;wsw.c: 461: LedData.dLed1=0b11111111;
  2019  0075B0  0EFF               	movlw	255
  2020  0075B2  CFE8 F09A          	movff	wreg,_LedData+1
  2021  0075B6                     l71:
  2022                           ;wsw.c: 462: if (WswData.St.kropka0)
  2023  0075B6  0100               	movlb	_WswData shr (0+8)
  2024  0075B8  A99C               	btfss	_WswData& (0+255),4,b
  2025  0075BA  D005               	goto	l72
  2026                           ;wsw.c: 463: LedData.dLed0=LedData.dLed0&0b11101
      +                          111;
  2027  0075BC  C09B  FFE8         	movff	_LedData+2,wreg
  2028  0075C0  0BEF               	andlw	-17
  2029  0075C2  CFE8 F09B          	movff	wreg,_LedData+2
  2030  0075C6                     l72:
  2031                           ;wsw.c: 464: if (WswData.St.kropka1)
  2032  0075C6  0100               	movlb	_WswData shr (0+8)
  2033  0075C8  AB9C               	btfss	_WswData& (0+255),5,b
  2034  0075CA  D005               	goto	l73
  2035                           ;wsw.c: 465: LedData.dLed1=LedData.dLed1&0b11101
      +                          111;
  2036  0075CC  C09A  FFE8         	movff	_LedData+1,wreg
  2037  0075D0  0BEF               	andlw	-17
  2038  0075D2  CFE8 F09A          	movff	wreg,_LedData+1
  2039  0075D6                     l73:
  2040                           ;wsw.c: 466: if (WswData.St.wygas0||LedData.setO
      +                          ff)
  2041  0075D6  0100               	movlb	_WswData shr (0+8)
  2042  0075D8  BD9C               	btfsc	_WswData& (0+255),6,b
  2043  0075DA  D002               	goto	u780
  2044  0075DC  A199               	btfss	_LedData& (0+255),0,b
  2045  0075DE  D003               	goto	l74
  2046  0075E0                     u780:
  2047                           ;wsw.c: 467: LedData.dLed0=0b11111111;
  2048  0075E0  0EFF               	movlw	255
  2049  0075E2  CFE8 F09B          	movff	wreg,_LedData+2
  2050  0075E6                     l74:
  2051                           ;wsw.c: 468: if (WswData.St.wygas1||LedData.setO
      +                          ff)
  2052  0075E6  0100               	movlb	_WswData shr (0+8)
  2053  0075E8  BF9C               	btfsc	_WswData& (0+255),7,b
  2054  0075EA  D002               	goto	u810
  2055  0075EC  A199               	btfss	_LedData& (0+255),0,b
  2056  0075EE  D003               	goto	l75
  2057  0075F0                     u810:
  2058                           ;wsw.c: 469: LedData.dLed1=0b11111111;
  2059  0075F0  0EFF               	movlw	255
  2060  0075F2  CFE8 F09A          	movff	wreg,_LedData+1
  2061  0075F6                     l75:
  2062                           ;wsw.c: 471: if (LedData.setOff)
  2063  0075F6  0100               	movlb	_LedData shr (0+8)
  2064  0075F8  A199               	btfss	_LedData& (0+255),0,b
  2065  0075FA  D004               	goto	l76
  2066                           ;wsw.c: 472: {
  2067  0075FC  010E               	movlb	(_wbty+1) shr (0+8)
  2068  0075FE  0E0F               	movlw	15
  2069  007600  13C9               	iorwf	(_wbty+1)& (0+255),f,b
  2070                           ;wsw.c: 480: }
  2071  007602  0C0F               	retlw	15
  2072  007604                     l76:
  2073                           ;wsw.c: 481: else
  2074  007604  EE00  F09D         	lfsr	0,_WswData+1
  2075  007608  38EF               	swapf	indf0,w,c
  2076  00760A  0B0F               	andlw	15
  2077  00760C  E015               	bz	l78
  2078  00760E  0100               	movlb	(_WswData+1) shr (0+8)
  2079  007610  B59D               	btfsc	(_WswData+1)& (0+255),2,b
  2080  007612  D002               	goto	u870
  2081  007614  A79D               	btfss	(_WswData+1)& (0+255),3,b
  2082  007616  D010               	goto	l78
  2083  007618                     u870:
  2084                           ;wsw.c: 483: {
  2085  007618  0100               	movlb	(_WswData+1) shr (0+8)
  2086  00761A  A59D               	btfss	(_WswData+1)& (0+255),2,b
  2087  00761C  D005               	goto	l79
  2088  00761E  EE00  F09D         	lfsr	0,_WswData+1
  2089  007622  38EF               	swapf	indf0,w,c
  2090  007624  0B0F               	andlw	15
  2091  007626  D08E               	goto	_Swbty
  2092  007628                     l79:
  2093                           ;wsw.c: 487: else
  2094  007628  0100               	movlb	(_WswData+1) shr (0+8)
  2095  00762A  A79D               	btfss	(_WswData+1)& (0+255),3,b
  2096  00762C  0012               	return	
  2097  00762E  EE00  F09D         	lfsr	0,_WswData+1
  2098  007632  38EF               	swapf	indf0,w,c
  2099  007634  0B0F               	andlw	15
  2100  007636  D09A               	goto	_Rwbty
  2101                           ;wsw.c: 489: }
  2102  007638                     l78:
  2103                           ;wsw.c: 490: else
  2104  007638  010E               	movlb	(_wbty+1) shr (0+8)
  2105  00763A  0E0F               	movlw	15
  2106  00763C  13C9               	iorwf	(_wbty+1)& (0+255),f,b
  2107                           ;wsw.c: 496: wbty[1]&=~(wsdid);
  2108  00763E  CEC7  FFE8         	movff	_wsdid,wreg
  2109  007642  0AFF               	xorlw	255
  2110  007644  17C9               	andwf	(_wbty+1)& (0+255),f,b
  2111                           ;wsw.c: 502: }
  2112  007646  0012               	return	
  2113  007648                     __end_of_FormatWswData:
  2114                           ;wsw.c: 508: void PrintWswData(void)
  2115                           ;wsw.c: 509: {
  2116  007648                     _PrintWswData:
  2117  000000                     
  2118                           ;wsw.c: 511: unsigned char i,j,k;
  2119  007648  7054               	btg	_mux/(0+8),_mux& (0+7),c
  2120                           ;wsw.c: 534: if (mux)
  2121  00764A  A054               	btfss	_mux/(0+8),_mux& (0+7),c
  2122  00764C  D003               	goto	l84
  2123                           ;wsw.c: 535: wbty[0]=LedData.dLed0;
  2124  00764E  C09B  FEC8         	movff	_LedData+2,_wbty
  2125  007652  D002               	goto	l85
  2126  007654                     l84:
  2127                           ;wsw.c: 536: else
  2128  007654  C09A  FEC8         	movff	_LedData+1,_wbty
  2129  007658                     l85:
  2130  007658  010E               	movlb	(_wbty+1) shr (0+8)
  2131                           ;wsw.c: 544: if(mux) wbty[2-1]|=(1<<4);
  2132  00765A  A054               	btfss	_mux/(0+8),_mux& (0+7),c
  2133  00765C  D002               	goto	L5
  2134  00765E  89C9               	bsf	(_wbty+1)& (0+255),4,b
  2135  007660  D001               	goto	l87
  2136                           ;wsw.c: 545: else wbty[2-1]&=~(1<<4);
  2137  007662                     L5:
  2138  007662  99C9               	bcf	(_wbty+1)& (0+255),4,b
  2139  007664                     l87:
  2140                           ;wsw.c: 546: for(k=0;k<2;k++)
  2141  007664  6AD9               	clrf	fsr2l,c
  2142  007666                     l88:
  2143                           ;wsw.c: 547: {
  2144  007666  6AE1               	clrf	fsr1l,c
  2145  007668                     l91:
  2146                           ;wsw.c: 549: {
  2147  007668  0E01               	movlw	1
  2148  00766A  6E00               	movwf	btemp,c
  2149  00766C  6A01               	clrf	btemp+1,c
  2150  00766E  50D9               	movf	fsr2l,w,c
  2151  007670  5E00               	subwf	btemp,f,c
  2152  007672  0E00               	movlw	0
  2153  007674  5A01               	subwfb	btemp+1,f,c
  2154  007676  0EC8               	movlw	low _wbty
  2155  007678  2400               	addwf	btemp,w,c
  2156  00767A  6EE9               	movwf	fsr0l,c
  2157  00767C  0E0E               	movlw	high _wbty
  2158  00767E  2001               	addwfc	btemp+1,w,c
  2159  007680  6EEA               	movwf	fsr0h,c
  2160  007682  50EF               	movf	indf0,w,c
  2161  007684  6E01               	movwf	btemp+1,c
  2162  007686  50E1               	movf	fsr1l,w,c
  2163  007688  0807               	sublw	7
  2164  00768A  6E02               	movwf	btemp+2,c
  2165  00768C  0E01               	movlw	1
  2166  00768E  6E00               	movwf	btemp,c
  2167  007690  2A02               	incf	btemp+2,f,c
  2168  007692  D002               	goto	u924
  2169  007694                     u925:
  2170  007694  90D8               	bcf	status,0,c
  2171  007696  3600               	rlcf	btemp,f,c
  2172  007698                     u924:
  2173  007698  2E02               	decfsz	btemp+2,f,c
  2174  00769A  D7FC               	goto	u925
  2175  00769C  5001               	movf	btemp+1,w,c
  2176  00769E  1400               	andwf	btemp,w,c
  2177  0076A0  E002               	bz	u930
  2178  0076A2  8681               	bsf	3969,3,c	;volatile
  2179  0076A4  D001               	goto	u945
  2180  0076A6                     u930:
  2181  0076A6  9681               	bcf	3969,3,c	;volatile
  2182  0076A8                     u945:
  2183                           ;wsw.c: 552: for(i=0;i<10;i++);
  2184                           ; _i allocated to fsr0l
  2185  0076A8  6AE9               	clrf	fsr0l,c
  2186  0076AA                     l94:
  2187  0076AA  2AE9               	incf	fsr0l,f,c
  2188  0076AC  0E09               	movlw	9
  2189  0076AE  64E9               	cpfsgt	fsr0l,c
  2190  0076B0  D7FC               	goto	l94
  2191                           ;wsw.c: 553: RB2=1;
  2192  0076B2  8481               	bsf	3969,2,c	;volatile
  2193                           ;wsw.c: 554: for(i=0;i<10;i++);
  2194  0076B4  6AE9               	clrf	fsr0l,c
  2195  0076B6                     l97:
  2196  0076B6  2AE9               	incf	fsr0l,f,c
  2197  0076B8  0E09               	movlw	9
  2198  0076BA  64E9               	cpfsgt	fsr0l,c
  2199  0076BC  D7FC               	goto	l97
  2200                           ;wsw.c: 555: RB2=0;
  2201  0076BE  9481               	bcf	3969,2,c	;volatile
  2202  0076C0  2AE1               	incf	fsr1l,f,c
  2203  0076C2  0E07               	movlw	7
  2204  0076C4  64E1               	cpfsgt	fsr1l,c
  2205  0076C6  D7D0               	goto	l91
  2206  0076C8  2AD9               	incf	fsr2l,f,c
  2207  0076CA  0E01               	movlw	1
  2208  0076CC  64D9               	cpfsgt	fsr2l,c
  2209  0076CE  D7CB               	goto	l88
  2210                           ;wsw.c: 556: }
  2211                           ; _i allocated to fsr2l
  2212  0076D0  6AD9               	clrf	fsr2l,c
  2213  0076D2                     l100:
  2214  0076D2  2AD9               	incf	fsr2l,f,c
  2215  0076D4  0E09               	movlw	9
  2216  0076D6  64D9               	cpfsgt	fsr2l,c
  2217  0076D8  D7FC               	goto	l100
  2218                           ;wsw.c: 560: RB1=1;
  2219  0076DA  8281               	bsf	3969,1,c	;volatile
  2220                           ;wsw.c: 561: for(i=0;i<10;i++);
  2221  0076DC  6AD9               	clrf	fsr2l,c
  2222  0076DE                     l103:
  2223  0076DE  2AD9               	incf	fsr2l,f,c
  2224  0076E0  0E09               	movlw	9
  2225  0076E2  64D9               	cpfsgt	fsr2l,c
  2226  0076E4  D7FC               	goto	l103
  2227                           ;wsw.c: 562: RB1=0;
  2228  0076E6  9281               	bcf	3969,1,c	;volatile
  2229                           ;wsw.c: 564: }
  2230  0076E8  0C09               	retlw	9
  2231  0076EA                     __end_of_PrintWswData:
  2232                           ;wsw.c: 572: void SetWbtyBit(unsigned char nrbty
      +                          , unsigned char nrbit, const unsigned char bt)
  2233                           ;wsw.c: 573: {
  2234  0076EA  00F0               	dw	?_SetWbtyBit
  2235  0076EC                     _SetWbtyBit:
  2236  000000                     
  2237                           ; _nrbty loaded to fsr2l
  2238  0076EC  6ED9               	movwf	fsr2l,c
  2239                           ;wsw.c: 574: if(nrbty>=2) nrbty=2-1;
  2240  0076EE  0E01               	movlw	1
  2241  0076F0  64D9               	cpfsgt	fsr2l,c
  2242  0076F2  D001               	goto	l107
  2243  0076F4  6ED9               	movwf	fsr2l,c
  2244  0076F6                     l107:
  2245                           ;wsw.c: 575: if(bt) wbty[nrbty]|=1<<nrbit;
  2246  0076F6  0100               	movlb	__Lparam shr (0+8)
  2247  0076F8  51F1               	movf	(?_SetWbtyBit+1)^(__Lparam& (0+65280)),w
  2248  0076FA  C0F0  F001         	movff	?_SetWbtyBit,btemp+1
  2249  0076FE  0E01               	movlw	1
  2250  007700  E010               	bz	L6
  2251  007702  6E00               	movwf	btemp,c
  2252  007704  2A01               	incf	btemp+1,f,c
  2253  007706  D002               	goto	u1034
  2254  007708                     u1035:
  2255  007708  90D8               	bcf	status,0,c
  2256  00770A  3600               	rlcf	btemp,f,c
  2257  00770C                     u1034:
  2258  00770C  2E01               	decfsz	btemp+1,f,c
  2259  00770E  D7FC               	goto	u1035
  2260  007710  50D9               	movf	fsr2l,w,c
  2261  007712  EE0E  F0C8         	lfsr	0,_wbty
  2262  007716  26E9               	addwf	fsr0l,f,c
  2263  007718  0E00               	movlw	0
  2264  00771A  22EA               	addwfc	fsr0h,f,c
  2265  00771C  5000               	movf	btemp,w,c
  2266  00771E  12EF               	iorwf	indf0,f,c
  2267  007720  0012               	return	
  2268                           ;wsw.c: 576: else wbty[nrbty]&=~(1<<nrbit);
  2269  007722                     L6:
  2270  007722  6E00               	movwf	btemp,c
  2271  007724  2A01               	incf	btemp+1,f,c
  2272  007726  D002               	goto	u1044
  2273  007728                     u1045:
  2274  007728  90D8               	bcf	status,0,c
  2275  00772A  3600               	rlcf	btemp,f,c
  2276  00772C                     u1044:
  2277  00772C  2E01               	decfsz	btemp+1,f,c
  2278  00772E  D7FC               	goto	u1045
  2279  007730  1E00               	comf	btemp,f,c
  2280  007732  50D9               	movf	fsr2l,w,c
  2281  007734  EE0E  F0C8         	lfsr	0,_wbty
  2282  007738  26E9               	addwf	fsr0l,f,c
  2283  00773A  0E00               	movlw	0
  2284  00773C  22EA               	addwfc	fsr0h,f,c
  2285  00773E  5000               	movf	btemp,w,c
  2286  007740  16EF               	andwf	indf0,f,c
  2287                           ;wsw.c: 577: }
  2288  007742  0012               	return	
  2289  007744                     __end_of_SetWbtyBit:
  2290                           ;wsw.c: 580: void Swbty(unsigned char dtd)
  2291                           ;wsw.c: 581: {
  2292  007744                     _Swbty:
  2293  000000                     
  2294                           ; _dtd loaded to fsr2l
  2295  007744  6ED9               	movwf	fsr2l,c
  2296                           ;wsw.c: 582: unsigned char mask;
  2297  007746  0E0F               	movlw	15
  2298  007748  16D9               	andwf	fsr2l,f,c
  2299                           ;wsw.c: 584: mask=~(wsdid&dtd);
  2300  00774A  50D9               	movf	fsr2l,w,c
  2301  00774C  010E               	movlb	_wsdid shr (0+8)
  2302  00774E  15C7               	andwf	_wsdid& (0+255),w,b
  2303  007750  0AFF               	xorlw	255
  2304  007752  6EE1               	movwf	fsr1l,c
  2305                           ;wsw.c: 588: wbty[1]|=0x0f;
  2306  007754  010E               	movlb	(_wbty+1) shr (0+8)
  2307  007756  0E0F               	movlw	15
  2308  007758  13C9               	iorwf	(_wbty+1)& (0+255),f,b
  2309                           ;wsw.c: 589: wbty[1]&=~(dtd|(wsdid&mask));
  2310  00775A  50E1               	movf	fsr1l,w,c
  2311  00775C  010E               	movlb	_wsdid shr (0+8)
  2312  00775E  15C7               	andwf	_wsdid& (0+255),w,b
  2313  007760  6E00               	movwf	btemp,c
  2314  007762  10D9               	iorwf	fsr2l,w,c
  2315  007764  0AFF               	xorlw	255
  2316  007766  010E               	movlb	(_wbty+1) shr (0+8)
  2317  007768  17C9               	andwf	(_wbty+1)& (0+255),f,b
  2318                           ;wsw.c: 595: }
  2319  00776A  0012               	return	
  2320  00776C                     __end_of_Swbty:
  2321                           ;wsw.c: 597: void Rwbty(unsigned char dtd)
  2322                           ;wsw.c: 598: {
  2323  00776C                     _Rwbty:
  2324  000000                     
  2325                           ; _dtd loaded to fsr2l
  2326  00776C  6ED9               	movwf	fsr2l,c
  2327                           ;wsw.c: 599: unsigned char mask;
  2328  00776E  0E0F               	movlw	15
  2329  007770  16D9               	andwf	fsr2l,f,c
  2330                           ;wsw.c: 602: mask=~(wsdid&dtd);
  2331  007772  50D9               	movf	fsr2l,w,c
  2332  007774  010E               	movlb	_wsdid shr (0+8)
  2333  007776  15C7               	andwf	_wsdid& (0+255),w,b
  2334  007778  0AFF               	xorlw	255
  2335  00777A  6EE1               	movwf	fsr1l,c
  2336                           ;wsw.c: 605: wbty[1]|=0x0f;
  2337  00777C  010E               	movlb	(_wbty+1) shr (0+8)
  2338  00777E  0E0F               	movlw	15
  2339  007780  13C9               	iorwf	(_wbty+1)& (0+255),f,b
  2340                           ;wsw.c: 606: wbty[1]&=~((~dtd)&(wsdid&mask));
  2341  007782  CEC7  F000         	movff	_wsdid,btemp
  2342  007786  1CD9               	comf	fsr2l,w,c
  2343  007788  6E01               	movwf	btemp+1,c
  2344  00778A  1600               	andwf	btemp,f,c
  2345  00778C  50E1               	movf	fsr1l,w,c
  2346  00778E  1400               	andwf	btemp,w,c
  2347  007790  0AFF               	xorlw	255
  2348  007792  17C9               	andwf	(_wbty+1)& (0+255),f,b
  2349                           ;wsw.c: 612: }
  2350  007794  0012               	return	
  2351  007796                     __end_of_Rwbty:
  2352                           ;wsw.c: 614: void Swsdid(unsigned char dtd)
  2353                           ;wsw.c: 615: {
  2354  007796                     _Swsdid:
  2355  000000                     
  2356                           ; _dtd loaded to fsr2l
  2357  007796  6ED9               	movwf	fsr2l,c
  2358                           ;wsw.c: 616: dtd=dtd&0x0f;
  2359  007798  0E0F               	movlw	15
  2360  00779A  16D9               	andwf	fsr2l,f,c
  2361                           ;wsw.c: 617: wsdid|=dtd;
  2362  00779C  50D9               	movf	fsr2l,w,c
  2363  00779E  010E               	movlb	_wsdid shr (0+8)
  2364  0077A0  13C7               	iorwf	_wsdid& (0+255),f,b
  2365                           ;wsw.c: 618: }
  2366  0077A2  0012               	return	
  2367  0077A4                     __end_of_Swsdid:
  2368                           ;wsw.c: 620: void Rwsdid(unsigned char dtd)
  2369                           ;wsw.c: 621: {
  2370  0077A4                     _Rwsdid:
  2371  000000                     
  2372                           ; _dtd loaded to fsr2l
  2373  0077A4  6ED9               	movwf	fsr2l,c
  2374                           ;wsw.c: 622: dtd=dtd&0x0f;
  2375  0077A6  0E0F               	movlw	15
  2376  0077A8  16D9               	andwf	fsr2l,f,c
  2377                           ;wsw.c: 623: wsdid&=~(dtd);
  2378  0077AA  1CD9               	comf	fsr2l,w,c
  2379  0077AC  010E               	movlb	_wsdid shr (0+8)
  2380  0077AE  17C7               	andwf	_wsdid& (0+255),f,b
  2381                           ;wsw.c: 624: }
  2382  0077B0  0012               	return	
  2383  0077B2                     __end_of_Rwsdid:
  2384                           ;wsw.c: 629: void WswOff(void)
  2385                           ;wsw.c: 630: {
  2386  0077B2                     _WswOff:
  2387  000000                     
  2388                           ;wsw.c: 631: LedData.setOff=1;
  2389  0077B2  0100               	movlb	_LedData shr (0+8)
  2390  0077B4  8199               	bsf	_LedData& (0+255),0,b
  2391                           ;wsw.c: 632: }
  2392  0077B6  0012               	return	
  2393  0077B8                     __end_of_WswOff:
  2394                           ;wsw.c: 634: void WswOn(void)
  2395                           ;wsw.c: 635: {
  2396  0077B8                     _WswOn:
  2397  000000                     
  2398                           ;wsw.c: 636: LedData.setOff=0;
  2399  0077B8  0100               	movlb	_LedData shr (0+8)
  2400  0077BA  9199               	bcf	_LedData& (0+255),0,b
  2401                           ;wsw.c: 637: }
  2402  0077BC  0012               	return	
  2403  0077BE                     __end_of_WswOn:
  2404                           ;wsw.c: 642: void SetData(WPack *wData,const uns
      +                          igned char wdt1,const unsigned char wdt0)
  2405                           ;wsw.c: 643: {
  2406  0077BE  00F6               	dw	?_SetData
  2407  0077C0                     _SetData:
  2408  000000                     
  2409                           ;wsw.c: 644: (*wData).Dt.Data1=wdt1;
  2410                           ; _wData loaded to fsr1
  2411  0077C0  C0F6  FFE1         	movff	?_SetData,fsr1l
  2412  0077C4  C0F7  FFE2         	movff	?_SetData+1,fsr1h
  2413  0077C8  EE00 F002          	lfsr	0,2
  2414  0077CC  50E1               	movf	fsr1l,w,c
  2415  0077CE  26E9               	addwf	fsr0l,f,c
  2416  0077D0  50E2               	movf	fsr1h,w,c
  2417  0077D2  22EA               	addwfc	fsr0h,f,c
  2418  0077D4  C0F8  FFEF         	movff	?_SetData+2,indf0
  2419                           ;wsw.c: 645: (*wData).Dt.Data0=wdt0;
  2420  0077D8  EE00 F003          	lfsr	0,3
  2421  0077DC  50E1               	movf	fsr1l,w,c
  2422  0077DE  26E9               	addwf	fsr0l,f,c
  2423  0077E0  50E2               	movf	fsr1h,w,c
  2424  0077E2  22EA               	addwfc	fsr0h,f,c
  2425  0077E4  C0F9  FFEF         	movff	?_SetData+3,indf0
  2426                           ;wsw.c: 646: }
  2427  0077E8  0012               	return	
  2428  0077EA                     __end_of_SetData:
  2429                           ;wsw.c: 651: void SetStatus(WPack *wData,const u
      +                          nsigned int wst,const unsigned int mask)
  2430                           ;wsw.c: 652: {
  2431  0077EA  00F5               	dw	?_SetStatus
  2432  0077EC                     _SetStatus:
  2433  000000                     
  2434                           ; _wData loaded to fsr1
  2435  0077EC  C0F5  FFE1         	movff	?_SetStatus,fsr1l
  2436  0077F0  C0F6  FFE2         	movff	?_SetStatus+1,fsr1h
  2437                           ;wsw.c: 653: if (mask&0b1000000000000000)(*wData
      +                          ).St.focus=(wst&0b1000000000000000)?1:0;
  2438  0077F4  0100               	movlb	__Lparam shr (0+8)
  2439  0077F6  AFFA               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),7,b
  2440  0077F8  D008               	goto	l118
  2441  0077FA  0E00               	movlw	0
  2442  0077FC  BFF8               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),7,b
  2443  0077FE  0E01               	movlw	1
  2444  007800  6E00               	movwf	btemp,c
  2445  007802  18E7               	xorwf	indf1,w,c
  2446  007804  0BFE               	andlw	-2
  2447  007806  1800               	xorwf	btemp,w,c
  2448  007808  6EE7               	movwf	indf1,c
  2449  00780A                     l118:
  2450                           ;wsw.c: 654: if (mask&0b0100000000000000)(*wData
      +                          ).St.dec=(wst&0b0100000000000000)?1:0;
  2451  00780A  0100               	movlb	__Lparam shr (0+8)
  2452  00780C  ADFA               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),6,b
  2453  00780E  D00A               	goto	l119
  2454  007810  0E00               	movlw	0
  2455  007812  BDF8               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),6,b
  2456  007814  0E01               	movlw	1
  2457  007816  6E00               	movwf	btemp,c
  2458  007818  3600               	rlcf	btemp,f,c
  2459  00781A  50E7               	movf	indf1,w,c
  2460  00781C  1800               	xorwf	btemp,w,c
  2461  00781E  0BFD               	andlw	-3
  2462  007820  1800               	xorwf	btemp,w,c
  2463  007822  6EE7               	movwf	indf1,c
  2464  007824                     l119:
  2465                           ;wsw.c: 655: if (mask&0b0010000000000000)(*wData
      +                          ).St.hex=(wst&0b0010000000000000)?1:0;
  2466  007824  0100               	movlb	__Lparam shr (0+8)
  2467  007826  ABFA               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),5,b
  2468  007828  D00B               	goto	l120
  2469  00782A  0E00               	movlw	0
  2470  00782C  BBF8               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),5,b
  2471  00782E  0E01               	movlw	1
  2472  007830  6E00               	movwf	btemp,c
  2473  007832  3600               	rlcf	btemp,f,c
  2474  007834  3600               	rlcf	btemp,f,c
  2475  007836  50E7               	movf	indf1,w,c
  2476  007838  1800               	xorwf	btemp,w,c
  2477  00783A  0BFB               	andlw	-5
  2478  00783C  1800               	xorwf	btemp,w,c
  2479  00783E  6EE7               	movwf	indf1,c
  2480  007840                     l120:
  2481                           ;wsw.c: 656: if (mask&0b0001000000000000)(*wData
      +                          ).St.autoOFF=(wst&0b0001000000000000)?1:0;
  2482  007840  0100               	movlb	__Lparam shr (0+8)
  2483  007842  A9FA               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),4,b
  2484  007844  D00C               	goto	l121
  2485  007846  0E00               	movlw	0
  2486  007848  B9F8               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),4,b
  2487  00784A  0E01               	movlw	1
  2488  00784C  6E00               	movwf	btemp,c
  2489  00784E  3600               	rlcf	btemp,f,c
  2490  007850  3600               	rlcf	btemp,f,c
  2491  007852  3600               	rlcf	btemp,f,c
  2492  007854  50E7               	movf	indf1,w,c
  2493  007856  1800               	xorwf	btemp,w,c
  2494  007858  0BF7               	andlw	-9
  2495  00785A  1800               	xorwf	btemp,w,c
  2496  00785C  6EE7               	movwf	indf1,c
  2497  00785E                     l121:
  2498                           ;wsw.c: 657: if (mask&0b0000100000000000)(*wData
      +                          ).St.kropka0=(wst&0b0000100000000000)?1:0;
  2499  00785E  0100               	movlb	__Lparam shr (0+8)
  2500  007860  A7FA               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),3,b
  2501  007862  D00A               	goto	l122
  2502  007864  0E00               	movlw	0
  2503  007866  B7F8               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),3,b
  2504  007868  0E01               	movlw	1
  2505  00786A  6E00               	movwf	btemp,c
  2506  00786C  3A00               	swapf	btemp,f,c
  2507  00786E  50E7               	movf	indf1,w,c
  2508  007870  1800               	xorwf	btemp,w,c
  2509  007872  0BEF               	andlw	-17
  2510  007874  1800               	xorwf	btemp,w,c
  2511  007876  6EE7               	movwf	indf1,c
  2512  007878                     l122:
  2513                           ;wsw.c: 658: if (mask&0b0000010000000000)(*wData
      +                          ).St.kropka1=(wst&0b0000010000000000)?1:0;
  2514  007878  0100               	movlb	__Lparam shr (0+8)
  2515  00787A  A5FA               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),2,b
  2516  00787C  D00B               	goto	l123
  2517  00787E  0E00               	movlw	0
  2518  007880  B5F8               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),2,b
  2519  007882  0E01               	movlw	1
  2520  007884  6E00               	movwf	btemp,c
  2521  007886  3A00               	swapf	btemp,f,c
  2522  007888  3600               	rlcf	btemp,f,c
  2523  00788A  50E7               	movf	indf1,w,c
  2524  00788C  1800               	xorwf	btemp,w,c
  2525  00788E  0BDF               	andlw	-33
  2526  007890  1800               	xorwf	btemp,w,c
  2527  007892  6EE7               	movwf	indf1,c
  2528  007894                     l123:
  2529                           ;wsw.c: 659: if (mask&0b0000001000000000)(*wData
      +                          ).St.wygas0=(wst&0b0000001000000000)?1:0;
  2530  007894  0100               	movlb	__Lparam shr (0+8)
  2531  007896  A3FA               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),1,b
  2532  007898  D00C               	goto	l124
  2533  00789A  0E00               	movlw	0
  2534  00789C  B3F8               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),1,b
  2535  00789E  0E01               	movlw	1
  2536  0078A0  6E00               	movwf	btemp,c
  2537  0078A2  3A00               	swapf	btemp,f,c
  2538  0078A4  3600               	rlcf	btemp,f,c
  2539  0078A6  3600               	rlcf	btemp,f,c
  2540  0078A8  50E7               	movf	indf1,w,c
  2541  0078AA  1800               	xorwf	btemp,w,c
  2542  0078AC  0BBF               	andlw	-65
  2543  0078AE  1800               	xorwf	btemp,w,c
  2544  0078B0  6EE7               	movwf	indf1,c
  2545  0078B2                     l124:
  2546                           ;wsw.c: 660: if (mask&0b0000000100000000)(*wData
      +                          ).St.wygas1=(wst&0b0000000100000000)?1:0;
  2547  0078B2  0100               	movlb	__Lparam shr (0+8)
  2548  0078B4  A1FA               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),0,b
  2549  0078B6  D00B               	goto	l125
  2550  0078B8  0E00               	movlw	0
  2551  0078BA  B1F8               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),0,b
  2552  0078BC  0E01               	movlw	1
  2553  0078BE  6E00               	movwf	btemp,c
  2554  0078C0  3200               	rrcf	btemp,f,c
  2555  0078C2  3200               	rrcf	btemp,f,c
  2556  0078C4  50E7               	movf	indf1,w,c
  2557  0078C6  1800               	xorwf	btemp,w,c
  2558  0078C8  0B7F               	andlw	-129
  2559  0078CA  1800               	xorwf	btemp,w,c
  2560  0078CC  6EE7               	movwf	indf1,c
  2561  0078CE                     l125:
  2562                           ;wsw.c: 661: if (mask&0b0000000010000000)(*wData
      +                          ).St.led0=(wst&0b0000000010000000)?1:0;
  2563  0078CE  0100               	movlb	__Lparam shr (0+8)
  2564  0078D0  AFF9               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),7,b
  2565  0078D2  D00F               	goto	l126
  2566  0078D4  0E00               	movlw	0
  2567  0078D6  BFF7               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),7,b
  2568  0078D8  0E01               	movlw	1
  2569  0078DA  6E00               	movwf	btemp,c
  2570  0078DC  EE00 F001          	lfsr	0,1
  2571  0078E0  50E1               	movf	fsr1l,w,c
  2572  0078E2  26E9               	addwf	fsr0l,f,c
  2573  0078E4  50E2               	movf	fsr1h,w,c
  2574  0078E6  22EA               	addwfc	fsr0h,f,c
  2575  0078E8  50EF               	movf	indf0,w,c
  2576  0078EA  1800               	xorwf	btemp,w,c
  2577  0078EC  0BFE               	andlw	-2
  2578  0078EE  1800               	xorwf	btemp,w,c
  2579  0078F0  6EEF               	movwf	indf0,c
  2580  0078F2                     l126:
  2581                           ;wsw.c: 662: if (mask&0b0000000001000000)(*wData
      +                          ).St.led1=(wst&0b0000000001000000)?1:0;
  2582  0078F2  0100               	movlb	__Lparam shr (0+8)
  2583  0078F4  ADF9               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),6,b
  2584  0078F6  D010               	goto	l127
  2585  0078F8  0E00               	movlw	0
  2586  0078FA  BDF7               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),6,b
  2587  0078FC  0E01               	movlw	1
  2588  0078FE  6E00               	movwf	btemp,c
  2589  007900  EE00 F001          	lfsr	0,1
  2590  007904  50E1               	movf	fsr1l,w,c
  2591  007906  26E9               	addwf	fsr0l,f,c
  2592  007908  50E2               	movf	fsr1h,w,c
  2593  00790A  22EA               	addwfc	fsr0h,f,c
  2594  00790C  3600               	rlcf	btemp,f,c
  2595  00790E  50EF               	movf	indf0,w,c
  2596  007910  1800               	xorwf	btemp,w,c
  2597  007912  0BFD               	andlw	-3
  2598  007914  1800               	xorwf	btemp,w,c
  2599  007916  6EEF               	movwf	indf0,c
  2600  007918                     l127:
  2601                           ;wsw.c: 663: if (mask&0b0000000000100000)(*wData
      +                          ).St.sdiode=(wst&0b0000000000100000)?1:0;
  2602  007918  0100               	movlb	__Lparam shr (0+8)
  2603  00791A  ABF9               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),5,b
  2604  00791C  D011               	goto	l128
  2605  00791E  0E00               	movlw	0
  2606  007920  BBF7               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),5,b
  2607  007922  0E01               	movlw	1
  2608  007924  6E00               	movwf	btemp,c
  2609  007926  EE00 F001          	lfsr	0,1
  2610  00792A  50E1               	movf	fsr1l,w,c
  2611  00792C  26E9               	addwf	fsr0l,f,c
  2612  00792E  50E2               	movf	fsr1h,w,c
  2613  007930  22EA               	addwfc	fsr0h,f,c
  2614  007932  3600               	rlcf	btemp,f,c
  2615  007934  3600               	rlcf	btemp,f,c
  2616  007936  50EF               	movf	indf0,w,c
  2617  007938  1800               	xorwf	btemp,w,c
  2618  00793A  0BFB               	andlw	-5
  2619  00793C  1800               	xorwf	btemp,w,c
  2620  00793E  6EEF               	movwf	indf0,c
  2621  007940                     l128:
  2622                           ;wsw.c: 664: if (mask&0b0000000000010000)(*wData
      +                          ).St.rdiode=(wst&0b0000000000010000)?1:0;
  2623  007940  0100               	movlb	__Lparam shr (0+8)
  2624  007942  A9F9               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),4,b
  2625  007944  D012               	goto	l129
  2626  007946  0E00               	movlw	0
  2627  007948  B9F7               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),4,b
  2628  00794A  0E01               	movlw	1
  2629  00794C  6E00               	movwf	btemp,c
  2630  00794E  EE00 F001          	lfsr	0,1
  2631  007952  50E1               	movf	fsr1l,w,c
  2632  007954  26E9               	addwf	fsr0l,f,c
  2633  007956  50E2               	movf	fsr1h,w,c
  2634  007958  22EA               	addwfc	fsr0h,f,c
  2635  00795A  3600               	rlcf	btemp,f,c
  2636  00795C  3600               	rlcf	btemp,f,c
  2637  00795E  3600               	rlcf	btemp,f,c
  2638  007960  50EF               	movf	indf0,w,c
  2639  007962  1800               	xorwf	btemp,w,c
  2640  007964  0BF7               	andlw	-9
  2641  007966  1800               	xorwf	btemp,w,c
  2642  007968  6EEF               	movwf	indf0,c
  2643  00796A                     l129:
  2644                           ;wsw.c: 666: if (mask&0b0000000000001111)
  2645  00796A  0E0F               	movlw	15
  2646  00796C  C0F9  F000         	movff	?_SetStatus+4,btemp
  2647  007970  C0FA  F001         	movff	?_SetStatus+5,btemp+1
  2648  007974  1600               	andwf	btemp,f,c
  2649  007976  6A01               	clrf	btemp+1,c
  2650  007978  5001               	movf	btemp+1,w,c
  2651  00797A  1000               	iorwf	btemp,w,c
  2652  00797C  B4D8               	btfsc	status,2,c
  2653  00797E  0012               	return	
  2654                           ;wsw.c: 667: if(((*wData).St.sdiode||(*wData).St
      +                          .rdiode)&&(wst&0b0000000000001111))
  2655  007980  EE00 F001          	lfsr	0,1
  2656  007984  50E1               	movf	fsr1l,w,c
  2657  007986  26E9               	addwf	fsr0l,f,c
  2658  007988  50E2               	movf	fsr1h,w,c
  2659  00798A  22EA               	addwfc	fsr0h,f,c
  2660  00798C  50EF               	movf	indf0,w,c
  2661  00798E  6E00               	movwf	btemp,c
  2662  007990  B400               	btfsc	btemp,2,c
  2663  007992  D00A               	goto	u1200
  2664  007994  EE00 F001          	lfsr	0,1
  2665  007998  50E1               	movf	fsr1l,w,c
  2666  00799A  26E9               	addwf	fsr0l,f,c
  2667  00799C  50E2               	movf	fsr1h,w,c
  2668  00799E  22EA               	addwfc	fsr0h,f,c
  2669  0079A0  50EF               	movf	indf0,w,c
  2670  0079A2  6E00               	movwf	btemp,c
  2671  0079A4  A600               	btfss	btemp,3,c
  2672  0079A6  0012               	return	
  2673  0079A8                     u1200:
  2674  0079A8  0E0F               	movlw	15
  2675  0079AA  C0F7  F000         	movff	?_SetStatus+2,btemp
  2676  0079AE  C0F8  F001         	movff	?_SetStatus+3,btemp+1
  2677  0079B2  1600               	andwf	btemp,f,c
  2678  0079B4  6A01               	clrf	btemp+1,c
  2679  0079B6  5001               	movf	btemp+1,w,c
  2680  0079B8  1000               	iorwf	btemp,w,c
  2681  0079BA  B4D8               	btfsc	status,2,c
  2682  0079BC  0012               	return	
  2683                           ;wsw.c: 668: {
  2684  0079BE  C0F7  F000         	movff	?_SetStatus+2,btemp
  2685  0079C2  0E0F               	movlw	15
  2686  0079C4  1600               	andwf	btemp,f,c
  2687  0079C6  EE00 F001          	lfsr	0,1
  2688  0079CA  50E1               	movf	fsr1l,w,c
  2689  0079CC  26E9               	addwf	fsr0l,f,c
  2690  0079CE  50E2               	movf	fsr1h,w,c
  2691  0079D0  22EA               	addwfc	fsr0h,f,c
  2692  0079D2  3A00               	swapf	btemp,f,c
  2693  0079D4  50EF               	movf	indf0,w,c
  2694  0079D6  1800               	xorwf	btemp,w,c
  2695  0079D8  0B0F               	andlw	-241
  2696  0079DA  1800               	xorwf	btemp,w,c
  2697  0079DC  6EEF               	movwf	indf0,c
  2698                           ;wsw.c: 670: }
  2699  0079DE  0012               	return	
  2700  0079E0                     __end_of_SetStatus:
  2701                           ;wsw.c: 676: bit GetPoz(const unsigned char nrko
      +                          l,const unsigned char nrpoz)
  2702                           ;wsw.c: 677: {
  2703  0079E0  00F0               	dw	?_GetPoz
  2704  0079E2                     _GetPoz:
  2705  000000                     
  2706                           ; _nrkol loaded to fsr2l
  2707  0079E2  6ED9               	movwf	fsr2l,c
  2708                           ;wsw.c: 678: if ((nrkol>=4)||(nrpoz>=Klj[nrkol].
      +                          nPzc)) asm("RESET");
  2709  0079E4  0E03               	movlw	3
  2710  0079E6  64D9               	cpfsgt	fsr2l,c
  2711  0079E8  D001               	goto	u1231
  2712  0079EA  D012               	goto	u1250
  2713  0079EC                     u1231:
  2714  0079EC  50D9               	movf	fsr2l,w,c
  2715  0079EE  0D03               	mullw	3
  2716  0079F0  50F3               	movf	prodl,w,c
  2717  0079F2  0F70               	addlw	low _Klj
  2718  0079F4  6EF6               	movwf	tblptrl,c
  2719  0079F6  50F4               	movf	prodh,w,c
  2720  0079F8  6EF7               	movwf	tblptrh,c
  2721  0079FA  0E10               	movlw	high _Klj
  2722  0079FC  22F7               	addwfc	tblptrh,f,c
  2723  0079FE  0E02               	movlw	2
  2724  007A00  26F6               	addwf	tblptrl,f,c
  2725  007A02  0E00               	movlw	0
  2726  007A04  22F7               	addwfc	tblptrh,f,c
  2727  007A06  0008               	tblrd		*
  2728  007A08  50F5               	movf	tablat,w,c
  2729  007A0A  0100               	movlb	__Lparam shr (0+8)
  2730  007A0C  5DF0               	subwf	?_GetPoz^(__Lparam& (0+65280)),w
  2731  007A0E  B0D8               	btfsc	status,0,c
  2732  007A10                     u1250:
  2733  007A10  00FF               	reset		;#
  2734                           ;wsw.c: 679: return (*Klj[nrkol].KL).KFc[nrpoz].
      +                          focus;
  2735  007A12  50D9               	movf	fsr2l,w,c
  2736  007A14  0D03               	mullw	3
  2737  007A16  50F3               	movf	prodl,w,c
  2738  007A18  0F70               	addlw	low _Klj
  2739  007A1A  6EF6               	movwf	tblptrl,c
  2740  007A1C  50F4               	movf	prodh,w,c
  2741  007A1E  6EF7               	movwf	tblptrh,c
  2742  007A20  0E10               	movlw	high _Klj
  2743  007A22  22F7               	addwfc	tblptrh,f,c
  2744  007A24  0009               	tblrd		*+
  2745  007A26  CFF5 F000          	movff	tablat,btemp
  2746  007A2A  0009               	tblrd		*+
  2747  007A2C  CFF5 F001          	movff	tablat,btemp+1
  2748  007A30  0E06               	movlw	6
  2749  007A32  2600               	addwf	btemp,f,c
  2750  007A34  0E00               	movlw	0
  2751  007A36  2201               	addwfc	btemp+1,f,c
  2752  007A38  C000  FFF6         	movff	btemp,tblptrl
  2753  007A3C  C001  FFF7         	movff	btemp+1,tblptrh
  2754  007A40  0E0F               	movlw	(high __ramtop+-1)
  2755  007A42  64F7               	cpfsgt	tblptrh,c
  2756  007A44  D007               	bra	u1267
  2757  007A46  0009               	tblrd		*+
  2758  007A48  CFF5 F000          	movff	tablat,btemp
  2759  007A4C  0009               	tblrd		*+
  2760  007A4E  CFF5 F001          	movff	tablat,btemp+1
  2761  007A52  D008               	bra	u1260
  2762  007A54                     u1267:
  2763  007A54  CFF6 FFE9          	movff	tblptrl,fsr0l
  2764  007A58  CFF7 FFEA          	movff	tblptrh,fsr0h
  2765  007A5C  CFEE F000          	movff	postinc0,btemp
  2766  007A60  CFEE F001          	movff	postinc0,btemp+1
  2767  007A64                     u1260:
  2768  007A64  0100               	movlb	__Lparam shr (0+8)
  2769  007A66  51F0               	movf	?_GetPoz^(__Lparam& (0+65280)),w
  2770  007A68  2400               	addwf	btemp,w,c
  2771  007A6A  6EE9               	movwf	fsr0l,c
  2772  007A6C  0E00               	movlw	0
  2773  007A6E  2001               	addwfc	btemp+1,w,c
  2774  007A70  6EEA               	movwf	fsr0h,c
  2775  007A72  50EF               	movf	indf0,w,c
  2776  007A74  0B01               	andlw	1
  2777  007A76  6E00               	movwf	btemp,c
  2778  007A78  3000               	rrcf	btemp,w,c
  2779  007A7A  0012               	return	
  2780                           ;wsw.c: 680: }
  2781  007A7C                     __end_of_GetPoz:
  2782                           ;wsw.c: 682: void SetPoz(const unsigned char nrk
      +                          ol,const unsigned char nrpoz)
  2783                           ;wsw.c: 683: {
  2784  007A7C  00F5               	dw	?_SetPoz
  2785  007A7E                     _SetPoz:
  2786  000000                     
  2787                           ; _nrkol loaded to fsr2l
  2788  007A7E  6ED9               	movwf	fsr2l,c
  2789                           ;wsw.c: 684: if ((nrkol>=4)||(nrpoz>=Klj[nrkol].
      +                          nPzc)) asm("RESET");
  2790  007A80  0E03               	movlw	3
  2791  007A82  64D9               	cpfsgt	fsr2l,c
  2792  007A84  D001               	goto	u1271
  2793  007A86  D012               	goto	u1290
  2794  007A88                     u1271:
  2795  007A88  50D9               	movf	fsr2l,w,c
  2796  007A8A  0D03               	mullw	3
  2797  007A8C  50F3               	movf	prodl,w,c
  2798  007A8E  0F70               	addlw	low _Klj
  2799  007A90  6EF6               	movwf	tblptrl,c
  2800  007A92  50F4               	movf	prodh,w,c
  2801  007A94  6EF7               	movwf	tblptrh,c
  2802  007A96  0E10               	movlw	high _Klj
  2803  007A98  22F7               	addwfc	tblptrh,f,c
  2804  007A9A  0E02               	movlw	2
  2805  007A9C  26F6               	addwf	tblptrl,f,c
  2806  007A9E  0E00               	movlw	0
  2807  007AA0  22F7               	addwfc	tblptrh,f,c
  2808  007AA2  0008               	tblrd		*
  2809  007AA4  50F5               	movf	tablat,w,c
  2810  007AA6  0100               	movlb	__Lparam shr (0+8)
  2811  007AA8  5DF5               	subwf	?_SetPoz^(__Lparam& (0+65280)),w
  2812  007AAA  B0D8               	btfsc	status,0,c
  2813  007AAC                     u1290:
  2814  007AAC  00FF               	reset		;#
  2815                           ;wsw.c: 685: (*Klj[nrkol].KL).KFc[nrpoz].focus=1
      +                          ;
  2816  007AAE  50D9               	movf	fsr2l,w,c
  2817  007AB0  0D03               	mullw	3
  2818  007AB2  50F3               	movf	prodl,w,c
  2819  007AB4  0F70               	addlw	low _Klj
  2820  007AB6  6EF6               	movwf	tblptrl,c
  2821  007AB8  50F4               	movf	prodh,w,c
  2822  007ABA  6EF7               	movwf	tblptrh,c
  2823  007ABC  0E10               	movlw	high _Klj
  2824  007ABE  22F7               	addwfc	tblptrh,f,c
  2825  007AC0  0009               	tblrd		*+
  2826  007AC2  CFF5 F000          	movff	tablat,btemp
  2827  007AC6  0009               	tblrd		*+
  2828  007AC8  CFF5 F001          	movff	tablat,btemp+1
  2829  007ACC  0E06               	movlw	6
  2830  007ACE  2600               	addwf	btemp,f,c
  2831  007AD0  0E00               	movlw	0
  2832  007AD2  2201               	addwfc	btemp+1,f,c
  2833  007AD4  C000  FFF6         	movff	btemp,tblptrl
  2834  007AD8  C001  FFF7         	movff	btemp+1,tblptrh
  2835  007ADC  0E0F               	movlw	(high __ramtop+-1)
  2836  007ADE  64F7               	cpfsgt	tblptrh,c
  2837  007AE0  D007               	bra	u1307
  2838  007AE2  0009               	tblrd		*+
  2839  007AE4  CFF5 F000          	movff	tablat,btemp
  2840  007AE8  0009               	tblrd		*+
  2841  007AEA  CFF5 F001          	movff	tablat,btemp+1
  2842  007AEE  D008               	bra	u1300
  2843  007AF0                     u1307:
  2844  007AF0  CFF6 FFE9          	movff	tblptrl,fsr0l
  2845  007AF4  CFF7 FFEA          	movff	tblptrh,fsr0h
  2846  007AF8  CFEE F000          	movff	postinc0,btemp
  2847  007AFC  CFEE F001          	movff	postinc0,btemp+1
  2848  007B00                     u1300:
  2849  007B00  0100               	movlb	__Lparam shr (0+8)
  2850  007B02  51F5               	movf	?_SetPoz^(__Lparam& (0+65280)),w
  2851  007B04  2400               	addwf	btemp,w,c
  2852  007B06  6EE9               	movwf	fsr0l,c
  2853  007B08  0E00               	movlw	0
  2854  007B0A  2001               	addwfc	btemp+1,w,c
  2855  007B0C  6EEA               	movwf	fsr0h,c
  2856  007B0E  50EF               	movf	indf0,w,c
  2857  007B10  0BFE               	andlw	-2
  2858  007B12  0901               	iorlw	1
  2859  007B14  6EEF               	movwf	indf0,c
  2860                           ;wsw.c: 686: KInd[nrkol].reset=0;
  2861  007B16  50D9               	movf	fsr2l,w,c
  2862  007B18  EE0E  F0CA         	lfsr	0,_KInd
  2863  007B1C  26E9               	addwf	fsr0l,f,c
  2864  007B1E  0E00               	movlw	0
  2865  007B20  22EA               	addwfc	fsr0h,f,c
  2866  007B22  0EFD               	movlw	-3
  2867  007B24  16EF               	andwf	indf0,f,c
  2868                           ;wsw.c: 687: }
  2869  007B26  0CFD               	retlw	253
  2870  007B28                     __end_of_SetPoz:
  2871                           ;wsw.c: 689: void ResetPoz(const unsigned char n
      +                          rkol,const unsigned char nrpoz)
  2872                           ;wsw.c: 690: {
  2873  007B28  00F0               	dw	?_ResetPoz
  2874  007B2A                     _ResetPoz:
  2875  000000                     
  2876                           ; _nrkol loaded to fsr2l
  2877  007B2A  6ED9               	movwf	fsr2l,c
  2878                           ;wsw.c: 691: if ((nrkol>=4)||(nrpoz>=Klj[nrkol].
      +                          nPzc)) asm("RESET");
  2879  007B2C  0E03               	movlw	3
  2880  007B2E  64D9               	cpfsgt	fsr2l,c
  2881  007B30  D001               	goto	u1311
  2882  007B32  D012               	goto	u1330
  2883  007B34                     u1311:
  2884  007B34  50D9               	movf	fsr2l,w,c
  2885  007B36  0D03               	mullw	3
  2886  007B38  50F3               	movf	prodl,w,c
  2887  007B3A  0F70               	addlw	low _Klj
  2888  007B3C  6EF6               	movwf	tblptrl,c
  2889  007B3E  50F4               	movf	prodh,w,c
  2890  007B40  6EF7               	movwf	tblptrh,c
  2891  007B42  0E10               	movlw	high _Klj
  2892  007B44  22F7               	addwfc	tblptrh,f,c
  2893  007B46  0E02               	movlw	2
  2894  007B48  26F6               	addwf	tblptrl,f,c
  2895  007B4A  0E00               	movlw	0
  2896  007B4C  22F7               	addwfc	tblptrh,f,c
  2897  007B4E  0008               	tblrd		*
  2898  007B50  50F5               	movf	tablat,w,c
  2899  007B52  0100               	movlb	__Lparam shr (0+8)
  2900  007B54  5DF0               	subwf	?_ResetPoz^(__Lparam& (0+65280)),w
  2901  007B56  B0D8               	btfsc	status,0,c
  2902  007B58                     u1330:
  2903  007B58  00FF               	reset		;#
  2904                           ;wsw.c: 692: (*Klj[nrkol].KL).KFc[nrpoz].focus=0
      +                          ;
  2905  007B5A  50D9               	movf	fsr2l,w,c
  2906  007B5C  0D03               	mullw	3
  2907  007B5E  50F3               	movf	prodl,w,c
  2908  007B60  0F70               	addlw	low _Klj
  2909  007B62  6EF6               	movwf	tblptrl,c
  2910  007B64  50F4               	movf	prodh,w,c
  2911  007B66  6EF7               	movwf	tblptrh,c
  2912  007B68  0E10               	movlw	high _Klj
  2913  007B6A  22F7               	addwfc	tblptrh,f,c
  2914  007B6C  0009               	tblrd		*+
  2915  007B6E  CFF5 F000          	movff	tablat,btemp
  2916  007B72  0009               	tblrd		*+
  2917  007B74  CFF5 F001          	movff	tablat,btemp+1
  2918  007B78  0E06               	movlw	6
  2919  007B7A  2600               	addwf	btemp,f,c
  2920  007B7C  0E00               	movlw	0
  2921  007B7E  2201               	addwfc	btemp+1,f,c
  2922  007B80  C000  FFF6         	movff	btemp,tblptrl
  2923  007B84  C001  FFF7         	movff	btemp+1,tblptrh
  2924  007B88  0E0F               	movlw	(high __ramtop+-1)
  2925  007B8A  64F7               	cpfsgt	tblptrh,c
  2926  007B8C  D007               	bra	u1347
  2927  007B8E  0009               	tblrd		*+
  2928  007B90  CFF5 F000          	movff	tablat,btemp
  2929  007B94  0009               	tblrd		*+
  2930  007B96  CFF5 F001          	movff	tablat,btemp+1
  2931  007B9A  D008               	bra	u1340
  2932  007B9C                     u1347:
  2933  007B9C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2934  007BA0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2935  007BA4  CFEE F000          	movff	postinc0,btemp
  2936  007BA8  CFEE F001          	movff	postinc0,btemp+1
  2937  007BAC                     u1340:
  2938  007BAC  0100               	movlb	__Lparam shr (0+8)
  2939  007BAE  51F0               	movf	?_ResetPoz^(__Lparam& (0+65280)),w
  2940  007BB0  2400               	addwf	btemp,w,c
  2941  007BB2  6EE9               	movwf	fsr0l,c
  2942  007BB4  0E00               	movlw	0
  2943  007BB6  2001               	addwfc	btemp+1,w,c
  2944  007BB8  6EEA               	movwf	fsr0h,c
  2945  007BBA  0EFE               	movlw	-2
  2946  007BBC  16EF               	andwf	indf0,f,c
  2947                           ;wsw.c: 693: }
  2948  007BBE  0CFE               	retlw	254
  2949  007BC0                     __end_of_ResetPoz:
  2950                           ;wsw.c: 695: void ResetKol(const unsigned char n
      +                          rkol)
  2951                           ;wsw.c: 696: {
  2952  007BC0                     _ResetKol:
  2953  000000                     
  2954                           ; _nrkol loaded to fsr2l
  2955  007BC0  6ED9               	movwf	fsr2l,c
  2956                           ;wsw.c: 697: if (nrkol>=4) asm("RESET");
  2957  007BC2  0E03               	movlw	3
  2958  007BC4  64D9               	cpfsgt	fsr2l,c
  2959  007BC6  D001               	goto	l139
  2960  007BC8  00FF               	reset		;#
  2961  007BCA                     l139:
  2962                           ;wsw.c: 698: KInd[nrkol].reset=1;
  2963  007BCA  50D9               	movf	fsr2l,w,c
  2964  007BCC  EE0E  F0CA         	lfsr	0,_KInd
  2965  007BD0  26E9               	addwf	fsr0l,f,c
  2966  007BD2  0E00               	movlw	0
  2967  007BD4  22EA               	addwfc	fsr0h,f,c
  2968  007BD6  50EF               	movf	indf0,w,c
  2969  007BD8  0BFD               	andlw	-3
  2970  007BDA  0902               	iorlw	2
  2971  007BDC  6EEF               	movwf	indf0,c
  2972                           ;wsw.c: 699: }
  2973  007BDE  0012               	return	
  2974  007BE0                     __end_of_ResetKol:
  2975                           ;wsw.c: 702: void RestartKol(const unsigned char
      +                           nrkol)
  2976                           ;wsw.c: 703: {
  2977  007BE0                     _RestartKol:
  2978  000000                     
  2979                           ; _nrkol loaded to fsr2l
  2980  007BE0  6ED9               	movwf	fsr2l,c
  2981                           ;wsw.c: 704: if (nrkol>=4) asm("RESET");
  2982  007BE2  0E03               	movlw	3
  2983  007BE4  64D9               	cpfsgt	fsr2l,c
  2984  007BE6  D001               	goto	l141
  2985  007BE8  00FF               	reset		;#
  2986  007BEA                     l141:
  2987                           ;wsw.c: 705: KInd[nrkol].restart=1;
  2988  007BEA  50D9               	movf	fsr2l,w,c
  2989  007BEC  EE0E  F0CA         	lfsr	0,_KInd
  2990  007BF0  26E9               	addwf	fsr0l,f,c
  2991  007BF2  0E00               	movlw	0
  2992  007BF4  22EA               	addwfc	fsr0h,f,c
  2993  007BF6  50EF               	movf	indf0,w,c
  2994  007BF8  0BFE               	andlw	-2
  2995  007BFA  0901               	iorlw	1
  2996  007BFC  6EEF               	movwf	indf0,c
  2997                           ;wsw.c: 706: }
  2998  007BFE  0012               	return	
  2999  007C00                     __end_of_RestartKol:
  3000                           ;wsw.c: 708: void AllKolToFirstPoz(void)
  3001                           ;wsw.c: 709: {
  3002  007C00                     _AllKolToFirstPoz:
  3003  000000                     
  3004                           ;wsw.c: 710: unsigned char j;
  3005  007C00  6AD9               	clrf	fsr2l,c
  3006  007C02                     l143:
  3007                           ;wsw.c: 712: {
  3008  007C02  50D9               	movf	fsr2l,w,c
  3009  007C04  EE0E  F0CA         	lfsr	0,_KInd
  3010  007C08  26E9               	addwf	fsr0l,f,c
  3011  007C0A  0E00               	movlw	0
  3012  007C0C  22EA               	addwfc	fsr0h,f,c
  3013  007C0E  0E03               	movlw	-253
  3014  007C10  16EF               	andwf	indf0,f,c
  3015                           ;wsw.c: 714: KTim[j].ncS=0;
  3016  007C12  50D9               	movf	fsr2l,w,c
  3017  007C14  0D03               	mullw	3
  3018  007C16  0EA0               	movlw	low _KTim
  3019  007C18  24F3               	addwf	prodl,w,c
  3020  007C1A  6EE9               	movwf	fsr0l,c
  3021  007C1C  0E00               	movlw	high _KTim
  3022  007C1E  20F4               	addwfc	prodh,w,c
  3023  007C20  6EEA               	movwf	fsr0h,c
  3024  007C22  6AEF               	clrf	indf0,c
  3025                           ;wsw.c: 715: KTim[j].ndS=0;
  3026  007C24  50D9               	movf	fsr2l,w,c
  3027  007C26  0D03               	mullw	3
  3028  007C28  0EA1               	movlw	low (_KTim+1)
  3029  007C2A  24F3               	addwf	prodl,w,c
  3030  007C2C  6EE9               	movwf	fsr0l,c
  3031  007C2E  0E00               	movlw	high (_KTim+1)
  3032  007C30  20F4               	addwfc	prodh,w,c
  3033  007C32  6EEA               	movwf	fsr0h,c
  3034  007C34  6AEF               	clrf	indf0,c
  3035  007C36  2AD9               	incf	fsr2l,f,c
  3036  007C38  0E03               	movlw	3
  3037  007C3A  64D9               	cpfsgt	fsr2l,c
  3038  007C3C  D7E2               	goto	l143
  3039  007C3E  0C03               	retlw	3
  3040                           ;wsw.c: 716: }
  3041  007C40                     __end_of_AllKolToFirstPoz:
  3042  000000                     
  3043  000000                     
  3044  000000                     
  3045  000000                     
  3046  000000                     
  3047  000000                     
  3048  000000                     
  3049  000000                     
  3050  000000                     
  3051  000000                     
  3052  000000                     
  3053  000000                     
  3054  000000                     
  3055  000000                     
  3056  000000                     
  3057  000000                     
  3058  000000                     
  3059  000000                     
  3060  000000                     
  3061  000000                     
  3062  000000                     
  3063  000000                     
  3064  000000                     
  3065  000000                     
  3066  000000                     
  3067  000000                     
  3068  000000                     
  3069  000000                     
  3070  000000                     
  3071  000000                     
  3072  000000                     
  3073  000000                     
  3074  000000                     
  3075  000000                     
  3076  000000                     
  3077  000000                     
  3078  000000                     
  3079  000000                     
  3080  000000                     
  3081  000000                     
  3082  000000                     
  3083  000000                     
  3084  000000                     
  3085  000000                     
  3086  000000                     
  3087  000000                     
  3088  000000                     
  3089  000000                     
  3090  000000                     
  3091  000000                     
  3092  000000                     
  3093  000000                     
  3094  000000                     
  3095  000000                     
  3096  000000                     
  3097  000000                     
  3098  000000                     
  3099  000000                     
  3100  000000                     
  3101  000000                     
  3102  000000                     
  3103  000000                     
  3104  000000                     
  3105  000000                     
  3106  000000                     
  3107  000000                     
  3108  000000                     
  3109  000000                     
  3110  000000                     
  3111  000000                     
  3112  000000                     
  3113  000000                     
  3114  000000                     
  3115  000000                     
  3116  000000                     
  3117  000000                     
  3118  000000                     
  3119  000000                     
  3120  000000                     
  3121  000000                     
  3122  000000                     
  3123  000000                     
  3124  000000                     
  3125  000000                     
  3126  000000                     
  3127  000000                     
  3128  000000                     
  3129  000000                     
  3130  000000                     
  3131  000000                     
  3132  000000                     
  3133  000000                     
  3134  000000                     
  3135  000000                     
  3136  000000                     
  3137  000000                     
  3138  000000                     
  3139  000000                     
  3140  000000                     
  3141  000000                     
  3142  000000                     
  3143  000000                     
  3144  000000                     
  3145  000000                     
  3146  000000                     
  3147  000000                     
  3148  000000                     
  3149  000000                     
  3150  000000                     
  3151  000000                     
  3152  000000                     
  3153  000000                     
  3154  000000                     
  3155  000000                     
  3156  000000                     
  3157  000000                     
  3158  000000                     
  3159  000000                     
  3160  000000                     
  3161  000000                     
  3162  000000                     
  3163  000000                     
  3164  000000                     
  3165  000000                     
  3166  000000                     
  3167  000000                     
  3168  000000                     
  3169  000000                     
  3170  000000                     
  3171  000000                     
  3172  000000                     
  3173  000000                     
  3174  000000                     
  3175  000000                     
  3176  000000                     
  3177  000000                     
  3178  000000                     
  3179  000000                     
  3180  000000                     
  3181  000000                     
  3182  000000                     
  3183  000000                     
  3184  000000                     
  3185  000000                     
  3186  000000                     
  3187  000000                     
  3188  000000                     
  3189  000000                     
  3190  000000                     
  3191  000000                     
  3192  000000                     
  3193  000000                     
  3194  000000                     
  3195  000000                     
  3196  000000                     
  3197  000000                     
  3198  000000                     
  3199  000000                     
  3200  000000                     
  3201  000000                     
  3202  000000                     
  3203  000000                     
  3204  000000                     
  3205  000000                     
  3206  000000                     
  3207  000000                     
  3208  000000                     
  3209  000000                     
  3210  000000                     
  3211  000000                     
  3212  000000                     
  3213  000000                     
  3214  000000                     
  3215  000000                     
  3216  000000                     
  3217  000000                     
  3218  000000                     
  3219  000000                     
  3220  000000                     
  3221  000000                     
  3222  000000                     
  3223  000000                     
  3224  000000                     
  3225  000000                     
  3226  000000                     
  3227  000000                     
  3228  000000                     
  3229  000000                     
  3230  000000                     
  3231  000000                     
  3232  000000                     
  3233  000000                     
  3234  000000                     
  3235  000000                     
  3236  000000                     
  3237  000000                     
  3238  000000                     
  3239  000000                     
  3240  000000                     
  3241  000000                     
  3242  000000                     
  3243  000000                     
  3244  000000                     
  3245  000000                     
  3246  000000                     
  3247  000000                     
  3248  000000                     
  3249  000000                     
  3250  000000                     
  3251  000000                     
  3252  000000                     
  3253  000000                     
  3254  000000                     
  3255  000000                     
  3256  000000                     
  3257  000000                     
  3258  000000                     
  3259  000000                     
  3260  000000                     
  3261  000000                     
  3262  000000                     
  3263  000000                     
  3264  000000                     
  3265  000000                     
  3266  000000                     
  3267  000000                     
  3268  000000                     
  3269  000000                     
  3270  000000                     
  3271  000000                     
  3272  000000                     
  3273  000000                     
  3274  000000                     
  3275  000000                     
  3276  000000                     
  3277  000000                     
  3278  000000                     
  3279  000000                     
  3280  000000                     
  3281  000000                     
  3282  000000                     
  3283  000000                     
  3284  000000                     
  3285  000000                     
  3286  000000                     
  3287  000000                     
  3288  000000                     
  3289  000000                     
  3290  000000                     
  3291  000000                     
  3292  000000                     
  3293  000000                     
  3294  000000                     
  3295  000000                     
  3296  000000                     
  3297  000000                     
  3298  000000                     
  3299  000000                     
  3300  000000                     
  3301  000000                     
  3302  000000                     
  3303  000000                     
  3304  000000                     
  3305  000000                     
  3306  000000                     
  3307  000000                     
  3308  000000                     
  3309  000000                     
  3310  000000                     
  3311  000000                     
  3312  000000                     
  3313  000000                     
  3314  000000                     
  3315  000000                     
  3316  000000                     
  3317  000000                     
  3318  000000                     
  3319  000000                     
  3320  000000                     
  3321  000000                     
  3322  000000                     
  3323  000000                     
  3324  000000                     
  3325  000000                     
  3326  000000                     
  3327  000000                     
  3328  000000                     
  3329  000000                     
  3330  000000                     
  3331  000000                     
  3332  000000                     
  3333  000000                     
  3334  000000                     
  3335  000000                     
  3336  000000                     
  3337  000000                     
  3338  000000                     
  3339  000000                     
  3340  000000                     
  3341  000000                     
  3342  000000                     
  3343  000000                     
  3344  000000                     
  3345  000000                     
  3346  000000                     
  3347  000000                     
  3348  000000                     
  3349  000000                     
  3350  000000                     
  3351  000000                     
  3352  000000                     
  3353  000000                     
  3354  000000                     
  3355  000000                     
  3356  000000                     
  3357  000000                     
  3358  000000                     
  3359  000000                     
  3360  000000                     
  3361  000000                     
  3362  000000                     
  3363  000000                     
  3364  000000                     
  3365  000000                     
  3366  000000                     
  3367  000000                     
  3368  000000                     
  3369  000000                     
  3370  000000                     
  3371  000000                     
  3372  000000                     
  3373  000000                     
  3374  000000                     
  3375  000000                     
  3376  000000                     
  3377  000000                     
  3378  000000                     
  3379  000000                     
  3380  000000                     
  3381  000000                     
  3382  000000                     
  3383  000000                     
  3384  000000                     
  3385  000000                     
  3386  000000                     
  3387  000000                     
  3388  000000                     
  3389  000000                     
  3390  000000                     
  3391  000000                     
  3392  000000                     
  3393  000000                     
  3394  000000                     
  3395  000000                     
  3396  000000                     
  3397  000000                     
  3398  000000                     
  3399  000000                     
  3400  000000                     
  3401  000000                     
  3402  000000                     
  3403  000000                     
  3404  000000                     
  3405  000000                     
  3406  000000                     
  3407  000000                     
  3408  000000                     
  3409  000000                     
  3410  000000                     
  3411  000000                     
  3412  000000                     
  3413  000000                     
  3414  000000                     
  3415  000000                     
  3416  000000                     
  3417  000000                     
  3418  000000                     
  3419  000000                     
  3420  000000                     
  3421  000000                     
  3422  000000                     
  3423  000000                     
  3424  000000                     
  3425  000000                     
  3426  000000                     
  3427  000000                     
  3428  000000                     
  3429  000000                     
  3430  000000                     
  3431  000000                     
  3432  000000                     
  3433  000000                     
  3434  000000                     
  3435  000000                     
  3436  000000                     
  3437  000000                     
  3438  000000                     
  3439  000000                     
  3440  000000                     
  3441  000000                     
  3442  000000                     
  3443  000000                     
  3444  000000                     
  3445  000000                     
  3446  000000                     
  3447  000000                     
  3448  000000                     
  3449  000000                     
  3450  000000                     
  3451  000000                     
  3452  000000                     
  3453  000000                     
  3454  000000                     
  3455  000000                     
  3456  000000                     
  3457  000000                     
  3458  000000                     
  3459  000000                     
  3460  000000                     
  3461  000000                     
  3462  000000                     
  3463  000000                     
  3464  000000                     
  3465  000000                     
  3466  000000                     
  3467  000000                     
  3468  000000                     
  3469  000000                     
  3470  000000                     
  3471  000000                     
  3472  000000                     
  3473  000000                     
  3474  000000                     
  3475  000000                     
  3476  000000                     
  3477  000000                     
  3478                           
  3479                           	psect	const
  3480  001000                     _KL0_AP:
  3481  001000  00AC               	dw	_DWD
  3482  001002  00B0               	dw	_DWD+4
  3483                           ;wsw.c: 100: const KAdrPoz KL0_AP[2]= {
  3484                           ;wsw.c: 101: DWD,
  3485                           ;wsw.c: 102: DWD+1
  3486                           ;wsw.c: 103: };
  3487  001004                     _KL1_AP:
  3488  001004  00B4               	dw	_DWD+8
  3489  001006  00B4               	dw	_DWD+8
  3490                           ;wsw.c: 105: const KAdrPoz KL1_AP[2]= {
  3491                           ;wsw.c: 106: DWD+2,
  3492                           ;wsw.c: 107: DWD+2
  3493                           ;wsw.c: 108: };
  3494  001008                     _KL2_AP:
  3495  001008  00B8               	dw	_DWD+12
  3496  00100A  00BC               	dw	_DWD+16
  3497                           ;wsw.c: 110: const KAdrPoz KL2_AP[2]= {
  3498                           ;wsw.c: 111: DWD+3,
  3499                           ;wsw.c: 112: DWD+4
  3500                           ;wsw.c: 113: };
  3501  00100C                     _KL3_AP:
  3502  00100C  00C0               	dw	_DWD+20
  3503  00100E  00C4               	dw	_DWD+24
  3504                           ;wsw.c: 115: const KAdrPoz KL3_AP[2]= {
  3505                           ;wsw.c: 116: DWD+5,
  3506                           ;wsw.c: 117: DWD+6
  3507                           ;wsw.c: 118: };
  3508  001010                     _KL0_WP:
  3509  001010  00                 	db	0
  3510  001011  00                 	db	0
  3511  001012  08                 	db	8
  3512  001013  00                 	db	0
  3513  001014  00                 	db	0
  3514  001015  08                 	db	8
  3515                           ;wsw.c: 127: const KWrtPoz KL0_WP[2]={
  3516                           ;wsw.c: 128: 0,0,8,
  3517                           ;wsw.c: 129: 0,0,8
  3518                           ;wsw.c: 130: };
  3519  001016                     _KL1_WP:
  3520  001016  00                 	db	0
  3521  001017  00                 	db	0
  3522  001018  06                 	db	6
  3523  001019  00                 	db	0
  3524  00101A  00                 	db	0
  3525  00101B  06                 	db	6
  3526                           ;wsw.c: 132: const KWrtPoz KL1_WP[2]={
  3527                           ;wsw.c: 133: 0,0,6,
  3528                           ;wsw.c: 134: 0,0,6
  3529                           ;wsw.c: 135: };
  3530  00101C                     _KL2_WP:
  3531  00101C  00                 	db	0
  3532  00101D  00                 	db	0
  3533  00101E  06                 	db	6
  3534  00101F  00                 	db	0
  3535  001020  00                 	db	0
  3536  001021  06                 	db	6
  3537                           ;wsw.c: 137: const KWrtPoz KL2_WP[2]={
  3538                           ;wsw.c: 138: 0,0,6,
  3539                           ;wsw.c: 139: 0,0,6
  3540                           ;wsw.c: 140: };
  3541  001022                     _KL3_WP:
  3542  001022  00                 	db	0
  3543  001023  00                 	db	0
  3544  001024  1E                 	db	30
  3545  001025  00                 	db	0
  3546  001026  00                 	db	0
  3547  001027  14                 	db	20
  3548                           ;wsw.c: 142: const KWrtPoz KL3_WP[2]={
  3549                           ;wsw.c: 143: 0,0,30,
  3550                           ;wsw.c: 144: 0,0,20
  3551                           ;wsw.c: 145: };
  3552  001028                     _KL0_FP:
  3553  001028  00                 	db	0
  3554  001029  00                 	db	0
  3555  00102A  00                 	db	0
  3556  00102B  00                 	db	0
  3557                           ;wsw.c: 153: const KFrmPoz KL0_FP[2]={
  3558                           ;wsw.c: 154: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3559                           ;wsw.c: 155: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3560                           ;wsw.c: 156: };
  3561  00102C                     _KL1_FP:
  3562  00102C  00                 	db	0
  3563  00102D  00                 	db	0
  3564  00102E  00                 	db	0
  3565  00102F  00                 	db	0
  3566                           ;wsw.c: 158: const KFrmPoz KL1_FP[2]={
  3567                           ;wsw.c: 159: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3568                           ;wsw.c: 160: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3569                           ;wsw.c: 161: };
  3570  001030                     _KL2_FP:
  3571  001030  00                 	db	0
  3572  001031  00                 	db	0
  3573  001032  00                 	db	0
  3574  001033  00                 	db	0
  3575                           ;wsw.c: 163: const KFrmPoz KL2_FP[2]={
  3576                           ;wsw.c: 164: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3577                           ;wsw.c: 165: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3578                           ;wsw.c: 166: };
  3579  001034                     _KL3_FP:
  3580  001034  00                 	db	0
  3581  001035  00                 	db	0
  3582  001036  00                 	db	0
  3583  001037  00                 	db	0
  3584                           ;wsw.c: 192: static KFocus KL3_FC[2]= {
  3585                           ;wsw.c: 193: 0,
  3586                           ;wsw.c: 194: 0
  3587                           ;wsw.c: 195: };
  3588  001038                     _KL0_OUT:
  3589  001038  00C8               	dw	_PWD
  3590  00103A  00                 	db	0
  3591  00103B  00                 	db	0
  3592                           ;wsw.c: 200: const KOutput KL0_OUT= {PWD,0,0};
  3593  00103C                     _KL1_OUT:
  3594  00103C  00CC               	dw	_PWD+4
  3595  00103E  00                 	db	0
  3596  00103F  00                 	db	0
  3597                           ;wsw.c: 201: const KOutput KL1_OUT= {PWD+1,0,0};
  3598  001040                     _KL2_OUT:
  3599  001040  00D0               	dw	_PWD+8
  3600  001042  04                 	db	4
  3601  001043  00                 	db	0
  3602                           ;wsw.c: 202: const KOutput KL2_OUT= {PWD+2,4,0};
  3603  001044                     _KL3_OUT:
  3604  001044  00D4               	dw	_PWD+12
  3605  001046  00                 	db	0
  3606  001047  00                 	db	0
  3607                           ;wsw.c: 203: const KOutput KL3_OUT= {PWD+3,0,0};
  3608  001048                     _KL0:
  3609  001048  1000               	dw	_KL0_AP
  3610  00104A  1010               	dw	_KL0_WP
  3611  00104C  1028               	dw	_KL0_FP
  3612  00104E  0EBE               	dw	_KL0_FC
  3613  001050  1038               	dw	_KL0_OUT
  3614                           ;wsw.c: 207: const Kolejka KL0={KL0_AP,KL0_WP,KL
      +                          0_FP,KL0_FC,&KL0_OUT};
  3615  001052                     _KL1:
  3616  001052  1004               	dw	_KL1_AP
  3617  001054  1016               	dw	_KL1_WP
  3618  001056  102C               	dw	_KL1_FP
  3619  001058  0EC0               	dw	_KL1_FC
  3620  00105A  103C               	dw	_KL1_OUT
  3621                           ;wsw.c: 208: const Kolejka KL1={KL1_AP,KL1_WP,KL
      +                          1_FP,KL1_FC,&KL1_OUT};
  3622  00105C                     _KL2:
  3623  00105C  1008               	dw	_KL2_AP
  3624  00105E  101C               	dw	_KL2_WP
  3625  001060  1030               	dw	_KL2_FP
  3626  001062  0EC2               	dw	_KL2_FC
  3627  001064  1040               	dw	_KL2_OUT
  3628                           ;wsw.c: 209: const Kolejka KL2={KL2_AP,KL2_WP,KL
      +                          2_FP,KL2_FC,&KL2_OUT};
  3629  001066                     _KL3:
  3630  001066  100C               	dw	_KL3_AP
  3631  001068  1022               	dw	_KL3_WP
  3632  00106A  1034               	dw	_KL3_FP
  3633  00106C  0EC4               	dw	_KL3_FC
  3634  00106E  1044               	dw	_KL3_OUT
  3635                           ;wsw.c: 210: const Kolejka KL3={KL3_AP,KL3_WP,KL
      +                          3_FP,KL3_FC,&KL3_OUT};
  3636  001070                     _Klj:
  3637  001070  1048               	dw	_KL0
  3638  001072  02                 	db	2
  3639  001073  1052               	dw	_KL1
  3640  001075  02                 	db	2
  3641  001076  105C               	dw	_KL2
  3642  001078  02                 	db	2
  3643  001079  1066               	dw	_KL3
  3644  00107B  02                 	db	2
  3645                           ;wsw.c: 216: const KGlobal Klj[4]= {
  3646                           ;wsw.c: 217: &KL0,2,
  3647                           ;wsw.c: 218: &KL1,2,
  3648                           ;wsw.c: 219: &KL2,2,
  3649                           ;wsw.c: 220: &KL3,2
  3650                           ;wsw.c: 221: };
  3651                           ;wsw.c: 255: static KIndeks KInd[4];
  3652                           ;wsw.c: 256: static KTime KTim[4];
  3653  00107C                     _Znak:
  3654  00107C  50                 	db	80
  3655  00107D  F9                 	db	-7
  3656  00107E  32                 	db	50
  3657  00107F  31                 	db	49
  3658  001080  99                 	db	-103
  3659  001081  15                 	db	21
  3660  001082  14                 	db	20
  3661  001083  79                 	db	121
  3662  001084  10                 	db	16
  3663  001085  11                 	db	17
  3664  001086  18                 	db	24
  3665  001087  94                 	db	-108
  3666  001088  56                 	db	86
  3667  001089  B0                 	db	-80
  3668  00108A  16                 	db	22
  3669  00108B  1E                 	db	30
  3670                           
  3671                           	psect	bigdata
  3672                           ;wsw.c: 168: const KFrmPoz KL3_FP[2]={
  3673                           ;wsw.c: 169: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3674                           ;wsw.c: 170: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3675                           ;wsw.c: 171: };
  3676  000EBE                     _KL0_FC:
  3677  000EBE                     	ds	1
  3678  000EBE                     	ds	1
  3679                           ;wsw.c: 177: static KFocus KL0_FC[2]= {
  3680                           ;wsw.c: 178: 0,
  3681                           ;wsw.c: 179: 0
  3682                           ;wsw.c: 180: };
  3683  000EBE                     _KL1_FC:
  3684  000EBE                     	ds	1
  3685  000EBE                     	ds	1
  3686                           ;wsw.c: 182: static KFocus KL1_FC[2]= {
  3687                           ;wsw.c: 183: 0,
  3688                           ;wsw.c: 184: 0
  3689                           ;wsw.c: 185: };
  3690  000EBE                     _KL2_FC:
  3691  000EBE                     	ds	1
  3692  000EBE                     	ds	1
  3693                           ;wsw.c: 187: static KFocus KL2_FC[2]= {
  3694                           ;wsw.c: 188: 0,
  3695                           ;wsw.c: 189: 0
  3696                           ;wsw.c: 190: };
  3697  000EBE                     _KL3_FC:
  3698  000EBE                     	ds	1
  3699  000EBE                     	ds	1
  3700                           
  3701                           	psect	ibigdata
  3702  0010BA  00                 	db	0
  3703  0010BB  00                 	db	0
  3704  0010BC  00                 	db	0
  3705  0010BD  00                 	db	0
  3706  0010BE  00                 	db	0
  3707  0010BF  00                 	db	0
  3708  0010C0  00                 	db	0
  3709  0010C1  00                 	db	0
  3710                           
  3711                           	psect	rbit
  3712  0002A0                     _mux:
  3713  0002A0                     	ds	1
  3714  000000                     
  3715  000000                     
  3716  000000                     
  3717  000000                     
  3718  000000                     
  3719  000000                     
  3720  000000                     
  3721  000000                     
  3722  000000                     
  3723  000000                     
  3724  000000                     
  3725  000000                     
  3726  000000                     
  3727  000000                     
  3728  000000                     
  3729  000000                     
  3730  000000                     
  3731  000000                     
  3732  000000                     
  3733  000000                     
  3734                           
  3735                           	psect	bigbss
  3736  000EC6                     _Dmask:
  3737  000EC6                     	ds	1
  3738  000000                     
  3739  000000                     
  3740  000000                     
  3741  000000                     
  3742  000000                     
  3743  000000                     
  3744  000000                     
  3745  000000                     
  3746  000000                     
  3747  000000                     
  3748  000000                     
  3749  000000                     
  3750  000000                     
  3751  000000                     
  3752  000000                     
  3753  000000                     
  3754  000000                     
  3755  000000                     
  3756  000000                     
  3757  000000                     
  3758  000000                     
  3759  000000                     
  3760  000000                     
  3761  000000                     
  3762  000000                     
  3763  000000                     
  3764  000000                     
  3765  000000                     
  3766  000000                     
  3767  000000                     
  3768  000000                     
  3769  000000                     
  3770  000000                     
  3771  000000                     
  3772  000000                     
  3773  000000                     
  3774  000000                     
  3775  000000                     
  3776  000000                     
  3777  000000                     
  3778  000000                     
  3779  000000                     
  3780  000000                     
  3781  000000                     
  3782  000000                     
  3783  000000                     
  3784  000000                     
  3785  000000                     
  3786  000000                     
  3787  000000                     
  3788  000000                     
  3789  000000                     
  3790  000000                     
  3791  000000                     
  3792  000000                     
  3793  000000                     
  3794  000000                     
  3795  000000                     
  3796  000000                     
  3797  000000                     
  3798  000000                     
  3799  000000                     
  3800  000000                     
  3801  000000                     
  3802  000000                     
  3803  000000                     
  3804  000000                     
  3805  000000                     
  3806  000000                     
  3807  000000                     
  3808  000000                     
  3809  000000                     
  3810  000000                     
  3811  000000                     
  3812  000000                     
  3813  000000                     
  3814  000000                     
  3815  000000                     
  3816  000000                     
  3817  000000                     
  3818  000000                     
  3819  000000                     
  3820  000000                     
  3821  000000                     
  3822  000000                     
  3823  000000                     
  3824  000000                     
  3825  000000                     
  3826  000000                     
  3827  000000                     
  3828  000000                     
  3829  000000                     
  3830  000000                     
  3831  000000                     
  3832  000000                     
  3833  000000                     
  3834  000000                     
  3835  000000                     
  3836  000000                     
  3837  000000                     
  3838  000000                     
  3839  000000                     
  3840  000000                     
  3841  000000                     
  3842  000000                     
  3843  000EC6                     _wsdid:
  3844  000EC6                     	ds	1
  3845  000000                     
  3846  000000                     
  3847  000000                     
  3848  000000                     
  3849  000000                     
  3850  000000                     
  3851  000000                     
  3852  000EC6                     _wbty:
  3853  000EC6                     	ds	2
  3854  000EC6                     _KInd:
  3855  000EC6                     	ds	4
  3856                           
  3857                           	psect	bss
  3858  000099                     _LedData:
  3859  000099                     	ds	3
  3860  000099                     _WswData:
  3861  000099                     	ds	4
  3862  000099                     _KTim:
  3863  000099                     	ds	12
  3864  000099                     _DWD:
  3865  000099                     	ds	28
  3866  000099                     _PWD:
  3867  000099                     	ds	40
  3868                           
  3869                           	psect	temp
  3870  000000                     btemp:
  3871  000000                     	ds	5
  3872                           tblptrh	equ	0xFF7
  3873                           tblptrl	equ	0xFF6
  3874                           tablat	equ	0xFF5
  3875                           prodh	equ	0xFF4
  3876                           prodl	equ	0xFF3
  3877                           indf0	equ	0xFEF
  3878                           postinc0	equ	0xFEE
  3879                           postdec0	equ	0xFED
  3880                           fsr0h	equ	0xFEA
  3881                           fsr0l	equ	0xFE9
  3882                           wreg	equ	0xFE8
  3883                           indf1	equ	0xFE7
  3884                           postinc1	equ	0xFE6
  3885                           postdec1	equ	0xFE5
  3886                           fsr1h	equ	0xFE2
  3887                           fsr1l	equ	0xFE1
  3888                           fsr2l	equ	0xFD9
  3889                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Tue Feb 01 09:38:31 2011

      __end_of_RefreshWSW 6768                  _ResetKol 7BC0  
                _ResetPoz 7B2A                 _SetStatus 77EC  
       __end_of_SetStatus 79E0                 ?_ResetPoz 00F0  
                      l20 676A                        l23 68C2  
                      l15 66AE                        l32 68EE  
                      l33 6A64                _SetWbtyBit 76EC  
                      l50 6D26                        l42 6C00  
                      l27 683A                        l36 7494  
                      l28 697A                        l61 74A2  
                      l53 73E8                        l45 6D18  
                      l37 748C                        l54 6F60  
                      l38 6B06                        l71 75B6  
                      l55 722E                        l39 6BDC  
                      l72 75C6                        l64 74E0  
                      l56 7358                        l73 75D6  
                      l49 6C7E                        l74 75E6  
                      l66 7532                        l91 7668  
                      l75 75F6                        l67 759A  
                      l84 7654                        l76 7604  
                      l68 7592                        l85 7658  
                      l69 7542                        l94 76AA  
                      l78 7638                        l87 7664  
                      l79 7628                        l88 7666  
                      l97 76B6                        u20 67BC  
                      u30 67E2                        u27 67AC  
                      u37 67D8                        u80 6816  
                      u90 68AE                        u97 689E  
               ?a_KolProc 00FC        __end_of_SetWbtyBit 7744  
              ?_SetStatus 00F5                       l100 76D2  
                     l103 76DE                       l120 7840  
                     l121 785E                       l122 7878  
                     l123 7894                       l107 76F6  
                     l124 78B2                       l141 7BEA  
                     l125 78CE                       l126 78F2  
                     l118 780A                       l143 7C02  
                     l127 7918                       l119 7824  
                     l128 7940                       l129 796A  
                     l139 7BCA                       _KL0 1048  
                     _KL1 1052                       _KL2 105C  
                     _KL3 1066                       _DWD 00AC  
                     u300 6C78                       u220 6AB6  
                     u140 6962                       u230 6AE2  
                     u400 6E68                       u320 6CF2  
                     u240 6B80                       u410 6ED4  
                     u330 6D06                       u170 69E0  
                     u307 6C6E                       u227 6AA6  
                     u147 6952                       u500 70D0  
                     u420 6F0A                       u180 6A0C  
                     u237 6AD2                       u510 70FC  
                     u407 6E5E                       u327 6CE2  
                     u247 6B70                       u600 73AA  
                     u520 715E                       u417 6EC4  
                     u265 6BD8                       u177 69D0  
                     u610 73D6                       u530 719A  
                     u450 6FAA                       u370 6DB4  
                     u290 6C52                       u507 70C0  
                     u427 6F00                       u187 69FC  
                     u540 71EC                       u460 6FE8  
                     u380 6DE0                       u517 70EC  
                     u550 7218                       u390 6E42  
                     u607 739A                       u527 714E  
                     u560 7278                       u480 7042  
                     u625 7464                       u617 73C6  
                     u537 718A                       u457 6F9A  
                     u377 6DA4                       u297 6C42  
                     u810 75F0                       u570 72B6  
                     u490 707E                       u547 71DC  
                     u467 6FD8                       u387 6DD0  
                     u580 7310                       u557 7208  
                     u397 6E32                       u590 733C  
                     u567 7268                       u487 7032  
                     u577 72A6                       u497 706E  
                     u930 76A6                       u587 7300  
                     u924 7698                       u780 75E0  
                     u925 7694                       u597 732C  
                     u870 7618                       u945 76A8  
                     _PWD 00C8              _SetPrWswData 74A0  
                     _Klj 1070                       _mux 02A0  
             ?_SetWbtyBit 00F0                       wreg 000FE8  
              _RestartKol 7BE0        __end_of_RestartKol 7C00  
    __end_of_SetPrWswData 74FA                      f6123 00FD  
                    u1200 79A8                      u1034 770C  
                    u1035 7708                      u1300 7B00  
                    u1044 772C                      u1045 7728  
                    u1311 7B34                      u1231 79EC  
                    u1330 7B58                      u1250 7A10  
                    u1307 7AF0                      u1340 7BAC  
                    u1260 7A64                      u1271 7A88  
                    u1290 7AAC                      u1347 7B9C  
                    u1267 7A54                      _KInd 0ECA  
                    _KTim 00A0                      _Znak 107C  
                    fsr0h 000FEA                      fsr1h 000FE2  
                    indf0 000FEF                      fsr0l 000FE9  
                    indf1 000FE7                      fsr1l 000FE1  
                    fsr2l 000FD9                      _wbty 0EC8  
                    btemp 0000                      lbdiv C1E0  
                    lbmod C1E0                      prodh 000FF4  
                    prodl 000FF3                   ?_GetPoz 00F0  
         __end_of_KolProc 74A0           __end_of_InitWsw 675A  
         __end_of_SetData 77EA                   ?_SetPoz 00F5  
        _AllKolToFirstPoz 7C00             __end_of_Rwbty 7796  
           __end_of_Swbty 776C             __end_of_WswOn 77BE  
                 _KL0_OUT 1038                   _KL1_OUT 103C  
                 _KL2_OUT 1040                   _KL3_OUT 1044  
                   _Dmask 0EC6                used_btemp0 0001  
              used_btemp1 0001                used_btemp2 0001  
              used_btemp3 0001                used_btemp4 0001  
                   _Rwbty 776C                     _Swbty 7744  
                   _WswOn 77B8                     _wsdid 0EC7  
                   tablat 000FF5                   _LedData 0099  
                   status 000FD8                   _KolProc 6768  
                 _InitWsw 6698                   _SetData 77C0  
                ?_SetData 00F6                   __Lparam 00F0  
               ??_KolProc 00FC          __end_of_ResetKol 7BE0  
        __end_of_ResetPoz 7BC0                   _WswData 009C  
                 __ramtop 1000            __end_of_GetPoz 7A7C  
          __end_of_SetPoz 7B28            __end_of_Rwsdid 77B2  
          __end_of_Swsdid 77A4            __end_of_WswOff 77B8  
                  _KL0_FC 0EBE                    _KL0_AP 1000  
                  _KL1_FC 0EC0                    _KL1_AP 1004  
                  _KL0_FP 1028                    _KL2_FC 0EC2  
                  _KL2_AP 1008                    _KL1_FP 102C  
                  _KL3_FC 0EC4                    _KL3_AP 100C  
                  _KL2_FP 1030                    _KL3_FP 1034  
                  _KL0_WP 1010                    _KL1_WP 1016  
                  _KL2_WP 101C                    _KL3_WP 1022  
            _PrintWswData 7648      __end_of_PrintWswData 76EA  
                  _GetPoz 79E2                    _SetPoz 7A7E  
                  _Rwsdid 77A4                    _Swsdid 7796  
                  _WswOff 77B2                   postdec0 000FED  
                 postdec1 000FE5                   postinc0 000FEE  
                 postinc1 000FE6             _FormatWswData 74FA  
                  tblptrh 000FF7                    tblptrl 000FF6  
   __end_of_FormatWswData 7648  __end_of_AllKolToFirstPoz 7C40  
              _RefreshWSW 675A  
