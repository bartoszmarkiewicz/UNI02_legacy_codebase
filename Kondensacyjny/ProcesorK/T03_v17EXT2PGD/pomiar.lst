

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Thu Jul 28 10:43:09 2016


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     5                           	psect	bss,global,class=RAM,space=1,delta=1
     6                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     7                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97                           
    98                           	psect	text
    99                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   100                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   101                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   102                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   103                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   104                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   105                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   106                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   107                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   108                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   109                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   110                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   111                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   112                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   113                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   114                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   115                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   116                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   117                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   118                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   119                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   120                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   121                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   122                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   123                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   124                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   125                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   126                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   127                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   128                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   129                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   130                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   131                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   132                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   133                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   134                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   135                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   136                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   137                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   138                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   139                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   140                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   141                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   142                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   143                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   144                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   145                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   146                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   147                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   148                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   149                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   150                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   151                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   152                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   153                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   154                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   155                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   156                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   157                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   158                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   159                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   160                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   161                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   162                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   163                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   164                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   165                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   166                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   167                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   168                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   169                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   170                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   171                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   172                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   173                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   174                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   175                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   176                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   177                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   178                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   179                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   180                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   181                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   182                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   183                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   184                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   185                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   186                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   187                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   188                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   189                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   190                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   191                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   192                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   193                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   194                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   195                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   196                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   197                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   198                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   199  005E7A                     _InitDataPmr:
   200                           ;	_dac assigned to ?a_PomiarCS+0
   201  000000                     _PomiarCS$dac	set	?a_PomiarCS
   202                           ;	_m assigned to ?a_GetPGD_PCO+0
   203  000000                     _GetPGD_PCO$m	set	?a_GetPGD_PCO
   204  000000                     
   205                           ;pomiar.c: 40: DtCO._err_CO=0;
   206  005E7A  0100               	movlb	_DtCO shr (0+8)
   207  005E7C  917F               	bcf	_DtCO& (0+255),0,b
   208                           ;pomiar.c: 41: DtCO._su_CO=0;
   209  005E7E  937F               	bcf	_DtCO& (0+255),1,b
   210                           ;pomiar.c: 42: DtCO._ad_CO=0;
   211  005E80  957F               	bcf	_DtCO& (0+255),2,b
   212                           ;pomiar.c: 43: DtCO._su_SRW_CO=0;
   213  005E82  977F               	bcf	_DtCO& (0+255),3,b
   214                           ;pomiar.c: 44: DtCO._ad_SRW_CO=0;
   215  005E84  997F               	bcf	_DtCO& (0+255),4,b
   216                           ;pomiar.c: 45: DtCO._cold_CO=0;
   217  005E86  9580               	bcf	(_DtCO+1)& (0+255),2,b
   218                           ;pomiar.c: 46: DtCO._hot_CO=0;
   219  005E88  9780               	bcf	(_DtCO+1)& (0+255),3,b
   220                           ;pomiar.c: 47: DtCO._on_DZ_CO=0;
   221  005E8A  9B7F               	bcf	_DtCO& (0+255),5,b
   222                           ;pomiar.c: 48: DtCO._su_DZ_CO=0;
   223  005E8C  9D7F               	bcf	_DtCO& (0+255),6,b
   224                           ;pomiar.c: 49: DtCO._ad_DZ_CO=0;
   225  005E8E  9F7F               	bcf	_DtCO& (0+255),7,b
   226                           ;pomiar.c: 50: DtCO._ptwp_CO=0;
   227  005E90  9180               	bcf	(_DtCO+1)& (0+255),0,b
   228                           ;pomiar.c: 51: DtCO._pz_CO=0;
   229  005E92  9380               	bcf	(_DtCO+1)& (0+255),1,b
   230                           ;pomiar.c: 52: DtCO.indCO=0;
   231  005E94  6B8B               	clrf	(_DtCO+12)& (0+255),b
   232                           ;pomiar.c: 54: DtCW._err_CW=0;
   233  005E96  9170               	bcf	_DtCW& (0+255),0,b
   234                           ;pomiar.c: 55: DtCW._su_CW=0;
   235  005E98  9370               	bcf	_DtCW& (0+255),1,b
   236                           ;pomiar.c: 56: DtCW._ad_CW=0;
   237  005E9A  9570               	bcf	_DtCW& (0+255),2,b
   238                           ;pomiar.c: 57: DtCW._on_DZ_CW=0;
   239  005E9C  9970               	bcf	_DtCW& (0+255),4,b
   240                           ;pomiar.c: 58: DtCW._su_DZ_CW=0;
   241  005E9E  9B70               	bcf	_DtCW& (0+255),5,b
   242                           ;pomiar.c: 59: DtCW._ad_DZ_CW=0;
   243  005EA0  9D70               	bcf	_DtCW& (0+255),6,b
   244                           ;pomiar.c: 60: DtCW.indCW=0;
   245  005EA2  6B7A               	clrf	(_DtCW+10)& (0+255),b
   246                           ;pomiar.c: 62: DtCS._hi=0;
   247  005EA4  9163               	bcf	_DtCS& (0+255),0,b
   248                           ;pomiar.c: 63: DtCS._lo=0;
   249  005EA6  9363               	bcf	_DtCS& (0+255),1,b
   250                           ;pomiar.c: 64: DtCS._no=0;
   251  005EA8  9563               	bcf	_DtCS& (0+255),2,b
   252                           ;pomiar.c: 65: DtCS._error=0;
   253  005EAA  9763               	bcf	_DtCS& (0+255),3,b
   254                           ;pomiar.c: 66: DtCS._work=1;
   255  005EAC  8963               	bsf	_DtCS& (0+255),4,b
   256                           ;pomiar.c: 67: }
   257  005EAE  0012               	return	
   258  005EB0                     __end_of_InitDataPmr:
   259                           ;pomiar.c: 70: void IncPmrTimer(void)
   260                           ;pomiar.c: 71: {
   261  005EB0                     _IncPmrTimer:
   262  000000                     
   263                           ;pomiar.c: 72: if(PmrtimFlt1<0xff) PmrtimFlt1++;
   264  005EB0  CE89  F000         	movff	_PmrtimFlt1,btemp
   265  005EB4  2800               	incf	btemp,w,c
   266  005EB6  E002               	bz	l15
   267  005EB8  010E               	movlb	_PmrtimFlt1 shr (0+8)
   268  005EBA  2B89               	incf	_PmrtimFlt1& (0+255),f,b
   269  005EBC                     l15:
   270                           ;pomiar.c: 73: if(PmrtimFlt2<0xff) PmrtimFlt2++;
   271  005EBC  CE8A  F000         	movff	_PmrtimFlt2,btemp
   272  005EC0  2800               	incf	btemp,w,c
   273  005EC2  E002               	bz	l16
   274  005EC4  010E               	movlb	_PmrtimFlt2 shr (0+8)
   275  005EC6  2B8A               	incf	_PmrtimFlt2& (0+255),f,b
   276  005EC8                     l16:
   277                           ;pomiar.c: 74: if(PmrtimFlt3<0xffff) PmrtimFlt3+
      +                          +;
   278  005EC8  0100               	movlb	_PmrtimFlt3 shr (0+8)
   279  005ECA  1D60               	comf	(_PmrtimFlt3+1)& (0+255),w,b
   280  005ECC  0EFF               	movlw	255
   281  005ECE  B4D8               	btfsc	status,2,c
   282  005ED0  195F               	xorwf	_PmrtimFlt3& (0+255),w,b
   283  005ED2  B4D8               	btfsc	status,2,c
   284  005ED4  0012               	return	
   285  005ED6  4B5F               	infsnz	_PmrtimFlt3& (0+255),f,b
   286  005ED8  2B60               	incf	(_PmrtimFlt3+1)& (0+255),f,b
   287                           ;pomiar.c: 75: }
   288  005EDA  0012               	return	
   289  005EDC                     __end_of_IncPmrTimer:
   290                           ;pomiar.c: 78: void StartTim1(void)
   291                           ;pomiar.c: 79: {
   292  005EDC                     _StartTim1:
   293  000000                     
   294                           ;pomiar.c: 80: PmrtimFlt1=0;
   295  005EDC  010E               	movlb	_PmrtimFlt1 shr (0+8)
   296  005EDE  6B89               	clrf	_PmrtimFlt1& (0+255),b
   297                           ;pomiar.c: 81: }
   298  005EE0  0012               	return	
   299  005EE2                     __end_of_StartTim1:
   300                           ;pomiar.c: 82: bit PmrTim1(unsigned char tm)
   301                           ;pomiar.c: 83: {
   302  005EE2                     _PmrTim1:
   303  000000                     
   304                           ; _tm loaded to fsr2l
   305  005EE2  6ED9               	movwf	fsr2l,c
   306                           ;pomiar.c: 84: if(PmrtimFlt1<tm) return 0;
   307  005EE4  50D9               	movf	fsr2l,w,c
   308  005EE6  010E               	movlb	_PmrtimFlt1 shr (0+8)
   309  005EE8  6189               	cpfslt	_PmrtimFlt1& (0+255),b
   310  005EEA  D002               	goto	l20
   311  005EEC  90D8               	bcf	status,0,c
   312  005EEE  0012               	return	
   313  005EF0                     l20:
   314                           ;pomiar.c: 85: return 1;
   315  005EF0  80D8               	bsf	status,0,c
   316  005EF2  0012               	return	
   317                           ;pomiar.c: 86: }
   318  005EF4                     __end_of_PmrTim1:
   319                           ;pomiar.c: 89: void StartTim2(void)
   320                           ;pomiar.c: 90: {
   321  005EF4                     _StartTim2:
   322  000000                     
   323                           ;pomiar.c: 91: PmrtimFlt2=0;
   324  005EF4  010E               	movlb	_PmrtimFlt2 shr (0+8)
   325  005EF6  6B8A               	clrf	_PmrtimFlt2& (0+255),b
   326                           ;pomiar.c: 92: }
   327  005EF8  0012               	return	
   328  005EFA                     __end_of_StartTim2:
   329                           ;pomiar.c: 93: bit PmrTim2(unsigned char tm)
   330                           ;pomiar.c: 94: {
   331  005EFA                     _PmrTim2:
   332  000000                     
   333                           ; _tm loaded to fsr2l
   334  005EFA  6ED9               	movwf	fsr2l,c
   335                           ;pomiar.c: 95: if(PmrtimFlt2<tm) return 0;
   336  005EFC  50D9               	movf	fsr2l,w,c
   337  005EFE  010E               	movlb	_PmrtimFlt2 shr (0+8)
   338  005F00  618A               	cpfslt	_PmrtimFlt2& (0+255),b
   339  005F02  D002               	goto	l23
   340  005F04  90D8               	bcf	status,0,c
   341  005F06  0012               	return	
   342  005F08                     l23:
   343                           ;pomiar.c: 96: return 1;
   344  005F08  80D8               	bsf	status,0,c
   345  005F0A  0012               	return	
   346                           ;pomiar.c: 97: }
   347  005F0C                     __end_of_PmrTim2:
   348                           ;pomiar.c: 100: void StartTim3(void)
   349                           ;pomiar.c: 101: {
   350  005F0C                     _StartTim3:
   351  000000                     
   352                           ;pomiar.c: 102: PmrtimFlt3=0;
   353  005F0C  EE00  F05F         	lfsr	0,_PmrtimFlt3
   354  005F10  6AEE               	clrf	postinc0,c
   355  005F12  6AEE               	clrf	postinc0,c
   356                           ;pomiar.c: 103: }
   357  005F14  0012               	return	
   358  005F16                     __end_of_StartTim3:
   359                           ;       param _tm assigned to ?_PmrTim3+0
   360  000000                     _PmrTim3$tm	set	?_PmrTim3
   361                           ;pomiar.c: 104: bit PmrTim3(unsigned int tm)
   362                           ;pomiar.c: 105: {
   363  005F16  00A6               	dw	?_PmrTim3
   364  005F18                     _PmrTim3:
   365  000000                     
   366                           ;pomiar.c: 106: if(PmrtimFlt3<tm) return 0;
   367  005F18  C05F  F000         	movff	_PmrtimFlt3,btemp
   368  005F1C  C060  F001         	movff	_PmrtimFlt3+1,btemp+1
   369  005F20  0100               	movlb	__Lparam shr (0+8)
   370  005F22  51A7               	movf	(?_PmrTim3+1)^(__Lparam& (0+65280)),w
   371  005F24  5C01               	subwf	btemp+1,w,c
   372  005F26  E102               	bnz	u65
   373  005F28  51A6               	movf	?_PmrTim3^(__Lparam& (0+65280)),w
   374  005F2A  5C00               	subwf	btemp,w,c
   375  005F2C                     u65:
   376  005F2C  E202               	bc	l26
   377  005F2E  90D8               	bcf	status,0,c
   378  005F30  0012               	return	
   379  005F32                     l26:
   380                           ;pomiar.c: 107: return 1;
   381  005F32  80D8               	bsf	status,0,c
   382  005F34  0012               	return	
   383                           ;pomiar.c: 108: }
   384  005F36                     __end_of_PmrTim3:
   385                           ;pomiar.c: 111: void GoldenEye(void)
   386                           ;pomiar.c: 112: {
   387  005F36                     _GoldenEye:
   388  000000                     
   389                           ;pomiar.c: 113: signed char dt;
   390  005F36  C082  FFE8         	movff	_DtCO+3,wreg
   391  005F3A  0100               	movlb	(_DtCO+5) shr (0+8)
   392  005F3C  5D84               	subwf	(_DtCO+5)& (0+255),w,b
   393  005F3E  6EE1               	movwf	fsr1l,c
   394                           ;pomiar.c: 119: if((DtCO.CO>=(DtCO.PPCO+11))||(D
      +                          tCO.CO<=(DtCO.PPCO-11))) DtCO.SCO=DtCO.CO;
   395  005F40  0E0B               	movlw	11
   396  005F42  C084  F002         	movff	_DtCO+5,btemp+2
   397  005F46  6A03               	clrf	btemp+3,c
   398  005F48  2602               	addwf	btemp+2,f,c
   399  005F4A  0E00               	movlw	0
   400  005F4C  2203               	addwfc	btemp+3,f,c
   401  005F4E  C082  F000         	movff	_DtCO+3,btemp
   402  005F52  6A01               	clrf	btemp+1,c
   403  005F54  5001               	movf	btemp+1,w,c
   404  005F56  0A80               	xorlw	128
   405  005F58  6E04               	movwf	btemp+4,c
   406  005F5A  5003               	movf	btemp+3,w,c
   407  005F5C  0A80               	xorlw	128
   408  005F5E  5C04               	subwf	btemp+4,w,c
   409  005F60  E102               	bnz	u75
   410  005F62  5002               	movf	btemp+2,w,c
   411  005F64  5C00               	subwf	btemp,w,c
   412  005F66                     u75:
   413  005F66  E215               	bc	u90
   414  005F68  C082  F000         	movff	_DtCO+3,btemp
   415  005F6C  6A01               	clrf	btemp+1,c
   416  005F6E  C084  F002         	movff	_DtCO+5,btemp+2
   417  005F72  0EF5               	movlw	245
   418  005F74  2402               	addwf	btemp+2,w,c
   419  005F76  6EF6               	movwf	tblptrl,c
   420  005F78  6AF7               	clrf	tblptrh,c
   421  005F7A  0EFF               	movlw	255
   422  005F7C  22F7               	addwfc	tblptrh,f,c
   423  005F7E  50F7               	movf	tblptrh,w,c
   424  005F80  0A80               	xorlw	128
   425  005F82  6E02               	movwf	btemp+2,c
   426  005F84  5001               	movf	btemp+1,w,c
   427  005F86  0A80               	xorlw	128
   428  005F88  5C02               	subwf	btemp+2,w,c
   429  005F8A  E102               	bnz	u85
   430  005F8C  5000               	movf	btemp,w,c
   431  005F8E  5CF6               	subwf	tblptrl,w,c
   432  005F90                     u85:
   433  005F90  E303               	bnc	l28
   434  005F92                     u90:
   435  005F92  C082  F08C         	movff	_DtCO+3,_DtCO+13
   436  005F96  D06E               	goto	l29
   437  005F98                     l28:
   438                           ;pomiar.c: 120: else
   439  005F98  BEE1               	btfsc	fsr1l,7,c
   440  005F9A  D021               	goto	l30
   441                           ;pomiar.c: 123: {
   442                           ; _hist allocated to fsr0l
   443  005F9C  C090  FFE9         	movff	_DtCO+17,fsr0l
   444                           ;pomiar.c: 126: if(dt<3) pop=dt;
   445  005FA0  50E1               	movf	fsr1l,w,c
   446  005FA2  0A80               	xorlw	128
   447  005FA4  0F7D               	addlw	-131
   448  005FA6  50E1               	movf	fsr1l,w,c
   449  005FA8  E201               	bc	L37
   450  005FAA  D00F               	goto	L13
   451                           ;pomiar.c: 127: else
   452  005FAC                     L37:
   453  005FAC  0A80               	xorlw	128
   454  005FAE  0F7D               	addlw	-131
   455  005FB0  E306               	bnc	l33
   456  005FB2  50E1               	movf	fsr1l,w,c
   457  005FB4  0A80               	xorlw	128
   458  005FB6  0F77               	addlw	-137
   459  005FB8  E202               	bc	l33
   460  005FBA  0E03               	movlw	3
   461  005FBC  D006               	goto	L13
   462  005FBE                     l33:
   463                           ;pomiar.c: 129: else
   464  005FBE  50E1               	movf	fsr1l,w,c
   465  005FC0  0A80               	xorlw	128
   466  005FC2  0F77               	addlw	-137
   467  005FC4  E303               	bnc	l32
   468  005FC6  50E1               	movf	fsr1l,w,c
   469  005FC8  080B               	sublw	11
   470  005FCA                     L13:
   471  005FCA  6ED9               	movwf	fsr2l,c
   472  005FCC                     l32:
   473                           ;pomiar.c: 132: if(pop&&!hist) pop=pop-1;
   474  005FCC  50D9               	movf	fsr2l,w,c
   475  005FCE  E003               	bz	l36
   476  005FD0  50E9               	movf	fsr0l,w,c
   477  005FD2  E101               	bnz	l36
   478  005FD4  06D9               	decf	fsr2l,f,c
   479  005FD6                     l36:
   480                           ;pomiar.c: 133: DtCO.SCO=DtCO.CO+pop;
   481  005FD6  50D9               	movf	fsr2l,w,c
   482  005FD8  0100               	movlb	(_DtCO+3) shr (0+8)
   483  005FDA  2582               	addwf	(_DtCO+3)& (0+255),w,b
   484  005FDC  D049               	goto	L14
   485                           ;pomiar.c: 134: }
   486  005FDE                     l30:
   487                           ;pomiar.c: 135: else
   488                           ; _hist allocated to fsr2l
   489  005FDE  C090  FFD9         	movff	_DtCO+17,fsr2l
   490                           ;pomiar.c: 150: switch(DtKNF.tpkt)
   491  005FE2  D010               	goto	l39
   492  005FE4                     l40:
   493                           ;pomiar.c: 151: {
   494                           ;pomiar.c: 153: {
   495                           ;pomiar.c: 155: {
   496                           ;pomiar.c: 157: {
   497                           ;pomiar.c: 159: }
   498                           ;pomiar.c: 161: else
   499                           ;pomiar.c: 164: {
   500                           ;pomiar.c: 166: }
   501  005FE4                     l45:
   502                           ;pomiar.c: 169: }
   503                           ;pomiar.c: 171: {
   504  005FE4  EE01  F0CE         	lfsr	0,_DtKNF+26
   505  005FE8  50EF               	movf	indf0,w,c
   506  005FEA  E016               	bz	L31
   507                           ;pomiar.c: 173: {
   508                           ;pomiar.c: 175: {
   509                           ;pomiar.c: 177: }
   510                           ;pomiar.c: 179: else
   511                           ;pomiar.c: 195: }
   512  005FEC                     l51:
   513                           ;pomiar.c: 197: else
   514  005FEC  50D9               	movf	fsr2l,w,c
   515  005FEE  C084  F000         	movff	_DtCO+5,btemp
   516  005FF2  6A01               	clrf	btemp+1,c
   517  005FF4  2600               	addwf	btemp,f,c
   518  005FF6  0E00               	movlw	0
   519  005FF8  2201               	addwfc	btemp+1,f,c
   520  005FFA  5001               	movf	btemp+1,w,c
   521  005FFC  0A80               	xorlw	128
   522  005FFE  0F80               	addlw	-128
   523  006000  0E3D               	movlw	61
   524  006002  D015               	goto	L32
   525                           ;pomiar.c: 200: {
   526                           ;pomiar.c: 202: }
   527  006004                     l39:
   528  006004  C1C2  FFE8         	movff	_DtKNF+14,wreg
   529  006008  0A00               	xorlw	0
   530  00600A  E0EC               	bz	l45
   531  00600C  0A03               	xorlw	3
   532  00600E  E0EA               	bz	l40
   533                           ;pomiar.c: 182: {
   534                           ;pomiar.c: 184: }
   535                           ;pomiar.c: 187: }
   536                           ;pomiar.c: 189: {
   537  006010  EE01  F0CE         	lfsr	0,_DtKNF+26
   538  006014  50EF               	movf	indf0,w,c
   539  006016  E1EA               	bnz	l51
   540  006018                     L31:
   541                           ;pomiar.c: 191: {
   542  006018  50D9               	movf	fsr2l,w,c
   543  00601A  C084  F000         	movff	_DtCO+5,btemp
   544  00601E  6A01               	clrf	btemp+1,c
   545  006020  2600               	addwf	btemp,f,c
   546  006022  0E00               	movlw	0
   547  006024  2201               	addwfc	btemp+1,f,c
   548  006026  5001               	movf	btemp+1,w,c
   549  006028  0A80               	xorlw	128
   550  00602A  0F80               	addlw	-128
   551  00602C  0E56               	movlw	86
   552  00602E                     L32:
   553  00602E  B4D8               	btfsc	status,2,c
   554  006030  5C00               	subwf	btemp,w,c
   555  006032  E302               	bnc	l38
   556                           ;pomiar.c: 193: {
   557  006034  0E05               	movlw	5
   558  006036  6ED9               	movwf	fsr2l,c
   559  006038                     l38:
   560                           ;pomiar.c: 208: if(hist>1)
   561  006038  0E01               	movlw	1
   562  00603A  64D9               	cpfsgt	fsr2l,c
   563  00603C  D015               	goto	l55
   564                           ;pomiar.c: 209: {
   565  00603E  50D9               	movf	fsr2l,w,c
   566  006040  E013               	bz	l55
   567                           ;pomiar.c: 211: {
   568  006042  CFE1 F000          	movff	fsr1l,btemp
   569  006046  6A01               	clrf	btemp+1,c
   570  006048  BE00               	btfsc	btemp,7,c
   571  00604A  0601               	decf	btemp+1,f,c
   572  00604C  1E00               	comf	btemp,f,c
   573  00604E  1E01               	comf	btemp+1,f,c
   574  006050  4A00               	infsnz	btemp,f,c
   575  006052  2A01               	incf	btemp+1,f,c
   576  006054  5001               	movf	btemp+1,w,c
   577  006056  0A80               	xorlw	128
   578  006058  0F80               	addlw	-128
   579  00605A  0E01               	movlw	1
   580  00605C  B4D8               	btfsc	status,2,c
   581  00605E  5C00               	subwf	btemp,w,c
   582  006060  E203               	bc	l55
   583  006062  28E1               	incf	fsr1l,w,c
   584  006064  6ED9               	movwf	fsr2l,c
   585  006066  D001               	goto	l60
   586                           ;pomiar.c: 213: else pop=0;
   587                           ;pomiar.c: 214: }
   588                           ;pomiar.c: 215: else pop=0;
   589                           ;pomiar.c: 219: }
   590  006068                     l55:
   591                           ;pomiar.c: 220: else pop=0;
   592  006068  6AD9               	clrf	fsr2l,c
   593  00606A                     l60:
   594                           ;pomiar.c: 221: DtCO.SCO=DtCO.CO-pop;
   595  00606A  50D9               	movf	fsr2l,w,c
   596  00606C  0100               	movlb	(_DtCO+3) shr (0+8)
   597  00606E  5D82               	subwf	(_DtCO+3)& (0+255),w,b
   598  006070                     L14:
   599  006070  CFE8 F08C          	movff	wreg,_DtCO+13
   600  006074                     l29:
   601                           ;pomiar.c: 222: }
   602  006074  C08C  F32A         	movff	_DtCO+13,_RSDT1+4
   603                           ;pomiar.c: 227: if(DtKNF.tpkt!=0)
   604  006078  EE01  F0C2         	lfsr	0,_DtKNF+14
   605  00607C  50EF               	movf	indf0,w,c
   606  00607E  E101 D097          	bz	l61
   607                           ;pomiar.c: 228: {
   608  006082  C072  FFE8         	movff	_DtCW+2,wreg
   609  006086  0100               	movlb	(_DtCW+4) shr (0+8)
   610  006088  5D74               	subwf	(_DtCW+4)& (0+255),w,b
   611  00608A  6EE1               	movwf	fsr1l,c
   612                           ;pomiar.c: 230: if((DtCW.CW>=(DtCW.PPCW+11))||(D
      +                          tCW.CW<=(DtCW.PPCW-11))) DtCW.SCW=DtCW.CW;
   613  00608C  0E0B               	movlw	11
   614  00608E  C074  F002         	movff	_DtCW+4,btemp+2
   615  006092  6A03               	clrf	btemp+3,c
   616  006094  2602               	addwf	btemp+2,f,c
   617  006096  0E00               	movlw	0
   618  006098  2203               	addwfc	btemp+3,f,c
   619  00609A  C072  F000         	movff	_DtCW+2,btemp
   620  00609E  6A01               	clrf	btemp+1,c
   621  0060A0  5001               	movf	btemp+1,w,c
   622  0060A2  0A80               	xorlw	128
   623  0060A4  6E04               	movwf	btemp+4,c
   624  0060A6  5003               	movf	btemp+3,w,c
   625  0060A8  0A80               	xorlw	128
   626  0060AA  5C04               	subwf	btemp+4,w,c
   627  0060AC  E102               	bnz	u325
   628  0060AE  5002               	movf	btemp+2,w,c
   629  0060B0  5C00               	subwf	btemp,w,c
   630  0060B2                     u325:
   631  0060B2  E27E               	bc	l61
   632  0060B4  C072  F000         	movff	_DtCW+2,btemp
   633  0060B8  6A01               	clrf	btemp+1,c
   634  0060BA  C074  F002         	movff	_DtCW+4,btemp+2
   635  0060BE  0EF5               	movlw	245
   636  0060C0  2402               	addwf	btemp+2,w,c
   637  0060C2  6EF6               	movwf	tblptrl,c
   638  0060C4  6AF7               	clrf	tblptrh,c
   639  0060C6  0EFF               	movlw	255
   640  0060C8  22F7               	addwfc	tblptrh,f,c
   641  0060CA  50F7               	movf	tblptrh,w,c
   642  0060CC  0A80               	xorlw	128
   643  0060CE  6E02               	movwf	btemp+2,c
   644  0060D0  5001               	movf	btemp+1,w,c
   645  0060D2  0A80               	xorlw	128
   646  0060D4  5C02               	subwf	btemp+2,w,c
   647  0060D6  E102               	bnz	u335
   648  0060D8  5000               	movf	btemp,w,c
   649  0060DA  5CF6               	subwf	tblptrl,w,c
   650  0060DC                     u335:
   651  0060DC  E269               	bc	l61
   652                           ;pomiar.c: 231: else
   653  0060DE  BEE1               	btfsc	fsr1l,7,c
   654  0060E0  D01C               	goto	l64
   655                           ;pomiar.c: 234: {
   656  0060E2  50E1               	movf	fsr1l,w,c
   657  0060E4  0A80               	xorlw	128
   658  0060E6  0F7D               	addlw	-131
   659  0060E8  50E1               	movf	fsr1l,w,c
   660  0060EA  E201               	bc	L38
   661  0060EC  D00F               	goto	L15
   662                           ;pomiar.c: 236: else
   663  0060EE                     L38:
   664  0060EE  0A80               	xorlw	128
   665  0060F0  0F7D               	addlw	-131
   666  0060F2  E306               	bnc	l67
   667  0060F4  50E1               	movf	fsr1l,w,c
   668  0060F6  0A80               	xorlw	128
   669  0060F8  0F77               	addlw	-137
   670  0060FA  E202               	bc	l67
   671  0060FC  0E03               	movlw	3
   672  0060FE  D006               	goto	L15
   673  006100                     l67:
   674                           ;pomiar.c: 238: else
   675  006100  50E1               	movf	fsr1l,w,c
   676  006102  0A80               	xorlw	128
   677  006104  0F77               	addlw	-137
   678  006106  E303               	bnc	l66
   679  006108  50E1               	movf	fsr1l,w,c
   680  00610A  080B               	sublw	11
   681  00610C                     L15:
   682  00610C  6ED9               	movwf	fsr2l,c
   683  00610E                     l66:
   684                           ;pomiar.c: 240: DtCW.SCW=DtCW.CW+pop;
   685  00610E  50D9               	movf	fsr2l,w,c
   686  006110  0100               	movlb	(_DtCW+2) shr (0+8)
   687  006112  2572               	addwf	(_DtCW+2)& (0+255),w,b
   688  006114                     L4:
   689  006114  CFE8 F07B          	movff	wreg,_DtCW+11
   690                           ;pomiar.c: 241: }
   691  006118  D04D               	goto	l76
   692  00611A                     l64:
   693                           ;pomiar.c: 242: else
   694  00611A  CFE1 F000          	movff	fsr1l,btemp
   695  00611E  6A01               	clrf	btemp+1,c
   696  006120  BE00               	btfsc	btemp,7,c
   697  006122  0601               	decf	btemp+1,f,c
   698  006124  1E00               	comf	btemp,f,c
   699  006126  1E01               	comf	btemp+1,f,c
   700  006128  4A00               	infsnz	btemp,f,c
   701  00612A  2A01               	incf	btemp+1,f,c
   702  00612C  5001               	movf	btemp+1,w,c
   703  00612E  0A80               	xorlw	128
   704  006130  0F80               	addlw	-128
   705  006132  0E01               	movlw	1
   706  006134  B4D8               	btfsc	status,2,c
   707  006136  5C00               	subwf	btemp,w,c
   708  006138  E202               	bc	l71
   709  00613A  28E1               	incf	fsr1l,w,c
   710  00613C  D034               	goto	L16
   711  00613E                     l71:
   712                           ;pomiar.c: 246: else
   713  00613E  CFE1 F000          	movff	fsr1l,btemp
   714  006142  6A01               	clrf	btemp+1,c
   715  006144  BE00               	btfsc	btemp,7,c
   716  006146  0601               	decf	btemp+1,f,c
   717  006148  1E00               	comf	btemp,f,c
   718  00614A  1E01               	comf	btemp+1,f,c
   719  00614C  4A00               	infsnz	btemp,f,c
   720  00614E  2A01               	incf	btemp+1,f,c
   721  006150  5001               	movf	btemp+1,w,c
   722  006152  0A80               	xorlw	128
   723  006154  0F80               	addlw	-128
   724  006156  0E01               	movlw	1
   725  006158  B4D8               	btfsc	status,2,c
   726  00615A  5C00               	subwf	btemp,w,c
   727  00615C  E312               	bnc	l73
   728  00615E  CFE1 F000          	movff	fsr1l,btemp
   729  006162  6A01               	clrf	btemp+1,c
   730  006164  BE00               	btfsc	btemp,7,c
   731  006166  0601               	decf	btemp+1,f,c
   732  006168  1E00               	comf	btemp,f,c
   733  00616A  1E01               	comf	btemp+1,f,c
   734  00616C  4A00               	infsnz	btemp,f,c
   735  00616E  2A01               	incf	btemp+1,f,c
   736  006170  5001               	movf	btemp+1,w,c
   737  006172  0A80               	xorlw	128
   738  006174  0F80               	addlw	-128
   739  006176  0E05               	movlw	5
   740  006178  B4D8               	btfsc	status,2,c
   741  00617A  5C00               	subwf	btemp,w,c
   742  00617C  E202               	bc	l73
   743  00617E  0E01               	movlw	1
   744  006180  D012               	goto	L16
   745  006182                     l73:
   746                           ;pomiar.c: 248: else
   747  006182  CFE1 F000          	movff	fsr1l,btemp
   748  006186  6A01               	clrf	btemp+1,c
   749  006188  BE00               	btfsc	btemp,7,c
   750  00618A  0601               	decf	btemp+1,f,c
   751  00618C  1E00               	comf	btemp,f,c
   752  00618E  1E01               	comf	btemp+1,f,c
   753  006190  4A00               	infsnz	btemp,f,c
   754  006192  2A01               	incf	btemp+1,f,c
   755  006194  5001               	movf	btemp+1,w,c
   756  006196  0A80               	xorlw	128
   757  006198  0F80               	addlw	-128
   758  00619A  0E05               	movlw	5
   759  00619C  B4D8               	btfsc	status,2,c
   760  00619E  5C00               	subwf	btemp,w,c
   761  0061A0  E303               	bnc	l72
   762  0061A2  50E1               	movf	fsr1l,w,c
   763  0061A4  0F05               	addlw	5
   764  0061A6                     L16:
   765  0061A6  6ED9               	movwf	fsr2l,c
   766  0061A8                     l72:
   767                           ;pomiar.c: 250: DtCW.SCW=DtCW.CW-pop;
   768  0061A8  50D9               	movf	fsr2l,w,c
   769  0061AA  0100               	movlb	(_DtCW+2) shr (0+8)
   770  0061AC  5D72               	subwf	(_DtCW+2)& (0+255),w,b
   771  0061AE  D7B2               	goto	L4
   772                           ;pomiar.c: 251: }
   773  0061B0                     l61:
   774                           ;pomiar.c: 254: else DtCW.SCW=DtCW.CW;
   775  0061B0  C072  F07B         	movff	_DtCW+2,_DtCW+11
   776  0061B4                     l76:
   777                           ;pomiar.c: 255: RSDT1.outCW=DtCW.SCW;
   778  0061B4  C07B  F32B         	movff	_DtCW+11,_RSDT1+5
   779                           ;pomiar.c: 256: }
   780  0061B8  0012               	return	
   781  0061BA                     __end_of_GoldenEye:
   782                           ;pomiar.c: 259: void PredkoscZmianCW(void)
   783                           ;pomiar.c: 260: {
   784  0061BA                     _PredkoscZmianCW:
   785  000000                     
   786                           ;pomiar.c: 261: static unsigned char ffcw,indff;
   787  0061BA  0103               	movlb	(_M+4) shr (0+8)
   788  0061BC  B30A               	btfsc	(_M+4)& (0+255),1,b
   789  0061BE  D005               	goto	l78
   790                           ;pomiar.c: 265: {
   791  0061C0  010E               	movlb	F1584 shr (0+8)
   792  0061C2  6B7D               	clrf	F1584& (0+255),b
   793                           ;pomiar.c: 267: indff=0;
   794  0061C4  010E               	movlb	F1585 shr (0+8)
   795  0061C6  6B7E               	clrf	F1585& (0+255),b
   796                           ;pomiar.c: 268: }
   797  0061C8  D036               	goto	l79
   798  0061CA                     l78:
   799                           ;pomiar.c: 269: else
   800  0061CA  010E               	movlb	F1585 shr (0+8)
   801  0061CC  537E               	movf	F1585& (0+255),f,b
   802  0061CE  E10C               	bnz	l80
   803                           ;pomiar.c: 272: {
   804  0061D0  6AD9               	clrf	fsr2l,c
   805  0061D2                     l81:
   806  0061D2  50D9               	movf	fsr2l,w,c
   807  0061D4  EE0E  F08B         	lfsr	0,_wff
   808  0061D8  26E9               	addwf	fsr0l,f,c
   809  0061DA  0E00               	movlw	0
   810  0061DC  22EA               	addwfc	fsr0h,f,c
   811  0061DE  6AEF               	clrf	indf0,c
   812  0061E0  2AD9               	incf	fsr2l,f,c
   813  0061E2  0E09               	movlw	9
   814  0061E4  64D9               	cpfsgt	fsr2l,c
   815  0061E6  D7F5               	goto	l81
   816  0061E8                     l80:
   817                           ;pomiar.c: 274: }
   818  0061E8  010E               	movlb	F1585 shr (0+8)
   819  0061EA  2B7E               	incf	F1585& (0+255),f,b
   820                           ;pomiar.c: 276: if(indff>=9)
   821  0061EC  0E08               	movlw	8
   822  0061EE  657E               	cpfsgt	F1585& (0+255),b
   823  0061F0  D016               	goto	l84
   824                           ;pomiar.c: 277: {
   825  0061F2  0E09               	movlw	9
   826  0061F4  CFE8 FE7E          	movff	wreg,F1585
   827                           ;pomiar.c: 279: for(i=0;i<9;i++) wff[i]=wff[i+1]
      +                          ;
   828  0061F8  6AD9               	clrf	fsr2l,c
   829  0061FA                     l85:
   830  0061FA  50D9               	movf	fsr2l,w,c
   831  0061FC  EE1E  F08C         	lfsr	1,_wff+1
   832  006200  26E1               	addwf	fsr1l,f,c
   833  006202  0E00               	movlw	0
   834  006204  22E2               	addwfc	fsr1h,f,c
   835  006206  50D9               	movf	fsr2l,w,c
   836  006208  EE0E  F08B         	lfsr	0,_wff
   837  00620C  26E9               	addwf	fsr0l,f,c
   838  00620E  0E00               	movlw	0
   839  006210  22EA               	addwfc	fsr0h,f,c
   840  006212  CFE7 FFEF          	movff	indf1,indf0
   841  006216  2AD9               	incf	fsr2l,f,c
   842  006218  0E08               	movlw	8
   843  00621A  64D9               	cpfsgt	fsr2l,c
   844  00621C  D7EE               	goto	l85
   845  00621E                     l84:
   846                           ;pomiar.c: 280: }
   847  00621E  CE7E  FFE8         	movff	F1585,wreg
   848  006222  EE0E  F08B         	lfsr	0,_wff
   849  006226  26E9               	addwf	fsr0l,f,c
   850  006228  0E00               	movlw	0
   851  00622A  22EA               	addwfc	fsr0h,f,c
   852  00622C  CE7D  FFE8         	movff	F1584,wreg
   853  006230  0100               	movlb	(_DtCW+2) shr (0+8)
   854  006232  5D72               	subwf	(_DtCW+2)& (0+255),w,b
   855  006234  6EEF               	movwf	indf0,c
   856  006236                     l79:
   857                           ;pomiar.c: 282: }
   858  006236  C072  FE7D         	movff	_DtCW+2,F1584
   859                           ;pomiar.c: 284: w=0;
   860  00623A  6AE1               	clrf	fsr1l,c
   861                           ;pomiar.c: 285: for(i=0;i<10;i++) w+=wff[i];
   862  00623C  6AD9               	clrf	fsr2l,c
   863  00623E                     l88:
   864  00623E  50D9               	movf	fsr2l,w,c
   865  006240  EE0E  F08B         	lfsr	0,_wff
   866  006244  26E9               	addwf	fsr0l,f,c
   867  006246  0E00               	movlw	0
   868  006248  22EA               	addwfc	fsr0h,f,c
   869  00624A  50EF               	movf	indf0,w,c
   870  00624C  26E1               	addwf	fsr1l,f,c
   871  00624E  2AD9               	incf	fsr2l,f,c
   872  006250  0E09               	movlw	9
   873  006252  64D9               	cpfsgt	fsr2l,c
   874  006254  D7F4               	goto	l88
   875                           ;pomiar.c: 286: DtCW.ddDCW=w;
   876  006256  CFE1 F079          	movff	fsr1l,_DtCW+9
   877                           ;pomiar.c: 287: }
   878  00625A  0C09               	retlw	9
   879  00625C                     __end_of_PredkoscZmianCW:
   880                           ;pomiar.c: 288: void PredkoscZmianCO(void)
   881                           ;pomiar.c: 289: {
   882  00625C                     _PredkoscZmianCO:
   883  000000                     
   884                           ;pomiar.c: 290: static unsigned char ffco,indff;
   885  00625C  0103               	movlb	(_M+4) shr (0+8)
   886  00625E  B30A               	btfsc	(_M+4)& (0+255),1,b
   887  006260  D005               	goto	l92
   888                           ;pomiar.c: 294: {
   889  006262  010E               	movlb	F1590 shr (0+8)
   890  006264  6B7F               	clrf	F1590& (0+255),b
   891                           ;pomiar.c: 296: indff=0;
   892  006266  010E               	movlb	F1591 shr (0+8)
   893  006268  6B80               	clrf	F1591& (0+255),b
   894                           ;pomiar.c: 297: }
   895  00626A  D036               	goto	l93
   896  00626C                     l92:
   897                           ;pomiar.c: 298: else
   898  00626C  010E               	movlb	F1591 shr (0+8)
   899  00626E  5380               	movf	F1591& (0+255),f,b
   900  006270  E10C               	bnz	l94
   901                           ;pomiar.c: 301: {
   902  006272  6AD9               	clrf	fsr2l,c
   903  006274                     l95:
   904  006274  50D9               	movf	fsr2l,w,c
   905  006276  EE0E  F097         	lfsr	0,_wff2
   906  00627A  26E9               	addwf	fsr0l,f,c
   907  00627C  0E00               	movlw	0
   908  00627E  22EA               	addwfc	fsr0h,f,c
   909  006280  6AEF               	clrf	indf0,c
   910  006282  2AD9               	incf	fsr2l,f,c
   911  006284  0E09               	movlw	9
   912  006286  64D9               	cpfsgt	fsr2l,c
   913  006288  D7F5               	goto	l95
   914  00628A                     l94:
   915                           ;pomiar.c: 303: }
   916  00628A  010E               	movlb	F1591 shr (0+8)
   917  00628C  2B80               	incf	F1591& (0+255),f,b
   918                           ;pomiar.c: 305: if(indff>=9)
   919  00628E  0E08               	movlw	8
   920  006290  6580               	cpfsgt	F1591& (0+255),b
   921  006292  D016               	goto	l98
   922                           ;pomiar.c: 306: {
   923  006294  0E09               	movlw	9
   924  006296  CFE8 FE80          	movff	wreg,F1591
   925                           ;pomiar.c: 308: for(i=0;i<9;i++) wff2[i]=wff2[i+
      +                          1];
   926  00629A  6AD9               	clrf	fsr2l,c
   927  00629C                     l99:
   928  00629C  50D9               	movf	fsr2l,w,c
   929  00629E  EE1E  F098         	lfsr	1,_wff2+1
   930  0062A2  26E1               	addwf	fsr1l,f,c
   931  0062A4  0E00               	movlw	0
   932  0062A6  22E2               	addwfc	fsr1h,f,c
   933  0062A8  50D9               	movf	fsr2l,w,c
   934  0062AA  EE0E  F097         	lfsr	0,_wff2
   935  0062AE  26E9               	addwf	fsr0l,f,c
   936  0062B0  0E00               	movlw	0
   937  0062B2  22EA               	addwfc	fsr0h,f,c
   938  0062B4  CFE7 FFEF          	movff	indf1,indf0
   939  0062B8  2AD9               	incf	fsr2l,f,c
   940  0062BA  0E08               	movlw	8
   941  0062BC  64D9               	cpfsgt	fsr2l,c
   942  0062BE  D7EE               	goto	l99
   943  0062C0                     l98:
   944                           ;pomiar.c: 309: }
   945  0062C0  CE80  FFE8         	movff	F1591,wreg
   946  0062C4  EE0E  F097         	lfsr	0,_wff2
   947  0062C8  26E9               	addwf	fsr0l,f,c
   948  0062CA  0E00               	movlw	0
   949  0062CC  22EA               	addwfc	fsr0h,f,c
   950  0062CE  CE7F  FFE8         	movff	F1590,wreg
   951  0062D2  0100               	movlb	(_DtCO+3) shr (0+8)
   952  0062D4  5D82               	subwf	(_DtCO+3)& (0+255),w,b
   953  0062D6  6EEF               	movwf	indf0,c
   954  0062D8                     l93:
   955                           ;pomiar.c: 311: }
   956  0062D8  C082  FE7F         	movff	_DtCO+3,F1590
   957                           ;pomiar.c: 313: w=0;
   958  0062DC  6AE1               	clrf	fsr1l,c
   959                           ;pomiar.c: 314: for(i=0;i<10;i++) w+=wff2[i];
   960  0062DE  6AD9               	clrf	fsr2l,c
   961  0062E0                     l102:
   962  0062E0  50D9               	movf	fsr2l,w,c
   963  0062E2  EE0E  F097         	lfsr	0,_wff2
   964  0062E6  26E9               	addwf	fsr0l,f,c
   965  0062E8  0E00               	movlw	0
   966  0062EA  22EA               	addwfc	fsr0h,f,c
   967  0062EC  50EF               	movf	indf0,w,c
   968  0062EE  26E1               	addwf	fsr1l,f,c
   969  0062F0  2AD9               	incf	fsr2l,f,c
   970  0062F2  0E09               	movlw	9
   971  0062F4  64D9               	cpfsgt	fsr2l,c
   972  0062F6  D7F4               	goto	l102
   973                           ;pomiar.c: 315: DtCO.ddDCO=w;
   974  0062F8  CFE1 F08A          	movff	fsr1l,_DtCO+11
   975                           ;pomiar.c: 316: }
   976  0062FC  0C09               	retlw	9
   977  0062FE                     __end_of_PredkoscZmianCO:
   978                           ;pomiar.c: 319: void FltParMod(void)
   979                           ;pomiar.c: 320: {
   980  0062FE                     _FltParMod:
   981  000000                     
   982                           ;pomiar.c: 321: static unsigned char indtm,fco,f
      +                          cw;
   983  0062FE  C082  FFE8         	movff	_DtCO+3,wreg
   984  006302  010E               	movlb	F1597 shr (0+8)
   985  006304  6182               	cpfslt	F1597& (0+255),b
   986  006306  D005               	goto	l106
   987  006308  CE82  FFE8         	movff	F1597,wreg
   988  00630C  0100               	movlb	(_DtCO+3) shr (0+8)
   989  00630E  5D82               	subwf	(_DtCO+3)& (0+255),w,b
   990  006310  D004               	goto	L5
   991  006312                     l106:
   992                           ;pomiar.c: 328: else wr=fco-DtCO.CO;
   993  006312  C082  FFE8         	movff	_DtCO+3,wreg
   994  006316  010E               	movlb	F1597 shr (0+8)
   995  006318  5D82               	subwf	F1597& (0+255),w,b
   996  00631A                     L5:
   997  00631A  6ED9               	movwf	fsr2l,c
   998                           ;pomiar.c: 329: if(wr) DtCO.indCO++;
   999  00631C  50D9               	movf	fsr2l,w,c
  1000  00631E  E002               	bz	l108
  1001  006320  0100               	movlb	(_DtCO+12) shr (0+8)
  1002  006322  2B8B               	incf	(_DtCO+12)& (0+255),f,b
  1003  006324                     l108:
  1004                           ;pomiar.c: 330: if(wr>=2) DtCO.indCO=10;
  1005  006324  0E01               	movlw	1
  1006  006326  64D9               	cpfsgt	fsr2l,c
  1007  006328  D003               	goto	l109
  1008  00632A  0E0A               	movlw	10
  1009  00632C  CFE8 F08B          	movff	wreg,_DtCO+12
  1010  006330                     l109:
  1011                           ;pomiar.c: 331: PredkoscZmianCO();
  1012  006330  DF95               	call	_PredkoscZmianCO	;wreg free
  1013                           ;pomiar.c: 333: if(DtCW.CW>fcw) wr=DtCW.CW-fcw;
  1014  006332  C072  FFE8         	movff	_DtCW+2,wreg
  1015  006336  010E               	movlb	F1598 shr (0+8)
  1016  006338  6183               	cpfslt	F1598& (0+255),b
  1017  00633A  D005               	goto	l110
  1018  00633C  CE83  FFE8         	movff	F1598,wreg
  1019  006340  0100               	movlb	(_DtCW+2) shr (0+8)
  1020  006342  5D72               	subwf	(_DtCW+2)& (0+255),w,b
  1021  006344  D004               	goto	L6
  1022  006346                     l110:
  1023                           ;pomiar.c: 334: else wr=fcw-DtCW.CW;
  1024  006346  C072  FFE8         	movff	_DtCW+2,wreg
  1025  00634A  010E               	movlb	F1598 shr (0+8)
  1026  00634C  5D83               	subwf	F1598& (0+255),w,b
  1027  00634E                     L6:
  1028  00634E  6ED9               	movwf	fsr2l,c
  1029                           ;pomiar.c: 335: if(wr) DtCW.indCW++;
  1030  006350  50D9               	movf	fsr2l,w,c
  1031  006352  E002               	bz	l112
  1032  006354  0100               	movlb	(_DtCW+10) shr (0+8)
  1033  006356  2B7A               	incf	(_DtCW+10)& (0+255),f,b
  1034  006358                     l112:
  1035                           ;pomiar.c: 336: if(wr>=2) DtCW.indCW=10;
  1036  006358  0E01               	movlw	1
  1037  00635A  64D9               	cpfsgt	fsr2l,c
  1038  00635C  D003               	goto	l113
  1039  00635E  0E0A               	movlw	10
  1040  006360  CFE8 F07A          	movff	wreg,_DtCW+10
  1041  006364                     l113:
  1042                           ;pomiar.c: 337: PredkoscZmianCW();
  1043  006364  DF2A               	call	_PredkoscZmianCW	;wreg free
  1044                           ;pomiar.c: 340: indtm++;
  1045  006366  010E               	movlb	F1596 shr (0+8)
  1046  006368  2B81               	incf	F1596& (0+255),f,b
  1047                           ;pomiar.c: 341: if(indtm>9)
  1048  00636A  0E09               	movlw	9
  1049  00636C  6581               	cpfsgt	F1596& (0+255),b
  1050  00636E  0C09               	retlw	9
  1051                           ;pomiar.c: 342: {
  1052  006370  6B81               	clrf	F1596& (0+255),b
  1053                           ;pomiar.c: 345: DtZW.SZW=DtZW.ZW;
  1054  006372  C069  F06A         	movff	_DtZW+2,_DtZW+3
  1055                           ;pomiar.c: 348: if(DtCO.indCO<=7)
  1056  006376  0E08               	movlw	8
  1057  006378  0100               	movlb	(_DtCO+12) shr (0+8)
  1058  00637A  618B               	cpfslt	(_DtCO+12)& (0+255),b
  1059  00637C  D003               	goto	l115
  1060                           ;pomiar.c: 349: {
  1061  00637E  6B89               	clrf	(_DtCO+10)& (0+255),b
  1062                           ;pomiar.c: 351: DtCO._fpCO=1;
  1063  006380  8181               	bsf	(_DtCO+2)& (0+255),0,b
  1064                           ;pomiar.c: 352: }
  1065  006382  D009               	goto	l116
  1066  006384                     l115:
  1067                           ;pomiar.c: 353: else
  1068  006384  CE82  FFE8         	movff	F1597,wreg
  1069  006388  0100               	movlb	(_DtCO+3) shr (0+8)
  1070  00638A  5D82               	subwf	(_DtCO+3)& (0+255),w,b
  1071  00638C  CFE8 F089          	movff	wreg,_DtCO+10
  1072                           ;pomiar.c: 356: DtCO._fpCO=1;
  1073  006390  8181               	bsf	(_DtCO+2)& (0+255),0,b
  1074                           ;pomiar.c: 357: fco=DtCO.CO;
  1075  006392  C082  FE82         	movff	_DtCO+3,F1597
  1076  006396                     l116:
  1077                           ;pomiar.c: 358: }
  1078  006396  0100               	movlb	(_DtCO+12) shr (0+8)
  1079  006398  6B8B               	clrf	(_DtCO+12)& (0+255),b
  1080                           ;pomiar.c: 361: if(DtCW.indCW<=7)
  1081  00639A  0E08               	movlw	8
  1082  00639C  617A               	cpfslt	(_DtCW+10)& (0+255),b
  1083  00639E  D003               	goto	l117
  1084                           ;pomiar.c: 362: {
  1085  0063A0  6B78               	clrf	(_DtCW+8)& (0+255),b
  1086                           ;pomiar.c: 364: DtCW._fpCW=1;
  1087  0063A2  8571               	bsf	(_DtCW+1)& (0+255),2,b
  1088                           ;pomiar.c: 365: }
  1089  0063A4  D009               	goto	l118
  1090  0063A6                     l117:
  1091                           ;pomiar.c: 366: else
  1092  0063A6  CE83  FFE8         	movff	F1598,wreg
  1093  0063AA  0100               	movlb	(_DtCW+2) shr (0+8)
  1094  0063AC  5D72               	subwf	(_DtCW+2)& (0+255),w,b
  1095  0063AE  CFE8 F078          	movff	wreg,_DtCW+8
  1096                           ;pomiar.c: 369: DtCW._fpCW=1;
  1097  0063B2  8571               	bsf	(_DtCW+1)& (0+255),2,b
  1098                           ;pomiar.c: 370: fcw=DtCW.CW;
  1099  0063B4  C072  FE83         	movff	_DtCW+2,F1598
  1100  0063B8                     l118:
  1101                           ;pomiar.c: 371: }
  1102  0063B8  0100               	movlb	(_DtCW+10) shr (0+8)
  1103  0063BA  6B7A               	clrf	(_DtCW+10)& (0+255),b
  1104                           ;pomiar.c: 373: }
  1105  0063BC  0012               	return	
  1106  0063BE                     __end_of_FltParMod:
  1107                           ;pomiar.c: 378: void FiltrPomiarowyCOCW(void)
  1108                           ;pomiar.c: 379: {
  1109  0063BE                     _FiltrPomiarowyCOCW:
  1110  000000                     
  1111                           ;pomiar.c: 382: if(PmrTim1(20))
  1112  0063BE  0E14               	movlw	20
  1113  0063C0  DD90               	call	_PmrTim1
  1114  0063C2  E302               	bnc	l120
  1115                           ;pomiar.c: 383: {
  1116  0063C4  DD8B               	call	_StartTim1	;wreg free
  1117                           ;pomiar.c: 385: GoldenEye();
  1118  0063C6  DDB7               	call	_GoldenEye	;wreg free
  1119  0063C8                     l120:
  1120                           ;pomiar.c: 386: }
  1121  0063C8  C082  F000         	movff	_DtCO+3,btemp
  1122  0063CC  C084  F001         	movff	_DtCO+5,btemp+1
  1123  0063D0  0EFE               	movlw	-2
  1124  0063D2  2601               	addwf	btemp+1,f,c
  1125  0063D4  5000               	movf	btemp,w,c
  1126  0063D6  5C01               	subwf	btemp+1,w,c
  1127  0063D8  CFE8 F088          	movff	wreg,_DtCO+9
  1128                           ;pomiar.c: 391: DtCW.DCW=(DtCW.PPCW-(3-1))-DtCW.
      +                          CW;
  1129  0063DC  C072  F000         	movff	_DtCW+2,btemp
  1130  0063E0  C074  F001         	movff	_DtCW+4,btemp+1
  1131  0063E4  0EFE               	movlw	-2
  1132  0063E6  2601               	addwf	btemp+1,f,c
  1133  0063E8  5000               	movf	btemp,w,c
  1134  0063EA  5C01               	subwf	btemp+1,w,c
  1135  0063EC  CFE8 F077          	movff	wreg,_DtCW+7
  1136                           ;pomiar.c: 393: if(!DtIN._err_IN)
  1137  0063F0  0100               	movlb	_DtIN shr (0+8)
  1138  0063F2  B192               	btfsc	_DtIN& (0+255),0,b
  1139  0063F4  D02E               	goto	l121
  1140                           ;pomiar.c: 394: {
  1141  0063F6  C082  FFE8         	movff	_DtCO+3,wreg
  1142  0063FA  6194               	cpfslt	(_DtIN+2)& (0+255),b
  1143  0063FC  D006               	goto	l122
  1144  0063FE  C094  FFE8         	movff	_DtIN+2,wreg
  1145  006402  5D82               	subwf	(_DtCO+3)& (0+255),w,b
  1146  006404  CFE8 F095          	movff	wreg,_DtIN+3
  1147  006408  D002               	goto	l123
  1148  00640A                     l122:
  1149                           ;pomiar.c: 397: else DtIN.DIN=0;
  1150  00640A  0100               	movlb	(_DtIN+3) shr (0+8)
  1151  00640C  6B95               	clrf	(_DtIN+3)& (0+255),b
  1152  00640E                     l123:
  1153                           ;pomiar.c: 399: if((DtCO.PPCO-(3-1))>DtIN.IN) Dt
      +                          IN.DIN2=(DtCO.PPCO-(3-1))-DtIN.IN;
  1154  00640E  C084  F000         	movff	_DtCO+5,btemp
  1155  006412  0EFE               	movlw	254
  1156  006414  2400               	addwf	btemp,w,c
  1157  006416  6E02               	movwf	btemp+2,c
  1158  006418  6A03               	clrf	btemp+3,c
  1159  00641A  0EFF               	movlw	255
  1160  00641C  2203               	addwfc	btemp+3,f,c
  1161  00641E  C094  F000         	movff	_DtIN+2,btemp
  1162  006422  6A01               	clrf	btemp+1,c
  1163  006424  5001               	movf	btemp+1,w,c
  1164  006426  0A80               	xorlw	128
  1165  006428  6E04               	movwf	btemp+4,c
  1166  00642A  5003               	movf	btemp+3,w,c
  1167  00642C  0A80               	xorlw	128
  1168  00642E  5C04               	subwf	btemp+4,w,c
  1169  006430  E102               	bnz	u705
  1170  006432  5002               	movf	btemp+2,w,c
  1171  006434  5C00               	subwf	btemp,w,c
  1172  006436                     u705:
  1173  006436  E20B               	bc	l124
  1174  006438  C094  F000         	movff	_DtIN+2,btemp
  1175  00643C  C084  F001         	movff	_DtCO+5,btemp+1
  1176  006440  0EFE               	movlw	-2
  1177  006442  2601               	addwf	btemp+1,f,c
  1178  006444  5000               	movf	btemp,w,c
  1179  006446  5C01               	subwf	btemp+1,w,c
  1180  006448  CFE8 F096          	movff	wreg,_DtIN+4
  1181  00644C  D002               	goto	l121
  1182  00644E                     l124:
  1183                           ;pomiar.c: 400: else DtIN.DIN2=0;
  1184  00644E  0100               	movlb	(_DtIN+4) shr (0+8)
  1185  006450  6B96               	clrf	(_DtIN+4)& (0+255),b
  1186  006452                     l121:
  1187                           ;pomiar.c: 401: }
  1188  006452  0E0A               	movlw	10
  1189  006454  DD52               	call	_PmrTim2
  1190  006456  E302               	bnc	l126
  1191                           ;pomiar.c: 403: {
  1192  006458  DD4D               	call	_StartTim2	;wreg free
  1193                           ;pomiar.c: 405: FltParMod();
  1194  00645A  DF51               	call	_FltParMod	;wreg free
  1195  00645C                     l126:
  1196                           ;pomiar.c: 406: }
  1197  00645C  C089  FFE8         	movff	_DtCO+10,wreg
  1198  006460  0A80               	xorlw	128
  1199  006462  0F7A               	addlw	-134
  1200  006464  0100               	movlb	(_DtCO+1) shr (0+8)
  1201  006466  E302               	bnc	L39
  1202  006468  8980               	bsf	(_DtCO+1)& (0+255),4,b
  1203  00646A  0012               	return	
  1204                           ;pomiar.c: 408: else DtCO._ldDCO=0;
  1205  00646C                     L39:
  1206  00646C  9980               	bcf	(_DtCO+1)& (0+255),4,b
  1207                           ;pomiar.c: 409: }
  1208  00646E  0012               	return	
  1209  006470                     __end_of_FiltrPomiarowyCOCW:
  1210                           ;pomiar.c: 412: void PomiarCO(void)
  1211                           ;pomiar.c: 413: {
  1212  006470                     _PomiarCO:
  1213  000000                     
  1214                           ;pomiar.c: 414: DtCO.AC_CO=ReadAC(0);
  1215  006470  0E00               	movlw	0
  1216  006472  EC33  F068         	call	_ReadAC
  1217  006476  CFE8 F08D          	movff	wreg,_DtCO+14
  1218                           ;pomiar.c: 415: DtCO.CO=ReadTabNTC(DtCO.AC_CO);
  1219  00647A  C08D  FFE8         	movff	_DtCO+14,wreg
  1220  00647E  EC69  F068         	call	_ReadTabNTC
  1221  006482  CFE8 F082          	movff	wreg,_DtCO+3
  1222                           ;pomiar.c: 416: DtCO.HstCo=DtKNF.hsco;
  1223  006486  C1D3  F090         	movff	_DtKNF+31,_DtCO+17
  1224                           ;pomiar.c: 417: DtCO.F3PPCO=DtKNF.conw;
  1225  00648A  C1D4  F091         	movff	_DtKNF+32,_DtCO+18
  1226                           ;pomiar.c: 418: if(DtCO.AC_CO<=0X28||DtCO.AC_CO>
      +                          =0XF5)
  1227  00648E  0E29               	movlw	41
  1228  006490  0100               	movlb	(_DtCO+14) shr (0+8)
  1229  006492  618D               	cpfslt	(_DtCO+14)& (0+255),b
  1230  006494  D001               	goto	u731
  1231  006496  D003               	goto	u750
  1232  006498                     u731:
  1233  006498  0EF4               	movlw	-12
  1234  00649A  658D               	cpfsgt	(_DtCO+14)& (0+255),b
  1235  00649C  D010               	goto	l130
  1236  00649E                     u750:
  1237                           ;pomiar.c: 419: {
  1238  00649E  0100               	movlb	_DtCO shr (0+8)
  1239  0064A0  817F               	bsf	_DtCO& (0+255),0,b
  1240                           ;pomiar.c: 421: DtCO._su_CO=0;
  1241  0064A2  937F               	bcf	_DtCO& (0+255),1,b
  1242                           ;pomiar.c: 422: DtCO._ad_CO=0;
  1243  0064A4  957F               	bcf	_DtCO& (0+255),2,b
  1244                           ;pomiar.c: 423: DtCO._cold_CO=0;
  1245  0064A6  9580               	bcf	(_DtCO+1)& (0+255),2,b
  1246                           ;pomiar.c: 424: DtCO._hot_CO=0;
  1247  0064A8  9780               	bcf	(_DtCO+1)& (0+255),3,b
  1248                           ;pomiar.c: 425: DtCO._on_DZ_CO=0;
  1249  0064AA  9B7F               	bcf	_DtCO& (0+255),5,b
  1250                           ;pomiar.c: 426: DtCO._su_DZ_CO=0;
  1251  0064AC  9D7F               	bcf	_DtCO& (0+255),6,b
  1252                           ;pomiar.c: 427: DtCO._ad_DZ_CO=0;
  1253  0064AE  9F7F               	bcf	_DtCO& (0+255),7,b
  1254                           ;pomiar.c: 428: DtCO._ptwp_CO=0;
  1255  0064B0  9180               	bcf	(_DtCO+1)& (0+255),0,b
  1256                           ;pomiar.c: 429: DtCO._pz_CO=0;
  1257  0064B2  9380               	bcf	(_DtCO+1)& (0+255),1,b
  1258                           ;pomiar.c: 430: DtCO._su_SRW_CO=0;
  1259  0064B4  977F               	bcf	_DtCO& (0+255),3,b
  1260                           ;pomiar.c: 431: DtCO._ad_SRW_CO=0;
  1261  0064B6  997F               	bcf	_DtCO& (0+255),4,b
  1262                           ;pomiar.c: 432: RSDT1.outrCO=0;
  1263  0064B8  0103               	movlb	(_RSDT1+27) shr (0+8)
  1264  0064BA  6B41               	clrf	(_RSDT1+27)& (0+255),b
  1265                           ;pomiar.c: 433: return;
  1266  0064BC  0012               	return	
  1267  0064BE                     l130:
  1268                           ;pomiar.c: 435: else DtCO._err_CO=0;
  1269  0064BE  0100               	movlb	_DtCO shr (0+8)
  1270  0064C0  917F               	bcf	_DtCO& (0+255),0,b
  1271                           ;pomiar.c: 436: RSDT1.outrCO=DtCO.CO;
  1272  0064C2  C082  F341         	movff	_DtCO+3,_RSDT1+27
  1273                           ;pomiar.c: 437: switch(DtKNF.tpkt)
  1274  0064C6  D1E3               	goto	l133
  1275  0064C8                     l134:
  1276                           ;pomiar.c: 438: {
  1277                           ;pomiar.c: 440: {
  1278  0064C8  EE01  F0CE         	lfsr	0,_DtKNF+26
  1279  0064CC  50EF               	movf	indf0,w,c
  1280                           ;pomiar.c: 442: {
  1281  0064CE  C090  FFE8         	movff	_DtCO+17,wreg
  1282  0064D2  E134               	bnz	L40
  1283  0064D4  C084  F000         	movff	_DtCO+5,btemp
  1284  0064D8  6A01               	clrf	btemp+1,c
  1285  0064DA  2600               	addwf	btemp,f,c
  1286  0064DC  0E00               	movlw	0
  1287  0064DE  2201               	addwfc	btemp+1,f,c
  1288  0064E0  5001               	movf	btemp+1,w,c
  1289  0064E2  0A80               	xorlw	128
  1290  0064E4  0F80               	addlw	-128
  1291  0064E6  0E56               	movlw	86
  1292  0064E8  B4D8               	btfsc	status,2,c
  1293  0064EA  5C00               	subwf	btemp,w,c
  1294  0064EC  E30F               	bnc	l136
  1295                           ;pomiar.c: 444: {
  1296  0064EE  C082  F000         	movff	_DtCO+3,btemp
  1297  0064F2  0EB0               	movlw	176
  1298  0064F4                     L18:
  1299  0064F4  2400               	addwf	btemp,w,c
  1300  0064F6  6E02               	movwf	btemp+2,c
  1301  0064F8  6A03               	clrf	btemp+3,c
  1302  0064FA  0EFF               	movlw	255
  1303  0064FC  2203               	addwfc	btemp+3,f,c
  1304  0064FE  5003               	movf	btemp+3,w,c
  1305  006500  0A80               	xorlw	128
  1306  006502  0F80               	addlw	-128
  1307  006504  0E05               	movlw	5
  1308  006506  B4D8               	btfsc	status,2,c
  1309  006508                     L17:
  1310  006508  5C02               	subwf	btemp+2,w,c
  1311  00650A  D014               	goto	u795
  1312                           ;pomiar.c: 446: else DtCO._ad_CO=0;
  1313                           ;pomiar.c: 447: }
  1314  00650C                     l136:
  1315                           ;pomiar.c: 448: else
  1316  00650C  C090  F000         	movff	_DtCO+17,btemp
  1317  006510  6A01               	clrf	btemp+1,c
  1318  006512  C084  FFE8         	movff	_DtCO+5,wreg
  1319  006516  C082  F002         	movff	_DtCO+3,btemp+2
  1320  00651A  6A03               	clrf	btemp+3,c
  1321  00651C  5E02               	subwf	btemp+2,f,c
  1322  00651E  0E00               	movlw	0
  1323  006520  5A03               	subwfb	btemp+3,f,c
  1324  006522  5003               	movf	btemp+3,w,c
  1325  006524  0A80               	xorlw	128
  1326  006526  6E04               	movwf	btemp+4,c
  1327  006528  5001               	movf	btemp+1,w,c
  1328  00652A  0A80               	xorlw	128
  1329  00652C  5C04               	subwf	btemp+4,w,c
  1330  00652E  E102               	bnz	u795
  1331  006530  5000               	movf	btemp,w,c
  1332  006532  D7EA               	goto	L17
  1333  006534                     u795:
  1334  006534  E329               	bnc	l147
  1335  006536                     u790:
  1336  006536  0100               	movlb	_DtCO shr (0+8)
  1337  006538  857F               	bsf	_DtCO& (0+255),2,b
  1338  00653A  D028               	goto	l142
  1339                           ;pomiar.c: 451: else DtCO._ad_CO=0;
  1340                           ;pomiar.c: 452: }
  1341                           ;pomiar.c: 454: else
  1342  00653C                     L40:
  1343  00653C  C084  F000         	movff	_DtCO+5,btemp
  1344  006540  6A01               	clrf	btemp+1,c
  1345  006542  2600               	addwf	btemp,f,c
  1346  006544  0E00               	movlw	0
  1347  006546  2201               	addwfc	btemp+1,f,c
  1348  006548  5001               	movf	btemp+1,w,c
  1349  00654A  0A80               	xorlw	128
  1350  00654C  0F80               	addlw	-128
  1351  00654E  0E3D               	movlw	61
  1352  006550  B4D8               	btfsc	status,2,c
  1353  006552  5C00               	subwf	btemp,w,c
  1354  006554  E304               	bnc	l143
  1355                           ;pomiar.c: 457: {
  1356  006556  C082  F000         	movff	_DtCO+3,btemp
  1357  00655A  0EC9               	movlw	201
  1358  00655C  D7CB               	goto	L18
  1359                           ;pomiar.c: 459: else DtCO._ad_CO=0;
  1360                           ;pomiar.c: 460: }
  1361  00655E                     l143:
  1362                           ;pomiar.c: 461: else
  1363  00655E  C090  F000         	movff	_DtCO+17,btemp
  1364  006562  6A01               	clrf	btemp+1,c
  1365  006564  C084  FFE8         	movff	_DtCO+5,wreg
  1366  006568  C082  F002         	movff	_DtCO+3,btemp+2
  1367  00656C  6A03               	clrf	btemp+3,c
  1368  00656E  5E02               	subwf	btemp+2,f,c
  1369  006570  0E00               	movlw	0
  1370  006572  5A03               	subwfb	btemp+3,f,c
  1371  006574  5003               	movf	btemp+3,w,c
  1372  006576  0A80               	xorlw	128
  1373  006578  6E04               	movwf	btemp+4,c
  1374  00657A  5001               	movf	btemp+1,w,c
  1375  00657C  0A80               	xorlw	128
  1376  00657E  5C04               	subwf	btemp+4,w,c
  1377  006580  E102               	bnz	u825
  1378  006582  5000               	movf	btemp,w,c
  1379  006584  5C02               	subwf	btemp+2,w,c
  1380  006586                     u825:
  1381  006586  E2D7               	bc	u790
  1382  006588                     l147:
  1383                           ;pomiar.c: 464: else DtCO._ad_CO=0;
  1384  006588  0100               	movlb	_DtCO shr (0+8)
  1385  00658A  957F               	bcf	_DtCO& (0+255),2,b
  1386  00658C                     l142:
  1387                           ;pomiar.c: 465: }
  1388  00658C  C082  FFE8         	movff	_DtCO+3,wreg
  1389  006590  C084  F000         	movff	_DtCO+5,btemp
  1390  006594  6A01               	clrf	btemp+1,c
  1391  006596  5E00               	subwf	btemp,f,c
  1392  006598  0E00               	movlw	0
  1393  00659A  5A01               	subwfb	btemp+1,f,c
  1394  00659C  5001               	movf	btemp+1,w,c
  1395  00659E  0A80               	xorlw	128
  1396  0065A0  0F80               	addlw	-128
  1397  0065A2  0E05               	movlw	5
  1398  0065A4  B4D8               	btfsc	status,2,c
  1399  0065A6  5C00               	subwf	btemp,w,c
  1400  0065A8  E201 D146          	bnc	l199
  1401  0065AC                     L36:
  1402  0065AC  0100               	movlb	_DtCO shr (0+8)
  1403  0065AE  837F               	bsf	_DtCO& (0+255),1,b
  1404  0065B0  D145               	goto	l200
  1405                           ;pomiar.c: 521: else DtCO._su_CO=0;
  1406                           ;pomiar.c: 522: if(DtCO.CO<=87) DtCO._ptwp_CO=1;
  1407                           ;pomiar.c: 523: if(DtCO.CO>87+1) DtCO._ptwp_CO=0
      +                          ;
  1408                           ;pomiar.c: 524: if(DtCO.CO<=87) DtCO._pz_CO=1;
  1409                           ;pomiar.c: 525: if(DtCO.CO>91) DtCO._pz_CO=0;
  1410                           ;pomiar.c: 526: if(DtCO.CO<=7) DtCO._cold_CO=1;
  1411                           ;pomiar.c: 527: if(DtCO.CO>7+1) DtCO._cold_CO=0;
  1412                           ;pomiar.c: 528: if(DtCO.CO>=83) DtCO._hot_CO=1;
  1413                           ;pomiar.c: 529: if(DtCO.CO<83-1) DtCO._hot_CO=0;
  1414                           ;pomiar.c: 530: break;
  1415  0065B2                     l159:
  1416                           ;pomiar.c: 531: }
  1417                           ;pomiar.c: 533: {
  1418  0065B2  EE01  F0CE         	lfsr	0,_DtKNF+26
  1419  0065B6  50EF               	movf	indf0,w,c
  1420                           ;pomiar.c: 535: {
  1421  0065B8  C090  FFE8         	movff	_DtCO+17,wreg
  1422  0065BC  E134               	bnz	L41
  1423  0065BE  C084  F000         	movff	_DtCO+5,btemp
  1424  0065C2  6A01               	clrf	btemp+1,c
  1425  0065C4  2600               	addwf	btemp,f,c
  1426  0065C6  0E00               	movlw	0
  1427  0065C8  2201               	addwfc	btemp+1,f,c
  1428  0065CA  5001               	movf	btemp+1,w,c
  1429  0065CC  0A80               	xorlw	128
  1430  0065CE  0F80               	addlw	-128
  1431  0065D0  0E56               	movlw	86
  1432  0065D2  B4D8               	btfsc	status,2,c
  1433  0065D4  5C00               	subwf	btemp,w,c
  1434  0065D6  E30F               	bnc	l161
  1435                           ;pomiar.c: 537: {
  1436  0065D8  C082  F000         	movff	_DtCO+3,btemp
  1437  0065DC  0EB0               	movlw	176
  1438  0065DE                     L20:
  1439  0065DE  2400               	addwf	btemp,w,c
  1440  0065E0  6E02               	movwf	btemp+2,c
  1441  0065E2  6A03               	clrf	btemp+3,c
  1442  0065E4  0EFF               	movlw	255
  1443  0065E6  2203               	addwfc	btemp+3,f,c
  1444  0065E8  5003               	movf	btemp+3,w,c
  1445  0065EA  0A80               	xorlw	128
  1446  0065EC  0F80               	addlw	-128
  1447  0065EE  0E05               	movlw	5
  1448  0065F0  B4D8               	btfsc	status,2,c
  1449  0065F2                     L19:
  1450  0065F2  5C02               	subwf	btemp+2,w,c
  1451  0065F4  D014               	goto	u955
  1452                           ;pomiar.c: 539: else DtCO._ad_CO=0;
  1453                           ;pomiar.c: 540: }
  1454  0065F6                     l161:
  1455                           ;pomiar.c: 541: else
  1456  0065F6  C090  F000         	movff	_DtCO+17,btemp
  1457  0065FA  6A01               	clrf	btemp+1,c
  1458  0065FC  C084  FFE8         	movff	_DtCO+5,wreg
  1459  006600  C082  F002         	movff	_DtCO+3,btemp+2
  1460  006604  6A03               	clrf	btemp+3,c
  1461  006606  5E02               	subwf	btemp+2,f,c
  1462  006608  0E00               	movlw	0
  1463  00660A  5A03               	subwfb	btemp+3,f,c
  1464  00660C  5003               	movf	btemp+3,w,c
  1465  00660E  0A80               	xorlw	128
  1466  006610  6E04               	movwf	btemp+4,c
  1467  006612  5001               	movf	btemp+1,w,c
  1468  006614  0A80               	xorlw	128
  1469  006616  5C04               	subwf	btemp+4,w,c
  1470  006618  E102               	bnz	u955
  1471  00661A  5000               	movf	btemp,w,c
  1472  00661C  D7EA               	goto	L19
  1473  00661E                     u955:
  1474  00661E  E329               	bnc	l172
  1475  006620                     u950:
  1476  006620  0100               	movlb	_DtCO shr (0+8)
  1477  006622  857F               	bsf	_DtCO& (0+255),2,b
  1478  006624  D028               	goto	l167
  1479                           ;pomiar.c: 544: else DtCO._ad_CO=0;
  1480                           ;pomiar.c: 545: }
  1481                           ;pomiar.c: 547: else
  1482  006626                     L41:
  1483  006626  C084  F000         	movff	_DtCO+5,btemp
  1484  00662A  6A01               	clrf	btemp+1,c
  1485  00662C  2600               	addwf	btemp,f,c
  1486  00662E  0E00               	movlw	0
  1487  006630  2201               	addwfc	btemp+1,f,c
  1488  006632  5001               	movf	btemp+1,w,c
  1489  006634  0A80               	xorlw	128
  1490  006636  0F80               	addlw	-128
  1491  006638  0E3D               	movlw	61
  1492  00663A  B4D8               	btfsc	status,2,c
  1493  00663C  5C00               	subwf	btemp,w,c
  1494  00663E  E304               	bnc	l168
  1495                           ;pomiar.c: 550: {
  1496  006640  C082  F000         	movff	_DtCO+3,btemp
  1497  006644  0EC9               	movlw	201
  1498  006646  D7CB               	goto	L20
  1499                           ;pomiar.c: 552: else DtCO._ad_CO=0;
  1500                           ;pomiar.c: 553: }
  1501  006648                     l168:
  1502                           ;pomiar.c: 554: else
  1503  006648  C090  F000         	movff	_DtCO+17,btemp
  1504  00664C  6A01               	clrf	btemp+1,c
  1505  00664E  C084  FFE8         	movff	_DtCO+5,wreg
  1506  006652  C082  F002         	movff	_DtCO+3,btemp+2
  1507  006656  6A03               	clrf	btemp+3,c
  1508  006658  5E02               	subwf	btemp+2,f,c
  1509  00665A  0E00               	movlw	0
  1510  00665C  5A03               	subwfb	btemp+3,f,c
  1511  00665E  5003               	movf	btemp+3,w,c
  1512  006660  0A80               	xorlw	128
  1513  006662  6E04               	movwf	btemp+4,c
  1514  006664  5001               	movf	btemp+1,w,c
  1515  006666  0A80               	xorlw	128
  1516  006668  5C04               	subwf	btemp+4,w,c
  1517  00666A  E102               	bnz	u985
  1518  00666C  5000               	movf	btemp,w,c
  1519  00666E  5C02               	subwf	btemp+2,w,c
  1520  006670                     u985:
  1521  006670  E2D7               	bc	u950
  1522  006672                     l172:
  1523                           ;pomiar.c: 557: else DtCO._ad_CO=0;
  1524  006672  0100               	movlb	_DtCO shr (0+8)
  1525  006674  957F               	bcf	_DtCO& (0+255),2,b
  1526  006676                     l167:
  1527                           ;pomiar.c: 558: }
  1528  006676  C082  FFE8         	movff	_DtCO+3,wreg
  1529  00667A  C084  F000         	movff	_DtCO+5,btemp
  1530  00667E  6A01               	clrf	btemp+1,c
  1531  006680  5E00               	subwf	btemp,f,c
  1532  006682  0E00               	movlw	0
  1533  006684  5A01               	subwfb	btemp+1,f,c
  1534  006686  5001               	movf	btemp+1,w,c
  1535  006688  0A80               	xorlw	128
  1536  00668A  0F80               	addlw	-128
  1537  00668C  0E05               	movlw	5
  1538  00668E  B4D8               	btfsc	status,2,c
  1539  006690  5C00               	subwf	btemp,w,c
  1540  006692  0100               	movlb	_DtCO shr (0+8)
  1541  006694  E302               	bnc	L42
  1542  006696  837F               	bsf	_DtCO& (0+255),1,b
  1543  006698  D001               	goto	l175
  1544                           ;pomiar.c: 614: else DtCO._su_CO=0;
  1545  00669A                     L42:
  1546  00669A  937F               	bcf	_DtCO& (0+255),1,b
  1547  00669C                     l175:
  1548                           ;pomiar.c: 620: if(DtCO.CO<=(DtCO.F3PPCO-2)) DtC
      +                          O._ptwp_CO=1;
  1549  00669C  C082  F000         	movff	_DtCO+3,btemp
  1550  0066A0  6A01               	clrf	btemp+1,c
  1551  0066A2  C091  F002         	movff	_DtCO+18,btemp+2
  1552  0066A6  0EFE               	movlw	254
  1553  0066A8  2402               	addwf	btemp+2,w,c
  1554  0066AA  6EF6               	movwf	tblptrl,c
  1555  0066AC  6AF7               	clrf	tblptrh,c
  1556  0066AE  0EFF               	movlw	255
  1557  0066B0  22F7               	addwfc	tblptrh,f,c
  1558  0066B2  50F7               	movf	tblptrh,w,c
  1559  0066B4  0A80               	xorlw	128
  1560  0066B6  6E02               	movwf	btemp+2,c
  1561  0066B8  5001               	movf	btemp+1,w,c
  1562  0066BA  0A80               	xorlw	128
  1563  0066BC  5C02               	subwf	btemp+2,w,c
  1564  0066BE  E102               	bnz	u1005
  1565  0066C0  5000               	movf	btemp,w,c
  1566  0066C2  5CF6               	subwf	tblptrl,w,c
  1567  0066C4                     u1005:
  1568  0066C4  E302               	bnc	l176
  1569  0066C6  0100               	movlb	(_DtCO+1) shr (0+8)
  1570  0066C8  8180               	bsf	(_DtCO+1)& (0+255),0,b
  1571  0066CA                     l176:
  1572                           ;pomiar.c: 621: if(DtCO.CO>((DtCO.F3PPCO-2)+1)) 
      +                          DtCO._ptwp_CO=0;
  1573  0066CA  C082  F000         	movff	_DtCO+3,btemp
  1574  0066CE  6A01               	clrf	btemp+1,c
  1575  0066D0  C091  F002         	movff	_DtCO+18,btemp+2
  1576  0066D4  0EFF               	movlw	255
  1577  0066D6  2402               	addwf	btemp+2,w,c
  1578  0066D8  6EF6               	movwf	tblptrl,c
  1579  0066DA  6AF7               	clrf	tblptrh,c
  1580  0066DC  0EFF               	movlw	255
  1581  0066DE  22F7               	addwfc	tblptrh,f,c
  1582  0066E0  50F7               	movf	tblptrh,w,c
  1583  0066E2  0A80               	xorlw	128
  1584  0066E4  6E02               	movwf	btemp+2,c
  1585  0066E6  5001               	movf	btemp+1,w,c
  1586  0066E8  0A80               	xorlw	128
  1587  0066EA  5C02               	subwf	btemp+2,w,c
  1588  0066EC  E102               	bnz	u1015
  1589  0066EE  5000               	movf	btemp,w,c
  1590  0066F0  5CF6               	subwf	tblptrl,w,c
  1591  0066F2                     u1015:
  1592  0066F2  E202               	bc	l177
  1593  0066F4  0100               	movlb	(_DtCO+1) shr (0+8)
  1594  0066F6  9180               	bcf	(_DtCO+1)& (0+255),0,b
  1595  0066F8                     l177:
  1596                           ;pomiar.c: 622: if(DtCO.CO<=(DtCO.F3PPCO-2)) DtC
      +                          O._pz_CO=1;
  1597  0066F8  C082  F000         	movff	_DtCO+3,btemp
  1598  0066FC  6A01               	clrf	btemp+1,c
  1599  0066FE  C091  F002         	movff	_DtCO+18,btemp+2
  1600  006702  0EFE               	movlw	254
  1601  006704  2402               	addwf	btemp+2,w,c
  1602  006706  6EF6               	movwf	tblptrl,c
  1603  006708  6AF7               	clrf	tblptrh,c
  1604  00670A  0EFF               	movlw	255
  1605  00670C  22F7               	addwfc	tblptrh,f,c
  1606  00670E  50F7               	movf	tblptrh,w,c
  1607  006710  0A80               	xorlw	128
  1608  006712  6E02               	movwf	btemp+2,c
  1609  006714  5001               	movf	btemp+1,w,c
  1610  006716  0A80               	xorlw	128
  1611  006718  5C02               	subwf	btemp+2,w,c
  1612  00671A  E102               	bnz	u1025
  1613  00671C  5000               	movf	btemp,w,c
  1614  00671E  5CF6               	subwf	tblptrl,w,c
  1615  006720                     u1025:
  1616  006720  E302               	bnc	l178
  1617  006722  0100               	movlb	(_DtCO+1) shr (0+8)
  1618  006724  8380               	bsf	(_DtCO+1)& (0+255),1,b
  1619  006726                     l178:
  1620                           ;pomiar.c: 623: if(DtCO.CO>(DtCO.F3PPCO+2)) DtCO
      +                          ._pz_CO=0;
  1621  006726  C082  F000         	movff	_DtCO+3,btemp
  1622  00672A  6A01               	clrf	btemp+1,c
  1623  00672C  0E02               	movlw	2
  1624  00672E  C091  F002         	movff	_DtCO+18,btemp+2
  1625  006732  6A03               	clrf	btemp+3,c
  1626  006734  2602               	addwf	btemp+2,f,c
  1627  006736  0E00               	movlw	0
  1628  006738  2203               	addwfc	btemp+3,f,c
  1629  00673A  5003               	movf	btemp+3,w,c
  1630  00673C  0A80               	xorlw	128
  1631  00673E  6E04               	movwf	btemp+4,c
  1632  006740  5001               	movf	btemp+1,w,c
  1633  006742  0A80               	xorlw	128
  1634  006744  5C04               	subwf	btemp+4,w,c
  1635  006746  E102               	bnz	u1035
  1636  006748  5000               	movf	btemp,w,c
  1637  00674A  5C02               	subwf	btemp+2,w,c
  1638  00674C                     u1035:
  1639  00674C  E301 D08A          	bc	l204
  1640  006750  0100               	movlb	(_DtCO+1) shr (0+8)
  1641  006752  D087               	goto	L35
  1642                           ;pomiar.c: 625: if(DtCO.CO<=7) DtCO._cold_CO=1;
  1643                           ;pomiar.c: 626: if(DtCO.CO>7+1) DtCO._cold_CO=0;
  1644                           ;pomiar.c: 627: if(DtCO.CO>=83) DtCO._hot_CO=1;
  1645                           ;pomiar.c: 628: if(DtCO.CO<83-1) DtCO._hot_CO=0;
  1646                           ;pomiar.c: 629: break;
  1647  006754                     l184:
  1648                           ;pomiar.c: 630: }
  1649                           ;pomiar.c: 632: {
  1650  006754  EE01  F0CE         	lfsr	0,_DtKNF+26
  1651  006758  50EF               	movf	indf0,w,c
  1652                           ;pomiar.c: 634: {
  1653  00675A  C090  FFE8         	movff	_DtCO+17,wreg
  1654  00675E  E134               	bnz	L43
  1655  006760  C084  F000         	movff	_DtCO+5,btemp
  1656  006764  6A01               	clrf	btemp+1,c
  1657  006766  2600               	addwf	btemp,f,c
  1658  006768  0E00               	movlw	0
  1659  00676A  2201               	addwfc	btemp+1,f,c
  1660  00676C  5001               	movf	btemp+1,w,c
  1661  00676E  0A80               	xorlw	128
  1662  006770  0F80               	addlw	-128
  1663  006772  0E56               	movlw	86
  1664  006774  B4D8               	btfsc	status,2,c
  1665  006776  5C00               	subwf	btemp,w,c
  1666  006778  E30F               	bnc	l186
  1667                           ;pomiar.c: 636: {
  1668  00677A  C082  F000         	movff	_DtCO+3,btemp
  1669  00677E  0EB0               	movlw	176
  1670  006780                     L23:
  1671  006780  2400               	addwf	btemp,w,c
  1672  006782  6E02               	movwf	btemp+2,c
  1673  006784  6A03               	clrf	btemp+3,c
  1674  006786  0EFF               	movlw	255
  1675  006788  2203               	addwfc	btemp+3,f,c
  1676  00678A  5003               	movf	btemp+3,w,c
  1677  00678C  0A80               	xorlw	128
  1678  00678E  0F80               	addlw	-128
  1679  006790  0E05               	movlw	5
  1680  006792  B4D8               	btfsc	status,2,c
  1681  006794                     L22:
  1682  006794  5C02               	subwf	btemp+2,w,c
  1683  006796  D014               	goto	u1115
  1684                           ;pomiar.c: 638: else DtCO._ad_CO=0;
  1685                           ;pomiar.c: 639: }
  1686  006798                     l186:
  1687                           ;pomiar.c: 640: else
  1688  006798  C090  F000         	movff	_DtCO+17,btemp
  1689  00679C  6A01               	clrf	btemp+1,c
  1690  00679E  C084  FFE8         	movff	_DtCO+5,wreg
  1691  0067A2  C082  F002         	movff	_DtCO+3,btemp+2
  1692  0067A6  6A03               	clrf	btemp+3,c
  1693  0067A8  5E02               	subwf	btemp+2,f,c
  1694  0067AA  0E00               	movlw	0
  1695  0067AC  5A03               	subwfb	btemp+3,f,c
  1696  0067AE  5003               	movf	btemp+3,w,c
  1697  0067B0  0A80               	xorlw	128
  1698  0067B2  6E04               	movwf	btemp+4,c
  1699  0067B4  5001               	movf	btemp+1,w,c
  1700  0067B6  0A80               	xorlw	128
  1701  0067B8  5C04               	subwf	btemp+4,w,c
  1702  0067BA  E102               	bnz	u1115
  1703  0067BC  5000               	movf	btemp,w,c
  1704  0067BE  D7EA               	goto	L22
  1705  0067C0                     u1115:
  1706  0067C0  E329               	bnc	l197
  1707  0067C2                     u1110:
  1708  0067C2  0100               	movlb	_DtCO shr (0+8)
  1709  0067C4  857F               	bsf	_DtCO& (0+255),2,b
  1710  0067C6  D028               	goto	l192
  1711                           ;pomiar.c: 643: else DtCO._ad_CO=0;
  1712                           ;pomiar.c: 644: }
  1713                           ;pomiar.c: 646: else
  1714  0067C8                     L43:
  1715  0067C8  C084  F000         	movff	_DtCO+5,btemp
  1716  0067CC  6A01               	clrf	btemp+1,c
  1717  0067CE  2600               	addwf	btemp,f,c
  1718  0067D0  0E00               	movlw	0
  1719  0067D2  2201               	addwfc	btemp+1,f,c
  1720  0067D4  5001               	movf	btemp+1,w,c
  1721  0067D6  0A80               	xorlw	128
  1722  0067D8  0F80               	addlw	-128
  1723  0067DA  0E3D               	movlw	61
  1724  0067DC  B4D8               	btfsc	status,2,c
  1725  0067DE  5C00               	subwf	btemp,w,c
  1726  0067E0  E304               	bnc	l193
  1727                           ;pomiar.c: 649: {
  1728  0067E2  C082  F000         	movff	_DtCO+3,btemp
  1729  0067E6  0EC9               	movlw	201
  1730  0067E8  D7CB               	goto	L23
  1731                           ;pomiar.c: 651: else DtCO._ad_CO=0;
  1732                           ;pomiar.c: 652: }
  1733  0067EA                     l193:
  1734                           ;pomiar.c: 653: else
  1735  0067EA  C090  F000         	movff	_DtCO+17,btemp
  1736  0067EE  6A01               	clrf	btemp+1,c
  1737  0067F0  C084  FFE8         	movff	_DtCO+5,wreg
  1738  0067F4  C082  F002         	movff	_DtCO+3,btemp+2
  1739  0067F8  6A03               	clrf	btemp+3,c
  1740  0067FA  5E02               	subwf	btemp+2,f,c
  1741  0067FC  0E00               	movlw	0
  1742  0067FE  5A03               	subwfb	btemp+3,f,c
  1743  006800  5003               	movf	btemp+3,w,c
  1744  006802  0A80               	xorlw	128
  1745  006804  6E04               	movwf	btemp+4,c
  1746  006806  5001               	movf	btemp+1,w,c
  1747  006808  0A80               	xorlw	128
  1748  00680A  5C04               	subwf	btemp+4,w,c
  1749  00680C  E102               	bnz	u1145
  1750  00680E  5000               	movf	btemp,w,c
  1751  006810  5C02               	subwf	btemp+2,w,c
  1752  006812                     u1145:
  1753  006812  E2D7               	bc	u1110
  1754  006814                     l197:
  1755                           ;pomiar.c: 656: else DtCO._ad_CO=0;
  1756  006814  0100               	movlb	_DtCO shr (0+8)
  1757  006816  957F               	bcf	_DtCO& (0+255),2,b
  1758  006818                     l192:
  1759                           ;pomiar.c: 657: }
  1760  006818  C082  FFE8         	movff	_DtCO+3,wreg
  1761  00681C  C084  F000         	movff	_DtCO+5,btemp
  1762  006820  6A01               	clrf	btemp+1,c
  1763  006822  5E00               	subwf	btemp,f,c
  1764  006824  0E00               	movlw	0
  1765  006826  5A01               	subwfb	btemp+1,f,c
  1766  006828  5001               	movf	btemp+1,w,c
  1767  00682A  0A80               	xorlw	128
  1768  00682C  0F80               	addlw	-128
  1769  00682E  0E05               	movlw	5
  1770  006830  B4D8               	btfsc	status,2,c
  1771  006832  5C00               	subwf	btemp,w,c
  1772  006834  E301 D6BA          	bc	L36
  1773  006838                     l199:
  1774                           ;pomiar.c: 713: else DtCO._su_CO=0;
  1775  006838  0100               	movlb	_DtCO shr (0+8)
  1776  00683A  937F               	bcf	_DtCO& (0+255),1,b
  1777  00683C                     l200:
  1778                           ;pomiar.c: 714: if(DtCO.CO<=87) DtCO._ptwp_CO=1;
  1779  00683C  0E58               	movlw	88
  1780  00683E  0100               	movlb	(_DtCO+3) shr (0+8)
  1781  006840  6182               	cpfslt	(_DtCO+3)& (0+255),b
  1782  006842  D001               	goto	l201
  1783  006844  8180               	bsf	(_DtCO+1)& (0+255),0,b
  1784  006846                     l201:
  1785                           ;pomiar.c: 715: if(DtCO.CO>87+1) DtCO._ptwp_CO=0
      +                          ;
  1786  006846  0E58               	movlw	88
  1787  006848  0100               	movlb	(_DtCO+3) shr (0+8)
  1788  00684A  6582               	cpfsgt	(_DtCO+3)& (0+255),b
  1789  00684C  D001               	goto	l202
  1790  00684E  9180               	bcf	(_DtCO+1)& (0+255),0,b
  1791  006850                     l202:
  1792                           ;pomiar.c: 716: if(DtCO.CO<=87) DtCO._pz_CO=1;
  1793  006850  0E58               	movlw	88
  1794  006852  0100               	movlb	(_DtCO+3) shr (0+8)
  1795  006854  6182               	cpfslt	(_DtCO+3)& (0+255),b
  1796  006856  D001               	goto	l203
  1797  006858  8380               	bsf	(_DtCO+1)& (0+255),1,b
  1798  00685A                     l203:
  1799                           ;pomiar.c: 717: if(DtCO.CO>91) DtCO._pz_CO=0;
  1800  00685A  0E5B               	movlw	91
  1801  00685C  0100               	movlb	(_DtCO+3) shr (0+8)
  1802  00685E  6582               	cpfsgt	(_DtCO+3)& (0+255),b
  1803  006860  D001               	goto	l204
  1804  006862                     L35:
  1805  006862  9380               	bcf	(_DtCO+1)& (0+255),1,b
  1806  006864                     l204:
  1807                           ;pomiar.c: 718: if(DtCO.CO<=7) DtCO._cold_CO=1;
  1808  006864  0E08               	movlw	8
  1809  006866  0100               	movlb	(_DtCO+3) shr (0+8)
  1810  006868  6182               	cpfslt	(_DtCO+3)& (0+255),b
  1811  00686A  D001               	goto	l205
  1812  00686C  8580               	bsf	(_DtCO+1)& (0+255),2,b
  1813  00686E                     l205:
  1814                           ;pomiar.c: 719: if(DtCO.CO>7+1) DtCO._cold_CO=0;
  1815  00686E  0E08               	movlw	8
  1816  006870  0100               	movlb	(_DtCO+3) shr (0+8)
  1817  006872  6582               	cpfsgt	(_DtCO+3)& (0+255),b
  1818  006874  D001               	goto	l206
  1819  006876  9580               	bcf	(_DtCO+1)& (0+255),2,b
  1820  006878                     l206:
  1821                           ;pomiar.c: 720: if(DtCO.CO>=83) DtCO._hot_CO=1;
  1822  006878  0E52               	movlw	82
  1823  00687A  0100               	movlb	(_DtCO+3) shr (0+8)
  1824  00687C  6582               	cpfsgt	(_DtCO+3)& (0+255),b
  1825  00687E  D001               	goto	l207
  1826  006880  8780               	bsf	(_DtCO+1)& (0+255),3,b
  1827  006882                     l207:
  1828                           ;pomiar.c: 721: if(DtCO.CO<83-1) DtCO._hot_CO=0;
  1829  006882  0E52               	movlw	82
  1830  006884  0100               	movlb	(_DtCO+3) shr (0+8)
  1831  006886  6182               	cpfslt	(_DtCO+3)& (0+255),b
  1832  006888  D00B               	goto	l132
  1833  00688A  9780               	bcf	(_DtCO+1)& (0+255),3,b
  1834                           ;pomiar.c: 722: break;
  1835  00688C  D009               	goto	l132
  1836  00688E                     l133:
  1837  00688E  C1C2  FFE8         	movff	_DtKNF+14,wreg
  1838  006892  0A00               	xorlw	0
  1839  006894  E101 D68D          	bz	l159
  1840  006898  0A03               	xorlw	3
  1841  00689A  E101 D615          	bz	l134
  1842  00689E  D75A               	goto	l184
  1843  0068A0                     l132:
  1844                           ;pomiar.c: 726: if(DtCO.CO<=8)
  1845  0068A0  0E09               	movlw	9
  1846  0068A2  0100               	movlb	(_DtCO+3) shr (0+8)
  1847  0068A4  6182               	cpfslt	(_DtCO+3)& (0+255),b
  1848  0068A6  D003               	goto	l209
  1849                           ;pomiar.c: 727: {
  1850  0068A8  8D7F               	bsf	_DtCO& (0+255),6,b
  1851                           ;pomiar.c: 729: DtCO._on_DZ_CO=1;
  1852  0068AA  8B7F               	bsf	_DtCO& (0+255),5,b
  1853                           ;pomiar.c: 730: }
  1854  0068AC  D002               	goto	l210
  1855  0068AE                     l209:
  1856                           ;pomiar.c: 731: else DtCO._su_DZ_CO=0;
  1857  0068AE  0100               	movlb	_DtCO shr (0+8)
  1858  0068B0  9D7F               	bcf	_DtCO& (0+255),6,b
  1859  0068B2                     l210:
  1860                           ;pomiar.c: 732: if(DtCO.CO>=20)
  1861  0068B2  0E13               	movlw	19
  1862  0068B4  0100               	movlb	(_DtCO+3) shr (0+8)
  1863  0068B6  6582               	cpfsgt	(_DtCO+3)& (0+255),b
  1864  0068B8  D003               	goto	l211
  1865                           ;pomiar.c: 733: {
  1866  0068BA  8F7F               	bsf	_DtCO& (0+255),7,b
  1867                           ;pomiar.c: 735: DtCO._on_DZ_CO=0;
  1868  0068BC  9B7F               	bcf	_DtCO& (0+255),5,b
  1869                           ;pomiar.c: 736: }
  1870  0068BE  D002               	goto	l212
  1871  0068C0                     l211:
  1872                           ;pomiar.c: 737: else DtCO._ad_DZ_CO=0;
  1873  0068C0  0100               	movlb	_DtCO shr (0+8)
  1874  0068C2  9F7F               	bcf	_DtCO& (0+255),7,b
  1875  0068C4                     l212:
  1876                           ;pomiar.c: 739: if(!DtKNF.opdg)
  1877  0068C4  EE01  F0CE         	lfsr	0,_DtKNF+26
  1878  0068C8  50EF               	movf	indf0,w,c
  1879  0068CA  E111               	bnz	l213
  1880                           ;pomiar.c: 740: {
  1881  0068CC  0E4A               	movlw	74
  1882  0068CE  0100               	movlb	(_DtCO+3) shr (0+8)
  1883  0068D0  6182               	cpfslt	(_DtCO+3)& (0+255),b
  1884  0068D2  D002               	goto	l214
  1885  0068D4  877F               	bsf	_DtCO& (0+255),3,b
  1886  0068D6  D002               	goto	l215
  1887  0068D8                     l214:
  1888                           ;pomiar.c: 742: else DtCO._su_SRW_CO=0;
  1889  0068D8  0100               	movlb	_DtCO shr (0+8)
  1890  0068DA  977F               	bcf	_DtCO& (0+255),3,b
  1891  0068DC                     l215:
  1892                           ;pomiar.c: 743: if(DtCO.CO>83) DtCO._ad_SRW_CO=1
      +                          ;
  1893  0068DC  0E53               	movlw	83
  1894  0068DE  0100               	movlb	(_DtCO+3) shr (0+8)
  1895  0068E0  6582               	cpfsgt	(_DtCO+3)& (0+255),b
  1896  0068E2  D002               	goto	l216
  1897  0068E4  897F               	bsf	_DtCO& (0+255),4,b
  1898  0068E6  0C53               	retlw	83
  1899  0068E8                     l216:
  1900                           ;pomiar.c: 744: else DtCO._ad_SRW_CO=0;
  1901  0068E8  0100               	movlb	_DtCO shr (0+8)
  1902  0068EA  997F               	bcf	_DtCO& (0+255),4,b
  1903                           ;pomiar.c: 745: }
  1904  0068EC  0012               	return	
  1905  0068EE                     l213:
  1906                           ;pomiar.c: 746: else
  1907  0068EE  0E31               	movlw	49
  1908  0068F0  0100               	movlb	(_DtCO+3) shr (0+8)
  1909  0068F2  6182               	cpfslt	(_DtCO+3)& (0+255),b
  1910  0068F4  D002               	goto	l219
  1911  0068F6  877F               	bsf	_DtCO& (0+255),3,b
  1912  0068F8  D002               	goto	l220
  1913  0068FA                     l219:
  1914                           ;pomiar.c: 749: else DtCO._su_SRW_CO=0;
  1915  0068FA  0100               	movlb	_DtCO shr (0+8)
  1916  0068FC  977F               	bcf	_DtCO& (0+255),3,b
  1917  0068FE                     l220:
  1918                           ;pomiar.c: 750: if(DtCO.CO>58) DtCO._ad_SRW_CO=1
      +                          ;
  1919  0068FE  0E3A               	movlw	58
  1920  006900  0100               	movlb	(_DtCO+3) shr (0+8)
  1921  006902  6582               	cpfsgt	(_DtCO+3)& (0+255),b
  1922  006904  D002               	goto	l221
  1923  006906  897F               	bsf	_DtCO& (0+255),4,b
  1924  006908  0C3A               	retlw	58
  1925  00690A                     l221:
  1926                           ;pomiar.c: 751: else DtCO._ad_SRW_CO=0;
  1927  00690A  0100               	movlb	_DtCO shr (0+8)
  1928  00690C  997F               	bcf	_DtCO& (0+255),4,b
  1929                           ;pomiar.c: 752: }
  1930  00690E  0012               	return	
  1931  006910                     __end_of_PomiarCO:
  1932                           ;pomiar.c: 757: void PomiarIN(void)
  1933                           ;pomiar.c: 758: {
  1934  006910                     _PomiarIN:
  1935  000000                     
  1936                           ;pomiar.c: 759: signed char delta;
  1937  006910  0E04               	movlw	4
  1938  006912  EC33  F068         	call	_ReadAC
  1939  006916  CFE8 F093          	movff	wreg,_DtIN+1
  1940                           ;pomiar.c: 762: DtIN.IN=ReadTabNTC(DtIN.AC_IN);
  1941  00691A  C093  FFE8         	movff	_DtIN+1,wreg
  1942  00691E  EC69  F068         	call	_ReadTabNTC
  1943  006922  CFE8 F094          	movff	wreg,_DtIN+2
  1944                           ;pomiar.c: 764: if(DtIN.AC_IN<=0X28||DtIN.AC_IN>
      +                          =0XF5)
  1945  006926  0E29               	movlw	41
  1946  006928  0100               	movlb	(_DtIN+1) shr (0+8)
  1947  00692A  6193               	cpfslt	(_DtIN+1)& (0+255),b
  1948  00692C  D001               	goto	u1311
  1949  00692E  D003               	goto	u1330
  1950  006930                     u1311:
  1951  006930  0EF4               	movlw	-12
  1952  006932  6593               	cpfsgt	(_DtIN+1)& (0+255),b
  1953  006934  D003               	goto	l224
  1954  006936                     u1330:
  1955                           ;pomiar.c: 765: {
  1956  006936  0100               	movlb	_DtIN shr (0+8)
  1957  006938  8192               	bsf	_DtIN& (0+255),0,b
  1958                           ;pomiar.c: 767: return;
  1959  00693A  0012               	return	
  1960  00693C                     l224:
  1961                           ;pomiar.c: 769: else DtIN._err_IN=0;
  1962  00693C  0100               	movlb	_DtIN shr (0+8)
  1963  00693E  9192               	bcf	_DtIN& (0+255),0,b
  1964                           ;pomiar.c: 770: RSDT1.outIN=DtIN.IN;
  1965  006940  C094  F32D         	movff	_DtIN+2,_RSDT1+7
  1966                           ;pomiar.c: 771: }
  1967  006944  0012               	return	
  1968  006946                     __end_of_PomiarIN:
  1969                           ;pomiar.c: 774: void PomiarCW(void)
  1970                           ;pomiar.c: 775: {
  1971  006946                     _PomiarCW:
  1972  000000                     
  1973                           ;pomiar.c: 776: DtCW.AC_CW=ReadAC(1);
  1974  006946  0E01               	movlw	1
  1975  006948  EC33  F068         	call	_ReadAC
  1976  00694C  CFE8 F07C          	movff	wreg,_DtCW+12
  1977                           ;pomiar.c: 777: DtCW.CW=ReadTabNTC(DtCW.AC_CW);
  1978  006950  C07C  FFE8         	movff	_DtCW+12,wreg
  1979  006954  EC69  F068         	call	_ReadTabNTC
  1980  006958  CFE8 F072          	movff	wreg,_DtCW+2
  1981                           ;pomiar.c: 779: if(DtCW.AC_CW<=0X28||DtCW.AC_CW>
      +                          =0XF5)
  1982  00695C  0E29               	movlw	41
  1983  00695E  0100               	movlb	(_DtCW+12) shr (0+8)
  1984  006960  617C               	cpfslt	(_DtCW+12)& (0+255),b
  1985  006962  D001               	goto	u1341
  1986  006964  D003               	goto	u1360
  1987  006966                     u1341:
  1988  006966  0EF4               	movlw	-12
  1989  006968  657C               	cpfsgt	(_DtCW+12)& (0+255),b
  1990  00696A  D00C               	goto	l227
  1991  00696C                     u1360:
  1992                           ;pomiar.c: 780: {
  1993  00696C  0100               	movlb	_DtCW shr (0+8)
  1994  00696E  8170               	bsf	_DtCW& (0+255),0,b
  1995                           ;pomiar.c: 782: DtCW._su_CW=0;
  1996  006970  9370               	bcf	_DtCW& (0+255),1,b
  1997                           ;pomiar.c: 783: DtCW._ad_CW=0;
  1998  006972  9570               	bcf	_DtCW& (0+255),2,b
  1999                           ;pomiar.c: 784: DtCW._cold_CW=0;
  2000  006974  9F70               	bcf	_DtCW& (0+255),7,b
  2001                           ;pomiar.c: 785: DtCW._on_DZ_CW=0;
  2002  006976  9970               	bcf	_DtCW& (0+255),4,b
  2003                           ;pomiar.c: 786: DtCW._su_DZ_CW=0;
  2004  006978  9B70               	bcf	_DtCW& (0+255),5,b
  2005                           ;pomiar.c: 787: DtCW._ad_DZ_CW=0;
  2006  00697A  9D70               	bcf	_DtCW& (0+255),6,b
  2007                           ;pomiar.c: 788: DtCW._wpz_CW=0;
  2008  00697C  9770               	bcf	_DtCW& (0+255),3,b
  2009                           ;pomiar.c: 789: RSDT1.outrCW=DtCW.CW;
  2010  00697E  C072  F342         	movff	_DtCW+2,_RSDT1+28
  2011                           ;pomiar.c: 790: return;
  2012  006982  0012               	return	
  2013  006984                     l227:
  2014                           ;pomiar.c: 792: else DtCW._err_CW=0;
  2015  006984  0100               	movlb	_DtCW shr (0+8)
  2016  006986  9170               	bcf	_DtCW& (0+255),0,b
  2017                           ;pomiar.c: 793: RSDT1.outrCW=DtCW.CW;
  2018  006988  C072  F342         	movff	_DtCW+2,_RSDT1+28
  2019                           ;pomiar.c: 794: switch(DtKNF.tpkt)
  2020  00698C  C1C2  FFE8         	movff	_DtKNF+14,wreg
  2021  006990  0A00               	xorlw	0
  2022  006992  E00D               	bz	l236
  2023  006994  0A03               	xorlw	3
  2024  006996  E000               	bz	l231
  2025  006998                     l231:
  2026                           ;pomiar.c: 795: {
  2027                           ;pomiar.c: 797: {
  2028  006998  0E41               	movlw	65
  2029  00699A  0100               	movlb	(_DtCW+2) shr (0+8)
  2030  00699C  6572               	cpfsgt	(_DtCW+2)& (0+255),b
  2031  00699E  D047               	goto	l248
  2032  0069A0  8570               	bsf	_DtCW& (0+255),2,b
  2033                           ;pomiar.c: 799: else DtCW._ad_CW=0;
  2034  0069A2                     l233:
  2035                           ;pomiar.c: 800: if(DtCW.CW<=65-2) DtCW._su_CW=1;
  2036  0069A2  0E40               	movlw	64
  2037  0069A4  0100               	movlb	(_DtCW+2) shr (0+8)
  2038  0069A6  6172               	cpfslt	(_DtCW+2)& (0+255),b
  2039  0069A8  D045               	goto	l250
  2040  0069AA  8370               	bsf	_DtCW& (0+255),1,b
  2041  0069AC  D045               	goto	l229
  2042                           ;pomiar.c: 801: else DtCW._su_CW=0;
  2043                           ;pomiar.c: 802: break;
  2044  0069AE                     l236:
  2045                           ;pomiar.c: 803: }
  2046                           ;pomiar.c: 805: {
  2047  0069AE  C074  FFE8         	movff	_DtCW+4,wreg
  2048  0069B2  C072  F000         	movff	_DtCW+2,btemp
  2049  0069B6  6A01               	clrf	btemp+1,c
  2050  0069B8  5E00               	subwf	btemp,f,c
  2051  0069BA  0E00               	movlw	0
  2052  0069BC  5A01               	subwfb	btemp+1,f,c
  2053  0069BE  5001               	movf	btemp+1,w,c
  2054  0069C0  0A80               	xorlw	128
  2055  0069C2  0F80               	addlw	-128
  2056  0069C4  0E01               	movlw	1
  2057  0069C6  B4D8               	btfsc	status,2,c
  2058  0069C8  5C00               	subwf	btemp,w,c
  2059  0069CA  0100               	movlb	_DtCW shr (0+8)
  2060  0069CC  E302               	bnc	L44
  2061  0069CE  8570               	bsf	_DtCW& (0+255),2,b
  2062  0069D0  D001               	goto	l238
  2063                           ;pomiar.c: 807: else DtCW._ad_CW=0;
  2064  0069D2                     L44:
  2065  0069D2  9570               	bcf	_DtCW& (0+255),2,b
  2066  0069D4                     l238:
  2067                           ;pomiar.c: 808: if((DtCW.PPCW-DtCW.CW)>=5) DtCW.
      +                          _su_CW=1;
  2068  0069D4  C072  FFE8         	movff	_DtCW+2,wreg
  2069  0069D8  C074  F000         	movff	_DtCW+4,btemp
  2070  0069DC  6A01               	clrf	btemp+1,c
  2071  0069DE  5E00               	subwf	btemp,f,c
  2072  0069E0  0E00               	movlw	0
  2073  0069E2  5A01               	subwfb	btemp+1,f,c
  2074  0069E4  5001               	movf	btemp+1,w,c
  2075  0069E6  0A80               	xorlw	128
  2076  0069E8  0F80               	addlw	-128
  2077  0069EA  0E05               	movlw	5
  2078  0069EC  B4D8               	btfsc	status,2,c
  2079  0069EE  5C00               	subwf	btemp,w,c
  2080  0069F0  0100               	movlb	_DtCW shr (0+8)
  2081  0069F2  E302               	bnc	L45
  2082  0069F4  8370               	bsf	_DtCW& (0+255),1,b
  2083  0069F6  D001               	goto	l240
  2084                           ;pomiar.c: 809: else DtCW._su_CW=0;
  2085  0069F8                     L45:
  2086  0069F8  9370               	bcf	_DtCW& (0+255),1,b
  2087  0069FA                     l240:
  2088                           ;pomiar.c: 810: if(RdPrt(11)&&(DtCW.PCW>=DtCW.mi
      +                          nPCW))
  2089  0069FA  0E0B               	movlw	11
  2090  0069FC  EC50  F063         	call	_RdPrt
  2091  006A00  E314               	bnc	l241
  2092  006A02  C075  FFE8         	movff	_DtCW+5,wreg
  2093  006A06  0100               	movlb	(_DtCW+3) shr (0+8)
  2094  006A08  5D73               	subwf	(_DtCW+3)& (0+255),w,b
  2095  006A0A  E30F               	bnc	l241
  2096                           ;pomiar.c: 811: {
  2097  006A0C  0100               	movlb	_DtCW shr (0+8)
  2098  006A0E  A370               	btfss	_DtCW& (0+255),1,b
  2099  006A10  D002               	goto	l242
  2100  006A12  8770               	bsf	_DtCW& (0+255),3,b
  2101  006A14  D005               	goto	l243
  2102  006A16                     l242:
  2103                           ;pomiar.c: 813: else if(!M._PRACA) DtCW._wpz_CW=
      +                          0;
  2104  006A16  0103               	movlb	(_M+4) shr (0+8)
  2105  006A18  B30A               	btfsc	(_M+4)& (0+255),1,b
  2106  006A1A  D002               	goto	l243
  2107  006A1C  0100               	movlb	_DtCW shr (0+8)
  2108  006A1E  9770               	bcf	_DtCW& (0+255),3,b
  2109  006A20                     l243:
  2110                           ;pomiar.c: 814: if (DtCW._ad_CW) DtCW._wpz_CW=0;
  2111  006A20  0100               	movlb	_DtCW shr (0+8)
  2112  006A22  A570               	btfss	_DtCW& (0+255),2,b
  2113  006A24  D009               	goto	l229
  2114  006A26                     u1460:
  2115  006A26  9770               	bcf	_DtCW& (0+255),3,b
  2116                           ;pomiar.c: 815: }
  2117  006A28  D007               	goto	l229
  2118  006A2A                     l241:
  2119                           ;pomiar.c: 816: else DtCW._wpz_CW=0;
  2120  006A2A  0100               	movlb	_DtCW shr (0+8)
  2121  006A2C  D7FC               	goto	u1460
  2122                           ;pomiar.c: 817: break;
  2123                           ;pomiar.c: 818: }
  2124                           ;pomiar.c: 820: {
  2125  006A2E                     l248:
  2126                           ;pomiar.c: 822: else DtCW._ad_CW=0;
  2127  006A2E  0100               	movlb	_DtCW shr (0+8)
  2128  006A30  9570               	bcf	_DtCW& (0+255),2,b
  2129  006A32  D7B7               	goto	l233
  2130                           ;pomiar.c: 823: if(DtCW.CW<=65-2) DtCW._su_CW=1;
  2131  006A34                     l250:
  2132                           ;pomiar.c: 824: else DtCW._su_CW=0;
  2133  006A34  0100               	movlb	_DtCW shr (0+8)
  2134  006A36  9370               	bcf	_DtCW& (0+255),1,b
  2135                           ;pomiar.c: 825: break;
  2136  006A38                     l229:
  2137                           ;pomiar.c: 828: if(DtCW.CW<=5)
  2138  006A38  0E06               	movlw	6
  2139  006A3A  0100               	movlb	(_DtCW+2) shr (0+8)
  2140  006A3C  6172               	cpfslt	(_DtCW+2)& (0+255),b
  2141  006A3E  D003               	goto	l252
  2142                           ;pomiar.c: 829: {
  2143  006A40  8B70               	bsf	_DtCW& (0+255),5,b
  2144                           ;pomiar.c: 831: DtCW._on_DZ_CW=1;
  2145  006A42  8970               	bsf	_DtCW& (0+255),4,b
  2146                           ;pomiar.c: 832: }
  2147  006A44  D002               	goto	l253
  2148  006A46                     l252:
  2149                           ;pomiar.c: 833: else DtCW._su_DZ_CW=0;
  2150  006A46  0100               	movlb	_DtCW shr (0+8)
  2151  006A48  9B70               	bcf	_DtCW& (0+255),5,b
  2152  006A4A                     l253:
  2153                           ;pomiar.c: 834: if(DtCW.CW>=10)
  2154  006A4A  0E09               	movlw	9
  2155  006A4C  0100               	movlb	(_DtCW+2) shr (0+8)
  2156  006A4E  6572               	cpfsgt	(_DtCW+2)& (0+255),b
  2157  006A50  D003               	goto	l254
  2158                           ;pomiar.c: 835: {
  2159  006A52  8D70               	bsf	_DtCW& (0+255),6,b
  2160                           ;pomiar.c: 837: DtCW._on_DZ_CW=0;
  2161  006A54  9970               	bcf	_DtCW& (0+255),4,b
  2162                           ;pomiar.c: 838: }
  2163  006A56  D002               	goto	l255
  2164  006A58                     l254:
  2165                           ;pomiar.c: 839: else DtCW._ad_DZ_CW=0;
  2166  006A58  0100               	movlb	_DtCW shr (0+8)
  2167  006A5A  9D70               	bcf	_DtCW& (0+255),6,b
  2168  006A5C                     l255:
  2169                           ;pomiar.c: 840: if(DtCW.CW<=5) DtCW._cold_CW=1;
  2170  006A5C  0E06               	movlw	6
  2171  006A5E  0100               	movlb	(_DtCW+2) shr (0+8)
  2172  006A60  6172               	cpfslt	(_DtCW+2)& (0+255),b
  2173  006A62  D001               	goto	l256
  2174  006A64  8F70               	bsf	_DtCW& (0+255),7,b
  2175  006A66                     l256:
  2176                           ;pomiar.c: 841: if(DtCW.CW>5+1) DtCW._cold_CW=0;
  2177  006A66  0E06               	movlw	6
  2178  006A68  0100               	movlb	(_DtCW+2) shr (0+8)
  2179  006A6A  6572               	cpfsgt	(_DtCW+2)& (0+255),b
  2180  006A6C  0C06               	retlw	6
  2181  006A6E  9F70               	bcf	_DtCW& (0+255),7,b
  2182                           ;pomiar.c: 842: }
  2183  006A70  0C06               	retlw	6
  2184  006A72                     __end_of_PomiarCW:
  2185                           ;pomiar.c: 845: void PomiarZW(void)
  2186                           ;pomiar.c: 846: {
  2187  006A72                     _PomiarZW:
  2188  000000                     
  2189                           ;pomiar.c: 847: DtZW.AC_ZW=ReadAC(2);
  2190  006A72  0E02               	movlw	2
  2191  006A74  EC33  F068         	call	_ReadAC
  2192  006A78  CFE8 F068          	movff	wreg,_DtZW+1
  2193                           ;pomiar.c: 848: DtZW.ZW=ReadTabZNTC(DtZW.AC_ZW);
  2194  006A7C  C068  FFE8         	movff	_DtZW+1,wreg
  2195  006A80  ECBA  F068         	call	_ReadTabZNTC
  2196  006A84  CFE8 F069          	movff	wreg,_DtZW+2
  2197                           ;pomiar.c: 849: if(DtZW.AC_ZW<=0x0F||DtZW.AC_ZW>
      +                          =0xF0) DtZW._on_ZW=0;
  2198  006A88  0E10               	movlw	16
  2199  006A8A  0100               	movlb	(_DtZW+1) shr (0+8)
  2200  006A8C  6168               	cpfslt	(_DtZW+1)& (0+255),b
  2201  006A8E  D001               	goto	u1531
  2202  006A90  D003               	goto	u1550
  2203  006A92                     u1531:
  2204  006A92  0EEF               	movlw	-17
  2205  006A94  6568               	cpfsgt	(_DtZW+1)& (0+255),b
  2206  006A96  D003               	goto	l259
  2207  006A98                     u1550:
  2208  006A98  0100               	movlb	_DtZW shr (0+8)
  2209  006A9A  9167               	bcf	_DtZW& (0+255),0,b
  2210  006A9C  0012               	return	
  2211  006A9E                     l259:
  2212                           ;pomiar.c: 850: else DtZW._on_ZW=1;
  2213  006A9E  0100               	movlb	_DtZW shr (0+8)
  2214  006AA0  8167               	bsf	_DtZW& (0+255),0,b
  2215                           ;pomiar.c: 851: }
  2216  006AA2  0012               	return	
  2217  006AA4                     __end_of_PomiarZW:
  2218                           ;pomiar.c: 854: void SetModPCO(void)
  2219                           ;pomiar.c: 855: {
  2220  006AA4                     _SetModPCO:
  2221  000000                     
  2222                           ;pomiar.c: 856: if(M._AKTYWNE_KNF)
  2223  006AA4  0103               	movlb	(_M+3) shr (0+8)
  2224  006AA6  A109               	btfss	(_M+3)& (0+255),0,b
  2225  006AA8  D008               	goto	l262
  2226                           ;pomiar.c: 857: {
  2227  006AAA  EE01  F0CE         	lfsr	0,_DtKNF+26
  2228  006AAE  50EF               	movf	indf0,w,c
  2229  006AB0  E102               	bnz	l263
  2230  006AB2  0E50               	movlw	80
  2231  006AB4  D01B               	goto	L26
  2232  006AB6                     l263:
  2233                           ;pomiar.c: 859: else DtCO.PPCO=55;
  2234  006AB6  0E37               	movlw	55
  2235  006AB8  D019               	goto	L26
  2236                           ;pomiar.c: 860: }
  2237  006ABA                     l262:
  2238                           ;pomiar.c: 861: else
  2239  006ABA  0103               	movlb	_M shr (0+8)
  2240  006ABC  B906               	btfsc	_M& (0+255),4,b
  2241  006ABE  D019               	goto	l268
  2242  006AC0  0103               	movlb	_M shr (0+8)
  2243  006AC2  B706               	btfsc	_M& (0+255),3,b
  2244  006AC4  D016               	goto	l268
  2245  006AC6  0103               	movlb	_M shr (0+8)
  2246  006AC8  AF06               	btfss	_M& (0+255),7,b
  2247  006ACA  D01A               	goto	l266
  2248  006ACC  D012               	goto	l268
  2249                           ;pomiar.c: 863: {
  2250  006ACE                     l269:
  2251  006ACE  D00D               	goto	l273
  2252                           ;pomiar.c: 865: {
  2253                           ;pomiar.c: 867: {
  2254                           ;pomiar.c: 869: break;
  2255  006AD0                     l270:
  2256                           ;pomiar.c: 870: }
  2257                           ;pomiar.c: 872: {
  2258  006AD0  0103               	movlb	_M shr (0+8)
  2259  006AD2  B906               	btfsc	_M& (0+255),4,b
  2260  006AD4  D003               	goto	u1650
  2261  006AD6  0103               	movlb	_M shr (0+8)
  2262  006AD8  A706               	btfss	_M& (0+255),3,b
  2263  006ADA  D003               	goto	l271
  2264  006ADC                     u1650:
  2265                           ;pomiar.c: 874: {
  2266  006ADC  C091  F084         	movff	_DtCO+18,_DtCO+5
  2267                           ;pomiar.c: 877: }
  2268  006AE0  D017               	goto	l265
  2269  006AE2                     l271:
  2270                           ;pomiar.c: 878: else
  2271  006AE2  C091  FFE8         	movff	_DtCO+18,wreg
  2272  006AE6  0F02               	addlw	2
  2273  006AE8  D001               	goto	L26
  2274                           ;pomiar.c: 882: }
  2275  006AEA                     l273:
  2276                           ;pomiar.c: 884: }
  2277                           ;pomiar.c: 886: {
  2278  006AEA  0E59               	movlw	89
  2279  006AEC                     L26:
  2280  006AEC  CFE8 F084          	movff	wreg,_DtCO+5
  2281                           ;pomiar.c: 888: break;
  2282  006AF0  D00F               	goto	l265
  2283  006AF2                     l268:
  2284  006AF2  C1C2  FFE8         	movff	_DtKNF+14,wreg
  2285  006AF6  0A00               	xorlw	0
  2286  006AF8  E0EB               	bz	l270
  2287  006AFA  0A03               	xorlw	3
  2288  006AFC  E0E8               	bz	l269
  2289  006AFE  D7F5               	goto	l273
  2290                           ;pomiar.c: 891: }
  2291  006B00                     l266:
  2292                           ;pomiar.c: 892: else
  2293  006B00  0103               	movlb	(_M+2) shr (0+8)
  2294  006B02  AF08               	btfss	(_M+2)& (0+255),7,b
  2295  006B04  D003               	goto	l275
  2296  006B06  C087  F084         	movff	_DtCO+8,_DtCO+5
  2297  006B0A  D002               	goto	l265
  2298  006B0C                     l275:
  2299                           ;pomiar.c: 894: else
  2300  006B0C  C083  F084         	movff	_DtCO+4,_DtCO+5
  2301  006B10                     l265:
  2302                           ;pomiar.c: 897: }
  2303  006B10  EE01  F0CE         	lfsr	0,_DtKNF+26
  2304  006B14  50EF               	movf	indf0,w,c
  2305  006B16  E108               	bnz	l277
  2306                           ;pomiar.c: 900: {
  2307  006B18  0103               	movlb	_M shr (0+8)
  2308  006B1A  B506               	btfsc	_M& (0+255),2,b
  2309  006B1C  D003               	goto	l278
  2310  006B1E                     u1680:
  2311  006B1E  C084  F335         	movff	_DtCO+5,_RSDT1+15
  2312  006B22  D00A               	goto	l280
  2313  006B24                     l278:
  2314                           ;pomiar.c: 902: else
  2315  006B24  0E53               	movlw	83
  2316  006B26  D004               	goto	L49
  2317                           ;pomiar.c: 905: RSDT1.outPPCO=83;
  2318                           ;pomiar.c: 906: }
  2319  006B28                     l277:
  2320                           ;pomiar.c: 908: else
  2321  006B28  0103               	movlb	_M shr (0+8)
  2322  006B2A  A506               	btfss	_M& (0+255),2,b
  2323  006B2C  D7F8               	goto	u1680
  2324                           ;pomiar.c: 911: else
  2325  006B2E  0E3A               	movlw	58
  2326  006B30                     L49:
  2327  006B30  CFE8 F084          	movff	wreg,_DtCO+5
  2328                           ;pomiar.c: 914: RSDT1.outPPCO=58;
  2329  006B34  CFE8 F335          	movff	wreg,_RSDT1+15
  2330  006B38                     l280:
  2331                           ;pomiar.c: 915: }
  2332  006B38  0103               	movlb	_M shr (0+8)
  2333  006B3A  AD06               	btfss	_M& (0+255),6,b
  2334  006B3C  0012               	return	
  2335                           ;pomiar.c: 918: {
  2336  006B3E  0E14               	movlw	20
  2337  006B40  CFE8 F084          	movff	wreg,_DtCO+5
  2338                           ;pomiar.c: 920: RSDT1.outPPCO=20;
  2339  006B44  CFE8 F335          	movff	wreg,_RSDT1+15
  2340                           ;pomiar.c: 921: }
  2341  006B48  0C14               	retlw	20
  2342  006B4A                     __end_of_SetModPCO:
  2343                           ;pomiar.c: 927: unsigned char GetPGD_PCO(void)
  2344                           ;pomiar.c: 928: {
  2345  006B4A                     _GetPGD_PCO:
  2346  000000                     
  2347                           ;pomiar.c: 929: unsigned char p;
  2348  006B4A  EE01  F0CE         	lfsr	0,_DtKNF+26
  2349  006B4E  50EF               	movf	indf0,w,c
  2350  006B50  E001 D0CC          	bnz	l285
  2351                           ;pomiar.c: 933: {
  2352  006B54  EE00  F083         	lfsr	0,_DtCO+4
  2353  006B58  50EF               	movf	indf0,w,c
  2354  006B5A  E101 D0B0          	bz	l286
  2355                           ;pomiar.c: 935: {
  2356  006B5E  C06A  FFE8         	movff	_DtZW+3,wreg
  2357  006B62  0A80               	xorlw	128
  2358  006B64  0F67               	addlw	-153
  2359  006B66  E301 D093          	bc	l287
  2360                           ;pomiar.c: 937: {
  2361  006B6A  C083  F002         	movff	_DtCO+4,btemp+2
  2362  006B6E  6A03               	clrf	btemp+3,c
  2363  006B70  C06A  FFF6         	movff	_DtZW+3,tblptrl
  2364  006B74  6AF7               	clrf	tblptrh,c
  2365  006B76  BEF6               	btfsc	tblptrl,7,c
  2366  006B78  06F7               	decf	tblptrh,f,c
  2367  006B7A  0E19               	movlw	25
  2368  006B7C  6E00               	movwf	btemp,c
  2369  006B7E  6A01               	clrf	btemp+1,c
  2370  006B80  50F6               	movf	tblptrl,w,c
  2371  006B82  5E00               	subwf	btemp,f,c
  2372  006B84  50F7               	movf	tblptrh,w,c
  2373  006B86  5A01               	subwfb	btemp+1,f,c
  2374  006B88  ECB7  F06D         	call	awmul
  2375  006B8C  0100               	movlb	__Lparam shr (0+8)
  2376  006B8E  C004  F0A9         	movff	btemp+4,?a_GetPGD_PCO
  2377  006B92  C005  F0AA         	movff	btemp+5,?a_GetPGD_PCO+1
  2378  006B96  0E00               	movlw	0
  2379  006B98  BFAA               	btfsc	(?a_GetPGD_PCO+1)^(__Lparam& (0+65280)),7
      +                          ,b
  2380  006B9A  0EFF               	movlw	-1
  2381  006B9C  6FAB               	movwf	(?a_GetPGD_PCO+2)^(__Lparam& (0+65280)),b
  2382  006B9E  6FAC               	movwf	(?a_GetPGD_PCO+3)^(__Lparam& (0+65280)),b
  2383                           ;pomiar.c: 939: m*=(80-40);
  2384  006BA0  0E28               	movlw	40
  2385  006BA2  6E04               	movwf	btemp+4,c
  2386  006BA4  6A05               	clrf	btemp+5,c
  2387  006BA6  6A06               	clrf	btemp+6,c
  2388  006BA8  6A07               	clrf	btemp+7,c
  2389  006BAA  0EA9               	movlw	low ?a_GetPGD_PCO
  2390  006BAC  6EE9               	movwf	fsr0l,c
  2391  006BAE  0E00               	movlw	high ?a_GetPGD_PCO
  2392  006BB0  6EEA               	movwf	fsr0h,c
  2393  006BB2  ECEB  F06D         	call	almul_f
  2394                           ;pomiar.c: 940: m*=100;
  2395  006BB6  0E64               	movlw	100
  2396  006BB8  6E04               	movwf	btemp+4,c
  2397  006BBA  6A05               	clrf	btemp+5,c
  2398  006BBC  6A06               	clrf	btemp+6,c
  2399  006BBE  6A07               	clrf	btemp+7,c
  2400  006BC0  0EA9               	movlw	low ?a_GetPGD_PCO
  2401  006BC2  6EE9               	movwf	fsr0l,c
  2402  006BC4  0E00               	movlw	high ?a_GetPGD_PCO
  2403  006BC6  6EEA               	movwf	fsr0h,c
  2404  006BC8  ECEB  F06D         	call	almul_f
  2405                           ;pomiar.c: 941: m/=1485;
  2406  006BCC  0ECD               	movlw	205
  2407  006BCE  6E04               	movwf	btemp+4,c
  2408  006BD0  0E05               	movlw	5
  2409  006BD2  6E05               	movwf	btemp+5,c
  2410  006BD4  6A06               	clrf	btemp+6,c
  2411  006BD6  6A07               	clrf	btemp+7,c
  2412  006BD8  0EA9               	movlw	low ?a_GetPGD_PCO
  2413  006BDA  6EE9               	movwf	fsr0l,c
  2414  006BDC  0E00               	movlw	high ?a_GetPGD_PCO
  2415  006BDE  6EEA               	movwf	fsr0h,c
  2416  006BE0  ECF5  F06D         	call	aldiv_f
  2417                           ;pomiar.c: 942: if((40+m/100)>80) return 80;
  2418  006BE4  0E64               	movlw	100
  2419  006BE6  6E04               	movwf	btemp+4,c
  2420  006BE8  6A05               	clrf	btemp+5,c
  2421  006BEA  6A06               	clrf	btemp+6,c
  2422  006BEC  6A07               	clrf	btemp+7,c
  2423  006BEE  C0A9  F000         	movff	?a_GetPGD_PCO,btemp
  2424  006BF2  C0AA  F001         	movff	?a_GetPGD_PCO+1,btemp+1
  2425  006BF6  C0AB  F002         	movff	?a_GetPGD_PCO+2,btemp+2
  2426  006BFA  C0AC  F003         	movff	?a_GetPGD_PCO+3,btemp+3
  2427  006BFE  ECF4  F06C         	call	aldiv
  2428  006C02  0E28               	movlw	40
  2429  006C04  2400               	addwf	btemp,w,c
  2430  006C06  6E04               	movwf	btemp+4,c
  2431  006C08  0E00               	movlw	0
  2432  006C0A  2001               	addwfc	btemp+1,w,c
  2433  006C0C  6E05               	movwf	btemp+5,c
  2434  006C0E  0E00               	movlw	0
  2435  006C10  2002               	addwfc	btemp+2,w,c
  2436  006C12  6E06               	movwf	btemp+6,c
  2437  006C14  0E00               	movlw	0
  2438  006C16  2003               	addwfc	btemp+3,w,c
  2439  006C18  6E07               	movwf	btemp+7,c
  2440  006C1A  5007               	movf	btemp+7,w,c
  2441  006C1C  0A80               	xorlw	128
  2442  006C1E  0F80               	addlw	128
  2443  006C20  E108               	bnz	u1745
  2444  006C22  0E00               	movlw	0
  2445  006C24  5C06               	subwf	btemp+6,w,c
  2446  006C26  E105               	bnz	u1745
  2447  006C28  0E00               	movlw	0
  2448  006C2A  5C05               	subwf	btemp+5,w,c
  2449  006C2C  E102               	bnz	u1745
  2450  006C2E  0E51               	movlw	81
  2451  006C30  5C04               	subwf	btemp+4,w,c
  2452  006C32                     u1745:
  2453  006C32  E301               	bnc	l288
  2454  006C34  0C50               	retlw	80
  2455  006C36                     l288:
  2456                           ;pomiar.c: 943: else p=40+m/100;
  2457  006C36  0E64               	movlw	100
  2458  006C38  6E04               	movwf	btemp+4,c
  2459  006C3A  6A05               	clrf	btemp+5,c
  2460  006C3C  6A06               	clrf	btemp+6,c
  2461  006C3E  6A07               	clrf	btemp+7,c
  2462  006C40  C0A9  F000         	movff	?a_GetPGD_PCO,btemp
  2463  006C44  C0AA  F001         	movff	?a_GetPGD_PCO+1,btemp+1
  2464  006C48  C0AB  F002         	movff	?a_GetPGD_PCO+2,btemp+2
  2465  006C4C  C0AC  F003         	movff	?a_GetPGD_PCO+3,btemp+3
  2466  006C50  ECF4  F06C         	call	aldiv
  2467  006C54  5000               	movf	btemp,w,c
  2468  006C56  0F28               	addlw	40
  2469  006C58  6ED9               	movwf	fsr2l,c
  2470                           ;pomiar.c: 945: if(p<40) p=40;
  2471  006C5A  0E28               	movlw	40
  2472  006C5C  60D9               	cpfslt	fsr2l,c
  2473  006C5E  D001               	goto	l290
  2474  006C60  6ED9               	movwf	fsr2l,c
  2475  006C62                     l290:
  2476                           ;pomiar.c: 946: if((p+DtKNF.prop)<80) p=p+DtKNF.
      +                          prop;
  2477  006C62  C1D5  FFE8         	movff	_DtKNF+33,wreg
  2478  006C66  CFD9 F000          	movff	fsr2l,btemp
  2479  006C6A  6A01               	clrf	btemp+1,c
  2480  006C6C  2600               	addwf	btemp,f,c
  2481  006C6E  0E00               	movlw	0
  2482  006C70  2201               	addwfc	btemp+1,f,c
  2483  006C72  5001               	movf	btemp+1,w,c
  2484  006C74  0A80               	xorlw	128
  2485  006C76  0F80               	addlw	-128
  2486  006C78  0E50               	movlw	80
  2487  006C7A  B4D8               	btfsc	status,2,c
  2488  006C7C  5C00               	subwf	btemp,w,c
  2489  006C7E  E204               	bc	l291
  2490  006C80  C1D5  FFE8         	movff	_DtKNF+33,wreg
  2491  006C84  26D9               	addwf	fsr2l,f,c
  2492  006C86  D002               	goto	l292
  2493  006C88                     l291:
  2494                           ;pomiar.c: 947: else p=80;
  2495  006C88  0E50               	movlw	80
  2496  006C8A  6ED9               	movwf	fsr2l,c
  2497  006C8C                     l292:
  2498                           ;pomiar.c: 948: return p;
  2499  006C8C  50D9               	movf	fsr2l,w,c
  2500  006C8E  0012               	return	
  2501  006C90                     l287:
  2502                           ;pomiar.c: 950: else
  2503  006C90  0E28               	movlw	40
  2504  006C92  6ED9               	movwf	fsr2l,c
  2505                           ;pomiar.c: 953: if((p+DtKNF.prop)<80) p=p+DtKNF.
      +                          prop;
  2506  006C94  C1D5  F000         	movff	_DtKNF+33,btemp
  2507  006C98  6A01               	clrf	btemp+1,c
  2508  006C9A  2600               	addwf	btemp,f,c
  2509  006C9C  0E00               	movlw	0
  2510  006C9E  2201               	addwfc	btemp+1,f,c
  2511  006CA0  5001               	movf	btemp+1,w,c
  2512  006CA2  0A80               	xorlw	128
  2513  006CA4  0F80               	addlw	-128
  2514  006CA6  0E50               	movlw	80
  2515  006CA8  B4D8               	btfsc	status,2,c
  2516  006CAA  5C00               	subwf	btemp,w,c
  2517  006CAC  E204               	bc	l294
  2518  006CAE  C1D5  FFE8         	movff	_DtKNF+33,wreg
  2519  006CB2  26D9               	addwf	fsr2l,f,c
  2520  006CB4  D002               	goto	l295
  2521  006CB6                     l294:
  2522                           ;pomiar.c: 954: else p=80;
  2523  006CB6  0E50               	movlw	80
  2524  006CB8  6ED9               	movwf	fsr2l,c
  2525  006CBA                     l295:
  2526                           ;pomiar.c: 955: return p;
  2527  006CBA  50D9               	movf	fsr2l,w,c
  2528  006CBC  0012               	return	
  2529  006CBE                     l286:
  2530                           ;pomiar.c: 958: else
  2531  006CBE  0E28               	movlw	40
  2532  006CC0  6ED9               	movwf	fsr2l,c
  2533                           ;pomiar.c: 961: if((p+DtKNF.prop)<80) p=p+DtKNF.
      +                          prop;
  2534  006CC2  C1D5  F000         	movff	_DtKNF+33,btemp
  2535  006CC6  6A01               	clrf	btemp+1,c
  2536  006CC8  2600               	addwf	btemp,f,c
  2537  006CCA  0E00               	movlw	0
  2538  006CCC  2201               	addwfc	btemp+1,f,c
  2539  006CCE  5001               	movf	btemp+1,w,c
  2540  006CD0  0A80               	xorlw	128
  2541  006CD2  0F80               	addlw	-128
  2542  006CD4  0E50               	movlw	80
  2543  006CD6  B4D8               	btfsc	status,2,c
  2544  006CD8  5C00               	subwf	btemp,w,c
  2545  006CDA  E204               	bc	l297
  2546  006CDC  C1D5  FFE8         	movff	_DtKNF+33,wreg
  2547  006CE0  26D9               	addwf	fsr2l,f,c
  2548  006CE2  D002               	goto	l298
  2549  006CE4                     l297:
  2550                           ;pomiar.c: 962: else p=80;
  2551  006CE4  0E50               	movlw	80
  2552  006CE6  6ED9               	movwf	fsr2l,c
  2553  006CE8                     l298:
  2554                           ;pomiar.c: 963: return p;
  2555  006CE8  50D9               	movf	fsr2l,w,c
  2556  006CEA  0012               	return	
  2557  006CEC                     l285:
  2558                           ;pomiar.c: 966: else
  2559  006CEC  EE00  F083         	lfsr	0,_DtCO+4
  2560  006CF0  50EF               	movf	indf0,w,c
  2561  006CF2  E101 D0B0          	bz	l300
  2562                           ;pomiar.c: 969: {
  2563  006CF6  C06A  FFE8         	movff	_DtZW+3,wreg
  2564  006CFA  0A80               	xorlw	128
  2565  006CFC  0F67               	addlw	-153
  2566  006CFE  E301 D093          	bc	l301
  2567                           ;pomiar.c: 971: {
  2568  006D02  C083  F002         	movff	_DtCO+4,btemp+2
  2569  006D06  6A03               	clrf	btemp+3,c
  2570  006D08  C06A  FFF6         	movff	_DtZW+3,tblptrl
  2571  006D0C  6AF7               	clrf	tblptrh,c
  2572  006D0E  BEF6               	btfsc	tblptrl,7,c
  2573  006D10  06F7               	decf	tblptrh,f,c
  2574  006D12  0E19               	movlw	25
  2575  006D14  6E00               	movwf	btemp,c
  2576  006D16  6A01               	clrf	btemp+1,c
  2577  006D18  50F6               	movf	tblptrl,w,c
  2578  006D1A  5E00               	subwf	btemp,f,c
  2579  006D1C  50F7               	movf	tblptrh,w,c
  2580  006D1E  5A01               	subwfb	btemp+1,f,c
  2581  006D20  ECB7  F06D         	call	awmul
  2582  006D24  0100               	movlb	__Lparam shr (0+8)
  2583  006D26  C004  F0A9         	movff	btemp+4,?a_GetPGD_PCO
  2584  006D2A  C005  F0AA         	movff	btemp+5,?a_GetPGD_PCO+1
  2585  006D2E  0E00               	movlw	0
  2586  006D30  BFAA               	btfsc	(?a_GetPGD_PCO+1)^(__Lparam& (0+65280)),7
      +                          ,b
  2587  006D32  0EFF               	movlw	-1
  2588  006D34  6FAB               	movwf	(?a_GetPGD_PCO+2)^(__Lparam& (0+65280)),b
  2589  006D36  6FAC               	movwf	(?a_GetPGD_PCO+3)^(__Lparam& (0+65280)),b
  2590                           ;pomiar.c: 973: m*=(55-25);
  2591  006D38  0E1E               	movlw	30
  2592  006D3A  6E04               	movwf	btemp+4,c
  2593  006D3C  6A05               	clrf	btemp+5,c
  2594  006D3E  6A06               	clrf	btemp+6,c
  2595  006D40  6A07               	clrf	btemp+7,c
  2596  006D42  0EA9               	movlw	low ?a_GetPGD_PCO
  2597  006D44  6EE9               	movwf	fsr0l,c
  2598  006D46  0E00               	movlw	high ?a_GetPGD_PCO
  2599  006D48  6EEA               	movwf	fsr0h,c
  2600  006D4A  ECEB  F06D         	call	almul_f
  2601                           ;pomiar.c: 974: m*=100;
  2602  006D4E  0E64               	movlw	100
  2603  006D50  6E04               	movwf	btemp+4,c
  2604  006D52  6A05               	clrf	btemp+5,c
  2605  006D54  6A06               	clrf	btemp+6,c
  2606  006D56  6A07               	clrf	btemp+7,c
  2607  006D58  0EA9               	movlw	low ?a_GetPGD_PCO
  2608  006D5A  6EE9               	movwf	fsr0l,c
  2609  006D5C  0E00               	movlw	high ?a_GetPGD_PCO
  2610  006D5E  6EEA               	movwf	fsr0h,c
  2611  006D60  ECEB  F06D         	call	almul_f
  2612                           ;pomiar.c: 975: m/=1485;
  2613  006D64  0ECD               	movlw	205
  2614  006D66  6E04               	movwf	btemp+4,c
  2615  006D68  0E05               	movlw	5
  2616  006D6A  6E05               	movwf	btemp+5,c
  2617  006D6C  6A06               	clrf	btemp+6,c
  2618  006D6E  6A07               	clrf	btemp+7,c
  2619  006D70  0EA9               	movlw	low ?a_GetPGD_PCO
  2620  006D72  6EE9               	movwf	fsr0l,c
  2621  006D74  0E00               	movlw	high ?a_GetPGD_PCO
  2622  006D76  6EEA               	movwf	fsr0h,c
  2623  006D78  ECF5  F06D         	call	aldiv_f
  2624                           ;pomiar.c: 976: if((25+m/100)>55) return 55;
  2625  006D7C  0E64               	movlw	100
  2626  006D7E  6E04               	movwf	btemp+4,c
  2627  006D80  6A05               	clrf	btemp+5,c
  2628  006D82  6A06               	clrf	btemp+6,c
  2629  006D84  6A07               	clrf	btemp+7,c
  2630  006D86  C0A9  F000         	movff	?a_GetPGD_PCO,btemp
  2631  006D8A  C0AA  F001         	movff	?a_GetPGD_PCO+1,btemp+1
  2632  006D8E  C0AB  F002         	movff	?a_GetPGD_PCO+2,btemp+2
  2633  006D92  C0AC  F003         	movff	?a_GetPGD_PCO+3,btemp+3
  2634  006D96  ECF4  F06C         	call	aldiv
  2635  006D9A  0E19               	movlw	25
  2636  006D9C  2400               	addwf	btemp,w,c
  2637  006D9E  6E04               	movwf	btemp+4,c
  2638  006DA0  0E00               	movlw	0
  2639  006DA2  2001               	addwfc	btemp+1,w,c
  2640  006DA4  6E05               	movwf	btemp+5,c
  2641  006DA6  0E00               	movlw	0
  2642  006DA8  2002               	addwfc	btemp+2,w,c
  2643  006DAA  6E06               	movwf	btemp+6,c
  2644  006DAC  0E00               	movlw	0
  2645  006DAE  2003               	addwfc	btemp+3,w,c
  2646  006DB0  6E07               	movwf	btemp+7,c
  2647  006DB2  5007               	movf	btemp+7,w,c
  2648  006DB4  0A80               	xorlw	128
  2649  006DB6  0F80               	addlw	128
  2650  006DB8  E108               	bnz	u1815
  2651  006DBA  0E00               	movlw	0
  2652  006DBC  5C06               	subwf	btemp+6,w,c
  2653  006DBE  E105               	bnz	u1815
  2654  006DC0  0E00               	movlw	0
  2655  006DC2  5C05               	subwf	btemp+5,w,c
  2656  006DC4  E102               	bnz	u1815
  2657  006DC6  0E38               	movlw	56
  2658  006DC8  5C04               	subwf	btemp+4,w,c
  2659  006DCA                     u1815:
  2660  006DCA  E301               	bnc	l302
  2661  006DCC  0C37               	retlw	55
  2662  006DCE                     l302:
  2663                           ;pomiar.c: 977: else p=25+m/100;
  2664  006DCE  0E64               	movlw	100
  2665  006DD0  6E04               	movwf	btemp+4,c
  2666  006DD2  6A05               	clrf	btemp+5,c
  2667  006DD4  6A06               	clrf	btemp+6,c
  2668  006DD6  6A07               	clrf	btemp+7,c
  2669  006DD8  C0A9  F000         	movff	?a_GetPGD_PCO,btemp
  2670  006DDC  C0AA  F001         	movff	?a_GetPGD_PCO+1,btemp+1
  2671  006DE0  C0AB  F002         	movff	?a_GetPGD_PCO+2,btemp+2
  2672  006DE4  C0AC  F003         	movff	?a_GetPGD_PCO+3,btemp+3
  2673  006DE8  ECF4  F06C         	call	aldiv
  2674  006DEC  5000               	movf	btemp,w,c
  2675  006DEE  0F19               	addlw	25
  2676  006DF0  6ED9               	movwf	fsr2l,c
  2677                           ;pomiar.c: 979: if(p<25) p=25;
  2678  006DF2  0E19               	movlw	25
  2679  006DF4  60D9               	cpfslt	fsr2l,c
  2680  006DF6  D001               	goto	l304
  2681  006DF8  6ED9               	movwf	fsr2l,c
  2682  006DFA                     l304:
  2683                           ;pomiar.c: 980: if((p+DtKNF.prop)<55) p=p+DtKNF.
      +                          prop;
  2684  006DFA  C1D5  FFE8         	movff	_DtKNF+33,wreg
  2685  006DFE  CFD9 F000          	movff	fsr2l,btemp
  2686  006E02  6A01               	clrf	btemp+1,c
  2687  006E04  2600               	addwf	btemp,f,c
  2688  006E06  0E00               	movlw	0
  2689  006E08  2201               	addwfc	btemp+1,f,c
  2690  006E0A  5001               	movf	btemp+1,w,c
  2691  006E0C  0A80               	xorlw	128
  2692  006E0E  0F80               	addlw	-128
  2693  006E10  0E37               	movlw	55
  2694  006E12  B4D8               	btfsc	status,2,c
  2695  006E14  5C00               	subwf	btemp,w,c
  2696  006E16  E204               	bc	l305
  2697  006E18  C1D5  FFE8         	movff	_DtKNF+33,wreg
  2698  006E1C  26D9               	addwf	fsr2l,f,c
  2699  006E1E  D002               	goto	l306
  2700  006E20                     l305:
  2701                           ;pomiar.c: 981: else p=55;
  2702  006E20  0E37               	movlw	55
  2703  006E22  6ED9               	movwf	fsr2l,c
  2704  006E24                     l306:
  2705                           ;pomiar.c: 982: return p;
  2706  006E24  50D9               	movf	fsr2l,w,c
  2707  006E26  0012               	return	
  2708  006E28                     l301:
  2709                           ;pomiar.c: 984: else
  2710  006E28  0E19               	movlw	25
  2711  006E2A  6ED9               	movwf	fsr2l,c
  2712                           ;pomiar.c: 987: if((p+DtKNF.prop)<55) p=p+DtKNF.
      +                          prop;
  2713  006E2C  C1D5  F000         	movff	_DtKNF+33,btemp
  2714  006E30  6A01               	clrf	btemp+1,c
  2715  006E32  2600               	addwf	btemp,f,c
  2716  006E34  0E00               	movlw	0
  2717  006E36  2201               	addwfc	btemp+1,f,c
  2718  006E38  5001               	movf	btemp+1,w,c
  2719  006E3A  0A80               	xorlw	128
  2720  006E3C  0F80               	addlw	-128
  2721  006E3E  0E37               	movlw	55
  2722  006E40  B4D8               	btfsc	status,2,c
  2723  006E42  5C00               	subwf	btemp,w,c
  2724  006E44  E204               	bc	l308
  2725  006E46  C1D5  FFE8         	movff	_DtKNF+33,wreg
  2726  006E4A  26D9               	addwf	fsr2l,f,c
  2727  006E4C  D002               	goto	l309
  2728  006E4E                     l308:
  2729                           ;pomiar.c: 988: else p=55;
  2730  006E4E  0E37               	movlw	55
  2731  006E50  6ED9               	movwf	fsr2l,c
  2732  006E52                     l309:
  2733                           ;pomiar.c: 989: return p;
  2734  006E52  50D9               	movf	fsr2l,w,c
  2735  006E54  0012               	return	
  2736  006E56                     l300:
  2737                           ;pomiar.c: 992: else
  2738  006E56  0E19               	movlw	25
  2739  006E58  6ED9               	movwf	fsr2l,c
  2740                           ;pomiar.c: 995: if((p+DtKNF.prop)<55) p=p+DtKNF.
      +                          prop;
  2741  006E5A  C1D5  F000         	movff	_DtKNF+33,btemp
  2742  006E5E  6A01               	clrf	btemp+1,c
  2743  006E60  2600               	addwf	btemp,f,c
  2744  006E62  0E00               	movlw	0
  2745  006E64  2201               	addwfc	btemp+1,f,c
  2746  006E66  5001               	movf	btemp+1,w,c
  2747  006E68  0A80               	xorlw	128
  2748  006E6A  0F80               	addlw	-128
  2749  006E6C  0E37               	movlw	55
  2750  006E6E  B4D8               	btfsc	status,2,c
  2751  006E70  5C00               	subwf	btemp,w,c
  2752  006E72  E204               	bc	l311
  2753  006E74  C1D5  FFE8         	movff	_DtKNF+33,wreg
  2754  006E78  26D9               	addwf	fsr2l,f,c
  2755  006E7A  D002               	goto	l312
  2756  006E7C                     l311:
  2757                           ;pomiar.c: 996: else p=55;
  2758  006E7C  0E37               	movlw	55
  2759  006E7E  6ED9               	movwf	fsr2l,c
  2760  006E80                     l312:
  2761                           ;pomiar.c: 997: return p;
  2762  006E80  50D9               	movf	fsr2l,w,c
  2763  006E82  0012               	return	
  2764                           ;pomiar.c: 998: }
  2765  006E84                     __end_of_GetPGD_PCO:
  2766                           ;pomiar.c: 1003: void WritePCO(void)
  2767                           ;pomiar.c: 1004: {
  2768  006E84                     _WritePCO:
  2769  000000                     
  2770                           ;pomiar.c: 1005: if(DtCO._newPCO&&RTdS(6)>=10)
  2771  006E84  0100               	movlb	(_DtCO+1) shr (0+8)
  2772  006E86  AF80               	btfss	(_DtCO+1)& (0+255),7,b
  2773  006E88  0012               	return	
  2774  006E8A  0E06               	movlw	6
  2775  006E8C  ECC9  F063         	call	_RTdS
  2776  006E90  6E00               	movwf	btemp,c
  2777  006E92  0E0A               	movlw	10
  2778  006E94  5C00               	subwf	btemp,w,c
  2779  006E96  A0D8               	btfss	status,0,c
  2780  006E98  0012               	return	
  2781                           ;pomiar.c: 1006: {
  2782  006E9A  0100               	movlb	(_DtCO+1) shr (0+8)
  2783  006E9C  9F80               	bcf	(_DtCO+1)& (0+255),7,b
  2784                           ;pomiar.c: 1008: StartRTdS(6);
  2785  006E9E  0E06               	movlw	6
  2786  006EA0  ECB7  F063         	call	_StartRTdS
  2787                           ;pomiar.c: 1009: WriteEEPCO();
  2788  006EA4  EF44  F045         	goto	_WriteEEPCO	;wreg free
  2789                           ;pomiar.c: 1010: }
  2790  006EA8                     __end_of_WritePCO:
  2791                           ;pomiar.c: 1014: void PomiarPCO(void)
  2792                           ;pomiar.c: 1015: {
  2793  006EA8                     _PomiarPCO:
  2794  000000                     
  2795                           ;pomiar.c: 1016: static unsigned char pnst;
  2796  006EA8  0103               	movlb	(_M+2) shr (0+8)
  2797  006EAA  BF08               	btfsc	(_M+2)& (0+255),7,b
  2798  006EAC  D00E               	goto	l316
  2799                           ;pomiar.c: 1020: {
  2800  006EAE  EE01  F0CE         	lfsr	0,_DtKNF+26
  2801  006EB2  50EF               	movf	indf0,w,c
  2802  006EB4  E105               	bnz	l317
  2803                           ;pomiar.c: 1022: {
  2804  006EB6  0E28               	movlw	40
  2805  006EB8  CFE8 F085          	movff	wreg,_DtCO+6
  2806                           ;pomiar.c: 1024: DtCO.maxPCO=80;
  2807  006EBC  0E50               	movlw	80
  2808  006EBE  D008               	goto	L8
  2809                           ;pomiar.c: 1025: }
  2810  006EC0                     l317:
  2811                           ;pomiar.c: 1026: else
  2812  006EC0  0E19               	movlw	25
  2813  006EC2  CFE8 F085          	movff	wreg,_DtCO+6
  2814                           ;pomiar.c: 1029: DtCO.maxPCO=55;
  2815  006EC6  0E37               	movlw	55
  2816  006EC8  D003               	goto	L8
  2817                           ;pomiar.c: 1030: }
  2818  006ECA                     l316:
  2819                           ;pomiar.c: 1032: else
  2820  006ECA  0100               	movlb	(_DtCO+6) shr (0+8)
  2821  006ECC  6B85               	clrf	(_DtCO+6)& (0+255),b
  2822                           ;pomiar.c: 1035: DtCO.maxPCO=99;
  2823  006ECE  0E63               	movlw	99
  2824  006ED0                     L8:
  2825  006ED0  CFE8 F086          	movff	wreg,_DtCO+7
  2826                           ;pomiar.c: 1036: }
  2827  006ED4  C085  F331         	movff	_DtCO+6,_RSDT1+11
  2828                           ;pomiar.c: 1038: RSDT1.outPCOmx=DtCO.maxPCO;
  2829  006ED8  C086  F332         	movff	_DtCO+7,_RSDT1+12
  2830                           ;pomiar.c: 1039: if(!GetBit2(RSDT1.inSTAT0,7)&&M
      +                          GSD._CON)
  2831  006EDC  0E07               	movlw	7
  2832  006EDE  0100               	movlb	__Lparam shr (0+8)
  2833  006EE0  6FA9               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2834  006EE2  C365  FFE8         	movff	_RSDT1+63,wreg
  2835  006EE6  EC24  F06A         	call	_GetBit2
  2836  006EEA  E221               	bc	l320
  2837  006EEC  0102               	movlb	_MGSD shr (0+8)
  2838  006EEE  ADAE               	btfss	_MGSD& (0+255),6,b
  2839  006EF0  D01E               	goto	l320
  2840                           ;pomiar.c: 1040: {
  2841  006EF2  C362  FE84         	movff	_RSDT1+60,F1619
  2842                           ;pomiar.c: 1042: if(pnst<DtCO.minPCO) pnst=DtCO.
      +                          minPCO;
  2843  006EF6  C085  FFE8         	movff	_DtCO+6,wreg
  2844  006EFA  010E               	movlb	F1619 shr (0+8)
  2845  006EFC  6184               	cpfslt	F1619& (0+255),b
  2846  006EFE  D002               	goto	l321
  2847  006F00  C085  FE84         	movff	_DtCO+6,F1619
  2848  006F04                     l321:
  2849                           ;pomiar.c: 1043: if(pnst>DtCO.maxPCO) pnst=DtCO.
      +                          maxPCO;
  2850  006F04  CE84  FFE8         	movff	F1619,wreg
  2851  006F08  0100               	movlb	(_DtCO+7) shr (0+8)
  2852  006F0A  6186               	cpfslt	(_DtCO+7)& (0+255),b
  2853  006F0C  D002               	goto	l322
  2854  006F0E  C086  FE84         	movff	_DtCO+7,F1619
  2855  006F12                     l322:
  2856                           ;pomiar.c: 1044: if(DtCO.PCO!=pnst)
  2857  006F12  C083  FFE8         	movff	_DtCO+4,wreg
  2858  006F16  010E               	movlb	F1619 shr (0+8)
  2859  006F18  1984               	xorwf	F1619& (0+255),w,b
  2860  006F1A  E007               	bz	l323
  2861                           ;pomiar.c: 1045: {
  2862  006F1C  CE84  F083         	movff	F1619,_DtCO+4
  2863                           ;pomiar.c: 1047: DtCO._newPCO=1;
  2864  006F20  0100               	movlb	(_DtCO+1) shr (0+8)
  2865  006F22  8F80               	bsf	(_DtCO+1)& (0+255),7,b
  2866                           ;pomiar.c: 1048: StartRTdS(6);
  2867  006F24  0E06               	movlw	6
  2868  006F26  ECB7  F063         	call	_StartRTdS
  2869  006F2A                     l323:
  2870                           ;pomiar.c: 1049: }
  2871  006F2A  DFAC               	call	_WritePCO	;wreg free
  2872  006F2C  D012               	goto	l326
  2873                           ;pomiar.c: 1051: RSDT1.outPCO=DtCO.PCO;
  2874                           ;pomiar.c: 1052: }
  2875  006F2E                     l320:
  2876                           ;pomiar.c: 1053: else
  2877  006F2E  EC4C  F045         	call	_ReadEEPCO	;wreg free
  2878  006F32  CFE8 F083          	movff	wreg,_DtCO+4
  2879                           ;pomiar.c: 1056: if(pnst<DtCO.minPCO) pnst=DtCO.
      +                          minPCO;
  2880  006F36  C085  FFE8         	movff	_DtCO+6,wreg
  2881  006F3A  010E               	movlb	F1619 shr (0+8)
  2882  006F3C  6184               	cpfslt	F1619& (0+255),b
  2883  006F3E  D002               	goto	l325
  2884  006F40  C085  FE84         	movff	_DtCO+6,F1619
  2885  006F44                     l325:
  2886                           ;pomiar.c: 1057: if(pnst>DtCO.maxPCO) pnst=DtCO.
      +                          maxPCO;
  2887  006F44  CE84  FFE8         	movff	F1619,wreg
  2888  006F48  0100               	movlb	(_DtCO+7) shr (0+8)
  2889  006F4A  6186               	cpfslt	(_DtCO+7)& (0+255),b
  2890  006F4C  D002               	goto	l326
  2891  006F4E  C086  FE84         	movff	_DtCO+7,F1619
  2892  006F52                     l326:
  2893                           ;pomiar.c: 1058: RSDT1.outPCO=DtCO.PCO;
  2894  006F52  C083  F32F         	movff	_DtCO+4,_RSDT1+9
  2895                           ;pomiar.c: 1059: }
  2896  006F56  0103               	movlb	(_M+2) shr (0+8)
  2897  006F58  AF08               	btfss	(_M+2)& (0+255),7,b
  2898  006F5A  D003               	goto	l327
  2899  006F5C  DDF6               	call	_GetPGD_PCO	;wreg free
  2900  006F5E  CFE8 F087          	movff	wreg,_DtCO+8
  2901  006F62                     l327:
  2902                           ;pomiar.c: 1062: SetModPCO();
  2903  006F62  DDA0               	call	_SetModPCO	;wreg free
  2904                           ;pomiar.c: 1063: DtCO.DAD_CO=ReturnACfromNTC(DtC
      +                          O.PPCO-3);
  2905  006F64  C084  FFE8         	movff	_DtCO+5,wreg
  2906  006F68  0FFD               	addlw	-3
  2907  006F6A  EC9C  F068         	call	_ReturnACfromNTC
  2908  006F6E  CFE8 F08F          	movff	wreg,_DtCO+16
  2909                           ;pomiar.c: 1064: DtCO.MAD_CO=ReturnACfromNTC(DtC
      +                          O.PPCO-3-9);
  2910  006F72  C084  FFE8         	movff	_DtCO+5,wreg
  2911  006F76  0FF4               	addlw	-12
  2912  006F78  EC9C  F068         	call	_ReturnACfromNTC
  2913  006F7C  CFE8 F08E          	movff	wreg,_DtCO+15
  2914                           ;pomiar.c: 1065: }
  2915  006F80  0012               	return	
  2916  006F82                     __end_of_PomiarPCO:
  2917                           ;pomiar.c: 1069: void WritePCW(void)
  2918                           ;pomiar.c: 1070: {
  2919  006F82                     _WritePCW:
  2920  000000                     
  2921                           ;pomiar.c: 1071: if(DtCW._newPCW&&RTdS(7)>=10)
  2922  006F82  0100               	movlb	(_DtCW+1) shr (0+8)
  2923  006F84  A171               	btfss	(_DtCW+1)& (0+255),0,b
  2924  006F86  0012               	return	
  2925  006F88  0E07               	movlw	7
  2926  006F8A  ECC9  F063         	call	_RTdS
  2927  006F8E  6E00               	movwf	btemp,c
  2928  006F90  0E0A               	movlw	10
  2929  006F92  5C00               	subwf	btemp,w,c
  2930  006F94  A0D8               	btfss	status,0,c
  2931  006F96  0012               	return	
  2932                           ;pomiar.c: 1072: {
  2933  006F98  0100               	movlb	(_DtCW+1) shr (0+8)
  2934  006F9A  9171               	bcf	(_DtCW+1)& (0+255),0,b
  2935                           ;pomiar.c: 1074: StartRTdS(7);
  2936  006F9C  0E07               	movlw	7
  2937  006F9E  ECB7  F063         	call	_StartRTdS
  2938                           ;pomiar.c: 1075: WriteEEPCW();
  2939  006FA2  EF3A  F045         	goto	_WriteEEPCW	;wreg free
  2940                           ;pomiar.c: 1076: }
  2941  006FA6                     __end_of_WritePCW:
  2942                           ;pomiar.c: 1080: void SetModPCW(void)
  2943                           ;pomiar.c: 1081: {
  2944  006FA6                     _SetModPCW:
  2945  000000                     
  2946                           ;pomiar.c: 1082: if(M._AKTYWNE_KNF) DtCW.PPCW=60
      +                          ;
  2947  006FA6  0103               	movlb	(_M+3) shr (0+8)
  2948  006FA8  A109               	btfss	(_M+3)& (0+255),0,b
  2949  006FAA  D002               	goto	l331
  2950  006FAC  0E3C               	movlw	60
  2951  006FAE  D008               	goto	L9
  2952  006FB0                     l331:
  2953                           ;pomiar.c: 1083: else
  2954  006FB0  EE01  F0C2         	lfsr	0,_DtKNF+14
  2955  006FB4  50EF               	movf	indf0,w,c
  2956  006FB6  E107               	bnz	l333
  2957  006FB8  0103               	movlb	_M shr (0+8)
  2958  006FBA  A706               	btfss	_M& (0+255),3,b
  2959  006FBC  D004               	goto	l333
  2960  006FBE  0E46               	movlw	70
  2961  006FC0                     L9:
  2962  006FC0  CFE8 F074          	movff	wreg,_DtCW+4
  2963  006FC4  D002               	goto	l332
  2964  006FC6                     l333:
  2965                           ;pomiar.c: 1085: else DtCW.PPCW=DtCW.PCW;
  2966  006FC6  C073  F074         	movff	_DtCW+3,_DtCW+4
  2967  006FCA                     l332:
  2968                           ;pomiar.c: 1087: if(M._pob_DzCW)
  2969  006FCA  0103               	movlb	_M shr (0+8)
  2970  006FCC  AF06               	btfss	_M& (0+255),7,b
  2971  006FCE  D003               	goto	l335
  2972                           ;pomiar.c: 1088: {
  2973  006FD0  0E0A               	movlw	10
  2974  006FD2  CFE8 F074          	movff	wreg,_DtCW+4
  2975  006FD6                     l335:
  2976                           ;pomiar.c: 1090: }
  2977  006FD6  C074  F336         	movff	_DtCW+4,_RSDT1+16
  2978                           ;pomiar.c: 1092: }
  2979  006FDA  0012               	return	
  2980  006FDC                     __end_of_SetModPCW:
  2981                           ;pomiar.c: 1095: void PomiarPCW(void)
  2982                           ;pomiar.c: 1096: {
  2983  006FDC                     _PomiarPCW:
  2984  000000                     
  2985                           ;pomiar.c: 1097: static unsigned char pnst;
  2986  006FDC  D006               	goto	l338
  2987  006FDE                     l339:
  2988  006FDE  D00B               	goto	L30
  2989                           ;pomiar.c: 1102: {
  2990                           ;pomiar.c: 1104: {
  2991                           ;pomiar.c: 1106: DtCW.maxPCW=60;
  2992                           ;pomiar.c: 1107: break;
  2993  006FE0                     l340:
  2994                           ;pomiar.c: 1108: }
  2995                           ;pomiar.c: 1110: {
  2996  006FE0  0E23               	movlw	35
  2997  006FE2  CFE8 F075          	movff	wreg,_DtCW+5
  2998                           ;pomiar.c: 1112: DtCW.maxPCW=65;
  2999  006FE6  0E41               	movlw	65
  3000  006FE8  D00A               	goto	L11
  3001                           ;pomiar.c: 1119: break;
  3002  006FEA                     l338:
  3003  006FEA  C1C2  FFE8         	movff	_DtKNF+14,wreg
  3004  006FEE  0A00               	xorlw	0
  3005  006FF0  E0F7               	bz	l340
  3006  006FF2  0A03               	xorlw	3
  3007  006FF4  E0F4               	bz	l339
  3008  006FF6                     L30:
  3009                           ;pomiar.c: 1113: break;
  3010                           ;pomiar.c: 1114: }
  3011                           ;pomiar.c: 1116: {
  3012  006FF6  0E1E               	movlw	30
  3013  006FF8  CFE8 F075          	movff	wreg,_DtCW+5
  3014                           ;pomiar.c: 1118: DtCW.maxPCW=60;
  3015  006FFC  0E3C               	movlw	60
  3016  006FFE                     L11:
  3017  006FFE  CFE8 F076          	movff	wreg,_DtCW+6
  3018                           ;pomiar.c: 1122: RSDT1.outPCWmn=DtCW.minPCW;
  3019  007002  C075  F333         	movff	_DtCW+5,_RSDT1+13
  3020                           ;pomiar.c: 1123: RSDT1.outPCWmx=DtCW.maxPCW;
  3021  007006  C076  F334         	movff	_DtCW+6,_RSDT1+14
  3022                           ;pomiar.c: 1124: if(!GetBit2(RSDT1.inSTAT0,7)&&M
      +                          GSD._CON)
  3023  00700A  0E07               	movlw	7
  3024  00700C  0100               	movlb	__Lparam shr (0+8)
  3025  00700E  6FA9               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3026  007010  C365  FFE8         	movff	_RSDT1+63,wreg
  3027  007014  EC24  F06A         	call	_GetBit2
  3028  007018  E22F               	bc	l342
  3029  00701A  0102               	movlb	_MGSD shr (0+8)
  3030  00701C  ADAE               	btfss	_MGSD& (0+255),6,b
  3031  00701E  D02C               	goto	l342
  3032                           ;pomiar.c: 1125: {
  3033  007020  C363  FE85         	movff	_RSDT1+61,F1629
  3034                           ;pomiar.c: 1128: if(DtKNF.tpkt!=0)
  3035  007024  EE01  F0C2         	lfsr	0,_DtKNF+14
  3036  007028  50EF               	movf	indf0,w,c
  3037  00702A  E008               	bz	l343
  3038                           ;pomiar.c: 1129: {
  3039  00702C  C075  FFE8         	movff	_DtCW+5,wreg
  3040  007030  010E               	movlb	F1629 shr (0+8)
  3041  007032  6185               	cpfslt	F1629& (0+255),b
  3042  007034  D00C               	goto	l345
  3043  007036  C075  FE85         	movff	_DtCW+5,F1629
  3044                           ;pomiar.c: 1131: }
  3045  00703A  D009               	goto	l345
  3046  00703C                     l343:
  3047                           ;pomiar.c: 1132: else
  3048  00703C  C075  FFE8         	movff	_DtCW+5,wreg
  3049  007040  010E               	movlb	F1629 shr (0+8)
  3050  007042  6185               	cpfslt	F1629& (0+255),b
  3051  007044  D004               	goto	l345
  3052  007046  0100               	movlb	(_DtCW+5) shr (0+8)
  3053  007048  0575               	decf	(_DtCW+5)& (0+255),w,b
  3054  00704A  CFE8 FE85          	movff	wreg,F1629
  3055  00704E                     l345:
  3056                           ;pomiar.c: 1135: }
  3057  00704E  CE85  FFE8         	movff	F1629,wreg
  3058  007052  0100               	movlb	(_DtCW+6) shr (0+8)
  3059  007054  6176               	cpfslt	(_DtCW+6)& (0+255),b
  3060  007056  D002               	goto	l347
  3061  007058  C076  FE85         	movff	_DtCW+6,F1629
  3062  00705C                     l347:
  3063                           ;pomiar.c: 1137: if(DtCW.PCW!=pnst)
  3064  00705C  C073  FFE8         	movff	_DtCW+3,wreg
  3065  007060  010E               	movlb	F1629 shr (0+8)
  3066  007062  1985               	xorwf	F1629& (0+255),w,b
  3067  007064  E007               	bz	l348
  3068                           ;pomiar.c: 1138: {
  3069  007066  CE85  F073         	movff	F1629,_DtCW+3
  3070                           ;pomiar.c: 1140: DtCW._newPCW=1;
  3071  00706A  0100               	movlb	(_DtCW+1) shr (0+8)
  3072  00706C  8171               	bsf	(_DtCW+1)& (0+255),0,b
  3073                           ;pomiar.c: 1141: StartRTdS(7);
  3074  00706E  0E07               	movlw	7
  3075  007070  ECB7  F063         	call	_StartRTdS
  3076  007074                     l348:
  3077                           ;pomiar.c: 1142: }
  3078  007074  DF86               	call	_WritePCW	;wreg free
  3079  007076  D020               	goto	l354
  3080                           ;pomiar.c: 1144: RSDT1.outPCW=DtCW.PCW;
  3081                           ;pomiar.c: 1145: }
  3082  007078                     l342:
  3083                           ;pomiar.c: 1146: else
  3084  007078  EC42  F045         	call	_ReadEEPCW	;wreg free
  3085  00707C  CFE8 F073          	movff	wreg,_DtCW+3
  3086                           ;pomiar.c: 1149: if(DtKNF.tpkt!=0)
  3087  007080  EE01  F0C2         	lfsr	0,_DtKNF+14
  3088  007084  50EF               	movf	indf0,w,c
  3089  007086  E008               	bz	l350
  3090                           ;pomiar.c: 1150: {
  3091  007088  C075  FFE8         	movff	_DtCW+5,wreg
  3092  00708C  010E               	movlb	F1629 shr (0+8)
  3093  00708E  6185               	cpfslt	F1629& (0+255),b
  3094  007090  D00C               	goto	l352
  3095  007092  C075  FE85         	movff	_DtCW+5,F1629
  3096                           ;pomiar.c: 1152: }
  3097  007096  D009               	goto	l352
  3098  007098                     l350:
  3099                           ;pomiar.c: 1153: else
  3100  007098  C075  FFE8         	movff	_DtCW+5,wreg
  3101  00709C  010E               	movlb	F1629 shr (0+8)
  3102  00709E  6185               	cpfslt	F1629& (0+255),b
  3103  0070A0  D004               	goto	l352
  3104  0070A2  0100               	movlb	(_DtCW+5) shr (0+8)
  3105  0070A4  0575               	decf	(_DtCW+5)& (0+255),w,b
  3106  0070A6  CFE8 FE85          	movff	wreg,F1629
  3107  0070AA                     l352:
  3108                           ;pomiar.c: 1156: }
  3109  0070AA  CE85  FFE8         	movff	F1629,wreg
  3110  0070AE  0100               	movlb	(_DtCW+6) shr (0+8)
  3111  0070B0  6176               	cpfslt	(_DtCW+6)& (0+255),b
  3112  0070B2  D002               	goto	l354
  3113  0070B4  C076  FE85         	movff	_DtCW+6,F1629
  3114  0070B8                     l354:
  3115                           ;pomiar.c: 1158: RSDT1.outPCW=DtCW.PCW;
  3116  0070B8  C073  F330         	movff	_DtCW+3,_RSDT1+10
  3117                           ;pomiar.c: 1159: }
  3118  0070BC  DF74               	call	_SetModPCW	;wreg free
  3119                           ;pomiar.c: 1161: DtCW.DAD_CW=ReturnACfromNTC(DtC
      +                          W.PPCW-(3-1));
  3120  0070BE  C074  FFE8         	movff	_DtCW+4,wreg
  3121  0070C2  0FFE               	addlw	-2
  3122  0070C4  EC9C  F068         	call	_ReturnACfromNTC
  3123  0070C8  CFE8 F07E          	movff	wreg,_DtCW+14
  3124                           ;pomiar.c: 1162: DtCW.MAD_CW=ReturnACfromNTC(DtC
      +                          W.PPCW-(3-1)-6);
  3125  0070CC  C074  FFE8         	movff	_DtCW+4,wreg
  3126  0070D0  0FF8               	addlw	-8
  3127  0070D2  EC9C  F068         	call	_ReturnACfromNTC
  3128  0070D6  CFE8 F07D          	movff	wreg,_DtCW+13
  3129                           ;pomiar.c: 1163: }
  3130  0070DA  0012               	return	
  3131  0070DC                     __end_of_PomiarPCW:
  3132                           ;pomiar.c: 1166: void WriteECO(void)
  3133                           ;pomiar.c: 1167: {
  3134  0070DC                     _WriteECO:
  3135  000000                     
  3136                           ;pomiar.c: 1168: if(DtIN._newECO&&RTdS(14)>=10)
  3137  0070DC  0100               	movlb	_DtIN shr (0+8)
  3138  0070DE  A392               	btfss	_DtIN& (0+255),1,b
  3139  0070E0  0012               	return	
  3140  0070E2  0E0E               	movlw	14
  3141  0070E4  ECC9  F063         	call	_RTdS
  3142  0070E8  6E00               	movwf	btemp,c
  3143  0070EA  0E0A               	movlw	10
  3144  0070EC  5C00               	subwf	btemp,w,c
  3145  0070EE  A0D8               	btfss	status,0,c
  3146  0070F0  0012               	return	
  3147                           ;pomiar.c: 1169: {
  3148  0070F2  0100               	movlb	_DtIN shr (0+8)
  3149  0070F4  9392               	bcf	_DtIN& (0+255),1,b
  3150                           ;pomiar.c: 1171: StartRTdS(14);
  3151  0070F6  0E0E               	movlw	14
  3152  0070F8  ECB7  F063         	call	_StartRTdS
  3153                           ;pomiar.c: 1172: WriteEEECO();
  3154  0070FC  EF4E  F045         	goto	_WriteEEECO	;wreg free
  3155                           ;pomiar.c: 1173: }
  3156  007100                     __end_of_WriteECO:
  3157                           ;pomiar.c: 1177: void PomiarECO(void)
  3158                           ;pomiar.c: 1178: {
  3159  007100                     _PomiarECO:
  3160  000000                     
  3161                           ;pomiar.c: 1179: static unsigned char peco;
  3162  007100  0E07               	movlw	7
  3163  007102  0100               	movlb	__Lparam shr (0+8)
  3164  007104  6FA9               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3165  007106  C365  FFE8         	movff	_RSDT1+63,wreg
  3166  00710A  EC24  F06A         	call	_GetBit2
  3167  00710E  E222               	bc	l358
  3168  007110  0102               	movlb	_MGSD shr (0+8)
  3169  007112  ADAE               	btfss	_MGSD& (0+255),6,b
  3170  007114  D01F               	goto	l358
  3171                           ;pomiar.c: 1182: {
  3172  007116  C364  FFE8         	movff	_RSDT1+62,wreg
  3173  00711A  080A               	sublw	10
  3174  00711C  CFE8 FE86          	movff	wreg,F1637
  3175                           ;pomiar.c: 1184: if(peco<1) peco=1;
  3176  007120  0E01               	movlw	1
  3177  007122  010E               	movlb	F1637 shr (0+8)
  3178  007124  6186               	cpfslt	F1637& (0+255),b
  3179  007126  D002               	goto	l359
  3180  007128  CFE8 FE86          	movff	wreg,F1637
  3181  00712C                     l359:
  3182                           ;pomiar.c: 1185: if(peco>9) peco=9;
  3183  00712C  0E09               	movlw	9
  3184  00712E  010E               	movlb	F1637 shr (0+8)
  3185  007130  6586               	cpfsgt	F1637& (0+255),b
  3186  007132  D002               	goto	l360
  3187  007134  CFE8 FE86          	movff	wreg,F1637
  3188  007138                     l360:
  3189                           ;pomiar.c: 1186: if(DtIN.Eco!=peco)
  3190  007138  C09B  FFE8         	movff	_DtIN+9,wreg
  3191  00713C  010E               	movlb	F1637 shr (0+8)
  3192  00713E  1986               	xorwf	F1637& (0+255),w,b
  3193  007140  E007               	bz	l361
  3194                           ;pomiar.c: 1187: {
  3195  007142  CE86  F09B         	movff	F1637,_DtIN+9
  3196                           ;pomiar.c: 1189: DtIN._newECO=1;
  3197  007146  0100               	movlb	_DtIN shr (0+8)
  3198  007148  8392               	bsf	_DtIN& (0+255),1,b
  3199                           ;pomiar.c: 1190: StartRTdS(14);
  3200  00714A  0E0E               	movlw	14
  3201  00714C  ECB7  F063         	call	_StartRTdS
  3202  007150                     l361:
  3203                           ;pomiar.c: 1191: }
  3204  007150  DFC5               	call	_WriteECO	;wreg free
  3205                           ;pomiar.c: 1193: }
  3206  007152  D010               	goto	l362
  3207  007154                     l358:
  3208                           ;pomiar.c: 1194: else
  3209  007154  EC56  F045         	call	_ReadEEECO	;wreg free
  3210  007158  CFE8 F09B          	movff	wreg,_DtIN+9
  3211                           ;pomiar.c: 1197: if(peco<1) peco=1;
  3212  00715C  0E01               	movlw	1
  3213  00715E  010E               	movlb	F1637 shr (0+8)
  3214  007160  6186               	cpfslt	F1637& (0+255),b
  3215  007162  D002               	goto	l363
  3216  007164  CFE8 FE86          	movff	wreg,F1637
  3217  007168                     l363:
  3218                           ;pomiar.c: 1198: if(peco>9) peco=9;
  3219  007168  0E09               	movlw	9
  3220  00716A  010E               	movlb	F1637 shr (0+8)
  3221  00716C  6586               	cpfsgt	F1637& (0+255),b
  3222  00716E  D002               	goto	l362
  3223  007170  CFE8 FE86          	movff	wreg,F1637
  3224  007174                     l362:
  3225                           ;pomiar.c: 1199: }
  3226  007174  C09B  F09C         	movff	_DtIN+9,_DtIN+10
  3227                           ;pomiar.c: 1203: RSDT1.outECO=10-DtIN.PPEco;
  3228  007178  C09C  FFE8         	movff	_DtIN+10,wreg
  3229  00717C  080A               	sublw	10
  3230  00717E  CFE8 F339          	movff	wreg,_RSDT1+19
  3231                           ;pomiar.c: 1204: }
  3232  007182  0012               	return	
  3233  007184                     __end_of_PomiarECO:
  3234                           ;pomiar.c: 1208: void WritePFN(void)
  3235                           ;pomiar.c: 1209: {
  3236  007184                     _WritePFN:
  3237  000000                     
  3238                           ;pomiar.c: 1210: if(PFN._newPFN&&RTdS(8)>=10)
  3239  007184  0100               	movlb	_PFN shr (0+8)
  3240  007186  A16B               	btfss	_PFN& (0+255),0,b
  3241  007188  0012               	return	
  3242  00718A  0E08               	movlw	8
  3243  00718C  ECC9  F063         	call	_RTdS
  3244  007190  6E00               	movwf	btemp,c
  3245  007192  0E0A               	movlw	10
  3246  007194  5C00               	subwf	btemp,w,c
  3247  007196  A0D8               	btfss	status,0,c
  3248  007198  0012               	return	
  3249                           ;pomiar.c: 1211: {
  3250  00719A  0100               	movlb	_PFN shr (0+8)
  3251  00719C  916B               	bcf	_PFN& (0+255),0,b
  3252                           ;pomiar.c: 1213: StartRTdS(8);
  3253  00719E  0E08               	movlw	8
  3254  0071A0  ECB7  F063         	call	_StartRTdS
  3255                           ;pomiar.c: 1214: WriteEEPFN();
  3256  0071A4  EF58  F045         	goto	_WriteEEPFN	;wreg free
  3257                           ;pomiar.c: 1215: }
  3258  0071A8                     __end_of_WritePFN:
  3259                           ;pomiar.c: 1219: void PomiarPFN(void)
  3260                           ;pomiar.c: 1220: {
  3261  0071A8                     _PomiarPFN:
  3262  000000                     
  3263                           ;pomiar.c: 1221: static unsigned char pnst;
  3264  0071A8  0E07               	movlw	7
  3265  0071AA  0100               	movlb	__Lparam shr (0+8)
  3266  0071AC  6FA9               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3267  0071AE  C365  FFE8         	movff	_RSDT1+63,wreg
  3268  0071B2  EC24  F06A         	call	_GetBit2
  3269  0071B6  E301 D0DE          	bc	l368
  3270  0071BA  0102               	movlb	_MGSD shr (0+8)
  3271  0071BC  ADAE               	btfss	_MGSD& (0+255),6,b
  3272  0071BE  D0DB               	goto	l368
  3273                           ;pomiar.c: 1225: {
  3274  0071C0  0E05               	movlw	5
  3275  0071C2  0100               	movlb	__Lparam shr (0+8)
  3276  0071C4  6FA9               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3277  0071C6  C365  FFE8         	movff	_RSDT1+63,wreg
  3278  0071CA  EC24  F06A         	call	_GetBit2
  3279  0071CE  E328               	bnc	l369
  3280                           ;pomiar.c: 1227: {
  3281  0071D0  0100               	movlb	_PFN shr (0+8)
  3282  0071D2  996B               	bcf	_PFN& (0+255),4,b
  3283                           ;pomiar.c: 1229: PFN._lato=0;
  3284  0071D4  976B               	bcf	_PFN& (0+255),3,b
  3285                           ;pomiar.c: 1230: PFN._off=1;
  3286  0071D6  856B               	bsf	_PFN& (0+255),2,b
  3287                           ;pomiar.c: 1231: PFN._csn=0;
  3288  0071D8  936B               	bcf	_PFN& (0+255),1,b
  3289                           ;pomiar.c: 1232: PFN.poz=1;
  3290  0071DA  0E01               	movlw	1
  3291  0071DC  6F6C               	movwf	(_PFN+1)& (0+255),b
  3292  0071DE  6B6D               	clrf	(_PFN+2)& (0+255),b
  3293                           ;pomiar.c: 1233: BitSet2(&RSDT1.outSTAT2,4,0);
  3294  0071E0  0100               	movlb	__Lparam shr (0+8)
  3295  0071E2  0E3E               	movlw	low (_RSDT1+24)
  3296  0071E4  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3297  0071E6  0E03               	movlw	high (_RSDT1+24)
  3298  0071E8  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3299  0071EA  0E04               	movlw	4
  3300  0071EC  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3301  0071EE  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3302  0071F0  EC57  F06A         	call	_BitSet2	;wreg free
  3303                           ;pomiar.c: 1234: BitSet2(&RSDT1.outSTAT2,5,0);
  3304  0071F4  0100               	movlb	__Lparam shr (0+8)
  3305  0071F6  0E3E               	movlw	low (_RSDT1+24)
  3306  0071F8  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3307  0071FA  0E03               	movlw	high (_RSDT1+24)
  3308  0071FC  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3309  0071FE  0E05               	movlw	5
  3310  007200  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3311  007202  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3312  007204  EC57  F06A         	call	_BitSet2	;wreg free
  3313                           ;pomiar.c: 1235: BitSet2(&RSDT1.outSTAT2,6,1);
  3314  007208  0100               	movlb	__Lparam shr (0+8)
  3315  00720A  0E3E               	movlw	low (_RSDT1+24)
  3316  00720C  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3317  00720E  0E03               	movlw	high (_RSDT1+24)
  3318  007210  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3319  007212  0E06               	movlw	6
  3320  007214  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3321  007216  0E01               	movlw	1
  3322  007218  6FAD               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3323  00721A  EC57  F06A         	call	_BitSet2	;wreg free
  3324                           ;pomiar.c: 1236: }
  3325  00721E  D086               	goto	l370
  3326  007220                     l369:
  3327                           ;pomiar.c: 1237: else
  3328  007220  0E03               	movlw	3
  3329  007222  0100               	movlb	__Lparam shr (0+8)
  3330  007224  6FA9               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3331  007226  C365  FFE8         	movff	_RSDT1+63,wreg
  3332  00722A  EC24  F06A         	call	_GetBit2
  3333  00722E  E328               	bnc	l371
  3334                           ;pomiar.c: 1239: {
  3335  007230  0100               	movlb	_PFN shr (0+8)
  3336  007232  896B               	bsf	_PFN& (0+255),4,b
  3337                           ;pomiar.c: 1241: PFN._lato=0;
  3338  007234  976B               	bcf	_PFN& (0+255),3,b
  3339                           ;pomiar.c: 1242: PFN._off=0;
  3340  007236  956B               	bcf	_PFN& (0+255),2,b
  3341                           ;pomiar.c: 1243: PFN._csn=0;
  3342  007238  936B               	bcf	_PFN& (0+255),1,b
  3343                           ;pomiar.c: 1244: PFN.poz=3;
  3344  00723A  0E03               	movlw	3
  3345  00723C  6F6C               	movwf	(_PFN+1)& (0+255),b
  3346  00723E  6B6D               	clrf	(_PFN+2)& (0+255),b
  3347                           ;pomiar.c: 1245: BitSet2(&RSDT1.outSTAT2,4,1);
  3348  007240  0100               	movlb	__Lparam shr (0+8)
  3349  007242  0E3E               	movlw	low (_RSDT1+24)
  3350  007244  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3351  007246  0E03               	movlw	high (_RSDT1+24)
  3352  007248  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3353  00724A  0E04               	movlw	4
  3354  00724C  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3355  00724E  0E01               	movlw	1
  3356  007250  6FAD               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3357  007252  EC57  F06A         	call	_BitSet2	;wreg free
  3358                           ;pomiar.c: 1246: BitSet2(&RSDT1.outSTAT2,5,0);
  3359  007256  0100               	movlb	__Lparam shr (0+8)
  3360  007258  0E3E               	movlw	low (_RSDT1+24)
  3361  00725A  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3362  00725C  0E03               	movlw	high (_RSDT1+24)
  3363  00725E  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3364  007260  0E05               	movlw	5
  3365  007262  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3366  007264  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3367  007266  EC57  F06A         	call	_BitSet2	;wreg free
  3368                           ;pomiar.c: 1247: BitSet2(&RSDT1.outSTAT2,6,0);
  3369  00726A  0100               	movlb	__Lparam shr (0+8)
  3370  00726C  0E3E               	movlw	low (_RSDT1+24)
  3371  00726E  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3372  007270  0E03               	movlw	high (_RSDT1+24)
  3373  007272  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3374  007274  0E06               	movlw	6
  3375  007276  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3376  007278  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3377  00727A  EC57  F06A         	call	_BitSet2	;wreg free
  3378                           ;pomiar.c: 1248: }
  3379  00727E  D056               	goto	l370
  3380  007280                     l371:
  3381                           ;pomiar.c: 1249: else
  3382  007280  0E04               	movlw	4
  3383  007282  0100               	movlb	__Lparam shr (0+8)
  3384  007284  6FA9               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3385  007286  C365  FFE8         	movff	_RSDT1+63,wreg
  3386  00728A  EC24  F06A         	call	_GetBit2
  3387                           ;pomiar.c: 1251: {
  3388  00728E  0100               	movlb	_PFN shr (0+8)
  3389  007290  E327               	bnc	L46
  3390  007292  996B               	bcf	_PFN& (0+255),4,b
  3391                           ;pomiar.c: 1253: PFN._lato=1;
  3392  007294  876B               	bsf	_PFN& (0+255),3,b
  3393                           ;pomiar.c: 1254: PFN._off=0;
  3394  007296  956B               	bcf	_PFN& (0+255),2,b
  3395                           ;pomiar.c: 1255: PFN._csn=0;
  3396  007298  936B               	bcf	_PFN& (0+255),1,b
  3397                           ;pomiar.c: 1256: PFN.poz=2;
  3398  00729A  0E02               	movlw	2
  3399  00729C  6F6C               	movwf	(_PFN+1)& (0+255),b
  3400  00729E  6B6D               	clrf	(_PFN+2)& (0+255),b
  3401                           ;pomiar.c: 1257: BitSet2(&RSDT1.outSTAT2,4,0);
  3402  0072A0  0100               	movlb	__Lparam shr (0+8)
  3403  0072A2  0E3E               	movlw	low (_RSDT1+24)
  3404  0072A4  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3405  0072A6  0E03               	movlw	high (_RSDT1+24)
  3406  0072A8  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3407  0072AA  0E04               	movlw	4
  3408  0072AC  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3409  0072AE  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3410  0072B0  EC57  F06A         	call	_BitSet2	;wreg free
  3411                           ;pomiar.c: 1258: BitSet2(&RSDT1.outSTAT2,5,1);
  3412  0072B4  0100               	movlb	__Lparam shr (0+8)
  3413  0072B6  0E3E               	movlw	low (_RSDT1+24)
  3414  0072B8  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3415  0072BA  0E03               	movlw	high (_RSDT1+24)
  3416  0072BC  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3417  0072BE  0E05               	movlw	5
  3418  0072C0  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3419  0072C2  0E01               	movlw	1
  3420  0072C4  6FAD               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3421  0072C6  EC57  F06A         	call	_BitSet2	;wreg free
  3422                           ;pomiar.c: 1259: BitSet2(&RSDT1.outSTAT2,6,0);
  3423  0072CA  0100               	movlb	__Lparam shr (0+8)
  3424  0072CC  0E3E               	movlw	low (_RSDT1+24)
  3425  0072CE  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3426  0072D0  0E03               	movlw	high (_RSDT1+24)
  3427  0072D2  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3428  0072D4  0E06               	movlw	6
  3429  0072D6  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3430  0072D8  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3431  0072DA  EC57  F06A         	call	_BitSet2	;wreg free
  3432                           ;pomiar.c: 1260: }
  3433  0072DE  D026               	goto	l370
  3434                           ;pomiar.c: 1261: else
  3435  0072E0                     L46:
  3436  0072E0  896B               	bsf	_PFN& (0+255),4,b
  3437                           ;pomiar.c: 1264: PFN._lato=0;
  3438  0072E2  976B               	bcf	_PFN& (0+255),3,b
  3439                           ;pomiar.c: 1265: PFN._off=0;
  3440  0072E4  956B               	bcf	_PFN& (0+255),2,b
  3441                           ;pomiar.c: 1266: PFN._csn=0;
  3442  0072E6  936B               	bcf	_PFN& (0+255),1,b
  3443                           ;pomiar.c: 1267: PFN.poz=3;
  3444  0072E8  0E03               	movlw	3
  3445  0072EA  6F6C               	movwf	(_PFN+1)& (0+255),b
  3446  0072EC  6B6D               	clrf	(_PFN+2)& (0+255),b
  3447                           ;pomiar.c: 1268: BitSet2(&RSDT1.outSTAT2,4,1);
  3448  0072EE  0100               	movlb	__Lparam shr (0+8)
  3449  0072F0  0E3E               	movlw	low (_RSDT1+24)
  3450  0072F2  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3451  0072F4  0E03               	movlw	high (_RSDT1+24)
  3452  0072F6  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3453  0072F8  0E04               	movlw	4
  3454  0072FA  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3455  0072FC  0E01               	movlw	1
  3456  0072FE  6FAD               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3457  007300  EC57  F06A         	call	_BitSet2	;wreg free
  3458                           ;pomiar.c: 1269: BitSet2(&RSDT1.outSTAT2,5,0);
  3459  007304  0100               	movlb	__Lparam shr (0+8)
  3460  007306  0E3E               	movlw	low (_RSDT1+24)
  3461  007308  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3462  00730A  0E03               	movlw	high (_RSDT1+24)
  3463  00730C  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3464  00730E  0E05               	movlw	5
  3465  007310  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3466  007312  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3467  007314  EC57  F06A         	call	_BitSet2	;wreg free
  3468                           ;pomiar.c: 1270: BitSet2(&RSDT1.outSTAT2,6,0);
  3469  007318  0100               	movlb	__Lparam shr (0+8)
  3470  00731A  0E3E               	movlw	low (_RSDT1+24)
  3471  00731C  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3472  00731E  0E03               	movlw	high (_RSDT1+24)
  3473  007320  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3474  007322  0E06               	movlw	6
  3475  007324  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3476  007326  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3477  007328  EC57  F06A         	call	_BitSet2	;wreg free
  3478  00732C                     l370:
  3479                           ;pomiar.c: 1271: }
  3480  00732C  EC60  F045         	call	_ReadEEPFN	;wreg free
  3481  007330  CFE8 FE87          	movff	wreg,F1641
  3482                           ;pomiar.c: 1273: if(PFN.poz!=pnst)
  3483  007334  CE87  F000         	movff	F1641,btemp
  3484  007338  6A01               	clrf	btemp+1,c
  3485  00733A  C06D  FFE8         	movff	_PFN+2,wreg
  3486  00733E  1801               	xorwf	btemp+1,w,c
  3487  007340  E103               	bnz	u2405
  3488  007342  C06C  FFE8         	movff	_PFN+1,wreg
  3489  007346  1800               	xorwf	btemp,w,c
  3490  007348                     u2405:
  3491  007348  E008               	bz	l375
  3492                           ;pomiar.c: 1274: {
  3493  00734A  0100               	movlb	_PFN shr (0+8)
  3494  00734C  B16B               	btfsc	_PFN& (0+255),0,b
  3495  00734E  D003               	goto	l376
  3496  007350  0E08               	movlw	8
  3497  007352  ECB7  F063         	call	_StartRTdS
  3498  007356                     l376:
  3499                           ;pomiar.c: 1276: PFN._newPFN=1;
  3500  007356  0100               	movlb	_PFN shr (0+8)
  3501  007358  816B               	bsf	_PFN& (0+255),0,b
  3502  00735A                     l375:
  3503                           ;pomiar.c: 1277: }
  3504  00735A  DF14               	call	_WritePFN	;wreg free
  3505                           ;pomiar.c: 1280: if(GetBit2(RSDT1.inSTAT0,6)) PF
      +                          N._res=1;
  3506  00735C  0E06               	movlw	6
  3507  00735E  0100               	movlb	__Lparam shr (0+8)
  3508  007360  6FA9               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3509  007362  C365  FFE8         	movff	_RSDT1+63,wreg
  3510  007366  EC24  F06A         	call	_GetBit2
  3511  00736A  0100               	movlb	_PFN shr (0+8)
  3512  00736C  E302               	bnc	L47
  3513  00736E  8B6B               	bsf	_PFN& (0+255),5,b
  3514  007370  0012               	return	
  3515                           ;pomiar.c: 1281: else PFN._res=0;
  3516  007372                     L47:
  3517  007372  9B6B               	bcf	_PFN& (0+255),5,b
  3518                           ;pomiar.c: 1282: }
  3519  007374  0012               	return	
  3520  007376                     l368:
  3521                           ;pomiar.c: 1283: else
  3522  007376  EC60  F045         	call	_ReadEEPFN	;wreg free
  3523  00737A  6E00               	movwf	btemp,c
  3524  00737C  0100               	movlb	(_PFN+1) shr (0+8)
  3525  00737E  C000  F06C         	movff	btemp,_PFN+1
  3526  007382  6B6D               	clrf	(_PFN+2)& (0+255),b
  3527                           ;pomiar.c: 1286: SetPFN();
  3528  007384  EFAC  F044         	goto	_SetPFN	;wreg free
  3529                           ;pomiar.c: 1287: }
  3530  007388                     __end_of_PomiarPFN:
  3531                           ;pomiar.c: 1291: void PomiarCS(void)
  3532                           ;pomiar.c: 1292: {
  3533  007388                     _PomiarCS:
  3534  000000                     
  3535                           ;pomiar.c: 1293: static unsigned char pcs;
  3536  007388  0E03               	movlw	3
  3537  00738A  EC33  F068         	call	_ReadAC
  3538  00738E  0100               	movlb	__Lparam shr (0+8)
  3539  007390  6FA9               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  3540                           ;pomiar.c: 1296: if((!DtKNF.tpcs&&(dac<16||dac>2
      +                          35))||(DtKNF.tpcs&&(dac<16||dac>235)))
  3541  007392  EE01  F0CF         	lfsr	0,_DtKNF+27
  3542  007396  50EF               	movf	indf0,w,c
  3543  007398  E108               	bnz	u2461
  3544  00739A  0E10               	movlw	16
  3545  00739C  61A9               	cpfslt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3546  00739E  D001               	goto	u2441
  3547  0073A0  D010               	goto	u2530
  3548  0073A2                     u2441:
  3549  0073A2  0EEB               	movlw	-21
  3550  0073A4  65A9               	cpfsgt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3551  0073A6  D001               	goto	u2461
  3552  0073A8  D00C               	goto	u2530
  3553  0073AA                     u2461:
  3554  0073AA  EE01  F0CF         	lfsr	0,_DtKNF+27
  3555  0073AE  50EF               	movf	indf0,w,c
  3556  0073B0  E022               	bz	l381
  3557  0073B2  0E10               	movlw	16
  3558  0073B4  0100               	movlb	__Lparam shr (0+8)
  3559  0073B6  61A9               	cpfslt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3560  0073B8  D001               	goto	u2491
  3561  0073BA  D003               	goto	u2530
  3562  0073BC                     u2491:
  3563  0073BC  0EEB               	movlw	-21
  3564  0073BE  65A9               	cpfsgt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3565  0073C0  D01A               	goto	l381
  3566  0073C2                     u2530:
  3567                           ;pomiar.c: 1297: {
  3568  0073C2  EE01  F0C9         	lfsr	0,_DtKNF+21
  3569  0073C6  50EF               	movf	indf0,w,c
  3570                           ;pomiar.c: 1299: {
  3571  0073C8  0100               	movlb	_DtCS shr (0+8)
  3572  0073CA  E10B               	bnz	L48
  3573  0073CC  9763               	bcf	_DtCS& (0+255),3,b
  3574                           ;pomiar.c: 1301: DtCS._no=0;
  3575  0073CE  9563               	bcf	_DtCS& (0+255),2,b
  3576                           ;pomiar.c: 1302: DtCS._lo=0;
  3577  0073D0  9363               	bcf	_DtCS& (0+255),1,b
  3578                           ;pomiar.c: 1303: DtCS._hi=0;
  3579  0073D2  9163               	bcf	_DtCS& (0+255),0,b
  3580                           ;pomiar.c: 1304: DtCS._work=1;
  3581  0073D4  8963               	bsf	_DtCS& (0+255),4,b
  3582                           ;pomiar.c: 1305: DtCS._no_mont=1;
  3583  0073D6  0E01               	movlw	1
  3584  0073D8  6F64               	movwf	(_DtCS+1)& (0+255),b
  3585  0073DA  0E00               	movlw	0
  3586  0073DC  6B65               	clrf	(_DtCS+2)& (0+255),b
  3587                           ;pomiar.c: 1306: DtCS.CS=0;
  3588  0073DE  6B66               	clrf	(_DtCS+3)& (0+255),b
  3589                           ;pomiar.c: 1307: }
  3590  0073E0  0012               	return	
  3591                           ;pomiar.c: 1308: else
  3592  0073E2                     L48:
  3593  0073E2  8763               	bsf	_DtCS& (0+255),3,b
  3594                           ;pomiar.c: 1311: DtCS._no=0;
  3595  0073E4  9563               	bcf	_DtCS& (0+255),2,b
  3596                           ;pomiar.c: 1312: DtCS._lo=0;
  3597  0073E6  9363               	bcf	_DtCS& (0+255),1,b
  3598                           ;pomiar.c: 1313: DtCS._hi=0;
  3599  0073E8  9163               	bcf	_DtCS& (0+255),0,b
  3600                           ;pomiar.c: 1314: DtCS._work=0;
  3601  0073EA  9963               	bcf	_DtCS& (0+255),4,b
  3602                           ;pomiar.c: 1315: DtCS._no_mont=0;
  3603  0073EC  EE00  F064         	lfsr	0,_DtCS+1
  3604  0073F0  6AEE               	clrf	postinc0,c
  3605  0073F2  6AEE               	clrf	postinc0,c
  3606                           ;pomiar.c: 1316: }
  3607  0073F4  0012               	return	
  3608  0073F6                     l381:
  3609                           ;pomiar.c: 1318: else
  3610  0073F6  0100               	movlb	_DtCS shr (0+8)
  3611  0073F8  9763               	bcf	_DtCS& (0+255),3,b
  3612                           ;pomiar.c: 1321: DtCS._no_mont=0;
  3613  0073FA  EE00  F064         	lfsr	0,_DtCS+1
  3614  0073FE  6AEE               	clrf	postinc0,c
  3615  007400  6AEE               	clrf	postinc0,c
  3616                           ;pomiar.c: 1322: if(!DtKNF.tpcs)
  3617  007402  EE01  F0CF         	lfsr	0,_DtKNF+27
  3618  007406  50EF               	movf	indf0,w,c
  3619  007408  E121               	bnz	l385
  3620                           ;pomiar.c: 1323: {
  3621  00740A  0E1E               	movlw	30
  3622  00740C  0100               	movlb	__Lparam shr (0+8)
  3623  00740E  61A9               	cpfslt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3624  007410  D001               	goto	l386
  3625  007412  6FA9               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  3626  007414                     l386:
  3627                           ;pomiar.c: 1325: if(dac>210) dac=210;
  3628  007414  0ED2               	movlw	-46
  3629  007416  0100               	movlb	__Lparam shr (0+8)
  3630  007418  65A9               	cpfsgt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3631  00741A  D002               	goto	l387
  3632  00741C  0ED2               	movlw	210
  3633  00741E  6FA9               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  3634  007420                     l387:
  3635                           ;pomiar.c: 1326: cs=((dac-30)*10)/(((210-30)*10)
      +                          /40);
  3636  007420  0E0A               	movlw	10
  3637  007422  6E02               	movwf	btemp+2,c
  3638  007424  6A03               	clrf	btemp+3,c
  3639  007426  0100               	movlb	__Lparam shr (0+8)
  3640  007428  0EE2               	movlw	226
  3641  00742A  25A9               	addwf	?a_PomiarCS^(__Lparam& (0+65280)),w
  3642  00742C  6E00               	movwf	btemp,c
  3643  00742E  6A01               	clrf	btemp+1,c
  3644  007430  0EFF               	movlw	255
  3645  007432  2201               	addwfc	btemp+1,f,c
  3646  007434  ECB7  F06D         	call	awmul
  3647  007438  C004  F000         	movff	btemp+4,btemp
  3648  00743C  C005  F001         	movff	btemp+5,btemp+1
  3649  007440  0E2D               	movlw	45
  3650  007442  6E02               	movwf	btemp+2,c
  3651  007444  6A03               	clrf	btemp+3,c
  3652  007446  EC5C  F06D         	call	awdiv
  3653  00744A  D020               	goto	L34
  3654                           ;pomiar.c: 1327: if(cs<40)
  3655                           ;pomiar.c: 1328: if((cs-pcs>0)&&(cs-pcs)<2) cs=p
      +                          cs;
  3656                           ;pomiar.c: 1329: if(cs>40) cs=40;
  3657                           ;pomiar.c: 1330: }
  3658  00744C                     l385:
  3659                           ;pomiar.c: 1331: else
  3660  00744C  0E23               	movlw	35
  3661  00744E  0100               	movlb	__Lparam shr (0+8)
  3662  007450  61A9               	cpfslt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3663  007452  D001               	goto	l392
  3664  007454  6FA9               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  3665  007456                     l392:
  3666                           ;pomiar.c: 1334: if(dac>190) dac=190;
  3667  007456  0EBE               	movlw	-66
  3668  007458  0100               	movlb	__Lparam shr (0+8)
  3669  00745A  65A9               	cpfsgt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3670  00745C  D002               	goto	l393
  3671  00745E  0EBE               	movlw	190
  3672  007460  6FA9               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  3673  007462                     l393:
  3674                           ;pomiar.c: 1335: cs=((dac-35)*10)/(((190-35)*10)
      +                          /40);
  3675  007462  0E0A               	movlw	10
  3676  007464  6E02               	movwf	btemp+2,c
  3677  007466  6A03               	clrf	btemp+3,c
  3678  007468  0100               	movlb	__Lparam shr (0+8)
  3679  00746A  0EDD               	movlw	221
  3680  00746C  25A9               	addwf	?a_PomiarCS^(__Lparam& (0+65280)),w
  3681  00746E  6E00               	movwf	btemp,c
  3682  007470  6A01               	clrf	btemp+1,c
  3683  007472  0EFF               	movlw	255
  3684  007474  2201               	addwfc	btemp+1,f,c
  3685  007476  ECB7  F06D         	call	awmul
  3686  00747A  C004  F000         	movff	btemp+4,btemp
  3687  00747E  C005  F001         	movff	btemp+5,btemp+1
  3688  007482  0E26               	movlw	38
  3689  007484  6E02               	movwf	btemp+2,c
  3690  007486  6A03               	clrf	btemp+3,c
  3691  007488  EC5C  F06D         	call	awdiv
  3692  00748C                     L34:
  3693  00748C  5004               	movf	btemp+4,w,c
  3694  00748E  6ED9               	movwf	fsr2l,c
  3695                           ;pomiar.c: 1336: if(cs<40)
  3696  007490  0E28               	movlw	40
  3697  007492  60D9               	cpfslt	fsr2l,c
  3698  007494  D020               	goto	l394
  3699                           ;pomiar.c: 1337: if((cs-pcs>0)&&(cs-pcs)<2) cs=p
      +                          cs;
  3700  007496  CE88  FFE8         	movff	F1645,wreg
  3701  00749A  CFD9 F000          	movff	fsr2l,btemp
  3702  00749E  6A01               	clrf	btemp+1,c
  3703  0074A0  5E00               	subwf	btemp,f,c
  3704  0074A2  0E00               	movlw	0
  3705  0074A4  5A01               	subwfb	btemp+1,f,c
  3706  0074A6  5001               	movf	btemp+1,w,c
  3707  0074A8  0A80               	xorlw	128
  3708  0074AA  0F80               	addlw	-128
  3709  0074AC  0E01               	movlw	1
  3710  0074AE  B4D8               	btfsc	status,2,c
  3711  0074B0  5C00               	subwf	btemp,w,c
  3712  0074B2  E311               	bnc	l394
  3713  0074B4  CE88  FFE8         	movff	F1645,wreg
  3714  0074B8  CFD9 F000          	movff	fsr2l,btemp
  3715  0074BC  6A01               	clrf	btemp+1,c
  3716  0074BE  5E00               	subwf	btemp,f,c
  3717  0074C0  0E00               	movlw	0
  3718  0074C2  5A01               	subwfb	btemp+1,f,c
  3719  0074C4  5001               	movf	btemp+1,w,c
  3720  0074C6  0A80               	xorlw	128
  3721  0074C8  0F80               	addlw	-128
  3722  0074CA  0E02               	movlw	2
  3723  0074CC  B4D8               	btfsc	status,2,c
  3724  0074CE  5C00               	subwf	btemp,w,c
  3725  0074D0  A0D8               	btfss	status,0,c
  3726  0074D2  CE88  FFD9         	movff	F1645,fsr2l
  3727  0074D6                     l394:
  3728                           ;pomiar.c: 1338: if(cs>40) cs=40;
  3729  0074D6  0E28               	movlw	40
  3730  0074D8  64D9               	cpfsgt	fsr2l,c
  3731  0074DA  D001               	goto	l391
  3732  0074DC  6ED9               	movwf	fsr2l,c
  3733  0074DE                     l391:
  3734                           ;pomiar.c: 1339: }
  3735  0074DE  CFD9 FE88          	movff	fsr2l,F1645
  3736                           ;pomiar.c: 1341: DtCS.CS=cs;
  3737  0074E2  CFD9 F066          	movff	fsr2l,_DtCS+3
  3738                           ;pomiar.c: 1342: RSDT1.outCS=DtCS.CS;
  3739  0074E6  C066  F32C         	movff	_DtCS+3,_RSDT1+6
  3740                           ;pomiar.c: 1343: if(DtKNF.robg==0)
  3741  0074EA  EE01  F0C9         	lfsr	0,_DtKNF+21
  3742  0074EE  50EF               	movf	indf0,w,c
  3743  0074F0  E10D               	bnz	l397
  3744                           ;pomiar.c: 1344: {
  3745  0074F2  0100               	movlb	_DtCS shr (0+8)
  3746  0074F4  9563               	bcf	_DtCS& (0+255),2,b
  3747                           ;pomiar.c: 1347: DtCS._lo=0;
  3748  0074F6  9363               	bcf	_DtCS& (0+255),1,b
  3749                           ;pomiar.c: 1348: if(DtCS.CS<=27) DtCS._work=1;
  3750  0074F8  0E1C               	movlw	28
  3751  0074FA  6166               	cpfslt	(_DtCS+3)& (0+255),b
  3752  0074FC  D002               	goto	l398
  3753  0074FE                     L12:
  3754  0074FE  8963               	bsf	_DtCS& (0+255),4,b
  3755  007500  D02B               	goto	l401
  3756  007502                     l398:
  3757                           ;pomiar.c: 1349: else
  3758  007502  0E1C               	movlw	28
  3759  007504  0100               	movlb	(_DtCS+3) shr (0+8)
  3760  007506  6566               	cpfsgt	(_DtCS+3)& (0+255),b
  3761  007508  D027               	goto	l401
  3762  00750A  D025               	goto	L28
  3763                           ;pomiar.c: 1351: }
  3764  00750C                     l397:
  3765                           ;pomiar.c: 1352: else
  3766  00750C  0E03               	movlw	3
  3767  00750E  0100               	movlb	(_DtCS+3) shr (0+8)
  3768  007510  6166               	cpfslt	(_DtCS+3)& (0+255),b
  3769  007512  D002               	goto	l402
  3770  007514  8563               	bsf	_DtCS& (0+255),2,b
  3771  007516  D002               	goto	l403
  3772  007518                     l402:
  3773                           ;pomiar.c: 1356: else DtCS._no=0;
  3774  007518  0100               	movlb	_DtCS shr (0+8)
  3775  00751A  9563               	bcf	_DtCS& (0+255),2,b
  3776  00751C                     l403:
  3777                           ;pomiar.c: 1357: if(!DtCS._no&&DtCS.CS<5) DtCS._
      +                          lo=1;
  3778  00751C  0100               	movlb	_DtCS shr (0+8)
  3779  00751E  B563               	btfsc	_DtCS& (0+255),2,b
  3780  007520  D006               	goto	l404
  3781  007522  0E05               	movlw	5
  3782  007524  6166               	cpfslt	(_DtCS+3)& (0+255),b
  3783  007526  D003               	goto	l404
  3784  007528  0100               	movlb	_DtCS shr (0+8)
  3785  00752A  8363               	bsf	_DtCS& (0+255),1,b
  3786  00752C  D002               	goto	l405
  3787  00752E                     l404:
  3788                           ;pomiar.c: 1358: else DtCS._lo=0;
  3789  00752E  0100               	movlb	_DtCS shr (0+8)
  3790  007530  9363               	bcf	_DtCS& (0+255),1,b
  3791  007532                     l405:
  3792                           ;pomiar.c: 1359: if((DtCS.CS>=6)&&(DtCS.CS<=27))
      +                           DtCS._work=1;
  3793  007532  0E05               	movlw	5
  3794  007534  0100               	movlb	(_DtCS+3) shr (0+8)
  3795  007536  6566               	cpfsgt	(_DtCS+3)& (0+255),b
  3796  007538  D005               	goto	l406
  3797  00753A  0E1C               	movlw	28
  3798  00753C  6166               	cpfslt	(_DtCS+3)& (0+255),b
  3799  00753E  D002               	goto	l406
  3800  007540  0100               	movlb	_DtCS shr (0+8)
  3801  007542  D7DD               	goto	L12
  3802  007544                     l406:
  3803                           ;pomiar.c: 1360: else
  3804  007544  0E05               	movlw	5
  3805  007546  0100               	movlb	(_DtCS+3) shr (0+8)
  3806  007548  6166               	cpfslt	(_DtCS+3)& (0+255),b
  3807  00754A  D001               	goto	u2801
  3808  00754C  D003               	goto	u2820
  3809  00754E                     u2801:
  3810  00754E  0E1C               	movlw	28
  3811  007550  6566               	cpfsgt	(_DtCS+3)& (0+255),b
  3812  007552  D002               	goto	l401
  3813  007554                     u2820:
  3814  007554  0100               	movlb	_DtCS shr (0+8)
  3815  007556                     L28:
  3816  007556  9963               	bcf	_DtCS& (0+255),4,b
  3817  007558                     l401:
  3818                           ;pomiar.c: 1362: }
  3819  007558  0E1C               	movlw	28
  3820  00755A  0100               	movlb	(_DtCS+3) shr (0+8)
  3821  00755C  6566               	cpfsgt	(_DtCS+3)& (0+255),b
  3822  00755E  D002               	goto	l409
  3823  007560  8163               	bsf	_DtCS& (0+255),0,b
  3824  007562  0C1C               	retlw	28
  3825  007564                     l409:
  3826                           ;pomiar.c: 1364: else DtCS._hi=0;
  3827  007564  0100               	movlb	_DtCS shr (0+8)
  3828  007566  9163               	bcf	_DtCS& (0+255),0,b
  3829                           ;pomiar.c: 1365: }
  3830  007568  0012               	return	
  3831  00756A                     __end_of_PomiarCS:
  3832  000000                     
  3833  000000                     
  3834  000000                     
  3835  000000                     
  3836  000000                     
  3837  000000                     
  3838  000000                     
  3839  000000                     
  3840  000000                     
  3841  000000                     
  3842  000000                     
  3843  000000                     
  3844  000000                     
  3845  000000                     
  3846  000000                     
  3847  000000                     
  3848  000000                     
  3849  000000                     
  3850  000000                     
  3851  000000                     
  3852  000000                     
  3853  000000                     
  3854  000000                     
  3855  000000                     
  3856  000000                     
  3857  000000                     
  3858  000000                     
  3859  000000                     
  3860  000000                     
  3861  000000                     
  3862  000000                     
  3863  000000                     
  3864  000000                     
  3865  000000                     
  3866  000000                     
  3867  000000                     
  3868  000000                     
  3869  000000                     
  3870  000000                     
  3871  000000                     
  3872  000000                     
  3873  000000                     
  3874  000000                     
  3875  000000                     
  3876  000000                     
  3877  000000                     
  3878  000000                     
  3879  000000                     
  3880  000000                     
  3881  000000                     
  3882  000000                     
  3883  000000                     
  3884  000000                     
  3885  000000                     
  3886  000000                     
  3887  000000                     
  3888  000000                     
  3889  000000                     
  3890  000000                     
  3891  000000                     
  3892  000000                     
  3893  000000                     
  3894  000000                     
  3895  000000                     
  3896  000000                     
  3897  000000                     
  3898  000000                     
  3899  000000                     
  3900  000000                     
  3901  000000                     
  3902  000000                     
  3903  000000                     
  3904  000000                     
  3905  000000                     
  3906  000000                     
  3907  000000                     
  3908  000000                     
  3909  000000                     
  3910  000000                     
  3911  000000                     
  3912  000000                     
  3913  000000                     
  3914  000000                     
  3915  000000                     
  3916  000000                     
  3917  000000                     
  3918  000000                     
  3919  000000                     
  3920  000000                     
  3921  000000                     
  3922  000000                     
  3923  000000                     
  3924  000000                     
  3925  000000                     
  3926  000000                     
  3927  000000                     
  3928  000000                     
  3929  000000                     
  3930  000000                     
  3931  000000                     
  3932  000000                     
  3933  000000                     
  3934  000000                     
  3935  000000                     
  3936  000000                     
  3937  000000                     
  3938  000000                     
  3939  000000                     
  3940  000000                     
  3941  000000                     
  3942  000000                     
  3943  000000                     
  3944  000000                     
  3945  000000                     
  3946  000000                     
  3947  000000                     
  3948  000000                     
  3949  000000                     
  3950  000000                     
  3951  000000                     
  3952  000000                     
  3953  000000                     
  3954  000000                     
  3955  000000                     
  3956  000000                     
  3957  000000                     
  3958  000000                     
  3959  000000                     
  3960  000000                     
  3961  000000                     
  3962  000000                     
  3963  000000                     
  3964  000000                     
  3965  000000                     
  3966  000000                     
  3967  000000                     
  3968  000000                     
  3969  000000                     
  3970  000000                     
  3971  000000                     
  3972  000000                     
  3973  000000                     
  3974  000000                     
  3975  000000                     
  3976  000000                     
  3977  000000                     
  3978  000000                     
  3979  000000                     
  3980  000000                     
  3981  000000                     
  3982  000000                     
  3983  000000                     
  3984  000000                     
  3985  000000                     
  3986  000000                     
  3987  000000                     
  3988  000000                     
  3989  000000                     
  3990  000000                     
  3991  000000                     
  3992  000000                     
  3993  000000                     
  3994  000000                     
  3995  000000                     
  3996  000000                     
  3997  000000                     
  3998  000000                     
  3999  000000                     
  4000  000000                     
  4001  000000                     
  4002  000000                     
  4003  000000                     
  4004  000000                     
  4005  000000                     
  4006  000000                     
  4007  000000                     
  4008  000000                     
  4009  000000                     
  4010  000000                     
  4011  000000                     
  4012  000000                     
  4013  000000                     
  4014  000000                     
  4015  000000                     
  4016  000000                     
  4017  000000                     
  4018  000000                     
  4019  000000                     
  4020  000000                     
  4021  000000                     
  4022  000000                     
  4023  000000                     
  4024  000000                     
  4025  000000                     
  4026  000000                     
  4027  000000                     
  4028  000000                     
  4029  000000                     
  4030  000000                     
  4031  000000                     
  4032  000000                     
  4033  000000                     
  4034  000000                     
  4035  000000                     
  4036  000000                     
  4037  000000                     
  4038  000000                     
  4039  000000                     
  4040  000000                     
  4041  000000                     
  4042  000000                     
  4043  000000                     
  4044  000000                     
  4045  000000                     
  4046  000000                     
  4047  000000                     
  4048  000000                     
  4049  000000                     
  4050  000000                     
  4051  000000                     
  4052  000000                     
  4053  000000                     
  4054  000000                     
  4055  000000                     
  4056  000000                     
  4057  000000                     
  4058  000000                     
  4059  000000                     
  4060  000000                     
  4061  000000                     
  4062  000000                     
  4063  000000                     
  4064  000000                     
  4065  000000                     
  4066  000000                     
  4067  000000                     
  4068  000000                     
  4069  000000                     
  4070  000000                     
  4071  000000                     
  4072  000000                     
  4073  000000                     
  4074  000000                     
  4075  000000                     
  4076  000000                     
  4077  000000                     
  4078  000000                     
  4079  000000                     
  4080  000000                     
  4081  000000                     
  4082  000000                     
  4083  000000                     
  4084  000000                     
  4085  000000                     
  4086  000000                     
  4087  000000                     
  4088  000000                     
  4089  000000                     
  4090  000000                     
  4091  000000                     
  4092  000000                     
  4093  000000                     
  4094  000000                     
  4095  000000                     
  4096  000000                     
  4097  000000                     
  4098  000000                     
  4099  000000                     
  4100  000000                     
  4101  000000                     
  4102  000000                     
  4103  000000                     
  4104  000000                     
  4105  000000                     
  4106  000000                     
  4107  000000                     
  4108  000000                     
  4109  000000                     
  4110  000000                     
  4111  000000                     
  4112  000000                     
  4113  000000                     
  4114  000000                     
  4115  000000                     
  4116  000000                     
  4117  000000                     
  4118  000000                     
  4119  000000                     
  4120  000000                     
  4121  000000                     
  4122  000000                     
  4123  000000                     
  4124  000000                     
  4125  000000                     
  4126  000000                     
  4127  000000                     
  4128  000000                     
  4129  000000                     
  4130  000000                     
  4131  000000                     
  4132  000000                     
  4133  000000                     
  4134  000000                     
  4135  000000                     
  4136  000000                     
  4137  000000                     
  4138  000000                     
  4139  000000                     
  4140  000000                     
  4141  000000                     
  4142  000000                     
  4143  000000                     
  4144  000000                     
  4145  000000                     
  4146  000000                     
  4147  000000                     
  4148  000000                     
  4149  000000                     
  4150  000000                     
  4151  000000                     
  4152  000000                     
  4153  000000                     
  4154  000000                     
  4155  000000                     
  4156  000000                     
  4157  000000                     
  4158  000000                     
  4159  000000                     
  4160  000000                     
  4161  000000                     
  4162  000000                     
  4163  000000                     
  4164  000000                     
  4165  000000                     
  4166  000000                     
  4167  000000                     
  4168  000000                     
  4169  000000                     
  4170  000000                     
  4171  000000                     
  4172  000000                     
  4173  000000                     
  4174  000000                     
  4175  000000                     
  4176  000000                     
  4177  000000                     
  4178  000000                     
  4179  000000                     
  4180  000000                     
  4181  000000                     
  4182  000000                     
  4183  000000                     
  4184  000000                     
  4185  000000                     
  4186  000000                     
  4187  000000                     
  4188  000000                     
  4189  000000                     
  4190  000000                     
  4191  000000                     
  4192  000000                     
  4193  000000                     
  4194  000000                     
  4195  000000                     
  4196  000000                     
  4197  000000                     
  4198  000000                     
  4199  000000                     
  4200  000000                     
  4201  000000                     
  4202  000000                     
  4203  000000                     
  4204  000000                     
  4205  000000                     
  4206  000000                     
  4207  000000                     
  4208  000000                     
  4209  000000                     
  4210  000000                     
  4211  000000                     
  4212  000000                     
  4213  000000                     
  4214  000000                     
  4215  000000                     
  4216  000000                     
  4217  000000                     
  4218  000000                     
  4219  000000                     
  4220  000000                     
  4221  000000                     
  4222  000000                     
  4223  000000                     
  4224  000000                     
  4225  000000                     
  4226  000000                     
  4227  000000                     
  4228  000000                     
  4229  000000                     
  4230  000000                     
  4231  000000                     
  4232  000000                     
  4233  000000                     
  4234  000000                     
  4235  000000                     
  4236  000000                     
  4237  000000                     
  4238  000000                     
  4239  000000                     
  4240  000000                     
  4241  000000                     
  4242  000000                     
  4243  000000                     
  4244  000000                     
  4245  000000                     
  4246  000000                     
  4247  000000                     
  4248  000000                     
  4249  000000                     
  4250  000000                     
  4251  000000                     
  4252  000000                     
  4253  000000                     
  4254  000000                     
  4255  000000                     
  4256  000000                     
  4257  000000                     
  4258  000000                     
  4259  000000                     
  4260  000000                     
  4261  000000                     
  4262  000000                     
  4263  000000                     
  4264  000000                     
  4265  000000                     
  4266  000000                     
  4267  000000                     
  4268                           
  4269                           	psect	bigbss
  4270  000E7D                     F1584:
  4271  000E7D                     	ds	1
  4272  000E7D                     F1585:
  4273  000E7D                     	ds	1
  4274  000E7D                     F1590:
  4275  000E7D                     	ds	1
  4276  000E7D                     F1591:
  4277  000E7D                     	ds	1
  4278  000E7D                     F1596:
  4279  000E7D                     	ds	1
  4280  000E7D                     F1597:
  4281  000E7D                     	ds	1
  4282  000E7D                     F1598:
  4283  000E7D                     	ds	1
  4284  000E7D                     F1619:
  4285  000E7D                     	ds	1
  4286  000E7D                     F1629:
  4287  000E7D                     	ds	1
  4288  000E7D                     F1637:
  4289  000E7D                     	ds	1
  4290  000E7D                     F1641:
  4291  000E7D                     	ds	1
  4292  000E7D                     F1645:
  4293  000E7D                     	ds	1
  4294  000000                     
  4295  000000                     
  4296  000000                     
  4297  000000                     
  4298  000000                     
  4299  000000                     
  4300  000000                     
  4301  000000                     
  4302  000000                     
  4303  000000                     
  4304  000000                     
  4305  000000                     
  4306  000000                     
  4307  000000                     
  4308  000000                     
  4309  000000                     
  4310  000000                     
  4311  000000                     
  4312  000000                     
  4313  000000                     
  4314  000000                     
  4315  000000                     
  4316  000000                     
  4317  000000                     
  4318  000000                     
  4319  000000                     
  4320  000000                     
  4321  000000                     
  4322  000000                     
  4323  000000                     
  4324  000000                     
  4325  000000                     
  4326  000000                     
  4327  000000                     
  4328  000000                     
  4329  000000                     
  4330  000000                     
  4331  000000                     
  4332  000000                     
  4333  000000                     
  4334  000000                     
  4335  000000                     
  4336  000000                     
  4337  000000                     
  4338  000000                     
  4339  000000                     
  4340  000000                     
  4341  000000                     
  4342  000000                     
  4343  000000                     
  4344  000000                     
  4345  000000                     
  4346  000000                     
  4347  000000                     
  4348  000000                     
  4349  000000                     
  4350  000000                     
  4351  000000                     
  4352  000000                     
  4353  000000                     
  4354  000000                     
  4355  000000                     
  4356  000000                     
  4357  000000                     
  4358  000000                     
  4359  000000                     
  4360  000000                     
  4361  000000                     
  4362  000000                     
  4363  000000                     
  4364  000000                     
  4365  000000                     
  4366  000000                     
  4367  000000                     
  4368  000000                     
  4369  000000                     
  4370  000000                     
  4371  000000                     
  4372  000E7D                     _PmrtimFlt1:
  4373  000E7D                     	ds	1
  4374  000E7D                     _PmrtimFlt2:
  4375  000E7D                     	ds	1
  4376  000000                     
  4377  000000                     
  4378  000000                     
  4379  000000                     
  4380  000000                     
  4381  000000                     
  4382  000000                     
  4383  000000                     
  4384  000000                     
  4385  000000                     
  4386  000000                     
  4387  000000                     
  4388  000000                     
  4389  000000                     
  4390  000000                     
  4391  000000                     
  4392  000000                     
  4393  000000                     
  4394  000000                     
  4395  000000                     
  4396  000000                     
  4397  000000                     
  4398  000000                     
  4399  000000                     
  4400  000000                     
  4401  000000                     
  4402  000000                     
  4403  000000                     
  4404  000000                     
  4405  000000                     
  4406  000000                     
  4407  000000                     
  4408  000000                     
  4409  000000                     
  4410  000000                     
  4411  000000                     
  4412  000000                     
  4413  000000                     
  4414  000000                     
  4415  000000                     
  4416  000000                     
  4417  000000                     
  4418  000000                     
  4419  000000                     
  4420  000000                     
  4421  000000                     
  4422  000000                     
  4423  000000                     
  4424  000000                     
  4425  000000                     
  4426  000E7D                     _wff:
  4427  000E7D                     	ds	12
  4428  000E7D                     _wff2:
  4429  000E7D                     	ds	12
  4430                           
  4431                           	psect	bss
  4432  00005F                     _PmrtimFlt3:
  4433  00005F                     	ds	2
  4434  000000                     
  4435  000000                     
  4436  000000                     
  4437  000000                     
  4438  00005F                     _pbf:
  4439  00005F                     	ds	2
  4440  00005F                     _DtCS:
  4441  00005F                     	ds	4
  4442  00005F                     _DtZW:
  4443  00005F                     	ds	4
  4444  00005F                     _PFN:
  4445  00005F                     	ds	5
  4446  00005F                     _DtCW:
  4447  00005F                     	ds	15
  4448  00005F                     _DtCO:
  4449  00005F                     	ds	19
  4450  00005F                     _DtIN:
  4451  00005F                     	ds	20
  4452                           
  4453                           	psect	temp
  4454  000000                     btemp:
  4455  000000                     	ds	8
  4456                           tblptrh	equ	0xFF7
  4457                           tblptrl	equ	0xFF6
  4458                           indf0	equ	0xFEF
  4459                           postinc0	equ	0xFEE
  4460                           fsr0h	equ	0xFEA
  4461                           fsr0l	equ	0xFE9
  4462                           wreg	equ	0xFE8
  4463                           indf1	equ	0xFE7
  4464                           fsr1h	equ	0xFE2
  4465                           fsr1l	equ	0xFE1
  4466                           fsr2l	equ	0xFD9
  4467                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Thu Jul 28 10:43:09 2016

                         _M 0306                    _PomiarCO 6470  
                  _PomiarCS 7388                    _PomiarCW 6946  
                  _PomiarIN 6910                    _PomiarZW 6A72  
                        l20 5EF0                          l30 5FDE  
                        l23 5F08                          l15 5EBC  
                        l40 5FE4                          l32 5FCC  
                        l16 5EC8                          l33 5FBE  
                        l26 5F32                          l51 5FEC  
                        l60 606A                          l36 5FD6  
                        l28 5F98                          l61 61B0  
                        l45 5FE4                          l29 6074  
                        l38 6038                          l71 613E  
                        l55 6068                          l39 6004  
                        l80 61E8                          l72 61A8  
                        l64 611A                          l81 61D2  
                        l73 6182                          l66 610E  
                        l67 6100                          l92 626C  
                        l84 621E                          l76 61B4  
                        l93 62D8                          l85 61FA  
                        l94 628A                          l78 61CA  
                        l95 6274                          l79 6236  
                        l88 623E                          l98 62C0  
                        l99 629C                   _PomiarECO 7100  
                        u65 5F2C                          u90 5F92  
                        u75 5F66                          u85 5F90  
                 _PomiarPCO 6EA8                   _PomiarPFN 71A8  
                 _PomiarPCW 6FDC           __end_of_PomiarECO 7184  
         __end_of_PomiarPCO 6F82           __end_of_PomiarPFN 7388  
         __end_of_PomiarPCW 70DC                ?a_GetPGD_PCO 00A9  
__end_of_FiltrPomiarowyCOCW 6470                         l110 6346  
                       l102 62E0                         l200 683C  
                       l120 63C8                         l112 6358  
                       l201 6846                         l121 6452  
                       l113 6364                         l210 68B2  
                       l202 6850                         l130 64BE  
                       l122 640A                         l106 6312  
                       l211 68C0                         l203 685A  
                       l123 640E                         l115 6384  
                       l300 6E56                         l220 68FE  
                       l212 68C4                         l204 6864  
                       l132 68A0                         l124 644E  
                       l116 6396                         l108 6324  
                       l301 6E28                         l221 690A  
                       l213 68EE                         l205 686E  
                       l133 688E                         l117 63A6  
                       l109 6330                         l302 6DCE  
                       l214 68D8                         l206 6878  
                       l142 658C                         l134 64C8  
                       l126 645C                         l118 63B8  
                       l311 6E7C                         l231 6998  
                       l215 68DC                         l207 6882  
                       l143 655E                         l320 6F2E  
                       l312 6E80                         l304 6DFA  
                       l240 69FA                         l224 693C  
                       l216 68E8                         l136 650C  
                       l401 7558                         l321 6F04  
                       l305 6E20                         l241 6A2A  
                       l233 69A2                         l209 68AE  
                       l161 65F6                         l402 7518  
                       l322 6F12                         l306 6E24  
                       l250 6A34                         l242 6A16  
                       l403 751C                         l331 6FB0  
                       l323 6F2A                         l243 6A20  
                       l227 6984                         l219 68FA  
                       l147 6588                         l404 752E  
                       l340 6FE0                         l332 6FCA  
                       l316 6ECA                         l308 6E4E  
                       l252 6A46                         l236 69AE  
                       l172 6672                         l405 7532  
                       l333 6FC6                         l325 6F44  
                       l317 6EC0                         l309 6E52  
                       l253 6A4A                         l229 6A38  
                       l406 7544                         l350 7098  
                       l342 7078                         l326 6F52  
                       l270 6AD0                         l262 6ABA  
                       l254 6A58                         l238 69D4  
                       l343 703C                         l335 6FD6  
                       l327 6F62                         l271 6AE2  
                       l263 6AB6                         l255 6A5C  
                       l175 669C                         l167 6676  
                       l159 65B2                         l360 7138  
                       l352 70AA                         l280 6B38  
                       l256 6A66                         l248 6A2E  
                       l192 6818                         l184 6754  
                       l176 66CA                         l168 6648  
                       l409 7564                         l361 7150  
                       l345 704E                         l273 6AEA  
                       l265 6B10                         l193 67EA  
                       l177 66F8                         l370 732C  
                       l362 7174                         l354 70B8  
                       l338 6FEA                         l290 6C62  
                       l266 6B00                         l186 6798  
                       l178 6726                         l371 7280  
                       l363 7168                         l347 705C  
                       l339 6FDE                         l291 6C88  
                       l275 6B0C                         l259 6A9E  
                       l348 7074                         l292 6C8C  
                       l268 6AF2                         l381 73F6  
                       l285 6CEC                         l277 6B28  
                       l269 6ACE                         l197 6814  
                       l358 7154                         l294 6CB6  
                       l286 6CBE                         l278 6B24  
                       l391 74DE                         l375 735A  
                       l359 712C                         l295 6CBA  
                       l287 6C90                         l199 6838  
                       l392 7456                         l376 7356  
                       l368 7376                         l288 6C36  
                       l393 7462                         l385 744C  
                       l369 7220                         l297 6CE4  
                       l394 74D6                         l386 7414  
                       l298 6CE8                         l387 7420  
                       l397 750C                         l398 7502  
                  _WriteECO 70DC                         u325 60B2  
                       u335 60DC                         _PFN 006B  
                       u705 6436                    _WritePCO 6E84  
                       u731 6498                         u750 649E  
                  _WritePFN 7184                         u825 6586  
                  _WritePCW 6F82                         u950 6620  
                       u790 6536                         u955 661E  
                       u795 6534                         u985 6670  
                       _pbf 0061                         _wff 0E8B  
                       wreg 000FE8                   _StartRTdS C76E  
                 _StartTim1 5EDC                   _StartTim2 5EF4  
                 _StartTim3 5F0C             _ReturnACfromNTC D138  
                      F1641 0E87           __end_of_StartTim1 5EE2  
                      F1619 0E84           __end_of_StartTim2 5EFA  
         __end_of_StartTim3 5F16                        F1645 0E88  
                      F1637 0E86                        F1629 0E85  
                      F1590 0E7F                        F1591 0E80  
                      F1584 0E7D                        F1585 0E7E  
                      F1596 0E81                        F1597 0E82  
                      F1598 0E83                  ?a_PomiarCS 00A9  
                _PmrtimFlt1 0E89                  _PmrtimFlt2 0E8A  
                _PmrtimFlt3 005F                        u1005 66C4  
                      u1110 67C2                        u1015 66F2  
                      u1025 6720                        u1115 67C0  
                      u1035 674C                        u1311 6930  
                      u1145 6812                        u1330 6936  
                      u1341 6966                        u1360 696C  
                      u1531 6A92                        u1460 6A26  
                      u2405 7348                        u1550 6A98  
                      u2441 73A2                        u2530 73C2  
                      u1650 6ADC                        u2461 73AA  
                      u1815 6DCA                        u1680 6B1E  
                      u2801 754E                        u1745 6C32  
                      u2491 73BC                        u2820 7554  
                      _MGSD 02AE                        _DtCO 007F  
                      _DtCS 0063                        _DtCW 0070  
                      _DtIN 0092                        _RTdS C792  
                      _DtZW 0067                        _wff2 0E97  
                      aldiv D9E8                        fsr0h 000FEA  
                      fsr1h 000FE2                        indf0 000FEF  
                      fsr0l 000FE9                        indf1 000FE7  
                      fsr1l 000FE1                        fsr2l 000FD9  
                      btemp 0000                        awdiv DAB8  
                      awmul DB6E             __end_of_PmrTim1 5EF4  
           __end_of_PmrTim2 5F0C             __end_of_PmrTim3 5F36  
           _PredkoscZmianCO 625C             _PredkoscZmianCW 61BA  
                _WriteEEECO 8A9C                  _WriteEEPCO 8A88  
                _WriteEEPFN 8AB0                  _WriteEEPCW 8A74  
                     _RSDT1 0326                       _DtKNF 01B4  
                     _RdPrt C6A0                  used_btemp0 0001  
                used_btemp1 0001                  used_btemp2 0001  
                used_btemp3 0001                  used_btemp4 0001  
                used_btemp5 0001                  used_btemp6 0001  
                used_btemp7 0001                 _IncPmrTimer 5EB0  
                   _BitSet2 D4AE                     _GetBit2 D448  
                  ?_BitSet2 00AA         __end_of_IncPmrTimer 5EDC  
                     status 000FD8                    ?_GetBit2 00A9  
                   _PmrTim1 5EE2                     _PmrTim2 5EFA  
                   _PmrTim3 5F18                     __Lparam 00A6  
                  ?_PmrTim3 00A6                  _GetPGD_PCO 6B4A  
        _FiltrPomiarowyCOCW 63BE          __end_of_GetPGD_PCO 6E84  
          __end_of_PomiarCO 6910            __end_of_PomiarCS 756A  
          __end_of_PomiarCW 6A72            __end_of_PomiarIN 6946  
          __end_of_PomiarZW 6AA4                     __ramtop 1000  
          __end_of_WriteECO 7100            __end_of_WritePCO 6EA8  
          __end_of_WritePFN 71A8            __end_of_WritePCW 6FA6  
   __end_of_PredkoscZmianCO 62FE     __end_of_PredkoscZmianCW 625C  
               _InitDataPmr 5E7A         __end_of_InitDataPmr 5EB0  
               _ReadTabZNTC D174                      _ReadAC D066  
                    _SetPFN 8958                     postinc0 000FEE  
                    aldiv_f DBEA                      almul_f DBD6  
                 _FltParMod 62FE                  _ReadTabNTC D0D2  
         __end_of_FltParMod 63BE                      tblptrh 000FF7  
                    tblptrl 000FF6                   _ReadEEECO 8AAC  
                 _ReadEEPCO 8A98                   _ReadEEPFN 8AC0  
                 _ReadEEPCW 8A84                   _GoldenEye 5F36  
         __end_of_GoldenEye 61BA                   _SetModPCO 6AA4  
                 _SetModPCW 6FA6           __end_of_SetModPCO 6B4A  
         __end_of_SetModPCW 6FDC  
