

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Thu Jul 28 10:43:07 2016


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     5                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     6  000000                     
     7  000000                     
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95                           
    96                           	psect	text
    97                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
    98                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
    99                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   100                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   101                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   102                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   103                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   104                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   105                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   106                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   107                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   108                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   109                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   110                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   111                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   112                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   113                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   114                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   115                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   116                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   117                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   118                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   119                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   120                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   121                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   122                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   123                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   124                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   125                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   126                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   127                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   128                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   129                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   130                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   131                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   132                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   133                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   134                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   135                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   136                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   137                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   138                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   139                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   140                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   141                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   142                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   143                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   144                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   145                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   146                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   147                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   148                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   149                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   150                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   151                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   152                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   153                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   154                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   155                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   156                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   157                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   158                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   159                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   160                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   161                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   162                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   163                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   164                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   165                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   166                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   167                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   168                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   169                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   170                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   171                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   172                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   173                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   174                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   175                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   176                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   177                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   178                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   179                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   180                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   181                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   182                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   183                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   184                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   185                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   186                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   187                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   188                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   189                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   190                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   191                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   192                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   193                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   194                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   195                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   196                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   197  00D040                     _InitAC:
   198                           ;	_i assigned to ?a_ReadTabZNTC+1
   199  000000                     _ReadTabZNTC$i	set	?a_ReadTabZNTC+1
   200                           ;	_data assigned to ?a_ReadTabZNTC+0
   201  000000                     _ReadTabZNTC$data	set	?a_ReadTabZNTC
   202                           ;	_i assigned to ?a_ReturnACfromNTC+2
   203  000000                     _ReturnACfromNTC$i	set	?a_ReturnACfromNTC+2
   204                           ;	_bdta assigned to ?a_ReturnACfromNTC+1
   205  000000                     _ReturnACfromNTC$bdta	set	?a_ReturnACfromNTC+1
   206                           ;	_data assigned to ?a_ReturnACfromNTC+0
   207  000000                     _ReturnACfromNTC$data	set	?a_ReturnACfromNTC
   208                           ;	_i assigned to ?a_ReadTabNTC+1
   209  000000                     _ReadTabNTC$i	set	?a_ReadTabNTC+1
   210  000000                     
   211                           ;ac.c: 14: ADIE=0;
   212  00D040  9C9D               	bcf	3997,6,c
   213                           ;ac.c: 21: ACQT0=0;
   214  00D042  96C0               	bcf	4032,3,c
   215                           ;ac.c: 22: ACQT1=0;
   216  00D044  98C0               	bcf	4032,4,c
   217                           ;ac.c: 23: ACQT2=0;
   218  00D046  9AC0               	bcf	4032,5,c
   219                           ;ac.c: 26: ADCS0=0;
   220  00D048  90C0               	bcf	4032,0,c
   221                           ;ac.c: 27: ADCS1=1;
   222  00D04A  82C0               	bsf	4032,1,c
   223                           ;ac.c: 28: ADCS2=0;
   224  00D04C  94C0               	bcf	4032,2,c
   225                           ;ac.c: 30: VCFG0=0;
   226  00D04E  98C1               	bcf	4033,4,c
   227                           ;ac.c: 31: VCFG1=0;
   228  00D050  9AC1               	bcf	4033,5,c
   229                           ;ac.c: 37: ANSEL=0b00001111;
   230  00D052  0E0F               	movlw	15
   231  00D054  6E7E               	movwf	3966,c
   232                           ;ac.c: 38: ANSELH=0b00000000;
   233  00D056  6A7F               	clrf	3967,c
   234                           ;ac.c: 40: ADFM=0;
   235  00D058  9EC0               	bcf	4032,7,c
   236                           ;ac.c: 41: ADON=1;
   237  00D05A  80C2               	bsf	4034,0,c
   238                           ;ac.c: 42: CHS0=0;
   239  00D05C  94C2               	bcf	4034,2,c
   240                           ;ac.c: 43: CHS1=0;
   241  00D05E  96C2               	bcf	4034,3,c
   242                           ;ac.c: 44: CHS2=0;
   243  00D060  98C2               	bcf	4034,4,c
   244                           ;ac.c: 45: CHS3=0;
   245  00D062  9AC2               	bcf	4034,5,c
   246                           ;ac.c: 46: }
   247  00D064  0012               	return	
   248  00D066                     __end_of_InitAC:
   249                           ;ac.c: 96: unsigned char ReadAC(unsigned char ch
      +                          anel)
   250                           ;ac.c: 97: {
   251  00D066                     _ReadAC:
   252  000000                     
   253                           ; _chanel loaded to fsr2l
   254  00D066  6ED9               	movwf	fsr2l,c
   255                           ;ac.c: 101: CHS0=(chanel&0b00000001);
   256  00D068  CFD9 F000          	movff	fsr2l,btemp
   257  00D06C  6A01               	clrf	btemp+1,c
   258  00D06E  94C2               	bcf	4034,2,c
   259  00D070  B000               	btfsc	btemp,0,c
   260  00D072  84C2               	bsf	4034,2,c
   261                           ;ac.c: 102: CHS1=((chanel&0b00000010)>>1);
   262  00D074  CFD9 F000          	movff	fsr2l,btemp
   263  00D078  0E02               	movlw	2
   264  00D07A  1600               	andwf	btemp,f,c
   265  00D07C  0E01               	movlw	1
   266  00D07E  6E01               	movwf	btemp+1,c
   267  00D080                     u25:
   268  00D080  90D8               	bcf	status,0,c
   269  00D082  3200               	rrcf	btemp,f,c
   270  00D084  2E01               	decfsz	btemp+1,f,c
   271  00D086  D7FC               	goto	u25
   272  00D088  3000               	rrcf	btemp,w,c
   273  00D08A  96C2               	bcf	4034,3,c
   274  00D08C  B0D8               	btfsc	status,0,c
   275  00D08E  86C2               	bsf	4034,3,c
   276                           ;ac.c: 103: CHS2=((chanel&0b00000100)>>2);
   277  00D090  CFD9 F000          	movff	fsr2l,btemp
   278  00D094  0E04               	movlw	4
   279  00D096  1600               	andwf	btemp,f,c
   280  00D098  0E02               	movlw	2
   281  00D09A  6E01               	movwf	btemp+1,c
   282  00D09C                     u45:
   283  00D09C  90D8               	bcf	status,0,c
   284  00D09E  3200               	rrcf	btemp,f,c
   285  00D0A0  2E01               	decfsz	btemp+1,f,c
   286  00D0A2  D7FC               	goto	u45
   287  00D0A4  3000               	rrcf	btemp,w,c
   288  00D0A6  98C2               	bcf	4034,4,c
   289  00D0A8  B0D8               	btfsc	status,0,c
   290  00D0AA  88C2               	bsf	4034,4,c
   291                           ;ac.c: 104: CHS3=((chanel&0b00001000)>>3);
   292  00D0AC  CFD9 F000          	movff	fsr2l,btemp
   293  00D0B0  0E08               	movlw	8
   294  00D0B2  1600               	andwf	btemp,f,c
   295  00D0B4  0E03               	movlw	3
   296  00D0B6  6E01               	movwf	btemp+1,c
   297  00D0B8                     u65:
   298  00D0B8  90D8               	bcf	status,0,c
   299  00D0BA  3200               	rrcf	btemp,f,c
   300  00D0BC  2E01               	decfsz	btemp+1,f,c
   301  00D0BE  D7FC               	goto	u65
   302  00D0C0  3000               	rrcf	btemp,w,c
   303  00D0C2  9AC2               	bcf	4034,5,c
   304  00D0C4  B0D8               	btfsc	status,0,c
   305  00D0C6  8AC2               	bsf	4034,5,c
   306                           ;ac.c: 105: GODONE=1;
   307  00D0C8  82C2               	bsf	4034,1,c	;volatile
   308                           ;ac.c: 106: while(GODONE)continue;
   309  00D0CA                     l4:
   310  00D0CA  B2C2               	btfsc	4034,1,c	;volatile
   311  00D0CC  D7FE               	goto	l4
   312                           ;ac.c: 107: return ADRESH;
   313  00D0CE  50C4               	movf	4036,w,c	;volatile
   314  00D0D0  0012               	return	
   315                           ;ac.c: 108: }
   316  00D0D2                     __end_of_ReadAC:
   317                           ;ac.c: 111: unsigned char ReadTabNTC(unsigned ch
      +                          ar zrAC)
   318                           ;ac.c: 112: {
   319  00D0D2                     _ReadTabNTC:
   320  000000                     
   321                           ;	_data assigned to ?a_ReadTabNTC+0
   322  000000                     _ReadTabNTC$data	set	?a_ReadTabNTC
   323                           ;ac.c: 113: unsigned int i;
   324  00D0D2  CFE8 F000          	movff	wreg,btemp
   325  00D0D6  6A01               	clrf	btemp+1,c
   326  00D0D8  C000  F0AA         	movff	btemp,?a_ReadTabNTC+1
   327  00D0DC  C001  F0AB         	movff	btemp+1,?a_ReadTabNTC+2
   328                           ;ac.c: 117: if(i<0x34) i=0x34;
   329  00D0E0  0100               	movlb	__Lparam shr (0+8)
   330  00D0E2  0E00               	movlw	0
   331  00D0E4  5DAB               	subwf	(?a_ReadTabNTC+2)^(__Lparam& (0+65280)),w
   332  00D0E6  0E34               	movlw	52
   333  00D0E8  B4D8               	btfsc	status,2,c
   334  00D0EA  5DAA               	subwf	(?a_ReadTabNTC+1)^(__Lparam& (0+65280)),w
   335  00D0EC  E203               	bc	l7
   336  00D0EE  0E34               	movlw	52
   337  00D0F0  6FAA               	movwf	(?a_ReadTabNTC+1)^(__Lparam& (0+65280)),b
   338  00D0F2  6BAB               	clrf	(?a_ReadTabNTC+2)^(__Lparam& (0+65280)),b
   339  00D0F4                     l7:
   340                           ;ac.c: 118: if(i>0xED) i=0xED;
   341  00D0F4  0100               	movlb	__Lparam shr (0+8)
   342  00D0F6  0E00               	movlw	0
   343  00D0F8  5DAB               	subwf	(?a_ReadTabNTC+2)^(__Lparam& (0+65280)),w
   344  00D0FA  0EEE               	movlw	238
   345  00D0FC  B4D8               	btfsc	status,2,c
   346  00D0FE  5DAA               	subwf	(?a_ReadTabNTC+1)^(__Lparam& (0+65280)),w
   347  00D100  E303               	bnc	l8
   348  00D102  0EED               	movlw	237
   349  00D104  6FAA               	movwf	(?a_ReadTabNTC+1)^(__Lparam& (0+65280)),b
   350  00D106  6BAB               	clrf	(?a_ReadTabNTC+2)^(__Lparam& (0+65280)),b
   351  00D108                     l8:
   352                           ;ac.c: 119: i-=0x34;
   353  00D108  0100               	movlb	__Lparam shr (0+8)
   354  00D10A  0ECC               	movlw	204
   355  00D10C  27AA               	addwf	(?a_ReadTabNTC+1)^(__Lparam& (0+65280)),f
      +                          ,b
   356  00D10E  0EFF               	movlw	255
   357  00D110  23AB               	addwfc	(?a_ReadTabNTC+2)^(__Lparam& (0+65280)),
      +                          f,b
   358                           ;ac.c: 120: if(i>192) i=192;
   359  00D112  0E00               	movlw	0
   360  00D114  5DAB               	subwf	(?a_ReadTabNTC+2)^(__Lparam& (0+65280)),w
   361  00D116  0EC1               	movlw	193
   362  00D118  B4D8               	btfsc	status,2,c
   363  00D11A  5DAA               	subwf	(?a_ReadTabNTC+1)^(__Lparam& (0+65280)),w
   364  00D11C  E303               	bnc	l9
   365  00D11E  0EC0               	movlw	192
   366  00D120  6FAA               	movwf	(?a_ReadTabNTC+1)^(__Lparam& (0+65280)),b
   367  00D122  6BAB               	clrf	(?a_ReadTabNTC+2)^(__Lparam& (0+65280)),b
   368  00D124                     l9:
   369                           ;ac.c: 121: i+=0x0000;
   370  00D124  C0AA  F0AD         	movff	?a_ReadTabNTC+1,?_eeprom_read
   371  00D128  C0AB  F0AE         	movff	?a_ReadTabNTC+2,?_eeprom_read+1
   372  00D12C  ECC7  F06D         	call	_eeprom_read	;wreg free
   373  00D130  0100               	movlb	__Lparam shr (0+8)
   374  00D132  6FA9               	movwf	?a_ReadTabNTC^(__Lparam& (0+65280)),b
   375                           ;ac.c: 124: return data;
   376  00D134  51A9               	movf	?a_ReadTabNTC^(__Lparam& (0+65280)),w
   377  00D136  0012               	return	
   378                           ;ac.c: 125: }
   379  00D138                     __end_of_ReadTabNTC:
   380                           ;ac.c: 128: unsigned char ReturnACfromNTC(unsign
      +                          ed char data)
   381                           ;ac.c: 129: {
   382  00D138                     _ReturnACfromNTC:
   383  000000                     
   384                           ;_data stored from wreg
   385  00D138  0100               	movlb	__Lparam shr (0+8)
   386  00D13A  6FA9               	movwf	?a_ReturnACfromNTC^(__Lparam& (0+65280)),
      +                          b
   387                           ;ac.c: 130: unsigned int i;
   388  00D13C  6BAB               	clrf	(?a_ReturnACfromNTC+2)^(__Lparam& (0+65280
      +                          )),b
   389  00D13E  6BAC               	clrf	(?a_ReturnACfromNTC+3)^(__Lparam& (0+65280
      +                          )),b
   390  00D140                     l11:
   391                           ;ac.c: 133: {
   392  00D140  C0AB  F0AD         	movff	?a_ReturnACfromNTC+2,?_eeprom_read
   393  00D144  C0AC  F0AE         	movff	?a_ReturnACfromNTC+3,?_eeprom_read+1
   394  00D148  ECC7  F06D         	call	_eeprom_read	;wreg free
   395  00D14C  0100               	movlb	__Lparam shr (0+8)
   396  00D14E  6FAA               	movwf	(?a_ReturnACfromNTC+1)^(__Lparam& (0+6528
      +                          0)),b
   397                           ;ac.c: 135: if(bdta<data) return ((i-0x0000)+0x3
      +                          4)-1;
   398  00D150  51A9               	movf	?a_ReturnACfromNTC^(__Lparam& (0+65280)),w
   399  00D152  61AA               	cpfslt	(?a_ReturnACfromNTC+1)^(__Lparam& (0+652
      +                          80)),b
   400  00D154  D003               	goto	l14
   401  00D156  51AB               	movf	(?a_ReturnACfromNTC+2)^(__Lparam& (0+65280
      +                          )),w
   402  00D158  0F33               	addlw	51
   403  00D15A  0012               	return	
   404  00D15C                     l14:
   405  00D15C  0100               	movlb	__Lparam shr (0+8)
   406  00D15E  4BAB               	infsnz	(?a_ReturnACfromNTC+2)^(__Lparam& (0+652
      +                          80)),f,b
   407  00D160  2BAC               	incf	(?a_ReturnACfromNTC+3)^(__Lparam& (0+65280
      +                          )),f,b
   408  00D162  0E00               	movlw	0
   409  00D164  5DAC               	subwf	(?a_ReturnACfromNTC+3)^(__Lparam& (0+6528
      +                          0)),w
   410  00D166  0EC0               	movlw	192
   411  00D168  B4D8               	btfsc	status,2,c
   412  00D16A  5DAB               	subwf	(?a_ReturnACfromNTC+2)^(__Lparam& (0+6528
      +                          0)),w
   413  00D16C  E3E9               	bnc	l11
   414                           ;ac.c: 136: }
   415  00D16E  51AB               	movf	(?a_ReturnACfromNTC+2)^(__Lparam& (0+65280
      +                          )),w
   416  00D170  0F34               	addlw	52
   417  00D172  0012               	return	
   418                           ;ac.c: 138: }
   419  00D174                     __end_of_ReturnACfromNTC:
   420                           ;ac.c: 141: signed char ReadTabZNTC(unsigned cha
      +                          r zrAC)
   421                           ;ac.c: 142: {
   422  00D174                     _ReadTabZNTC:
   423  000000                     
   424                           ;ac.c: 143: unsigned int i;
   425  00D174  CFE8 F000          	movff	wreg,btemp
   426  00D178  6A01               	clrf	btemp+1,c
   427  00D17A  C000  F0AA         	movff	btemp,?a_ReadTabZNTC+1
   428  00D17E  C001  F0AB         	movff	btemp+1,?a_ReadTabZNTC+2
   429                           ;ac.c: 147: if(i<0x29) i=0x29;
   430  00D182  0100               	movlb	__Lparam shr (0+8)
   431  00D184  0E00               	movlw	0
   432  00D186  5DAB               	subwf	(?a_ReadTabZNTC+2)^(__Lparam& (0+65280)),
      +                          w
   433  00D188  0E29               	movlw	41
   434  00D18A  B4D8               	btfsc	status,2,c
   435  00D18C  5DAA               	subwf	(?a_ReadTabZNTC+1)^(__Lparam& (0+65280)),
      +                          w
   436  00D18E  E203               	bc	l16
   437  00D190  0E29               	movlw	41
   438  00D192  6FAA               	movwf	(?a_ReadTabZNTC+1)^(__Lparam& (0+65280)),
      +                          b
   439  00D194  6BAB               	clrf	(?a_ReadTabZNTC+2)^(__Lparam& (0+65280)),b
   440  00D196                     l16:
   441                           ;ac.c: 148: if(i>0xEC) i=0xEC;
   442  00D196  0100               	movlb	__Lparam shr (0+8)
   443  00D198  0E00               	movlw	0
   444  00D19A  5DAB               	subwf	(?a_ReadTabZNTC+2)^(__Lparam& (0+65280)),
      +                          w
   445  00D19C  0EED               	movlw	237
   446  00D19E  B4D8               	btfsc	status,2,c
   447  00D1A0  5DAA               	subwf	(?a_ReadTabZNTC+1)^(__Lparam& (0+65280)),
      +                          w
   448  00D1A2  E303               	bnc	l17
   449  00D1A4  0EEC               	movlw	236
   450  00D1A6  6FAA               	movwf	(?a_ReadTabZNTC+1)^(__Lparam& (0+65280)),
      +                          b
   451  00D1A8  6BAB               	clrf	(?a_ReadTabZNTC+2)^(__Lparam& (0+65280)),b
   452  00D1AA                     l17:
   453                           ;ac.c: 149: i-=0x29;
   454  00D1AA  0100               	movlb	__Lparam shr (0+8)
   455  00D1AC  0ED7               	movlw	215
   456  00D1AE  27AA               	addwf	(?a_ReadTabZNTC+1)^(__Lparam& (0+65280)),
      +                          f,b
   457  00D1B0  0EFF               	movlw	255
   458  00D1B2  23AB               	addwfc	(?a_ReadTabZNTC+2)^(__Lparam& (0+65280))
      +                          ,f,b
   459                           ;ac.c: 150: if(i>200) i=200;
   460  00D1B4  0E00               	movlw	0
   461  00D1B6  5DAB               	subwf	(?a_ReadTabZNTC+2)^(__Lparam& (0+65280)),
      +                          w
   462  00D1B8  0EC9               	movlw	201
   463  00D1BA  B4D8               	btfsc	status,2,c
   464  00D1BC  5DAA               	subwf	(?a_ReadTabZNTC+1)^(__Lparam& (0+65280)),
      +                          w
   465  00D1BE  E303               	bnc	l18
   466  00D1C0  0EC8               	movlw	200
   467  00D1C2  6FAA               	movwf	(?a_ReadTabZNTC+1)^(__Lparam& (0+65280)),
      +                          b
   468  00D1C4  6BAB               	clrf	(?a_ReadTabZNTC+2)^(__Lparam& (0+65280)),b
   469  00D1C6                     l18:
   470                           ;ac.c: 151: i+=0x00F0;
   471  00D1C6  0EF0               	movlw	240
   472  00D1C8  0100               	movlb	__Lparam shr (0+8)
   473  00D1CA  27AA               	addwf	(?a_ReadTabZNTC+1)^(__Lparam& (0+65280)),
      +                          f,b
   474  00D1CC  0E00               	movlw	0
   475  00D1CE  23AB               	addwfc	(?a_ReadTabZNTC+2)^(__Lparam& (0+65280))
      +                          ,f,b
   476                           ;ac.c: 153: data=eeprom_read(i);
   477  00D1D0  C0AA  F0AD         	movff	?a_ReadTabZNTC+1,?_eeprom_read
   478  00D1D4  C0AB  F0AE         	movff	?a_ReadTabZNTC+2,?_eeprom_read+1
   479  00D1D8  ECC7  F06D         	call	_eeprom_read	;wreg free
   480  00D1DC  0100               	movlb	__Lparam shr (0+8)
   481  00D1DE  6FA9               	movwf	?a_ReadTabZNTC^(__Lparam& (0+65280)),b
   482                           ;ac.c: 154: return data;
   483  00D1E0  51A9               	movf	?a_ReadTabZNTC^(__Lparam& (0+65280)),w
   484  00D1E2  0012               	return	
   485                           ;ac.c: 155: }
   486  00D1E4                     __end_of_ReadTabZNTC:
   487  000000                     
   488  000000                     
   489  000000                     
   490  000000                     
   491  000000                     
   492  000000                     
   493  000000                     
   494  000000                     
   495  000000                     
   496  000000                     
   497  000000                     
   498  000000                     
   499  000000                     
   500  000000                     
   501  000000                     
   502  000000                     
   503  000000                     
   504  000000                     
   505  000000                     
   506  000000                     
   507  000000                     
   508  000000                     
   509  000000                     
   510  000000                     
   511  000000                     
   512  000000                     
   513  000000                     
   514  000000                     
   515  000000                     
   516  000000                     
   517  000000                     
   518  000000                     
   519  000000                     
   520  000000                     
   521  000000                     
   522  000000                     
   523  000000                     
   524  000000                     
   525  000000                     
   526  000000                     
   527  000000                     
   528  000000                     
   529  000000                     
   530  000000                     
   531  000000                     
   532  000000                     
   533  000000                     
   534  000000                     
   535  000000                     
   536  000000                     
   537  000000                     
   538  000000                     
   539  000000                     
   540  000000                     
   541  000000                     
   542  000000                     
   543  000000                     
   544  000000                     
   545  000000                     
   546  000000                     
   547  000000                     
   548  000000                     
   549  000000                     
   550  000000                     
   551  000000                     
   552  000000                     
   553  000000                     
   554  000000                     
   555  000000                     
   556  000000                     
   557  000000                     
   558  000000                     
   559  000000                     
   560  000000                     
   561  000000                     
   562  000000                     
   563  000000                     
   564  000000                     
   565  000000                     
   566  000000                     
   567  000000                     
   568  000000                     
   569  000000                     
   570  000000                     
   571  000000                     
   572  000000                     
   573  000000                     
   574  000000                     
   575  000000                     
   576  000000                     
   577  000000                     
   578  000000                     
   579  000000                     
   580  000000                     
   581  000000                     
   582  000000                     
   583  000000                     
   584  000000                     
   585  000000                     
   586  000000                     
   587  000000                     
   588  000000                     
   589  000000                     
   590  000000                     
   591  000000                     
   592  000000                     
   593  000000                     
   594  000000                     
   595  000000                     
   596  000000                     
   597  000000                     
   598  000000                     
   599  000000                     
   600  000000                     
   601  000000                     
   602  000000                     
   603  000000                     
   604  000000                     
   605  000000                     
   606  000000                     
   607  000000                     
   608  000000                     
   609  000000                     
   610  000000                     
   611  000000                     
   612  000000                     
   613  000000                     
   614  000000                     
   615  000000                     
   616  000000                     
   617  000000                     
   618  000000                     
   619  000000                     
   620  000000                     
   621  000000                     
   622  000000                     
   623  000000                     
   624  000000                     
   625  000000                     
   626  000000                     
   627  000000                     
   628  000000                     
   629  000000                     
   630  000000                     
   631  000000                     
   632  000000                     
   633  000000                     
   634  000000                     
   635  000000                     
   636  000000                     
   637  000000                     
   638  000000                     
   639  000000                     
   640  000000                     
   641  000000                     
   642  000000                     
   643  000000                     
   644  000000                     
   645  000000                     
   646  000000                     
   647  000000                     
   648  000000                     
   649  000000                     
   650  000000                     
   651  000000                     
   652  000000                     
   653  000000                     
   654  000000                     
   655  000000                     
   656  000000                     
   657  000000                     
   658  000000                     
   659  000000                     
   660  000000                     
   661  000000                     
   662  000000                     
   663  000000                     
   664  000000                     
   665  000000                     
   666  000000                     
   667  000000                     
   668  000000                     
   669  000000                     
   670  000000                     
   671  000000                     
   672  000000                     
   673  000000                     
   674  000000                     
   675  000000                     
   676  000000                     
   677  000000                     
   678  000000                     
   679  000000                     
   680  000000                     
   681  000000                     
   682  000000                     
   683  000000                     
   684  000000                     
   685  000000                     
   686  000000                     
   687  000000                     
   688  000000                     
   689  000000                     
   690  000000                     
   691  000000                     
   692  000000                     
   693  000000                     
   694  000000                     
   695  000000                     
   696  000000                     
   697  000000                     
   698  000000                     
   699  000000                     
   700  000000                     
   701  000000                     
   702  000000                     
   703  000000                     
   704  000000                     
   705  000000                     
   706  000000                     
   707  000000                     
   708  000000                     
   709  000000                     
   710  000000                     
   711  000000                     
   712  000000                     
   713  000000                     
   714  000000                     
   715  000000                     
   716  000000                     
   717  000000                     
   718  000000                     
   719  000000                     
   720  000000                     
   721  000000                     
   722  000000                     
   723  000000                     
   724  000000                     
   725  000000                     
   726  000000                     
   727  000000                     
   728  000000                     
   729  000000                     
   730  000000                     
   731  000000                     
   732  000000                     
   733  000000                     
   734  000000                     
   735  000000                     
   736  000000                     
   737  000000                     
   738  000000                     
   739  000000                     
   740  000000                     
   741  000000                     
   742  000000                     
   743  000000                     
   744  000000                     
   745  000000                     
   746  000000                     
   747  000000                     
   748  000000                     
   749  000000                     
   750  000000                     
   751  000000                     
   752  000000                     
   753  000000                     
   754  000000                     
   755  000000                     
   756  000000                     
   757  000000                     
   758  000000                     
   759  000000                     
   760  000000                     
   761  000000                     
   762  000000                     
   763  000000                     
   764  000000                     
   765  000000                     
   766  000000                     
   767  000000                     
   768  000000                     
   769  000000                     
   770  000000                     
   771  000000                     
   772  000000                     
   773  000000                     
   774  000000                     
   775  000000                     
   776  000000                     
   777  000000                     
   778  000000                     
   779  000000                     
   780  000000                     
   781  000000                     
   782  000000                     
   783  000000                     
   784  000000                     
   785  000000                     
   786  000000                     
   787  000000                     
   788  000000                     
   789  000000                     
   790  000000                     
   791  000000                     
   792  000000                     
   793  000000                     
   794  000000                     
   795  000000                     
   796  000000                     
   797  000000                     
   798  000000                     
   799  000000                     
   800  000000                     
   801  000000                     
   802  000000                     
   803  000000                     
   804  000000                     
   805  000000                     
   806  000000                     
   807  000000                     
   808  000000                     
   809  000000                     
   810  000000                     
   811  000000                     
   812  000000                     
   813  000000                     
   814  000000                     
   815  000000                     
   816  000000                     
   817  000000                     
   818  000000                     
   819  000000                     
   820  000000                     
   821  000000                     
   822  000000                     
   823  000000                     
   824  000000                     
   825  000000                     
   826  000000                     
   827  000000                     
   828  000000                     
   829  000000                     
   830  000000                     
   831  000000                     
   832  000000                     
   833  000000                     
   834  000000                     
   835  000000                     
   836  000000                     
   837  000000                     
   838  000000                     
   839  000000                     
   840  000000                     
   841  000000                     
   842  000000                     
   843  000000                     
   844  000000                     
   845  000000                     
   846  000000                     
   847  000000                     
   848  000000                     
   849  000000                     
   850  000000                     
   851  000000                     
   852  000000                     
   853  000000                     
   854  000000                     
   855  000000                     
   856  000000                     
   857  000000                     
   858  000000                     
   859  000000                     
   860  000000                     
   861  000000                     
   862  000000                     
   863  000000                     
   864  000000                     
   865  000000                     
   866  000000                     
   867  000000                     
   868  000000                     
   869  000000                     
   870  000000                     
   871  000000                     
   872  000000                     
   873  000000                     
   874  000000                     
   875  000000                     
   876  000000                     
   877  000000                     
   878  000000                     
   879  000000                     
   880  000000                     
   881  000000                     
   882  000000                     
   883  000000                     
   884  000000                     
   885  000000                     
   886  000000                     
   887  000000                     
   888  000000                     
   889  000000                     
   890  000000                     
   891  000000                     
   892  000000                     
   893  000000                     
   894  000000                     
   895  000000                     
   896  000000                     
   897  000000                     
   898  000000                     
   899  000000                     
   900  000000                     
   901  000000                     
   902  000000                     
   903  000000                     
   904  000000                     
   905  000000                     
   906  000000                     
   907  000000                     
   908  000000                     
   909  000000                     
   910  000000                     
   911  000000                     
   912  000000                     
   913  000000                     
   914  000000                     
   915  000000                     
   916  000000                     
   917  000000                     
   918  000000                     
   919  000000                     
   920  000000                     
   921  000000                     
   922  000000                     
   923  000000                     
   924  000000                     
   925  000000                     
   926  000000                     
   927  000000                     
   928  000000                     
   929  000000                     
   930  000000                     
   931  000000                     
   932  000000                     
   933  000000                     
   934  000000                     
   935  000000                     
   936  000000                     
   937  000000                     
   938  000000                     
   939  000000                     
   940  000000                     
   941  000000                     
   942  000000                     
   943  000000                     
   944  000000                     
   945  000000                     
   946  000000                     
   947  000000                     
   948  000000                     
   949  000000                     
   950  000000                     
   951  000000                     
   952  000000                     
   953  000000                     
   954  000000                     
   955  000000                     
   956  000000                     
   957  000000                     
   958  000000                     
   959  000000                     
   960  000000                     
   961  000000                     
   962  000000                     
   963  000000                     
   964  000000                     
   965  000000                     
   966  000000                     
   967  000000                     
   968  000000                     
   969  000000                     
   970  000000                     
   971  000000                     
   972  000000                     
   973  000000                     
   974  000000                     
   975  000000                     
   976  000000                     
   977  000000                     
   978  000000                     
   979  000000                     
   980  000000                     
   981  000000                     
   982  000000                     
   983  000000                     
   984  000000                     
   985  000000                     
   986  000000                     
   987  000000                     
   988  000000                     
   989  000000                     
   990  000000                     
   991  000000                     
   992  000000                     
   993  000000                     
   994  000000                     
   995  000000                     
   996  000000                     
   997  000000                     
   998  000000                     
   999  000000                     
  1000  000000                     
  1001  000000                     
  1002  000000                     
  1003  000000                     
  1004  000000                     
  1005  000000                     
  1006  000000                     
  1007  000000                     
  1008  000000                     
  1009  000000                     
  1010  000000                     
  1011  000000                     
  1012  000000                     
  1013  000000                     
  1014  000000                     
  1015  000000                     
  1016  000000                     
  1017  000000                     
  1018  000000                     
  1019  000000                     
  1020  000000                     
  1021  000000                     
  1022  000000                     
  1023  000000                     
  1024  000000                     
  1025  000000                     
  1026  000000                     
  1027  000000                     
  1028  000000                     
  1029  000000                     
  1030  000000                     
  1031  000000                     
  1032  000000                     
  1033  000000                     
  1034  000000                     
  1035  000000                     
  1036  000000                     
  1037  000000                     
  1038  000000                     
  1039  000000                     
  1040  000000                     
  1041  000000                     
  1042  000000                     
  1043  000000                     
  1044  000000                     
  1045  000000                     
  1046  000000                     
  1047  000000                     
  1048  000000                     
  1049  000000                     
  1050  000000                     
  1051  000000                     
  1052  000000                     
  1053  000000                     
  1054  000000                     
  1055                           
  1056                           	psect	temp
  1057  000000                     btemp:
  1058  000000                     	ds	2
  1059                           wreg	equ	0xFE8
  1060                           fsr2l	equ	0xFD9
  1061                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Thu Jul 28 10:43:07 2016

                      l4 D0CA                        l7 D0F4  
                      l8 D108                        l9 D124  
                     l11 D140                       l14 D15C  
                     l16 D196                       l17 D1AA  
                     l18 D1C6                       u25 D080  
                     u45 D09C                       u65 D0B8  
                    wreg 000FE8          _ReturnACfromNTC D138  
                   fsr2l 000FD9                     btemp 0000  
             used_btemp0 0001               used_btemp1 0001  
           ?a_ReadTabNTC 00A9              _eeprom_read DB8E  
__end_of_ReturnACfromNTC D174                    status 000FD8  
      ?a_ReturnACfromNTC 00A9                  __Lparam 00A6  
           ?_eeprom_read 00AD                  __ramtop 1000  
         __end_of_InitAC D066           __end_of_ReadAC D0D2  
            _ReadTabZNTC D174      __end_of_ReadTabZNTC D1E4  
                 _InitAC D040                   _ReadAC D066  
          ?a_ReadTabZNTC 00A9               _ReadTabNTC D0D2  
     __end_of_ReadTabNTC D138  
