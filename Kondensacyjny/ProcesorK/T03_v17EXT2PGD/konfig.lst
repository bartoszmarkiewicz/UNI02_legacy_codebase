

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Thu Jul 28 10:43:10 2016


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	eeprom_data,global,class=EEDATA,delta=1
     5                           	psect	data,global,class=RAM,space=1,delta=1
     6                           	psect	idata,global,class=CODE,delta=1
     7                           	psect	const,global,class=CODE,delta=1
     8                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     9                           	psect	bss,global,class=RAM,space=1,delta=1
    10                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     	;#
   101                           
   102                           	psect	text
   103                           ;konfig.c: 29: DtMINMAX MinMax[22]=
   104                           ;konfig.c: 30: {
   105                           ;konfig.c: 31: 0x00C1, 00, 99,
   106                           ;konfig.c: 32: 0x00C2, 00, 99,
   107                           ;konfig.c: 33: 0x00C3, 00, 99,
   108                           ;konfig.c: 34: 0x00CE, 10, 20,
   109                           ;konfig.c: 35: 0x00CF, 25, 95,
   110                           ;konfig.c: 37: 0x00C5, 1, 2,
   111                           ;konfig.c: 39: 0x00C8, 0, 1,
   112                           ;konfig.c: 40: 0x00C4, 0, 1,
   113                           ;konfig.c: 41: 0x00CD, 0, 1,
   114                           ;konfig.c: 42: 0x00C6, 0, 1,
   115                           ;konfig.c: 44: 0x00CC, 1, 4,
   116                           ;konfig.c: 45: 0x00D0, 0,1,
   117                           ;konfig.c: 46: 0x00D1, 5,25,
   118                           ;konfig.c: 47: 0x00D2, 15,99,
   119                           ;konfig.c: 48: 0x00D3, 0,1,
   120                           ;konfig.c: 49: 0x00D5,0,5,
   121                           ;konfig.c: 50: 0x00D6, 0,25,
   122                           ;konfig.c: 51: 0x00D7, 25,99,
   123                           ;konfig.c: 52: 0x00D9,25,99,
   124                           ;konfig.c: 54: 0x00DA,0,10,
   125                           ;konfig.c: 55: 0x00DB,70,89,
   126                           ;konfig.c: 56: 0x00DC,0,20,
   127                           ;konfig.c: 57: };
   128                           ;konfig.c: 63: void EnKonf(void)
   129                           ;konfig.c: 64: {
   130  00756A                     _EnKonf:
   131                           ;       param _p assigned to ?_WriteEEVNT7+0
   132  000000                     _WriteEEVNT7$p	set	?_WriteEEVNT7
   133                           ;       param _p assigned to ?_WriteEEVNT6+0
   134  000000                     _WriteEEVNT6$p	set	?_WriteEEVNT6
   135                           ;       param _p assigned to ?_WriteEEVNT5+0
   136  000000                     _WriteEEVNT5$p	set	?_WriteEEVNT5
   137                           ;       param _p assigned to ?_WriteEEVNT4+0
   138  000000                     _WriteEEVNT4$p	set	?_WriteEEVNT4
   139                           ;       param _p assigned to ?_WriteEEVNT3+0
   140  000000                     _WriteEEVNT3$p	set	?_WriteEEVNT3
   141                           ;       param _p assigned to ?_WriteEEVNT2+0
   142  000000                     _WriteEEVNT2$p	set	?_WriteEEVNT2
   143                           ;       param _p assigned to ?_WriteEEVNT1+0
   144  000000                     _WriteEEVNT1$p	set	?_WriteEEVNT1
   145                           ;       param _p assigned to ?_WriteEEVNT0+0
   146  000000                     _WriteEEVNT0$p	set	?_WriteEEVNT0
   147  000000                     
   148                           ;konfig.c: 65: DtKNF.enknf=1;
   149  00756A  0101               	movlb	_DtKNF shr (0+8)
   150  00756C  81B4               	bsf	_DtKNF& (0+255),0,b
   151  00756E  D002               	goto	L16
   152                           ;konfig.c: 66: StartRTS(0);
   153                           ;konfig.c: 67: }
   154  007570                     __end_of_EnKonf:
   155                           ;konfig.c: 68: void DsKonf(void)
   156                           ;konfig.c: 69: {
   157  007570                     _DsKonf:
   158  000000                     
   159                           ;konfig.c: 70: DtKNF.enknf=0;
   160  007570  0101               	movlb	_DtKNF shr (0+8)
   161  007572  91B4               	bcf	_DtKNF& (0+255),0,b
   162  007574                     L16:
   163                           ;konfig.c: 71: StartRTS(0);
   164  007574  0E00               	movlw	0
   165  007576  EFD5  F063         	goto	_StartRTS
   166                           ;konfig.c: 72: }
   167  00757A                     __end_of_DsKonf:
   168                           ;konfig.c: 75: void MKonfiguracja(void)
   169                           ;konfig.c: 76: {
   170  00757A                     _MKonfiguracja:
   171  000000                     
   172                           ;konfig.c: 77: static unsigned char bf_AKTYWNE_K
      +                          NF=0, bf_SAVE_PAR=0;
   173  00757A  0100               	movlb	__Lparam shr (0+8)
   174  00757C  6BA9               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
   175  00757E  C365  FFE8         	movff	_RSDT1+63,wreg
   176  007582  EC24  F06A         	call	_GetBit2
   177  007586  0103               	movlb	(_M+3) shr (0+8)
   178  007588  9109               	bcf	(_M+3)& (0+255),0,b
   179  00758A  B0D8               	btfsc	status,0,c
   180  00758C  8109               	bsf	(_M+3)& (0+255),0,b
   181                           ;konfig.c: 82: if(DtKNF.enknf&&(M._AKTYWNE_KNF||
      +                          (RTS(0)>=20)))
   182  00758E  0101               	movlb	_DtKNF shr (0+8)
   183  007590  A1B4               	btfss	_DtKNF& (0+255),0,b
   184  007592  D00C               	goto	l29
   185  007594  0103               	movlb	(_M+3) shr (0+8)
   186  007596  B109               	btfsc	(_M+3)& (0+255),0,b
   187  007598  D007               	goto	u60
   188  00759A  0E00               	movlw	0
   189  00759C  ECE7  F063         	call	_RTS
   190  0075A0  6E00               	movwf	btemp,c
   191  0075A2  0E14               	movlw	20
   192  0075A4  5C00               	subwf	btemp,w,c
   193  0075A6  E302               	bnc	l29
   194  0075A8                     u60:
   195                           ;konfig.c: 83: {
   196  0075A8  0101               	movlb	_DtKNF shr (0+8)
   197  0075AA  91B4               	bcf	_DtKNF& (0+255),0,b
   198  0075AC                     l29:
   199                           ;konfig.c: 85: }
   200  0075AC  010E               	movlb	F1621 shr (0+8)
   201  0075AE  53F0               	movf	F1621& (0+255),f,b
   202  0075B0  E003               	bz	u91
   203  0075B2  0103               	movlb	(_M+3) shr (0+8)
   204  0075B4  A109               	btfss	(_M+3)& (0+255),0,b
   205  0075B6  D003               	goto	u110
   206  0075B8                     u91:
   207  0075B8  0102               	movlb	_MGSD shr (0+8)
   208  0075BA  BDAE               	btfsc	_MGSD& (0+255),6,b
   209  0075BC  D009               	goto	l30
   210  0075BE                     u110:
   211                           ;konfig.c: 88: {
   212  0075BE  010E               	movlb	F1621 shr (0+8)
   213  0075C0  6BF0               	clrf	F1621& (0+255),b
   214                           ;konfig.c: 90: DtKNF.wymCO=0;
   215  0075C2  0101               	movlb	_DtKNF shr (0+8)
   216  0075C4  93B4               	bcf	_DtKNF& (0+255),1,b
   217                           ;konfig.c: 91: DtKNF.wymCW=0;
   218  0075C6  95B4               	bcf	_DtKNF& (0+255),2,b
   219                           ;konfig.c: 92: bf_SAVE_PAR=0;
   220  0075C8  010E               	movlb	F1622 shr (0+8)
   221  0075CA  6BF1               	clrf	F1622& (0+255),b
   222                           ;konfig.c: 93: RdEEParam();
   223  0075CC  EFBD  F042         	goto	_RdEEParam	;wreg free
   224                           ;konfig.c: 94: return;
   225  0075D0                     l30:
   226                           ;konfig.c: 95: }
   227  0075D0  0103               	movlb	(_M+3) shr (0+8)
   228  0075D2  A109               	btfss	(_M+3)& (0+255),0,b
   229  0075D4  0012               	return	
   230                           ;konfig.c: 97: {
   231  0075D6  010E               	movlb	F1621 shr (0+8)
   232  0075D8  53F0               	movf	F1621& (0+255),f,b
   233  0075DA  E102               	bnz	l32
   234                           ;konfig.c: 99: {
   235  0075DC  010E               	movlb	F1622 shr (0+8)
   236  0075DE  6BF1               	clrf	F1622& (0+255),b
   237  0075E0                     l32:
   238                           ;konfig.c: 101: }
   239  0075E0  0E01               	movlw	1
   240  0075E2  CFE8 FEF0          	movff	wreg,F1621
   241                           ;konfig.c: 103: DtKNF.KRK=RSDT1.inKRK;
   242  0075E6  C369  F1B6         	movff	_RSDT1+67,_DtKNF+2
   243                           ;konfig.c: 104: RSDT1.outKRK=DtKNF.KRK;
   244  0075EA  C1B6  F345         	movff	_DtKNF+2,_RSDT1+31
   245                           ;konfig.c: 105: switch(DtKNF.KRK)
   246  0075EE  D03F               	goto	l34
   247  0075F0                     l35:
   248                           ;konfig.c: 106: {
   249                           ;konfig.c: 108: {
   250  0075F0  0101               	movlb	_DtKNF shr (0+8)
   251  0075F2  93B4               	bcf	_DtKNF& (0+255),1,b
   252                           ;konfig.c: 110: DtKNF.wymCW=0;
   253  0075F4  95B4               	bcf	_DtKNF& (0+255),2,b
   254                           ;konfig.c: 111: RefKnfPar();
   255  0075F6  D044               	goto	_RefKnfPar	;wreg free
   256                           ;konfig.c: 112: break;
   257  0075F8                     l36:
   258                           ;konfig.c: 113: }
   259                           ;konfig.c: 115: {
   260  0075F8  C36A  F1B5         	movff	_RSDT1+68,_DtKNF+1
   261                           ;konfig.c: 117: RSDT1.outPRM=DtKNF.PRM;
   262  0075FC  C1B5  F346         	movff	_DtKNF+1,_RSDT1+32
   263                           ;konfig.c: 119: if(DtKNF.PRM>2)
   264  007600  0E02               	movlw	2
   265  007602  0101               	movlb	(_DtKNF+1) shr (0+8)
   266  007604  65B5               	cpfsgt	(_DtKNF+1)& (0+255),b
   267  007606  D022               	goto	l39
   268                           ;konfig.c: 120: {
   269  007608  93B4               	bcf	_DtKNF& (0+255),1,b
   270                           ;konfig.c: 122: DtKNF.wymCW=0;
   271  00760A  95B4               	bcf	_DtKNF& (0+255),2,b
   272                           ;konfig.c: 123: }
   273  00760C  D01F               	goto	l39
   274  00760E                     l40:
   275                           ;konfig.c: 127: {
   276                           ;konfig.c: 130: {
   277  00760E  C36B  F1B7         	movff	_RSDT1+69,_DtKNF+3
   278                           ;konfig.c: 132: DtKNF.wymCO=1;
   279  007612  0101               	movlb	_DtKNF shr (0+8)
   280  007614  83B4               	bsf	_DtKNF& (0+255),1,b
   281                           ;konfig.c: 133: DtKNF.wymCW=0;
   282  007616  95B4               	bcf	_DtKNF& (0+255),2,b
   283                           ;konfig.c: 134: break;
   284  007618  0012               	return	
   285  00761A                     l41:
   286                           ;konfig.c: 135: }
   287                           ;konfig.c: 138: {
   288  00761A  C36B  F1B8         	movff	_RSDT1+69,_DtKNF+4
   289                           ;konfig.c: 140: DtKNF.wymCO=0;
   290  00761E  0101               	movlb	_DtKNF shr (0+8)
   291  007620  93B4               	bcf	_DtKNF& (0+255),1,b
   292                           ;konfig.c: 141: if(DtKNF.tpkt==0)
   293  007622  EE01  F0C2         	lfsr	0,_DtKNF+14
   294  007626  50EF               	movf	indf0,w,c
   295  007628  E102               	bnz	l42
   296                           ;konfig.c: 142: {
   297  00762A  85B4               	bsf	_DtKNF& (0+255),2,b
   298                           ;konfig.c: 144: }
   299  00762C  0012               	return	
   300  00762E                     l42:
   301                           ;konfig.c: 145: else
   302  00762E  0E0B               	movlw	11
   303  007630  EC50  F063         	call	_RdPrt
   304  007634  0101               	movlb	_DtKNF shr (0+8)
   305  007636  E302               	bnc	L14
   306  007638  85B4               	bsf	_DtKNF& (0+255),2,b
   307  00763A  0012               	return	
   308                           ;konfig.c: 148: else DtKNF.wymCW=0;
   309  00763C                     L14:
   310  00763C  95B4               	bcf	_DtKNF& (0+255),2,b
   311                           ;konfig.c: 149: }
   312  00763E  0012               	return	
   313  007640                     l46:
   314                           ;konfig.c: 151: }
   315                           ;konfig.c: 154: {
   316  007640  C36B  F1B9         	movff	_RSDT1+69,_DtKNF+5
   317                           ;konfig.c: 156: DtKNF.wymCO=1;
   318  007644  0101               	movlb	_DtKNF shr (0+8)
   319  007646  83B4               	bsf	_DtKNF& (0+255),1,b
   320                           ;konfig.c: 157: DtKNF.wymCW=0;
   321  007648  95B4               	bcf	_DtKNF& (0+255),2,b
   322                           ;konfig.c: 158: break;
   323  00764A  0012               	return	
   324  00764C                     l39:
   325  00764C  C1B5  FFE8         	movff	_DtKNF+1,wreg
   326  007650  0A00               	xorlw	0
   327  007652  E0DD               	bz	l40
   328  007654  0A01               	xorlw	1
   329  007656  E0E1               	bz	l41
   330  007658  0A03               	xorlw	3
   331  00765A  E0F2               	bz	l46
   332  00765C  0012               	return	
   333                           ;konfig.c: 161: break;
   334  00765E                     l47:
   335                           ;konfig.c: 162: }
   336                           ;konfig.c: 164: {
   337  00765E  010E               	movlb	F1622 shr (0+8)
   338  007660  53F1               	movf	F1622& (0+255),f,b
   339  007662  A4D8               	btfss	status,2,c
   340  007664  0012               	return	
   341                           ;konfig.c: 166: {
   342  007666  D871               	call	_SaveKnfPar	;wreg free
   343  007668  CFE8 FEF1          	movff	wreg,F1622
   344                           ;konfig.c: 168: }
   345  00766C  0012               	return	
   346  00766E                     l34:
   347  00766E  C1B6  FFE8         	movff	_DtKNF+2,wreg
   348  007672  0A02               	xorlw	2
   349  007674  E0BD               	bz	l35
   350  007676  0A01               	xorlw	1
   351  007678  E0BF               	bz	l36
   352  00767A  0A07               	xorlw	7
   353  00767C  E0F0               	bz	l47
   354  00767E  0012               	return	
   355                           ;konfig.c: 172: }
   356  007680                     __end_of_MKonfiguracja:
   357                           ;konfig.c: 176: unsigned char RefKnfPar(void)
   358                           ;konfig.c: 177: {
   359  007680                     _RefKnfPar:
   360  000000                     
   361                           ;konfig.c: 178: if(RSDT1.RD_KNF)
   362  007680  0103               	movlb	(_RSDT1+1) shr (0+8)
   363  007682  A327               	btfss	(_RSDT1+1)& (0+255),1,b
   364  007684  0C00               	retlw	0
   365                           ;konfig.c: 179: {
   366  007686  8727               	bsf	(_RSDT1+1)& (0+255),3,b
   367                           ;konfig.c: 181: DtKNF.mstr=RSDT1.inMSTR;
   368  007688  C36C  F1BA         	movff	_RSDT1+70,_DtKNF+6
   369                           ;konfig.c: 182: DtKNF.mxcw=RSDT1.inMMAXU;
   370  00768C  C36D  F1BB         	movff	_RSDT1+71,_DtKNF+7
   371                           ;konfig.c: 183: DtKNF.mxco=RSDT1.inMMAXG;
   372  007690  C36E  F1BC         	movff	_RSDT1+72,_DtKNF+8
   373                           ;konfig.c: 184: DtKNF.def_mxco=DtKNF.mxco;
   374  007694  C1BC  F1BD         	movff	_DtKNF+8,_DtKNF+9
   375                           ;konfig.c: 185: DtKNF.opdg=RSDT1.inOPDG;
   376  007698  C373  F1CE         	movff	_RSDT1+77,_DtKNF+26
   377                           ;konfig.c: 186: DtKNF.aleg=RSDT1.inWANL;
   378  00769C  C36F  F1CD         	movff	_RSDT1+73,_DtKNF+25
   379                           ;konfig.c: 187: if(RSDT1.inKODKT!=DtKNF.kodkt)
   380  0076A0  C370  FFE8         	movff	_RSDT1+74,wreg
   381  0076A4  0101               	movlb	(_DtKNF+13) shr (0+8)
   382  0076A6  19C1               	xorwf	(_DtKNF+13)& (0+255),w,b
   383  0076A8  E006               	bz	l51
   384                           ;konfig.c: 188: {
   385  0076AA  C370  F1C1         	movff	_RSDT1+74,_DtKNF+13
   386                           ;konfig.c: 190: SetTpKtParam();
   387  0076AE  ECF9  F043         	call	_SetTpKtParam	;wreg free
   388                           ;konfig.c: 191: ModParam();
   389  0076B2  ECDF  F066         	call	_ModParam	;wreg free
   390  0076B6                     l51:
   391                           ;konfig.c: 192: }
   392  0076B6  C371  F1C9         	movff	_RSDT1+75,_DtKNF+21
   393                           ;konfig.c: 194: DtKNF.nokr=RSDT1.inNOKR;
   394  0076BA  C372  F1CA         	movff	_RSDT1+76,_DtKNF+22
   395                           ;konfig.c: 195: DtKNF.tpcs=RSDT1.inTPCS;
   396  0076BE  C374  F1CF         	movff	_RSDT1+78,_DtKNF+27
   397                           ;konfig.c: 196: if(DtKNF.kodkt<3)
   398  0076C2  0E03               	movlw	3
   399  0076C4  0101               	movlb	(_DtKNF+13) shr (0+8)
   400  0076C6  61C1               	cpfslt	(_DtKNF+13)& (0+255),b
   401  0076C8  D011               	goto	l52
   402                           ;konfig.c: 197: {
   403  0076CA  C375  FFE8         	movff	_RSDT1+79,wreg
   404  0076CE  19CB               	xorwf	(_DtKNF+23)& (0+255),w,b
   405  0076D0  E004               	bz	l53
   406                           ;konfig.c: 199: {
   407  0076D2  C375  F1CB         	movff	_RSDT1+79,_DtKNF+23
   408                           ;konfig.c: 201: ModParam();
   409  0076D6  ECDF  F066         	call	_ModParam	;wreg free
   410  0076DA                     l53:
   411                           ;konfig.c: 202: }
   412  0076DA  C376  FFE8         	movff	_RSDT1+80,wreg
   413  0076DE  0101               	movlb	(_DtKNF+24) shr (0+8)
   414  0076E0  19CC               	xorwf	(_DtKNF+24)& (0+255),w,b
   415  0076E2  E004               	bz	l52
   416                           ;konfig.c: 204: {
   417  0076E4  C376  F1CC         	movff	_RSDT1+80,_DtKNF+24
   418                           ;konfig.c: 206: ModParam();
   419  0076E8  ECDF  F066         	call	_ModParam	;wreg free
   420  0076EC                     l52:
   421                           ;konfig.c: 207: }
   422  0076EC  C377  F1C4         	movff	_RSDT1+81,_DtKNF+16
   423                           ;konfig.c: 210: DtKNF.dtpm=RSDT1.inDTPM;
   424  0076F0  C378  F1C5         	movff	_RSDT1+82,_DtKNF+17
   425                           ;konfig.c: 211: DtKNF.mdpm=RSDT1.inMDPM;
   426  0076F4  C379  F1C6         	movff	_RSDT1+83,_DtKNF+18
   427                           ;konfig.c: 212: DtKNF.teco=RSDT1.inTECO;
   428  0076F8  C37A  F1C7         	movff	_RSDT1+84,_DtKNF+19
   429                           ;konfig.c: 240: switch(RSDT1.vKNF)
   430  0076FC  D016               	goto	l56
   431  0076FE                     l57:
   432                           ;konfig.c: 241: {
   433                           ;konfig.c: 243: DtKNF.hsco=RSDT1.inHSCO;
   434  0076FE  C37F  F1D3         	movff	_RSDT1+89,_DtKNF+31
   435                           ;konfig.c: 244: DtKNF.conw=RSDT1.inCONW;
   436  007702  C380  F1D4         	movff	_RSDT1+90,_DtKNF+32
   437                           ;konfig.c: 245: DtKNF.prop=RSDT1.inPROP;
   438  007706  C381  F1D5         	movff	_RSDT1+91,_DtKNF+33
   439  00770A                     l58:
   440                           ;konfig.c: 246: case 4:
   441                           ;konfig.c: 247: DtKNF.mgpm2=RSDT1.inMGPM2;
   442  00770A  C37E  F1D1         	movff	_RSDT1+88,_DtKNF+29
   443  00770E                     l59:
   444                           ;konfig.c: 248: case 3:
   445                           ;konfig.c: 249: DtKNF.mgpm=RSDT1.inMGPM;
   446  00770E  C37D  F1D0         	movff	_RSDT1+87,_DtKNF+28
   447                           ;konfig.c: 250: if(DtKNF.mdpm>DtKNF.mgpm) DtKNF.
      +                          mdpm=DtKNF.mgpm;
   448  007712  C1C6  FFE8         	movff	_DtKNF+18,wreg
   449  007716  0101               	movlb	(_DtKNF+28) shr (0+8)
   450  007718  61D0               	cpfslt	(_DtKNF+28)& (0+255),b
   451  00771A  D002               	goto	l61
   452  00771C  C1D0  F1C6         	movff	_DtKNF+28,_DtKNF+18
   453  007720                     l61:
   454                           ;konfig.c: 251: case 2:
   455                           ;konfig.c: 252: DtKNF.tmxco2=RSDT1.inTMMAXG2;
   456  007720  C37B  F1BF         	movff	_RSDT1+85,_DtKNF+11
   457                           ;konfig.c: 253: DtKNF.mxco2=RSDT1.inMMAXG2;
   458  007724  C37C  F1BE         	movff	_RSDT1+86,_DtKNF+10
   459  007728                     l62:
   460                           ;konfig.c: 254: case 1:
   461                           ;konfig.c: 255: break;
   462  007728  D00C               	goto	l55
   463  00772A                     l56:
   464  00772A  C343  FFE8         	movff	_RSDT1+29,wreg
   465  00772E  0A01               	xorlw	1
   466  007730  E0FB               	bz	l62
   467  007732  0A03               	xorlw	3
   468  007734  E0F5               	bz	l61
   469  007736  0A01               	xorlw	1
   470  007738  E0EA               	bz	l59
   471  00773A  0A07               	xorlw	7
   472  00773C  E0E6               	bz	l58
   473  00773E  0A01               	xorlw	1
   474  007740  E0DE               	bz	l57
   475  007742                     l55:
   476                           ;konfig.c: 258: RSDT1.RRD_KNF=0;
   477  007742  0103               	movlb	(_RSDT1+1) shr (0+8)
   478  007744  9727               	bcf	(_RSDT1+1)& (0+255),3,b
   479                           ;konfig.c: 259: RSDT1.RD_KNF=0;
   480  007746  9327               	bcf	(_RSDT1+1)& (0+255),1,b
   481                           ;konfig.c: 260: return 1;
   482  007748  0C01               	retlw	1
   483                           ;konfig.c: 261: }
   484                           ;konfig.c: 263: }
   485  00774A                     __end_of_RefKnfPar:
   486                           ;konfig.c: 266: unsigned char SaveKnfPar(void)
   487                           ;konfig.c: 267: {
   488  00774A                     _SaveKnfPar:
   489  000000                     
   490                           ;konfig.c: 268: if(RefKnfPar())
   491  00774A  DF9A               	call	_RefKnfPar	;wreg free
   492  00774C  0900               	iorlw	0
   493  00774E  E102 EF78  F042    	bz	l64
   494                           ;konfig.c: 269: {
   495  007754  C1BA  F002         	movff	_DtKNF+6,btemp+2
   496  007758  6A03               	clrf	btemp+3,c
   497  00775A  EE01  F002         	lfsr	0,_MinMax+2
   498  00775E  CFEE F000          	movff	postinc0,btemp
   499  007762  CFED F001          	movff	postdec0,btemp+1
   500  007766  5003               	movf	btemp+3,w,c
   501  007768  5C01               	subwf	btemp+1,w,c
   502  00776A  E102               	bnz	u255
   503  00776C  5002               	movf	btemp+2,w,c
   504  00776E  5C00               	subwf	btemp,w,c
   505  007770                     u255:
   506  007770  E20F               	bc	u271
   507  007772  EE01  F004         	lfsr	0,_MinMax+4
   508  007776  CFEE F000          	movff	postinc0,btemp
   509  00777A  CFED F001          	movff	postdec0,btemp+1
   510  00777E  C1BA  F002         	movff	_DtKNF+6,btemp+2
   511  007782  6A03               	clrf	btemp+3,c
   512  007784  5001               	movf	btemp+1,w,c
   513  007786  5C03               	subwf	btemp+3,w,c
   514  007788  E102               	bnz	u265
   515  00778A  5000               	movf	btemp,w,c
   516  00778C  5C02               	subwf	btemp+2,w,c
   517  00778E                     u265:
   518  00778E  E316               	bnc	u300
   519  007790                     u271:
   520  007790  C1BA  F000         	movff	_DtKNF+6,btemp
   521  007794  6A01               	clrf	btemp+1,c
   522  007796  C103  FFE8         	movff	_MinMax+3,wreg
   523  00779A  1801               	xorwf	btemp+1,w,c
   524  00779C  E103               	bnz	u285
   525  00779E  C102  FFE8         	movff	_MinMax+2,wreg
   526  0077A2  1800               	xorwf	btemp,w,c
   527  0077A4                     u285:
   528  0077A4  E00B               	bz	u300
   529  0077A6  C1BA  F000         	movff	_DtKNF+6,btemp
   530  0077AA  6A01               	clrf	btemp+1,c
   531  0077AC  C105  FFE8         	movff	_MinMax+5,wreg
   532  0077B0  1801               	xorwf	btemp+1,w,c
   533  0077B2  E103               	bnz	u305
   534  0077B4  C104  FFE8         	movff	_MinMax+4,wreg
   535  0077B8  1800               	xorwf	btemp,w,c
   536  0077BA                     u305:
   537  0077BA  E118               	bnz	l65
   538  0077BC                     u300:
   539                           ;konfig.c: 271: if(DtKNF.mstr!=eeprom_read(0x00C
      +                          1)) eeprom_write(0x00C1,DtKNF.mstr);
   540  0077BC  0EC1               	movlw	193
   541  0077BE  0100               	movlb	__Lparam shr (0+8)
   542  0077C0  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   543  0077C2  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   544  0077C4  ECC7  F06D         	call	_eeprom_read	;wreg free
   545  0077C8  6E00               	movwf	btemp,c
   546  0077CA  C000  F002         	movff	btemp,btemp+2
   547  0077CE  6A03               	clrf	btemp+3,c
   548  0077D0  C1BA  FFE8         	movff	_DtKNF+6,wreg
   549  0077D4  1802               	xorwf	btemp+2,w,c
   550  0077D6  E101               	bnz	u325
   551  0077D8  5203               	movf	btemp+3,f,c
   552  0077DA                     u325:
   553  0077DA  E008               	bz	l65
   554  0077DC  0EC1               	movlw	193
   555  0077DE  0100               	movlb	__Lparam shr (0+8)
   556  0077E0  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   557  0077E2  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   558  0077E4  C1BA  F0AC         	movff	_DtKNF+6,?_eeprom_write+2
   559  0077E8  EC13  F06D         	call	_eeprom_write	;wreg free
   560  0077EC                     l65:
   561                           ;konfig.c: 273: if((DtKNF.mxcw>MinMax[1].min)&&(
      +                          DtKNF.mxcw<MinMax[1].max)||DtKNF.mxcw==MinMax[1]
      +                          .min||DtKNF.mxcw==MinMax[1].max)
   562  0077EC  C1BB  F002         	movff	_DtKNF+7,btemp+2
   563  0077F0  6A03               	clrf	btemp+3,c
   564  0077F2  EE01  F008         	lfsr	0,_MinMax+8
   565  0077F6  CFEE F000          	movff	postinc0,btemp
   566  0077FA  CFED F001          	movff	postdec0,btemp+1
   567  0077FE  5003               	movf	btemp+3,w,c
   568  007800  5C01               	subwf	btemp+1,w,c
   569  007802  E102               	bnz	u335
   570  007804  5002               	movf	btemp+2,w,c
   571  007806  5C00               	subwf	btemp,w,c
   572  007808                     u335:
   573  007808  E20F               	bc	u351
   574  00780A  EE01  F00A         	lfsr	0,_MinMax+10
   575  00780E  CFEE F000          	movff	postinc0,btemp
   576  007812  CFED F001          	movff	postdec0,btemp+1
   577  007816  C1BB  F002         	movff	_DtKNF+7,btemp+2
   578  00781A  6A03               	clrf	btemp+3,c
   579  00781C  5001               	movf	btemp+1,w,c
   580  00781E  5C03               	subwf	btemp+3,w,c
   581  007820  E102               	bnz	u345
   582  007822  5000               	movf	btemp,w,c
   583  007824  5C02               	subwf	btemp+2,w,c
   584  007826                     u345:
   585  007826  E316               	bnc	u380
   586  007828                     u351:
   587  007828  C1BB  F000         	movff	_DtKNF+7,btemp
   588  00782C  6A01               	clrf	btemp+1,c
   589  00782E  C109  FFE8         	movff	_MinMax+9,wreg
   590  007832  1801               	xorwf	btemp+1,w,c
   591  007834  E103               	bnz	u365
   592  007836  C108  FFE8         	movff	_MinMax+8,wreg
   593  00783A  1800               	xorwf	btemp,w,c
   594  00783C                     u365:
   595  00783C  E00B               	bz	u380
   596  00783E  C1BB  F000         	movff	_DtKNF+7,btemp
   597  007842  6A01               	clrf	btemp+1,c
   598  007844  C10B  FFE8         	movff	_MinMax+11,wreg
   599  007848  1801               	xorwf	btemp+1,w,c
   600  00784A  E103               	bnz	u385
   601  00784C  C10A  FFE8         	movff	_MinMax+10,wreg
   602  007850  1800               	xorwf	btemp,w,c
   603  007852                     u385:
   604  007852  E118               	bnz	l67
   605  007854                     u380:
   606                           ;konfig.c: 274: if(DtKNF.mxcw!=eeprom_read(0x00C
      +                          2)) eeprom_write(0x00C2,DtKNF.mxcw);
   607  007854  0EC2               	movlw	194
   608  007856  0100               	movlb	__Lparam shr (0+8)
   609  007858  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   610  00785A  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   611  00785C  ECC7  F06D         	call	_eeprom_read	;wreg free
   612  007860  6E00               	movwf	btemp,c
   613  007862  C000  F002         	movff	btemp,btemp+2
   614  007866  6A03               	clrf	btemp+3,c
   615  007868  C1BB  FFE8         	movff	_DtKNF+7,wreg
   616  00786C  1802               	xorwf	btemp+2,w,c
   617  00786E  E101               	bnz	u405
   618  007870  5203               	movf	btemp+3,f,c
   619  007872                     u405:
   620  007872  E008               	bz	l67
   621  007874  0EC2               	movlw	194
   622  007876  0100               	movlb	__Lparam shr (0+8)
   623  007878  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   624  00787A  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   625  00787C  C1BB  F0AC         	movff	_DtKNF+7,?_eeprom_write+2
   626  007880  EC13  F06D         	call	_eeprom_write	;wreg free
   627  007884                     l67:
   628                           ;konfig.c: 276: if((DtKNF.mxco>MinMax[2].min)&&(
      +                          DtKNF.mxco<MinMax[2].max)||DtKNF.mxco==MinMax[2]
      +                          .min||DtKNF.mxco==MinMax[2].max)
   629  007884  C1BC  F002         	movff	_DtKNF+8,btemp+2
   630  007888  6A03               	clrf	btemp+3,c
   631  00788A  EE01  F00E         	lfsr	0,_MinMax+14
   632  00788E  CFEE F000          	movff	postinc0,btemp
   633  007892  CFED F001          	movff	postdec0,btemp+1
   634  007896  5003               	movf	btemp+3,w,c
   635  007898  5C01               	subwf	btemp+1,w,c
   636  00789A  E102               	bnz	u415
   637  00789C  5002               	movf	btemp+2,w,c
   638  00789E  5C00               	subwf	btemp,w,c
   639  0078A0                     u415:
   640  0078A0  E20F               	bc	u431
   641  0078A2  EE01  F010         	lfsr	0,_MinMax+16
   642  0078A6  CFEE F000          	movff	postinc0,btemp
   643  0078AA  CFED F001          	movff	postdec0,btemp+1
   644  0078AE  C1BC  F002         	movff	_DtKNF+8,btemp+2
   645  0078B2  6A03               	clrf	btemp+3,c
   646  0078B4  5001               	movf	btemp+1,w,c
   647  0078B6  5C03               	subwf	btemp+3,w,c
   648  0078B8  E102               	bnz	u425
   649  0078BA  5000               	movf	btemp,w,c
   650  0078BC  5C02               	subwf	btemp+2,w,c
   651  0078BE                     u425:
   652  0078BE  E316               	bnc	u460
   653  0078C0                     u431:
   654  0078C0  C1BC  F000         	movff	_DtKNF+8,btemp
   655  0078C4  6A01               	clrf	btemp+1,c
   656  0078C6  C10F  FFE8         	movff	_MinMax+15,wreg
   657  0078CA  1801               	xorwf	btemp+1,w,c
   658  0078CC  E103               	bnz	u445
   659  0078CE  C10E  FFE8         	movff	_MinMax+14,wreg
   660  0078D2  1800               	xorwf	btemp,w,c
   661  0078D4                     u445:
   662  0078D4  E00B               	bz	u460
   663  0078D6  C1BC  F000         	movff	_DtKNF+8,btemp
   664  0078DA  6A01               	clrf	btemp+1,c
   665  0078DC  C111  FFE8         	movff	_MinMax+17,wreg
   666  0078E0  1801               	xorwf	btemp+1,w,c
   667  0078E2  E103               	bnz	u465
   668  0078E4  C110  FFE8         	movff	_MinMax+16,wreg
   669  0078E8  1800               	xorwf	btemp,w,c
   670  0078EA                     u465:
   671  0078EA  E118               	bnz	l69
   672  0078EC                     u460:
   673                           ;konfig.c: 277: if(DtKNF.mxco!=eeprom_read(0x00C
      +                          3)) eeprom_write(0x00C3,DtKNF.mxco);
   674  0078EC  0EC3               	movlw	195
   675  0078EE  0100               	movlb	__Lparam shr (0+8)
   676  0078F0  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   677  0078F2  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   678  0078F4  ECC7  F06D         	call	_eeprom_read	;wreg free
   679  0078F8  6E00               	movwf	btemp,c
   680  0078FA  C000  F002         	movff	btemp,btemp+2
   681  0078FE  6A03               	clrf	btemp+3,c
   682  007900  C1BC  FFE8         	movff	_DtKNF+8,wreg
   683  007904  1802               	xorwf	btemp+2,w,c
   684  007906  E101               	bnz	u485
   685  007908  5203               	movf	btemp+3,f,c
   686  00790A                     u485:
   687  00790A  E008               	bz	l69
   688  00790C  0EC3               	movlw	195
   689  00790E  0100               	movlb	__Lparam shr (0+8)
   690  007910  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   691  007912  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   692  007914  C1BC  F0AC         	movff	_DtKNF+8,?_eeprom_write+2
   693  007918  EC13  F06D         	call	_eeprom_write	;wreg free
   694  00791C                     l69:
   695                           ;konfig.c: 279: if(DtKNF.kodkt<3)
   696  00791C  0E03               	movlw	3
   697  00791E  0101               	movlb	(_DtKNF+13) shr (0+8)
   698  007920  61C1               	cpfslt	(_DtKNF+13)& (0+255),b
   699  007922  D09C               	goto	l71
   700                           ;konfig.c: 280: {
   701  007924  C1CB  F002         	movff	_DtKNF+23,btemp+2
   702  007928  6A03               	clrf	btemp+3,c
   703  00792A  EE01  F014         	lfsr	0,_MinMax+20
   704  00792E  CFEE F000          	movff	postinc0,btemp
   705  007932  CFED F001          	movff	postdec0,btemp+1
   706  007936  5003               	movf	btemp+3,w,c
   707  007938  5C01               	subwf	btemp+1,w,c
   708  00793A  E102               	bnz	u505
   709  00793C  5002               	movf	btemp+2,w,c
   710  00793E  5C00               	subwf	btemp,w,c
   711  007940                     u505:
   712  007940  E20F               	bc	u521
   713  007942  EE01  F016         	lfsr	0,_MinMax+22
   714  007946  CFEE F000          	movff	postinc0,btemp
   715  00794A  CFED F001          	movff	postdec0,btemp+1
   716  00794E  C1CB  F002         	movff	_DtKNF+23,btemp+2
   717  007952  6A03               	clrf	btemp+3,c
   718  007954  5001               	movf	btemp+1,w,c
   719  007956  5C03               	subwf	btemp+3,w,c
   720  007958  E102               	bnz	u515
   721  00795A  5000               	movf	btemp,w,c
   722  00795C  5C02               	subwf	btemp+2,w,c
   723  00795E                     u515:
   724  00795E  E316               	bnc	u550
   725  007960                     u521:
   726  007960  C1CB  F000         	movff	_DtKNF+23,btemp
   727  007964  6A01               	clrf	btemp+1,c
   728  007966  C115  FFE8         	movff	_MinMax+21,wreg
   729  00796A  1801               	xorwf	btemp+1,w,c
   730  00796C  E103               	bnz	u535
   731  00796E  C114  FFE8         	movff	_MinMax+20,wreg
   732  007972  1800               	xorwf	btemp,w,c
   733  007974                     u535:
   734  007974  E00B               	bz	u550
   735  007976  C1CB  F000         	movff	_DtKNF+23,btemp
   736  00797A  6A01               	clrf	btemp+1,c
   737  00797C  C117  FFE8         	movff	_MinMax+23,wreg
   738  007980  1801               	xorwf	btemp+1,w,c
   739  007982  E103               	bnz	u555
   740  007984  C116  FFE8         	movff	_MinMax+22,wreg
   741  007988  1800               	xorwf	btemp,w,c
   742  00798A                     u555:
   743  00798A  E11A               	bnz	l72
   744  00798C                     u550:
   745                           ;konfig.c: 282: if(DtKNF.mmin!=eeprom_read(0x00C
      +                          E))
   746  00798C  0ECE               	movlw	206
   747  00798E  0100               	movlb	__Lparam shr (0+8)
   748  007990  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   749  007992  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   750  007994  ECC7  F06D         	call	_eeprom_read	;wreg free
   751  007998  6E00               	movwf	btemp,c
   752  00799A  C000  F002         	movff	btemp,btemp+2
   753  00799E  6A03               	clrf	btemp+3,c
   754  0079A0  C1CB  FFE8         	movff	_DtKNF+23,wreg
   755  0079A4  1802               	xorwf	btemp+2,w,c
   756  0079A6  E101               	bnz	u575
   757  0079A8  5203               	movf	btemp+3,f,c
   758  0079AA                     u575:
   759  0079AA  E00A               	bz	l72
   760                           ;konfig.c: 283: {
   761  0079AC  0ECE               	movlw	206
   762  0079AE  0100               	movlb	__Lparam shr (0+8)
   763  0079B0  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   764  0079B2  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   765  0079B4  C1CB  F0AC         	movff	_DtKNF+23,?_eeprom_write+2
   766  0079B8  EC13  F06D         	call	_eeprom_write	;wreg free
   767                           ;konfig.c: 285: ModParam();
   768  0079BC  ECDF  F066         	call	_ModParam	;wreg free
   769  0079C0                     l72:
   770                           ;konfig.c: 286: }
   771  0079C0  C1CC  F002         	movff	_DtKNF+24,btemp+2
   772  0079C4  6A03               	clrf	btemp+3,c
   773  0079C6  EE01  F01A         	lfsr	0,_MinMax+26
   774  0079CA  CFEE F000          	movff	postinc0,btemp
   775  0079CE  CFED F001          	movff	postdec0,btemp+1
   776  0079D2  5003               	movf	btemp+3,w,c
   777  0079D4  5C01               	subwf	btemp+1,w,c
   778  0079D6  E102               	bnz	u585
   779  0079D8  5002               	movf	btemp+2,w,c
   780  0079DA  5C00               	subwf	btemp,w,c
   781  0079DC                     u585:
   782  0079DC  E20F               	bc	u601
   783  0079DE  EE01  F01C         	lfsr	0,_MinMax+28
   784  0079E2  CFEE F000          	movff	postinc0,btemp
   785  0079E6  CFED F001          	movff	postdec0,btemp+1
   786  0079EA  C1CC  F002         	movff	_DtKNF+24,btemp+2
   787  0079EE  6A03               	clrf	btemp+3,c
   788  0079F0  5001               	movf	btemp+1,w,c
   789  0079F2  5C03               	subwf	btemp+3,w,c
   790  0079F4  E102               	bnz	u595
   791  0079F6  5000               	movf	btemp,w,c
   792  0079F8  5C02               	subwf	btemp+2,w,c
   793  0079FA                     u595:
   794  0079FA  E316               	bnc	u630
   795  0079FC                     u601:
   796  0079FC  C1CC  F000         	movff	_DtKNF+24,btemp
   797  007A00  6A01               	clrf	btemp+1,c
   798  007A02  C11B  FFE8         	movff	_MinMax+27,wreg
   799  007A06  1801               	xorwf	btemp+1,w,c
   800  007A08  E103               	bnz	u615
   801  007A0A  C11A  FFE8         	movff	_MinMax+26,wreg
   802  007A0E  1800               	xorwf	btemp,w,c
   803  007A10                     u615:
   804  007A10  E00B               	bz	u630
   805  007A12  C1CC  F000         	movff	_DtKNF+24,btemp
   806  007A16  6A01               	clrf	btemp+1,c
   807  007A18  C11D  FFE8         	movff	_MinMax+29,wreg
   808  007A1C  1801               	xorwf	btemp+1,w,c
   809  007A1E  E103               	bnz	u635
   810  007A20  C11C  FFE8         	movff	_MinMax+28,wreg
   811  007A24  1800               	xorwf	btemp,w,c
   812  007A26                     u635:
   813  007A26  E11A               	bnz	l71
   814  007A28                     u630:
   815                           ;konfig.c: 288: if(DtKNF.mmax!=eeprom_read(0x00C
      +                          F))
   816  007A28  0ECF               	movlw	207
   817  007A2A  0100               	movlb	__Lparam shr (0+8)
   818  007A2C  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   819  007A2E  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   820  007A30  ECC7  F06D         	call	_eeprom_read	;wreg free
   821  007A34  6E00               	movwf	btemp,c
   822  007A36  C000  F002         	movff	btemp,btemp+2
   823  007A3A  6A03               	clrf	btemp+3,c
   824  007A3C  C1CC  FFE8         	movff	_DtKNF+24,wreg
   825  007A40  1802               	xorwf	btemp+2,w,c
   826  007A42  E101               	bnz	u655
   827  007A44  5203               	movf	btemp+3,f,c
   828  007A46                     u655:
   829  007A46  E00A               	bz	l71
   830                           ;konfig.c: 289: {
   831  007A48  0ECF               	movlw	207
   832  007A4A  0100               	movlb	__Lparam shr (0+8)
   833  007A4C  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   834  007A4E  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   835  007A50  C1CC  F0AC         	movff	_DtKNF+24,?_eeprom_write+2
   836  007A54  EC13  F06D         	call	_eeprom_write	;wreg free
   837                           ;konfig.c: 291: ModParam();
   838  007A58  ECDF  F066         	call	_ModParam	;wreg free
   839  007A5C                     l71:
   840                           ;konfig.c: 292: }
   841  007A5C  C1C1  F002         	movff	_DtKNF+13,btemp+2
   842  007A60  6A03               	clrf	btemp+3,c
   843  007A62  EE01  F020         	lfsr	0,_MinMax+32
   844  007A66  CFEE F000          	movff	postinc0,btemp
   845  007A6A  CFED F001          	movff	postdec0,btemp+1
   846  007A6E  5003               	movf	btemp+3,w,c
   847  007A70  5C01               	subwf	btemp+1,w,c
   848  007A72  E102               	bnz	u665
   849  007A74  5002               	movf	btemp+2,w,c
   850  007A76  5C00               	subwf	btemp,w,c
   851  007A78                     u665:
   852  007A78  E20F               	bc	u681
   853  007A7A  EE01  F022         	lfsr	0,_MinMax+34
   854  007A7E  CFEE F000          	movff	postinc0,btemp
   855  007A82  CFED F001          	movff	postdec0,btemp+1
   856  007A86  C1C1  F002         	movff	_DtKNF+13,btemp+2
   857  007A8A  6A03               	clrf	btemp+3,c
   858  007A8C  5001               	movf	btemp+1,w,c
   859  007A8E  5C03               	subwf	btemp+3,w,c
   860  007A90  E102               	bnz	u675
   861  007A92  5000               	movf	btemp,w,c
   862  007A94  5C02               	subwf	btemp+2,w,c
   863  007A96                     u675:
   864  007A96  E316               	bnc	u710
   865  007A98                     u681:
   866  007A98  C1C1  F000         	movff	_DtKNF+13,btemp
   867  007A9C  6A01               	clrf	btemp+1,c
   868  007A9E  C121  FFE8         	movff	_MinMax+33,wreg
   869  007AA2  1801               	xorwf	btemp+1,w,c
   870  007AA4  E103               	bnz	u695
   871  007AA6  C120  FFE8         	movff	_MinMax+32,wreg
   872  007AAA  1800               	xorwf	btemp,w,c
   873  007AAC                     u695:
   874  007AAC  E00B               	bz	u710
   875  007AAE  C1C1  F000         	movff	_DtKNF+13,btemp
   876  007AB2  6A01               	clrf	btemp+1,c
   877  007AB4  C123  FFE8         	movff	_MinMax+35,wreg
   878  007AB8  1801               	xorwf	btemp+1,w,c
   879  007ABA  E103               	bnz	u715
   880  007ABC  C122  FFE8         	movff	_MinMax+34,wreg
   881  007AC0  1800               	xorwf	btemp,w,c
   882  007AC2                     u715:
   883  007AC2  E11C               	bnz	l76
   884  007AC4                     u710:
   885                           ;konfig.c: 296: if(DtKNF.kodkt!=eeprom_read(0x00
      +                          C5))
   886  007AC4  0EC5               	movlw	197
   887  007AC6  0100               	movlb	__Lparam shr (0+8)
   888  007AC8  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   889  007ACA  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   890  007ACC  ECC7  F06D         	call	_eeprom_read	;wreg free
   891  007AD0  6E00               	movwf	btemp,c
   892  007AD2  C000  F002         	movff	btemp,btemp+2
   893  007AD6  6A03               	clrf	btemp+3,c
   894  007AD8  C1C1  FFE8         	movff	_DtKNF+13,wreg
   895  007ADC  1802               	xorwf	btemp+2,w,c
   896  007ADE  E101               	bnz	u735
   897  007AE0  5203               	movf	btemp+3,f,c
   898  007AE2                     u735:
   899  007AE2  E00C               	bz	l76
   900                           ;konfig.c: 297: {
   901  007AE4  ECF9  F043         	call	_SetTpKtParam	;wreg free
   902                           ;konfig.c: 299: ModParam();
   903  007AE8  ECDF  F066         	call	_ModParam	;wreg free
   904                           ;konfig.c: 300: eeprom_write(0x00C5,DtKNF.kodkt)
      +                          ;
   905  007AEC  0EC5               	movlw	197
   906  007AEE  0100               	movlb	__Lparam shr (0+8)
   907  007AF0  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   908  007AF2  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   909  007AF4  C1C1  F0AC         	movff	_DtKNF+13,?_eeprom_write+2
   910  007AF8  EC13  F06D         	call	_eeprom_write	;wreg free
   911  007AFC                     l76:
   912                           ;konfig.c: 301: }
   913  007AFC  C1C9  F002         	movff	_DtKNF+21,btemp+2
   914  007B00  6A03               	clrf	btemp+3,c
   915  007B02  EE01  F026         	lfsr	0,_MinMax+38
   916  007B06  CFEE F000          	movff	postinc0,btemp
   917  007B0A  CFED F001          	movff	postdec0,btemp+1
   918  007B0E  5003               	movf	btemp+3,w,c
   919  007B10  5C01               	subwf	btemp+1,w,c
   920  007B12  E102               	bnz	u745
   921  007B14  5002               	movf	btemp+2,w,c
   922  007B16  5C00               	subwf	btemp,w,c
   923  007B18                     u745:
   924  007B18  E20F               	bc	u761
   925  007B1A  EE01  F028         	lfsr	0,_MinMax+40
   926  007B1E  CFEE F000          	movff	postinc0,btemp
   927  007B22  CFED F001          	movff	postdec0,btemp+1
   928  007B26  C1C9  F002         	movff	_DtKNF+21,btemp+2
   929  007B2A  6A03               	clrf	btemp+3,c
   930  007B2C  5001               	movf	btemp+1,w,c
   931  007B2E  5C03               	subwf	btemp+3,w,c
   932  007B30  E102               	bnz	u755
   933  007B32  5000               	movf	btemp,w,c
   934  007B34  5C02               	subwf	btemp+2,w,c
   935  007B36                     u755:
   936  007B36  E316               	bnc	u790
   937  007B38                     u761:
   938  007B38  C1C9  F000         	movff	_DtKNF+21,btemp
   939  007B3C  6A01               	clrf	btemp+1,c
   940  007B3E  C127  FFE8         	movff	_MinMax+39,wreg
   941  007B42  1801               	xorwf	btemp+1,w,c
   942  007B44  E103               	bnz	u775
   943  007B46  C126  FFE8         	movff	_MinMax+38,wreg
   944  007B4A  1800               	xorwf	btemp,w,c
   945  007B4C                     u775:
   946  007B4C  E00B               	bz	u790
   947  007B4E  C1C9  F000         	movff	_DtKNF+21,btemp
   948  007B52  6A01               	clrf	btemp+1,c
   949  007B54  C129  FFE8         	movff	_MinMax+41,wreg
   950  007B58  1801               	xorwf	btemp+1,w,c
   951  007B5A  E103               	bnz	u795
   952  007B5C  C128  FFE8         	movff	_MinMax+40,wreg
   953  007B60  1800               	xorwf	btemp,w,c
   954  007B62                     u795:
   955  007B62  E118               	bnz	l78
   956  007B64                     u790:
   957                           ;konfig.c: 304: if(DtKNF.robg!=eeprom_read(0x00C
      +                          8)) eeprom_write(0x00C8,DtKNF.robg);
   958  007B64  0EC8               	movlw	200
   959  007B66  0100               	movlb	__Lparam shr (0+8)
   960  007B68  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   961  007B6A  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   962  007B6C  ECC7  F06D         	call	_eeprom_read	;wreg free
   963  007B70  6E00               	movwf	btemp,c
   964  007B72  C000  F002         	movff	btemp,btemp+2
   965  007B76  6A03               	clrf	btemp+3,c
   966  007B78  C1C9  FFE8         	movff	_DtKNF+21,wreg
   967  007B7C  1802               	xorwf	btemp+2,w,c
   968  007B7E  E101               	bnz	u815
   969  007B80  5203               	movf	btemp+3,f,c
   970  007B82                     u815:
   971  007B82  E008               	bz	l78
   972  007B84  0EC8               	movlw	200
   973  007B86  0100               	movlb	__Lparam shr (0+8)
   974  007B88  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   975  007B8A  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   976  007B8C  C1C9  F0AC         	movff	_DtKNF+21,?_eeprom_write+2
   977  007B90  EC13  F06D         	call	_eeprom_write	;wreg free
   978  007B94                     l78:
   979                           ;konfig.c: 306: if((DtKNF.opdg>MinMax[7].min)&&(
      +                          DtKNF.opdg<MinMax[7].max)||DtKNF.opdg==MinMax[7]
      +                          .min||DtKNF.opdg==MinMax[7].max)
   980  007B94  C1CE  F002         	movff	_DtKNF+26,btemp+2
   981  007B98  6A03               	clrf	btemp+3,c
   982  007B9A  EE01  F02C         	lfsr	0,_MinMax+44
   983  007B9E  CFEE F000          	movff	postinc0,btemp
   984  007BA2  CFED F001          	movff	postdec0,btemp+1
   985  007BA6  5003               	movf	btemp+3,w,c
   986  007BA8  5C01               	subwf	btemp+1,w,c
   987  007BAA  E102               	bnz	u825
   988  007BAC  5002               	movf	btemp+2,w,c
   989  007BAE  5C00               	subwf	btemp,w,c
   990  007BB0                     u825:
   991  007BB0  E20F               	bc	u841
   992  007BB2  EE01  F02E         	lfsr	0,_MinMax+46
   993  007BB6  CFEE F000          	movff	postinc0,btemp
   994  007BBA  CFED F001          	movff	postdec0,btemp+1
   995  007BBE  C1CE  F002         	movff	_DtKNF+26,btemp+2
   996  007BC2  6A03               	clrf	btemp+3,c
   997  007BC4  5001               	movf	btemp+1,w,c
   998  007BC6  5C03               	subwf	btemp+3,w,c
   999  007BC8  E102               	bnz	u835
  1000  007BCA  5000               	movf	btemp,w,c
  1001  007BCC  5C02               	subwf	btemp+2,w,c
  1002  007BCE                     u835:
  1003  007BCE  E316               	bnc	u870
  1004  007BD0                     u841:
  1005  007BD0  C1CE  F000         	movff	_DtKNF+26,btemp
  1006  007BD4  6A01               	clrf	btemp+1,c
  1007  007BD6  C12D  FFE8         	movff	_MinMax+45,wreg
  1008  007BDA  1801               	xorwf	btemp+1,w,c
  1009  007BDC  E103               	bnz	u855
  1010  007BDE  C12C  FFE8         	movff	_MinMax+44,wreg
  1011  007BE2  1800               	xorwf	btemp,w,c
  1012  007BE4                     u855:
  1013  007BE4  E00B               	bz	u870
  1014  007BE6  C1CE  F000         	movff	_DtKNF+26,btemp
  1015  007BEA  6A01               	clrf	btemp+1,c
  1016  007BEC  C12F  FFE8         	movff	_MinMax+47,wreg
  1017  007BF0  1801               	xorwf	btemp+1,w,c
  1018  007BF2  E103               	bnz	u875
  1019  007BF4  C12E  FFE8         	movff	_MinMax+46,wreg
  1020  007BF8  1800               	xorwf	btemp,w,c
  1021  007BFA                     u875:
  1022  007BFA  E118               	bnz	l80
  1023  007BFC                     u870:
  1024                           ;konfig.c: 307: if(DtKNF.opdg!=eeprom_read(0x00C
      +                          4)) eeprom_write(0x00C4,DtKNF.opdg);
  1025  007BFC  0EC4               	movlw	196
  1026  007BFE  0100               	movlb	__Lparam shr (0+8)
  1027  007C00  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1028  007C02  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1029  007C04  ECC7  F06D         	call	_eeprom_read	;wreg free
  1030  007C08  6E00               	movwf	btemp,c
  1031  007C0A  C000  F002         	movff	btemp,btemp+2
  1032  007C0E  6A03               	clrf	btemp+3,c
  1033  007C10  C1CE  FFE8         	movff	_DtKNF+26,wreg
  1034  007C14  1802               	xorwf	btemp+2,w,c
  1035  007C16  E101               	bnz	u895
  1036  007C18  5203               	movf	btemp+3,f,c
  1037  007C1A                     u895:
  1038  007C1A  E008               	bz	l80
  1039  007C1C  0EC4               	movlw	196
  1040  007C1E  0100               	movlb	__Lparam shr (0+8)
  1041  007C20  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1042  007C22  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1043  007C24  C1CE  F0AC         	movff	_DtKNF+26,?_eeprom_write+2
  1044  007C28  EC13  F06D         	call	_eeprom_write	;wreg free
  1045  007C2C                     l80:
  1046                           ;konfig.c: 309: if((DtKNF.tpcs>MinMax[8].min)&&(
      +                          DtKNF.tpcs<MinMax[8].max)||DtKNF.tpcs==MinMax[8]
      +                          .min||DtKNF.tpcs==MinMax[8].max)
  1047  007C2C  C1CF  F002         	movff	_DtKNF+27,btemp+2
  1048  007C30  6A03               	clrf	btemp+3,c
  1049  007C32  EE01  F032         	lfsr	0,_MinMax+50
  1050  007C36  CFEE F000          	movff	postinc0,btemp
  1051  007C3A  CFED F001          	movff	postdec0,btemp+1
  1052  007C3E  5003               	movf	btemp+3,w,c
  1053  007C40  5C01               	subwf	btemp+1,w,c
  1054  007C42  E102               	bnz	u905
  1055  007C44  5002               	movf	btemp+2,w,c
  1056  007C46  5C00               	subwf	btemp,w,c
  1057  007C48                     u905:
  1058  007C48  E20F               	bc	u921
  1059  007C4A  EE01  F034         	lfsr	0,_MinMax+52
  1060  007C4E  CFEE F000          	movff	postinc0,btemp
  1061  007C52  CFED F001          	movff	postdec0,btemp+1
  1062  007C56  C1CF  F002         	movff	_DtKNF+27,btemp+2
  1063  007C5A  6A03               	clrf	btemp+3,c
  1064  007C5C  5001               	movf	btemp+1,w,c
  1065  007C5E  5C03               	subwf	btemp+3,w,c
  1066  007C60  E102               	bnz	u915
  1067  007C62  5000               	movf	btemp,w,c
  1068  007C64  5C02               	subwf	btemp+2,w,c
  1069  007C66                     u915:
  1070  007C66  E316               	bnc	u950
  1071  007C68                     u921:
  1072  007C68  C1CF  F000         	movff	_DtKNF+27,btemp
  1073  007C6C  6A01               	clrf	btemp+1,c
  1074  007C6E  C133  FFE8         	movff	_MinMax+51,wreg
  1075  007C72  1801               	xorwf	btemp+1,w,c
  1076  007C74  E103               	bnz	u935
  1077  007C76  C132  FFE8         	movff	_MinMax+50,wreg
  1078  007C7A  1800               	xorwf	btemp,w,c
  1079  007C7C                     u935:
  1080  007C7C  E00B               	bz	u950
  1081  007C7E  C1CF  F000         	movff	_DtKNF+27,btemp
  1082  007C82  6A01               	clrf	btemp+1,c
  1083  007C84  C135  FFE8         	movff	_MinMax+53,wreg
  1084  007C88  1801               	xorwf	btemp+1,w,c
  1085  007C8A  E103               	bnz	u955
  1086  007C8C  C134  FFE8         	movff	_MinMax+52,wreg
  1087  007C90  1800               	xorwf	btemp,w,c
  1088  007C92                     u955:
  1089  007C92  E118               	bnz	l82
  1090  007C94                     u950:
  1091                           ;konfig.c: 310: if(DtKNF.tpcs!=eeprom_read(0x00C
      +                          D)) eeprom_write(0x00CD,DtKNF.tpcs);
  1092  007C94  0ECD               	movlw	205
  1093  007C96  0100               	movlb	__Lparam shr (0+8)
  1094  007C98  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1095  007C9A  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1096  007C9C  ECC7  F06D         	call	_eeprom_read	;wreg free
  1097  007CA0  6E00               	movwf	btemp,c
  1098  007CA2  C000  F002         	movff	btemp,btemp+2
  1099  007CA6  6A03               	clrf	btemp+3,c
  1100  007CA8  C1CF  FFE8         	movff	_DtKNF+27,wreg
  1101  007CAC  1802               	xorwf	btemp+2,w,c
  1102  007CAE  E101               	bnz	u975
  1103  007CB0  5203               	movf	btemp+3,f,c
  1104  007CB2                     u975:
  1105  007CB2  E008               	bz	l82
  1106  007CB4  0ECD               	movlw	205
  1107  007CB6  0100               	movlb	__Lparam shr (0+8)
  1108  007CB8  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1109  007CBA  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1110  007CBC  C1CF  F0AC         	movff	_DtKNF+27,?_eeprom_write+2
  1111  007CC0  EC13  F06D         	call	_eeprom_write	;wreg free
  1112  007CC4                     l82:
  1113                           ;konfig.c: 312: if((DtKNF.aleg>MinMax[9].min)&&(
      +                          DtKNF.aleg<MinMax[9].max)||DtKNF.aleg==MinMax[9]
      +                          .min||DtKNF.aleg==MinMax[9].max)
  1114  007CC4  C1CD  F002         	movff	_DtKNF+25,btemp+2
  1115  007CC8  6A03               	clrf	btemp+3,c
  1116  007CCA  EE01  F038         	lfsr	0,_MinMax+56
  1117  007CCE  CFEE F000          	movff	postinc0,btemp
  1118  007CD2  CFED F001          	movff	postdec0,btemp+1
  1119  007CD6  5003               	movf	btemp+3,w,c
  1120  007CD8  5C01               	subwf	btemp+1,w,c
  1121  007CDA  E102               	bnz	u985
  1122  007CDC  5002               	movf	btemp+2,w,c
  1123  007CDE  5C00               	subwf	btemp,w,c
  1124  007CE0                     u985:
  1125  007CE0  E20F               	bc	u1001
  1126  007CE2  EE01  F03A         	lfsr	0,_MinMax+58
  1127  007CE6  CFEE F000          	movff	postinc0,btemp
  1128  007CEA  CFED F001          	movff	postdec0,btemp+1
  1129  007CEE  C1CD  F002         	movff	_DtKNF+25,btemp+2
  1130  007CF2  6A03               	clrf	btemp+3,c
  1131  007CF4  5001               	movf	btemp+1,w,c
  1132  007CF6  5C03               	subwf	btemp+3,w,c
  1133  007CF8  E102               	bnz	u995
  1134  007CFA  5000               	movf	btemp,w,c
  1135  007CFC  5C02               	subwf	btemp+2,w,c
  1136  007CFE                     u995:
  1137  007CFE  E316               	bnc	u1030
  1138  007D00                     u1001:
  1139  007D00  C1CD  F000         	movff	_DtKNF+25,btemp
  1140  007D04  6A01               	clrf	btemp+1,c
  1141  007D06  C139  FFE8         	movff	_MinMax+57,wreg
  1142  007D0A  1801               	xorwf	btemp+1,w,c
  1143  007D0C  E103               	bnz	u1015
  1144  007D0E  C138  FFE8         	movff	_MinMax+56,wreg
  1145  007D12  1800               	xorwf	btemp,w,c
  1146  007D14                     u1015:
  1147  007D14  E00B               	bz	u1030
  1148  007D16  C1CD  F000         	movff	_DtKNF+25,btemp
  1149  007D1A  6A01               	clrf	btemp+1,c
  1150  007D1C  C13B  FFE8         	movff	_MinMax+59,wreg
  1151  007D20  1801               	xorwf	btemp+1,w,c
  1152  007D22  E103               	bnz	u1035
  1153  007D24  C13A  FFE8         	movff	_MinMax+58,wreg
  1154  007D28  1800               	xorwf	btemp,w,c
  1155  007D2A                     u1035:
  1156  007D2A  E122               	bnz	l84
  1157  007D2C                     u1030:
  1158                           ;konfig.c: 313: if(DtKNF.aleg!=eeprom_read(0x00C
      +                          6))
  1159  007D2C  0EC6               	movlw	198
  1160  007D2E  0100               	movlb	__Lparam shr (0+8)
  1161  007D30  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1162  007D32  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1163  007D34  ECC7  F06D         	call	_eeprom_read	;wreg free
  1164  007D38  6E00               	movwf	btemp,c
  1165  007D3A  C000  F002         	movff	btemp,btemp+2
  1166  007D3E  6A03               	clrf	btemp+3,c
  1167  007D40  C1CD  FFE8         	movff	_DtKNF+25,wreg
  1168  007D44  1802               	xorwf	btemp+2,w,c
  1169  007D46  E101               	bnz	u1055
  1170  007D48  5203               	movf	btemp+3,f,c
  1171  007D4A                     u1055:
  1172  007D4A  E012               	bz	l84
  1173                           ;konfig.c: 314: {
  1174  007D4C  0E01               	movlw	1
  1175  007D4E  EC29  F064         	call	_StartRTG
  1176                           ;konfig.c: 316: eeprom_write(0x00C7,0);
  1177  007D52  0EC7               	movlw	199
  1178  007D54  0100               	movlb	__Lparam shr (0+8)
  1179  007D56  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1180  007D58  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1181  007D5A  6BAC               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
  1182  007D5C  EC13  F06D         	call	_eeprom_write	;wreg free
  1183                           ;konfig.c: 317: eeprom_write(0x00C6,DtKNF.aleg);
  1184  007D60  0EC6               	movlw	198
  1185  007D62  0100               	movlb	__Lparam shr (0+8)
  1186  007D64  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1187  007D66  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1188  007D68  C1CD  F0AC         	movff	_DtKNF+25,?_eeprom_write+2
  1189  007D6C  EC13  F06D         	call	_eeprom_write	;wreg free
  1190  007D70                     l84:
  1191                           ;konfig.c: 318: }
  1192  007D70  C1CA  F002         	movff	_DtKNF+22,btemp+2
  1193  007D74  6A03               	clrf	btemp+3,c
  1194  007D76  EE01  F03E         	lfsr	0,_MinMax+62
  1195  007D7A  CFEE F000          	movff	postinc0,btemp
  1196  007D7E  CFED F001          	movff	postdec0,btemp+1
  1197  007D82  5003               	movf	btemp+3,w,c
  1198  007D84  5C01               	subwf	btemp+1,w,c
  1199  007D86  E102               	bnz	u1065
  1200  007D88  5002               	movf	btemp+2,w,c
  1201  007D8A  5C00               	subwf	btemp,w,c
  1202  007D8C                     u1065:
  1203  007D8C  E20F               	bc	u1081
  1204  007D8E  EE01  F040         	lfsr	0,_MinMax+64
  1205  007D92  CFEE F000          	movff	postinc0,btemp
  1206  007D96  CFED F001          	movff	postdec0,btemp+1
  1207  007D9A  C1CA  F002         	movff	_DtKNF+22,btemp+2
  1208  007D9E  6A03               	clrf	btemp+3,c
  1209  007DA0  5001               	movf	btemp+1,w,c
  1210  007DA2  5C03               	subwf	btemp+3,w,c
  1211  007DA4  E102               	bnz	u1075
  1212  007DA6  5000               	movf	btemp,w,c
  1213  007DA8  5C02               	subwf	btemp+2,w,c
  1214  007DAA                     u1075:
  1215  007DAA  E316               	bnc	u1110
  1216  007DAC                     u1081:
  1217  007DAC  C1CA  F000         	movff	_DtKNF+22,btemp
  1218  007DB0  6A01               	clrf	btemp+1,c
  1219  007DB2  C13F  FFE8         	movff	_MinMax+63,wreg
  1220  007DB6  1801               	xorwf	btemp+1,w,c
  1221  007DB8  E103               	bnz	u1095
  1222  007DBA  C13E  FFE8         	movff	_MinMax+62,wreg
  1223  007DBE  1800               	xorwf	btemp,w,c
  1224  007DC0                     u1095:
  1225  007DC0  E00B               	bz	u1110
  1226  007DC2  C1CA  F000         	movff	_DtKNF+22,btemp
  1227  007DC6  6A01               	clrf	btemp+1,c
  1228  007DC8  C141  FFE8         	movff	_MinMax+65,wreg
  1229  007DCC  1801               	xorwf	btemp+1,w,c
  1230  007DCE  E103               	bnz	u1115
  1231  007DD0  C140  FFE8         	movff	_MinMax+64,wreg
  1232  007DD4  1800               	xorwf	btemp,w,c
  1233  007DD6                     u1115:
  1234  007DD6  E118               	bnz	l86
  1235  007DD8                     u1110:
  1236                           ;konfig.c: 321: if(DtKNF.nokr!=eeprom_read(0x00C
      +                          C)) eeprom_write(0x00CC,DtKNF.nokr);
  1237  007DD8  0ECC               	movlw	204
  1238  007DDA  0100               	movlb	__Lparam shr (0+8)
  1239  007DDC  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1240  007DDE  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1241  007DE0  ECC7  F06D         	call	_eeprom_read	;wreg free
  1242  007DE4  6E00               	movwf	btemp,c
  1243  007DE6  C000  F002         	movff	btemp,btemp+2
  1244  007DEA  6A03               	clrf	btemp+3,c
  1245  007DEC  C1CA  FFE8         	movff	_DtKNF+22,wreg
  1246  007DF0  1802               	xorwf	btemp+2,w,c
  1247  007DF2  E101               	bnz	u1135
  1248  007DF4  5203               	movf	btemp+3,f,c
  1249  007DF6                     u1135:
  1250  007DF6  E008               	bz	l86
  1251  007DF8  0ECC               	movlw	204
  1252  007DFA  0100               	movlb	__Lparam shr (0+8)
  1253  007DFC  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1254  007DFE  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1255  007E00  C1CA  F0AC         	movff	_DtKNF+22,?_eeprom_write+2
  1256  007E04  EC13  F06D         	call	_eeprom_write	;wreg free
  1257  007E08                     l86:
  1258                           ;konfig.c: 323: if((DtKNF.rdpm>MinMax[11].min)&&
      +                          (DtKNF.rdpm<MinMax[11].max)||DtKNF.rdpm==MinMax[
      +                          11].min||DtKNF.rdpm==MinMax[11].max)
  1259  007E08  C1C4  F002         	movff	_DtKNF+16,btemp+2
  1260  007E0C  6A03               	clrf	btemp+3,c
  1261  007E0E  EE01  F044         	lfsr	0,_MinMax+68
  1262  007E12  CFEE F000          	movff	postinc0,btemp
  1263  007E16  CFED F001          	movff	postdec0,btemp+1
  1264  007E1A  5003               	movf	btemp+3,w,c
  1265  007E1C  5C01               	subwf	btemp+1,w,c
  1266  007E1E  E102               	bnz	u1145
  1267  007E20  5002               	movf	btemp+2,w,c
  1268  007E22  5C00               	subwf	btemp,w,c
  1269  007E24                     u1145:
  1270  007E24  E20F               	bc	u1161
  1271  007E26  EE01  F046         	lfsr	0,_MinMax+70
  1272  007E2A  CFEE F000          	movff	postinc0,btemp
  1273  007E2E  CFED F001          	movff	postdec0,btemp+1
  1274  007E32  C1C4  F002         	movff	_DtKNF+16,btemp+2
  1275  007E36  6A03               	clrf	btemp+3,c
  1276  007E38  5001               	movf	btemp+1,w,c
  1277  007E3A  5C03               	subwf	btemp+3,w,c
  1278  007E3C  E102               	bnz	u1155
  1279  007E3E  5000               	movf	btemp,w,c
  1280  007E40  5C02               	subwf	btemp+2,w,c
  1281  007E42                     u1155:
  1282  007E42  E316               	bnc	u1190
  1283  007E44                     u1161:
  1284  007E44  C1C4  F000         	movff	_DtKNF+16,btemp
  1285  007E48  6A01               	clrf	btemp+1,c
  1286  007E4A  C145  FFE8         	movff	_MinMax+69,wreg
  1287  007E4E  1801               	xorwf	btemp+1,w,c
  1288  007E50  E103               	bnz	u1175
  1289  007E52  C144  FFE8         	movff	_MinMax+68,wreg
  1290  007E56  1800               	xorwf	btemp,w,c
  1291  007E58                     u1175:
  1292  007E58  E00B               	bz	u1190
  1293  007E5A  C1C4  F000         	movff	_DtKNF+16,btemp
  1294  007E5E  6A01               	clrf	btemp+1,c
  1295  007E60  C147  FFE8         	movff	_MinMax+71,wreg
  1296  007E64  1801               	xorwf	btemp+1,w,c
  1297  007E66  E103               	bnz	u1195
  1298  007E68  C146  FFE8         	movff	_MinMax+70,wreg
  1299  007E6C  1800               	xorwf	btemp,w,c
  1300  007E6E                     u1195:
  1301  007E6E  E118               	bnz	l88
  1302  007E70                     u1190:
  1303                           ;konfig.c: 324: if(DtKNF.rdpm!=eeprom_read(0x00D
      +                          0)) eeprom_write(0x00D0,DtKNF.rdpm);
  1304  007E70  0ED0               	movlw	208
  1305  007E72  0100               	movlb	__Lparam shr (0+8)
  1306  007E74  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1307  007E76  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1308  007E78  ECC7  F06D         	call	_eeprom_read	;wreg free
  1309  007E7C  6E00               	movwf	btemp,c
  1310  007E7E  C000  F002         	movff	btemp,btemp+2
  1311  007E82  6A03               	clrf	btemp+3,c
  1312  007E84  C1C4  FFE8         	movff	_DtKNF+16,wreg
  1313  007E88  1802               	xorwf	btemp+2,w,c
  1314  007E8A  E101               	bnz	u1215
  1315  007E8C  5203               	movf	btemp+3,f,c
  1316  007E8E                     u1215:
  1317  007E8E  E008               	bz	l88
  1318  007E90  0ED0               	movlw	208
  1319  007E92  0100               	movlb	__Lparam shr (0+8)
  1320  007E94  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1321  007E96  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1322  007E98  C1C4  F0AC         	movff	_DtKNF+16,?_eeprom_write+2
  1323  007E9C  EC13  F06D         	call	_eeprom_write	;wreg free
  1324  007EA0                     l88:
  1325                           ;konfig.c: 326: if((DtKNF.dtpm>MinMax[12].min)&&
      +                          (DtKNF.dtpm<MinMax[12].max)||DtKNF.dtpm==MinMax[
      +                          12].min||DtKNF.dtpm==MinMax[12].max)
  1326  007EA0  C1C5  F002         	movff	_DtKNF+17,btemp+2
  1327  007EA4  6A03               	clrf	btemp+3,c
  1328  007EA6  EE01  F04A         	lfsr	0,_MinMax+74
  1329  007EAA  CFEE F000          	movff	postinc0,btemp
  1330  007EAE  CFED F001          	movff	postdec0,btemp+1
  1331  007EB2  5003               	movf	btemp+3,w,c
  1332  007EB4  5C01               	subwf	btemp+1,w,c
  1333  007EB6  E102               	bnz	u1225
  1334  007EB8  5002               	movf	btemp+2,w,c
  1335  007EBA  5C00               	subwf	btemp,w,c
  1336  007EBC                     u1225:
  1337  007EBC  E20F               	bc	u1241
  1338  007EBE  EE01  F04C         	lfsr	0,_MinMax+76
  1339  007EC2  CFEE F000          	movff	postinc0,btemp
  1340  007EC6  CFED F001          	movff	postdec0,btemp+1
  1341  007ECA  C1C5  F002         	movff	_DtKNF+17,btemp+2
  1342  007ECE  6A03               	clrf	btemp+3,c
  1343  007ED0  5001               	movf	btemp+1,w,c
  1344  007ED2  5C03               	subwf	btemp+3,w,c
  1345  007ED4  E102               	bnz	u1235
  1346  007ED6  5000               	movf	btemp,w,c
  1347  007ED8  5C02               	subwf	btemp+2,w,c
  1348  007EDA                     u1235:
  1349  007EDA  E316               	bnc	u1270
  1350  007EDC                     u1241:
  1351  007EDC  C1C5  F000         	movff	_DtKNF+17,btemp
  1352  007EE0  6A01               	clrf	btemp+1,c
  1353  007EE2  C14B  FFE8         	movff	_MinMax+75,wreg
  1354  007EE6  1801               	xorwf	btemp+1,w,c
  1355  007EE8  E103               	bnz	u1255
  1356  007EEA  C14A  FFE8         	movff	_MinMax+74,wreg
  1357  007EEE  1800               	xorwf	btemp,w,c
  1358  007EF0                     u1255:
  1359  007EF0  E00B               	bz	u1270
  1360  007EF2  C1C5  F000         	movff	_DtKNF+17,btemp
  1361  007EF6  6A01               	clrf	btemp+1,c
  1362  007EF8  C14D  FFE8         	movff	_MinMax+77,wreg
  1363  007EFC  1801               	xorwf	btemp+1,w,c
  1364  007EFE  E103               	bnz	u1275
  1365  007F00  C14C  FFE8         	movff	_MinMax+76,wreg
  1366  007F04  1800               	xorwf	btemp,w,c
  1367  007F06                     u1275:
  1368  007F06  E118               	bnz	l90
  1369  007F08                     u1270:
  1370                           ;konfig.c: 327: if(DtKNF.dtpm!=eeprom_read(0x00D
      +                          1)) eeprom_write(0x00D1,DtKNF.dtpm);
  1371  007F08  0ED1               	movlw	209
  1372  007F0A  0100               	movlb	__Lparam shr (0+8)
  1373  007F0C  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1374  007F0E  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1375  007F10  ECC7  F06D         	call	_eeprom_read	;wreg free
  1376  007F14  6E00               	movwf	btemp,c
  1377  007F16  C000  F002         	movff	btemp,btemp+2
  1378  007F1A  6A03               	clrf	btemp+3,c
  1379  007F1C  C1C5  FFE8         	movff	_DtKNF+17,wreg
  1380  007F20  1802               	xorwf	btemp+2,w,c
  1381  007F22  E101               	bnz	u1295
  1382  007F24  5203               	movf	btemp+3,f,c
  1383  007F26                     u1295:
  1384  007F26  E008               	bz	l90
  1385  007F28  0ED1               	movlw	209
  1386  007F2A  0100               	movlb	__Lparam shr (0+8)
  1387  007F2C  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1388  007F2E  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1389  007F30  C1C5  F0AC         	movff	_DtKNF+17,?_eeprom_write+2
  1390  007F34  EC13  F06D         	call	_eeprom_write	;wreg free
  1391  007F38                     l90:
  1392                           ;konfig.c: 329: if((DtKNF.mdpm>MinMax[13].min)&&
      +                          (DtKNF.mdpm<MinMax[13].max)||DtKNF.mdpm==MinMax[
      +                          13].min||DtKNF.mdpm==MinMax[13].max)
  1393  007F38  C1C6  F002         	movff	_DtKNF+18,btemp+2
  1394  007F3C  6A03               	clrf	btemp+3,c
  1395  007F3E  EE01  F050         	lfsr	0,_MinMax+80
  1396  007F42  CFEE F000          	movff	postinc0,btemp
  1397  007F46  CFED F001          	movff	postdec0,btemp+1
  1398  007F4A  5003               	movf	btemp+3,w,c
  1399  007F4C  5C01               	subwf	btemp+1,w,c
  1400  007F4E  E102               	bnz	u1305
  1401  007F50  5002               	movf	btemp+2,w,c
  1402  007F52  5C00               	subwf	btemp,w,c
  1403  007F54                     u1305:
  1404  007F54  E20F               	bc	u1321
  1405  007F56  EE01  F052         	lfsr	0,_MinMax+82
  1406  007F5A  CFEE F000          	movff	postinc0,btemp
  1407  007F5E  CFED F001          	movff	postdec0,btemp+1
  1408  007F62  C1C6  F002         	movff	_DtKNF+18,btemp+2
  1409  007F66  6A03               	clrf	btemp+3,c
  1410  007F68  5001               	movf	btemp+1,w,c
  1411  007F6A  5C03               	subwf	btemp+3,w,c
  1412  007F6C  E102               	bnz	u1315
  1413  007F6E  5000               	movf	btemp,w,c
  1414  007F70  5C02               	subwf	btemp+2,w,c
  1415  007F72                     u1315:
  1416  007F72  E316               	bnc	u1350
  1417  007F74                     u1321:
  1418  007F74  C1C6  F000         	movff	_DtKNF+18,btemp
  1419  007F78  6A01               	clrf	btemp+1,c
  1420  007F7A  C151  FFE8         	movff	_MinMax+81,wreg
  1421  007F7E  1801               	xorwf	btemp+1,w,c
  1422  007F80  E103               	bnz	u1335
  1423  007F82  C150  FFE8         	movff	_MinMax+80,wreg
  1424  007F86  1800               	xorwf	btemp,w,c
  1425  007F88                     u1335:
  1426  007F88  E00B               	bz	u1350
  1427  007F8A  C1C6  F000         	movff	_DtKNF+18,btemp
  1428  007F8E  6A01               	clrf	btemp+1,c
  1429  007F90  C153  FFE8         	movff	_MinMax+83,wreg
  1430  007F94  1801               	xorwf	btemp+1,w,c
  1431  007F96  E103               	bnz	u1355
  1432  007F98  C152  FFE8         	movff	_MinMax+82,wreg
  1433  007F9C  1800               	xorwf	btemp,w,c
  1434  007F9E                     u1355:
  1435  007F9E  E12E               	bnz	l92
  1436  007FA0                     u1350:
  1437                           ;konfig.c: 330: {
  1438  007FA0  C1C6  FFE8         	movff	_DtKNF+18,wreg
  1439  007FA4  0101               	movlb	(_DtKNF+28) shr (0+8)
  1440  007FA6  61D0               	cpfslt	(_DtKNF+28)& (0+255),b
  1441  007FA8  D011               	goto	l93
  1442                           ;konfig.c: 332: {
  1443  007FAA  EE01  F050         	lfsr	0,_MinMax+80
  1444  007FAE  CFEE F000          	movff	postinc0,btemp
  1445  007FB2  CFED F001          	movff	postdec0,btemp+1
  1446  007FB6  C1D0  F002         	movff	_DtKNF+28,btemp+2
  1447  007FBA  6A03               	clrf	btemp+3,c
  1448  007FBC  5001               	movf	btemp+1,w,c
  1449  007FBE  5C03               	subwf	btemp+3,w,c
  1450  007FC0  E102               	bnz	u1385
  1451  007FC2  5000               	movf	btemp,w,c
  1452  007FC4  5C02               	subwf	btemp+2,w,c
  1453  007FC6                     u1385:
  1454  007FC6  B0D8               	btfsc	status,0,c
  1455  007FC8  C1D0  F1C6         	movff	_DtKNF+28,_DtKNF+18
  1456  007FCC                     l93:
  1457                           ;konfig.c: 334: }
  1458  007FCC  0ED2               	movlw	210
  1459  007FCE  0100               	movlb	__Lparam shr (0+8)
  1460  007FD0  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1461  007FD2  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1462  007FD4  ECC7  F06D         	call	_eeprom_read	;wreg free
  1463  007FD8  6E00               	movwf	btemp,c
  1464  007FDA  C000  F002         	movff	btemp,btemp+2
  1465  007FDE  6A03               	clrf	btemp+3,c
  1466  007FE0  C1C6  FFE8         	movff	_DtKNF+18,wreg
  1467  007FE4  1802               	xorwf	btemp+2,w,c
  1468  007FE6  E101               	bnz	u1395
  1469  007FE8  5203               	movf	btemp+3,f,c
  1470  007FEA                     u1395:
  1471  007FEA  E008               	bz	l92
  1472  007FEC  0ED2               	movlw	210
  1473  007FEE  0100               	movlb	__Lparam shr (0+8)
  1474  007FF0  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1475  007FF2  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1476  007FF4  C1C6  F0AC         	movff	_DtKNF+18,?_eeprom_write+2
  1477  007FF8  EC13  F06D         	call	_eeprom_write	;wreg free
  1478  007FFC                     l92:
  1479                           ;konfig.c: 336: }
  1480  007FFC  C1C7  F002         	movff	_DtKNF+19,btemp+2
  1481  008000  6A03               	clrf	btemp+3,c
  1482  008002  EE01  F056         	lfsr	0,_MinMax+86
  1483  008006  CFEE F000          	movff	postinc0,btemp
  1484  00800A  CFED F001          	movff	postdec0,btemp+1
  1485  00800E  5003               	movf	btemp+3,w,c
  1486  008010  5C01               	subwf	btemp+1,w,c
  1487  008012  E102               	bnz	u1405
  1488  008014  5002               	movf	btemp+2,w,c
  1489  008016  5C00               	subwf	btemp,w,c
  1490  008018                     u1405:
  1491  008018  E20F               	bc	u1421
  1492  00801A  EE01  F058         	lfsr	0,_MinMax+88
  1493  00801E  CFEE F000          	movff	postinc0,btemp
  1494  008022  CFED F001          	movff	postdec0,btemp+1
  1495  008026  C1C7  F002         	movff	_DtKNF+19,btemp+2
  1496  00802A  6A03               	clrf	btemp+3,c
  1497  00802C  5001               	movf	btemp+1,w,c
  1498  00802E  5C03               	subwf	btemp+3,w,c
  1499  008030  E102               	bnz	u1415
  1500  008032  5000               	movf	btemp,w,c
  1501  008034  5C02               	subwf	btemp+2,w,c
  1502  008036                     u1415:
  1503  008036  E316               	bnc	u1450
  1504  008038                     u1421:
  1505  008038  C1C7  F000         	movff	_DtKNF+19,btemp
  1506  00803C  6A01               	clrf	btemp+1,c
  1507  00803E  C157  FFE8         	movff	_MinMax+87,wreg
  1508  008042  1801               	xorwf	btemp+1,w,c
  1509  008044  E103               	bnz	u1435
  1510  008046  C156  FFE8         	movff	_MinMax+86,wreg
  1511  00804A  1800               	xorwf	btemp,w,c
  1512  00804C                     u1435:
  1513  00804C  E00B               	bz	u1450
  1514  00804E  C1C7  F000         	movff	_DtKNF+19,btemp
  1515  008052  6A01               	clrf	btemp+1,c
  1516  008054  C159  FFE8         	movff	_MinMax+89,wreg
  1517  008058  1801               	xorwf	btemp+1,w,c
  1518  00805A  E103               	bnz	u1455
  1519  00805C  C158  FFE8         	movff	_MinMax+88,wreg
  1520  008060  1800               	xorwf	btemp,w,c
  1521  008062                     u1455:
  1522  008062  E118               	bnz	l96
  1523  008064                     u1450:
  1524                           ;konfig.c: 339: if(DtKNF.teco!=eeprom_read(0x00D
      +                          3)) eeprom_write(0x00D3,DtKNF.teco);
  1525  008064  0ED3               	movlw	211
  1526  008066  0100               	movlb	__Lparam shr (0+8)
  1527  008068  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1528  00806A  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1529  00806C  ECC7  F06D         	call	_eeprom_read	;wreg free
  1530  008070  6E00               	movwf	btemp,c
  1531  008072  C000  F002         	movff	btemp,btemp+2
  1532  008076  6A03               	clrf	btemp+3,c
  1533  008078  C1C7  FFE8         	movff	_DtKNF+19,wreg
  1534  00807C  1802               	xorwf	btemp+2,w,c
  1535  00807E  E101               	bnz	u1475
  1536  008080  5203               	movf	btemp+3,f,c
  1537  008082                     u1475:
  1538  008082  E008               	bz	l96
  1539  008084  0ED3               	movlw	211
  1540  008086  0100               	movlb	__Lparam shr (0+8)
  1541  008088  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1542  00808A  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1543  00808C  C1C7  F0AC         	movff	_DtKNF+19,?_eeprom_write+2
  1544  008090  EC13  F06D         	call	_eeprom_write	;wreg free
  1545  008094                     l96:
  1546                           ;konfig.c: 341: if((DtKNF.tmxco2>MinMax[15].min)
      +                          &&(DtKNF.tmxco2<MinMax[15].max)||DtKNF.tmxco2==M
      +                          inMax[15].min||DtKNF.tmxco2==MinMax[15].max)
  1547  008094  C1BF  F002         	movff	_DtKNF+11,btemp+2
  1548  008098  6A03               	clrf	btemp+3,c
  1549  00809A  EE01  F05C         	lfsr	0,_MinMax+92
  1550  00809E  CFEE F000          	movff	postinc0,btemp
  1551  0080A2  CFED F001          	movff	postdec0,btemp+1
  1552  0080A6  5003               	movf	btemp+3,w,c
  1553  0080A8  5C01               	subwf	btemp+1,w,c
  1554  0080AA  E102               	bnz	u1485
  1555  0080AC  5002               	movf	btemp+2,w,c
  1556  0080AE  5C00               	subwf	btemp,w,c
  1557  0080B0                     u1485:
  1558  0080B0  E20F               	bc	u1501
  1559  0080B2  EE01  F05E         	lfsr	0,_MinMax+94
  1560  0080B6  CFEE F000          	movff	postinc0,btemp
  1561  0080BA  CFED F001          	movff	postdec0,btemp+1
  1562  0080BE  C1BF  F002         	movff	_DtKNF+11,btemp+2
  1563  0080C2  6A03               	clrf	btemp+3,c
  1564  0080C4  5001               	movf	btemp+1,w,c
  1565  0080C6  5C03               	subwf	btemp+3,w,c
  1566  0080C8  E102               	bnz	u1495
  1567  0080CA  5000               	movf	btemp,w,c
  1568  0080CC  5C02               	subwf	btemp+2,w,c
  1569  0080CE                     u1495:
  1570  0080CE  E316               	bnc	u1530
  1571  0080D0                     u1501:
  1572  0080D0  C1BF  F000         	movff	_DtKNF+11,btemp
  1573  0080D4  6A01               	clrf	btemp+1,c
  1574  0080D6  C15D  FFE8         	movff	_MinMax+93,wreg
  1575  0080DA  1801               	xorwf	btemp+1,w,c
  1576  0080DC  E103               	bnz	u1515
  1577  0080DE  C15C  FFE8         	movff	_MinMax+92,wreg
  1578  0080E2  1800               	xorwf	btemp,w,c
  1579  0080E4                     u1515:
  1580  0080E4  E00B               	bz	u1530
  1581  0080E6  C1BF  F000         	movff	_DtKNF+11,btemp
  1582  0080EA  6A01               	clrf	btemp+1,c
  1583  0080EC  C15F  FFE8         	movff	_MinMax+95,wreg
  1584  0080F0  1801               	xorwf	btemp+1,w,c
  1585  0080F2  E103               	bnz	u1535
  1586  0080F4  C15E  FFE8         	movff	_MinMax+94,wreg
  1587  0080F8  1800               	xorwf	btemp,w,c
  1588  0080FA                     u1535:
  1589  0080FA  E118               	bnz	l98
  1590  0080FC                     u1530:
  1591                           ;konfig.c: 342: if(DtKNF.tmxco2!=eeprom_read(0x0
      +                          0D5)) eeprom_write(0x00D5,DtKNF.tmxco2);
  1592  0080FC  0ED5               	movlw	213
  1593  0080FE  0100               	movlb	__Lparam shr (0+8)
  1594  008100  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1595  008102  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1596  008104  ECC7  F06D         	call	_eeprom_read	;wreg free
  1597  008108  6E00               	movwf	btemp,c
  1598  00810A  C000  F002         	movff	btemp,btemp+2
  1599  00810E  6A03               	clrf	btemp+3,c
  1600  008110  C1BF  FFE8         	movff	_DtKNF+11,wreg
  1601  008114  1802               	xorwf	btemp+2,w,c
  1602  008116  E101               	bnz	u1555
  1603  008118  5203               	movf	btemp+3,f,c
  1604  00811A                     u1555:
  1605  00811A  E008               	bz	l98
  1606  00811C  0ED5               	movlw	213
  1607  00811E  0100               	movlb	__Lparam shr (0+8)
  1608  008120  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1609  008122  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1610  008124  C1BF  F0AC         	movff	_DtKNF+11,?_eeprom_write+2
  1611  008128  EC13  F06D         	call	_eeprom_write	;wreg free
  1612  00812C                     l98:
  1613                           ;konfig.c: 344: if((DtKNF.mxco2>MinMax[16].min)&
      +                          &(DtKNF.mxco2<MinMax[16].max)||DtKNF.mxco2==MinM
      +                          ax[16].min||DtKNF.mxco2==MinMax[16].max)
  1614  00812C  C1BE  F002         	movff	_DtKNF+10,btemp+2
  1615  008130  6A03               	clrf	btemp+3,c
  1616  008132  EE01  F062         	lfsr	0,_MinMax+98
  1617  008136  CFEE F000          	movff	postinc0,btemp
  1618  00813A  CFED F001          	movff	postdec0,btemp+1
  1619  00813E  5003               	movf	btemp+3,w,c
  1620  008140  5C01               	subwf	btemp+1,w,c
  1621  008142  E102               	bnz	u1565
  1622  008144  5002               	movf	btemp+2,w,c
  1623  008146  5C00               	subwf	btemp,w,c
  1624  008148                     u1565:
  1625  008148  E20F               	bc	u1581
  1626  00814A  EE01  F064         	lfsr	0,_MinMax+100
  1627  00814E  CFEE F000          	movff	postinc0,btemp
  1628  008152  CFED F001          	movff	postdec0,btemp+1
  1629  008156  C1BE  F002         	movff	_DtKNF+10,btemp+2
  1630  00815A  6A03               	clrf	btemp+3,c
  1631  00815C  5001               	movf	btemp+1,w,c
  1632  00815E  5C03               	subwf	btemp+3,w,c
  1633  008160  E102               	bnz	u1575
  1634  008162  5000               	movf	btemp,w,c
  1635  008164  5C02               	subwf	btemp+2,w,c
  1636  008166                     u1575:
  1637  008166  E316               	bnc	u1610
  1638  008168                     u1581:
  1639  008168  C1BE  F000         	movff	_DtKNF+10,btemp
  1640  00816C  6A01               	clrf	btemp+1,c
  1641  00816E  C163  FFE8         	movff	_MinMax+99,wreg
  1642  008172  1801               	xorwf	btemp+1,w,c
  1643  008174  E103               	bnz	u1595
  1644  008176  C162  FFE8         	movff	_MinMax+98,wreg
  1645  00817A  1800               	xorwf	btemp,w,c
  1646  00817C                     u1595:
  1647  00817C  E00B               	bz	u1610
  1648  00817E  C1BE  F000         	movff	_DtKNF+10,btemp
  1649  008182  6A01               	clrf	btemp+1,c
  1650  008184  C165  FFE8         	movff	_MinMax+101,wreg
  1651  008188  1801               	xorwf	btemp+1,w,c
  1652  00818A  E103               	bnz	u1615
  1653  00818C  C164  FFE8         	movff	_MinMax+100,wreg
  1654  008190  1800               	xorwf	btemp,w,c
  1655  008192                     u1615:
  1656  008192  E118               	bnz	l100
  1657  008194                     u1610:
  1658                           ;konfig.c: 345: if(DtKNF.mxco2!=eeprom_read(0x00
      +                          D6)) eeprom_write(0x00D6,DtKNF.mxco2);
  1659  008194  0ED6               	movlw	214
  1660  008196  0100               	movlb	__Lparam shr (0+8)
  1661  008198  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1662  00819A  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1663  00819C  ECC7  F06D         	call	_eeprom_read	;wreg free
  1664  0081A0  6E00               	movwf	btemp,c
  1665  0081A2  C000  F002         	movff	btemp,btemp+2
  1666  0081A6  6A03               	clrf	btemp+3,c
  1667  0081A8  C1BE  FFE8         	movff	_DtKNF+10,wreg
  1668  0081AC  1802               	xorwf	btemp+2,w,c
  1669  0081AE  E101               	bnz	u1635
  1670  0081B0  5203               	movf	btemp+3,f,c
  1671  0081B2                     u1635:
  1672  0081B2  E008               	bz	l100
  1673  0081B4  0ED6               	movlw	214
  1674  0081B6  0100               	movlb	__Lparam shr (0+8)
  1675  0081B8  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1676  0081BA  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1677  0081BC  C1BE  F0AC         	movff	_DtKNF+10,?_eeprom_write+2
  1678  0081C0  EC13  F06D         	call	_eeprom_write	;wreg free
  1679  0081C4                     l100:
  1680                           ;konfig.c: 347: if((DtKNF.mgpm>MinMax[17].min)&&
      +                          (DtKNF.mgpm<MinMax[17].max)||DtKNF.mgpm==MinMax[
      +                          17].min||DtKNF.mgpm==MinMax[17].max)
  1681  0081C4  C1D0  F002         	movff	_DtKNF+28,btemp+2
  1682  0081C8  6A03               	clrf	btemp+3,c
  1683  0081CA  EE01  F068         	lfsr	0,_MinMax+104
  1684  0081CE  CFEE F000          	movff	postinc0,btemp
  1685  0081D2  CFED F001          	movff	postdec0,btemp+1
  1686  0081D6  5003               	movf	btemp+3,w,c
  1687  0081D8  5C01               	subwf	btemp+1,w,c
  1688  0081DA  E102               	bnz	u1645
  1689  0081DC  5002               	movf	btemp+2,w,c
  1690  0081DE  5C00               	subwf	btemp,w,c
  1691  0081E0                     u1645:
  1692  0081E0  E20F               	bc	u1661
  1693  0081E2  EE01  F06A         	lfsr	0,_MinMax+106
  1694  0081E6  CFEE F000          	movff	postinc0,btemp
  1695  0081EA  CFED F001          	movff	postdec0,btemp+1
  1696  0081EE  C1D0  F002         	movff	_DtKNF+28,btemp+2
  1697  0081F2  6A03               	clrf	btemp+3,c
  1698  0081F4  5001               	movf	btemp+1,w,c
  1699  0081F6  5C03               	subwf	btemp+3,w,c
  1700  0081F8  E102               	bnz	u1655
  1701  0081FA  5000               	movf	btemp,w,c
  1702  0081FC  5C02               	subwf	btemp+2,w,c
  1703  0081FE                     u1655:
  1704  0081FE  E316               	bnc	u1690
  1705  008200                     u1661:
  1706  008200  C1D0  F000         	movff	_DtKNF+28,btemp
  1707  008204  6A01               	clrf	btemp+1,c
  1708  008206  C169  FFE8         	movff	_MinMax+105,wreg
  1709  00820A  1801               	xorwf	btemp+1,w,c
  1710  00820C  E103               	bnz	u1675
  1711  00820E  C168  FFE8         	movff	_MinMax+104,wreg
  1712  008212  1800               	xorwf	btemp,w,c
  1713  008214                     u1675:
  1714  008214  E00B               	bz	u1690
  1715  008216  C1D0  F000         	movff	_DtKNF+28,btemp
  1716  00821A  6A01               	clrf	btemp+1,c
  1717  00821C  C16B  FFE8         	movff	_MinMax+107,wreg
  1718  008220  1801               	xorwf	btemp+1,w,c
  1719  008222  E103               	bnz	u1695
  1720  008224  C16A  FFE8         	movff	_MinMax+106,wreg
  1721  008228  1800               	xorwf	btemp,w,c
  1722  00822A                     u1695:
  1723  00822A  E12E               	bnz	l102
  1724  00822C                     u1690:
  1725                           ;konfig.c: 348: {
  1726  00822C  C1C6  FFE8         	movff	_DtKNF+18,wreg
  1727  008230  0101               	movlb	(_DtKNF+28) shr (0+8)
  1728  008232  61D0               	cpfslt	(_DtKNF+28)& (0+255),b
  1729  008234  D011               	goto	l103
  1730                           ;konfig.c: 350: {
  1731  008236  C1C6  F002         	movff	_DtKNF+18,btemp+2
  1732  00823A  6A03               	clrf	btemp+3,c
  1733  00823C  EE01  F06A         	lfsr	0,_MinMax+106
  1734  008240  CFEE F000          	movff	postinc0,btemp
  1735  008244  CFED F001          	movff	postdec0,btemp+1
  1736  008248  5003               	movf	btemp+3,w,c
  1737  00824A  5C01               	subwf	btemp+1,w,c
  1738  00824C  E102               	bnz	u1725
  1739  00824E  5002               	movf	btemp+2,w,c
  1740  008250  5C00               	subwf	btemp,w,c
  1741  008252                     u1725:
  1742  008252  B0D8               	btfsc	status,0,c
  1743  008254  C1C6  F1D0         	movff	_DtKNF+18,_DtKNF+28
  1744  008258                     l103:
  1745                           ;konfig.c: 352: }
  1746  008258  0ED7               	movlw	215
  1747  00825A  0100               	movlb	__Lparam shr (0+8)
  1748  00825C  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1749  00825E  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1750  008260  ECC7  F06D         	call	_eeprom_read	;wreg free
  1751  008264  6E00               	movwf	btemp,c
  1752  008266  C000  F002         	movff	btemp,btemp+2
  1753  00826A  6A03               	clrf	btemp+3,c
  1754  00826C  C1D0  FFE8         	movff	_DtKNF+28,wreg
  1755  008270  1802               	xorwf	btemp+2,w,c
  1756  008272  E101               	bnz	u1735
  1757  008274  5203               	movf	btemp+3,f,c
  1758  008276                     u1735:
  1759  008276  E008               	bz	l102
  1760  008278  0ED7               	movlw	215
  1761  00827A  0100               	movlb	__Lparam shr (0+8)
  1762  00827C  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1763  00827E  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1764  008280  C1D0  F0AC         	movff	_DtKNF+28,?_eeprom_write+2
  1765  008284  EC13  F06D         	call	_eeprom_write	;wreg free
  1766  008288                     l102:
  1767                           ;konfig.c: 354: }
  1768  008288  C1D1  F002         	movff	_DtKNF+29,btemp+2
  1769  00828C  6A03               	clrf	btemp+3,c
  1770  00828E  EE01  F06E         	lfsr	0,_MinMax+110
  1771  008292  CFEE F000          	movff	postinc0,btemp
  1772  008296  CFED F001          	movff	postdec0,btemp+1
  1773  00829A  5003               	movf	btemp+3,w,c
  1774  00829C  5C01               	subwf	btemp+1,w,c
  1775  00829E  E102               	bnz	u1745
  1776  0082A0  5002               	movf	btemp+2,w,c
  1777  0082A2  5C00               	subwf	btemp,w,c
  1778  0082A4                     u1745:
  1779  0082A4  E20F               	bc	u1761
  1780  0082A6  EE01  F070         	lfsr	0,_MinMax+112
  1781  0082AA  CFEE F000          	movff	postinc0,btemp
  1782  0082AE  CFED F001          	movff	postdec0,btemp+1
  1783  0082B2  C1D1  F002         	movff	_DtKNF+29,btemp+2
  1784  0082B6  6A03               	clrf	btemp+3,c
  1785  0082B8  5001               	movf	btemp+1,w,c
  1786  0082BA  5C03               	subwf	btemp+3,w,c
  1787  0082BC  E102               	bnz	u1755
  1788  0082BE  5000               	movf	btemp,w,c
  1789  0082C0  5C02               	subwf	btemp+2,w,c
  1790  0082C2                     u1755:
  1791  0082C2  E316               	bnc	u1790
  1792  0082C4                     u1761:
  1793  0082C4  C1D1  F000         	movff	_DtKNF+29,btemp
  1794  0082C8  6A01               	clrf	btemp+1,c
  1795  0082CA  C16F  FFE8         	movff	_MinMax+111,wreg
  1796  0082CE  1801               	xorwf	btemp+1,w,c
  1797  0082D0  E103               	bnz	u1775
  1798  0082D2  C16E  FFE8         	movff	_MinMax+110,wreg
  1799  0082D6  1800               	xorwf	btemp,w,c
  1800  0082D8                     u1775:
  1801  0082D8  E00B               	bz	u1790
  1802  0082DA  C1D1  F000         	movff	_DtKNF+29,btemp
  1803  0082DE  6A01               	clrf	btemp+1,c
  1804  0082E0  C171  FFE8         	movff	_MinMax+113,wreg
  1805  0082E4  1801               	xorwf	btemp+1,w,c
  1806  0082E6  E103               	bnz	u1795
  1807  0082E8  C170  FFE8         	movff	_MinMax+112,wreg
  1808  0082EC  1800               	xorwf	btemp,w,c
  1809  0082EE                     u1795:
  1810  0082EE  E118               	bnz	l106
  1811  0082F0                     u1790:
  1812                           ;konfig.c: 357: {
  1813  0082F0  0ED9               	movlw	217
  1814  0082F2  0100               	movlb	__Lparam shr (0+8)
  1815  0082F4  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1816  0082F6  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1817  0082F8  ECC7  F06D         	call	_eeprom_read	;wreg free
  1818  0082FC  6E00               	movwf	btemp,c
  1819  0082FE  C000  F002         	movff	btemp,btemp+2
  1820  008302  6A03               	clrf	btemp+3,c
  1821  008304  C1D1  FFE8         	movff	_DtKNF+29,wreg
  1822  008308  1802               	xorwf	btemp+2,w,c
  1823  00830A  E101               	bnz	u1815
  1824  00830C  5203               	movf	btemp+3,f,c
  1825  00830E                     u1815:
  1826  00830E  E008               	bz	l106
  1827  008310  0ED9               	movlw	217
  1828  008312  0100               	movlb	__Lparam shr (0+8)
  1829  008314  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1830  008316  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1831  008318  C1D1  F0AC         	movff	_DtKNF+29,?_eeprom_write+2
  1832  00831C  EC13  F06D         	call	_eeprom_write	;wreg free
  1833  008320                     l106:
  1834                           ;konfig.c: 359: }
  1835  008320  C1D3  F002         	movff	_DtKNF+31,btemp+2
  1836  008324  6A03               	clrf	btemp+3,c
  1837  008326  EE01  F074         	lfsr	0,_MinMax+116
  1838  00832A  CFEE F000          	movff	postinc0,btemp
  1839  00832E  CFED F001          	movff	postdec0,btemp+1
  1840  008332  5003               	movf	btemp+3,w,c
  1841  008334  5C01               	subwf	btemp+1,w,c
  1842  008336  E102               	bnz	u1825
  1843  008338  5002               	movf	btemp+2,w,c
  1844  00833A  5C00               	subwf	btemp,w,c
  1845  00833C                     u1825:
  1846  00833C  E20F               	bc	u1841
  1847  00833E  EE01  F076         	lfsr	0,_MinMax+118
  1848  008342  CFEE F000          	movff	postinc0,btemp
  1849  008346  CFED F001          	movff	postdec0,btemp+1
  1850  00834A  C1D3  F002         	movff	_DtKNF+31,btemp+2
  1851  00834E  6A03               	clrf	btemp+3,c
  1852  008350  5001               	movf	btemp+1,w,c
  1853  008352  5C03               	subwf	btemp+3,w,c
  1854  008354  E102               	bnz	u1835
  1855  008356  5000               	movf	btemp,w,c
  1856  008358  5C02               	subwf	btemp+2,w,c
  1857  00835A                     u1835:
  1858  00835A  E316               	bnc	u1870
  1859  00835C                     u1841:
  1860  00835C  C1D3  F000         	movff	_DtKNF+31,btemp
  1861  008360  6A01               	clrf	btemp+1,c
  1862  008362  C175  FFE8         	movff	_MinMax+117,wreg
  1863  008366  1801               	xorwf	btemp+1,w,c
  1864  008368  E103               	bnz	u1855
  1865  00836A  C174  FFE8         	movff	_MinMax+116,wreg
  1866  00836E  1800               	xorwf	btemp,w,c
  1867  008370                     u1855:
  1868  008370  E00B               	bz	u1870
  1869  008372  C1D3  F000         	movff	_DtKNF+31,btemp
  1870  008376  6A01               	clrf	btemp+1,c
  1871  008378  C177  FFE8         	movff	_MinMax+119,wreg
  1872  00837C  1801               	xorwf	btemp+1,w,c
  1873  00837E  E103               	bnz	u1875
  1874  008380  C176  FFE8         	movff	_MinMax+118,wreg
  1875  008384  1800               	xorwf	btemp,w,c
  1876  008386                     u1875:
  1877  008386  E118               	bnz	l108
  1878  008388                     u1870:
  1879                           ;konfig.c: 362: {
  1880  008388  0EDA               	movlw	218
  1881  00838A  0100               	movlb	__Lparam shr (0+8)
  1882  00838C  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1883  00838E  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1884  008390  ECC7  F06D         	call	_eeprom_read	;wreg free
  1885  008394  6E00               	movwf	btemp,c
  1886  008396  C000  F002         	movff	btemp,btemp+2
  1887  00839A  6A03               	clrf	btemp+3,c
  1888  00839C  C1D3  FFE8         	movff	_DtKNF+31,wreg
  1889  0083A0  1802               	xorwf	btemp+2,w,c
  1890  0083A2  E101               	bnz	u1895
  1891  0083A4  5203               	movf	btemp+3,f,c
  1892  0083A6                     u1895:
  1893  0083A6  E008               	bz	l108
  1894  0083A8  0EDA               	movlw	218
  1895  0083AA  0100               	movlb	__Lparam shr (0+8)
  1896  0083AC  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1897  0083AE  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1898  0083B0  C1D3  F0AC         	movff	_DtKNF+31,?_eeprom_write+2
  1899  0083B4  EC13  F06D         	call	_eeprom_write	;wreg free
  1900  0083B8                     l108:
  1901                           ;konfig.c: 364: }
  1902  0083B8  C1D4  F002         	movff	_DtKNF+32,btemp+2
  1903  0083BC  6A03               	clrf	btemp+3,c
  1904  0083BE  EE01  F07A         	lfsr	0,_MinMax+122
  1905  0083C2  CFEE F000          	movff	postinc0,btemp
  1906  0083C6  CFED F001          	movff	postdec0,btemp+1
  1907  0083CA  5003               	movf	btemp+3,w,c
  1908  0083CC  5C01               	subwf	btemp+1,w,c
  1909  0083CE  E102               	bnz	u1905
  1910  0083D0  5002               	movf	btemp+2,w,c
  1911  0083D2  5C00               	subwf	btemp,w,c
  1912  0083D4                     u1905:
  1913  0083D4  E20F               	bc	u1921
  1914  0083D6  EE01  F07C         	lfsr	0,_MinMax+124
  1915  0083DA  CFEE F000          	movff	postinc0,btemp
  1916  0083DE  CFED F001          	movff	postdec0,btemp+1
  1917  0083E2  C1D4  F002         	movff	_DtKNF+32,btemp+2
  1918  0083E6  6A03               	clrf	btemp+3,c
  1919  0083E8  5001               	movf	btemp+1,w,c
  1920  0083EA  5C03               	subwf	btemp+3,w,c
  1921  0083EC  E102               	bnz	u1915
  1922  0083EE  5000               	movf	btemp,w,c
  1923  0083F0  5C02               	subwf	btemp+2,w,c
  1924  0083F2                     u1915:
  1925  0083F2  E316               	bnc	u1950
  1926  0083F4                     u1921:
  1927  0083F4  C1D4  F000         	movff	_DtKNF+32,btemp
  1928  0083F8  6A01               	clrf	btemp+1,c
  1929  0083FA  C17B  FFE8         	movff	_MinMax+123,wreg
  1930  0083FE  1801               	xorwf	btemp+1,w,c
  1931  008400  E103               	bnz	u1935
  1932  008402  C17A  FFE8         	movff	_MinMax+122,wreg
  1933  008406  1800               	xorwf	btemp,w,c
  1934  008408                     u1935:
  1935  008408  E00B               	bz	u1950
  1936  00840A  C1D4  F000         	movff	_DtKNF+32,btemp
  1937  00840E  6A01               	clrf	btemp+1,c
  1938  008410  C17D  FFE8         	movff	_MinMax+125,wreg
  1939  008414  1801               	xorwf	btemp+1,w,c
  1940  008416  E103               	bnz	u1955
  1941  008418  C17C  FFE8         	movff	_MinMax+124,wreg
  1942  00841C  1800               	xorwf	btemp,w,c
  1943  00841E                     u1955:
  1944  00841E  E118               	bnz	l110
  1945  008420                     u1950:
  1946                           ;konfig.c: 367: {
  1947  008420  0EDB               	movlw	219
  1948  008422  0100               	movlb	__Lparam shr (0+8)
  1949  008424  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1950  008426  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1951  008428  ECC7  F06D         	call	_eeprom_read	;wreg free
  1952  00842C  6E00               	movwf	btemp,c
  1953  00842E  C000  F002         	movff	btemp,btemp+2
  1954  008432  6A03               	clrf	btemp+3,c
  1955  008434  C1D4  FFE8         	movff	_DtKNF+32,wreg
  1956  008438  1802               	xorwf	btemp+2,w,c
  1957  00843A  E101               	bnz	u1975
  1958  00843C  5203               	movf	btemp+3,f,c
  1959  00843E                     u1975:
  1960  00843E  E008               	bz	l110
  1961  008440  0EDB               	movlw	219
  1962  008442  0100               	movlb	__Lparam shr (0+8)
  1963  008444  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1964  008446  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1965  008448  C1D4  F0AC         	movff	_DtKNF+32,?_eeprom_write+2
  1966  00844C  EC13  F06D         	call	_eeprom_write	;wreg free
  1967  008450                     l110:
  1968                           ;konfig.c: 369: }
  1969  008450  C1D5  F002         	movff	_DtKNF+33,btemp+2
  1970  008454  6A03               	clrf	btemp+3,c
  1971  008456  EE01  F080         	lfsr	0,_MinMax+128
  1972  00845A  CFEE F000          	movff	postinc0,btemp
  1973  00845E  CFED F001          	movff	postdec0,btemp+1
  1974  008462  5003               	movf	btemp+3,w,c
  1975  008464  5C01               	subwf	btemp+1,w,c
  1976  008466  E102               	bnz	u1985
  1977  008468  5002               	movf	btemp+2,w,c
  1978  00846A  5C00               	subwf	btemp,w,c
  1979  00846C                     u1985:
  1980  00846C  E20F               	bc	u2001
  1981  00846E  EE01  F082         	lfsr	0,_MinMax+130
  1982  008472  CFEE F000          	movff	postinc0,btemp
  1983  008476  CFED F001          	movff	postdec0,btemp+1
  1984  00847A  C1D5  F002         	movff	_DtKNF+33,btemp+2
  1985  00847E  6A03               	clrf	btemp+3,c
  1986  008480  5001               	movf	btemp+1,w,c
  1987  008482  5C03               	subwf	btemp+3,w,c
  1988  008484  E102               	bnz	u1995
  1989  008486  5000               	movf	btemp,w,c
  1990  008488  5C02               	subwf	btemp+2,w,c
  1991  00848A                     u1995:
  1992  00848A  E316               	bnc	u2030
  1993  00848C                     u2001:
  1994  00848C  C1D5  F000         	movff	_DtKNF+33,btemp
  1995  008490  6A01               	clrf	btemp+1,c
  1996  008492  C181  FFE8         	movff	_MinMax+129,wreg
  1997  008496  1801               	xorwf	btemp+1,w,c
  1998  008498  E103               	bnz	u2015
  1999  00849A  C180  FFE8         	movff	_MinMax+128,wreg
  2000  00849E  1800               	xorwf	btemp,w,c
  2001  0084A0                     u2015:
  2002  0084A0  E00B               	bz	u2030
  2003  0084A2  C1D5  F000         	movff	_DtKNF+33,btemp
  2004  0084A6  6A01               	clrf	btemp+1,c
  2005  0084A8  C183  FFE8         	movff	_MinMax+131,wreg
  2006  0084AC  1801               	xorwf	btemp+1,w,c
  2007  0084AE  E103               	bnz	u2035
  2008  0084B0  C182  FFE8         	movff	_MinMax+130,wreg
  2009  0084B4  1800               	xorwf	btemp,w,c
  2010  0084B6                     u2035:
  2011  0084B6  E118               	bnz	l112
  2012  0084B8                     u2030:
  2013                           ;konfig.c: 372: {
  2014  0084B8  0EDC               	movlw	220
  2015  0084BA  0100               	movlb	__Lparam shr (0+8)
  2016  0084BC  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2017  0084BE  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2018  0084C0  ECC7  F06D         	call	_eeprom_read	;wreg free
  2019  0084C4  6E00               	movwf	btemp,c
  2020  0084C6  C000  F002         	movff	btemp,btemp+2
  2021  0084CA  6A03               	clrf	btemp+3,c
  2022  0084CC  C1D5  FFE8         	movff	_DtKNF+33,wreg
  2023  0084D0  1802               	xorwf	btemp+2,w,c
  2024  0084D2  E101               	bnz	u2055
  2025  0084D4  5203               	movf	btemp+3,f,c
  2026  0084D6                     u2055:
  2027  0084D6  E008               	bz	l112
  2028  0084D8  0EDC               	movlw	220
  2029  0084DA  0100               	movlb	__Lparam shr (0+8)
  2030  0084DC  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  2031  0084DE  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  2032  0084E0  C1D5  F0AC         	movff	_DtKNF+33,?_eeprom_write+2
  2033  0084E4  EC13  F06D         	call	_eeprom_write	;wreg free
  2034  0084E8                     l112:
  2035                           ;konfig.c: 374: }
  2036  0084E8  0103               	movlb	(_RSDT1+1) shr (0+8)
  2037  0084EA  9727               	bcf	(_RSDT1+1)& (0+255),3,b
  2038                           ;konfig.c: 376: RSDT1.RD_KNF=0;
  2039  0084EC  9327               	bcf	(_RSDT1+1)& (0+255),1,b
  2040                           ;konfig.c: 377: return 1;
  2041  0084EE  0C01               	retlw	1
  2042  0084F0                     l64:
  2043                           ;konfig.c: 378: }
  2044  0084F0  0C00               	retlw	0
  2045                           ;konfig.c: 380: }
  2046  0084F2                     __end_of_SaveKnfPar:
  2047                           ;konfig.c: 383: void SetNST(void)
  2048                           ;konfig.c: 384: {
  2049  0084F2                     _SetNST:
  2050  000000                     
  2051                           ;konfig.c: 385: PomiarZW();
  2052  0084F2  EC39  F035         	call	_PomiarZW	;wreg free
  2053                           ;konfig.c: 386: if(!DtZW._on_ZW)
  2054  0084F6  0100               	movlb	_DtZW shr (0+8)
  2055  0084F8  B167               	btfsc	_DtZW& (0+255),0,b
  2056  0084FA  D00E               	goto	l115
  2057                           ;konfig.c: 387: {
  2058  0084FC  EE01  F0CE         	lfsr	0,_DtKNF+26
  2059  008500  50EF               	movf	indf0,w,c
  2060  008502  E105               	bnz	l116
  2061                           ;konfig.c: 389: {
  2062  008504  0E28               	movlw	40
  2063  008506  CFE8 F085          	movff	wreg,_DtCO+6
  2064                           ;konfig.c: 391: DtCO.maxPCO=80;
  2065  00850A  0E50               	movlw	80
  2066  00850C  D010               	goto	L1
  2067                           ;konfig.c: 392: }
  2068  00850E                     l116:
  2069                           ;konfig.c: 393: else
  2070  00850E  0E19               	movlw	25
  2071  008510  CFE8 F085          	movff	wreg,_DtCO+6
  2072                           ;konfig.c: 396: DtCO.maxPCO=55;
  2073  008514  0E37               	movlw	55
  2074  008516  D00B               	goto	L1
  2075                           ;konfig.c: 397: }
  2076  008518                     l115:
  2077                           ;konfig.c: 399: else
  2078  008518  0103               	movlb	(_M+2) shr (0+8)
  2079  00851A  8F08               	bsf	(_M+2)& (0+255),7,b
  2080                           ;konfig.c: 402: SetPrt(20,1);
  2081  00851C  0E01               	movlw	1
  2082  00851E  0100               	movlb	__Lparam shr (0+8)
  2083  008520  6FA6               	movwf	?_SetPrt^(__Lparam& (0+65280)),b
  2084  008522  0E14               	movlw	20
  2085  008524  EC61  F063         	call	_SetPrt
  2086                           ;konfig.c: 403: DtCO.minPCO=0;
  2087  008528  0100               	movlb	(_DtCO+6) shr (0+8)
  2088  00852A  6B85               	clrf	(_DtCO+6)& (0+255),b
  2089                           ;konfig.c: 404: DtCO.maxPCO=99;
  2090  00852C  0E63               	movlw	99
  2091  00852E                     L1:
  2092  00852E  CFE8 F086          	movff	wreg,_DtCO+7
  2093                           ;konfig.c: 405: }
  2094  008532  C085  F331         	movff	_DtCO+6,_RSDT1+11
  2095                           ;konfig.c: 407: RSDT1.outPCOmx=DtCO.maxPCO;
  2096  008536  C086  F332         	movff	_DtCO+7,_RSDT1+12
  2097                           ;konfig.c: 408: if(DtCO.PCO<DtCO.minPCO) DtCO.PC
      +                          O=DtCO.minPCO;
  2098  00853A  C085  FFE8         	movff	_DtCO+6,wreg
  2099  00853E  0100               	movlb	(_DtCO+4) shr (0+8)
  2100  008540  6183               	cpfslt	(_DtCO+4)& (0+255),b
  2101  008542  D002               	goto	l119
  2102  008544  C085  F083         	movff	_DtCO+6,_DtCO+4
  2103  008548                     l119:
  2104                           ;konfig.c: 409: if(DtCO.PCO>DtCO.maxPCO) DtCO.PC
      +                          O=DtCO.maxPCO;
  2105  008548  C083  FFE8         	movff	_DtCO+4,wreg
  2106  00854C  0100               	movlb	(_DtCO+7) shr (0+8)
  2107  00854E  6186               	cpfslt	(_DtCO+7)& (0+255),b
  2108  008550  D002               	goto	l120
  2109  008552  C086  F083         	movff	_DtCO+7,_DtCO+4
  2110  008556                     l120:
  2111                           ;konfig.c: 410: if(DtCO.PCO!=eeprom_read(0x00C9)
      +                          ) eeprom_write(0x00C9,DtCO.PCO);
  2112  008556  0EC9               	movlw	201
  2113  008558  0100               	movlb	__Lparam shr (0+8)
  2114  00855A  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2115  00855C  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2116  00855E  ECC7  F06D         	call	_eeprom_read	;wreg free
  2117  008562  6E00               	movwf	btemp,c
  2118  008564  C000  F002         	movff	btemp,btemp+2
  2119  008568  6A03               	clrf	btemp+3,c
  2120  00856A  C083  FFE8         	movff	_DtCO+4,wreg
  2121  00856E  1802               	xorwf	btemp+2,w,c
  2122  008570  E101               	bnz	u2105
  2123  008572  5203               	movf	btemp+3,f,c
  2124  008574                     u2105:
  2125  008574  B4D8               	btfsc	status,2,c
  2126  008576  0012               	return	
  2127  008578  D287               	goto	L17
  2128                           ;konfig.c: 411: }
  2129  00857A                     __end_of_SetNST:
  2130                           ;konfig.c: 414: void RdEEParam(void)
  2131                           ;konfig.c: 415: {
  2132  00857A                     _RdEEParam:
  2133  000000                     
  2134                           ;konfig.c: 417: DtKNF.kodkt=eeprom_read(0x00C5);
  2135  00857A  0EC5               	movlw	197
  2136  00857C  0100               	movlb	__Lparam shr (0+8)
  2137  00857E  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2138  008580  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2139  008582  ECC7  F06D         	call	_eeprom_read	;wreg free
  2140  008586  CFE8 F1C1          	movff	wreg,_DtKNF+13
  2141                           ;konfig.c: 418: RSDT1.outKODKT=DtKNF.kodkt;
  2142  00858A  C1C1  F34B         	movff	_DtKNF+13,_RSDT1+37
  2143                           ;konfig.c: 419: SetTpKtParam();
  2144  00858E  D931               	call	_SetTpKtParam	;wreg free
  2145                           ;konfig.c: 421: DtKNF.mstr=eeprom_read(0x00C1);
  2146  008590  0EC1               	movlw	193
  2147  008592  0100               	movlb	__Lparam shr (0+8)
  2148  008594  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2149  008596  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2150  008598  ECC7  F06D         	call	_eeprom_read	;wreg free
  2151  00859C  CFE8 F1BA          	movff	wreg,_DtKNF+6
  2152                           ;konfig.c: 422: DtKNF.dmstr=DtKNF.mstr;
  2153  0085A0  C1BA  F1B7         	movff	_DtKNF+6,_DtKNF+3
  2154                           ;konfig.c: 423: RSDT1.outMSTR=DtKNF.mstr;
  2155  0085A4  C1BA  F347         	movff	_DtKNF+6,_RSDT1+33
  2156                           ;konfig.c: 424: DtKNF.mxcw=eeprom_read(0x00C2);
  2157  0085A8  0EC2               	movlw	194
  2158  0085AA  0100               	movlb	__Lparam shr (0+8)
  2159  0085AC  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2160  0085AE  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2161  0085B0  ECC7  F06D         	call	_eeprom_read	;wreg free
  2162  0085B4  CFE8 F1BB          	movff	wreg,_DtKNF+7
  2163                           ;konfig.c: 425: DtKNF.dmxcw=DtKNF.mxcw;
  2164  0085B8  C1BB  F1B8         	movff	_DtKNF+7,_DtKNF+4
  2165                           ;konfig.c: 426: RSDT1.outMMAXU=DtKNF.mxcw;
  2166  0085BC  C1BB  F348         	movff	_DtKNF+7,_RSDT1+34
  2167                           ;konfig.c: 427: DtKNF.mxco=eeprom_read(0x00C3);
  2168  0085C0  0EC3               	movlw	195
  2169  0085C2  0100               	movlb	__Lparam shr (0+8)
  2170  0085C4  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2171  0085C6  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2172  0085C8  ECC7  F06D         	call	_eeprom_read	;wreg free
  2173  0085CC  CFE8 F1BC          	movff	wreg,_DtKNF+8
  2174                           ;konfig.c: 428: DtKNF.dmxco=DtKNF.mxco;
  2175  0085D0  C1BC  F1B9         	movff	_DtKNF+8,_DtKNF+5
  2176                           ;konfig.c: 429: DtKNF.def_mxco=DtKNF.mxco;
  2177  0085D4  C1BC  F1BD         	movff	_DtKNF+8,_DtKNF+9
  2178                           ;konfig.c: 430: RSDT1.outMMAXG=DtKNF.mxco;
  2179  0085D8  C1BC  F349         	movff	_DtKNF+8,_RSDT1+35
  2180                           ;konfig.c: 431: DtKNF.tmxco2=eeprom_read(0x00D5)
      +                          ;
  2181  0085DC  0ED5               	movlw	213
  2182  0085DE  0100               	movlb	__Lparam shr (0+8)
  2183  0085E0  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2184  0085E2  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2185  0085E4  ECC7  F06D         	call	_eeprom_read	;wreg free
  2186  0085E8  CFE8 F1BF          	movff	wreg,_DtKNF+11
  2187                           ;konfig.c: 432: RSDT1.outTMMAXG2=DtKNF.tmxco2;
  2188  0085EC  C1BF  F356         	movff	_DtKNF+11,_RSDT1+48
  2189                           ;konfig.c: 433: DtKNF.mxco2=eeprom_read(0x00D6);
  2190  0085F0  0ED6               	movlw	214
  2191  0085F2  0100               	movlb	__Lparam shr (0+8)
  2192  0085F4  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2193  0085F6  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2194  0085F8  ECC7  F06D         	call	_eeprom_read	;wreg free
  2195  0085FC  CFE8 F1BE          	movff	wreg,_DtKNF+10
  2196                           ;konfig.c: 434: RSDT1.outMMAXG2=DtKNF.mxco2;
  2197  008600  C1BE  F357         	movff	_DtKNF+10,_RSDT1+49
  2198                           ;konfig.c: 435: if(DtKNF.kodkt<3)
  2199  008604  0E03               	movlw	3
  2200  008606  0101               	movlb	(_DtKNF+13) shr (0+8)
  2201  008608  61C1               	cpfslt	(_DtKNF+13)& (0+255),b
  2202  00860A  D010               	goto	l123
  2203                           ;konfig.c: 436: {
  2204  00860C  0ECE               	movlw	206
  2205  00860E  0100               	movlb	__Lparam shr (0+8)
  2206  008610  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2207  008612  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2208  008614  ECC7  F06D         	call	_eeprom_read	;wreg free
  2209  008618  CFE8 F1CB          	movff	wreg,_DtKNF+23
  2210                           ;konfig.c: 438: DtKNF.mmax=eeprom_read(0x00CF);
  2211  00861C  0ECF               	movlw	207
  2212  00861E  0100               	movlb	__Lparam shr (0+8)
  2213  008620  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2214  008622  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2215  008624  ECC7  F06D         	call	_eeprom_read	;wreg free
  2216  008628  CFE8 F1CC          	movff	wreg,_DtKNF+24
  2217  00862C                     l123:
  2218                           ;konfig.c: 439: }
  2219  00862C  C1CB  F350         	movff	_DtKNF+23,_RSDT1+42
  2220                           ;konfig.c: 441: RSDT1.outMMAX=DtKNF.mmax;
  2221  008630  C1CC  F351         	movff	_DtKNF+24,_RSDT1+43
  2222                           ;konfig.c: 442: ModParam();
  2223  008634  ECDF  F066         	call	_ModParam	;wreg free
  2224                           ;konfig.c: 444: DtKNF.robg=eeprom_read(0x00C8);
  2225  008638  0EC8               	movlw	200
  2226  00863A  0100               	movlb	__Lparam shr (0+8)
  2227  00863C  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2228  00863E  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2229  008640  ECC7  F06D         	call	_eeprom_read	;wreg free
  2230  008644  CFE8 F1C9          	movff	wreg,_DtKNF+21
  2231                           ;konfig.c: 445: RSDT1.outWOBG=DtKNF.robg;
  2232  008648  C1C9  F34C         	movff	_DtKNF+21,_RSDT1+38
  2233                           ;konfig.c: 446: DtKNF.opdg=eeprom_read(0x00C4);
  2234  00864C  0EC4               	movlw	196
  2235  00864E  0100               	movlb	__Lparam shr (0+8)
  2236  008650  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2237  008652  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2238  008654  ECC7  F06D         	call	_eeprom_read	;wreg free
  2239  008658  CFE8 F1CE          	movff	wreg,_DtKNF+26
  2240                           ;konfig.c: 447: RSDT1.outOPDG=DtKNF.opdg;
  2241  00865C  C1CE  F34E         	movff	_DtKNF+26,_RSDT1+40
  2242                           ;konfig.c: 448: DtKNF.tpcs=eeprom_read(0x00CD);
  2243  008660  0ECD               	movlw	205
  2244  008662  0100               	movlb	__Lparam shr (0+8)
  2245  008664  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2246  008666  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2247  008668  ECC7  F06D         	call	_eeprom_read	;wreg free
  2248  00866C  CFE8 F1CF          	movff	wreg,_DtKNF+27
  2249                           ;konfig.c: 449: RSDT1.outTPCS=DtKNF.tpcs;
  2250  008670  C1CF  F34F         	movff	_DtKNF+27,_RSDT1+41
  2251                           ;konfig.c: 450: DtKNF.aleg=eeprom_read(0x00C6);
  2252  008674  0EC6               	movlw	198
  2253  008676  0100               	movlb	__Lparam shr (0+8)
  2254  008678  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2255  00867A  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2256  00867C  ECC7  F06D         	call	_eeprom_read	;wreg free
  2257  008680  CFE8 F1CD          	movff	wreg,_DtKNF+25
  2258                           ;konfig.c: 451: RSDT1.outWANL=DtKNF.aleg;
  2259  008684  C1CD  F34A         	movff	_DtKNF+25,_RSDT1+36
  2260                           ;konfig.c: 452: DtKNF.nokr=eeprom_read(0x00CC);
  2261  008688  0ECC               	movlw	204
  2262  00868A  0100               	movlb	__Lparam shr (0+8)
  2263  00868C  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2264  00868E  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2265  008690  ECC7  F06D         	call	_eeprom_read	;wreg free
  2266  008694  CFE8 F1CA          	movff	wreg,_DtKNF+22
  2267                           ;konfig.c: 453: RSDT1.outNOKR=DtKNF.nokr;
  2268  008698  C1CA  F34D         	movff	_DtKNF+22,_RSDT1+39
  2269                           ;konfig.c: 455: PFN.poz=eeprom_read(0x00CB);
  2270  00869C  0ECB               	movlw	203
  2271  00869E  0100               	movlb	__Lparam shr (0+8)
  2272  0086A0  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2273  0086A2  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2274  0086A4  ECC7  F06D         	call	_eeprom_read	;wreg free
  2275  0086A8  6E00               	movwf	btemp,c
  2276  0086AA  0100               	movlb	(_PFN+1) shr (0+8)
  2277  0086AC  C000  F06C         	movff	btemp,_PFN+1
  2278  0086B0  6B6D               	clrf	(_PFN+2)& (0+255),b
  2279                           ;konfig.c: 456: SetPFN();
  2280  0086B2  D952               	call	_SetPFN	;wreg free
  2281                           ;konfig.c: 458: DtCO.PCO=eeprom_read(0x00C9);
  2282  0086B4  0EC9               	movlw	201
  2283  0086B6  0100               	movlb	__Lparam shr (0+8)
  2284  0086B8  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2285  0086BA  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2286  0086BC  ECC7  F06D         	call	_eeprom_read	;wreg free
  2287  0086C0  CFE8 F083          	movff	wreg,_DtCO+4
  2288                           ;konfig.c: 459: DtCW.PCW=eeprom_read(0x00CA);
  2289  0086C4  0ECA               	movlw	202
  2290  0086C6  0100               	movlb	__Lparam shr (0+8)
  2291  0086C8  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2292  0086CA  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2293  0086CC  ECC7  F06D         	call	_eeprom_read	;wreg free
  2294  0086D0  CFE8 F073          	movff	wreg,_DtCW+3
  2295                           ;konfig.c: 460: SetNST();
  2296  0086D4  DF0E               	call	_SetNST	;wreg free
  2297                           ;konfig.c: 461: RSDT1.outPCO=DtCO.PCO;
  2298  0086D6  C083  F32F         	movff	_DtCO+4,_RSDT1+9
  2299                           ;konfig.c: 462: RSDT1.outPCW=DtCW.PCW;
  2300  0086DA  C073  F330         	movff	_DtCW+3,_RSDT1+10
  2301                           ;konfig.c: 464: DtKNF.wymCO=0;
  2302  0086DE  0101               	movlb	_DtKNF shr (0+8)
  2303  0086E0  93B4               	bcf	_DtKNF& (0+255),1,b
  2304                           ;konfig.c: 465: DtKNF.wymCW=0;
  2305  0086E2  95B4               	bcf	_DtKNF& (0+255),2,b
  2306                           ;konfig.c: 467: M.LICZNIK_ANL=eeprom_read(0x00C7
      +                          );
  2307  0086E4  0EC7               	movlw	199
  2308  0086E6  0100               	movlb	__Lparam shr (0+8)
  2309  0086E8  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2310  0086EA  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2311  0086EC  ECC7  F06D         	call	_eeprom_read	;wreg free
  2312  0086F0  CFE8 F30F          	movff	wreg,_M+9
  2313                           ;konfig.c: 468: if(M.LICZNIK_ANL)
  2314  0086F4  EE03  F00F         	lfsr	0,_M+9
  2315  0086F8  50EF               	movf	indf0,w,c
  2316  0086FA  E011               	bz	l124
  2317                           ;konfig.c: 469: {
  2318  0086FC  EE01  F0CD         	lfsr	0,_DtKNF+25
  2319  008700  50EF               	movf	indf0,w,c
  2320  008702  E004               	bz	u2150
  2321  008704  EE01  F0C2         	lfsr	0,_DtKNF+14
  2322  008708  50EF               	movf	indf0,w,c
  2323  00870A  E009               	bz	l124
  2324  00870C                     u2150:
  2325                           ;konfig.c: 471: {
  2326  00870C  0EC7               	movlw	199
  2327  00870E  0100               	movlb	__Lparam shr (0+8)
  2328  008710  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  2329  008712  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  2330  008714  6BAC               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
  2331  008716  EC13  F06D         	call	_eeprom_write	;wreg free
  2332                           ;konfig.c: 473: M.LICZNIK_ANL=0;
  2333  00871A  0103               	movlb	(_M+9) shr (0+8)
  2334  00871C  6B0F               	clrf	(_M+9)& (0+255),b
  2335  00871E                     l124:
  2336                           ;konfig.c: 474: }
  2337  00871E  0ED0               	movlw	208
  2338  008720  0100               	movlb	__Lparam shr (0+8)
  2339  008722  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2340  008724  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2341  008726  ECC7  F06D         	call	_eeprom_read	;wreg free
  2342  00872A  CFE8 F1C4          	movff	wreg,_DtKNF+16
  2343                           ;konfig.c: 478: RSDT1.outRDPM=DtKNF.rdpm;
  2344  00872E  C1C4  F352         	movff	_DtKNF+16,_RSDT1+44
  2345                           ;konfig.c: 479: DtKNF.dtpm=eeprom_read(0x00D1);
  2346  008732  0ED1               	movlw	209
  2347  008734  0100               	movlb	__Lparam shr (0+8)
  2348  008736  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2349  008738  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2350  00873A  ECC7  F06D         	call	_eeprom_read	;wreg free
  2351  00873E  CFE8 F1C5          	movff	wreg,_DtKNF+17
  2352                           ;konfig.c: 480: RSDT1.outDTPM=DtKNF.dtpm;
  2353  008742  C1C5  F353         	movff	_DtKNF+17,_RSDT1+45
  2354                           ;konfig.c: 481: DtKNF.mdpm=eeprom_read(0x00D2);
  2355  008746  0ED2               	movlw	210
  2356  008748  0100               	movlb	__Lparam shr (0+8)
  2357  00874A  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2358  00874C  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2359  00874E  ECC7  F06D         	call	_eeprom_read	;wreg free
  2360  008752  CFE8 F1C6          	movff	wreg,_DtKNF+18
  2361                           ;konfig.c: 482: RSDT1.outMDPM=DtKNF.mdpm;
  2362  008756  C1C6  F354         	movff	_DtKNF+18,_RSDT1+46
  2363                           ;konfig.c: 483: DtKNF.teco=eeprom_read(0x00D3);
  2364  00875A  0ED3               	movlw	211
  2365  00875C  0100               	movlb	__Lparam shr (0+8)
  2366  00875E  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2367  008760  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2368  008762  ECC7  F06D         	call	_eeprom_read	;wreg free
  2369  008766  CFE8 F1C7          	movff	wreg,_DtKNF+19
  2370                           ;konfig.c: 484: RSDT1.outTECO=DtKNF.teco;
  2371  00876A  C1C7  F355         	movff	_DtKNF+19,_RSDT1+47
  2372                           ;konfig.c: 486: DtIN.Eco=eeprom_read(0x00D4);
  2373  00876E  0ED4               	movlw	212
  2374  008770  0100               	movlb	__Lparam shr (0+8)
  2375  008772  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2376  008774  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2377  008776  ECC7  F06D         	call	_eeprom_read	;wreg free
  2378  00877A  CFE8 F09B          	movff	wreg,_DtIN+9
  2379                           ;konfig.c: 487: RSDT1.outECO=DtIN.Eco;
  2380  00877E  C09B  F339         	movff	_DtIN+9,_RSDT1+19
  2381                           ;konfig.c: 489: DtKNF.mgpm=eeprom_read(0x00D7);
  2382  008782  0ED7               	movlw	215
  2383  008784  0100               	movlb	__Lparam shr (0+8)
  2384  008786  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2385  008788  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2386  00878A  ECC7  F06D         	call	_eeprom_read	;wreg free
  2387  00878E  CFE8 F1D0          	movff	wreg,_DtKNF+28
  2388                           ;konfig.c: 490: RSDT1.outMGPM=DtKNF.mgpm;
  2389  008792  C1D0  F358         	movff	_DtKNF+28,_RSDT1+50
  2390                           ;konfig.c: 491: DtKNF.mgpm2=eeprom_read(0x00D9);
  2391  008796  0ED9               	movlw	217
  2392  008798  0100               	movlb	__Lparam shr (0+8)
  2393  00879A  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2394  00879C  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2395  00879E  ECC7  F06D         	call	_eeprom_read	;wreg free
  2396  0087A2  CFE8 F1D1          	movff	wreg,_DtKNF+29
  2397                           ;konfig.c: 492: RSDT1.outMGPM2=DtKNF.mgpm2;
  2398  0087A6  C1D1  F359         	movff	_DtKNF+29,_RSDT1+51
  2399                           ;konfig.c: 493: DtKNF.hsco=eeprom_read(0x00DA);
  2400  0087AA  0EDA               	movlw	218
  2401  0087AC  0100               	movlb	__Lparam shr (0+8)
  2402  0087AE  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2403  0087B0  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2404  0087B2  ECC7  F06D         	call	_eeprom_read	;wreg free
  2405  0087B6  CFE8 F1D3          	movff	wreg,_DtKNF+31
  2406                           ;konfig.c: 494: RSDT1.outHSCO=DtKNF.hsco;
  2407  0087BA  C1D3  F35B         	movff	_DtKNF+31,_RSDT1+53
  2408                           ;konfig.c: 495: DtKNF.conw=eeprom_read(0x00DB);
  2409  0087BE  0EDB               	movlw	219
  2410  0087C0  0100               	movlb	__Lparam shr (0+8)
  2411  0087C2  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2412  0087C4  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2413  0087C6  ECC7  F06D         	call	_eeprom_read	;wreg free
  2414  0087CA  CFE8 F1D4          	movff	wreg,_DtKNF+32
  2415                           ;konfig.c: 496: RSDT1.outCONW=DtKNF.conw;
  2416  0087CE  C1D4  F35C         	movff	_DtKNF+32,_RSDT1+54
  2417                           ;konfig.c: 497: DtKNF.prop=eeprom_read(0x00DC);
  2418  0087D2  0EDC               	movlw	220
  2419  0087D4  0100               	movlb	__Lparam shr (0+8)
  2420  0087D6  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2421  0087D8  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2422  0087DA  ECC7  F06D         	call	_eeprom_read	;wreg free
  2423  0087DE  CFE8 F1D5          	movff	wreg,_DtKNF+33
  2424                           ;konfig.c: 498: RSDT1.outPROP=DtKNF.prop;
  2425  0087E2  C1D5  F35D         	movff	_DtKNF+33,_RSDT1+55
  2426                           ;konfig.c: 503: DtKNF.alin=5;
  2427  0087E6  0E05               	movlw	5
  2428  0087E8  CFE8 F1D2          	movff	wreg,_DtKNF+30
  2429                           ;konfig.c: 505: RSDT1.outALIN=DtKNF.alin;
  2430  0087EC  C1D2  F35A         	movff	_DtKNF+30,_RSDT1+52
  2431                           ;konfig.c: 506: }
  2432  0087F0  0C05               	retlw	5
  2433  0087F2                     __end_of_RdEEParam:
  2434                           ;konfig.c: 510: void SetTpKtParam(void)
  2435                           ;konfig.c: 511: {
  2436  0087F2                     _SetTpKtParam:
  2437  000000                     
  2438                           ;konfig.c: 512: switch(DtKNF.kodkt)
  2439  0087F2  D08E               	goto	l128
  2440  0087F4                     l130:
  2441                           ;konfig.c: 516: case 1:
  2442  0087F4  0101               	movlb	(_DtKNF+14) shr (0+8)
  2443  0087F6  6BC2               	clrf	(_DtKNF+14)& (0+255),b
  2444  0087F8  D004               	goto	L2
  2445                           ;konfig.c: 519: DtKNF.czpr=0;
  2446                           ;konfig.c: 520: DtKNF.tpwm=0;
  2447                           ;konfig.c: 523: break;
  2448  0087FA                     l131:
  2449                           ;konfig.c: 524: }
  2450                           ;konfig.c: 526: {
  2451  0087FA  0E03               	movlw	3
  2452  0087FC  CFE8 F1C2          	movff	wreg,_DtKNF+14
  2453                           ;konfig.c: 528: DtKNF.czpr=0;
  2454  008800  0101               	movlb	(_DtKNF+12) shr (0+8)
  2455  008802                     L2:
  2456  008802  6BC0               	clrf	(_DtKNF+12)& (0+255),b
  2457                           ;konfig.c: 529: DtKNF.tpwm=0;
  2458  008804  6BC8               	clrf	(_DtKNF+20)& (0+255),b
  2459                           ;konfig.c: 532: break;
  2460  008806  D098               	goto	l127
  2461  008808                     l132:
  2462                           ;konfig.c: 533: }
  2463                           ;konfig.c: 536: {
  2464  008808  0101               	movlb	(_DtKNF+14) shr (0+8)
  2465  00880A  6BC2               	clrf	(_DtKNF+14)& (0+255),b
  2466  00880C  D07A               	goto	L11
  2467                           ;konfig.c: 548: DtKNF.tpwm=0;
  2468                           ;konfig.c: 549: DtKNF.mmin=16;
  2469                           ;konfig.c: 550: DtKNF.mmax=48;
  2470                           ;konfig.c: 551: break;
  2471  00880E                     l134:
  2472                           ;konfig.c: 552: }
  2473                           ;konfig.c: 554: {
  2474  00880E  0101               	movlb	(_DtKNF+14) shr (0+8)
  2475  008810  6BC2               	clrf	(_DtKNF+14)& (0+255),b
  2476  008812                     L12:
  2477                           ;konfig.c: 556: DtKNF.czpr=0;
  2478  008812  6BC0               	clrf	(_DtKNF+12)& (0+255),b
  2479                           ;konfig.c: 557: DtKNF.tpwm=0;
  2480  008814  6BC8               	clrf	(_DtKNF+20)& (0+255),b
  2481                           ;konfig.c: 558: DtKNF.mmin=16;
  2482  008816  0E10               	movlw	16
  2483  008818  CFE8 F1CB          	movff	wreg,_DtKNF+23
  2484                           ;konfig.c: 559: DtKNF.mmax=46;
  2485  00881C  0E2E               	movlw	46
  2486  00881E  D013               	goto	L6
  2487                           ;konfig.c: 560: break;
  2488  008820                     l135:
  2489                           ;konfig.c: 561: }
  2490                           ;konfig.c: 563: {
  2491  008820  0E03               	movlw	3
  2492  008822  CFE8 F1C2          	movff	wreg,_DtKNF+14
  2493                           ;konfig.c: 565: DtKNF.czpr=0;
  2494  008826  0101               	movlb	(_DtKNF+12) shr (0+8)
  2495  008828  6BC0               	clrf	(_DtKNF+12)& (0+255),b
  2496                           ;konfig.c: 566: DtKNF.tpwm=0;
  2497  00882A  6BC8               	clrf	(_DtKNF+20)& (0+255),b
  2498                           ;konfig.c: 567: DtKNF.mmin=16;
  2499  00882C  0E10               	movlw	16
  2500  00882E  CFE8 F1CB          	movff	wreg,_DtKNF+23
  2501                           ;konfig.c: 568: DtKNF.mmax=55;
  2502  008832  0E37               	movlw	55
  2503  008834  D008               	goto	L6
  2504                           ;konfig.c: 569: break;
  2505  008836                     l136:
  2506                           ;konfig.c: 570: }
  2507                           ;konfig.c: 572: {
  2508  008836  0101               	movlb	(_DtKNF+14) shr (0+8)
  2509  008838  6BC2               	clrf	(_DtKNF+14)& (0+255),b
  2510  00883A                     L7:
  2511  00883A  6BC0               	clrf	(_DtKNF+12)& (0+255),b
  2512                           ;konfig.c: 584: DtKNF.tpwm=0;
  2513  00883C  6BC8               	clrf	(_DtKNF+20)& (0+255),b
  2514                           ;konfig.c: 585: DtKNF.mmin=16;
  2515  00883E  0E10               	movlw	16
  2516  008840  CFE8 F1CB          	movff	wreg,_DtKNF+23
  2517                           ;konfig.c: 586: DtKNF.mmax=58;
  2518  008844  0E3A               	movlw	58
  2519                           ;konfig.c: 574: DtKNF.czpr=0;
  2520                           ;konfig.c: 575: DtKNF.tpwm=0;
  2521                           ;konfig.c: 576: DtKNF.mmin=16;
  2522                           ;konfig.c: 577: DtKNF.mmax=58;
  2523  008846                     L6:
  2524  008846  CFE8 F1CC          	movff	wreg,_DtKNF+24
  2525                           ;konfig.c: 578: break;
  2526  00884A  D076               	goto	l127
  2527  00884C                     l137:
  2528  00884C  D015               	goto	l143
  2529                           ;konfig.c: 579: }
  2530                           ;konfig.c: 581: {
  2531                           ;konfig.c: 583: DtKNF.czpr=0;
  2532                           ;konfig.c: 587: break;
  2533  00884E                     l138:
  2534                           ;konfig.c: 588: }
  2535                           ;konfig.c: 590: {
  2536  00884E  0101               	movlb	(_DtKNF+14) shr (0+8)
  2537  008850  6BC2               	clrf	(_DtKNF+14)& (0+255),b
  2538  008852  D004               	goto	L8
  2539                           ;konfig.c: 592: DtKNF.czpr=0;
  2540                           ;konfig.c: 593: DtKNF.tpwm=0;
  2541                           ;konfig.c: 594: DtKNF.mmin=16;
  2542                           ;konfig.c: 595: DtKNF.mmax=34;
  2543                           ;konfig.c: 596: break;
  2544  008854                     l139:
  2545                           ;konfig.c: 597: }
  2546                           ;konfig.c: 599: {
  2547  008854  0E03               	movlw	3
  2548  008856  CFE8 F1C2          	movff	wreg,_DtKNF+14
  2549                           ;konfig.c: 601: DtKNF.czpr=0;
  2550  00885A  0101               	movlb	(_DtKNF+12) shr (0+8)
  2551  00885C                     L8:
  2552  00885C  6BC0               	clrf	(_DtKNF+12)& (0+255),b
  2553                           ;konfig.c: 602: DtKNF.tpwm=0;
  2554  00885E  6BC8               	clrf	(_DtKNF+20)& (0+255),b
  2555                           ;konfig.c: 603: DtKNF.mmin=16;
  2556  008860  0E10               	movlw	16
  2557  008862  CFE8 F1CB          	movff	wreg,_DtKNF+23
  2558                           ;konfig.c: 604: DtKNF.mmax=34;
  2559  008866  0E22               	movlw	34
  2560  008868  D7EE               	goto	L6
  2561                           ;konfig.c: 605: break;
  2562  00886A                     l140:
  2563  00886A  D01F               	goto	l146
  2564                           ;konfig.c: 606: }
  2565                           ;konfig.c: 608: {
  2566                           ;konfig.c: 610: DtKNF.czpr=0;
  2567                           ;konfig.c: 611: DtKNF.tpwm=0;
  2568                           ;konfig.c: 612: DtKNF.mmin=16;
  2569                           ;konfig.c: 613: DtKNF.mmax=44;
  2570                           ;konfig.c: 614: break;
  2571  00886C                     l141:
  2572                           ;konfig.c: 615: }
  2573                           ;konfig.c: 617: {
  2574  00886C  0E03               	movlw	3
  2575  00886E  CFE8 F1C2          	movff	wreg,_DtKNF+14
  2576                           ;konfig.c: 619: DtKNF.czpr=0;
  2577  008872  0101               	movlb	(_DtKNF+12) shr (0+8)
  2578  008874  D01C               	goto	L10
  2579                           ;konfig.c: 620: DtKNF.tpwm=0;
  2580                           ;konfig.c: 621: DtKNF.mmin=16;
  2581                           ;konfig.c: 622: DtKNF.mmax=44;
  2582                           ;konfig.c: 623: break;
  2583  008876                     l142:
  2584  008876  D7C8               	goto	l132
  2585                           ;konfig.c: 624: }
  2586                           ;konfig.c: 626: {
  2587                           ;konfig.c: 628: DtKNF.czpr=0;
  2588                           ;konfig.c: 629: DtKNF.tpwm=0;
  2589                           ;konfig.c: 630: DtKNF.mmin=16;
  2590                           ;konfig.c: 631: DtKNF.mmax=48;
  2591                           ;konfig.c: 632: break;
  2592  008878                     l143:
  2593                           ;konfig.c: 633: }
  2594                           ;konfig.c: 635: {
  2595  008878  0E03               	movlw	3
  2596  00887A  CFE8 F1C2          	movff	wreg,_DtKNF+14
  2597                           ;konfig.c: 637: DtKNF.czpr=0;
  2598  00887E  0101               	movlb	(_DtKNF+12) shr (0+8)
  2599  008880  D7DC               	goto	L7
  2600                           ;konfig.c: 638: DtKNF.tpwm=0;
  2601                           ;konfig.c: 639: DtKNF.mmin=16;
  2602                           ;konfig.c: 640: DtKNF.mmax=58;
  2603                           ;konfig.c: 641: break;
  2604  008882                     l144:
  2605                           ;konfig.c: 642: }
  2606                           ;konfig.c: 644: {
  2607  008882  0101               	movlb	(_DtKNF+14) shr (0+8)
  2608  008884  6BC2               	clrf	(_DtKNF+14)& (0+255),b
  2609                           ;konfig.c: 646: DtKNF.czpr=0;
  2610  008886  6BC0               	clrf	(_DtKNF+12)& (0+255),b
  2611                           ;konfig.c: 647: DtKNF.tpwm=0;
  2612  008888  6BC8               	clrf	(_DtKNF+20)& (0+255),b
  2613                           ;konfig.c: 648: DtKNF.mmin=16;
  2614  00888A  0E10               	movlw	16
  2615  00888C  CFE8 F1CB          	movff	wreg,_DtKNF+23
  2616                           ;konfig.c: 649: DtKNF.mmax=32;
  2617  008890  0E20               	movlw	32
  2618  008892  D7D9               	goto	L6
  2619                           ;konfig.c: 650: break;
  2620  008894                     l145:
  2621                           ;konfig.c: 651: }
  2622                           ;konfig.c: 653: {
  2623  008894  0E03               	movlw	3
  2624  008896  CFE8 F1C2          	movff	wreg,_DtKNF+14
  2625                           ;konfig.c: 655: DtKNF.czpr=0;
  2626  00889A  0101               	movlb	(_DtKNF+12) shr (0+8)
  2627  00889C  6BC0               	clrf	(_DtKNF+12)& (0+255),b
  2628                           ;konfig.c: 656: DtKNF.tpwm=0;
  2629  00889E  6BC8               	clrf	(_DtKNF+20)& (0+255),b
  2630                           ;konfig.c: 657: DtKNF.mmin=16;
  2631  0088A0  0E10               	movlw	16
  2632  0088A2  CFE8 F1CB          	movff	wreg,_DtKNF+23
  2633                           ;konfig.c: 658: DtKNF.mmax=39;
  2634  0088A6  0E27               	movlw	39
  2635  0088A8  D7CE               	goto	L6
  2636                           ;konfig.c: 659: break;
  2637  0088AA                     l146:
  2638                           ;konfig.c: 660: }
  2639                           ;konfig.c: 662: {
  2640  0088AA  0101               	movlb	(_DtKNF+14) shr (0+8)
  2641  0088AC  6BC2               	clrf	(_DtKNF+14)& (0+255),b
  2642  0088AE                     L10:
  2643                           ;konfig.c: 664: DtKNF.czpr=0;
  2644  0088AE  6BC0               	clrf	(_DtKNF+12)& (0+255),b
  2645                           ;konfig.c: 665: DtKNF.tpwm=0;
  2646  0088B0  6BC8               	clrf	(_DtKNF+20)& (0+255),b
  2647                           ;konfig.c: 666: DtKNF.mmin=16;
  2648  0088B2  0E10               	movlw	16
  2649  0088B4  CFE8 F1CB          	movff	wreg,_DtKNF+23
  2650                           ;konfig.c: 667: DtKNF.mmax=44;
  2651  0088B8  0E2C               	movlw	44
  2652  0088BA  D7C5               	goto	L6
  2653                           ;konfig.c: 668: break;
  2654  0088BC                     l147:
  2655                           ;konfig.c: 669: }
  2656                           ;konfig.c: 671: {
  2657  0088BC  0E03               	movlw	3
  2658  0088BE  CFE8 F1C2          	movff	wreg,_DtKNF+14
  2659                           ;konfig.c: 673: DtKNF.czpr=0;
  2660  0088C2  0101               	movlb	(_DtKNF+12) shr (0+8)
  2661  0088C4  6BC0               	clrf	(_DtKNF+12)& (0+255),b
  2662                           ;konfig.c: 674: DtKNF.tpwm=0;
  2663  0088C6  6BC8               	clrf	(_DtKNF+20)& (0+255),b
  2664                           ;konfig.c: 675: DtKNF.mmin=16;
  2665  0088C8  0E10               	movlw	16
  2666  0088CA  CFE8 F1CB          	movff	wreg,_DtKNF+23
  2667                           ;konfig.c: 676: DtKNF.mmax=52;
  2668  0088CE  0E34               	movlw	52
  2669  0088D0  D7BA               	goto	L6
  2670                           ;konfig.c: 677: break;
  2671  0088D2                     l148:
  2672  0088D2  D79D               	goto	l134
  2673                           ;konfig.c: 678: }
  2674                           ;konfig.c: 680: {
  2675                           ;konfig.c: 682: DtKNF.czpr=0;
  2676                           ;konfig.c: 683: DtKNF.tpwm=0;
  2677                           ;konfig.c: 684: DtKNF.mmin=16;
  2678                           ;konfig.c: 685: DtKNF.mmax=46;
  2679                           ;konfig.c: 686: break;
  2680  0088D4                     l149:
  2681                           ;konfig.c: 687: }
  2682                           ;konfig.c: 689: {
  2683  0088D4  0E03               	movlw	3
  2684  0088D6  CFE8 F1C2          	movff	wreg,_DtKNF+14
  2685                           ;konfig.c: 691: DtKNF.czpr=0;
  2686  0088DA  0101               	movlb	(_DtKNF+12) shr (0+8)
  2687  0088DC  D79A               	goto	L12
  2688                           ;konfig.c: 692: DtKNF.tpwm=0;
  2689                           ;konfig.c: 693: DtKNF.mmin=16;
  2690                           ;konfig.c: 694: DtKNF.mmax=46;
  2691                           ;konfig.c: 695: break;
  2692  0088DE                     l150:
  2693                           ;konfig.c: 696: }
  2694                           ;konfig.c: 698: {
  2695  0088DE  0101               	movlb	(_DtKNF+14) shr (0+8)
  2696  0088E0  6BC2               	clrf	(_DtKNF+14)& (0+255),b
  2697  0088E2  D004               	goto	L13
  2698                           ;konfig.c: 700: DtKNF.czpr=0;
  2699                           ;konfig.c: 701: DtKNF.tpwm=0;
  2700                           ;konfig.c: 702: DtKNF.mmin=16;
  2701                           ;konfig.c: 703: DtKNF.mmax=54;
  2702                           ;konfig.c: 704: break;
  2703  0088E4                     l151:
  2704                           ;konfig.c: 705: }
  2705                           ;konfig.c: 707: {
  2706  0088E4  0E03               	movlw	3
  2707  0088E6  CFE8 F1C2          	movff	wreg,_DtKNF+14
  2708                           ;konfig.c: 709: DtKNF.czpr=0;
  2709  0088EA  0101               	movlb	(_DtKNF+12) shr (0+8)
  2710  0088EC                     L13:
  2711  0088EC  6BC0               	clrf	(_DtKNF+12)& (0+255),b
  2712                           ;konfig.c: 710: DtKNF.tpwm=0;
  2713  0088EE  6BC8               	clrf	(_DtKNF+20)& (0+255),b
  2714                           ;konfig.c: 711: DtKNF.mmin=16;
  2715  0088F0  0E10               	movlw	16
  2716  0088F2  CFE8 F1CB          	movff	wreg,_DtKNF+23
  2717                           ;konfig.c: 712: DtKNF.mmax=54;
  2718  0088F6  0E36               	movlw	54
  2719  0088F8  D7A6               	goto	L6
  2720                           ;konfig.c: 713: break;
  2721  0088FA                     l152:
  2722                           ;konfig.c: 538: DtKNF.czpr=0;
  2723                           ;konfig.c: 539: DtKNF.tpwm=0;
  2724                           ;konfig.c: 540: DtKNF.mmin=16;
  2725                           ;konfig.c: 541: DtKNF.mmax=48;
  2726                           ;konfig.c: 542: break;
  2727  0088FA                     l133:
  2728                           ;konfig.c: 543: }
  2729                           ;konfig.c: 545: {
  2730  0088FA  0E03               	movlw	3
  2731  0088FC  CFE8 F1C2          	movff	wreg,_DtKNF+14
  2732                           ;konfig.c: 547: DtKNF.czpr=0;
  2733  008900  0101               	movlb	(_DtKNF+12) shr (0+8)
  2734                           ;konfig.c: 714: }
  2735                           ;konfig.c: 716: {
  2736                           ;konfig.c: 718: DtKNF.czpr=0;
  2737  008902                     L11:
  2738  008902  6BC0               	clrf	(_DtKNF+12)& (0+255),b
  2739                           ;konfig.c: 719: DtKNF.tpwm=0;
  2740  008904  6BC8               	clrf	(_DtKNF+20)& (0+255),b
  2741                           ;konfig.c: 720: DtKNF.mmin=16;
  2742  008906  0E10               	movlw	16
  2743  008908  CFE8 F1CB          	movff	wreg,_DtKNF+23
  2744                           ;konfig.c: 721: DtKNF.mmax=48;
  2745  00890C  0E30               	movlw	48
  2746  00890E  D79B               	goto	L6
  2747                           ;konfig.c: 722: break;
  2748  008910                     l128:
  2749  008910  C1C1  FFE8         	movff	_DtKNF+13,wreg
  2750  008914  0F00               	addlw	0
  2751  008916  E6F1               	bmi	l152
  2752  008918  0FE9               	addlw	-23
  2753  00891A  E7EF               	bnn	l152
  2754  00891C  0F17               	addlw	23
  2755  00891E  0D02               	mullw	2
  2756  008920  0E30               	movlw	low S30004
  2757  008922  24F3               	addwf	prodl,w,c
  2758  008924  6EF6               	movwf	tblptrl,c
  2759  008926  0E10               	movlw	high S30004
  2760  008928  20F4               	addwfc	prodh,w,c
  2761  00892A  6EF7               	movwf	tblptrh,c
  2762  00892C  0009               	tblrd		*+
  2763  00892E  50F5               	movf	tablat,w,c
  2764  008930  0009               	tblrd		*+
  2765  008932  CFF5 FFFA          	movff	tablat,pclath
  2766  008936  6EF9               	movwf	pcl,c
  2767  008938                     l127:
  2768                           ;konfig.c: 725: BitSet2(&RSDT1.outKSTAT0,1,(DtKN
      +                          F.tpkt==0)?1:0);
  2769  008938  0100               	movlb	__Lparam shr (0+8)
  2770  00893A  0E44               	movlw	low (_RSDT1+30)
  2771  00893C  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2772  00893E  0E03               	movlw	high (_RSDT1+30)
  2773  008940  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2774  008942  0E01               	movlw	1
  2775  008944  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2776  008946  EE01  F0C2         	lfsr	0,_DtKNF+14
  2777  00894A  50EF               	movf	indf0,w,c
  2778  00894C  0E00               	movlw	0
  2779  00894E  B4D8               	btfsc	status,2,c
  2780  008950                     L18:
  2781  008950  0E01               	movlw	1
  2782  008952  6FAD               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2783  008954  EF57  F06A         	goto	_BitSet2	;wreg free
  2784                           ;konfig.c: 726: }
  2785  008958                     __end_of_SetTpKtParam:
  2786                           ;konfig.c: 730: void SetPFN(void)
  2787                           ;konfig.c: 731: {
  2788  008958                     _SetPFN:
  2789  000000                     
  2790                           ;konfig.c: 732: if(PFN.poz==1)
  2791  008958  0100               	movlb	(_PFN+1) shr (0+8)
  2792  00895A  516C               	movf	(_PFN+1)& (0+255),w,b
  2793  00895C  0A01               	xorlw	1
  2794  00895E  116D               	iorwf	(_PFN+2)& (0+255),w,b
  2795  008960  E121               	bnz	l154
  2796                           ;konfig.c: 733: {
  2797  008962  0100               	movlb	_PFN shr (0+8)
  2798  008964  996B               	bcf	_PFN& (0+255),4,b
  2799                           ;konfig.c: 735: PFN._lato=0;
  2800  008966  976B               	bcf	_PFN& (0+255),3,b
  2801                           ;konfig.c: 736: PFN._off=1;
  2802  008968  856B               	bsf	_PFN& (0+255),2,b
  2803                           ;konfig.c: 737: PFN._csn=0;
  2804  00896A  936B               	bcf	_PFN& (0+255),1,b
  2805                           ;konfig.c: 738: BitSet2(&RSDT1.outSTAT2,4,0);
  2806  00896C  0100               	movlb	__Lparam shr (0+8)
  2807  00896E  0E3E               	movlw	low (_RSDT1+24)
  2808  008970  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2809  008972  0E03               	movlw	high (_RSDT1+24)
  2810  008974  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2811  008976  0E04               	movlw	4
  2812  008978  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2813  00897A  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2814  00897C  EC57  F06A         	call	_BitSet2	;wreg free
  2815                           ;konfig.c: 739: BitSet2(&RSDT1.outSTAT2,5,0);
  2816  008980  0100               	movlb	__Lparam shr (0+8)
  2817  008982  0E3E               	movlw	low (_RSDT1+24)
  2818  008984  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2819  008986  0E03               	movlw	high (_RSDT1+24)
  2820  008988  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2821  00898A  0E05               	movlw	5
  2822  00898C  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2823  00898E  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2824  008990  EC57  F06A         	call	_BitSet2	;wreg free
  2825                           ;konfig.c: 740: BitSet2(&RSDT1.outSTAT2,6,1);
  2826  008994  0100               	movlb	__Lparam shr (0+8)
  2827  008996  0E3E               	movlw	low (_RSDT1+24)
  2828  008998  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2829  00899A  0E03               	movlw	high (_RSDT1+24)
  2830  00899C  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2831  00899E  0E06               	movlw	6
  2832  0089A0  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2833  0089A2  D7D6               	goto	L18
  2834                           ;konfig.c: 741: }
  2835  0089A4                     l154:
  2836                           ;konfig.c: 742: else
  2837  0089A4  0100               	movlb	(_PFN+1) shr (0+8)
  2838  0089A6  516C               	movf	(_PFN+1)& (0+255),w,b
  2839  0089A8  0A03               	xorlw	3
  2840  0089AA  116D               	iorwf	(_PFN+2)& (0+255),w,b
  2841  0089AC  E11B               	bnz	l156
  2842                           ;konfig.c: 744: {
  2843  0089AE  0100               	movlb	_PFN shr (0+8)
  2844  0089B0  896B               	bsf	_PFN& (0+255),4,b
  2845                           ;konfig.c: 746: PFN._lato=0;
  2846  0089B2  976B               	bcf	_PFN& (0+255),3,b
  2847                           ;konfig.c: 747: PFN._off=0;
  2848  0089B4  956B               	bcf	_PFN& (0+255),2,b
  2849                           ;konfig.c: 748: PFN._csn=0;
  2850  0089B6  936B               	bcf	_PFN& (0+255),1,b
  2851                           ;konfig.c: 749: BitSet2(&RSDT1.outSTAT2,4,1);
  2852  0089B8  0100               	movlb	__Lparam shr (0+8)
  2853  0089BA  0E3E               	movlw	low (_RSDT1+24)
  2854  0089BC  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2855  0089BE  0E03               	movlw	high (_RSDT1+24)
  2856  0089C0  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2857  0089C2  0E04               	movlw	4
  2858  0089C4  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2859  0089C6  0E01               	movlw	1
  2860  0089C8  6FAD               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2861  0089CA  EC57  F06A         	call	_BitSet2	;wreg free
  2862                           ;konfig.c: 750: BitSet2(&RSDT1.outSTAT2,5,0);
  2863  0089CE  0100               	movlb	__Lparam shr (0+8)
  2864  0089D0  0E3E               	movlw	low (_RSDT1+24)
  2865  0089D2  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2866  0089D4  0E03               	movlw	high (_RSDT1+24)
  2867  0089D6  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2868  0089D8  0E05               	movlw	5
  2869  0089DA  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2870  0089DC  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2871  0089DE  EC57  F06A         	call	_BitSet2	;wreg free
  2872  0089E2  D03E               	goto	L20
  2873                           ;konfig.c: 751: BitSet2(&RSDT1.outSTAT2,6,0);
  2874                           ;konfig.c: 752: }
  2875  0089E4                     l156:
  2876                           ;konfig.c: 753: else
  2877  0089E4  0100               	movlb	(_PFN+1) shr (0+8)
  2878  0089E6  516C               	movf	(_PFN+1)& (0+255),w,b
  2879  0089E8  0A02               	xorlw	2
  2880  0089EA  116D               	iorwf	(_PFN+2)& (0+255),w,b
  2881                           ;konfig.c: 755: {
  2882  0089EC  0100               	movlb	_PFN shr (0+8)
  2883  0089EE  E11A               	bnz	L15
  2884  0089F0  996B               	bcf	_PFN& (0+255),4,b
  2885                           ;konfig.c: 757: PFN._lato=1;
  2886  0089F2  876B               	bsf	_PFN& (0+255),3,b
  2887                           ;konfig.c: 758: PFN._off=0;
  2888  0089F4  956B               	bcf	_PFN& (0+255),2,b
  2889                           ;konfig.c: 759: PFN._csn=0;
  2890  0089F6  936B               	bcf	_PFN& (0+255),1,b
  2891                           ;konfig.c: 760: BitSet2(&RSDT1.outSTAT2,4,0);
  2892  0089F8  0100               	movlb	__Lparam shr (0+8)
  2893  0089FA  0E3E               	movlw	low (_RSDT1+24)
  2894  0089FC  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2895  0089FE  0E03               	movlw	high (_RSDT1+24)
  2896  008A00  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2897  008A02  0E04               	movlw	4
  2898  008A04  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2899  008A06  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2900  008A08  EC57  F06A         	call	_BitSet2	;wreg free
  2901                           ;konfig.c: 761: BitSet2(&RSDT1.outSTAT2,5,1);
  2902  008A0C  0100               	movlb	__Lparam shr (0+8)
  2903  008A0E  0E3E               	movlw	low (_RSDT1+24)
  2904  008A10  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2905  008A12  0E03               	movlw	high (_RSDT1+24)
  2906  008A14  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2907  008A16  0E05               	movlw	5
  2908  008A18  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2909  008A1A  0E01               	movlw	1
  2910  008A1C  6FAD               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2911  008A1E  EC57  F06A         	call	_BitSet2	;wreg free
  2912  008A22  D01E               	goto	L20
  2913                           ;konfig.c: 762: BitSet2(&RSDT1.outSTAT2,6,0);
  2914                           ;konfig.c: 763: }
  2915                           ;konfig.c: 764: else
  2916  008A24                     L15:
  2917  008A24  896B               	bsf	_PFN& (0+255),4,b
  2918                           ;konfig.c: 767: PFN._lato=0;
  2919  008A26  0100               	movlb	_PFN shr (0+8)
  2920  008A28  976B               	bcf	_PFN& (0+255),3,b
  2921                           ;konfig.c: 768: PFN._off=0;
  2922  008A2A  956B               	bcf	_PFN& (0+255),2,b
  2923                           ;konfig.c: 769: PFN._csn=0;
  2924  008A2C  936B               	bcf	_PFN& (0+255),1,b
  2925                           ;konfig.c: 770: PFN.poz=3;
  2926  008A2E  0100               	movlb	(_PFN+1) shr (0+8)
  2927  008A30  0E03               	movlw	3
  2928  008A32  6F6C               	movwf	(_PFN+1)& (0+255),b
  2929  008A34  6B6D               	clrf	(_PFN+2)& (0+255),b
  2930                           ;konfig.c: 771: BitSet2(&RSDT1.outSTAT2,4,1);
  2931  008A36  0100               	movlb	__Lparam shr (0+8)
  2932  008A38  0E3E               	movlw	low (_RSDT1+24)
  2933  008A3A  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2934  008A3C  0E03               	movlw	high (_RSDT1+24)
  2935  008A3E  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2936  008A40  0E04               	movlw	4
  2937  008A42  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2938  008A44  0E01               	movlw	1
  2939  008A46  6FAD               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2940  008A48  EC57  F06A         	call	_BitSet2	;wreg free
  2941                           ;konfig.c: 772: BitSet2(&RSDT1.outSTAT2,5,0);
  2942  008A4C  0100               	movlb	__Lparam shr (0+8)
  2943  008A4E  0E3E               	movlw	low (_RSDT1+24)
  2944  008A50  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2945  008A52  0E03               	movlw	high (_RSDT1+24)
  2946  008A54  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2947  008A56  0E05               	movlw	5
  2948  008A58  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2949  008A5A  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2950  008A5C  EC57  F06A         	call	_BitSet2	;wreg free
  2951  008A60                     L20:
  2952                           ;konfig.c: 773: BitSet2(&RSDT1.outSTAT2,6,0);
  2953  008A60  0100               	movlb	__Lparam shr (0+8)
  2954  008A62  0E3E               	movlw	low (_RSDT1+24)
  2955  008A64  6FAA               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2956  008A66  0E03               	movlw	high (_RSDT1+24)
  2957  008A68  6FAB               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2958  008A6A  0E06               	movlw	6
  2959  008A6C  6FAC               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2960  008A6E  6BAD               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2961  008A70  EF57  F06A         	goto	_BitSet2	;wreg free
  2962                           ;konfig.c: 774: }
  2963  008A74                     __end_of_SetPFN:
  2964                           ;konfig.c: 779: void WriteEEPCW(void)
  2965                           ;konfig.c: 780: {
  2966  008A74                     _WriteEEPCW:
  2967  000000                     
  2968                           ;konfig.c: 781: eeprom_write(0x00CA,DtCW.PCW);
  2969  008A74  0ECA               	movlw	202
  2970  008A76  0100               	movlb	__Lparam shr (0+8)
  2971  008A78  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  2972  008A7A  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  2973  008A7C  C073  F0AC         	movff	_DtCW+3,?_eeprom_write+2
  2974  008A80  EF13  F06D         	goto	_eeprom_write	;wreg free
  2975                           ;konfig.c: 782: }
  2976  008A84                     __end_of_WriteEEPCW:
  2977                           ;konfig.c: 783: unsigned char ReadEEPCW(void)
  2978                           ;konfig.c: 784: {
  2979  008A84                     _ReadEEPCW:
  2980  000000                     
  2981                           ;konfig.c: 785: return eeprom_read(0x00CA);
  2982  008A84  0ECA               	movlw	202
  2983  008A86  D0CF               	goto	L48
  2984                           ;konfig.c: 786: }
  2985  008A88                     __end_of_ReadEEPCW:
  2986                           ;konfig.c: 790: void WriteEEPCO(void)
  2987                           ;konfig.c: 791: {
  2988  008A88                     _WriteEEPCO:
  2989  000000                     
  2990  008A88                     L17:
  2991                           ;konfig.c: 792: eeprom_write(0x00C9,DtCO.PCO);
  2992  008A88  0EC9               	movlw	201
  2993  008A8A  0100               	movlb	__Lparam shr (0+8)
  2994  008A8C  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  2995  008A8E  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  2996  008A90  C083  F0AC         	movff	_DtCO+4,?_eeprom_write+2
  2997  008A94  EF13  F06D         	goto	_eeprom_write	;wreg free
  2998                           ;konfig.c: 793: }
  2999  008A98                     __end_of_WriteEEPCO:
  3000                           ;konfig.c: 794: unsigned char ReadEEPCO(void)
  3001                           ;konfig.c: 795: {
  3002  008A98                     _ReadEEPCO:
  3003  000000                     
  3004                           ;konfig.c: 796: return eeprom_read(0x00C9);
  3005  008A98  0EC9               	movlw	201
  3006  008A9A  D0C5               	goto	L48
  3007                           ;konfig.c: 797: }
  3008  008A9C                     __end_of_ReadEEPCO:
  3009                           ;konfig.c: 801: void WriteEEECO(void)
  3010                           ;konfig.c: 802: {
  3011  008A9C                     _WriteEEECO:
  3012  000000                     
  3013                           ;konfig.c: 803: eeprom_write(0x00D4,DtIN.Eco);
  3014  008A9C  0ED4               	movlw	212
  3015  008A9E  0100               	movlb	__Lparam shr (0+8)
  3016  008AA0  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3017  008AA2  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3018  008AA4  C09B  F0AC         	movff	_DtIN+9,?_eeprom_write+2
  3019  008AA8  EF13  F06D         	goto	_eeprom_write	;wreg free
  3020                           ;konfig.c: 804: }
  3021  008AAC                     __end_of_WriteEEECO:
  3022                           ;konfig.c: 805: unsigned char ReadEEECO(void)
  3023                           ;konfig.c: 806: {
  3024  008AAC                     _ReadEEECO:
  3025  000000                     
  3026                           ;konfig.c: 807: return eeprom_read(0x00D4);
  3027  008AAC  0ED4               	movlw	212
  3028  008AAE  D0BB               	goto	L48
  3029                           ;konfig.c: 808: }
  3030  008AB0                     __end_of_ReadEEECO:
  3031                           ;konfig.c: 812: void WriteEEPFN(void)
  3032                           ;konfig.c: 813: {
  3033  008AB0                     _WriteEEPFN:
  3034  000000                     
  3035                           ;konfig.c: 814: eeprom_write(0x00CB,PFN.poz);
  3036  008AB0  0ECB               	movlw	203
  3037  008AB2  0100               	movlb	__Lparam shr (0+8)
  3038  008AB4  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3039  008AB6  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3040  008AB8  C06C  F0AC         	movff	_PFN+1,?_eeprom_write+2
  3041  008ABC  EF13  F06D         	goto	_eeprom_write	;wreg free
  3042                           ;konfig.c: 815: }
  3043  008AC0                     __end_of_WriteEEPFN:
  3044                           ;konfig.c: 816: unsigned char ReadEEPFN(void)
  3045                           ;konfig.c: 817: {
  3046  008AC0                     _ReadEEPFN:
  3047  000000                     
  3048                           ;konfig.c: 818: return eeprom_read(0x00CB);
  3049  008AC0  0ECB               	movlw	203
  3050  008AC2  D0B1               	goto	L48
  3051                           ;konfig.c: 819: }
  3052  008AC4                     __end_of_ReadEEPFN:
  3053                           ;konfig.c: 823: void WriteEEALIN(unsigned char d
      +                          )
  3054                           ;konfig.c: 824: {
  3055  008AC4                     _WriteEEALIN:
  3056  000000                     
  3057                           ; _d loaded to fsr2l
  3058  008AC4  6ED9               	movwf	fsr2l,c
  3059                           ;konfig.c: 825: eeprom_write(0x00D8,d);
  3060  008AC6  0ED8               	movlw	216
  3061  008AC8  0100               	movlb	__Lparam shr (0+8)
  3062  008ACA  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3063  008ACC  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3064  008ACE  50D9               	movf	fsr2l,w,c
  3065  008AD0  D0A4               	goto	L45
  3066                           ;konfig.c: 826: }
  3067  008AD2                     __end_of_WriteEEALIN:
  3068                           ;konfig.c: 827: unsigned char ReadEEALIN(void)
  3069                           ;konfig.c: 828: {
  3070  008AD2                     _ReadEEALIN:
  3071  000000                     
  3072                           ;konfig.c: 829: return eeprom_read(0x00D8);
  3073  008AD2  0ED8               	movlw	216
  3074  008AD4  D0A8               	goto	L48
  3075                           ;konfig.c: 830: }
  3076  008AD6                     __end_of_ReadEEALIN:
  3077                           ;konfig.c: 834: void ClearEETA(void)
  3078                           ;konfig.c: 835: {
  3079  008AD6                     _ClearEETA:
  3080  000000                     
  3081                           ;konfig.c: 836: eeprom_write(0x00C7,0);
  3082  008AD6  0EC7               	movlw	199
  3083  008AD8  0100               	movlb	__Lparam shr (0+8)
  3084  008ADA  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3085  008ADC  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3086  008ADE  6BAC               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
  3087  008AE0  EF13  F06D         	goto	_eeprom_write	;wreg free
  3088                           ;konfig.c: 837: }
  3089  008AE4                     __end_of_ClearEETA:
  3090                           ;konfig.c: 842: void WriteEEVNT0(unsigned char v
      +                          ,unsigned char p)
  3091                           ;konfig.c: 843: {
  3092  008AE4  00A9               	dw	?_WriteEEVNT0
  3093  008AE6                     _WriteEEVNT0:
  3094  000000                     
  3095                           ; _v loaded to fsr2l
  3096  008AE6  6ED9               	movwf	fsr2l,c
  3097                           ;konfig.c: 844: eeprom_write(0x00E0,v);
  3098  008AE8  0EE0               	movlw	224
  3099  008AEA  0100               	movlb	__Lparam shr (0+8)
  3100  008AEC  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3101  008AEE  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3102  008AF0  50D9               	movf	fsr2l,w,c
  3103  008AF2  6FAC               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  3104  008AF4  EC13  F06D         	call	_eeprom_write	;wreg free
  3105                           ;konfig.c: 845: eeprom_write(0x00E1,p);
  3106  008AF8  0EE1               	movlw	225
  3107  008AFA  0100               	movlb	__Lparam shr (0+8)
  3108  008AFC  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3109  008AFE  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3110  008B00  51A9               	movf	?_WriteEEVNT0^(__Lparam& (0+65280)),w
  3111  008B02  D08B               	goto	L45
  3112                           ;konfig.c: 846: }
  3113  008B04                     __end_of_WriteEEVNT0:
  3114                           ;konfig.c: 847: unsigned char ReadEEVNT0_V()
  3115                           ;konfig.c: 848: {
  3116  008B04                     _ReadEEVNT0_V:
  3117  000000                     
  3118                           ;konfig.c: 849: return eeprom_read(0x00E0);
  3119  008B04  0EE0               	movlw	224
  3120  008B06  D08F               	goto	L48
  3121                           ;konfig.c: 850: }
  3122  008B08                     __end_of_ReadEEVNT0_V:
  3123                           ;konfig.c: 851: unsigned char ReadEEVNT0_P()
  3124                           ;konfig.c: 852: {
  3125  008B08                     _ReadEEVNT0_P:
  3126  000000                     
  3127                           ;konfig.c: 853: return eeprom_read(0x00E1);
  3128  008B08  0EE1               	movlw	225
  3129  008B0A  D08D               	goto	L48
  3130                           ;konfig.c: 854: }
  3131  008B0C                     __end_of_ReadEEVNT0_P:
  3132                           ;konfig.c: 856: void WriteEEVNT1(unsigned char v
      +                          ,unsigned char p)
  3133                           ;konfig.c: 857: {
  3134  008B0C  00A9               	dw	?_WriteEEVNT1
  3135  008B0E                     _WriteEEVNT1:
  3136  000000                     
  3137                           ; _v loaded to fsr2l
  3138  008B0E  6ED9               	movwf	fsr2l,c
  3139                           ;konfig.c: 858: eeprom_write(0x00E2,v);
  3140  008B10  0EE2               	movlw	226
  3141  008B12  0100               	movlb	__Lparam shr (0+8)
  3142  008B14  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3143  008B16  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3144  008B18  50D9               	movf	fsr2l,w,c
  3145  008B1A  6FAC               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  3146  008B1C  EC13  F06D         	call	_eeprom_write	;wreg free
  3147                           ;konfig.c: 859: eeprom_write(0x00E3,p);
  3148  008B20  0EE3               	movlw	227
  3149  008B22  0100               	movlb	__Lparam shr (0+8)
  3150  008B24  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3151  008B26  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3152  008B28  51A9               	movf	?_WriteEEVNT1^(__Lparam& (0+65280)),w
  3153  008B2A  D077               	goto	L45
  3154                           ;konfig.c: 860: }
  3155  008B2C                     __end_of_WriteEEVNT1:
  3156                           ;konfig.c: 861: unsigned char ReadEEVNT1_V()
  3157                           ;konfig.c: 862: {
  3158  008B2C                     _ReadEEVNT1_V:
  3159  000000                     
  3160                           ;konfig.c: 863: return eeprom_read(0x00E2);
  3161  008B2C  0EE2               	movlw	226
  3162  008B2E  D07B               	goto	L48
  3163                           ;konfig.c: 864: }
  3164  008B30                     __end_of_ReadEEVNT1_V:
  3165                           ;konfig.c: 865: unsigned char ReadEEVNT1_P()
  3166                           ;konfig.c: 866: {
  3167  008B30                     _ReadEEVNT1_P:
  3168  000000                     
  3169                           ;konfig.c: 867: return eeprom_read(0x00E3);
  3170  008B30  0EE3               	movlw	227
  3171  008B32  D079               	goto	L48
  3172                           ;konfig.c: 868: }
  3173  008B34                     __end_of_ReadEEVNT1_P:
  3174                           ;konfig.c: 870: void WriteEEVNT2(unsigned char v
      +                          ,unsigned char p)
  3175                           ;konfig.c: 871: {
  3176  008B34  00A9               	dw	?_WriteEEVNT2
  3177  008B36                     _WriteEEVNT2:
  3178  000000                     
  3179                           ; _v loaded to fsr2l
  3180  008B36  6ED9               	movwf	fsr2l,c
  3181                           ;konfig.c: 872: eeprom_write(0x00E4,v);
  3182  008B38  0EE4               	movlw	228
  3183  008B3A  0100               	movlb	__Lparam shr (0+8)
  3184  008B3C  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3185  008B3E  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3186  008B40  50D9               	movf	fsr2l,w,c
  3187  008B42  6FAC               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  3188  008B44  EC13  F06D         	call	_eeprom_write	;wreg free
  3189                           ;konfig.c: 873: eeprom_write(0x00E5,p);
  3190  008B48  0EE5               	movlw	229
  3191  008B4A  0100               	movlb	__Lparam shr (0+8)
  3192  008B4C  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3193  008B4E  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3194  008B50  51A9               	movf	?_WriteEEVNT2^(__Lparam& (0+65280)),w
  3195  008B52  D063               	goto	L45
  3196                           ;konfig.c: 874: }
  3197  008B54                     __end_of_WriteEEVNT2:
  3198                           ;konfig.c: 875: unsigned char ReadEEVNT2_V()
  3199                           ;konfig.c: 876: {
  3200  008B54                     _ReadEEVNT2_V:
  3201  000000                     
  3202                           ;konfig.c: 877: return eeprom_read(0x00E4);
  3203  008B54  0EE4               	movlw	228
  3204  008B56  D067               	goto	L48
  3205                           ;konfig.c: 878: }
  3206  008B58                     __end_of_ReadEEVNT2_V:
  3207                           ;konfig.c: 879: unsigned char ReadEEVNT2_P()
  3208                           ;konfig.c: 880: {
  3209  008B58                     _ReadEEVNT2_P:
  3210  000000                     
  3211                           ;konfig.c: 881: return eeprom_read(0x00E5);
  3212  008B58  0EE5               	movlw	229
  3213  008B5A  D065               	goto	L48
  3214                           ;konfig.c: 882: }
  3215  008B5C                     __end_of_ReadEEVNT2_P:
  3216                           ;konfig.c: 884: void WriteEEVNT3(unsigned char v
      +                          ,unsigned char p)
  3217                           ;konfig.c: 885: {
  3218  008B5C  00A9               	dw	?_WriteEEVNT3
  3219  008B5E                     _WriteEEVNT3:
  3220  000000                     
  3221                           ; _v loaded to fsr2l
  3222  008B5E  6ED9               	movwf	fsr2l,c
  3223                           ;konfig.c: 886: eeprom_write(0x00E6,v);
  3224  008B60  0EE6               	movlw	230
  3225  008B62  0100               	movlb	__Lparam shr (0+8)
  3226  008B64  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3227  008B66  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3228  008B68  50D9               	movf	fsr2l,w,c
  3229  008B6A  6FAC               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  3230  008B6C  EC13  F06D         	call	_eeprom_write	;wreg free
  3231                           ;konfig.c: 887: eeprom_write(0x00E7,p);
  3232  008B70  0EE7               	movlw	231
  3233  008B72  0100               	movlb	__Lparam shr (0+8)
  3234  008B74  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3235  008B76  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3236  008B78  51A9               	movf	?_WriteEEVNT3^(__Lparam& (0+65280)),w
  3237  008B7A  D04F               	goto	L45
  3238                           ;konfig.c: 888: }
  3239  008B7C                     __end_of_WriteEEVNT3:
  3240                           ;konfig.c: 889: unsigned char ReadEEVNT3_V()
  3241                           ;konfig.c: 890: {
  3242  008B7C                     _ReadEEVNT3_V:
  3243  000000                     
  3244                           ;konfig.c: 891: return eeprom_read(0x00E6);
  3245  008B7C  0EE6               	movlw	230
  3246  008B7E  D053               	goto	L48
  3247                           ;konfig.c: 892: }
  3248  008B80                     __end_of_ReadEEVNT3_V:
  3249                           ;konfig.c: 893: unsigned char ReadEEVNT3_P()
  3250                           ;konfig.c: 894: {
  3251  008B80                     _ReadEEVNT3_P:
  3252  000000                     
  3253                           ;konfig.c: 895: return eeprom_read(0x00E7);
  3254  008B80  0EE7               	movlw	231
  3255  008B82  D051               	goto	L48
  3256                           ;konfig.c: 896: }
  3257  008B84                     __end_of_ReadEEVNT3_P:
  3258                           ;konfig.c: 898: void WriteEEVNT4(unsigned char v
      +                          ,unsigned char p)
  3259                           ;konfig.c: 899: {
  3260  008B84  00A9               	dw	?_WriteEEVNT4
  3261  008B86                     _WriteEEVNT4:
  3262  000000                     
  3263                           ; _v loaded to fsr2l
  3264  008B86  6ED9               	movwf	fsr2l,c
  3265                           ;konfig.c: 900: eeprom_write(0x00E8,v);
  3266  008B88  0EE8               	movlw	232
  3267  008B8A  0100               	movlb	__Lparam shr (0+8)
  3268  008B8C  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3269  008B8E  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3270  008B90  50D9               	movf	fsr2l,w,c
  3271  008B92  6FAC               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  3272  008B94  EC13  F06D         	call	_eeprom_write	;wreg free
  3273                           ;konfig.c: 901: eeprom_write(0x00E9,p);
  3274  008B98  0EE9               	movlw	233
  3275  008B9A  0100               	movlb	__Lparam shr (0+8)
  3276  008B9C  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3277  008B9E  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3278  008BA0  51A9               	movf	?_WriteEEVNT4^(__Lparam& (0+65280)),w
  3279  008BA2  D03B               	goto	L45
  3280                           ;konfig.c: 902: }
  3281  008BA4                     __end_of_WriteEEVNT4:
  3282                           ;konfig.c: 903: unsigned char ReadEEVNT4_V()
  3283                           ;konfig.c: 904: {
  3284  008BA4                     _ReadEEVNT4_V:
  3285  000000                     
  3286                           ;konfig.c: 905: return eeprom_read(0x00E8);
  3287  008BA4  0EE8               	movlw	232
  3288  008BA6  D03F               	goto	L48
  3289                           ;konfig.c: 906: }
  3290  008BA8                     __end_of_ReadEEVNT4_V:
  3291                           ;konfig.c: 907: unsigned char ReadEEVNT4_P()
  3292                           ;konfig.c: 908: {
  3293  008BA8                     _ReadEEVNT4_P:
  3294  000000                     
  3295                           ;konfig.c: 909: return eeprom_read(0x00E9);
  3296  008BA8  0EE9               	movlw	233
  3297  008BAA  D03D               	goto	L48
  3298                           ;konfig.c: 910: }
  3299  008BAC                     __end_of_ReadEEVNT4_P:
  3300                           ;konfig.c: 912: void WriteEEVNT5(unsigned char v
      +                          ,unsigned char p)
  3301                           ;konfig.c: 913: {
  3302  008BAC  00A9               	dw	?_WriteEEVNT5
  3303  008BAE                     _WriteEEVNT5:
  3304  000000                     
  3305                           ; _v loaded to fsr2l
  3306  008BAE  6ED9               	movwf	fsr2l,c
  3307                           ;konfig.c: 914: eeprom_write(0x00EA,v);
  3308  008BB0  0EEA               	movlw	234
  3309  008BB2  0100               	movlb	__Lparam shr (0+8)
  3310  008BB4  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3311  008BB6  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3312  008BB8  50D9               	movf	fsr2l,w,c
  3313  008BBA  6FAC               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  3314  008BBC  EC13  F06D         	call	_eeprom_write	;wreg free
  3315                           ;konfig.c: 915: eeprom_write(0x00EB,p);
  3316  008BC0  0EEB               	movlw	235
  3317  008BC2  0100               	movlb	__Lparam shr (0+8)
  3318  008BC4  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3319  008BC6  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3320  008BC8  51A9               	movf	?_WriteEEVNT5^(__Lparam& (0+65280)),w
  3321  008BCA  D027               	goto	L45
  3322                           ;konfig.c: 916: }
  3323  008BCC                     __end_of_WriteEEVNT5:
  3324                           ;konfig.c: 917: unsigned char ReadEEVNT5_V()
  3325                           ;konfig.c: 918: {
  3326  008BCC                     _ReadEEVNT5_V:
  3327  000000                     
  3328                           ;konfig.c: 919: return eeprom_read(0x00EA);
  3329  008BCC  0EEA               	movlw	234
  3330  008BCE  D02B               	goto	L48
  3331                           ;konfig.c: 920: }
  3332  008BD0                     __end_of_ReadEEVNT5_V:
  3333                           ;konfig.c: 921: unsigned char ReadEEVNT5_P()
  3334                           ;konfig.c: 922: {
  3335  008BD0                     _ReadEEVNT5_P:
  3336  000000                     
  3337                           ;konfig.c: 923: return eeprom_read(0x00EB);
  3338  008BD0  0EEB               	movlw	235
  3339  008BD2  D029               	goto	L48
  3340                           ;konfig.c: 924: }
  3341  008BD4                     __end_of_ReadEEVNT5_P:
  3342                           ;konfig.c: 926: void WriteEEVNT6(unsigned char v
      +                          ,unsigned char p)
  3343                           ;konfig.c: 927: {
  3344  008BD4  00A9               	dw	?_WriteEEVNT6
  3345  008BD6                     _WriteEEVNT6:
  3346  000000                     
  3347                           ; _v loaded to fsr2l
  3348  008BD6  6ED9               	movwf	fsr2l,c
  3349                           ;konfig.c: 928: eeprom_write(0x00EC,v);
  3350  008BD8  0EEC               	movlw	236
  3351  008BDA  0100               	movlb	__Lparam shr (0+8)
  3352  008BDC  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3353  008BDE  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3354  008BE0  50D9               	movf	fsr2l,w,c
  3355  008BE2  6FAC               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  3356  008BE4  EC13  F06D         	call	_eeprom_write	;wreg free
  3357                           ;konfig.c: 929: eeprom_write(0x00ED,p);
  3358  008BE8  0EED               	movlw	237
  3359  008BEA  0100               	movlb	__Lparam shr (0+8)
  3360  008BEC  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3361  008BEE  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3362  008BF0  51A9               	movf	?_WriteEEVNT6^(__Lparam& (0+65280)),w
  3363  008BF2  D013               	goto	L45
  3364                           ;konfig.c: 930: }
  3365  008BF4                     __end_of_WriteEEVNT6:
  3366                           ;konfig.c: 931: unsigned char ReadEEVNT6_V()
  3367                           ;konfig.c: 932: {
  3368  008BF4                     _ReadEEVNT6_V:
  3369  000000                     
  3370                           ;konfig.c: 933: return eeprom_read(0x00EC);
  3371  008BF4  0EEC               	movlw	236
  3372  008BF6  D017               	goto	L48
  3373                           ;konfig.c: 934: }
  3374  008BF8                     __end_of_ReadEEVNT6_V:
  3375                           ;konfig.c: 935: unsigned char ReadEEVNT6_P()
  3376                           ;konfig.c: 936: {
  3377  008BF8                     _ReadEEVNT6_P:
  3378  000000                     
  3379                           ;konfig.c: 937: return eeprom_read(0x00ED);
  3380  008BF8  0EED               	movlw	237
  3381  008BFA  D015               	goto	L48
  3382                           ;konfig.c: 938: }
  3383  008BFC                     __end_of_ReadEEVNT6_P:
  3384                           ;konfig.c: 940: void WriteEEVNT7(unsigned char v
      +                          ,unsigned char p)
  3385                           ;konfig.c: 941: {
  3386  008BFC  00A9               	dw	?_WriteEEVNT7
  3387  008BFE                     _WriteEEVNT7:
  3388  000000                     
  3389                           ; _v loaded to fsr2l
  3390  008BFE  6ED9               	movwf	fsr2l,c
  3391                           ;konfig.c: 942: eeprom_write(0x00EE,v);
  3392  008C00  0EEE               	movlw	238
  3393  008C02  0100               	movlb	__Lparam shr (0+8)
  3394  008C04  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3395  008C06  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3396  008C08  50D9               	movf	fsr2l,w,c
  3397  008C0A  6FAC               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  3398  008C0C  EC13  F06D         	call	_eeprom_write	;wreg free
  3399                           ;konfig.c: 943: eeprom_write(0x00EF,p);
  3400  008C10  0EEF               	movlw	239
  3401  008C12  0100               	movlb	__Lparam shr (0+8)
  3402  008C14  6FAA               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3403  008C16  6BAB               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3404  008C18  51A9               	movf	?_WriteEEVNT7^(__Lparam& (0+65280)),w
  3405  008C1A                     L45:
  3406  008C1A  6FAC               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  3407  008C1C  EF13  F06D         	goto	_eeprom_write	;wreg free
  3408                           ;konfig.c: 944: }
  3409  008C20                     __end_of_WriteEEVNT7:
  3410                           ;konfig.c: 945: unsigned char ReadEEVNT7_V()
  3411                           ;konfig.c: 946: {
  3412  008C20                     _ReadEEVNT7_V:
  3413  000000                     
  3414                           ;konfig.c: 947: return eeprom_read(0x00EE);
  3415  008C20  0EEE               	movlw	238
  3416  008C22  D001               	goto	L48
  3417                           ;konfig.c: 948: }
  3418  008C24                     __end_of_ReadEEVNT7_V:
  3419                           ;konfig.c: 949: unsigned char ReadEEVNT7_P()
  3420                           ;konfig.c: 950: {
  3421  008C24                     _ReadEEVNT7_P:
  3422  000000                     
  3423                           ;konfig.c: 951: return eeprom_read(0x00EF);
  3424  008C24  0EEF               	movlw	239
  3425  008C26                     L48:
  3426  008C26  0100               	movlb	__Lparam shr (0+8)
  3427  008C28  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  3428  008C2A  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  3429  008C2C  EFC7  F06D         	goto	_eeprom_read	;wreg free
  3430                           ;konfig.c: 952: }
  3431  008C30                     __end_of_ReadEEVNT7_P:
  3432  000000                     
  3433  000000                     
  3434  000000                     
  3435  000000                     
  3436  000000                     
  3437  000000                     
  3438  000000                     
  3439  000000                     
  3440  000000                     
  3441  000000                     
  3442  000000                     
  3443  000000                     
  3444  000000                     
  3445  000000                     
  3446  000000                     
  3447  000000                     
  3448  000000                     
  3449  000000                     
  3450  000000                     
  3451  000000                     
  3452  000000                     
  3453  000000                     
  3454  000000                     
  3455  000000                     
  3456  000000                     
  3457  000000                     
  3458  000000                     
  3459  000000                     
  3460  000000                     
  3461  000000                     
  3462  000000                     
  3463  000000                     
  3464  000000                     
  3465  000000                     
  3466  000000                     
  3467  000000                     
  3468  000000                     
  3469  000000                     
  3470  000000                     
  3471  000000                     
  3472  000000                     
  3473  000000                     
  3474  000000                     
  3475  000000                     
  3476  000000                     
  3477  000000                     
  3478  000000                     
  3479  000000                     
  3480  000000                     
  3481  000000                     
  3482  000000                     
  3483  000000                     
  3484  000000                     
  3485  000000                     
  3486  000000                     
  3487  000000                     
  3488  000000                     
  3489  000000                     
  3490  000000                     
  3491  000000                     
  3492  000000                     
  3493  000000                     
  3494  000000                     
  3495  000000                     
  3496  000000                     
  3497  000000                     
  3498  000000                     
  3499  000000                     
  3500  000000                     
  3501  000000                     
  3502  000000                     
  3503  000000                     
  3504  000000                     
  3505  000000                     
  3506  000000                     
  3507  000000                     
  3508  000000                     
  3509  000000                     
  3510  000000                     
  3511  000000                     
  3512  000000                     
  3513  000000                     
  3514  000000                     
  3515  000000                     
  3516  000000                     
  3517  000000                     
  3518  000000                     
  3519  000000                     
  3520  000000                     
  3521  000000                     
  3522  000000                     
  3523  000000                     
  3524  000000                     
  3525  000000                     
  3526  000000                     
  3527  000000                     
  3528  000000                     
  3529  000000                     
  3530  000000                     
  3531  000000                     
  3532  000000                     
  3533  000000                     
  3534  000000                     
  3535  000000                     
  3536  000000                     
  3537  000000                     
  3538  000000                     
  3539  000000                     
  3540  000000                     
  3541  000000                     
  3542  000000                     
  3543  000000                     
  3544  000000                     
  3545  000000                     
  3546  000000                     
  3547  000000                     
  3548  000000                     
  3549  000000                     
  3550  000000                     
  3551  000000                     
  3552  000000                     
  3553  000000                     
  3554  000000                     
  3555  000000                     
  3556  000000                     
  3557  000000                     
  3558  000000                     
  3559  000000                     
  3560  000000                     
  3561  000000                     
  3562  000000                     
  3563  000000                     
  3564  000000                     
  3565  000000                     
  3566  000000                     
  3567  000000                     
  3568  000000                     
  3569  000000                     
  3570  000000                     
  3571  000000                     
  3572  000000                     
  3573  000000                     
  3574  000000                     
  3575  000000                     
  3576  000000                     
  3577  000000                     
  3578  000000                     
  3579  000000                     
  3580  000000                     
  3581  000000                     
  3582  000000                     
  3583  000000                     
  3584  000000                     
  3585  000000                     
  3586  000000                     
  3587  000000                     
  3588  000000                     
  3589  000000                     
  3590  000000                     
  3591  000000                     
  3592  000000                     
  3593  000000                     
  3594  000000                     
  3595  000000                     
  3596  000000                     
  3597  000000                     
  3598  000000                     
  3599  000000                     
  3600  000000                     
  3601  000000                     
  3602  000000                     
  3603  000000                     
  3604  000000                     
  3605  000000                     
  3606  000000                     
  3607  000000                     
  3608  000000                     
  3609  000000                     
  3610  000000                     
  3611  000000                     
  3612  000000                     
  3613  000000                     
  3614  000000                     
  3615  000000                     
  3616  000000                     
  3617  000000                     
  3618  000000                     
  3619  000000                     
  3620  000000                     
  3621  000000                     
  3622  000000                     
  3623  000000                     
  3624  000000                     
  3625  000000                     
  3626  000000                     
  3627  000000                     
  3628  000000                     
  3629  000000                     
  3630  000000                     
  3631  000000                     
  3632  000000                     
  3633  000000                     
  3634  000000                     
  3635  000000                     
  3636  000000                     
  3637  000000                     
  3638  000000                     
  3639  000000                     
  3640  000000                     
  3641  000000                     
  3642  000000                     
  3643  000000                     
  3644  000000                     
  3645  000000                     
  3646  000000                     
  3647  000000                     
  3648  000000                     
  3649  000000                     
  3650  000000                     
  3651  000000                     
  3652  000000                     
  3653  000000                     
  3654  000000                     
  3655  000000                     
  3656  000000                     
  3657  000000                     
  3658  000000                     
  3659  000000                     
  3660  000000                     
  3661  000000                     
  3662  000000                     
  3663  000000                     
  3664  000000                     
  3665  000000                     
  3666  000000                     
  3667  000000                     
  3668  000000                     
  3669  000000                     
  3670  000000                     
  3671  000000                     
  3672  000000                     
  3673  000000                     
  3674  000000                     
  3675  000000                     
  3676  000000                     
  3677  000000                     
  3678  000000                     
  3679  000000                     
  3680  000000                     
  3681  000000                     
  3682  000000                     
  3683  000000                     
  3684  000000                     
  3685  000000                     
  3686  000000                     
  3687  000000                     
  3688  000000                     
  3689  000000                     
  3690  000000                     
  3691  000000                     
  3692  000000                     
  3693  000000                     
  3694  000000                     
  3695  000000                     
  3696  000000                     
  3697  000000                     
  3698  000000                     
  3699  000000                     
  3700  000000                     
  3701  000000                     
  3702  000000                     
  3703  000000                     
  3704  000000                     
  3705  000000                     
  3706  000000                     
  3707  000000                     
  3708  000000                     
  3709  000000                     
  3710  000000                     
  3711  000000                     
  3712  000000                     
  3713  000000                     
  3714  000000                     
  3715  000000                     
  3716  000000                     
  3717  000000                     
  3718  000000                     
  3719  000000                     
  3720  000000                     
  3721  000000                     
  3722  000000                     
  3723  000000                     
  3724  000000                     
  3725  000000                     
  3726  000000                     
  3727  000000                     
  3728  000000                     
  3729  000000                     
  3730  000000                     
  3731  000000                     
  3732  000000                     
  3733  000000                     
  3734  000000                     
  3735  000000                     
  3736  000000                     
  3737  000000                     
  3738  000000                     
  3739  000000                     
  3740  000000                     
  3741  000000                     
  3742  000000                     
  3743  000000                     
  3744  000000                     
  3745  000000                     
  3746  000000                     
  3747  000000                     
  3748  000000                     
  3749  000000                     
  3750  000000                     
  3751  000000                     
  3752  000000                     
  3753  000000                     
  3754  000000                     
  3755  000000                     
  3756  000000                     
  3757  000000                     
  3758  000000                     
  3759  000000                     
  3760  000000                     
  3761  000000                     
  3762  000000                     
  3763  000000                     
  3764  000000                     
  3765  000000                     
  3766  000000                     
  3767  000000                     
  3768  000000                     
  3769  000000                     
  3770  000000                     
  3771  000000                     
  3772  000000                     
  3773  000000                     
  3774  000000                     
  3775  000000                     
  3776  000000                     
  3777  000000                     
  3778  000000                     
  3779  000000                     
  3780  000000                     
  3781  000000                     
  3782  000000                     
  3783  000000                     
  3784  000000                     
  3785  000000                     
  3786  000000                     
  3787  000000                     
  3788  000000                     
  3789  000000                     
  3790  000000                     
  3791  000000                     
  3792  000000                     
  3793  000000                     
  3794  000000                     
  3795  000000                     
  3796  000000                     
  3797  000000                     
  3798  000000                     
  3799  000000                     
  3800  000000                     
  3801  000000                     
  3802  000000                     
  3803  000000                     
  3804  000000                     
  3805  000000                     
  3806  000000                     
  3807  000000                     
  3808  000000                     
  3809  000000                     
  3810  000000                     
  3811  000000                     
  3812  000000                     
  3813  000000                     
  3814  000000                     
  3815  000000                     
  3816  000000                     
  3817  000000                     
  3818  000000                     
  3819  000000                     
  3820  000000                     
  3821  000000                     
  3822  000000                     
  3823  000000                     
  3824  000000                     
  3825  000000                     
  3826  000000                     
  3827  000000                     
  3828  000000                     
  3829  000000                     
  3830  000000                     
  3831  000000                     
  3832  000000                     
  3833  000000                     
  3834  000000                     
  3835  000000                     
  3836  000000                     
  3837  000000                     
  3838  000000                     
  3839  000000                     
  3840  000000                     
  3841  000000                     
  3842  000000                     
  3843  000000                     
  3844  000000                     
  3845  000000                     
  3846  000000                     
  3847  000000                     
  3848  000000                     
  3849  000000                     
  3850  000000                     
  3851  000000                     
  3852  000000                     
  3853  000000                     
  3854  000000                     
  3855  000000                     
  3856  000000                     
  3857  000000                     
  3858  000000                     
  3859  000000                     
  3860  000000                     
  3861  000000                     
  3862  000000                     
  3863  000000                     
  3864  000000                     
  3865  000000                     
  3866  000000                     
  3867  000000                     
  3868                           
  3869                           	psect	eeprom_data
  3870                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
  3871                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
  3872                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
  3873                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
  3874                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
  3875                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
  3876                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
  3877                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
  3878                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
  3879                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
  3880                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
  3881                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
  3882                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
  3883                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
  3884                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
  3885                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
  3886                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
  3887                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
  3888                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
  3889                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
  3890                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
  3891                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
  3892                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
  3893                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
  3894                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
  3895                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
  3896                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
  3897                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
  3898                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
  3899                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
  3900                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
  3901                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
  3902                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
  3903                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
  3904                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
  3905                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
  3906                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
  3907                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
  3908                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
  3909                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
  3910                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
  3911                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
  3912                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
  3913                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
  3914                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
  3915                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
  3916                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
  3917                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
  3918                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
  3919                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
  3920                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
  3921                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
  3922                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
  3923                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
  3924                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
  3925                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
  3926                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
  3927                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
  3928                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
  3929                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
  3930                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
  3931                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
  3932                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
  3933                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
  3934                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
  3935                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
  3936                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
  3937                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
  3938                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
  3939                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
  3940                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
  3941                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
  3942                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
  3943                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
  3944                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
  3945                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
  3946                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
  3947                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
  3948                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
  3949                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
  3950                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
  3951                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
  3952                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
  3953                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
  3954                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
  3955                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
  3956                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
  3957                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
  3958                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
  3959                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
  3960                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
  3961                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
  3962                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
  3963                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
  3964                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
  3965                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
  3966                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
  3967                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
  3968                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
  3969                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
  3970  F001B8  63 63 62 62 61 60  	db	99,99,98,98,97,96,95,95	;#
      +       5F 5F              
  3971                           ;eeprom.h: 70: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "94" "," "93" "," "92" "," 
      +                          "92" "," "91" "," "90" "," "90" "," "89");
  3972  F001C0  5E 5D 5C 5C 5B 5A  	db	94,93,92,92,91,90,90,89	;#
      +       5A 59              
  3973                           ;eeprom.h: 71: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "88" "," "88" "," "87" "," 
      +                          "87" "," "86" "," "85" "," "85" "," "84");
  3974  F001C8  58 58 57 57 56 55  	db	88,88,87,87,86,85,85,84	;#
      +       55 54              
  3975                           ;eeprom.h: 72: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "84" "," "83" "," "82" "," 
      +                          "82" "," "81" "," "81" "," "80" "," "80");
  3976  F001D0  54 53 52 52 51 51  	db	84,83,82,82,81,81,80,80	;#
      +       50 50              
  3977                           ;eeprom.h: 73: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "79" "," "79" "," "78" "," 
      +                          "77" "," "77" "," "76" "," "76" "," "75");
  3978  F001D8  4F 4F 4E 4D 4D 4C  	db	79,79,78,77,77,76,76,75	;#
      +       4C 4B              
  3979                           ;eeprom.h: 74: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "75" "," "74" "," "74" "," 
      +                          "73" "," "73" "," "72" "," "72" "," "71");
  3980  F001E0  4B 4A 4A 49 49 48  	db	75,74,74,73,73,72,72,71	;#
      +       48 47              
  3981                           ;eeprom.h: 75: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "71" "," "70" "," "70" "," 
      +                          "70" "," "69" "," "69" "," "68" "," "68");
  3982  F001E8  47 46 46 46 45 45  	db	71,70,70,70,69,69,68,68	;#
      +       44 44              
  3983                           ;eeprom.h: 76: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "67" "," "67" "," "66" "," 
      +                          "66" "," "65" "," "65" "," "64" "," "64");
  3984  F001F0  43 43 42 42 41 41  	db	67,67,66,66,65,65,64,64	;#
      +       40 40              
  3985                           ;eeprom.h: 77: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "64" "," "63" "," "63" "," 
      +                          "62" "," "62" "," "61" "," "61" "," "61");
  3986  F001F8  40 3F 3F 3E 3E 3D  	db	64,63,63,62,62,61,61,61	;#
      +       3D 3D              
  3987                           ;eeprom.h: 78: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "60" "," "60" "," "59" "," 
      +                          "59" "," "58" "," "58" "," "57" "," "57");
  3988  F00200  3C 3C 3B 3B 3A 3A  	db	60,60,59,59,58,58,57,57	;#
      +       39 39              
  3989                           ;eeprom.h: 79: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "57" "," "56" "," "56" "," 
      +                          "55" "," "55" "," "54" "," "54" "," "54");
  3990  F00208  39 38 38 37 37 36  	db	57,56,56,55,55,54,54,54	;#
      +       36 36              
  3991                           ;eeprom.h: 80: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "53" "," "53" "," "52" "," 
      +                          "52" "," "52" "," "51" "," "51" "," "50");
  3992  F00210  35 35 34 34 34 33  	db	53,53,52,52,52,51,51,50	;#
      +       33 32              
  3993                           ;eeprom.h: 81: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "50" "," "49" "," "49" "," 
      +                          "49" "," "48" "," "48" "," "47" "," "47");
  3994  F00218  32 31 31 31 30 30  	db	50,49,49,49,48,48,47,47	;#
      +       2F 2F              
  3995                           ;eeprom.h: 82: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "46" "," "46" "," "46" "," 
      +                          "45" "," "45" "," "44" "," "44" "," "44");
  3996  F00220  2E 2E 2E 2D 2D 2C  	db	46,46,46,45,45,44,44,44	;#
      +       2C 2C              
  3997                           ;eeprom.h: 83: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "43" "," "43" "," "42" "," 
      +                          "42" "," "41" "," "41" "," "41" "," "40");
  3998  F00228  2B 2B 2A 2A 29 29  	db	43,43,42,42,41,41,41,40	;#
      +       29 28              
  3999                           ;eeprom.h: 84: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "40" "," "39" "," "39" "," 
      +                          "38" "," "38" "," "37" "," "37" "," "37");
  4000  F00230  28 27 27 26 26 25  	db	40,39,39,38,38,37,37,37	;#
      +       25 25              
  4001                           ;eeprom.h: 85: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "36" "," "36" "," "35" "," 
      +                          "35" "," "34" "," "34" "," "33" "," "33");
  4002  F00238  24 24 23 23 22 22  	db	36,36,35,35,34,34,33,33	;#
      +       21 21              
  4003                           ;eeprom.h: 86: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "32" "," "32" "," "31" "," 
      +                          "31" "," "30" "," "30" "," "29" "," "29");
  4004  F00240  20 20 1F 1F 1E 1E  	db	32,32,31,31,30,30,29,29	;#
      +       1D 1D              
  4005                           ;eeprom.h: 87: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "28" "," "28" "," "27" "," 
      +                          "27" "," "26" "," "26" "," "25" "," "24");
  4006  F00248  1C 1C 1B 1B 1A 1A  	db	28,28,27,27,26,26,25,24	;#
      +       19 18              
  4007                           ;eeprom.h: 88: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "24" "," "23" "," "23" "," 
      +                          "22" "," "22" "," "21" "," "21" "," "20");
  4008  F00250  18 17 17 16 16 15  	db	24,23,23,22,22,21,21,20	;#
      +       15 14              
  4009                           ;eeprom.h: 89: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "19" "," "19" "," "18" "," 
      +                          "17" "," "17" "," "16" "," "16" "," "15");
  4010  F00258  13 13 12 11 11 10  	db	19,19,18,17,17,16,16,15	;#
      +       10 0F              
  4011                           ;eeprom.h: 90: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "14" "," "14" "," "13" "," 
      +                          "12" "," "11" "," "11" "," "10" "," "09");
  4012  F00260  0E 0E 0D 0C 0B 0B  	db	14,14,13,12,11,11,10,9	;#
      +       0A 09              
  4013                           ;eeprom.h: 91: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "08" "," "07" "," "06" "," 
      +                          "06" "," "05" "," "04" "," "03" "," "02");
  4014  F00268  08 07 06 06 05 04  	db	8,7,6,6,5,4,3,2	;#
      +       03 02              
  4015                           ;eeprom.h: 92: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "01" "," "00" "," "00" "," 
      +                          "00" "," "00" "," "00" "," "00" "," "00");
  4016  F00270  01 00 00 00 00 00  	db	1,0,0,0,0,0,0,0	;#
      +       00 00              
  4017                           ;eeprom.h: 125: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0" "," "45" "," "99" "," 
      +                          "99" "," "0" "," "2" "," "0" "," "0");
  4018  F00278  00 2D 63 63 00 02  	db	0,45,99,99,0,2,0,0	;#
      +       00 00              
  4019                           ;eeprom.h: 126: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "1" "," "80" "," "60" "," 
      +                          "3" "," "2" "," "1" "," "12" "," "56");
  4020  F00280  01 50 3C 03 02 01  	db	1,80,60,3,2,1,12,56	;#
      +       0C 38              
  4021                           ;eeprom.h: 128: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "1" "," "6" "," "50" "," "
      +                          1" "," "5" "," "0" "," "10" "," "99");
  4022  F00288  01 06 32 01 05 00  	db	1,6,50,1,5,0,10,99	;#
      +       0A 63              
  4023                           ;eeprom.h: 129: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0x05" "," "99" "," "5" ",
      +                          " "89" "," "0" "," "0" "," "0" "," "0");
  4024  F00290  05 63 05 59 00 00  	db	5,99,5,89,0,0,0,0	;#
      +       00 00              
  4025                           ;eeprom.h: 133: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0" "," "18" "," "20" "," 
      +                          "51" "," "38" "," "84" "," "48" "," "117");
  4026  F00298  00 12 14 33 26 54  	db	0,18,20,51,38,84,48,117	;#
      +       30 75              
  4027                           ;eeprom.h: 134: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "56" "," "150" "," "62" ",
      +                          " "183" "," "67" "," "216" "," "71" "," "249");
  4028  F002A0  38 96 3E B7 43 D8  	db	56,150,62,183,67,216,71,249	;#
      +       47 F9              
  4029                           ;eeprom.h: 139: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "40" "," "40" "," "39" ","
      +                           "38" "," "38" "," "37" "," "36" "," "36");
  4030  F002A8  28 28 27 26 26 25  	db	40,40,39,38,38,37,36,36	;#
      +       24 24              
  4031                           ;eeprom.h: 140: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "35" "," "34" "," "34" ","
      +                           "33" "," "33" "," "32" "," "32" "," "31");
  4032  F002B0  23 22 22 21 21 20  	db	35,34,34,33,33,32,32,31	;#
      +       20 1F              
  4033                           ;eeprom.h: 141: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "31" "," "30" "," "30" ","
      +                           "29" "," "29" "," "28" "," "28" "," "27");
  4034  F002B8  1F 1E 1E 1D 1D 1C  	db	31,30,30,29,29,28,28,27	;#
      +       1C 1B              
  4035                           ;eeprom.h: 142: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "27" "," "26" "," "26" ","
      +                           "25" "," "25" "," "24" "," "24" "," "23");
  4036  F002C0  1B 1A 1A 19 19 18  	db	27,26,26,25,25,24,24,23	;#
      +       18 17              
  4037                           ;eeprom.h: 143: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "23" "," "22" "," "22" ","
      +                           "22" "," "21" "," "21" "," "20" "," "20");
  4038  F002C8  17 16 16 16 15 15  	db	23,22,22,22,21,21,20,20	;#
      +       14 14              
  4039                           ;eeprom.h: 144: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "20" "," "19" "," "19" ","
      +                           "18" "," "18" "," "18" "," "17" "," "17");
  4040  F002D0  14 13 13 12 12 12  	db	20,19,19,18,18,18,17,17	;#
      +       11 11              
  4041                           ;eeprom.h: 145: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "17" "," "16" "," "16" ","
      +                           "15" "," "15" "," "15" "," "14" "," "14");
  4042  F002D8  11 10 10 0F 0F 0F  	db	17,16,16,15,15,15,14,14	;#
      +       0E 0E              
  4043                           ;eeprom.h: 146: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "14" "," "13" "," "13" ","
      +                           "13" "," "12" "," "12" "," "12" "," "11");
  4044  F002E0  0E 0D 0D 0D 0C 0C  	db	14,13,13,13,12,12,12,11	;#
      +       0C 0B              
  4045                           ;eeprom.h: 147: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "11" "," "11" "," "10" ","
      +                           "10" "," "10" "," "9" "," "9" "," "9");
  4046  F002E8  0B 0B 0A 0A 0A 09  	db	11,11,10,10,10,9,9,9	;#
      +       09 09              
  4047                           ;eeprom.h: 148: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "8" "," "8" "," "8" "," "7
      +                          " "," "7" "," "7" "," "6" "," "6");
  4048  F002F0  08 08 08 07 07 07  	db	8,8,8,7,7,7,6,6	;#
      +       06 06              
  4049                           ;eeprom.h: 149: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "6" "," "5" "," "5" "," "5
      +                          " "," "4" "," "4" "," "4" "," "3");
  4050  F002F8  06 05 05 05 04 04  	db	6,5,5,5,4,4,4,3	;#
      +       04 03              
  4051                           ;eeprom.h: 150: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "3" "," "3" "," "2" "," "2
      +                          " "," "2" "," "1" "," "1" "," "1");
  4052  F00300  03 03 02 02 02 01  	db	3,3,2,2,2,1,1,1	;#
      +       01 01              
  4053                           ;eeprom.h: 151: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "1" "," "0" "," "0" "," "0
      +                          " "," "-1" "," "-1" "," "-1" "," "-2");
  4054  F00308  01 00 00 00 FF FF  	db	1,0,0,0,-1,-1,-1,-2	;#
      +       FF FE              
  4055                           ;eeprom.h: 152: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-2" "," "-2" "," "-2" ","
      +                           "-3" "," "-3" "," "-3" "," "-4" "," "-4");
  4056  F00310  FE FE FE FD FD FD  	db	-2,-2,-2,-3,-3,-3,-4,-4	;#
      +       FC FC              
  4057                           ;eeprom.h: 153: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-4" "," "-5" "," "-5" ","
      +                           "-5" "," "-6" "," "-6" "," "-6" "," "-7");
  4058  F00318  FC FB FB FB FA FA  	db	-4,-5,-5,-5,-6,-6,-6,-7	;#
      +       FA F9              
  4059                           ;eeprom.h: 154: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-7" "," "-7" "," "-8" ","
      +                           "-8" "," "-8" "," "-9" "," "-9" "," "-9");
  4060  F00320  F9 F9 F8 F8 F8 F7  	db	-7,-7,-8,-8,-8,-9,-9,-9	;#
      +       F7 F7              
  4061                           ;eeprom.h: 155: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-9" "," "-10" "," "-10" "
      +                          ," "-10" "," "-11" "," "-11" "," "-11" "," "-12"
      +                          );
  4062  F00328  F7 F6 F6 F6 F5 F5  	db	-9,-10,-10,-10,-11,-11,-11,-12	;#
      +       F5 F4              
  4063                           ;eeprom.h: 156: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-12" "," "-13" "," "-13" 
      +                          "," "-13" "," "-13" "," "-14" "," "-14" "," "-14
      +                          ");
  4064  F00330  F4 F3 F3 F3 F3 F2  	db	-12,-13,-13,-13,-13,-14,-14,-14	;#
      +       F2 F2              
  4065                           ;eeprom.h: 157: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-15" "," "-15" "," "-16" 
      +                          "," "-16" "," "-16" "," "-17" "," "-17" "," "-17
      +                          ");
  4066  F00338  F1 F1 F0 F0 F0 EF  	db	-15,-15,-16,-16,-16,-17,-17,-17	;#
      +       EF EF              
  4067                           ;eeprom.h: 158: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-18" "," "-18" "," "-18" 
      +                          "," "-19" "," "-19" "," "-20" "," "-20" "," "-20
      +                          ");
  4068  F00340  EE EE EE ED ED EC  	db	-18,-18,-18,-19,-19,-20,-20,-20	;#
      +       EC EC              
  4069                           ;eeprom.h: 159: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-21" "," "-21" "," "-22" 
      +                          "," "-22" "," "-22" "," "-23" "," "-23" "," "-24
      +                          ");
  4070  F00348  EB EB EA EA EA E9  	db	-21,-21,-22,-22,-22,-23,-23,-24	;#
      +       E9 E8              
  4071                           ;eeprom.h: 160: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-24" "," "-25" "," "-25" 
      +                          "," "-25" "," "-26" "," "-26" "," "-27" "," "-27
      +                          ");
  4072  F00350  E8 E7 E7 E7 E6 E6  	db	-24,-25,-25,-25,-26,-26,-27,-27	;#
      +       E5 E5              
  4073                           ;eeprom.h: 161: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-28" "," "-28" "," "-29" 
      +                          "," "-29" "," "-30" "," "-30" "," "-31" "," "-31
      +                          ");
  4074  F00358  E4 E4 E3 E3 E2 E2  	db	-28,-28,-29,-29,-30,-30,-31,-31	;#
      +       E1 E1              
  4075                           ;eeprom.h: 162: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-32" "," "-33" "," "-33" 
      +                          "," "-34" "," "-35" "," "-35" "," "-36" "," "-37
      +                          ");
  4076  F00360  E0 DF DF DE DD DD  	db	-32,-33,-33,-34,-35,-35,-36,-37	;#
      +       DC DB              
  4077                           ;eeprom.h: 163: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-37" "," "-38" "," "-39" 
      +                          "," "-40" "," "-40" "," "-40" "," "-40" "," "-40
      +                          ");
  4078  F00368  DB DA D9 D8 D8 D8  	db	-37,-38,-39,-40,-40,-40,-40,-40	;#
      +       D8 D8              
  4079                           
  4080                           	psect	data
  4081                           ;wsw.tp.h: 11: typedef struct {
  4082                           ;wsw.tp.h: 12: unsigned focus:1;
  4083                           ;wsw.tp.h: 13: unsigned dec:1;
  4084                           ;wsw.tp.h: 14: unsigned hex:1;
  4085                           ;wsw.tp.h: 15: unsigned autoOFF:1;
  4086                           ;wsw.tp.h: 16: unsigned kropka0:1;
  4087                           ;wsw.tp.h: 17: unsigned kropka1:1;
  4088                           ;wsw.tp.h: 18: unsigned wygas0:1;
  4089                           ;wsw.tp.h: 19: unsigned wygas1:1;
  4090                           ;wsw.tp.h: 20: unsigned led0:1;
  4091                           ;wsw.tp.h: 21: unsigned led1:1;
  4092                           ;wsw.tp.h: 22: unsigned sdiode:1;
  4093                           ;wsw.tp.h: 23: unsigned rdiode:1;
  4094                           ;wsw.tp.h: 24: unsigned wbdid:4;
  4095                           ;wsw.tp.h: 25: }WStatus;
  4096                           ;wsw.tp.h: 28: typedef struct {
  4097                           ;wsw.tp.h: 29: unsigned char Data1;
  4098                           ;wsw.tp.h: 30: unsigned char Data0;
  4099                           ;wsw.tp.h: 31: }WData;
  4100                           ;wsw.tp.h: 33: typedef struct {
  4101                           ;wsw.tp.h: 34: WStatus St;
  4102                           ;wsw.tp.h: 35: WData Dt;
  4103                           ;wsw.tp.h: 36: }WPack;
  4104                           ;wsw.tp.h: 39: typedef struct {
  4105                           ;wsw.tp.h: 40: unsigned setOff:1;
  4106                           ;wsw.tp.h: 41: unsigned char dLed1;
  4107                           ;wsw.tp.h: 42: unsigned char dLed0;
  4108                           ;wsw.tp.h: 43: }LedPack;
  4109                           ;wsw.tp.h: 50: typedef struct {
  4110                           ;wsw.tp.h: 51: WPack *PAdr;
  4111                           ;wsw.tp.h: 52: }KAdrPoz;
  4112                           ;wsw.tp.h: 55: typedef struct {
  4113                           ;wsw.tp.h: 56: WData PWrt;
  4114                           ;wsw.tp.h: 57: unsigned char delay;
  4115                           ;wsw.tp.h: 58: }KWrtPoz;
  4116                           ;wsw.tp.h: 61: typedef struct {
  4117                           ;wsw.tp.h: 62: WStatus PFrm;
  4118                           ;wsw.tp.h: 63: }KFrmPoz;
  4119                           ;wsw.tp.h: 66: typedef struct {
  4120                           ;wsw.tp.h: 67: unsigned focus:1;
  4121                           ;wsw.tp.h: 68: }KFocus;
  4122                           ;wsw.tp.h: 71: typedef struct {
  4123                           ;wsw.tp.h: 72: WPack *CAdr;
  4124                           ;wsw.tp.h: 73: unsigned char nCykli;
  4125                           ;wsw.tp.h: 74: unsigned char DMask;
  4126                           ;wsw.tp.h: 75: }KOutput;
  4127                           ;wsw.tp.h: 77: typedef struct {
  4128                           ;wsw.tp.h: 78: const KAdrPoz *KAP;
  4129                           ;wsw.tp.h: 79: const KWrtPoz *KWP;
  4130                           ;wsw.tp.h: 80: const KFrmPoz *KFP;
  4131                           ;wsw.tp.h: 81: KFocus *KFc;
  4132                           ;wsw.tp.h: 82: const KOutput *KOut;
  4133                           ;wsw.tp.h: 83: }Kolejka;
  4134                           ;wsw.tp.h: 90: typedef struct {
  4135                           ;wsw.tp.h: 91: const Kolejka *KL;
  4136                           ;wsw.tp.h: 92: unsigned char nPzc;
  4137                           ;wsw.tp.h: 93: }KGlobal;
  4138                           ;wsw.tp.h: 97: typedef struct {
  4139                           ;wsw.tp.h: 98: unsigned restart:1;
  4140                           ;wsw.tp.h: 99: unsigned reset:1;
  4141                           ;wsw.tp.h: 100: unsigned indeks:6;
  4142                           ;wsw.tp.h: 101: }KIndeks;
  4143                           ;wsw.tp.h: 105: typedef struct {
  4144                           ;wsw.tp.h: 106: unsigned char ncS;
  4145                           ;wsw.tp.h: 107: unsigned char ndS;
  4146                           ;wsw.tp.h: 108: unsigned char cykl;
  4147                           ;wsw.tp.h: 109: }KTime;
  4148                           ;wsw.h: 109: void KolProc(void);
  4149                           ;wsw.h: 110: void Pulse(void);
  4150                           ;wsw.h: 111: void SetPrWswData(void);
  4151                           ;wsw.h: 112: void FormatWswData(void);
  4152                           ;wsw.h: 113: void PrintWswData(void);
  4153                           ;wsw.h: 114: void SetWbtyBit(unsigned char nrbty
      +                          , unsigned char nrbit, const unsigned char bt);
  4154                           ;wsw.h: 116: void WswOff(void);
  4155                           ;wsw.h: 117: void WswOn(void);
  4156                           ;wsw.h: 118: void SetData(WPack *wData,const uns
      +                          igned char wdt1,const unsigned char wdt0);
  4157                           ;wsw.h: 119: void SetStatus(WPack *wData,const u
      +                          nsigned int wst,const unsigned int mask);
  4158                           ;wsw.h: 120: void SetPoz(const unsigned char nrk
      +                          ol,const unsigned char nrpoz);
  4159                           ;wsw.h: 121: void ResetPoz(const unsigned char n
      +                          rkol,const unsigned char nrpoz);
  4160                           ;wsw.h: 122: void ResetKol(const unsigned char n
      +                          rkol);
  4161                           ;wsw.h: 123: void RestartKol(const unsigned char
      +                           nrkol);
  4162                           ;wsw.h: 124: void BitSet(unsigned char *data, co
      +                          nst unsigned char nbit,const unsigned char bt);
  4163                           ;main.tp.h: 7: typedef struct {
  4164                           ;main.tp.h: 8: unsigned _pob_KCO:1;
  4165                           ;main.tp.h: 9: unsigned _pob_KCW:1;
  4166                           ;main.tp.h: 10: unsigned _pob_SRW:1;
  4167                           ;main.tp.h: 11: unsigned _pob_AL:1;
  4168                           ;main.tp.h: 12: unsigned _pob_CW:1;
  4169                           ;main.tp.h: 13: unsigned _pob_CO:1;
  4170                           ;main.tp.h: 14: unsigned _pob_DzCO:1;
  4171                           ;main.tp.h: 15: unsigned _pob_DzCW:1;
  4172                           ;main.tp.h: 17: unsigned _WYLACZ:1;
  4173                           ;main.tp.h: 18: unsigned _ZMKCOCW:1;
  4174                           ;main.tp.h: 19: unsigned _ROZRUCH:1;
  4175                           ;main.tp.h: 20: unsigned _RUSZ_48:1;
  4176                           ;main.tp.h: 21: unsigned _RUSZ_48Z3:1;
  4177                           ;main.tp.h: 22: unsigned _RUSZ_PWR:1;
  4178                           ;main.tp.h: 23: unsigned _VWYBIEG:1;
  4179                           ;main.tp.h: 24: unsigned _RUSZ_PLOMIEN:1;
  4180                           ;main.tp.h: 25: unsigned _RUSZ_RPLM:1;
  4181  000100                     _MinMax:
  4182  000100                     	ds	2
  4183  000100                     	ds	2
  4184  000100                     	ds	2
  4185  000100                     	ds	2
  4186  000100                     	ds	2
  4187  000100                     	ds	2
  4188  000100                     	ds	2
  4189  000100                     	ds	2
  4190  000100                     	ds	2
  4191  000100                     	ds	2
  4192  000100                     	ds	2
  4193  000100                     	ds	2
  4194  000100                     	ds	2
  4195  000100                     	ds	2
  4196  000100                     	ds	2
  4197  000100                     	ds	2
  4198  000100                     	ds	2
  4199  000100                     	ds	2
  4200  000100                     	ds	2
  4201  000100                     	ds	2
  4202  000100                     	ds	2
  4203  000100                     	ds	2
  4204  000100                     	ds	2
  4205  000100                     	ds	2
  4206  000100                     	ds	2
  4207  000100                     	ds	2
  4208  000100                     	ds	2
  4209  000100                     	ds	2
  4210  000100                     	ds	2
  4211  000100                     	ds	2
  4212  000100                     	ds	2
  4213  000100                     	ds	2
  4214  000100                     	ds	2
  4215  000100                     	ds	2
  4216  000100                     	ds	2
  4217  000100                     	ds	2
  4218  000100                     	ds	2
  4219  000100                     	ds	2
  4220  000100                     	ds	2
  4221  000100                     	ds	2
  4222  000100                     	ds	2
  4223  000100                     	ds	2
  4224  000100                     	ds	2
  4225  000100                     	ds	2
  4226  000100                     	ds	2
  4227  000100                     	ds	2
  4228  000100                     	ds	2
  4229  000100                     	ds	2
  4230  000100                     	ds	2
  4231  000100                     	ds	2
  4232  000100                     	ds	2
  4233  000100                     	ds	2
  4234  000100                     	ds	2
  4235  000100                     	ds	2
  4236  000100                     	ds	2
  4237  000100                     	ds	2
  4238  000100                     	ds	2
  4239  000100                     	ds	2
  4240  000100                     	ds	2
  4241  000100                     	ds	2
  4242  000100                     	ds	2
  4243  000100                     	ds	2
  4244  000100                     	ds	2
  4245  000100                     	ds	2
  4246  000100                     	ds	2
  4247  000100                     	ds	2
  4248                           
  4249                           	psect	idata
  4250  001062  00C1               	dw	193
  4251  001064  0000               	dw	0
  4252  001066  0063               	dw	99
  4253  001068  00C2               	dw	194
  4254  00106A  0000               	dw	0
  4255  00106C  0063               	dw	99
  4256  00106E  00C3               	dw	195
  4257  001070  0000               	dw	0
  4258  001072  0063               	dw	99
  4259  001074  00CE               	dw	206
  4260  001076  000A               	dw	10
  4261  001078  0014               	dw	20
  4262  00107A  00CF               	dw	207
  4263  00107C  0019               	dw	25
  4264  00107E  005F               	dw	95
  4265  001080  00C5               	dw	197
  4266  001082  0001               	dw	1
  4267  001084  0002               	dw	2
  4268  001086  00C8               	dw	200
  4269  001088  0000               	dw	0
  4270  00108A  0001               	dw	1
  4271  00108C  00C4               	dw	196
  4272  00108E  0000               	dw	0
  4273  001090  0001               	dw	1
  4274  001092  00CD               	dw	205
  4275  001094  0000               	dw	0
  4276  001096  0001               	dw	1
  4277  001098  00C6               	dw	198
  4278  00109A  0000               	dw	0
  4279  00109C  0001               	dw	1
  4280  00109E  00CC               	dw	204
  4281  0010A0  0001               	dw	1
  4282  0010A2  0004               	dw	4
  4283  0010A4  00D0               	dw	208
  4284  0010A6  0000               	dw	0
  4285  0010A8  0001               	dw	1
  4286  0010AA  00D1               	dw	209
  4287  0010AC  0005               	dw	5
  4288  0010AE  0019               	dw	25
  4289  0010B0  00D2               	dw	210
  4290  0010B2  000F               	dw	15
  4291  0010B4  0063               	dw	99
  4292  0010B6  00D3               	dw	211
  4293  0010B8  0000               	dw	0
  4294  0010BA  0001               	dw	1
  4295  0010BC  00D5               	dw	213
  4296  0010BE  0000               	dw	0
  4297  0010C0  0005               	dw	5
  4298  0010C2  00D6               	dw	214
  4299  0010C4  0000               	dw	0
  4300  0010C6  0019               	dw	25
  4301  0010C8  00D7               	dw	215
  4302  0010CA  0019               	dw	25
  4303  0010CC  0063               	dw	99
  4304  0010CE  00D9               	dw	217
  4305  0010D0  0019               	dw	25
  4306  0010D2  0063               	dw	99
  4307  0010D4  00DA               	dw	218
  4308  0010D6  0000               	dw	0
  4309  0010D8  000A               	dw	10
  4310  0010DA  00DB               	dw	219
  4311  0010DC  0046               	dw	70
  4312  0010DE  0059               	dw	89
  4313  0010E0  00DC               	dw	220
  4314  0010E2  0000               	dw	0
  4315  0010E4  0014               	dw	20
  4316                           
  4317                           	psect	const
  4318  001030                     S30004:
  4319  001030  87F4               	dw	l130	;
  4320  001032  87F4               	dw	l130	;
  4321  001034  87FA               	dw	l131	;
  4322  001036  8808               	dw	l132	;
  4323  001038  88FA               	dw	l133	;
  4324  00103A  880E               	dw	l134	;
  4325  00103C  8820               	dw	l135	;
  4326  00103E  8836               	dw	l136	;
  4327  001040  884C               	dw	l137	;
  4328  001042  884E               	dw	l138	;
  4329  001044  8854               	dw	l139	;
  4330  001046  886A               	dw	l140	;
  4331  001048  886C               	dw	l141	;
  4332  00104A  8876               	dw	l142	;
  4333  00104C  8878               	dw	l143	;
  4334  00104E  8882               	dw	l144	;
  4335  001050  8894               	dw	l145	;
  4336  001052  88AA               	dw	l146	;
  4337  001054  88BC               	dw	l147	;
  4338  001056  88D2               	dw	l148	;
  4339  001058  88D4               	dw	l149	;
  4340  00105A  88DE               	dw	l150	;
  4341  00105C  88E4               	dw	l151	;
  4342                           
  4343                           	psect	bigbss
  4344  000EF0                     F1621:
  4345  000EF0                     	ds	1
  4346  000EF0                     F1622:
  4347  000EF0                     	ds	1
  4348  000000                     
  4349  000000                     
  4350  000000                     
  4351  000000                     
  4352  000000                     
  4353  000000                     
  4354  000000                     
  4355  000000                     
  4356  000000                     
  4357  000000                     
  4358  000000                     
  4359  000000                     
  4360  000000                     
  4361  000000                     
  4362  000000                     
  4363  000000                     
  4364  000000                     
  4365  000000                     
  4366  000000                     
  4367  000000                     
  4368  000000                     
  4369  000000                     
  4370  000000                     
  4371  000000                     
  4372  000000                     
  4373  000000                     
  4374  000000                     
  4375  000000                     
  4376  000000                     
  4377  000000                     
  4378  000000                     
  4379  000000                     
  4380  000000                     
  4381  000000                     
  4382  000000                     
  4383  000000                     
  4384  000000                     
  4385  000000                     
  4386  000000                     
  4387  000000                     
  4388  000000                     
  4389  000000                     
  4390  000000                     
  4391  000000                     
  4392  000000                     
  4393  000000                     
  4394  000000                     
  4395  000000                     
  4396  000000                     
  4397  000000                     
  4398  000000                     
  4399  000000                     
  4400  000000                     
  4401  000000                     
  4402  000000                     
  4403  000000                     
  4404  000000                     
  4405  000000                     
  4406  000000                     
  4407  000000                     
  4408  000000                     
  4409  000000                     
  4410  000000                     
  4411  000000                     
  4412  000000                     
  4413  000000                     
  4414  000000                     
  4415  000000                     
  4416  000000                     
  4417  000000                     
  4418  000000                     
  4419  000000                     
  4420  000000                     
  4421  000000                     
  4422  000000                     
  4423  000000                     
  4424  000000                     
  4425  000000                     
  4426  000000                     
  4427  000000                     
  4428  000000                     
  4429  000000                     
  4430  000000                     
  4431  000000                     
  4432  000000                     
  4433  000000                     
  4434  000000                     
  4435  000000                     
  4436  000000                     
  4437  000000                     
  4438  000000                     
  4439  000000                     
  4440  000000                     
  4441  000000                     
  4442  000000                     
  4443  000000                     
  4444  000000                     
  4445  000000                     
  4446  000000                     
  4447  000000                     
  4448  000000                     
  4449  000000                     
  4450  000000                     
  4451  000000                     
  4452  000000                     
  4453  000000                     
  4454  000000                     
  4455  000000                     
  4456  000000                     
  4457  000000                     
  4458  000000                     
  4459  000000                     
  4460  000000                     
  4461  000000                     
  4462  000000                     
  4463  000000                     
  4464  000000                     
  4465  000000                     
  4466  000000                     
  4467  000000                     
  4468  000000                     
  4469  000000                     
  4470  000000                     
  4471  000000                     
  4472  000000                     
  4473  000000                     
  4474  000000                     
  4475  000000                     
  4476  000000                     
  4477  000000                     
  4478  000000                     
  4479  000000                     
  4480                           
  4481                           	psect	bss
  4482  0001B4                     _DtKNF:
  4483  0001B4                     	ds	34
  4484                           
  4485                           	psect	temp
  4486  000000                     btemp:
  4487  000000                     	ds	4
  4488                           pclath	equ	0xFFA
  4489                           pcl	equ	0xFF9
  4490                           tblptrh	equ	0xFF7
  4491                           tblptrl	equ	0xFF6
  4492                           tablat	equ	0xFF5
  4493                           prodh	equ	0xFF4
  4494                           prodl	equ	0xFF3
  4495                           indf0	equ	0xFEF
  4496                           postinc0	equ	0xFEE
  4497                           postdec0	equ	0xFED
  4498                           wreg	equ	0xFE8
  4499                           fsr2l	equ	0xFD9
  4500                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Thu Jul 28 10:43:10 2016

                    _M 0306               _PomiarZW 6A72  
                   l30 75D0                     l40 760E  
                   l32 75E0                     l41 761A  
                   l42 762E                     l34 766E  
                   l51 76B6                     l35 75F0  
                   l52 76EC                     l36 75F8  
                   l61 7720                     l53 76DA  
                   l29 75AC                     l62 7728  
                   l46 7640                     l71 7A5C  
                   l55 7742                     l47 765E  
                   l39 764C                     l80 7C2C  
                   l72 79C0                     l64 84F0  
                   l56 772A                     l65 77EC  
                   l57 76FE                     l90 7F38  
                   l82 7CC4                     l58 770A  
                   l67 7884                     l59 770E  
                   l92 7FFC                     l84 7D70  
                   l76 7AFC                     l93 7FCC  
                   l69 791C                     l86 7E08  
                   l78 7B94                     l96 8094  
                   l88 7EA0                     l98 812C  
                   u60 75A8                     u91 75B8  
                   pcl 000FF9               _StartRTG C852  
             _StartRTS C7AA           _SetTpKtParam 87F2  
                  l100 81C4                    l110 8450  
                  l102 8288                    l103 8258  
                  l120 8556                    l112 84E8  
                  l130 87F4                    l106 8320  
                  l131 87FA                    l123 862C  
                  l115 8518                    l140 886A  
                  l132 8808                    l124 871E  
                  l116 850E                    l108 83B8  
                  l141 886C                    l133 88FA  
                  l150 88DE                    l142 8876  
                  l134 880E                    l151 88E4  
                  l143 8878                    l135 8820  
                  l127 8938                    l119 8548  
                  l152 88FA                    l144 8882  
                  l136 8836                    l128 8910  
                  l145 8894                    l137 884C  
                  l154 89A4                    l146 88AA  
                  l138 884E                    l147 88BC  
                  l139 8854                    l156 89E4  
                  l148 88D2                    l149 88D4  
                  u110 75BE                    u300 77BC  
                  u305 77BA                    u405 7872  
                  u325 77DA                    u431 78C0  
                  u415 78A0                    u351 7828  
                  u335 7808                    u271 7790  
                  u255 7770                    u601 79FC  
                  u521 7960                    u505 7940  
                  u425 78BE                    u345 7826  
                  u265 778E                    _PFN 006B  
                  u515 795E                    u460 78EC  
                  u380 7854                    u445 78D4  
                  u365 783C                    u285 77A4  
                  u710 7AC4                    u630 7A28  
                  u550 798C                    u615 7A10  
                  u535 7974                    u465 78EA  
                  u385 7852                    u715 7AC2  
                  u635 7A26                    u555 798A  
                  u485 790A                    u815 7B82  
                  u735 7AE2                    u655 7A46  
                  u575 79AA                    u921 7C68  
                  u905 7C48                    u841 7BD0  
                  u825 7BB0                    u761 7B38  
                  u745 7B18                    u681 7A98  
                  u665 7A78                    u585 79DC  
                  u915 7C66                    u835 7BCE  
                  u755 7B36                    u675 7A96  
                  u595 79FA                    u950 7C94  
                  u870 7BFC                    u790 7B64  
                  u935 7C7C                    u855 7BE4  
                  u775 7B4C                    u695 7AAC  
                  u955 7C92                    u875 7BFA  
                  u795 7B62                    u975 7CB2  
                  u895 7C1A                    u985 7CE0  
                  u995 7CFE                    _RTS C7CE  
 __end_of_SetTpKtParam 8958                    wreg 000FE8  
        ?_eeprom_write 00AA                   F1621 0EF0  
                 F1622 0EF1           _ReadEEVNT0_P 8B08  
         _ReadEEVNT1_P 8B30           _ReadEEVNT0_V 8B04  
         _ReadEEVNT2_P 8B58           _ReadEEVNT1_V 8B2C  
         _ReadEEVNT3_P 8B80           _ReadEEVNT2_V 8B54  
         _ReadEEVNT4_P 8BA8           _ReadEEVNT3_V 8B7C  
         _ReadEEVNT5_P 8BD0           _ReadEEVNT4_V 8BA4  
         _ReadEEVNT6_P 8BF8           _ReadEEVNT5_V 8BCC  
         _ReadEEVNT7_P 8C24           _ReadEEVNT6_V 8BF4  
         _ReadEEVNT7_V 8C20                   u1001 7D00  
                 u1110 7DD8                   u1030 7D2C  
                 u1015 7D14                   u2001 848C  
                 u1115 7DD6                   u1035 7D2A  
                 u2030 84B8                   u2015 84A0  
                 u1215 7E8E                   u1135 7DF6  
                 u1055 7D4A                   u2105 8574  
                 u1321 7F74                   u1305 7F54  
                 u1241 7EDC                   u1225 7EBC  
                 u1161 7E44                   u1145 7E24  
                 u1081 7DAC                   u1065 7D8C  
                 u2035 84B6                   u1315 7F72  
                 u1235 7EDA                   u1155 7E42  
                 u1075 7DAA                   u1501 80D0  
                 u1421 8038                   u1405 8018  
                 u2150 870C                   u1350 7FA0  
                 u1270 7F08                   u1190 7E70  
                 u2055 84D6                   u1415 8036  
                 u1335 7F88                   u1255 7EF0  
                 u1175 7E58                   u1095 7DC0  
                 u1610 8194                   u1530 80FC  
                 u1450 8064                   u1515 80E4  
                 u1435 804C                   u1355 7F9E  
                 u1275 7F06                   u1195 7E6E  
                 u1615 8192                   u1535 80FA  
                 u1455 8062                   u1295 7F26  
                 u1385 7FC6                   u1635 81B2  
                 u1555 811A                   u1475 8082  
                 u1395 7FEA                   u1725 8252  
                 u1661 8200                   u1645 81E0  
                 u1581 8168                   u1565 8148  
                 u1485 80B0                   u1815 830E  
                 u1735 8276                   u1655 81FE  
                 u1575 8166                   u1495 80CE  
                 u1921 83F4                   u1905 83D4  
                 u1841 835C                   u1825 833C  
                 u1761 82C4                   u1745 82A4  
                 u1690 822C                   u1915 83F2  
                 u1835 835A                   u1755 82C2  
                 u1675 8214                   u1595 817C  
                 u1950 8420                   u1870 8388  
                 u1790 82F0                   u1935 8408  
                 u1855 8370                   u1775 82D8  
                 u1695 822A                   u1955 841E  
                 u1875 8386                   u1795 82EE  
                 _MGSD 02AE                   u1975 843E  
                 u1895 83A6                   u1985 846C  
                 u1995 848A   __end_of_ReadEEVNT0_P 8B0C  
 __end_of_ReadEEVNT1_P 8B34   __end_of_ReadEEVNT0_V 8B08  
 __end_of_ReadEEVNT2_P 8B5C   __end_of_ReadEEVNT1_V 8B30  
 __end_of_ReadEEVNT3_P 8B84   __end_of_ReadEEVNT2_V 8B58  
                 _DtCO 007F   __end_of_ReadEEVNT4_P 8BAC  
 __end_of_ReadEEVNT3_V 8B80   __end_of_ReadEEVNT5_P 8BD4  
 __end_of_ReadEEVNT4_V 8BA8                   _DtCW 0070  
 __end_of_ReadEEVNT6_P 8BFC                   _DtIN 0092  
 __end_of_ReadEEVNT5_V 8BD0   __end_of_ReadEEVNT7_P 8C30  
 __end_of_ReadEEVNT6_V 8BF8   __end_of_ReadEEVNT7_V 8C24  
                 _DtZW 0067                   indf0 000FEF  
                 fsr2l 000FD9                   btemp 0000  
                 prodh 000FF4                   prodl 000FF3  
              ?_SetPrt 00A6                  S30004 1030  
           _WriteEEECO 8A9C             _WriteEEPCO 8A88  
           _WriteEEPFN 8AB0             _WriteEEPCW 8A74  
   __end_of_WriteEEECO 8AAC     __end_of_WriteEEPCO 8A98  
   __end_of_WriteEEPFN 8AC0     __end_of_WriteEEPCW 8A84  
                _RSDT1 0326                  _DtKNF 01B4  
                _RdPrt C6A0             used_btemp0 0001  
           used_btemp1 0001             used_btemp2 0001  
           used_btemp3 0001            _eeprom_read DB8E  
                pclath 000FFA                  tablat 000FF5  
              _BitSet2 D4AE                _GetBit2 D448  
             ?_BitSet2 00AA                  status 000FD8  
             ?_GetBit2 00A9                __Lparam 00A6  
         ?_eeprom_read 00AD                __ramtop 1000  
       __end_of_EnKonf 7570         __end_of_DsKonf 757A  
       __end_of_SetPFN 8A74         __end_of_SetNST 857A  
          _WriteEEALIN 8AC4            _WriteEEVNT0 8AE6  
          _WriteEEVNT1 8B0E            _WriteEEVNT2 8B36  
          _WriteEEVNT3 8B5E            _WriteEEVNT4 8B86  
          _WriteEEVNT5 8BAE            _WriteEEVNT6 8BD6  
          _WriteEEVNT7 8BFE    __end_of_WriteEEALIN 8AD2  
  __end_of_WriteEEVNT0 8B04    __end_of_WriteEEVNT1 8B2C  
  __end_of_WriteEEVNT2 8B54    __end_of_WriteEEVNT3 8B7C  
  __end_of_WriteEEVNT4 8BA4    __end_of_WriteEEVNT5 8BCC  
  __end_of_WriteEEVNT6 8BF4    __end_of_WriteEEVNT7 8C20  
               _EnKonf 756A                 _DsKonf 7570  
               _MinMax 0100                 _SetPFN 8958  
               _SetNST 84F2              _RdEEParam 857A  
               _SetPrt C6C2      __end_of_RdEEParam 87F2  
            _ClearEETA 8AD6      __end_of_ClearEETA 8AE4  
           _ReadEEALIN 8AD2                postdec0 000FED  
   __end_of_ReadEEALIN 8AD6                postinc0 000FEE  
         ?_WriteEEVNT0 00A9           ?_WriteEEVNT1 00A9  
         ?_WriteEEVNT2 00A9           ?_WriteEEVNT3 00A9  
         ?_WriteEEVNT4 00A9           ?_WriteEEVNT5 00A9  
         ?_WriteEEVNT6 00A9           ?_WriteEEVNT7 00A9  
         _eeprom_write DA26                 tblptrh 000FF7  
               tblptrl 000FF6              _ReadEEECO 8AAC  
            _ReadEEPCO 8A98              _ReadEEPFN 8AC0  
            _ReadEEPCW 8A84      __end_of_ReadEEECO 8AB0  
    __end_of_ReadEEPCO 8A9C      __end_of_ReadEEPFN 8AC4  
    __end_of_ReadEEPCW 8A88          _MKonfiguracja 757A  
            _RefKnfPar 7680      __end_of_RefKnfPar 774A  
             _ModParam CDBE  __end_of_MKonfiguracja 7680  
           _SaveKnfPar 774A     __end_of_SaveKnfPar 84F2  
