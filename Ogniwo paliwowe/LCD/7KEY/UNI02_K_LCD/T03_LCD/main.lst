

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Fri Nov 21 09:58:02 2014


     1                           	processor	18F65J90
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bigdata,global,class=BIGRAM,space=1,delta
      +                          =1
     5                           	psect	ibigdata,global,class=CODE,delta=1
     6                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     7                           	psect	bss,global,class=RAM,space=1,delta=1
     8                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     	;#
    99                           
   100                           	psect	text
   101                           ;pic18f85j90.h: 18: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   102                           ;pic18f85j90.h: 19: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   103                           ;pic18f85j90.h: 20: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   104                           ;pic18f85j90.h: 21: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   105                           ;pic18f85j90.h: 22: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   106                           ;pic18f85j90.h: 23: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   107                           ;pic18f85j90.h: 24: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   108                           ;pic18f85j90.h: 25: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   109                           ;pic18f85j90.h: 26: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   110                           ;pic18f85j90.h: 27: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   111                           ;pic18f85j90.h: 28: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   112                           ;pic18f85j90.h: 29: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   113                           ;pic18f85j90.h: 30: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   114                           ;pic18f85j90.h: 31: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   115                           ;pic18f85j90.h: 32: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   116                           ;pic18f85j90.h: 33: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   117                           ;pic18f85j90.h: 34: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   118                           ;pic18f85j90.h: 35: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   119                           ;pic18f85j90.h: 36: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   120                           ;pic18f85j90.h: 37: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   121                           ;pic18f85j90.h: 38: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   122                           ;pic18f85j90.h: 39: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   123                           ;pic18f85j90.h: 40: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   124                           ;pic18f85j90.h: 41: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   125                           ;pic18f85j90.h: 42: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   126                           ;pic18f85j90.h: 43: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   127                           ;pic18f85j90.h: 44: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   128                           ;pic18f85j90.h: 45: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   129                           ;pic18f85j90.h: 46: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   130                           ;pic18f85j90.h: 47: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   131                           ;pic18f85j90.h: 48: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   132                           ;pic18f85j90.h: 49: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   133                           ;pic18f85j90.h: 50: static near unsigned char BS
      +                          R @ 0xFE0;
   134                           ;pic18f85j90.h: 51: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   135                           ;pic18f85j90.h: 52: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   136                           ;pic18f85j90.h: 53: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   137                           ;pic18f85j90.h: 54: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   138                           ;pic18f85j90.h: 55: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   139                           ;pic18f85j90.h: 56: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   140                           ;pic18f85j90.h: 57: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   141                           ;pic18f85j90.h: 58: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   142                           ;pic18f85j90.h: 59: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   143                           ;pic18f85j90.h: 60: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   144                           ;pic18f85j90.h: 62: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   145                           ;pic18f85j90.h: 63: static near unsigned char T0
      +                          CON @ 0xFD5;
   146                           ;pic18f85j90.h: 64: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   147                           ;pic18f85j90.h: 65: static near unsigned char LC
      +                          DREG @ 0xFD2;
   148                           ;pic18f85j90.h: 66: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   149                           ;pic18f85j90.h: 67: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   150                           ;pic18f85j90.h: 68: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   151                           ;pic18f85j90.h: 69: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   152                           ;pic18f85j90.h: 71: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   153                           ;pic18f85j90.h: 72: static near unsigned char T1
      +                          CON @ 0xFCD;
   154                           ;pic18f85j90.h: 73: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   155                           ;pic18f85j90.h: 74: static near unsigned char PR
      +                          2 @ 0xFCB;
   156                           ;pic18f85j90.h: 75: static near unsigned char T2
      +                          CON @ 0xFCA;
   157                           ;pic18f85j90.h: 76: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   158                           ;pic18f85j90.h: 77: static near unsigned char SS
      +                          PADD @ 0xFC8;
   159                           ;pic18f85j90.h: 78: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   160                           ;pic18f85j90.h: 79: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   161                           ;pic18f85j90.h: 80: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   162                           ;pic18f85j90.h: 81: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   163                           ;pic18f85j90.h: 82: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   164                           ;pic18f85j90.h: 84: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   165                           ;pic18f85j90.h: 85: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   166                           ;pic18f85j90.h: 86: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   167                           ;pic18f85j90.h: 87: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   168                           ;pic18f85j90.h: 88: static near unsigned char LC
      +                          DDATA4 @ 0xFBF;
   169                           ;pic18f85j90.h: 89: static near unsigned char LC
      +                          DDATA3 @ 0xFBE;
   170                           ;pic18f85j90.h: 90: static near unsigned char LC
      +                          DDATA2 @ 0xFBD;
   171                           ;pic18f85j90.h: 91: static near unsigned char LC
      +                          DDATA1 @ 0xFBC;
   172                           ;pic18f85j90.h: 92: static near unsigned char LC
      +                          DDATA0 @ 0xFBB;
   173                           ;pic18f85j90.h: 93: static near unsigned char LC
      +                          DSE5 @ 0xFBA;
   174                           ;pic18f85j90.h: 94: static near unsigned char LC
      +                          DSE4 @ 0xFB9;
   175                           ;pic18f85j90.h: 95: static near unsigned char LC
      +                          DSE3 @ 0xFB8;
   176                           ;pic18f85j90.h: 96: static near unsigned char LC
      +                          DSE2 @ 0xFB7;
   177                           ;pic18f85j90.h: 97: static near unsigned char LC
      +                          DSE1 @ 0xFB6;
   178                           ;pic18f85j90.h: 98: static volatile near unsigne
      +                          d char CVRCON @ 0xFB5;
   179                           ;pic18f85j90.h: 99: static volatile near unsigne
      +                          d char CMCON @ 0xFB4;
   180                           ;pic18f85j90.h: 100: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   181                           ;pic18f85j90.h: 101: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   182                           ;pic18f85j90.h: 103: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   183                           ;pic18f85j90.h: 104: static near unsigned char T
      +                          3CON @ 0xFB1;
   184                           ;pic18f85j90.h: 105: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   185                           ;pic18f85j90.h: 107: static near unsigned char S
      +                          PBRG @ 0xFAF;
   186                           ;pic18f85j90.h: 108: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   187                           ;pic18f85j90.h: 110: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   188                           ;pic18f85j90.h: 111: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   189                           ;pic18f85j90.h: 113: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   190                           ;pic18f85j90.h: 114: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   191                           ;pic18f85j90.h: 116: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   192                           ;pic18f85j90.h: 117: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   193                           ;pic18f85j90.h: 119: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   194                           ;pic18f85j90.h: 120: static volatile near unsign
      +                          ed char LCDPS @ 0xFAA;
   195                           ;pic18f85j90.h: 121: static near unsigned char L
      +                          CDSE0 @ 0xFA9;
   196                           ;pic18f85j90.h: 122: static volatile near unsign
      +                          ed char LCDCON @ 0xFA8;
   197                           ;pic18f85j90.h: 123: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   198                           ;pic18f85j90.h: 124: static volatile near unsign
      +                          ed char EECON1 @ 0xFA6;
   199                           ;pic18f85j90.h: 125: static near unsigned char I
      +                          PR3 @ 0xFA5;
   200                           ;pic18f85j90.h: 126: static volatile near unsign
      +                          ed char PIR3 @ 0xFA4;
   201  000000                     	;#
   202                           ;	_shCW assigned to ?a_MarkMinMax+0
   203  000000                     _MarkMinMax$shCW	set	?a_MarkMinMax
   204                           ;       param _shCO assigned to ?_MarkMinMax+0
   205  000000                     _MarkMinMax$shCO	set	?_MarkMinMax
   206                           ;main.h: 31: asm("\tglobal __config" "2"); asm("
      +                          \t__config" "2" " equ " "0xFF7F&0xFFFF&0xFFFB&0x
      +                          FFFC&0xF7FF");
   207  000000                     	;#
   208                           ;main.h: 32: asm("\tglobal __config" "3"); asm("
      +                          \t__config" "3" " equ " "0xFFFF");
   209  000000                     	;#
   210                           ;main.c: 34: unsigned char tzn[9]={'1','2','3','
      +                          4','5','6','7','8','9'};
   211                           ;main.c: 35: extern unsigned char dCVBC[];
   212                           ;main.c: 37: unsigned int LiczCRC(unsigned char 
      +                          *tb, unsigned char n);
   213                           ;main.c: 38: unsigned char TWO_ASCIItoHEX(unsign
      +                          ed char a1, unsigned char a0);
   214                           ;main.c: 39: unsigned char CheckCHK(unsigned cha
      +                          r a3, unsigned char a2, unsigned char a1, unsign
      +                          ed char a0, unsigned int h);
   215                           ;main.c: 40: unsigned int FOUR_ASCIItoHEX(unsign
      +                          ed char b3, unsigned char b2, unsigned char b1, 
      +                          unsigned char b0);
   216                           ;main.c: 41: void HEXtoTWO_ASCII(unsigned char h
      +                          ,unsigned char *a1, unsigned char *a0);
   217                           ;main.c: 42: void HEXtoFOUR_ASCII(unsigned int h
      +                          ,unsigned char *a3, unsigned char *a2,unsigned c
      +                          har *a1, unsigned char *a0);
   218                           ;main.c: 43: void StartRWtoCVBS(unsigned char MS
      +                          S,unsigned int DID,unsigned int DTA);
   219                           ;main.c: 46: void DecWsw(void);
   220                           ;main.c: 47: void main(void)
   221                           ;main.c: 48: {
   222  000922                     _main:
   223  000000                     
   224                           ;main.c: 52: InitOsc();
   225  000922  ECBD  F03F         	call	_InitOsc	;wreg free
   226                           ;main.c: 53: InitGlobal();
   227  000926  EC1B  F012         	call	_InitGlobal	;wreg free
   228                           ;main.c: 54: InitTimer1();
   229  00092A  EC8F  F03F         	call	_InitTimer1	;wreg free
   230                           ;main.c: 55: InitPWM2();
   231  00092E  EC1A  F03F         	call	_InitPWM2	;wreg free
   232                           ;main.c: 56: InitLLED();
   233  000932  EC7F  F03D         	call	_InitLLED	;wreg free
   234                           ;main.c: 57: InitPort();
   235  000936  ECAE  F038         	call	_InitPort	;wreg free
   236                           ;main.c: 58: InitTransProc();
   237  00093A  EC7D  F031         	call	_InitTransProc	;wreg free
   238                           ;main.c: 59: InitUart();
   239  00093E  ECBB  F039         	call	_InitUart	;wreg free
   240                           ;main.c: 60: InitI2C();
   241  000942  EC1C  F03C         	call	_InitI2C	;wreg free
   242                           ;main.c: 61: InitWsw();
   243  000946  ECB7  F012         	call	_InitWsw	;wreg free
   244                           ;main.c: 62: RC1=1;
   245  00094A  8282               	bsf	3970,1,c	;volatile
   246                           ;main.c: 65: if (!POR||!BOR)
   247  00094C  A2D0               	btfss	4048,1,c	;volatile
   248  00094E  D002               	goto	u30
   249  000950  B0D0               	btfsc	4048,0,c	;volatile
   250  000952  D005               	goto	l25
   251  000954                     u30:
   252                           ;main.c: 66: {
   253  000954  EC12  F026         	call	_TestScr	;wreg free
   254                           ;main.c: 68: PwrOnDelay();
   255  000958  ECB0  F03F         	call	_PwrOnDelay	;wreg free
   256                           ;main.c: 69: }
   257  00095C  D002               	goto	l26
   258  00095E                     l25:
   259                           ;main.c: 70: else
   260  00095E  ECB0  F03F         	call	_PwrOnDelay	;wreg free
   261  000962                     l26:
   262                           ;main.c: 73: }
   263  000962  EC43  F026         	call	_EndTestScr	;wreg free
   264                           ;main.c: 77: if (!POR||!BOR)
   265  000966  A2D0               	btfss	4048,1,c	;volatile
   266  000968  D002               	goto	u60
   267  00096A  B0D0               	btfsc	4048,0,c	;volatile
   268  00096C  D002               	goto	l27
   269  00096E                     u60:
   270                           ;main.c: 78: {
   271  00096E  82D0               	bsf	4048,1,c	;volatile
   272                           ;main.c: 80: BOR=1;
   273  000970  80D0               	bsf	4048,0,c	;volatile
   274  000972                     l27:
   275                           ;main.c: 81: }
   276  000972  ECA7  F02C         	call	_InitKonf	;wreg free
   277                           ;main.c: 87: ADCON1=0x0f;
   278  000976  0E0F               	movlw	15
   279  000978  6EC1               	movwf	4033,c
   280                           ;main.c: 88: TRISA=0xff;
   281  00097A  6892               	setf	3986,c	;volatile
   282                           ;main.c: 148: PFN.KRS=0;
   283  00097C  0102               	movlb	(_PFN+37) shr (0+8)
   284  00097E  6B2B               	clrf	(_PFN+37)& (0+255),b
   285                           ;main.c: 149: PFN._toInit=1;
   286  000980  8B09               	bsf	(_PFN+3)& (0+255),5,b
   287  000982                     l29:
   288                           ;main.c: 150: while(1)
   289                           ;main.c: 151: {
   290  000982  0004               	clrwdt		;#
   291                           ;main.c: 153: if(MGSD._NO_ODB||PFN._toInit) Init
      +                          UNIData();
   292  000984  0102               	movlb	(_MGSD+1) shr (0+8)
   293  000986  B3EC               	btfsc	(_MGSD+1)& (0+255),1,b
   294  000988  D002               	goto	u90
   295  00098A  0102               	movlb	(_PFN+3) shr (0+8)
   296  00098C  BB09               	btfsc	(_PFN+3)& (0+255),5,b
   297  00098E                     u90:
   298  00098E  D80C               	call	_InitUNIData	;wreg free
   299                           ;main.c: 154: MKonfiguracja();
   300  000990  EC43  F02D         	call	_MKonfiguracja	;wreg free
   301                           ;main.c: 155: TrybPracy();
   302  000994  ECD9  F027         	call	_TrybPracy	;wreg free
   303                           ;main.c: 156: RingProc();
   304  000998  EC48  F03E         	call	_RingProc	;wreg free
   305                           ;main.c: 157: RefData();
   306  00099C  D963               	call	_RefData	;wreg free
   307                           ;main.c: 158: DecWsw();
   308  00099E  EC26  F00C         	call	_DecWsw	;wreg free
   309                           ;main.c: 159: DecRes();
   310  0009A2  EC02  F012         	call	_DecRes	;wreg free
   311  0009A6  D7ED               	goto	l29
   312  0009A8                     __end_of_main:
   313                           ;main.c: 165: void InitUNIData(void)
   314                           ;main.c: 166: {
   315  0009A8                     _InitUNIData:
   316  000000                     
   317                           ;main.c: 167: static unsigned char n=0;
   318  0009A8  EC7A  F01E         	call	_EndErr	;wreg free
   319                           ;main.c: 171: EndPR();
   320  0009AC  EC95  F021         	call	_EndPR	;wreg free
   321                           ;main.c: 172: EndNst();
   322  0009B0  ECD7  F023         	call	_EndNst	;wreg free
   323                           ;main.c: 173: ClrAllMarks();
   324  0009B4  ECEC  F01C         	call	_ClrAllMarks	;wreg free
   325                           ;main.c: 174: ClrDig(1,1,0);
   326  0009B8  0E01               	movlw	1
   327  0009BA  0100               	movlb	__Lparam shr (0+8)
   328  0009BC  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
   329  0009BE  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
   330  0009C0  0E01               	movlw	1
   331  0009C2  ECBA  F025         	call	_ClrDig
   332                           ;main.c: 175: Mark(10,2);
   333  0009C6  0E02               	movlw	2
   334  0009C8  0100               	movlb	__Lparam shr (0+8)
   335  0009CA  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
   336  0009CC  0E0A               	movlw	10
   337  0009CE  ECDB  F023         	call	_Mark
   338                           ;main.c: 176: BitSet2(&RSDT1.inSTAT0,7,1);
   339  0009D2  0100               	movlb	__Lparam shr (0+8)
   340  0009D4  0E8E               	movlw	low (_RSDT1+50)
   341  0009D6  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   342  0009D8  0E02               	movlw	high (_RSDT1+50)
   343  0009DA  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   344  0009DC  0E07               	movlw	7
   345  0009DE  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   346  0009E0  0E01               	movlw	1
   347  0009E2  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   348  0009E4  ECC8  F03E         	call	_BitSet2	;wreg free
   349                           ;main.c: 177: PFN._kalVNT=0;
   350  0009E8  0102               	movlb	(_PFN+7) shr (0+8)
   351  0009EA  910D               	bcf	(_PFN+7)& (0+255),0,b
   352                           ;main.c: 178: PFN._opgres=0;
   353  0009EC  9F0B               	bcf	(_PFN+5)& (0+255),7,b
   354                           ;main.c: 179: PFN._opgprg=0;
   355  0009EE  910C               	bcf	(_PFN+6)& (0+255),0,b
   356                           ;main.c: 180: PFN._ferr=0;
   357  0009F0  990B               	bcf	(_PFN+5)& (0+255),4,b
   358                           ;main.c: 181: n=0;
   359  0009F2  0107               	movlb	F2603 shr (0+8)
   360  0009F4  6B69               	clrf	F2603& (0+255),b
   361                           ;main.c: 182: PrintVerBoards(1);
   362  0009F6  0E01               	movlw	1
   363  0009F8  EC3E  F009         	call	_PrintVerBoards
   364                           ;main.c: 183: while((n++<10||(!PFN._opgres&&!PFN
      +                          ._opgprg)||(PFN._opgres&&!PFN._ferr)))
   365  0009FC  D088               	goto	l33
   366  0009FE                     l34:
   367                           ;main.c: 184: {
   368  0009FE  0E01               	movlw	1
   369  000A00  ECF4  F03D         	call	_SetLightLLed
   370                           ;main.c: 186: while(!MGSD._TransACK)
   371  000A04                     l36:
   372  000A04  0102               	movlb	_MGSD shr (0+8)
   373  000A06  B9EB               	btfsc	_MGSD& (0+255),4,b
   374  000A08  D004               	goto	u100
   375                           ;main.c: 187: {
   376  000A0A  0004               	clrwdt		;#
   377                           ;main.c: 189: RingProc();
   378  000A0C  EC48  F03E         	call	_RingProc	;wreg free
   379  000A10  D7F9               	goto	l36
   380  000A12                     u100:
   381                           ;main.c: 190: }
   382  000A12  0102               	movlb	_MGSD shr (0+8)
   383  000A14  99EB               	bcf	_MGSD& (0+255),4,b
   384                           ;main.c: 192: PFN._opgres=GetBit2(RSDT1.outSTAT0
      +                          ,0);
   385  000A16  0100               	movlb	__Lparam shr (0+8)
   386  000A18  6BD0               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
   387  000A1A  C272  FFE8         	movff	_RSDT1+22,wreg
   388  000A1E  EC95  F03E         	call	_GetBit2
   389  000A22  0102               	movlb	(_PFN+5) shr (0+8)
   390  000A24  9F0B               	bcf	(_PFN+5)& (0+255),7,b
   391  000A26  B0D8               	btfsc	status,0,c
   392  000A28  8F0B               	bsf	(_PFN+5)& (0+255),7,b
   393                           ;main.c: 193: PFN._opgprg=GetBit2(RSDT1.outSTAT0
      +                          ,1);
   394  000A2A  0E01               	movlw	1
   395  000A2C  0100               	movlb	__Lparam shr (0+8)
   396  000A2E  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   397  000A30  C272  FFE8         	movff	_RSDT1+22,wreg
   398  000A34  EC95  F03E         	call	_GetBit2
   399  000A38  0102               	movlb	(_PFN+6) shr (0+8)
   400  000A3A  910C               	bcf	(_PFN+6)& (0+255),0,b
   401  000A3C  B0D8               	btfsc	status,0,c
   402  000A3E  810C               	bsf	(_PFN+6)& (0+255),0,b
   403                           ;main.c: 194: PFN._ferr=GetBit2(RSDT1.outSTAT1,3
      +                          );
   404  000A40  0E03               	movlw	3
   405  000A42  0100               	movlb	__Lparam shr (0+8)
   406  000A44  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   407  000A46  C273  FFE8         	movff	_RSDT1+23,wreg
   408  000A4A  EC95  F03E         	call	_GetBit2
   409  000A4E  0102               	movlb	(_PFN+5) shr (0+8)
   410  000A50  990B               	bcf	(_PFN+5)& (0+255),4,b
   411  000A52  B0D8               	btfsc	status,0,c
   412  000A54  890B               	bsf	(_PFN+5)& (0+255),4,b
   413                           ;main.c: 195: PFN._kalVNT=GetBit2(RSDT1.outSTAT2
      +                          ,7);
   414  000A56  0E07               	movlw	7
   415  000A58  0100               	movlb	__Lparam shr (0+8)
   416  000A5A  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   417  000A5C  C274  FFE8         	movff	_RSDT1+24,wreg
   418  000A60  EC95  F03E         	call	_GetBit2
   419  000A64  0102               	movlb	(_PFN+7) shr (0+8)
   420  000A66  910D               	bcf	(_PFN+7)& (0+255),0,b
   421  000A68  B0D8               	btfsc	status,0,c
   422  000A6A  810D               	bsf	(_PFN+7)& (0+255),0,b
   423                           ;main.c: 196: if(!PFN._opgres)
   424  000A6C  BF0B               	btfsc	(_PFN+5)& (0+255),7,b
   425  000A6E  D04A               	goto	l39
   426                           ;main.c: 197: {
   427  000A70  0100               	movlb	__Lparam shr (0+8)
   428  000A72  0E8F               	movlw	low (_RSDT1+51)
   429  000A74  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   430  000A76  0E02               	movlw	high (_RSDT1+51)
   431  000A78  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   432  000A7A  0E03               	movlw	3
   433  000A7C  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   434  000A7E  0E01               	movlw	1
   435  000A80  EC68  F039         	call	_RdPrt
   436  000A84  0E00               	movlw	0
   437  000A86  B0D8               	btfsc	status,0,c
   438  000A88  0E01               	movlw	1
   439  000A8A  0100               	movlb	__Lparam shr (0+8)
   440  000A8C  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   441  000A8E  ECC8  F03E         	call	_BitSet2	;wreg free
   442                           ;main.c: 199: BitSet2(&RSDT1.inSTAT1,4,RdPrt(0))
      +                          ;
   443  000A92  0100               	movlb	__Lparam shr (0+8)
   444  000A94  0E8F               	movlw	low (_RSDT1+51)
   445  000A96  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   446  000A98  0E02               	movlw	high (_RSDT1+51)
   447  000A9A  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   448  000A9C  0E04               	movlw	4
   449  000A9E  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   450  000AA0  0E00               	movlw	0
   451  000AA2  EC68  F039         	call	_RdPrt
   452  000AA6  0E00               	movlw	0
   453  000AA8  B0D8               	btfsc	status,0,c
   454  000AAA  0E01               	movlw	1
   455  000AAC  0100               	movlb	__Lparam shr (0+8)
   456  000AAE  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   457  000AB0  ECC8  F03E         	call	_BitSet2	;wreg free
   458                           ;main.c: 200: PFN.RDZ0=RSDT1.outRDZ0;
   459  000AB4  C25E  F20E         	movff	_RSDT1+2,_PFN+8
   460                           ;main.c: 201: PFN.RDZ1=RSDT1.outRDZ1;
   461  000AB8  C25F  F20F         	movff	_RSDT1+3,_PFN+9
   462                           ;main.c: 202: PFN._EnAleg=((PFN.RDZ1&0x0F)==0);
   463  000ABC  C20F  FFE8         	movff	_PFN+9,wreg
   464  000AC0  0B0F               	andlw	15
   465  000AC2  0E00               	movlw	0
   466  000AC4  B4D8               	btfsc	status,2,c
   467  000AC6  0E01               	movlw	1
   468  000AC8  6E00               	movwf	btemp,c
   469  000ACA  EE02  F00A         	lfsr	0,_PFN+4
   470  000ACE  18EF               	xorwf	indf0,w,c
   471  000AD0  0BFE               	andlw	-2
   472  000AD2  1800               	xorwf	btemp,w,c
   473  000AD4  6EEF               	movwf	indf0,c
   474                           ;main.c: 203: PFN.vUNI02=(PFN.RDZ1&0xF0)>>4;
   475  000AD6  C20F  F000         	movff	_PFN+9,btemp
   476  000ADA  0EF0               	movlw	-16
   477  000ADC  1600               	andwf	btemp,f,c
   478  000ADE  3800               	swapf	btemp,w,c
   479  000AE0  0B0F               	andlw	15
   480  000AE2  CFE8 F223          	movff	wreg,_PFN+29
   481                           ;main.c: 204: if(PFN._kalVNT)
   482  000AE6  0102               	movlb	(_PFN+7) shr (0+8)
   483  000AE8  A10D               	btfss	(_PFN+7)& (0+255),0,b
   484  000AEA  D006               	goto	l40
   485                           ;main.c: 205: {
   486  000AEC  0E08               	movlw	8
   487  000AEE  CFE8 F769          	movff	wreg,F2603
   488                           ;main.c: 208: PrintVerBoards(0);
   489  000AF2  0E00               	movlw	0
   490  000AF4  DBC3               	call	_PrintVerBoards
   491                           ;main.c: 209: }
   492  000AF6  D00B               	goto	l33
   493  000AF8                     l40:
   494                           ;main.c: 210: else {Mark(11,0);}
   495  000AF8  0100               	movlb	__Lparam shr (0+8)
   496  000AFA  6BDD               	clrf	?_Mark^(__Lparam& (0+65280)),b
   497  000AFC  0E0B               	movlw	11
   498  000AFE  ECDB  F023         	call	_Mark
   499                           ;main.c: 211: }
   500  000B02  D005               	goto	l33
   501  000B04                     l39:
   502                           ;main.c: 212: else
   503  000B04  0100               	movlb	__Lparam shr (0+8)
   504  000B06  6BDD               	clrf	?_Mark^(__Lparam& (0+65280)),b
   505  000B08  0E0B               	movlw	11
   506  000B0A  ECDB  F023         	call	_Mark
   507  000B0E                     l33:
   508  000B0E  0107               	movlb	F2603 shr (0+8)
   509  000B10  2B69               	incf	F2603& (0+255),f,b
   510  000B12  0569               	decf	F2603& (0+255),w,b
   511  000B14  6E00               	movwf	btemp,c
   512  000B16  0E0A               	movlw	10
   513  000B18  5C00               	subwf	btemp,w,c
   514  000B1A  E201 D770          	bnc	l34
   515  000B1E  0102               	movlb	(_PFN+5) shr (0+8)
   516  000B20  BF0B               	btfsc	(_PFN+5)& (0+255),7,b
   517  000B22  D002               	goto	u210
   518  000B24  A10C               	btfss	(_PFN+6)& (0+255),0,b
   519  000B26  D76B               	goto	l34
   520  000B28                     u210:
   521  000B28  0102               	movlb	(_PFN+5) shr (0+8)
   522  000B2A  AF0B               	btfss	(_PFN+5)& (0+255),7,b
   523  000B2C  D002               	goto	u250
   524  000B2E  A90B               	btfss	(_PFN+5)& (0+255),4,b
   525  000B30  D766               	goto	l34
   526  000B32                     u250:
   527                           ;main.c: 215: }
   528  000B32  0102               	movlb	_MGSD shr (0+8)
   529  000B34  99EB               	bcf	_MGSD& (0+255),4,b
   530                           ;main.c: 219: PFN._fnserw=GetBit2(RSDT1.outSTAT0
      +                          ,4);
   531  000B36  0E04               	movlw	4
   532  000B38  0100               	movlb	__Lparam shr (0+8)
   533  000B3A  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   534  000B3C  C272  FFE8         	movff	_RSDT1+22,wreg
   535  000B40  EC95  F03E         	call	_GetBit2
   536  000B44  0102               	movlb	(_PFN+2) shr (0+8)
   537  000B46  9D08               	bcf	(_PFN+2)& (0+255),6,b
   538  000B48  B0D8               	btfsc	status,0,c
   539  000B4A  8D08               	bsf	(_PFN+2)& (0+255),6,b
   540                           ;main.c: 220: PFN._aleg=GetBit2(RSDT1.outSTAT0,5
      +                          );
   541  000B4C  0E05               	movlw	5
   542  000B4E  0100               	movlb	__Lparam shr (0+8)
   543  000B50  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   544  000B52  C272  FFE8         	movff	_RSDT1+22,wreg
   545  000B56  EC95  F03E         	call	_GetBit2
   546  000B5A  0102               	movlb	(_PFN+3) shr (0+8)
   547  000B5C  9109               	bcf	(_PFN+3)& (0+255),0,b
   548  000B5E  B0D8               	btfsc	status,0,c
   549  000B60  8109               	bsf	(_PFN+3)& (0+255),0,b
   550                           ;main.c: 221: PFN._off=GetBit2(RSDT1.outSTAT2,6)
      +                          ;
   551  000B62  0E06               	movlw	6
   552  000B64  0100               	movlb	__Lparam shr (0+8)
   553  000B66  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   554  000B68  C274  FFE8         	movff	_RSDT1+24,wreg
   555  000B6C  EC95  F03E         	call	_GetBit2
   556  000B70  0102               	movlb	_PFN shr (0+8)
   557  000B72  9106               	bcf	_PFN& (0+255),0,b
   558  000B74  B0D8               	btfsc	status,0,c
   559  000B76  8106               	bsf	_PFN& (0+255),0,b
   560                           ;main.c: 222: PFN._lato=GetBit2(RSDT1.outSTAT2,5
      +                          );
   561  000B78  0E05               	movlw	5
   562  000B7A  0100               	movlb	__Lparam shr (0+8)
   563  000B7C  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   564  000B7E  C274  FFE8         	movff	_RSDT1+24,wreg
   565  000B82  EC95  F03E         	call	_GetBit2
   566  000B86  0102               	movlb	_PFN shr (0+8)
   567  000B88  9306               	bcf	_PFN& (0+255),1,b
   568  000B8A  B0D8               	btfsc	status,0,c
   569  000B8C  8306               	bsf	_PFN& (0+255),1,b
   570                           ;main.c: 223: PFN._zima=GetBit2(RSDT1.outSTAT2,4
      +                          );
   571  000B8E  0E04               	movlw	4
   572  000B90  0100               	movlb	__Lparam shr (0+8)
   573  000B92  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   574  000B94  C274  FFE8         	movff	_RSDT1+24,wreg
   575  000B98  EC95  F03E         	call	_GetBit2
   576  000B9C  0102               	movlb	_PFN shr (0+8)
   577  000B9E  9506               	bcf	_PFN& (0+255),2,b
   578  000BA0  B0D8               	btfsc	status,0,c
   579  000BA2  8506               	bsf	_PFN& (0+255),2,b
   580                           ;main.c: 224: PFN._kalVNT=GetBit2(RSDT1.outSTAT2
      +                          ,7);
   581  000BA4  0E07               	movlw	7
   582  000BA6  0100               	movlb	__Lparam shr (0+8)
   583  000BA8  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   584  000BAA  C274  FFE8         	movff	_RSDT1+24,wreg
   585  000BAE  EC95  F03E         	call	_GetBit2
   586  000BB2  0102               	movlb	(_PFN+7) shr (0+8)
   587  000BB4  910D               	bcf	(_PFN+7)& (0+255),0,b
   588  000BB6  B0D8               	btfsc	status,0,c
   589  000BB8  810D               	bsf	(_PFN+7)& (0+255),0,b
   590                           ;main.c: 226: PFN.RDZ0=RSDT1.outRDZ0;
   591  000BBA  C25E  F20E         	movff	_RSDT1+2,_PFN+8
   592                           ;main.c: 227: PFN.RDZ1=RSDT1.outRDZ1;
   593  000BBE  C25F  F20F         	movff	_RSDT1+3,_PFN+9
   594                           ;main.c: 228: PFN.PCW=RSDT1.outPCW;
   595  000BC2  C266  F227         	movff	_RSDT1+10,_PFN+33
   596  000BC6  6B28               	clrf	(_PFN+34)& (0+255),b
   597                           ;main.c: 229: PFN.PCO=RSDT1.outPCO;
   598  000BC8  C265  F225         	movff	_RSDT1+9,_PFN+31
   599  000BCC  6B26               	clrf	(_PFN+32)& (0+255),b
   600                           ;main.c: 230: PFN.ECO=RSDT1.outECO;
   601  000BCE  C26F  F229         	movff	_RSDT1+19,_PFN+35
   602  000BD2  6B2A               	clrf	(_PFN+36)& (0+255),b
   603                           ;main.c: 231: PFN._newPCO=0;
   604  000BD4  9309               	bcf	(_PFN+3)& (0+255),1,b
   605                           ;main.c: 232: PFN._newPCW=0;
   606  000BD6  9509               	bcf	(_PFN+3)& (0+255),2,b
   607                           ;main.c: 233: PFN._newECO=0;
   608  000BD8  9709               	bcf	(_PFN+3)& (0+255),3,b
   609                           ;main.c: 234: PFN._EnAleg=((PFN.RDZ1&0x0F)==0);
   610  000BDA  C20F  FFE8         	movff	_PFN+9,wreg
   611  000BDE  0B0F               	andlw	15
   612  000BE0  0E00               	movlw	0
   613  000BE2  B4D8               	btfsc	status,2,c
   614  000BE4  0E01               	movlw	1
   615  000BE6  6E00               	movwf	btemp,c
   616  000BE8  EE02  F00A         	lfsr	0,_PFN+4
   617  000BEC  18EF               	xorwf	indf0,w,c
   618  000BEE  0BFE               	andlw	-2
   619  000BF0  1800               	xorwf	btemp,w,c
   620  000BF2  6EEF               	movwf	indf0,c
   621                           ;main.c: 235: PFN.vUNI02=(PFN.RDZ1&0xF0)>>4;
   622  000BF4  C20F  F000         	movff	_PFN+9,btemp
   623  000BF8  0EF0               	movlw	-16
   624  000BFA  1600               	andwf	btemp,f,c
   625  000BFC  3800               	swapf	btemp,w,c
   626  000BFE  0B0F               	andlw	15
   627  000C00  CFE8 F223          	movff	wreg,_PFN+29
   628                           ;main.c: 236: PFN._prn_res=0;
   629  000C04  9D07               	bcf	(_PFN+1)& (0+255),6,b
   630                           ;main.c: 237: PFN._res=0;
   631  000C06  9909               	bcf	(_PFN+3)& (0+255),4,b
   632                           ;main.c: 238: RefData();
   633  000C08  D82D               	call	_RefData	;wreg free
   634                           ;main.c: 239: BitSet2(&RSDT1.inSTAT0,7,0);
   635  000C0A  0100               	movlb	__Lparam shr (0+8)
   636  000C0C  0E8E               	movlw	low (_RSDT1+50)
   637  000C0E  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   638  000C10  0E02               	movlw	high (_RSDT1+50)
   639  000C12  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   640  000C14  0E07               	movlw	7
   641  000C16  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   642  000C18  6BD2               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   643  000C1A  ECC8  F03E         	call	_BitSet2	;wreg free
   644                           ;main.c: 240: Mark(10,0);
   645  000C1E  0100               	movlb	__Lparam shr (0+8)
   646  000C20  6BDD               	clrf	?_Mark^(__Lparam& (0+65280)),b
   647  000C22  0E0A               	movlw	10
   648  000C24  ECDB  F023         	call	_Mark
   649                           ;main.c: 241: PFN._toInit=0;
   650  000C28  0102               	movlb	(_PFN+3) shr (0+8)
   651  000C2A  9B09               	bcf	(_PFN+3)& (0+255),5,b
   652                           ;main.c: 242: ResBufKeyEx(&ky[1]);
   653  000C2C  0100               	movlb	__Lparam shr (0+8)
   654  000C2E  0EAA               	movlw	low (_ky+5)
   655  000C30  6FD4               	movwf	?_ResBufKeyEx^(__Lparam& (0+65280)),b
   656  000C32  0E02               	movlw	high (_ky+5)
   657  000C34  6FD5               	movwf	(?_ResBufKeyEx+1)^(__Lparam& (0+65280)),b
   658  000C36  ECD0  F035         	call	_ResBufKeyEx	;wreg free
   659                           ;main.c: 243: ResBufKeyEx(&ky[0]);
   660  000C3A  0100               	movlb	__Lparam shr (0+8)
   661  000C3C  0EA5               	movlw	low _ky
   662  000C3E  6FD4               	movwf	?_ResBufKeyEx^(__Lparam& (0+65280)),b
   663  000C40  0E02               	movlw	high _ky
   664  000C42  6FD5               	movwf	(?_ResBufKeyEx+1)^(__Lparam& (0+65280)),b
   665  000C44  ECD0  F035         	call	_ResBufKeyEx	;wreg free
   666                           ;main.c: 244: ResBufKeyEx(&ky[2]);
   667  000C48  0100               	movlb	__Lparam shr (0+8)
   668  000C4A  0EAF               	movlw	low (_ky+10)
   669  000C4C  6FD4               	movwf	?_ResBufKeyEx^(__Lparam& (0+65280)),b
   670  000C4E  0E02               	movlw	high (_ky+10)
   671  000C50  6FD5               	movwf	(?_ResBufKeyEx+1)^(__Lparam& (0+65280)),b
   672  000C52  ECD0  F035         	call	_ResBufKeyEx	;wreg free
   673                           ;main.c: 245: ResBufKeyEx(&ky[3]);
   674  000C56  0100               	movlb	__Lparam shr (0+8)
   675  000C58  0EB4               	movlw	low (_ky+15)
   676  000C5A  6FD4               	movwf	?_ResBufKeyEx^(__Lparam& (0+65280)),b
   677  000C5C  0E02               	movlw	high (_ky+15)
   678  000C5E  6FD5               	movwf	(?_ResBufKeyEx+1)^(__Lparam& (0+65280)),b
   679  000C60  EFD0  F035         	goto	_ResBufKeyEx	;wreg free
   680                           ;main.c: 246: }
   681  000C64                     __end_of_InitUNIData:
   682                           ;main.c: 249: void RefData(void)
   683                           ;main.c: 250: {
   684  000C64                     _RefData:
   685  000000                     
   686                           ;main.c: 253: if(RSDT1.RD_STD)
   687  000C64  0102               	movlb	(_RSDT1+1) shr (0+8)
   688  000C66  A15D               	btfss	(_RSDT1+1)& (0+255),0,b
   689  000C68  D1C0               	goto	l44
   690                           ;main.c: 254: {
   691  000C6A  835D               	bsf	(_RSDT1+1)& (0+255),1,b
   692                           ;main.c: 256: RSDT1.RD_STD=0;
   693  000C6C  915D               	bcf	(_RSDT1+1)& (0+255),0,b
   694                           ;main.c: 257: PFN.RDZ0=RSDT1.outRDZ0;
   695  000C6E  C25E  F20E         	movff	_RSDT1+2,_PFN+8
   696                           ;main.c: 258: PFN.RDZ1=RSDT1.outRDZ1;
   697  000C72  C25F  F20F         	movff	_RSDT1+3,_PFN+9
   698                           ;main.c: 259: PFN.CO=RSDT1.outCO;
   699  000C76  C260  F210         	movff	_RSDT1+4,_PFN+10
   700                           ;main.c: 260: PFN.CW=RSDT1.outCW;
   701  000C7A  C261  F211         	movff	_RSDT1+5,_PFN+11
   702                           ;main.c: 261: PFN.CS=RSDT1.outCS;
   703  000C7E  C262  F212         	movff	_RSDT1+6,_PFN+12
   704                           ;main.c: 262: PFN.IN=RSDT1.outIN;
   705  000C82  C263  F213         	movff	_RSDT1+7,_PFN+13
   706                           ;main.c: 263: PFN.VNT=RSDT1.outVNT;
   707  000C86  C264  F216         	movff	_RSDT1+8,_PFN+16
   708                           ;main.c: 264: PFN.minPCO=RSDT1.outPCOmn;
   709  000C8A  C267  F21D         	movff	_RSDT1+11,_PFN+23
   710  000C8E  6B1E               	clrf	(_PFN+24)& (0+255),b
   711                           ;main.c: 265: PFN.maxPCO=RSDT1.outPCOmx;
   712  000C90  C268  F21B         	movff	_RSDT1+12,_PFN+21
   713  000C94  6B1C               	clrf	(_PFN+22)& (0+255),b
   714                           ;main.c: 266: PFN.minPCW=RSDT1.outPCWmn;
   715  000C96  C269  F221         	movff	_RSDT1+13,_PFN+27
   716  000C9A  6B22               	clrf	(_PFN+28)& (0+255),b
   717                           ;main.c: 267: PFN.maxPCW=RSDT1.outPCWmx;
   718  000C9C  C26A  F21F         	movff	_RSDT1+14,_PFN+25
   719  000CA0  6B20               	clrf	(_PFN+26)& (0+255),b
   720                           ;main.c: 268: PFN.PPCO=RSDT1.outPPCO;
   721  000CA2  C26B  F217         	movff	_RSDT1+15,_PFN+17
   722                           ;main.c: 269: PFN.PPCW=RSDT1.outPPCW;
   723  000CA6  C26C  F218         	movff	_RSDT1+16,_PFN+18
   724                           ;main.c: 270: PFN.KAWR=RSDT1.outAWR;
   725  000CAA  C26E  F219         	movff	_RSDT1+18,_PFN+19
   726                           ;main.c: 271: PFN.KERR=RSDT1.outERR;
   727  000CAE  C26D  F21A         	movff	_RSDT1+17,_PFN+20
   728                           ;main.c: 272: PFN.PP=RSDT1.outPP;
   729  000CB2  C270  F214         	movff	_RSDT1+20,_PFN+14
   730                           ;main.c: 273: PFN.PG=RSDT1.outPG;
   731  000CB6  C271  F215         	movff	_RSDT1+21,_PFN+15
   732                           ;main.c: 275: PFN._EnAleg=((PFN.RDZ1&0x0F)==0);
   733  000CBA  C20F  FFE8         	movff	_PFN+9,wreg
   734  000CBE  0B0F               	andlw	15
   735  000CC0  0E00               	movlw	0
   736  000CC2  B4D8               	btfsc	status,2,c
   737  000CC4  0E01               	movlw	1
   738  000CC6  6E00               	movwf	btemp,c
   739  000CC8  EE02  F00A         	lfsr	0,_PFN+4
   740  000CCC  18EF               	xorwf	indf0,w,c
   741  000CCE  0BFE               	andlw	-2
   742  000CD0  1800               	xorwf	btemp,w,c
   743  000CD2  6EEF               	movwf	indf0,c
   744                           ;main.c: 277: PFN._opgres=GetBit2(RSDT1.outSTAT0
      +                          ,0);
   745  000CD4  0100               	movlb	__Lparam shr (0+8)
   746  000CD6  6BD0               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
   747  000CD8  C272  FFE8         	movff	_RSDT1+22,wreg
   748  000CDC  EC95  F03E         	call	_GetBit2
   749  000CE0  0102               	movlb	(_PFN+5) shr (0+8)
   750  000CE2  9F0B               	bcf	(_PFN+5)& (0+255),7,b
   751  000CE4  B0D8               	btfsc	status,0,c
   752  000CE6  8F0B               	bsf	(_PFN+5)& (0+255),7,b
   753                           ;main.c: 278: PFN._opgprg=GetBit2(RSDT1.outSTAT0
      +                          ,1);
   754  000CE8  0E01               	movlw	1
   755  000CEA  0100               	movlb	__Lparam shr (0+8)
   756  000CEC  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   757  000CEE  C272  FFE8         	movff	_RSDT1+22,wreg
   758  000CF2  EC95  F03E         	call	_GetBit2
   759  000CF6  0102               	movlb	(_PFN+6) shr (0+8)
   760  000CF8  910C               	bcf	(_PFN+6)& (0+255),0,b
   761  000CFA  B0D8               	btfsc	status,0,c
   762  000CFC  810C               	bsf	(_PFN+6)& (0+255),0,b
   763                           ;main.c: 279: PFN._plmCO=GetBit2(RSDT1.outSTAT0,
      +                          2);
   764  000CFE  0E02               	movlw	2
   765  000D00  0100               	movlb	__Lparam shr (0+8)
   766  000D02  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   767  000D04  C272  FFE8         	movff	_RSDT1+22,wreg
   768  000D08  EC95  F03E         	call	_GetBit2
   769  000D0C  0102               	movlb	(_PFN+4) shr (0+8)
   770  000D0E  930A               	bcf	(_PFN+4)& (0+255),1,b
   771  000D10  B0D8               	btfsc	status,0,c
   772  000D12  830A               	bsf	(_PFN+4)& (0+255),1,b
   773                           ;main.c: 280: PFN._plmCW=GetBit2(RSDT1.outSTAT0,
      +                          3);
   774  000D14  0E03               	movlw	3
   775  000D16  0100               	movlb	__Lparam shr (0+8)
   776  000D18  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   777  000D1A  C272  FFE8         	movff	_RSDT1+22,wreg
   778  000D1E  EC95  F03E         	call	_GetBit2
   779  000D22  0102               	movlb	(_PFN+4) shr (0+8)
   780  000D24  950A               	bcf	(_PFN+4)& (0+255),2,b
   781  000D26  B0D8               	btfsc	status,0,c
   782  000D28  850A               	bsf	(_PFN+4)& (0+255),2,b
   783                           ;main.c: 281: PFN._ofnserw=GetBit2(RSDT1.outSTAT
      +                          0,4);
   784  000D2A  0E04               	movlw	4
   785  000D2C  0100               	movlb	__Lparam shr (0+8)
   786  000D2E  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   787  000D30  C272  FFE8         	movff	_RSDT1+22,wreg
   788  000D34  EC95  F03E         	call	_GetBit2
   789  000D38  0102               	movlb	(_PFN+4) shr (0+8)
   790  000D3A  970A               	bcf	(_PFN+4)& (0+255),3,b
   791  000D3C  B0D8               	btfsc	status,0,c
   792  000D3E  870A               	bsf	(_PFN+4)& (0+255),3,b
   793                           ;main.c: 282: PFN._oaleg=GetBit2(RSDT1.outSTAT0,
      +                          5);
   794  000D40  0E05               	movlw	5
   795  000D42  0100               	movlb	__Lparam shr (0+8)
   796  000D44  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   797  000D46  C272  FFE8         	movff	_RSDT1+22,wreg
   798  000D4A  EC95  F03E         	call	_GetBit2
   799  000D4E  0102               	movlb	(_PFN+4) shr (0+8)
   800  000D50  990A               	bcf	(_PFN+4)& (0+255),4,b
   801  000D52  B0D8               	btfsc	status,0,c
   802  000D54  890A               	bsf	(_PFN+4)& (0+255),4,b
   803                           ;main.c: 283: PFN._opKNF=GetBit2(RSDT1.outSTAT0,
      +                          6);
   804  000D56  0E06               	movlw	6
   805  000D58  0100               	movlb	__Lparam shr (0+8)
   806  000D5A  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   807  000D5C  C272  FFE8         	movff	_RSDT1+22,wreg
   808  000D60  EC95  F03E         	call	_GetBit2
   809  000D64  0102               	movlb	(_PFN+4) shr (0+8)
   810  000D66  9F0A               	bcf	(_PFN+4)& (0+255),7,b
   811  000D68  B0D8               	btfsc	status,0,c
   812  000D6A  8F0A               	bsf	(_PFN+4)& (0+255),7,b
   813                           ;main.c: 284: PFN._enKNF=GetBit2(RSDT1.outSTAT0,
      +                          7);
   814  000D6C  0E07               	movlw	7
   815  000D6E  0100               	movlb	__Lparam shr (0+8)
   816  000D70  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   817  000D72  C272  FFE8         	movff	_RSDT1+22,wreg
   818  000D76  EC95  F03E         	call	_GetBit2
   819  000D7A  0102               	movlb	(_PFN+5) shr (0+8)
   820  000D7C  910B               	bcf	(_PFN+5)& (0+255),0,b
   821  000D7E  B0D8               	btfsc	status,0,c
   822  000D80  810B               	bsf	(_PFN+5)& (0+255),0,b
   823                           ;main.c: 286: PFN._tdzCO=PFN._plmCO&&GetBit2(RSD
      +                          T1.outSTAT1,1);
   824  000D82  A30A               	btfss	(_PFN+4)& (0+255),1,b
   825  000D84  D00A               	goto	u430
   826  000D86  0E01               	movlw	1
   827  000D88  0100               	movlb	__Lparam shr (0+8)
   828  000D8A  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   829  000D8C  C273  FFE8         	movff	_RSDT1+23,wreg
   830  000D90  EC95  F03E         	call	_GetBit2
   831  000D94  E302               	bnc	u430
   832  000D96  0E01               	movlw	1
   833  000D98  D001               	goto	u440
   834  000D9A                     u430:
   835  000D9A  0E00               	movlw	0
   836  000D9C                     u440:
   837  000D9C  6E00               	movwf	btemp,c
   838  000D9E  EE02  F00B         	lfsr	0,_PFN+5
   839  000DA2  3600               	rlcf	btemp,f,c
   840  000DA4  50EF               	movf	indf0,w,c
   841  000DA6  1800               	xorwf	btemp,w,c
   842  000DA8  0BFD               	andlw	-3
   843  000DAA  1800               	xorwf	btemp,w,c
   844  000DAC  6EEF               	movwf	indf0,c
   845                           ;main.c: 287: PFN._tdzCW=PFN._plmCW&&GetBit2(RSD
      +                          T1.outSTAT1,0);
   846  000DAE  0102               	movlb	(_PFN+4) shr (0+8)
   847  000DB0  A50A               	btfss	(_PFN+4)& (0+255),2,b
   848  000DB2  D009               	goto	u470
   849  000DB4  0100               	movlb	__Lparam shr (0+8)
   850  000DB6  6BD0               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
   851  000DB8  C273  FFE8         	movff	_RSDT1+23,wreg
   852  000DBC  EC95  F03E         	call	_GetBit2
   853  000DC0  E302               	bnc	u470
   854  000DC2  0E01               	movlw	1
   855  000DC4  D001               	goto	u480
   856  000DC6                     u470:
   857  000DC6  0E00               	movlw	0
   858  000DC8                     u480:
   859  000DC8  6E00               	movwf	btemp,c
   860  000DCA  EE02  F00B         	lfsr	0,_PFN+5
   861  000DCE  3600               	rlcf	btemp,f,c
   862  000DD0  3600               	rlcf	btemp,f,c
   863  000DD2  50EF               	movf	indf0,w,c
   864  000DD4  1800               	xorwf	btemp,w,c
   865  000DD6  0BFB               	andlw	-5
   866  000DD8  1800               	xorwf	btemp,w,c
   867  000DDA  6EEF               	movwf	indf0,c
   868                           ;main.c: 288: PFN._fmsg=GetBit2(RSDT1.outSTAT1,2
      +                          );
   869  000DDC  0E02               	movlw	2
   870  000DDE  0100               	movlb	__Lparam shr (0+8)
   871  000DE0  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   872  000DE2  C273  FFE8         	movff	_RSDT1+23,wreg
   873  000DE6  EC95  F03E         	call	_GetBit2
   874  000DEA  0102               	movlb	(_PFN+5) shr (0+8)
   875  000DEC  970B               	bcf	(_PFN+5)& (0+255),3,b
   876  000DEE  B0D8               	btfsc	status,0,c
   877  000DF0  870B               	bsf	(_PFN+5)& (0+255),3,b
   878                           ;main.c: 289: PFN._ferr=GetBit2(RSDT1.outSTAT1,3
      +                          );
   879  000DF2  0E03               	movlw	3
   880  000DF4  0100               	movlb	__Lparam shr (0+8)
   881  000DF6  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   882  000DF8  C273  FFE8         	movff	_RSDT1+23,wreg
   883  000DFC  EC95  F03E         	call	_GetBit2
   884  000E00  0102               	movlb	(_PFN+5) shr (0+8)
   885  000E02  990B               	bcf	(_PFN+5)& (0+255),4,b
   886  000E04  B0D8               	btfsc	status,0,c
   887  000E06  890B               	bsf	(_PFN+5)& (0+255),4,b
   888                           ;main.c: 290: PFN._fL3=GetBit2(RSDT1.outSTAT1,4)
      +                          ;
   889  000E08  0E04               	movlw	4
   890  000E0A  0100               	movlb	__Lparam shr (0+8)
   891  000E0C  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   892  000E0E  C273  FFE8         	movff	_RSDT1+23,wreg
   893  000E12  EC95  F03E         	call	_GetBit2
   894  000E16  0102               	movlb	(_PFN+5) shr (0+8)
   895  000E18  9B0B               	bcf	(_PFN+5)& (0+255),5,b
   896  000E1A  B0D8               	btfsc	status,0,c
   897  000E1C  8B0B               	bsf	(_PFN+5)& (0+255),5,b
   898                           ;main.c: 291: PFN._pgd=GetBit2(RSDT1.outSTAT1,5)
      +                          ;
   899  000E1E  0E05               	movlw	5
   900  000E20  0100               	movlb	__Lparam shr (0+8)
   901  000E22  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   902  000E24  C273  FFE8         	movff	_RSDT1+23,wreg
   903  000E28  EC95  F03E         	call	_GetBit2
   904  000E2C  0102               	movlb	(_PFN+5) shr (0+8)
   905  000E2E  9D0B               	bcf	(_PFN+5)& (0+255),6,b
   906  000E30  B0D8               	btfsc	status,0,c
   907  000E32  8D0B               	bsf	(_PFN+5)& (0+255),6,b
   908                           ;main.c: 292: PFN._obgCO=GetBit2(RSDT1.outSTAT1,
      +                          6);
   909  000E34  0E06               	movlw	6
   910  000E36  0100               	movlb	__Lparam shr (0+8)
   911  000E38  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   912  000E3A  C273  FFE8         	movff	_RSDT1+23,wreg
   913  000E3E  EC95  F03E         	call	_GetBit2
   914  000E42  0102               	movlb	(_PFN+4) shr (0+8)
   915  000E44  9B0A               	bcf	(_PFN+4)& (0+255),5,b
   916  000E46  B0D8               	btfsc	status,0,c
   917  000E48  8B0A               	bsf	(_PFN+4)& (0+255),5,b
   918                           ;main.c: 293: PFN._obgCW=GetBit2(RSDT1.outSTAT1,
      +                          7);
   919  000E4A  0E07               	movlw	7
   920  000E4C  0100               	movlb	__Lparam shr (0+8)
   921  000E4E  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   922  000E50  C273  FFE8         	movff	_RSDT1+23,wreg
   923  000E54  EC95  F03E         	call	_GetBit2
   924  000E58  0102               	movlb	(_PFN+4) shr (0+8)
   925  000E5A  9D0A               	bcf	(_PFN+4)& (0+255),6,b
   926  000E5C  B0D8               	btfsc	status,0,c
   927  000E5E  8D0A               	bsf	(_PFN+4)& (0+255),6,b
   928                           ;main.c: 295: PFN._errCS=GetBit2(RSDT1.outSTAT2,
      +                          2);
   929  000E60  0E02               	movlw	2
   930  000E62  0100               	movlb	__Lparam shr (0+8)
   931  000E64  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   932  000E66  C274  FFE8         	movff	_RSDT1+24,wreg
   933  000E6A  EC95  F03E         	call	_GetBit2
   934  000E6E  0102               	movlb	(_PFN+6) shr (0+8)
   935  000E70  930C               	bcf	(_PFN+6)& (0+255),1,b
   936  000E72  B0D8               	btfsc	status,0,c
   937  000E74  830C               	bsf	(_PFN+6)& (0+255),1,b
   938                           ;main.c: 296: PFN._errCO=GetBit2(RSDT1.outSTAT2,
      +                          1);
   939  000E76  0E01               	movlw	1
   940  000E78  0100               	movlb	__Lparam shr (0+8)
   941  000E7A  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   942  000E7C  C274  FFE8         	movff	_RSDT1+24,wreg
   943  000E80  EC95  F03E         	call	_GetBit2
   944  000E84  0102               	movlb	(_PFN+6) shr (0+8)
   945  000E86  950C               	bcf	(_PFN+6)& (0+255),2,b
   946  000E88  B0D8               	btfsc	status,0,c
   947  000E8A  850C               	bsf	(_PFN+6)& (0+255),2,b
   948                           ;main.c: 297: PFN._errCW=GetBit2(RSDT1.outSTAT2,
      +                          0);
   949  000E8C  0100               	movlb	__Lparam shr (0+8)
   950  000E8E  6BD0               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
   951  000E90  C274  FFE8         	movff	_RSDT1+24,wreg
   952  000E94  EC95  F03E         	call	_GetBit2
   953  000E98  0102               	movlb	(_PFN+6) shr (0+8)
   954  000E9A  970C               	bcf	(_PFN+6)& (0+255),3,b
   955  000E9C  B0D8               	btfsc	status,0,c
   956  000E9E  870C               	bsf	(_PFN+6)& (0+255),3,b
   957                           ;main.c: 298: PFN._fnoCS=GetBit2(RSDT1.outSTAT2,
      +                          3);
   958  000EA0  0E03               	movlw	3
   959  000EA2  0100               	movlb	__Lparam shr (0+8)
   960  000EA4  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   961  000EA6  C274  FFE8         	movff	_RSDT1+24,wreg
   962  000EAA  EC95  F03E         	call	_GetBit2
   963  000EAE  0102               	movlb	(_PFN+6) shr (0+8)
   964  000EB0  990C               	bcf	(_PFN+6)& (0+255),4,b
   965  000EB2  B0D8               	btfsc	status,0,c
   966  000EB4  890C               	bsf	(_PFN+6)& (0+255),4,b
   967                           ;main.c: 299: PFN._ofzima=GetBit2(RSDT1.outSTAT2
      +                          ,4);
   968  000EB6  0E04               	movlw	4
   969  000EB8  0100               	movlb	__Lparam shr (0+8)
   970  000EBA  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   971  000EBC  C274  FFE8         	movff	_RSDT1+24,wreg
   972  000EC0  EC95  F03E         	call	_GetBit2
   973  000EC4  0102               	movlb	(_PFN+6) shr (0+8)
   974  000EC6  9B0C               	bcf	(_PFN+6)& (0+255),5,b
   975  000EC8  B0D8               	btfsc	status,0,c
   976  000ECA  8B0C               	bsf	(_PFN+6)& (0+255),5,b
   977                           ;main.c: 300: PFN._oflato=GetBit2(RSDT1.outSTAT2
      +                          ,5);
   978  000ECC  0E05               	movlw	5
   979  000ECE  0100               	movlb	__Lparam shr (0+8)
   980  000ED0  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   981  000ED2  C274  FFE8         	movff	_RSDT1+24,wreg
   982  000ED6  EC95  F03E         	call	_GetBit2
   983  000EDA  0102               	movlb	(_PFN+6) shr (0+8)
   984  000EDC  9D0C               	bcf	(_PFN+6)& (0+255),6,b
   985  000EDE  B0D8               	btfsc	status,0,c
   986  000EE0  8D0C               	bsf	(_PFN+6)& (0+255),6,b
   987                           ;main.c: 301: PFN._ofoff=GetBit2(RSDT1.outSTAT2,
      +                          6);
   988  000EE2  0E06               	movlw	6
   989  000EE4  0100               	movlb	__Lparam shr (0+8)
   990  000EE6  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   991  000EE8  C274  FFE8         	movff	_RSDT1+24,wreg
   992  000EEC  EC95  F03E         	call	_GetBit2
   993  000EF0  0102               	movlb	(_PFN+6) shr (0+8)
   994  000EF2  9F0C               	bcf	(_PFN+6)& (0+255),7,b
   995  000EF4  B0D8               	btfsc	status,0,c
   996  000EF6  8F0C               	bsf	(_PFN+6)& (0+255),7,b
   997                           ;main.c: 302: PFN._kalVNT=GetBit2(RSDT1.outSTAT2
      +                          ,7);
   998  000EF8  0E07               	movlw	7
   999  000EFA  0100               	movlb	__Lparam shr (0+8)
  1000  000EFC  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1001  000EFE  C274  FFE8         	movff	_RSDT1+24,wreg
  1002  000F02  EC95  F03E         	call	_GetBit2
  1003  000F06  0102               	movlb	(_PFN+7) shr (0+8)
  1004  000F08  910D               	bcf	(_PFN+7)& (0+255),0,b
  1005  000F0A  B0D8               	btfsc	status,0,c
  1006  000F0C  810D               	bsf	(_PFN+7)& (0+255),0,b
  1007                           ;main.c: 304: PFN._zcfm=GetBit2(RSDT1.outSTAT3,0
      +                          );
  1008  000F0E  0100               	movlb	__Lparam shr (0+8)
  1009  000F10  6BD0               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
  1010  000F12  C275  FFE8         	movff	_RSDT1+25,wreg
  1011  000F16  EC95  F03E         	call	_GetBit2
  1012  000F1A  0102               	movlb	(_PFN+7) shr (0+8)
  1013  000F1C  930D               	bcf	(_PFN+7)& (0+255),1,b
  1014  000F1E  B0D8               	btfsc	status,0,c
  1015  000F20  830D               	bsf	(_PFN+7)& (0+255),1,b
  1016                           ;main.c: 305: PFN._vnt=GetBit2(RSDT1.outSTAT3,1)
      +                          ;
  1017  000F22  0E01               	movlw	1
  1018  000F24  0100               	movlb	__Lparam shr (0+8)
  1019  000F26  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1020  000F28  C275  FFE8         	movff	_RSDT1+25,wreg
  1021  000F2C  EC95  F03E         	call	_GetBit2
  1022  000F30  0102               	movlb	(_PFN+7) shr (0+8)
  1023  000F32  950D               	bcf	(_PFN+7)& (0+255),2,b
  1024  000F34  B0D8               	btfsc	status,0,c
  1025  000F36  850D               	bsf	(_PFN+7)& (0+255),2,b
  1026                           ;main.c: 306: PFN._rozruch=GetBit2(RSDT1.outSTAT
      +                          3,2);
  1027  000F38  0E02               	movlw	2
  1028  000F3A  0100               	movlb	__Lparam shr (0+8)
  1029  000F3C  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1030  000F3E  C275  FFE8         	movff	_RSDT1+25,wreg
  1031  000F42  EC95  F03E         	call	_GetBit2
  1032  000F46  0102               	movlb	(_PFN+7) shr (0+8)
  1033  000F48  970D               	bcf	(_PFN+7)& (0+255),3,b
  1034  000F4A  B0D8               	btfsc	status,0,c
  1035  000F4C  870D               	bsf	(_PFN+7)& (0+255),3,b
  1036                           ;main.c: 307: PFN._errIN=GetBit2(RSDT1.outSTAT3,
      +                          3);
  1037  000F4E  0E03               	movlw	3
  1038  000F50  0100               	movlb	__Lparam shr (0+8)
  1039  000F52  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1040  000F54  C275  FFE8         	movff	_RSDT1+25,wreg
  1041  000F58  EC95  F03E         	call	_GetBit2
  1042  000F5C  0102               	movlb	(_PFN+7) shr (0+8)
  1043  000F5E  990D               	bcf	(_PFN+7)& (0+255),4,b
  1044  000F60  B0D8               	btfsc	status,0,c
  1045  000F62  890D               	bsf	(_PFN+7)& (0+255),4,b
  1046                           ;main.c: 308: PFN._pmpPWM=GetBit2(RSDT1.outSTAT3
      +                          ,4);
  1047  000F64  0E04               	movlw	4
  1048  000F66  0100               	movlb	__Lparam shr (0+8)
  1049  000F68  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1050  000F6A  C275  FFE8         	movff	_RSDT1+25,wreg
  1051  000F6E  EC95  F03E         	call	_GetBit2
  1052  000F72  0102               	movlb	(_PFN+7) shr (0+8)
  1053  000F74  9B0D               	bcf	(_PFN+7)& (0+255),5,b
  1054  000F76  B0D8               	btfsc	status,0,c
  1055  000F78  8B0D               	bsf	(_PFN+7)& (0+255),5,b
  1056                           ;main.c: 309: PFN._trbECO=GetBit2(RSDT1.outSTAT3
      +                          ,5);
  1057  000F7A  0E05               	movlw	5
  1058  000F7C  0100               	movlb	__Lparam shr (0+8)
  1059  000F7E  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1060  000F80  C275  FFE8         	movff	_RSDT1+25,wreg
  1061  000F84  EC95  F03E         	call	_GetBit2
  1062  000F88  0102               	movlb	(_PFN+7) shr (0+8)
  1063  000F8A  9D0D               	bcf	(_PFN+7)& (0+255),6,b
  1064  000F8C  B0D8               	btfsc	status,0,c
  1065  000F8E  8D0D               	bsf	(_PFN+7)& (0+255),6,b
  1066                           ;main.c: 310: PFN._timZAS=GetBit2(RSDT1.outSTAT3
      +                          ,6);
  1067  000F90  0E06               	movlw	6
  1068  000F92  0100               	movlb	__Lparam shr (0+8)
  1069  000F94  6FD0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1070  000F96  C275  FFE8         	movff	_RSDT1+25,wreg
  1071  000F9A  EC95  F03E         	call	_GetBit2
  1072  000F9E  0102               	movlb	(_PFN+7) shr (0+8)
  1073  000FA0  9F0D               	bcf	(_PFN+7)& (0+255),7,b
  1074  000FA2  B0D8               	btfsc	status,0,c
  1075  000FA4  8F0D               	bsf	(_PFN+7)& (0+255),7,b
  1076                           ;main.c: 313: if(PFN.vUNI02<2) PFN._timZAS=1;
  1077  000FA6  0E02               	movlw	2
  1078  000FA8  6123               	cpfslt	(_PFN+29)& (0+255),b
  1079  000FAA  D001               	goto	l45
  1080  000FAC  8F0D               	bsf	(_PFN+7)& (0+255),7,b
  1081  000FAE                     l45:
  1082                           ;main.c: 315: if(PFN._ofnserw) PFN.b_ofnserw=1;
  1083  000FAE  0102               	movlb	(_PFN+4) shr (0+8)
  1084  000FB0  B70A               	btfsc	(_PFN+4)& (0+255),3,b
  1085  000FB2  8124               	bsf	(_PFN+30)& (0+255),0,b
  1086                           ;main.c: 316: if(PFN._ofnserw&&!PFN._fnserw) PFN
      +                          ._fnserw=1;
  1087  000FB4  B70A               	btfsc	(_PFN+4)& (0+255),3,b
  1088  000FB6  BD08               	btfsc	(_PFN+2)& (0+255),6,b
  1089  000FB8  D002               	goto	l47
  1090  000FBA  0102               	movlb	(_PFN+2) shr (0+8)
  1091  000FBC  8D08               	bsf	(_PFN+2)& (0+255),6,b
  1092  000FBE                     l47:
  1093                           ;main.c: 317: if(PFN.b_ofnserw&&!PFN._ofnserw) P
      +                          FN._fnserw=0;
  1094  000FBE  0102               	movlb	(_PFN+30) shr (0+8)
  1095  000FC0  B124               	btfsc	(_PFN+30)& (0+255),0,b
  1096  000FC2  B70A               	btfsc	(_PFN+4)& (0+255),3,b
  1097  000FC4  D002               	goto	l48
  1098  000FC6  0102               	movlb	(_PFN+2) shr (0+8)
  1099  000FC8  9D08               	bcf	(_PFN+2)& (0+255),6,b
  1100  000FCA                     l48:
  1101                           ;main.c: 318: if(PFN._oaleg) PFN.b_oaleg=1;
  1102  000FCA  0102               	movlb	(_PFN+4) shr (0+8)
  1103  000FCC  B90A               	btfsc	(_PFN+4)& (0+255),4,b
  1104  000FCE  8324               	bsf	(_PFN+30)& (0+255),1,b
  1105                           ;main.c: 319: if(PFN._oaleg&&!PFN._aleg) PFN._al
      +                          eg=1;
  1106  000FD0  B90A               	btfsc	(_PFN+4)& (0+255),4,b
  1107  000FD2  B109               	btfsc	(_PFN+3)& (0+255),0,b
  1108  000FD4  D002               	goto	l50
  1109  000FD6  0102               	movlb	(_PFN+3) shr (0+8)
  1110  000FD8  8109               	bsf	(_PFN+3)& (0+255),0,b
  1111  000FDA                     l50:
  1112                           ;main.c: 320: if(PFN.b_oaleg&&!PFN._oaleg) PFN._
      +                          aleg=0;
  1113  000FDA  0102               	movlb	(_PFN+30) shr (0+8)
  1114  000FDC  B324               	btfsc	(_PFN+30)& (0+255),1,b
  1115  000FDE  B90A               	btfsc	(_PFN+4)& (0+255),4,b
  1116  000FE0  D002               	goto	l51
  1117  000FE2  0102               	movlb	(_PFN+3) shr (0+8)
  1118  000FE4  9109               	bcf	(_PFN+3)& (0+255),0,b
  1119  000FE6                     l51:
  1120                           ;main.c: 321: RSDT1.RRD_STD=0;
  1121  000FE6  0102               	movlb	(_RSDT1+1) shr (0+8)
  1122  000FE8  935D               	bcf	(_RSDT1+1)& (0+255),1,b
  1123  000FEA                     l44:
  1124                           ;main.c: 322: }
  1125  000FEA  C225  F28B         	movff	_PFN+31,_RSDT1+47
  1126                           ;main.c: 326: RSDT1.inPCW=(unsigned char)PFN.PCW
      +                          ;
  1127  000FEE  C227  F28C         	movff	_PFN+33,_RSDT1+48
  1128                           ;main.c: 327: RSDT1.inECO=(unsigned char)PFN.ECO
      +                          ;
  1129  000FF2  C229  F28D         	movff	_PFN+35,_RSDT1+49
  1130                           ;main.c: 329: BitSet2(&RSDT1.inSTAT0,0,PFN._akty
      +                          wne_KNF);
  1131  000FF6  0100               	movlb	__Lparam shr (0+8)
  1132  000FF8  0E8E               	movlw	low (_RSDT1+50)
  1133  000FFA  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1134  000FFC  0E02               	movlw	high (_RSDT1+50)
  1135  000FFE  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1136  001000  6BD1               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1137  001002  EE02  F009         	lfsr	0,_PFN+3
  1138  001006  34EF               	rlcf	indf0,w,c
  1139  001008  34EF               	rlcf	indf0,w,c
  1140  00100A  0B01               	andlw	1
  1141  00100C  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1142  00100E  ECC8  F03E         	call	_BitSet2	;wreg free
  1143                           ;main.c: 331: BitSet2(&RSDT1.inSTAT0,1,PFN._fnse
      +                          rw&&!PFN._ofnserw);
  1144  001012  0100               	movlb	__Lparam shr (0+8)
  1145  001014  0E8E               	movlw	low (_RSDT1+50)
  1146  001016  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1147  001018  0E02               	movlw	high (_RSDT1+50)
  1148  00101A  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1149  00101C  0E01               	movlw	1
  1150  00101E  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1151  001020  0102               	movlb	(_PFN+2) shr (0+8)
  1152  001022  BD08               	btfsc	(_PFN+2)& (0+255),6,b
  1153  001024  B70A               	btfsc	(_PFN+4)& (0+255),3,b
  1154  001026  D001               	goto	u870
  1155  001028  D001               	goto	u880
  1156  00102A                     u870:
  1157  00102A  0E00               	movlw	0
  1158  00102C                     u880:
  1159  00102C  0100               	movlb	__Lparam shr (0+8)
  1160  00102E  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1161  001030  ECC8  F03E         	call	_BitSet2	;wreg free
  1162                           ;main.c: 332: BitSet2(&RSDT1.inSTAT0,2,PFN._aleg
      +                          &&!PFN._oaleg);
  1163  001034  0100               	movlb	__Lparam shr (0+8)
  1164  001036  0E8E               	movlw	low (_RSDT1+50)
  1165  001038  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1166  00103A  0E02               	movlw	high (_RSDT1+50)
  1167  00103C  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1168  00103E  0E02               	movlw	2
  1169  001040  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1170  001042  0102               	movlb	(_PFN+3) shr (0+8)
  1171  001044  B109               	btfsc	(_PFN+3)& (0+255),0,b
  1172  001046  B90A               	btfsc	(_PFN+4)& (0+255),4,b
  1173  001048  D002               	goto	u910
  1174  00104A  0E01               	movlw	1
  1175  00104C  D001               	goto	u920
  1176  00104E                     u910:
  1177  00104E  0E00               	movlw	0
  1178  001050                     u920:
  1179  001050  0100               	movlb	__Lparam shr (0+8)
  1180  001052  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1181  001054  ECC8  F03E         	call	_BitSet2	;wreg free
  1182                           ;main.c: 333: BitSet2(&RSDT1.inSTAT0,3,PFN._zima
      +                          &&!PFN._off);
  1183  001058  0100               	movlb	__Lparam shr (0+8)
  1184  00105A  0E8E               	movlw	low (_RSDT1+50)
  1185  00105C  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1186  00105E  0E02               	movlw	high (_RSDT1+50)
  1187  001060  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1188  001062  0E03               	movlw	3
  1189  001064  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1190  001066  0102               	movlb	_PFN shr (0+8)
  1191  001068  B506               	btfsc	_PFN& (0+255),2,b
  1192  00106A  B106               	btfsc	_PFN& (0+255),0,b
  1193  00106C  D002               	goto	u950
  1194  00106E  0E01               	movlw	1
  1195  001070  D001               	goto	u960
  1196  001072                     u950:
  1197  001072  0E00               	movlw	0
  1198  001074                     u960:
  1199  001074  0100               	movlb	__Lparam shr (0+8)
  1200  001076  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1201  001078  ECC8  F03E         	call	_BitSet2	;wreg free
  1202                           ;main.c: 334: BitSet2(&RSDT1.inSTAT0,4,PFN._lato
      +                          &&!PFN._off);
  1203  00107C  0100               	movlb	__Lparam shr (0+8)
  1204  00107E  0E8E               	movlw	low (_RSDT1+50)
  1205  001080  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1206  001082  0E02               	movlw	high (_RSDT1+50)
  1207  001084  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1208  001086  0E04               	movlw	4
  1209  001088  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1210  00108A  0102               	movlb	_PFN shr (0+8)
  1211  00108C  B306               	btfsc	_PFN& (0+255),1,b
  1212  00108E  B106               	btfsc	_PFN& (0+255),0,b
  1213  001090  D002               	goto	u990
  1214  001092  0E01               	movlw	1
  1215  001094  D001               	goto	u1000
  1216  001096                     u990:
  1217  001096  0E00               	movlw	0
  1218  001098                     u1000:
  1219  001098  0100               	movlb	__Lparam shr (0+8)
  1220  00109A  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1221  00109C  ECC8  F03E         	call	_BitSet2	;wreg free
  1222                           ;main.c: 335: BitSet2(&RSDT1.inSTAT0,5,PFN._off)
      +                          ;
  1223  0010A0  0100               	movlb	__Lparam shr (0+8)
  1224  0010A2  0E8E               	movlw	low (_RSDT1+50)
  1225  0010A4  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1226  0010A6  0E02               	movlw	high (_RSDT1+50)
  1227  0010A8  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1228  0010AA  0E05               	movlw	5
  1229  0010AC  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1230  0010AE  EE02  F006         	lfsr	0,_PFN
  1231  0010B2  50EF               	movf	indf0,w,c
  1232  0010B4  0B01               	andlw	1
  1233  0010B6  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1234  0010B8  ECC8  F03E         	call	_BitSet2	;wreg free
  1235                           ;main.c: 336: BitSet2(&RSDT1.inSTAT0,6,PFN._res)
      +                          ;
  1236  0010BC  0100               	movlb	__Lparam shr (0+8)
  1237  0010BE  0E8E               	movlw	low (_RSDT1+50)
  1238  0010C0  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1239  0010C2  0E02               	movlw	high (_RSDT1+50)
  1240  0010C4  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1241  0010C6  0E06               	movlw	6
  1242  0010C8  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1243  0010CA  EE02  F009         	lfsr	0,_PFN+3
  1244  0010CE  38EF               	swapf	indf0,w,c
  1245  0010D0  0B01               	andlw	1
  1246  0010D2  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1247  0010D4  ECC8  F03E         	call	_BitSet2	;wreg free
  1248                           ;main.c: 338: BitSet2(&RSDT1.inSTAT1,0,PFN._fns_
      +                          max);
  1249  0010D8  0100               	movlb	__Lparam shr (0+8)
  1250  0010DA  0E8F               	movlw	low (_RSDT1+51)
  1251  0010DC  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1252  0010DE  0E02               	movlw	high (_RSDT1+51)
  1253  0010E0  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1254  0010E2  6BD1               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1255  0010E4  EE02  F008         	lfsr	0,_PFN+2
  1256  0010E8  34EF               	rlcf	indf0,w,c
  1257  0010EA  34EF               	rlcf	indf0,w,c
  1258  0010EC  0B01               	andlw	1
  1259  0010EE  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1260  0010F0  ECC8  F03E         	call	_BitSet2	;wreg free
  1261                           ;main.c: 339: BitSet2(&RSDT1.inSTAT1,1,RdPrt(2))
      +                          ;
  1262  0010F4  0100               	movlb	__Lparam shr (0+8)
  1263  0010F6  0E8F               	movlw	low (_RSDT1+51)
  1264  0010F8  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1265  0010FA  0E02               	movlw	high (_RSDT1+51)
  1266  0010FC  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1267  0010FE  0E01               	movlw	1
  1268  001100  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1269  001102  0E02               	movlw	2
  1270  001104  EC68  F039         	call	_RdPrt
  1271  001108  0E00               	movlw	0
  1272  00110A  B0D8               	btfsc	status,0,c
  1273  00110C  0E01               	movlw	1
  1274  00110E  0100               	movlb	__Lparam shr (0+8)
  1275  001110  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1276  001112  ECC8  F03E         	call	_BitSet2	;wreg free
  1277                           ;main.c: 340: BitSet2(&RSDT1.inSTAT1,2,RdPrt(3))
      +                          ;
  1278  001116  0100               	movlb	__Lparam shr (0+8)
  1279  001118  0E8F               	movlw	low (_RSDT1+51)
  1280  00111A  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1281  00111C  0E02               	movlw	high (_RSDT1+51)
  1282  00111E  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1283  001120  0E02               	movlw	2
  1284  001122  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1285  001124  0E03               	movlw	3
  1286  001126  EC68  F039         	call	_RdPrt
  1287  00112A  0E00               	movlw	0
  1288  00112C  B0D8               	btfsc	status,0,c
  1289  00112E  0E01               	movlw	1
  1290  001130  0100               	movlb	__Lparam shr (0+8)
  1291  001132  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1292  001134  ECC8  F03E         	call	_BitSet2	;wreg free
  1293                           ;main.c: 341: BitSet2(&RSDT1.inSTAT1,3,RdPrt(1))
      +                          ;
  1294  001138  0100               	movlb	__Lparam shr (0+8)
  1295  00113A  0E8F               	movlw	low (_RSDT1+51)
  1296  00113C  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1297  00113E  0E02               	movlw	high (_RSDT1+51)
  1298  001140  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1299  001142  0E03               	movlw	3
  1300  001144  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1301  001146  0E01               	movlw	1
  1302  001148  EC68  F039         	call	_RdPrt
  1303  00114C  0E00               	movlw	0
  1304  00114E  B0D8               	btfsc	status,0,c
  1305  001150  0E01               	movlw	1
  1306  001152  0100               	movlb	__Lparam shr (0+8)
  1307  001154  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1308  001156  ECC8  F03E         	call	_BitSet2	;wreg free
  1309                           ;main.c: 342: BitSet2(&RSDT1.inSTAT1,4,RdPrt(0))
      +                          ;
  1310  00115A  0100               	movlb	__Lparam shr (0+8)
  1311  00115C  0E8F               	movlw	low (_RSDT1+51)
  1312  00115E  6FCF               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1313  001160  0E02               	movlw	high (_RSDT1+51)
  1314  001162  6FD0               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1315  001164  0E04               	movlw	4
  1316  001166  6FD1               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1317  001168  0E00               	movlw	0
  1318  00116A  EC68  F039         	call	_RdPrt
  1319  00116E  0E00               	movlw	0
  1320  001170  B0D8               	btfsc	status,0,c
  1321  001172  0E01               	movlw	1
  1322  001174  0100               	movlb	__Lparam shr (0+8)
  1323  001176  6FD2               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1324  001178  EFC8  F03E         	goto	_BitSet2	;wreg free
  1325                           ;main.c: 343: }
  1326  00117C                     __end_of_RefData:
  1327                           ;main.c: 345: void MarkMinMax(unsigned char shCW
      +                          ,unsigned char shCO)
  1328                           ;main.c: 346: {
  1329  00117C  00DB               	dw	?_MarkMinMax
  1330  00117E                     _MarkMinMax:
  1331  000000                     
  1332                           ; _shCW loaded to fsr2l
  1333  00117E  6ED9               	movwf	fsr2l,c
  1334                           ;_shCW stored from fsr2l
  1335                           ;main.c: 347: Mark(12,shCW&&(PFN.PCW<=PFN.minPCW
      +                          ));
  1336  001180  50D9               	movf	fsr2l,w,c
  1337  001182  E00E               	bz	u1030
  1338  001184  EE12  F027         	lfsr	1,_PFN+33
  1339  001188  EE02  F021         	lfsr	0,_PFN+27
  1340  00118C  52EE               	movf	postinc0,f,c
  1341  00118E  52E6               	movf	postinc1,f,c
  1342  001190  50E5               	movf	postdec1,w,c
  1343  001192  5CED               	subwf	postdec0,w,c
  1344  001194  E102               	bnz	u1025
  1345  001196  50E7               	movf	indf1,w,c
  1346  001198  5CEF               	subwf	indf0,w,c
  1347  00119A                     u1025:
  1348  00119A  E302               	bnc	u1030
  1349  00119C  0E01               	movlw	1
  1350  00119E  D001               	goto	u1040
  1351  0011A0                     u1030:
  1352  0011A0  0E00               	movlw	0
  1353  0011A2                     u1040:
  1354  0011A2  0100               	movlb	__Lparam shr (0+8)
  1355  0011A4  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  1356                           ;_shCW stored from fsr2l
  1357  0011A6  50D9               	movf	fsr2l,w,c
  1358  0011A8  6FDC               	movwf	?a_MarkMinMax^(__Lparam& (0+65280)),b
  1359  0011AA  0E0C               	movlw	12
  1360  0011AC  ECDB  F023         	call	_Mark
  1361                           ;main.c: 348: Mark(11,shCW&&(PFN.PCW>=PFN.maxPCW
      +                          ));
  1362  0011B0  0100               	movlb	__Lparam shr (0+8)
  1363  0011B2  51DC               	movf	?a_MarkMinMax^(__Lparam& (0+65280)),w
  1364  0011B4  E00E               	bz	u1070
  1365  0011B6  EE12  F01F         	lfsr	1,_PFN+25
  1366  0011BA  EE02  F027         	lfsr	0,_PFN+33
  1367  0011BE  52EE               	movf	postinc0,f,c
  1368  0011C0  52E6               	movf	postinc1,f,c
  1369  0011C2  50E5               	movf	postdec1,w,c
  1370  0011C4  5CED               	subwf	postdec0,w,c
  1371  0011C6  E102               	bnz	u1065
  1372  0011C8  50E7               	movf	indf1,w,c
  1373  0011CA  5CEF               	subwf	indf0,w,c
  1374  0011CC                     u1065:
  1375  0011CC  E302               	bnc	u1070
  1376  0011CE  0E01               	movlw	1
  1377  0011D0  D001               	goto	u1080
  1378  0011D2                     u1070:
  1379  0011D2  0E00               	movlw	0
  1380  0011D4                     u1080:
  1381  0011D4  0100               	movlb	__Lparam shr (0+8)
  1382  0011D6  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  1383  0011D8  0E0B               	movlw	11
  1384  0011DA  ECDB  F023         	call	_Mark
  1385                           ;main.c: 349: Mark(14,shCO&&(PFN.PCO<=PFN.minPCO
      +                          ));
  1386  0011DE  0100               	movlb	__Lparam shr (0+8)
  1387  0011E0  51DB               	movf	?_MarkMinMax^(__Lparam& (0+65280)),w
  1388  0011E2  E00E               	bz	u1110
  1389  0011E4  EE12  F025         	lfsr	1,_PFN+31
  1390  0011E8  EE02  F01D         	lfsr	0,_PFN+23
  1391  0011EC  52EE               	movf	postinc0,f,c
  1392  0011EE  52E6               	movf	postinc1,f,c
  1393  0011F0  50E5               	movf	postdec1,w,c
  1394  0011F2  5CED               	subwf	postdec0,w,c
  1395  0011F4  E102               	bnz	u1105
  1396  0011F6  50E7               	movf	indf1,w,c
  1397  0011F8  5CEF               	subwf	indf0,w,c
  1398  0011FA                     u1105:
  1399  0011FA  E302               	bnc	u1110
  1400  0011FC  0E01               	movlw	1
  1401  0011FE  D001               	goto	u1120
  1402  001200                     u1110:
  1403  001200  0E00               	movlw	0
  1404  001202                     u1120:
  1405  001202  0100               	movlb	__Lparam shr (0+8)
  1406  001204  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  1407  001206  0E0E               	movlw	14
  1408  001208  ECDB  F023         	call	_Mark
  1409                           ;main.c: 350: Mark(13,shCO&&(PFN.PCO>=PFN.maxPCO
      +                          ));
  1410  00120C  0100               	movlb	__Lparam shr (0+8)
  1411  00120E  51DB               	movf	?_MarkMinMax^(__Lparam& (0+65280)),w
  1412  001210  E00D               	bz	u1150
  1413  001212  EE12  F01B         	lfsr	1,_PFN+21
  1414  001216  EE02  F025         	lfsr	0,_PFN+31
  1415  00121A  52EE               	movf	postinc0,f,c
  1416  00121C  52E6               	movf	postinc1,f,c
  1417  00121E  50E5               	movf	postdec1,w,c
  1418  001220  5CED               	subwf	postdec0,w,c
  1419  001222  E102               	bnz	u1145
  1420  001224  50E7               	movf	indf1,w,c
  1421  001226  5CEF               	subwf	indf0,w,c
  1422  001228                     u1145:
  1423  001228  E301               	bnc	u1150
  1424  00122A  D022               	goto	L4
  1425  00122C                     u1150:
  1426  00122C  0E00               	movlw	0
  1427  00122E  D021               	goto	L2
  1428                           ;main.c: 351: }
  1429  001230                     __end_of_MarkMinMax:
  1430                           ;main.c: 352: void MarkMinMaxECO(void)
  1431                           ;main.c: 353: {
  1432  001230                     _MarkMinMaxECO:
  1433  000000                     
  1434                           ;main.c: 354: Mark(12,0);
  1435  001230  0100               	movlb	__Lparam shr (0+8)
  1436  001232  6BDD               	clrf	?_Mark^(__Lparam& (0+65280)),b
  1437  001234  0E0C               	movlw	12
  1438  001236  ECDB  F023         	call	_Mark
  1439                           ;main.c: 355: Mark(11,0);
  1440  00123A  0100               	movlb	__Lparam shr (0+8)
  1441  00123C  6BDD               	clrf	?_Mark^(__Lparam& (0+65280)),b
  1442  00123E  0E0B               	movlw	11
  1443  001240  ECDB  F023         	call	_Mark
  1444                           ;main.c: 356: Mark(14,PFN.ECO<=1);
  1445  001244  0102               	movlb	(_PFN+35) shr (0+8)
  1446  001246  0E00               	movlw	0
  1447  001248  5D2A               	subwf	(_PFN+36)& (0+255),w,b
  1448  00124A  0E02               	movlw	2
  1449  00124C  B4D8               	btfsc	status,2,c
  1450  00124E  5D29               	subwf	(_PFN+35)& (0+255),w,b
  1451  001250  0E00               	movlw	0
  1452  001252  A0D8               	btfss	status,0,c
  1453  001254  0E01               	movlw	1
  1454  001256  0100               	movlb	__Lparam shr (0+8)
  1455  001258  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  1456  00125A  0E0E               	movlw	14
  1457  00125C  ECDB  F023         	call	_Mark
  1458                           ;main.c: 357: Mark(13,PFN.ECO>=9);
  1459  001260  0102               	movlb	(_PFN+35) shr (0+8)
  1460  001262  0E00               	movlw	0
  1461  001264  5D2A               	subwf	(_PFN+36)& (0+255),w,b
  1462  001266  0E09               	movlw	9
  1463  001268  B4D8               	btfsc	status,2,c
  1464  00126A  5D29               	subwf	(_PFN+35)& (0+255),w,b
  1465  00126C  0E00               	movlw	0
  1466  00126E  B0D8               	btfsc	status,0,c
  1467  001270                     L4:
  1468  001270  0E01               	movlw	1
  1469  001272                     L2:
  1470  001272  0100               	movlb	__Lparam shr (0+8)
  1471  001274  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  1472  001276  0E0D               	movlw	13
  1473  001278  EFDB  F023         	goto	_Mark
  1474                           ;main.c: 358: }
  1475  00127C                     __end_of_MarkMinMaxECO:
  1476                           ;main.c: 362: void PrintVerBoards(unsigned char 
      +                          ref)
  1477                           ;main.c: 363: {
  1478  00127C                     _PrintVerBoards:
  1479  000000                     
  1480                           ;main.c: 364: if(ref)
  1481  00127C  52E8               	movf	wreg,f,c
  1482  00127E  E101 D0CA          	bz	l57
  1483                           ;main.c: 365: {
  1484  001282  0102               	movlb	(_M+47) shr (0+8)
  1485  001284  6B5B               	clrf	(_M+47)& (0+255),b
  1486                           ;main.c: 367: StartRTdS(6);
  1487  001286  0E06               	movlw	6
  1488  001288  EF16  F03B         	goto	_StartRTdS
  1489                           ;main.c: 368: return;
  1490                           ;main.c: 369: }
  1491  00128C                     l58:
  1492                           ;main.c: 371: {
  1493                           ;main.c: 373: ClrDig(1,1,0);
  1494  00128C  0E01               	movlw	1
  1495  00128E  0100               	movlb	__Lparam shr (0+8)
  1496  001290  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  1497  001292  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  1498  001294  0E01               	movlw	1
  1499  001296  ECBA  F025         	call	_ClrDig
  1500                           ;main.c: 374: Mark(11,0);
  1501  00129A  0100               	movlb	__Lparam shr (0+8)
  1502  00129C  6BDD               	clrf	?_Mark^(__Lparam& (0+65280)),b
  1503  00129E  0E0B               	movlw	11
  1504  0012A0  ECDB  F023         	call	_Mark
  1505                           ;main.c: 375: Mark(10,0);
  1506  0012A4  0100               	movlb	__Lparam shr (0+8)
  1507  0012A6  6BDD               	clrf	?_Mark^(__Lparam& (0+65280)),b
  1508  0012A8  0E0A               	movlw	10
  1509  0012AA  ECDB  F023         	call	_Mark
  1510                           ;main.c: 376: StartRTdS(6);
  1511  0012AE  0E06               	movlw	6
  1512  0012B0  EC16  F03B         	call	_StartRTdS
  1513                           ;main.c: 377: M.PVB=1;
  1514  0012B4  0E01               	movlw	1
  1515  0012B6  CFE8 F25B          	movff	wreg,_M+47
  1516                           ;main.c: 378: break;
  1517  0012BA  0C01               	retlw	1
  1518  0012BC                     l59:
  1519                           ;main.c: 379: case 1:
  1520                           ;main.c: 380: if(RTdS(6)<5) return;
  1521  0012BC  0E06               	movlw	6
  1522  0012BE  EC28  F03B         	call	_RTdS
  1523  0012C2  6E00               	movwf	btemp,c
  1524  0012C4  0E05               	movlw	5
  1525  0012C6  5C00               	subwf	btemp,w,c
  1526  0012C8  A0D8               	btfss	status,0,c
  1527  0012CA  0012               	return	
  1528                           ;main.c: 381: StartRTdS(6);
  1529  0012CC  0E06               	movlw	6
  1530  0012CE  EC16  F03B         	call	_StartRTdS
  1531                           ;main.c: 383: PrintVER(0xb1,PFN.vUNI02,1);
  1532  0012D2  C223  F0CF         	movff	_PFN+29,?_PrintVER
  1533  0012D6  0E01               	movlw	1
  1534  0012D8  0100               	movlb	__Lparam shr (0+8)
  1535  0012DA  6FD0               	movwf	(?_PrintVER+1)^(__Lparam& (0+65280)),b
  1536  0012DC  0EB1               	movlw	177
  1537  0012DE  EC60  F024         	call	_PrintVER
  1538                           ;main.c: 384: M.PVB=2;
  1539  0012E2  0E02               	movlw	2
  1540  0012E4  CFE8 F25B          	movff	wreg,_M+47
  1541                           ;main.c: 385: break;
  1542  0012E8  0C02               	retlw	2
  1543  0012EA                     l61:
  1544                           ;main.c: 386: case 2:
  1545                           ;main.c: 387: if(RTdS(6)<=15) return;
  1546  0012EA  0E06               	movlw	6
  1547  0012EC  EC28  F03B         	call	_RTdS
  1548  0012F0  6E00               	movwf	btemp,c
  1549  0012F2  0E10               	movlw	16
  1550  0012F4  5C00               	subwf	btemp,w,c
  1551  0012F6  A0D8               	btfss	status,0,c
  1552  0012F8  0012               	return	
  1553                           ;main.c: 388: StartRTdS(6);
  1554  0012FA  0E06               	movlw	6
  1555  0012FC  EC16  F03B         	call	_StartRTdS
  1556                           ;main.c: 389: ClrDig(1,1,0);
  1557  001300  0E01               	movlw	1
  1558  001302  0100               	movlb	__Lparam shr (0+8)
  1559  001304  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  1560  001306  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  1561  001308  0E01               	movlw	1
  1562  00130A  ECBA  F025         	call	_ClrDig
  1563                           ;main.c: 390: M.PVB=3;
  1564  00130E  0E03               	movlw	3
  1565  001310  CFE8 F25B          	movff	wreg,_M+47
  1566                           ;main.c: 391: break;
  1567  001314  0C03               	retlw	3
  1568  001316                     l63:
  1569                           ;main.c: 392: case 3:
  1570                           ;main.c: 393: if(RTdS(6)<5) return;
  1571  001316  0E06               	movlw	6
  1572  001318  EC28  F03B         	call	_RTdS
  1573  00131C  6E00               	movwf	btemp,c
  1574  00131E  0E05               	movlw	5
  1575  001320  5C00               	subwf	btemp,w,c
  1576  001322  A0D8               	btfss	status,0,c
  1577  001324  0012               	return	
  1578                           ;main.c: 394: StartRTdS(6);
  1579  001326  0E06               	movlw	6
  1580  001328  EC16  F03B         	call	_StartRTdS
  1581                           ;main.c: 395: PrintVER(0xb2,2,1);
  1582  00132C  0E02               	movlw	2
  1583  00132E  0100               	movlb	__Lparam shr (0+8)
  1584  001330  6FCF               	movwf	?_PrintVER^(__Lparam& (0+65280)),b
  1585  001332  0E01               	movlw	1
  1586  001334  6FD0               	movwf	(?_PrintVER+1)^(__Lparam& (0+65280)),b
  1587  001336  0EB2               	movlw	178
  1588  001338  EC60  F024         	call	_PrintVER
  1589                           ;main.c: 396: M.PVB=4;
  1590  00133C  0E04               	movlw	4
  1591  00133E  CFE8 F25B          	movff	wreg,_M+47
  1592                           ;main.c: 397: break;
  1593  001342  0C04               	retlw	4
  1594  001344                     l65:
  1595                           ;main.c: 398: case 4:
  1596                           ;main.c: 399: if(RTdS(6)<=15) return;
  1597  001344  0E06               	movlw	6
  1598  001346  EC28  F03B         	call	_RTdS
  1599  00134A  6E00               	movwf	btemp,c
  1600  00134C  0E10               	movlw	16
  1601  00134E  5C00               	subwf	btemp,w,c
  1602  001350  A0D8               	btfss	status,0,c
  1603  001352  0012               	return	
  1604                           ;main.c: 400: StartRTdS(6);
  1605  001354  0E06               	movlw	6
  1606  001356  EC16  F03B         	call	_StartRTdS
  1607                           ;main.c: 401: ClrDig(1,1,0);
  1608  00135A  0E01               	movlw	1
  1609  00135C  0100               	movlb	__Lparam shr (0+8)
  1610  00135E  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  1611  001360  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  1612  001362  0E01               	movlw	1
  1613  001364  ECBA  F025         	call	_ClrDig
  1614                           ;main.c: 402: M.PVB=5;
  1615  001368  0E05               	movlw	5
  1616  00136A  CFE8 F25B          	movff	wreg,_M+47
  1617                           ;main.c: 403: break;
  1618  00136E  0C05               	retlw	5
  1619  001370                     l67:
  1620                           ;main.c: 404: case 5:
  1621                           ;main.c: 405: if(RTdS(6)<5) return;
  1622  001370  0E06               	movlw	6
  1623  001372  EC28  F03B         	call	_RTdS
  1624  001376  6E00               	movwf	btemp,c
  1625  001378  0E05               	movlw	5
  1626  00137A  5C00               	subwf	btemp,w,c
  1627  00137C  A0D8               	btfss	status,0,c
  1628  00137E  0012               	return	
  1629                           ;main.c: 406: StartRTdS(6);
  1630  001380  0E06               	movlw	6
  1631  001382  EC16  F03B         	call	_StartRTdS
  1632                           ;main.c: 408: if(!PFN._EnAleg) PrintVER(0x2F,0,1
      +                          );
  1633  001386  0102               	movlb	(_PFN+4) shr (0+8)
  1634  001388  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  1635  00138A  D008               	goto	l69
  1636  00138C  0100               	movlb	__Lparam shr (0+8)
  1637  00138E  6BCF               	clrf	?_PrintVER^(__Lparam& (0+65280)),b
  1638  001390  0E01               	movlw	1
  1639  001392  6FD0               	movwf	(?_PrintVER+1)^(__Lparam& (0+65280)),b
  1640  001394  0E2F               	movlw	47
  1641  001396  EC60  F024         	call	_PrintVER
  1642  00139A  D007               	goto	l70
  1643  00139C                     l69:
  1644                           ;main.c: 409: else PrintVER(0x1F,0,1);
  1645  00139C  0100               	movlb	__Lparam shr (0+8)
  1646  00139E  6BCF               	clrf	?_PrintVER^(__Lparam& (0+65280)),b
  1647  0013A0  0E01               	movlw	1
  1648  0013A2  6FD0               	movwf	(?_PrintVER+1)^(__Lparam& (0+65280)),b
  1649  0013A4  0E1F               	movlw	31
  1650  0013A6  EC60  F024         	call	_PrintVER
  1651  0013AA                     l70:
  1652                           ;main.c: 410: M.PVB=6;
  1653  0013AA  0E06               	movlw	6
  1654  0013AC  CFE8 F25B          	movff	wreg,_M+47
  1655                           ;main.c: 411: break;
  1656  0013B0  0C06               	retlw	6
  1657  0013B2                     l71:
  1658                           ;main.c: 412: case 6:
  1659                           ;main.c: 413: if(RTdS(6)<=15) return;
  1660  0013B2  0E06               	movlw	6
  1661  0013B4  EC28  F03B         	call	_RTdS
  1662  0013B8  6E00               	movwf	btemp,c
  1663  0013BA  0E10               	movlw	16
  1664  0013BC  5C00               	subwf	btemp,w,c
  1665  0013BE  A0D8               	btfss	status,0,c
  1666  0013C0  0012               	return	
  1667                           ;main.c: 414: StartRTdS(6);
  1668  0013C2  0E06               	movlw	6
  1669  0013C4  EC16  F03B         	call	_StartRTdS
  1670                           ;main.c: 415: ClrDig(1,1,0);
  1671  0013C8  0E01               	movlw	1
  1672  0013CA  0100               	movlb	__Lparam shr (0+8)
  1673  0013CC  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  1674  0013CE  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  1675  0013D0  0E01               	movlw	1
  1676  0013D2  ECBA  F025         	call	_ClrDig
  1677                           ;main.c: 416: M.PVB=7;
  1678  0013D6  0E07               	movlw	7
  1679  0013D8  CFE8 F25B          	movff	wreg,_M+47
  1680                           ;main.c: 417: break;
  1681  0013DC  0C07               	retlw	7
  1682  0013DE                     l73:
  1683                           ;main.c: 418: case 7:
  1684                           ;main.c: 419: if(RTdS(6)<5) return;
  1685  0013DE  0E06               	movlw	6
  1686  0013E0  EC28  F03B         	call	_RTdS
  1687  0013E4  6E00               	movwf	btemp,c
  1688  0013E6  0E05               	movlw	5
  1689  0013E8  5C00               	subwf	btemp,w,c
  1690  0013EA  A0D8               	btfss	status,0,c
  1691  0013EC  0012               	return	
  1692                           ;main.c: 420: M.PVB=8;
  1693  0013EE  0E08               	movlw	8
  1694  0013F0  CFE8 F25B          	movff	wreg,_M+47
  1695                           ;main.c: 421: break;
  1696  0013F4  0C08               	retlw	8
  1697  0013F6                     l75:
  1698                           ;main.c: 422: case 8:
  1699                           ;main.c: 423: Mark(11,2);
  1700  0013F6  0E02               	movlw	2
  1701  0013F8  0100               	movlb	__Lparam shr (0+8)
  1702  0013FA  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  1703  0013FC  0E0B               	movlw	11
  1704  0013FE  ECDB  F023         	call	_Mark
  1705                           ;main.c: 424: Mark(10,2);
  1706  001402  0E02               	movlw	2
  1707  001404  0100               	movlb	__Lparam shr (0+8)
  1708  001406  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  1709  001408  0E0A               	movlw	10
  1710  00140A  ECDB  F023         	call	_Mark
  1711                           ;main.c: 425: M.PVB=9;
  1712  00140E  0E09               	movlw	9
  1713  001410  CFE8 F25B          	movff	wreg,_M+47
  1714                           ;main.c: 426: break;
  1715  001414                     l76:
  1716                           ;main.c: 427: case 9:
  1717                           ;main.c: 428: break;
  1718  001414  0012               	return	
  1719  001416                     l57:
  1720  001416  C25B  FFE8         	movff	_M+47,wreg
  1721  00141A  0A00               	xorlw	0
  1722  00141C  E101 D736          	bz	l58
  1723  001420  0A01               	xorlw	1
  1724  001422  E101 D74B          	bz	l59
  1725  001426  0A03               	xorlw	3
  1726  001428  E101 D75F          	bz	l61
  1727  00142C  0A01               	xorlw	1
  1728  00142E  E101 D772          	bz	l63
  1729  001432  0A07               	xorlw	7
  1730  001434  E087               	bz	l65
  1731  001436  0A01               	xorlw	1
  1732  001438  E09B               	bz	l67
  1733  00143A  0A03               	xorlw	3
  1734  00143C  E0BA               	bz	l71
  1735  00143E  0A01               	xorlw	1
  1736  001440  E0CE               	bz	l73
  1737  001442  0A0F               	xorlw	15
  1738  001444  E0D8               	bz	l75
  1739  001446  0A01               	xorlw	1
  1740  001448  E0E5               	bz	l76
  1741  00144A  0012               	return	
  1742                           ;main.c: 430: }
  1743  00144C                     __end_of_PrintVerBoards:
  1744                           ;main.c: 431: void NastawaCOCW(unsigned char one
      +                          )
  1745                           ;main.c: 432: {
  1746  00144C                     _NastawaCOCW:
  1747  000000                     
  1748                           ;main.c: 433: static unsigned char obg_cw=0,obg_
      +                          co=0,zmn2=0,zmn3=0,pcw,eco;
  1749  00144C  0102               	movlb	(_PFN+4) shr (0+8)
  1750  00144E  A70A               	btfss	(_PFN+4)& (0+255),3,b
  1751  001450  B907               	btfsc	(_PFN+1)& (0+255),4,b
  1752  001452  D005               	goto	u1320
  1753  001454  B90A               	btfsc	(_PFN+4)& (0+255),4,b
  1754  001456  D003               	goto	u1320
  1755  001458  0102               	movlb	(_PFN+1) shr (0+8)
  1756  00145A  AB07               	btfss	(_PFN+1)& (0+255),5,b
  1757  00145C  D005               	goto	l78
  1758  00145E                     u1320:
  1759                           ;main.c: 437: {
  1760  00145E  0102               	movlb	(_PFN+1) shr (0+8)
  1761  001460  9107               	bcf	(_PFN+1)& (0+255),0,b
  1762                           ;main.c: 439: PFN._set_nco=0;
  1763  001462  9F06               	bcf	_PFN& (0+255),7,b
  1764                           ;main.c: 440: PFN._set_eco=0;
  1765  001464  9708               	bcf	(_PFN+2)& (0+255),3,b
  1766                           ;main.c: 441: PFN._str_nco=0;
  1767  001466  9706               	bcf	_PFN& (0+255),3,b
  1768  001468                     l78:
  1769                           ;main.c: 442: }
  1770  001468  0102               	movlb	(_PFN+1) shr (0+8)
  1771  00146A  B107               	btfsc	(_PFN+1)& (0+255),0,b
  1772  00146C  D00F               	goto	l79
  1773  00146E  0107               	movlb	F2614 shr (0+8)
  1774  001470  536A               	movf	F2614& (0+255),f,b
  1775  001472  E10C               	bnz	l79
  1776  001474  0102               	movlb	(_PFN+4) shr (0+8)
  1777  001476  AD0A               	btfss	(_PFN+4)& (0+255),6,b
  1778  001478  D009               	goto	l79
  1779                           ;main.c: 445: {
  1780  00147A  0102               	movlb	_PFN shr (0+8)
  1781  00147C  8906               	bsf	_PFN& (0+255),4,b
  1782                           ;main.c: 447: PFN.b_str_ncw=1;
  1783  00147E  8D06               	bsf	_PFN& (0+255),6,b
  1784                           ;main.c: 448: StartRTdS(5);
  1785  001480  0E05               	movlw	5
  1786  001482  EC16  F03B         	call	_StartRTdS
  1787                           ;main.c: 449: SetLightLLed(1);
  1788  001486  0E01               	movlw	1
  1789  001488  ECF4  F03D         	call	_SetLightLLed
  1790  00148C                     l79:
  1791                           ;main.c: 450: }
  1792  00148C  EE02  F00A         	lfsr	0,_PFN+4
  1793  001490  38EF               	swapf	indf0,w,c
  1794  001492  6E00               	movwf	btemp,c
  1795  001494  3200               	rrcf	btemp,f,c
  1796  001496  3000               	rrcf	btemp,w,c
  1797  001498  0B01               	andlw	1
  1798  00149A  CFE8 F76A          	movff	wreg,F2614
  1799                           ;main.c: 452: if(PFN.b_str_ncw)
  1800  00149E  0102               	movlb	_PFN shr (0+8)
  1801  0014A0  AD06               	btfss	_PFN& (0+255),6,b
  1802  0014A2  D009               	goto	l80
  1803                           ;main.c: 453: {
  1804  0014A4  9D06               	bcf	_PFN& (0+255),6,b
  1805                           ;main.c: 455: EndNst();
  1806  0014A6  ECD7  F023         	call	_EndNst	;wreg free
  1807                           ;main.c: 456: PrintNstCW(PFN.PPCW,0);
  1808  0014AA  0100               	movlb	__Lparam shr (0+8)
  1809  0014AC  6BCF               	clrf	?_PrintNstCW^(__Lparam& (0+65280)),b
  1810  0014AE  C218  FFE8         	movff	_PFN+18,wreg
  1811  0014B2  ECB2  F021         	call	_PrintNstCW
  1812  0014B6                     l80:
  1813                           ;main.c: 457: }
  1814  0014B6  0102               	movlb	_PFN shr (0+8)
  1815  0014B8  BF06               	btfsc	_PFN& (0+255),7,b
  1816  0014BA  D00C               	goto	l81
  1817  0014BC  0107               	movlb	F2615 shr (0+8)
  1818  0014BE  536B               	movf	F2615& (0+255),f,b
  1819  0014C0  E109               	bnz	l81
  1820  0014C2  0102               	movlb	(_PFN+4) shr (0+8)
  1821  0014C4  AB0A               	btfss	(_PFN+4)& (0+255),5,b
  1822  0014C6  D006               	goto	l81
  1823                           ;main.c: 460: {
  1824  0014C8  0102               	movlb	_PFN shr (0+8)
  1825  0014CA  8706               	bsf	_PFN& (0+255),3,b
  1826                           ;main.c: 462: PFN.b_str_nco=1;
  1827  0014CC  8B06               	bsf	_PFN& (0+255),5,b
  1828                           ;main.c: 463: StartRTdS(5);
  1829  0014CE  0E05               	movlw	5
  1830  0014D0  EC16  F03B         	call	_StartRTdS
  1831  0014D4                     l81:
  1832                           ;main.c: 464: }
  1833  0014D4  EE02  F00A         	lfsr	0,_PFN+4
  1834  0014D8  38EF               	swapf	indf0,w,c
  1835  0014DA  6E00               	movwf	btemp,c
  1836  0014DC  3000               	rrcf	btemp,w,c
  1837  0014DE  0B01               	andlw	1
  1838  0014E0  CFE8 F76B          	movff	wreg,F2615
  1839                           ;main.c: 466: if(PFN.b_str_nco)
  1840  0014E4  0102               	movlb	_PFN shr (0+8)
  1841  0014E6  AB06               	btfss	_PFN& (0+255),5,b
  1842  0014E8  D035               	goto	l82
  1843                           ;main.c: 467: {
  1844  0014EA  9B06               	bcf	_PFN& (0+255),5,b
  1845                           ;main.c: 469: EndNst();
  1846  0014EC  ECD7  F023         	call	_EndNst	;wreg free
  1847                           ;main.c: 470: if(PFN._ofnserw||PFN._set_fnserw)
  1848  0014F0  0102               	movlb	(_PFN+4) shr (0+8)
  1849  0014F2  B70A               	btfsc	(_PFN+4)& (0+255),3,b
  1850  0014F4  D002               	goto	u1470
  1851  0014F6  A907               	btfss	(_PFN+1)& (0+255),4,b
  1852  0014F8  D006               	goto	l83
  1853  0014FA                     u1470:
  1854                           ;main.c: 471: {
  1855  0014FA  0102               	movlb	_PFN shr (0+8)
  1856  0014FC  9F06               	bcf	_PFN& (0+255),7,b
  1857                           ;main.c: 473: PFN._str_nco=0;
  1858  0014FE  9706               	bcf	_PFN& (0+255),3,b
  1859                           ;main.c: 474: EndNst();
  1860  001500  ECD7  F023         	call	_EndNst	;wreg free
  1861                           ;main.c: 475: }
  1862  001504  D027               	goto	l82
  1863  001506                     l83:
  1864                           ;main.c: 476: else
  1865  001506  0102               	movlb	(_PFN+4) shr (0+8)
  1866  001508  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  1867  00150A  D008               	goto	l85
  1868                           ;main.c: 479: {
  1869  00150C  0100               	movlb	__Lparam shr (0+8)
  1870  00150E  6BCF               	clrf	?_PrintNstCO^(__Lparam& (0+65280)),b
  1871  001510  6BD0               	clrf	(?_PrintNstCO+1)^(__Lparam& (0+65280)),b
  1872  001512  C217  FFE8         	movff	_PFN+17,wreg
  1873  001516  ECC5  F022         	call	_PrintNstCO
  1874                           ;main.c: 481: }
  1875  00151A  D01C               	goto	l82
  1876  00151C                     l85:
  1877                           ;main.c: 482: else
  1878  00151C  EE12  F021         	lfsr	1,_PFN+27
  1879  001520  EE02  F027         	lfsr	0,_PFN+33
  1880  001524  52EE               	movf	postinc0,f,c
  1881  001526  52E6               	movf	postinc1,f,c
  1882  001528  50E5               	movf	postdec1,w,c
  1883  00152A  5CED               	subwf	postdec0,w,c
  1884  00152C  E102               	bnz	u1495
  1885  00152E  50E7               	movf	indf1,w,c
  1886  001530  5CEF               	subwf	indf0,w,c
  1887  001532                     u1495:
  1888  001532  E209               	bc	l87
  1889  001534  0100               	movlb	__Lparam shr (0+8)
  1890  001536  6BCF               	clrf	?_PrintNstCO^(__Lparam& (0+65280)),b
  1891  001538  0E01               	movlw	1
  1892  00153A  6FD0               	movwf	(?_PrintNstCO+1)^(__Lparam& (0+65280)),b
  1893  00153C  C217  FFE8         	movff	_PFN+17,wreg
  1894  001540  ECC5  F022         	call	_PrintNstCO
  1895  001544  D007               	goto	l82
  1896  001546                     l87:
  1897                           ;main.c: 485: else PrintNstCO(PFN.PPCO,0,0);
  1898  001546  0100               	movlb	__Lparam shr (0+8)
  1899  001548  6BCF               	clrf	?_PrintNstCO^(__Lparam& (0+65280)),b
  1900  00154A  6BD0               	clrf	(?_PrintNstCO+1)^(__Lparam& (0+65280)),b
  1901  00154C  C217  FFE8         	movff	_PFN+17,wreg
  1902  001550  ECC5  F022         	call	_PrintNstCO
  1903  001554                     l82:
  1904                           ;main.c: 486: }
  1905  001554  0102               	movlb	_PFN shr (0+8)
  1906  001556  AF06               	btfss	_PFN& (0+255),7,b
  1907  001558  B107               	btfsc	(_PFN+1)& (0+255),0,b
  1908  00155A  D007               	goto	u1530
  1909  00155C  0E05               	movlw	5
  1910  00155E  EC28  F03B         	call	_RTdS
  1911  001562  6E00               	movwf	btemp,c
  1912  001564  0E1F               	movlw	31
  1913  001566  5C00               	subwf	btemp,w,c
  1914  001568  E303               	bnc	l89
  1915  00156A                     u1530:
  1916                           ;main.c: 491: {
  1917  00156A  0102               	movlb	_PFN shr (0+8)
  1918  00156C  9706               	bcf	_PFN& (0+255),3,b
  1919                           ;main.c: 493: PFN._str_ncw=0;
  1920  00156E  9906               	bcf	_PFN& (0+255),4,b
  1921  001570                     l89:
  1922                           ;main.c: 494: }
  1923  001570  0102               	movlb	(_PFN+1) shr (0+8)
  1924  001572  A107               	btfss	(_PFN+1)& (0+255),0,b
  1925  001574  D099               	goto	l90
  1926                           ;main.c: 497: {
  1927  001576  C227  F76D         	movff	_PFN+33,F2618
  1928                           ;main.c: 500: if(!PFN._mod_ncw&&!RdPrt(2)&&!RdPr
      +                          t(3))
  1929  00157A  B707               	btfsc	(_PFN+1)& (0+255),3,b
  1930  00157C  D00A               	goto	l91
  1931  00157E  0E02               	movlw	2
  1932  001580  EC68  F039         	call	_RdPrt
  1933  001584  E206               	bc	l91
  1934  001586  0E03               	movlw	3
  1935  001588  EC68  F039         	call	_RdPrt
  1936  00158C  E202               	bc	l91
  1937                           ;main.c: 501: {
  1938  00158E  0102               	movlb	(_PFN+1) shr (0+8)
  1939  001590  8707               	bsf	(_PFN+1)& (0+255),3,b
  1940  001592                     l91:
  1941                           ;main.c: 503: }
  1942  001592  0102               	movlb	(_PFN+4) shr (0+8)
  1943  001594  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  1944  001596  D021               	goto	l92
  1945                           ;main.c: 505: {
  1946  001598  A707               	btfss	(_PFN+1)& (0+255),3,b
  1947  00159A  D046               	goto	l94
  1948  00159C  0100               	movlb	__Lparam shr (0+8)
  1949  00159E  0E27               	movlw	low (_PFN+33)
  1950  0015A0  6FD0               	movwf	?_ReadParam^(__Lparam& (0+65280)),b
  1951  0015A2  0E02               	movlw	high (_PFN+33)
  1952  0015A4  6FD1               	movwf	(?_ReadParam+1)^(__Lparam& (0+65280)),b
  1953  0015A6  0E77               	movlw	low _zmn
  1954  0015A8  6FD2               	movwf	(?_ReadParam+2)^(__Lparam& (0+65280)),b
  1955  0015AA  0E07               	movlw	high _zmn
  1956  0015AC  6FD3               	movwf	(?_ReadParam+3)^(__Lparam& (0+65280)),b
  1957  0015AE  0E78               	movlw	low _zps
  1958  0015B0  6FD4               	movwf	(?_ReadParam+4)^(__Lparam& (0+65280)),b
  1959  0015B2  0E07               	movlw	high _zps
  1960  0015B4  6FD5               	movwf	(?_ReadParam+5)^(__Lparam& (0+65280)),b
  1961  0015B6  EE00  F0D6         	lfsr	0,?_ReadParam+6
  1962  0015BA  C221  FFEE         	movff	_PFN+27,postinc0
  1963  0015BE  C222  FFED         	movff	_PFN+28,postdec0
  1964  0015C2  EE00  F0D8         	lfsr	0,?_ReadParam+8
  1965  0015C6  C21F  FFEE         	movff	_PFN+25,postinc0
  1966  0015CA  C220  FFED         	movff	_PFN+26,postdec0
  1967  0015CE  6BDA               	clrf	(?_ReadParam+10)^(__Lparam& (0+65280)),b
  1968  0015D0  0E01               	movlw	1
  1969  0015D2  6FDB               	movwf	(?_ReadParam+11)^(__Lparam& (0+65280)),b
  1970  0015D4  ECA9  F026         	call	_ReadParam	;wreg free
  1971                           ;main.c: 507: }
  1972  0015D8  D027               	goto	l94
  1973  0015DA                     l92:
  1974                           ;main.c: 508: else
  1975  0015DA  0102               	movlb	(_PFN+1) shr (0+8)
  1976  0015DC  A707               	btfss	(_PFN+1)& (0+255),3,b
  1977  0015DE  D024               	goto	l94
  1978  0015E0  0100               	movlb	__Lparam shr (0+8)
  1979  0015E2  0E27               	movlw	low (_PFN+33)
  1980  0015E4  6FD0               	movwf	?_ReadParam^(__Lparam& (0+65280)),b
  1981  0015E6  0E02               	movlw	high (_PFN+33)
  1982  0015E8  6FD1               	movwf	(?_ReadParam+1)^(__Lparam& (0+65280)),b
  1983  0015EA  0E77               	movlw	low _zmn
  1984  0015EC  6FD2               	movwf	(?_ReadParam+2)^(__Lparam& (0+65280)),b
  1985  0015EE  0E07               	movlw	high _zmn
  1986  0015F0  6FD3               	movwf	(?_ReadParam+3)^(__Lparam& (0+65280)),b
  1987  0015F2  0E78               	movlw	low _zps
  1988  0015F4  6FD4               	movwf	(?_ReadParam+4)^(__Lparam& (0+65280)),b
  1989  0015F6  0E07               	movlw	high _zps
  1990  0015F8  6FD5               	movwf	(?_ReadParam+5)^(__Lparam& (0+65280)),b
  1991  0015FA  EE02  F021         	lfsr	0,_PFN+27
  1992  0015FE  CFEE F000          	movff	postinc0,btemp
  1993  001602  CFED F001          	movff	postdec0,btemp+1
  1994  001606  0EFF               	movlw	255
  1995  001608  2400               	addwf	btemp,w,c
  1996  00160A  6FD6               	movwf	(?_ReadParam+6)^(__Lparam& (0+65280)),b
  1997  00160C  0EFF               	movlw	255
  1998  00160E  2001               	addwfc	btemp+1,w,c
  1999  001610  6FD7               	movwf	(?_ReadParam+7)^(__Lparam& (0+65280)),b
  2000  001612  EE00  F0D8         	lfsr	0,?_ReadParam+8
  2001  001616  C21F  FFEE         	movff	_PFN+25,postinc0
  2002  00161A  C220  FFED         	movff	_PFN+26,postdec0
  2003  00161E  6BDA               	clrf	(?_ReadParam+10)^(__Lparam& (0+65280)),b
  2004  001620  0E01               	movlw	1
  2005  001622  6FDB               	movwf	(?_ReadParam+11)^(__Lparam& (0+65280)),b
  2006  001624  ECA9  F026         	call	_ReadParam	;wreg free
  2007  001628                     l94:
  2008                           ;main.c: 511: }
  2009  001628  0102               	movlb	(_PFN+1) shr (0+8)
  2010  00162A  B507               	btfsc	(_PFN+1)& (0+255),2,b
  2011  00162C  D008               	goto	l96
  2012                           ;main.c: 513: {
  2013  00162E  8507               	bsf	(_PFN+1)& (0+255),2,b
  2014                           ;main.c: 515: EndNst();
  2015  001630  ECD7  F023         	call	_EndNst	;wreg free
  2016                           ;main.c: 516: zmn2=1;
  2017  001634  0E01               	movlw	1
  2018  001636  CFE8 F76C          	movff	wreg,F2616
  2019                           ;main.c: 517: pcw=PFN.PCW;
  2020  00163A  C227  F76D         	movff	_PFN+33,F2618
  2021  00163E                     l96:
  2022                           ;main.c: 518: }
  2023  00163E  0107               	movlb	F2616 shr (0+8)
  2024  001640  536C               	movf	F2616& (0+255),f,b
  2025  001642  E103               	bnz	u1670
  2026  001644  0107               	movlb	_zmn shr (0+8)
  2027  001646  5377               	movf	_zmn& (0+255),f,b
  2028  001648  E02F               	bz	l90
  2029  00164A                     u1670:
  2030                           ;main.c: 520: {
  2031  00164A  C76D  F000         	movff	F2618,btemp
  2032  00164E  6A01               	clrf	btemp+1,c
  2033  001650  C228  FFE8         	movff	_PFN+34,wreg
  2034  001654  1801               	xorwf	btemp+1,w,c
  2035  001656  E103               	bnz	u1685
  2036  001658  C227  FFE8         	movff	_PFN+33,wreg
  2037  00165C  1800               	xorwf	btemp,w,c
  2038  00165E                     u1685:
  2039  00165E  0E00               	movlw	0
  2040  001660  A4D8               	btfss	status,2,c
  2041  001662  0E01               	movlw	1
  2042  001664  6E00               	movwf	btemp,c
  2043  001666  EE02  F009         	lfsr	0,_PFN+3
  2044  00166A  3600               	rlcf	btemp,f,c
  2045  00166C  3600               	rlcf	btemp,f,c
  2046  00166E  50EF               	movf	indf0,w,c
  2047  001670  1800               	xorwf	btemp,w,c
  2048  001672  0BFB               	andlw	-5
  2049  001674  1800               	xorwf	btemp,w,c
  2050  001676  6EEF               	movwf	indf0,c
  2051                           ;main.c: 522: zmn2=0;
  2052  001678  0107               	movlb	F2616 shr (0+8)
  2053  00167A  6B6C               	clrf	F2616& (0+255),b
  2054                           ;main.c: 523: StartRTdS(2);
  2055  00167C  0E02               	movlw	2
  2056  00167E  EC16  F03B         	call	_StartRTdS
  2057                           ;main.c: 524: if(!PFN._EnAleg)
  2058  001682  0102               	movlb	(_PFN+4) shr (0+8)
  2059  001684  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  2060  001686  D007               	goto	l98
  2061                           ;main.c: 525: {
  2062  001688  0100               	movlb	__Lparam shr (0+8)
  2063  00168A  6BCF               	clrf	?_PrintNstCW^(__Lparam& (0+65280)),b
  2064  00168C  C227  FFE8         	movff	_PFN+33,wreg
  2065  001690  ECB2  F021         	call	_PrintNstCW
  2066                           ;main.c: 527: }
  2067  001694  D009               	goto	l90
  2068  001696                     l98:
  2069                           ;main.c: 528: else
  2070  001696  0102               	movlb	(_PFN+27) shr (0+8)
  2071  001698  0521               	decf	(_PFN+27)& (0+255),w,b
  2072  00169A  0100               	movlb	__Lparam shr (0+8)
  2073  00169C  6FCF               	movwf	?_PrintNstCW2^(__Lparam& (0+65280)),b
  2074  00169E  6BD0               	clrf	(?_PrintNstCW2+1)^(__Lparam& (0+65280)),b
  2075  0016A0  C227  FFE8         	movff	_PFN+33,wreg
  2076  0016A4  EC1D  F022         	call	_PrintNstCW2
  2077  0016A8                     l90:
  2078                           ;main.c: 531: }
  2079  0016A8  0102               	movlb	_PFN shr (0+8)
  2080  0016AA  AF06               	btfss	_PFN& (0+255),7,b
  2081  0016AC  D05F               	goto	l100
  2082                           ;main.c: 536: {
  2083  0016AE  C225  F76D         	movff	_PFN+31,F2618
  2084                           ;main.c: 538: ReadParam(&PFN.PCO,&zmn,&zps,PFN.m
      +                          inPCO,PFN.maxPCO,0,1);
  2085  0016B2  0100               	movlb	__Lparam shr (0+8)
  2086  0016B4  0E25               	movlw	low (_PFN+31)
  2087  0016B6  6FD0               	movwf	?_ReadParam^(__Lparam& (0+65280)),b
  2088  0016B8  0E02               	movlw	high (_PFN+31)
  2089  0016BA  6FD1               	movwf	(?_ReadParam+1)^(__Lparam& (0+65280)),b
  2090  0016BC  0E77               	movlw	low _zmn
  2091  0016BE  6FD2               	movwf	(?_ReadParam+2)^(__Lparam& (0+65280)),b
  2092  0016C0  0E07               	movlw	high _zmn
  2093  0016C2  6FD3               	movwf	(?_ReadParam+3)^(__Lparam& (0+65280)),b
  2094  0016C4  0E78               	movlw	low _zps
  2095  0016C6  6FD4               	movwf	(?_ReadParam+4)^(__Lparam& (0+65280)),b
  2096  0016C8  0E07               	movlw	high _zps
  2097  0016CA  6FD5               	movwf	(?_ReadParam+5)^(__Lparam& (0+65280)),b
  2098  0016CC  EE00  F0D6         	lfsr	0,?_ReadParam+6
  2099  0016D0  C21D  FFEE         	movff	_PFN+23,postinc0
  2100  0016D4  C21E  FFED         	movff	_PFN+24,postdec0
  2101  0016D8  EE00  F0D8         	lfsr	0,?_ReadParam+8
  2102  0016DC  C21B  FFEE         	movff	_PFN+21,postinc0
  2103  0016E0  C21C  FFED         	movff	_PFN+22,postdec0
  2104  0016E4  6BDA               	clrf	(?_ReadParam+10)^(__Lparam& (0+65280)),b
  2105  0016E6  0E01               	movlw	1
  2106  0016E8  6FDB               	movwf	(?_ReadParam+11)^(__Lparam& (0+65280)),b
  2107  0016EA  ECA9  F026         	call	_ReadParam	;wreg free
  2108                           ;main.c: 539: if(!PFN.b_set_nco)
  2109  0016EE  0102               	movlb	(_PFN+1) shr (0+8)
  2110  0016F0  B307               	btfsc	(_PFN+1)& (0+255),1,b
  2111  0016F2  D00A               	goto	l101
  2112                           ;main.c: 540: {
  2113  0016F4  8307               	bsf	(_PFN+1)& (0+255),1,b
  2114                           ;main.c: 542: EndNst();
  2115  0016F6  ECD7  F023         	call	_EndNst	;wreg free
  2116                           ;main.c: 543: zmn2=1;
  2117  0016FA  0E01               	movlw	1
  2118  0016FC  CFE8 F76C          	movff	wreg,F2616
  2119                           ;main.c: 544: pcw=PFN.PCO;
  2120  001700  C225  F76D         	movff	_PFN+31,F2618
  2121                           ;main.c: 545: PFN._newPCO=0;
  2122  001704  0102               	movlb	(_PFN+3) shr (0+8)
  2123  001706  9309               	bcf	(_PFN+3)& (0+255),1,b
  2124  001708                     l101:
  2125                           ;main.c: 546: }
  2126  001708  0107               	movlb	F2616 shr (0+8)
  2127  00170A  536C               	movf	F2616& (0+255),f,b
  2128  00170C  E103               	bnz	u1740
  2129  00170E  0107               	movlb	_zmn shr (0+8)
  2130  001710  5377               	movf	_zmn& (0+255),f,b
  2131  001712  E02C               	bz	l100
  2132  001714                     u1740:
  2133                           ;main.c: 548: {
  2134  001714  0102               	movlb	(_PFN+3) shr (0+8)
  2135  001716  B309               	btfsc	(_PFN+3)& (0+255),1,b
  2136  001718  D016               	goto	l103
  2137  00171A  C76D  F000         	movff	F2618,btemp
  2138  00171E  6A01               	clrf	btemp+1,c
  2139  001720  C226  FFE8         	movff	_PFN+32,wreg
  2140  001724  1801               	xorwf	btemp+1,w,c
  2141  001726  E103               	bnz	u1765
  2142  001728  C225  FFE8         	movff	_PFN+31,wreg
  2143  00172C  1800               	xorwf	btemp,w,c
  2144  00172E                     u1765:
  2145  00172E  0E00               	movlw	0
  2146  001730  A4D8               	btfss	status,2,c
  2147  001732  0E01               	movlw	1
  2148  001734  6E00               	movwf	btemp,c
  2149  001736  EE02  F009         	lfsr	0,_PFN+3
  2150  00173A  3600               	rlcf	btemp,f,c
  2151  00173C  50EF               	movf	indf0,w,c
  2152  00173E  1800               	xorwf	btemp,w,c
  2153  001740  0BFD               	andlw	-3
  2154  001742  1800               	xorwf	btemp,w,c
  2155  001744  6EEF               	movwf	indf0,c
  2156  001746                     l103:
  2157                           ;main.c: 550: zmn2=0;
  2158  001746  0107               	movlb	F2616 shr (0+8)
  2159  001748  6B6C               	clrf	F2616& (0+255),b
  2160                           ;main.c: 551: StartRTdS(2);
  2161  00174A  0E02               	movlw	2
  2162  00174C  EC16  F03B         	call	_StartRTdS
  2163                           ;main.c: 552: PrintNstCO(PFN.PCO,PFN._pgd,0);
  2164  001750  EE02  F00B         	lfsr	0,_PFN+5
  2165  001754  38EF               	swapf	indf0,w,c
  2166  001756  6E00               	movwf	btemp,c
  2167  001758  3200               	rrcf	btemp,f,c
  2168  00175A  3000               	rrcf	btemp,w,c
  2169  00175C  0B01               	andlw	1
  2170  00175E  0100               	movlb	__Lparam shr (0+8)
  2171  001760  6FCF               	movwf	?_PrintNstCO^(__Lparam& (0+65280)),b
  2172  001762  6BD0               	clrf	(?_PrintNstCO+1)^(__Lparam& (0+65280)),b
  2173  001764  C225  FFE8         	movff	_PFN+31,wreg
  2174  001768  ECC5  F022         	call	_PrintNstCO
  2175  00176C                     l100:
  2176                           ;main.c: 553: }
  2177  00176C  0102               	movlb	(_PFN+2) shr (0+8)
  2178  00176E  A708               	btfss	(_PFN+2)& (0+255),3,b
  2179  001770  D05B               	goto	l104
  2180                           ;main.c: 557: {
  2181  001772  C229  F76E         	movff	_PFN+35,F2619
  2182                           ;main.c: 559: if(!PFN._mod_eco&&!RdPrt(2)&&!RdPr
      +                          t(3))
  2183  001776  BB08               	btfsc	(_PFN+2)& (0+255),5,b
  2184  001778  D00A               	goto	l105
  2185  00177A  0E02               	movlw	2
  2186  00177C  EC68  F039         	call	_RdPrt
  2187  001780  E206               	bc	l105
  2188  001782  0E03               	movlw	3
  2189  001784  EC68  F039         	call	_RdPrt
  2190                           ;main.c: 560: {
  2191  001788  0102               	movlb	(_PFN+2) shr (0+8)
  2192  00178A  E202               	bc	L1
  2193  00178C  8B08               	bsf	(_PFN+2)& (0+255),5,b
  2194  00178E                     l105:
  2195                           ;main.c: 562: }
  2196  00178E  0102               	movlb	(_PFN+2) shr (0+8)
  2197  001790                     L1:
  2198  001790  AB08               	btfss	(_PFN+2)& (0+255),5,b
  2199  001792  D018               	goto	l106
  2200  001794  0100               	movlb	__Lparam shr (0+8)
  2201  001796  0E29               	movlw	low (_PFN+35)
  2202  001798  6FD0               	movwf	?_ReadParam^(__Lparam& (0+65280)),b
  2203  00179A  0E02               	movlw	high (_PFN+35)
  2204  00179C  6FD1               	movwf	(?_ReadParam+1)^(__Lparam& (0+65280)),b
  2205  00179E  0E77               	movlw	low _zmn
  2206  0017A0  6FD2               	movwf	(?_ReadParam+2)^(__Lparam& (0+65280)),b
  2207  0017A2  0E07               	movlw	high _zmn
  2208  0017A4  6FD3               	movwf	(?_ReadParam+3)^(__Lparam& (0+65280)),b
  2209  0017A6  0E78               	movlw	low _zps
  2210  0017A8  6FD4               	movwf	(?_ReadParam+4)^(__Lparam& (0+65280)),b
  2211  0017AA  0E07               	movlw	high _zps
  2212  0017AC  6FD5               	movwf	(?_ReadParam+5)^(__Lparam& (0+65280)),b
  2213  0017AE  0E01               	movlw	1
  2214  0017B0  6FD6               	movwf	(?_ReadParam+6)^(__Lparam& (0+65280)),b
  2215  0017B2  6BD7               	clrf	(?_ReadParam+7)^(__Lparam& (0+65280)),b
  2216  0017B4  0E09               	movlw	9
  2217  0017B6  6FD8               	movwf	(?_ReadParam+8)^(__Lparam& (0+65280)),b
  2218  0017B8  6BD9               	clrf	(?_ReadParam+9)^(__Lparam& (0+65280)),b
  2219  0017BA  6BDA               	clrf	(?_ReadParam+10)^(__Lparam& (0+65280)),b
  2220  0017BC  0E01               	movlw	1
  2221  0017BE  6FDB               	movwf	(?_ReadParam+11)^(__Lparam& (0+65280)),b
  2222  0017C0  ECA9  F026         	call	_ReadParam	;wreg free
  2223  0017C4                     l106:
  2224                           ;main.c: 564: if(!PFN.b_set_eco)
  2225  0017C4  0102               	movlb	(_PFN+2) shr (0+8)
  2226  0017C6  B908               	btfsc	(_PFN+2)& (0+255),4,b
  2227  0017C8  D008               	goto	l107
  2228                           ;main.c: 565: {
  2229  0017CA  8908               	bsf	(_PFN+2)& (0+255),4,b
  2230                           ;main.c: 567: EndNst();
  2231  0017CC  ECD7  F023         	call	_EndNst	;wreg free
  2232                           ;main.c: 568: zmn2=1;
  2233  0017D0  0E01               	movlw	1
  2234  0017D2  CFE8 F76C          	movff	wreg,F2616
  2235                           ;main.c: 569: eco=PFN.ECO;
  2236  0017D6  C229  F76E         	movff	_PFN+35,F2619
  2237  0017DA                     l107:
  2238                           ;main.c: 570: }
  2239  0017DA  0107               	movlb	F2616 shr (0+8)
  2240  0017DC  536C               	movf	F2616& (0+255),f,b
  2241  0017DE  E103               	bnz	u1870
  2242  0017E0  0107               	movlb	_zmn shr (0+8)
  2243  0017E2  5377               	movf	_zmn& (0+255),f,b
  2244  0017E4  E021               	bz	l104
  2245  0017E6                     u1870:
  2246                           ;main.c: 572: {
  2247  0017E6  C76E  F000         	movff	F2619,btemp
  2248  0017EA  6A01               	clrf	btemp+1,c
  2249  0017EC  C22A  FFE8         	movff	_PFN+36,wreg
  2250  0017F0  1801               	xorwf	btemp+1,w,c
  2251  0017F2  E103               	bnz	u1885
  2252  0017F4  C229  FFE8         	movff	_PFN+35,wreg
  2253  0017F8  1800               	xorwf	btemp,w,c
  2254  0017FA                     u1885:
  2255  0017FA  0E00               	movlw	0
  2256  0017FC  A4D8               	btfss	status,2,c
  2257  0017FE  0E01               	movlw	1
  2258  001800  6E00               	movwf	btemp,c
  2259  001802  EE02  F009         	lfsr	0,_PFN+3
  2260  001806  3600               	rlcf	btemp,f,c
  2261  001808  3600               	rlcf	btemp,f,c
  2262  00180A  3600               	rlcf	btemp,f,c
  2263  00180C  50EF               	movf	indf0,w,c
  2264  00180E  1800               	xorwf	btemp,w,c
  2265  001810  0BF7               	andlw	-9
  2266  001812  1800               	xorwf	btemp,w,c
  2267  001814  6EEF               	movwf	indf0,c
  2268                           ;main.c: 574: zmn2=0;
  2269  001816  0107               	movlb	F2616 shr (0+8)
  2270  001818  6B6C               	clrf	F2616& (0+255),b
  2271                           ;main.c: 575: StartRTdS(2);
  2272  00181A  0E02               	movlw	2
  2273  00181C  EC16  F03B         	call	_StartRTdS
  2274                           ;main.c: 576: PrintNstECO(PFN.ECO);
  2275  001820  C229  FFE8         	movff	_PFN+35,wreg
  2276  001824  EC6A  F023         	call	_PrintNstECO
  2277  001828                     l104:
  2278                           ;main.c: 577: }
  2279  001828  0102               	movlb	(_PFN+1) shr (0+8)
  2280  00182A  A107               	btfss	(_PFN+1)& (0+255),0,b
  2281  00182C  BF06               	btfsc	_PFN& (0+255),7,b
  2282  00182E  0012               	return	
  2283  001830  0102               	movlb	(_PFN+2) shr (0+8)
  2284  001832  B708               	btfsc	(_PFN+2)& (0+255),3,b
  2285  001834  0012               	return	
  2286                           ;main.c: 581: {
  2287  001836  0102               	movlb	_PFN shr (0+8)
  2288  001838  A906               	btfss	_PFN& (0+255),4,b
  2289  00183A  B706               	btfsc	_PFN& (0+255),3,b
  2290  00183C  D002               	goto	l110
  2291  00183E  ECD7  F023         	call	_EndNst	;wreg free
  2292  001842                     l110:
  2293                           ;main.c: 583: PFN.b_set_ncw=0;
  2294  001842  0102               	movlb	(_PFN+1) shr (0+8)
  2295  001844  9507               	bcf	(_PFN+1)& (0+255),2,b
  2296                           ;main.c: 584: PFN.b_set_nco=0;
  2297  001846  9307               	bcf	(_PFN+1)& (0+255),1,b
  2298                           ;main.c: 585: PFN.b_set_eco=0;
  2299  001848  9908               	bcf	(_PFN+2)& (0+255),4,b
  2300                           ;main.c: 586: }
  2301  00184A  0012               	return	
  2302  00184C                     __end_of_NastawaCOCW:
  2303                           ;main.c: 591: void DecWsw(void)
  2304                           ;main.c: 592: {
  2305  00184C                     _DecWsw:
  2306  000000                     
  2307                           ;main.c: 593: static unsigned char k=0,zn;
  2308  00184C  0102               	movlb	(_PFN+5) shr (0+8)
  2309  00184E  B90B               	btfsc	(_PFN+5)& (0+255),4,b
  2310  001850  D002               	goto	u1990
  2311  001852  A70B               	btfss	(_PFN+5)& (0+255),3,b
  2312  001854  D080               	goto	l112
  2313  001856                     u1990:
  2314                           ;main.c: 596: {
  2315  001856  0E01               	movlw	1
  2316  001858  ECF4  F03D         	call	_SetLightLLed
  2317                           ;main.c: 598: NastawaCOCW(1);
  2318  00185C  0E01               	movlw	1
  2319  00185E  DDF6               	call	_NastawaCOCW
  2320                           ;main.c: 600: if(PFN._ferr)
  2321  001860  0102               	movlb	(_PFN+5) shr (0+8)
  2322  001862  A90B               	btfss	(_PFN+5)& (0+255),4,b
  2323  001864  D059               	goto	l113
  2324                           ;main.c: 601: {
  2325  001866  AD09               	btfss	(_PFN+3)& (0+255),6,b
  2326  001868  D002               	goto	u2030
  2327  00186A  AF0B               	btfss	(_PFN+5)& (0+255),7,b
  2328  00186C  D052               	goto	l114
  2329  00186E                     u2030:
  2330                           ;main.c: 603: {
  2331  00186E  0102               	movlb	_PFN shr (0+8)
  2332  001870  AF06               	btfss	_PFN& (0+255),7,b
  2333  001872  B107               	btfsc	(_PFN+1)& (0+255),0,b
  2334  001874  D004               	goto	l115
  2335  001876  0102               	movlb	(_PFN+2) shr (0+8)
  2336  001878  A708               	btfss	(_PFN+2)& (0+255),3,b
  2337  00187A  ECEE  F023         	call	_ClrMarkMinMax	;wreg free
  2338  00187E                     l115:
  2339                           ;main.c: 605: if(PFN._opgres) PrintErrMsg(0,0b01
      +                          111001,PFN.KERR,0,0,PFN._opgres);
  2340  00187E  0102               	movlb	(_PFN+5) shr (0+8)
  2341  001880  AF0B               	btfss	(_PFN+5)& (0+255),7,b
  2342  001882  D011               	goto	l116
  2343  001884  0E79               	movlw	121
  2344  001886  0100               	movlb	__Lparam shr (0+8)
  2345  001888  6FCF               	movwf	?_PrintErrMsg^(__Lparam& (0+65280)),b
  2346  00188A  C21A  F0D0         	movff	_PFN+20,?_PrintErrMsg+1
  2347  00188E  6BD1               	clrf	(?_PrintErrMsg+2)^(__Lparam& (0+65280)),b
  2348  001890  6BD2               	clrf	(?_PrintErrMsg+3)^(__Lparam& (0+65280)),b
  2349  001892  EE02  F00B         	lfsr	0,_PFN+5
  2350  001896  34EF               	rlcf	indf0,w,c
  2351  001898  34EF               	rlcf	indf0,w,c
  2352  00189A  0B01               	andlw	1
  2353  00189C  6FD3               	movwf	(?_PrintErrMsg+4)^(__Lparam& (0+65280)),b
  2354  00189E  0E00               	movlw	0
  2355  0018A0  EC81  F01E         	call	_PrintErrMsg
  2356  0018A4  D064               	goto	l125
  2357  0018A6                     l116:
  2358                           ;main.c: 606: else
  2359  0018A6  C21A  FFE8         	movff	_PFN+20,wreg
  2360  0018AA  0A0E               	xorlw	14
  2361  0018AC  E015               	bz	l118
  2362  0018AE  C21A  FFE8         	movff	_PFN+20,wreg
  2363  0018B2  0A09               	xorlw	9
  2364  0018B4  E011               	bz	l118
  2365  0018B6  0E79               	movlw	121
  2366  0018B8  0100               	movlb	__Lparam shr (0+8)
  2367  0018BA  6FCF               	movwf	?_PrintErrMsg^(__Lparam& (0+65280)),b
  2368  0018BC  C21A  F0D0         	movff	_PFN+20,?_PrintErrMsg+1
  2369  0018C0  6BD1               	clrf	(?_PrintErrMsg+2)^(__Lparam& (0+65280)),b
  2370  0018C2  6BD2               	clrf	(?_PrintErrMsg+3)^(__Lparam& (0+65280)),b
  2371  0018C4  EE02  F00B         	lfsr	0,_PFN+5
  2372  0018C8  34EF               	rlcf	indf0,w,c
  2373  0018CA  34EF               	rlcf	indf0,w,c
  2374  0018CC  0B01               	andlw	1
  2375  0018CE  6FD3               	movwf	(?_PrintErrMsg+4)^(__Lparam& (0+65280)),b
  2376  0018D0  0E04               	movlw	4
  2377  0018D2  EC81  F01E         	call	_PrintErrMsg
  2378  0018D6  D04B               	goto	l125
  2379  0018D8                     l118:
  2380                           ;main.c: 608: else PrintErrMsg(4,0b01111001,PFN.
      +                          KERR,PFN.KERR==0x0E,PFN.KERR==0x09,PFN._opgres);
  2381  0018D8  0E79               	movlw	121
  2382  0018DA  0100               	movlb	__Lparam shr (0+8)
  2383  0018DC  6FCF               	movwf	?_PrintErrMsg^(__Lparam& (0+65280)),b
  2384  0018DE  C21A  F0D0         	movff	_PFN+20,?_PrintErrMsg+1
  2385  0018E2  C21A  FFE8         	movff	_PFN+20,wreg
  2386  0018E6  0A0E               	xorlw	14
  2387  0018E8  0E00               	movlw	0
  2388  0018EA  B4D8               	btfsc	status,2,c
  2389  0018EC  0E01               	movlw	1
  2390  0018EE  6FD1               	movwf	(?_PrintErrMsg+2)^(__Lparam& (0+65280)),b
  2391  0018F0  C21A  FFE8         	movff	_PFN+20,wreg
  2392  0018F4  0A09               	xorlw	9
  2393  0018F6  0E00               	movlw	0
  2394  0018F8  B4D8               	btfsc	status,2,c
  2395  0018FA  0E01               	movlw	1
  2396  0018FC  6FD2               	movwf	(?_PrintErrMsg+3)^(__Lparam& (0+65280)),b
  2397  0018FE  EE02  F00B         	lfsr	0,_PFN+5
  2398  001902  34EF               	rlcf	indf0,w,c
  2399  001904  34EF               	rlcf	indf0,w,c
  2400  001906  0B01               	andlw	1
  2401  001908  6FD3               	movwf	(?_PrintErrMsg+4)^(__Lparam& (0+65280)),b
  2402  00190A  0E04               	movlw	4
  2403  00190C  EC81  F01E         	call	_PrintErrMsg
  2404                           ;main.c: 609: }
  2405  001910  D02E               	goto	l125
  2406  001912                     l114:
  2407                           ;main.c: 610: else
  2408  001912  EC7A  F01E         	call	_EndErr	;wreg free
  2409                           ;main.c: 613: }
  2410  001916  D02B               	goto	l125
  2411  001918                     l113:
  2412                           ;main.c: 615: else
  2413  001918  0102               	movlb	(_PFN+3) shr (0+8)
  2414  00191A  BD09               	btfsc	(_PFN+3)& (0+255),6,b
  2415  00191C  D019               	goto	l122
  2416                           ;main.c: 618: {
  2417  00191E  AF06               	btfss	_PFN& (0+255),7,b
  2418  001920  B107               	btfsc	(_PFN+1)& (0+255),0,b
  2419  001922  D004               	goto	l123
  2420  001924  0102               	movlb	(_PFN+2) shr (0+8)
  2421  001926  A708               	btfss	(_PFN+2)& (0+255),3,b
  2422  001928  ECEE  F023         	call	_ClrMarkMinMax	;wreg free
  2423  00192C                     l123:
  2424                           ;main.c: 620: PrintErrMsg(4,0b01111001,PFN.KAWR,
      +                          1,1,PFN._opgres);
  2425  00192C  0E79               	movlw	121
  2426  00192E  0100               	movlb	__Lparam shr (0+8)
  2427  001930  6FCF               	movwf	?_PrintErrMsg^(__Lparam& (0+65280)),b
  2428  001932  C219  F0D0         	movff	_PFN+19,?_PrintErrMsg+1
  2429  001936  0E01               	movlw	1
  2430  001938  6FD1               	movwf	(?_PrintErrMsg+2)^(__Lparam& (0+65280)),b
  2431  00193A  6FD2               	movwf	(?_PrintErrMsg+3)^(__Lparam& (0+65280)),b
  2432  00193C  EE02  F00B         	lfsr	0,_PFN+5
  2433  001940  34EF               	rlcf	indf0,w,c
  2434  001942  34EF               	rlcf	indf0,w,c
  2435  001944  0B01               	andlw	1
  2436  001946  6FD3               	movwf	(?_PrintErrMsg+4)^(__Lparam& (0+65280)),b
  2437  001948  0E04               	movlw	4
  2438  00194A  EC81  F01E         	call	_PrintErrMsg
  2439                           ;main.c: 621: }else EndErr();
  2440  00194E  D00F               	goto	l125
  2441  001950                     l122:
  2442  001950  EC7A  F01E         	call	_EndErr	;wreg free
  2443                           ;main.c: 622: }
  2444  001954  D00C               	goto	l125
  2445  001956                     l112:
  2446                           ;main.c: 624: else
  2447  001956  0102               	movlb	(_PFN+7) shr (0+8)
  2448  001958  A70D               	btfss	(_PFN+7)& (0+255),3,b
  2449  00195A  D004               	goto	l126
  2450  00195C  0E01               	movlw	1
  2451  00195E  ECF4  F03D         	call	_SetLightLLed
  2452  001962  D003               	goto	l127
  2453  001964                     l126:
  2454                           ;main.c: 627: else SetLightLLed(0);
  2455  001964  0E00               	movlw	0
  2456  001966  ECF4  F03D         	call	_SetLightLLed
  2457  00196A                     l127:
  2458                           ;main.c: 628: EndErr();
  2459  00196A  EC7A  F01E         	call	_EndErr	;wreg free
  2460  00196E                     l125:
  2461                           ;main.c: 629: }
  2462  00196E  0102               	movlb	(_PFN+4) shr (0+8)
  2463  001970  AF0A               	btfss	(_PFN+4)& (0+255),7,b
  2464  001972  B90B               	btfsc	(_PFN+5)& (0+255),4,b
  2465  001974  EF31  F011         	goto	l128
  2466  001978  0102               	movlb	(_PFN+5) shr (0+8)
  2467  00197A  B70B               	btfsc	(_PFN+5)& (0+255),3,b
  2468  00197C  EF31  F011         	goto	l128
  2469                           ;main.c: 631: {
  2470  001980  0102               	movlb	(_PFN+6) shr (0+8)
  2471  001982  AF0C               	btfss	(_PFN+6)& (0+255),7,b
  2472  001984  D043               	goto	l129
  2473                           ;main.c: 633: {
  2474  001986  B30C               	btfsc	(_PFN+6)& (0+255),1,b
  2475  001988  B30B               	btfsc	(_PFN+5)& (0+255),1,b
  2476  00198A  D007               	goto	l130
  2477  00198C  0E01               	movlw	1
  2478  00198E  0100               	movlb	__Lparam shr (0+8)
  2479  001990  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  2480  001992  6FD0               	movwf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  2481  001994  0E00               	movlw	0
  2482  001996  ECBA  F025         	call	_ClrDig
  2483  00199A                     l130:
  2484                           ;main.c: 636: if(!PFN._tdzCW) ClrDig(1,0,0);
  2485  00199A  0102               	movlb	(_PFN+5) shr (0+8)
  2486  00199C  B50B               	btfsc	(_PFN+5)& (0+255),2,b
  2487  00199E  D006               	goto	l131
  2488  0019A0  0100               	movlb	__Lparam shr (0+8)
  2489  0019A2  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  2490  0019A4  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  2491  0019A6  0E01               	movlw	1
  2492  0019A8  ECBA  F025         	call	_ClrDig
  2493  0019AC                     l131:
  2494                           ;main.c: 638: if(!PFN._errCS&&!PFN._tdzCO) {Mark
      +                          (0,0);PrintCS(PFN.CS,1);}
  2495  0019AC  0102               	movlb	(_PFN+6) shr (0+8)
  2496  0019AE  A30C               	btfss	(_PFN+6)& (0+255),1,b
  2497  0019B0  B30B               	btfsc	(_PFN+5)& (0+255),1,b
  2498  0019B2  D00C               	goto	l132
  2499  0019B4  0100               	movlb	__Lparam shr (0+8)
  2500  0019B6  6BDD               	clrf	?_Mark^(__Lparam& (0+65280)),b
  2501  0019B8  0E00               	movlw	0
  2502  0019BA  ECDB  F023         	call	_Mark
  2503  0019BE  0E01               	movlw	1
  2504  0019C0  0100               	movlb	__Lparam shr (0+8)
  2505  0019C2  6FCF               	movwf	?_PrintCS^(__Lparam& (0+65280)),b
  2506  0019C4  C212  FFE8         	movff	_PFN+12,wreg
  2507  0019C8  ECFF  F023         	call	_PrintCS
  2508  0019CC                     l132:
  2509                           ;main.c: 639: if(PFN._tdzCW&&!PFN._errCW) PrintC
      +                          W(PFN.CW,1);
  2510  0019CC  0102               	movlb	(_PFN+5) shr (0+8)
  2511  0019CE  B50B               	btfsc	(_PFN+5)& (0+255),2,b
  2512  0019D0  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  2513  0019D2  D007               	goto	l133
  2514  0019D4  0E01               	movlw	1
  2515  0019D6  0100               	movlb	__Lparam shr (0+8)
  2516  0019D8  6FCF               	movwf	?_PrintCW^(__Lparam& (0+65280)),b
  2517  0019DA  C211  FFE8         	movff	_PFN+11,wreg
  2518  0019DE  EC2C  F024         	call	_PrintCW
  2519  0019E2                     l133:
  2520                           ;main.c: 640: if(PFN._tdzCO&&!PFN._errCO) PrintC
      +                          O(PFN.CO,1,PFN._fL3);
  2521  0019E2  0102               	movlb	(_PFN+5) shr (0+8)
  2522  0019E4  B30B               	btfsc	(_PFN+5)& (0+255),1,b
  2523  0019E6  B50C               	btfsc	(_PFN+6)& (0+255),2,b
  2524  0019E8  EF31  F011         	goto	l128
  2525  0019EC  0E01               	movlw	1
  2526  0019EE  0100               	movlb	__Lparam shr (0+8)
  2527  0019F0  6FCF               	movwf	?_PrintCO^(__Lparam& (0+65280)),b
  2528  0019F2  EE02  F00B         	lfsr	0,_PFN+5
  2529  0019F6  38EF               	swapf	indf0,w,c
  2530  0019F8  6E00               	movwf	btemp,c
  2531  0019FA  3000               	rrcf	btemp,w,c
  2532  0019FC  0B01               	andlw	1
  2533  0019FE  6FD0               	movwf	(?_PrintCO+1)^(__Lparam& (0+65280)),b
  2534  001A00  C210  FFE8         	movff	_PFN+10,wreg
  2535  001A04  ECC1  F024         	call	_PrintCO
  2536                           ;main.c: 641: }
  2537  001A08  EF31  F011         	goto	l128
  2538  001A0C                     l129:
  2539                           ;main.c: 642: else
  2540  001A0C  0102               	movlb	(_PFN+6) shr (0+8)
  2541  001A0E  AD0C               	btfss	(_PFN+6)& (0+255),6,b
  2542  001A10  D1C0               	goto	l136
  2543                           ;main.c: 647: {
  2544  001A12  A90A               	btfss	(_PFN+4)& (0+255),4,b
  2545  001A14  D002               	goto	u2420
  2546  001A16  AB07               	btfss	(_PFN+1)& (0+255),5,b
  2547  001A18  D172               	goto	l137
  2548  001A1A                     u2420:
  2549                           ;main.c: 649: {
  2550  001A1A  0102               	movlb	(_PFN+4) shr (0+8)
  2551  001A1C  BB0A               	btfsc	(_PFN+4)& (0+255),5,b
  2552  001A1E  D002               	goto	u2450
  2553  001A20  A30B               	btfss	(_PFN+5)& (0+255),1,b
  2554  001A22  D0B3               	goto	l138
  2555  001A24                     u2450:
  2556                           ;main.c: 651: {
  2557  001A24  0102               	movlb	(_PFN+1) shr (0+8)
  2558  001A26  AD07               	btfss	(_PFN+1)& (0+255),6,b
  2559  001A28  D044               	goto	l139
  2560                           ;main.c: 653: {
  2561  001A2A  AF07               	btfss	(_PFN+1)& (0+255),7,b
  2562  001A2C  D03A               	goto	l140
  2563                           ;main.c: 655: {
  2564  001A2E  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  2565  001A30  D008               	goto	l141
  2566                           ;main.c: 657: {
  2567  001A32  0100               	movlb	__Lparam shr (0+8)
  2568  001A34  6BCF               	clrf	?_PrintCS^(__Lparam& (0+65280)),b
  2569  001A36  C212  FFE8         	movff	_PFN+12,wreg
  2570  001A3A  ECFF  F023         	call	_PrintCS
  2571                           ;main.c: 659: }
  2572  001A3E  EF2E  F011         	goto	l192
  2573  001A42                     l141:
  2574                           ;main.c: 660: else
  2575  001A42  EE12  F021         	lfsr	1,_PFN+27
  2576  001A46  EE02  F027         	lfsr	0,_PFN+33
  2577  001A4A  52EE               	movf	postinc0,f,c
  2578  001A4C  52E6               	movf	postinc1,f,c
  2579  001A4E  50E5               	movf	postdec1,w,c
  2580  001A50  5CED               	subwf	postdec0,w,c
  2581  001A52  E102               	bnz	u2495
  2582  001A54  50E7               	movf	indf1,w,c
  2583  001A56  5CEF               	subwf	indf0,w,c
  2584  001A58                     u2495:
  2585  001A58  E303               	bnc	u2510
  2586  001A5A  0102               	movlb	(_PFN+7) shr (0+8)
  2587  001A5C  BF0D               	btfsc	(_PFN+7)& (0+255),7,b
  2588  001A5E  D008               	goto	l143
  2589  001A60                     u2510:
  2590  001A60  0E01               	movlw	1
  2591  001A62  0100               	movlb	__Lparam shr (0+8)
  2592  001A64  6FCF               	movwf	?_PrintCS^(__Lparam& (0+65280)),b
  2593  001A66  C212  FFE8         	movff	_PFN+12,wreg
  2594  001A6A  ECFF  F023         	call	_PrintCS
  2595  001A6E  D3F6               	goto	l192
  2596  001A70                     l143:
  2597                           ;main.c: 663: else
  2598  001A70  0102               	movlb	(_PFN+6) shr (0+8)
  2599  001A72  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  2600  001A74  D00F               	goto	l145
  2601                           ;main.c: 666: {
  2602  001A76  0E01               	movlw	1
  2603  001A78  0100               	movlb	__Lparam shr (0+8)
  2604  001A7A  6FCF               	movwf	?_PrintCS^(__Lparam& (0+65280)),b
  2605  001A7C  C212  FFE8         	movff	_PFN+12,wreg
  2606  001A80  ECFF  F023         	call	_PrintCS
  2607                           ;main.c: 668: PrintCW(PFN.CW,1);
  2608  001A84  0E01               	movlw	1
  2609  001A86  0100               	movlb	__Lparam shr (0+8)
  2610  001A88  6FCF               	movwf	?_PrintCW^(__Lparam& (0+65280)),b
  2611  001A8A  C211  FFE8         	movff	_PFN+11,wreg
  2612  001A8E  EC2C  F024         	call	_PrintCW
  2613                           ;main.c: 669: }
  2614  001A92  D3E4               	goto	l192
  2615  001A94                     l145:
  2616                           ;main.c: 670: else PrintCS(PFN.CS,0);
  2617  001A94  0100               	movlb	__Lparam shr (0+8)
  2618  001A96  6BCF               	clrf	?_PrintCS^(__Lparam& (0+65280)),b
  2619  001A98  C212  FFE8         	movff	_PFN+12,wreg
  2620  001A9C  ECFF  F023         	call	_PrintCS
  2621                           ;main.c: 671: }
  2622  001AA0  D3DD               	goto	l192
  2623  001AA2                     l140:
  2624                           ;main.c: 674: else
  2625  001AA2  0102               	movlb	(_PFN+2) shr (0+8)
  2626  001AA4  A108               	btfss	(_PFN+2)& (0+255),0,b
  2627  001AA6  D3DA               	goto	l192
  2628  001AA8  C213  FFE8         	movff	_PFN+13,wreg
  2629  001AAC  EC12  F025         	call	_PrintIN
  2630                           ;main.c: 677: }
  2631  001AB0  D3D5               	goto	l192
  2632  001AB2                     l139:
  2633                           ;main.c: 679: else
  2634  001AB2  0102               	movlb	(_PFN+4) shr (0+8)
  2635  001AB4  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  2636  001AB6  D01E               	goto	l150
  2637                           ;main.c: 682: {
  2638  001AB8  B50C               	btfsc	(_PFN+6)& (0+255),2,b
  2639  001ABA  D00E               	goto	l151
  2640  001ABC  0100               	movlb	__Lparam shr (0+8)
  2641  001ABE  6BCF               	clrf	?_PrintCO^(__Lparam& (0+65280)),b
  2642  001AC0  EE02  F00B         	lfsr	0,_PFN+5
  2643  001AC4  38EF               	swapf	indf0,w,c
  2644  001AC6  6E00               	movwf	btemp,c
  2645  001AC8  3000               	rrcf	btemp,w,c
  2646  001ACA  0B01               	andlw	1
  2647  001ACC  6FD0               	movwf	(?_PrintCO+1)^(__Lparam& (0+65280)),b
  2648  001ACE  C210  FFE8         	movff	_PFN+10,wreg
  2649  001AD2  ECC1  F024         	call	_PrintCO
  2650  001AD6  D007               	goto	l152
  2651  001AD8                     l151:
  2652                           ;main.c: 684: else ClrDig(0,1,0);
  2653  001AD8  0E01               	movlw	1
  2654  001ADA  0100               	movlb	__Lparam shr (0+8)
  2655  001ADC  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  2656  001ADE  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  2657  001AE0  0E00               	movlw	0
  2658  001AE2  ECBA  F025         	call	_ClrDig
  2659  001AE6                     l152:
  2660                           ;main.c: 685: ClrDig(1,0,0);
  2661  001AE6  0100               	movlb	__Lparam shr (0+8)
  2662  001AE8  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  2663  001AEA  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  2664  001AEC  0E01               	movlw	1
  2665  001AEE  ECBA  F025         	call	_ClrDig
  2666                           ;main.c: 686: }
  2667  001AF2  D3B4               	goto	l192
  2668  001AF4                     l150:
  2669                           ;main.c: 687: else
  2670  001AF4  EE12  F021         	lfsr	1,_PFN+27
  2671  001AF8  EE02  F027         	lfsr	0,_PFN+33
  2672  001AFC  52EE               	movf	postinc0,f,c
  2673  001AFE  52E6               	movf	postinc1,f,c
  2674  001B00  50E5               	movf	postdec1,w,c
  2675  001B02  5CED               	subwf	postdec0,w,c
  2676  001B04  E102               	bnz	u2565
  2677  001B06  50E7               	movf	indf1,w,c
  2678  001B08  5CEF               	subwf	indf0,w,c
  2679  001B0A                     u2565:
  2680  001B0A  E303               	bnc	u2580
  2681  001B0C  0102               	movlb	(_PFN+7) shr (0+8)
  2682  001B0E  BF0D               	btfsc	(_PFN+7)& (0+255),7,b
  2683  001B10  D015               	goto	l154
  2684  001B12                     u2580:
  2685                           ;main.c: 690: {
  2686  001B12  0E01               	movlw	1
  2687  001B14  0100               	movlb	__Lparam shr (0+8)
  2688  001B16  6FCF               	movwf	?_PrintCO^(__Lparam& (0+65280)),b
  2689  001B18  EE02  F00B         	lfsr	0,_PFN+5
  2690  001B1C  38EF               	swapf	indf0,w,c
  2691  001B1E  6E00               	movwf	btemp,c
  2692  001B20  3000               	rrcf	btemp,w,c
  2693  001B22  0B01               	andlw	1
  2694  001B24  6FD0               	movwf	(?_PrintCO+1)^(__Lparam& (0+65280)),b
  2695  001B26  C210  FFE8         	movff	_PFN+10,wreg
  2696  001B2A  ECC1  F024         	call	_PrintCO
  2697                           ;main.c: 692: ClrDig(1,0,1);
  2698  001B2E  0100               	movlb	__Lparam shr (0+8)
  2699  001B30  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  2700  001B32  0E01               	movlw	1
  2701  001B34  6FD0               	movwf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  2702  001B36  ECBA  F025         	call	_ClrDig
  2703                           ;main.c: 693: }
  2704  001B3A  D390               	goto	l192
  2705  001B3C                     l154:
  2706                           ;main.c: 694: else
  2707  001B3C  0102               	movlb	(_PFN+6) shr (0+8)
  2708  001B3E  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  2709  001B40  D016               	goto	l156
  2710                           ;main.c: 697: {
  2711  001B42  0E01               	movlw	1
  2712  001B44  0100               	movlb	__Lparam shr (0+8)
  2713  001B46  6FCF               	movwf	?_PrintCO^(__Lparam& (0+65280)),b
  2714  001B48  EE02  F00B         	lfsr	0,_PFN+5
  2715  001B4C  38EF               	swapf	indf0,w,c
  2716  001B4E  6E00               	movwf	btemp,c
  2717  001B50  3000               	rrcf	btemp,w,c
  2718  001B52  0B01               	andlw	1
  2719  001B54  6FD0               	movwf	(?_PrintCO+1)^(__Lparam& (0+65280)),b
  2720  001B56  C210  FFE8         	movff	_PFN+10,wreg
  2721  001B5A  ECC1  F024         	call	_PrintCO
  2722                           ;main.c: 699: PrintCW(PFN.CW,1);
  2723  001B5E  0E01               	movlw	1
  2724  001B60  0100               	movlb	__Lparam shr (0+8)
  2725  001B62  6FCF               	movwf	?_PrintCW^(__Lparam& (0+65280)),b
  2726  001B64  C211  FFE8         	movff	_PFN+11,wreg
  2727  001B68  EC2C  F024         	call	_PrintCW
  2728                           ;main.c: 700: }
  2729  001B6C  D377               	goto	l192
  2730  001B6E                     l156:
  2731                           ;main.c: 701: else PrintCO(PFN.CO,0,PFN._fL3);
  2732  001B6E  0100               	movlb	__Lparam shr (0+8)
  2733  001B70  6BCF               	clrf	?_PrintCO^(__Lparam& (0+65280)),b
  2734  001B72  EE02  F00B         	lfsr	0,_PFN+5
  2735  001B76  38EF               	swapf	indf0,w,c
  2736  001B78  6E00               	movwf	btemp,c
  2737  001B7A  3000               	rrcf	btemp,w,c
  2738  001B7C  0B01               	andlw	1
  2739  001B7E  6FD0               	movwf	(?_PrintCO+1)^(__Lparam& (0+65280)),b
  2740  001B80  C210  FFE8         	movff	_PFN+10,wreg
  2741  001B84  ECC1  F024         	call	_PrintCO
  2742                           ;main.c: 702: }
  2743  001B88  D369               	goto	l192
  2744  001B8A                     l138:
  2745                           ;main.c: 706: else
  2746  001B8A  0102               	movlb	(_PFN+1) shr (0+8)
  2747  001B8C  AD07               	btfss	(_PFN+1)& (0+255),6,b
  2748  001B8E  D04E               	goto	l159
  2749                           ;main.c: 709: {
  2750  001B90  AF07               	btfss	(_PFN+1)& (0+255),7,b
  2751  001B92  D364               	goto	l192
  2752                           ;main.c: 711: {
  2753  001B94  A70C               	btfss	(_PFN+6)& (0+255),3,b
  2754  001B96  AD0A               	btfss	(_PFN+4)& (0+255),6,b
  2755  001B98  D00F               	goto	l161
  2756                           ;main.c: 713: {
  2757  001B9A  0E01               	movlw	1
  2758  001B9C  0100               	movlb	__Lparam shr (0+8)
  2759  001B9E  6FCF               	movwf	?_PrintCS^(__Lparam& (0+65280)),b
  2760  001BA0  C212  FFE8         	movff	_PFN+12,wreg
  2761  001BA4  ECFF  F023         	call	_PrintCS
  2762                           ;main.c: 715: PrintCW(PFN.CW,1);
  2763  001BA8  0E01               	movlw	1
  2764  001BAA  0100               	movlb	__Lparam shr (0+8)
  2765  001BAC  6FCF               	movwf	?_PrintCW^(__Lparam& (0+65280)),b
  2766  001BAE  C211  FFE8         	movff	_PFN+11,wreg
  2767  001BB2  EC2C  F024         	call	_PrintCW
  2768                           ;main.c: 716: }
  2769  001BB6  D352               	goto	l192
  2770  001BB8                     l161:
  2771                           ;main.c: 717: else
  2772  001BB8  0102               	movlb	(_PFN+4) shr (0+8)
  2773  001BBA  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  2774  001BBC  D007               	goto	l163
  2775                           ;main.c: 720: {
  2776  001BBE  0100               	movlb	__Lparam shr (0+8)
  2777  001BC0  6BCF               	clrf	?_PrintCS^(__Lparam& (0+65280)),b
  2778  001BC2  C212  FFE8         	movff	_PFN+12,wreg
  2779  001BC6  ECFF  F023         	call	_PrintCS
  2780                           ;main.c: 722: }
  2781  001BCA  D348               	goto	l192
  2782  001BCC                     l163:
  2783                           ;main.c: 723: else
  2784  001BCC  EE12  F021         	lfsr	1,_PFN+27
  2785  001BD0  EE02  F027         	lfsr	0,_PFN+33
  2786  001BD4  52EE               	movf	postinc0,f,c
  2787  001BD6  52E6               	movf	postinc1,f,c
  2788  001BD8  50E5               	movf	postdec1,w,c
  2789  001BDA  5CED               	subwf	postdec0,w,c
  2790  001BDC  E102               	bnz	u2665
  2791  001BDE  50E7               	movf	indf1,w,c
  2792  001BE0  5CEF               	subwf	indf0,w,c
  2793  001BE2                     u2665:
  2794  001BE2  E303               	bnc	u2680
  2795  001BE4  0102               	movlb	(_PFN+7) shr (0+8)
  2796  001BE6  BF0D               	btfsc	(_PFN+7)& (0+255),7,b
  2797  001BE8  D008               	goto	l165
  2798  001BEA                     u2680:
  2799  001BEA  0E01               	movlw	1
  2800  001BEC  0100               	movlb	__Lparam shr (0+8)
  2801  001BEE  6FCF               	movwf	?_PrintCS^(__Lparam& (0+65280)),b
  2802  001BF0  C212  FFE8         	movff	_PFN+12,wreg
  2803  001BF4  ECFF  F023         	call	_PrintCS
  2804  001BF8  D331               	goto	l192
  2805  001BFA                     l165:
  2806                           ;main.c: 726: else
  2807  001BFA  0102               	movlb	(_PFN+6) shr (0+8)
  2808  001BFC  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  2809  001BFE  D00F               	goto	l167
  2810                           ;main.c: 729: {
  2811  001C00  0E01               	movlw	1
  2812  001C02  0100               	movlb	__Lparam shr (0+8)
  2813  001C04  6FCF               	movwf	?_PrintCS^(__Lparam& (0+65280)),b
  2814  001C06  C212  FFE8         	movff	_PFN+12,wreg
  2815  001C0A  ECFF  F023         	call	_PrintCS
  2816                           ;main.c: 731: PrintCW(PFN.CW,1);
  2817  001C0E  0E01               	movlw	1
  2818  001C10  0100               	movlb	__Lparam shr (0+8)
  2819  001C12  6FCF               	movwf	?_PrintCW^(__Lparam& (0+65280)),b
  2820  001C14  C211  FFE8         	movff	_PFN+11,wreg
  2821  001C18  EC2C  F024         	call	_PrintCW
  2822                           ;main.c: 732: }
  2823  001C1C  D31F               	goto	l192
  2824  001C1E                     l167:
  2825                           ;main.c: 733: else PrintCS(PFN.CS,0);
  2826  001C1E  0100               	movlb	__Lparam shr (0+8)
  2827  001C20  6BCF               	clrf	?_PrintCS^(__Lparam& (0+65280)),b
  2828  001C22  C212  FFE8         	movff	_PFN+12,wreg
  2829  001C26  ECFF  F023         	call	_PrintCS
  2830                           ;main.c: 734: }
  2831  001C2A  D318               	goto	l192
  2832  001C2C                     l159:
  2833                           ;main.c: 739: else
  2834  001C2C  0102               	movlb	(_PFN+4) shr (0+8)
  2835  001C2E  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  2836  001C30  D023               	goto	l170
  2837                           ;main.c: 742: {
  2838  001C32  A70C               	btfss	(_PFN+6)& (0+255),3,b
  2839  001C34  AD0A               	btfss	(_PFN+4)& (0+255),6,b
  2840  001C36  D007               	goto	l171
  2841  001C38  0100               	movlb	__Lparam shr (0+8)
  2842  001C3A  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  2843  001C3C  C211  FFE8         	movff	_PFN+11,wreg
  2844  001C40  EC2C  F024         	call	_PrintCW
  2845  001C44  D011               	goto	l172
  2846  001C46                     l171:
  2847                           ;main.c: 744: else
  2848  001C46  0102               	movlb	(_PFN+6) shr (0+8)
  2849  001C48  A70C               	btfss	(_PFN+6)& (0+255),3,b
  2850  001C4A  AB07               	btfss	(_PFN+1)& (0+255),5,b
  2851  001C4C  D007               	goto	l173
  2852  001C4E  0100               	movlb	__Lparam shr (0+8)
  2853  001C50  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  2854  001C52  C211  FFE8         	movff	_PFN+11,wreg
  2855  001C56  EC2C  F024         	call	_PrintCW
  2856  001C5A  D006               	goto	l172
  2857  001C5C                     l173:
  2858                           ;main.c: 746: else ClrDig(1,0,0);
  2859  001C5C  0100               	movlb	__Lparam shr (0+8)
  2860  001C5E  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  2861  001C60  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  2862  001C62  0E01               	movlw	1
  2863  001C64  ECBA  F025         	call	_ClrDig
  2864  001C68                     l172:
  2865                           ;main.c: 747: ClrDig(0,1,0);
  2866  001C68  0E01               	movlw	1
  2867  001C6A  0100               	movlb	__Lparam shr (0+8)
  2868  001C6C  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  2869  001C6E  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  2870  001C70  0E00               	movlw	0
  2871  001C72  ECBA  F025         	call	_ClrDig
  2872                           ;main.c: 748: }
  2873  001C76  D2F2               	goto	l192
  2874  001C78                     l170:
  2875                           ;main.c: 749: else
  2876  001C78  0102               	movlb	(_PFN+6) shr (0+8)
  2877  001C7A  A70C               	btfss	(_PFN+6)& (0+255),3,b
  2878  001C7C  AD0A               	btfss	(_PFN+4)& (0+255),6,b
  2879  001C7E  D007               	goto	l176
  2880  001C80  0100               	movlb	__Lparam shr (0+8)
  2881  001C82  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  2882  001C84  C211  FFE8         	movff	_PFN+11,wreg
  2883  001C88  EC2C  F024         	call	_PrintCW
  2884  001C8C  D030               	goto	l177
  2885  001C8E                     l176:
  2886                           ;main.c: 752: else
  2887  001C8E  0102               	movlb	(_PFN+6) shr (0+8)
  2888  001C90  A70C               	btfss	(_PFN+6)& (0+255),3,b
  2889  001C92  AB07               	btfss	(_PFN+1)& (0+255),5,b
  2890  001C94  D007               	goto	l178
  2891  001C96  0100               	movlb	__Lparam shr (0+8)
  2892  001C98  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  2893  001C9A  C211  FFE8         	movff	_PFN+11,wreg
  2894  001C9E  EC2C  F024         	call	_PrintCW
  2895  001CA2  D025               	goto	l177
  2896  001CA4                     l178:
  2897                           ;main.c: 754: else
  2898  001CA4  EE12  F021         	lfsr	1,_PFN+27
  2899  001CA8  EE02  F027         	lfsr	0,_PFN+33
  2900  001CAC  52EE               	movf	postinc0,f,c
  2901  001CAE  52E6               	movf	postinc1,f,c
  2902  001CB0  50E5               	movf	postdec1,w,c
  2903  001CB2  5CED               	subwf	postdec0,w,c
  2904  001CB4  E102               	bnz	u2835
  2905  001CB6  50E7               	movf	indf1,w,c
  2906  001CB8  5CEF               	subwf	indf0,w,c
  2907  001CBA                     u2835:
  2908  001CBA  E303               	bnc	u2850
  2909  001CBC  0102               	movlb	(_PFN+7) shr (0+8)
  2910  001CBE  BF0D               	btfsc	(_PFN+7)& (0+255),7,b
  2911  001CC0  D007               	goto	l180
  2912  001CC2                     u2850:
  2913  001CC2  0100               	movlb	__Lparam shr (0+8)
  2914  001CC4  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  2915  001CC6  0E01               	movlw	1
  2916  001CC8  6FD0               	movwf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  2917  001CCA  ECBA  F025         	call	_ClrDig
  2918  001CCE  D00F               	goto	l177
  2919  001CD0                     l180:
  2920                           ;main.c: 756: else
  2921  001CD0  0100               	movlb	__Lparam shr (0+8)
  2922  001CD2  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  2923  001CD4  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  2924  001CD6  0E00               	movlw	0
  2925  001CD8  ECBA  F025         	call	_ClrDig
  2926                           ;main.c: 759: if(!PFN._errCW) PrintCW(PFN.CW,0);
  2927  001CDC  0102               	movlb	(_PFN+6) shr (0+8)
  2928  001CDE  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  2929  001CE0  D006               	goto	l177
  2930  001CE2  0100               	movlb	__Lparam shr (0+8)
  2931  001CE4  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  2932  001CE6  C211  FFE8         	movff	_PFN+11,wreg
  2933  001CEA  EC2C  F024         	call	_PrintCW
  2934  001CEE                     l177:
  2935                           ;main.c: 760: }
  2936  001CEE  0E01               	movlw	1
  2937  001CF0  0100               	movlb	__Lparam shr (0+8)
  2938  001CF2  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  2939  001CF4  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  2940  001CF6  0E00               	movlw	0
  2941  001CF8  ECBA  F025         	call	_ClrDig
  2942                           ;main.c: 762: }
  2943  001CFC  D2AF               	goto	l192
  2944  001CFE                     l137:
  2945                           ;main.c: 766: else
  2946  001CFE  0102               	movlb	(_PFN+4) shr (0+8)
  2947  001D00  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  2948  001D02  D018               	goto	l184
  2949                           ;main.c: 769: {
  2950  001D04  A70C               	btfss	(_PFN+6)& (0+255),3,b
  2951  001D06  AD0A               	btfss	(_PFN+4)& (0+255),6,b
  2952  001D08  D007               	goto	l185
  2953  001D0A  0100               	movlb	__Lparam shr (0+8)
  2954  001D0C  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  2955  001D0E  C211  FFE8         	movff	_PFN+11,wreg
  2956  001D12  EC2C  F024         	call	_PrintCW
  2957  001D16  D006               	goto	l186
  2958  001D18                     l185:
  2959                           ;main.c: 771: else ClrDig(1,0,0);
  2960  001D18  0100               	movlb	__Lparam shr (0+8)
  2961  001D1A  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  2962  001D1C  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  2963  001D1E  0E01               	movlw	1
  2964  001D20  ECBA  F025         	call	_ClrDig
  2965  001D24                     l186:
  2966                           ;main.c: 772: ClrDig(0,1,0);
  2967  001D24  0E01               	movlw	1
  2968  001D26  0100               	movlb	__Lparam shr (0+8)
  2969  001D28  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  2970  001D2A  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  2971  001D2C  0E00               	movlw	0
  2972  001D2E  ECBA  F025         	call	_ClrDig
  2973                           ;main.c: 773: }
  2974  001D32  D294               	goto	l192
  2975  001D34                     l184:
  2976                           ;main.c: 774: else
  2977  001D34  0102               	movlb	(_PFN+6) shr (0+8)
  2978  001D36  A70C               	btfss	(_PFN+6)& (0+255),3,b
  2979  001D38  AD0A               	btfss	(_PFN+4)& (0+255),6,b
  2980  001D3A  D007               	goto	l188
  2981  001D3C  0100               	movlb	__Lparam shr (0+8)
  2982  001D3E  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  2983  001D40  C211  FFE8         	movff	_PFN+11,wreg
  2984  001D44  EC2C  F024         	call	_PrintCW
  2985  001D48  D01C               	goto	l189
  2986  001D4A                     l188:
  2987                           ;main.c: 778: else
  2988  001D4A  EE12  F021         	lfsr	1,_PFN+27
  2989  001D4E  EE02  F027         	lfsr	0,_PFN+33
  2990  001D52  52EE               	movf	postinc0,f,c
  2991  001D54  52E6               	movf	postinc1,f,c
  2992  001D56  50E5               	movf	postdec1,w,c
  2993  001D58  5CED               	subwf	postdec0,w,c
  2994  001D5A  E102               	bnz	u2945
  2995  001D5C  50E7               	movf	indf1,w,c
  2996  001D5E  5CEF               	subwf	indf0,w,c
  2997  001D60                     u2945:
  2998  001D60  E303               	bnc	u2960
  2999  001D62  0102               	movlb	(_PFN+7) shr (0+8)
  3000  001D64  BF0D               	btfsc	(_PFN+7)& (0+255),7,b
  3001  001D66  D007               	goto	l190
  3002  001D68                     u2960:
  3003  001D68  0100               	movlb	__Lparam shr (0+8)
  3004  001D6A  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  3005  001D6C  0E01               	movlw	1
  3006  001D6E  6FD0               	movwf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3007  001D70  ECBA  F025         	call	_ClrDig
  3008  001D74  D006               	goto	l189
  3009  001D76                     l190:
  3010                           ;main.c: 780: else ClrDig(1,0,0);
  3011  001D76  0100               	movlb	__Lparam shr (0+8)
  3012  001D78  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  3013  001D7A  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3014  001D7C  0E01               	movlw	1
  3015  001D7E  ECBA  F025         	call	_ClrDig
  3016  001D82                     l189:
  3017                           ;main.c: 781: ClrDig(0,1,0);
  3018  001D82  0E01               	movlw	1
  3019  001D84  0100               	movlb	__Lparam shr (0+8)
  3020  001D86  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  3021  001D88  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3022  001D8A  0E00               	movlw	0
  3023  001D8C  ECBA  F025         	call	_ClrDig
  3024                           ;main.c: 782: }
  3025  001D90  D265               	goto	l192
  3026  001D92                     l136:
  3027                           ;main.c: 785: else
  3028  001D92  0102               	movlb	(_PFN+6) shr (0+8)
  3029  001D94  AB0C               	btfss	(_PFN+6)& (0+255),5,b
  3030  001D96  D262               	goto	l192
  3031                           ;main.c: 789: {
  3032  001D98  A70A               	btfss	(_PFN+4)& (0+255),3,b
  3033  001D9A  B90A               	btfsc	(_PFN+4)& (0+255),4,b
  3034  001D9C  D1D5               	goto	l194
  3035  001D9E  0102               	movlb	(_PFN+1) shr (0+8)
  3036  001DA0  B907               	btfsc	(_PFN+1)& (0+255),4,b
  3037  001DA2  D1D2               	goto	l194
  3038  001DA4  0102               	movlb	(_PFN+1) shr (0+8)
  3039  001DA6  BB07               	btfsc	(_PFN+1)& (0+255),5,b
  3040  001DA8  D1CF               	goto	l194
  3041                           ;main.c: 791: {
  3042  001DAA  0102               	movlb	(_PFN+4) shr (0+8)
  3043  001DAC  AB0A               	btfss	(_PFN+4)& (0+255),5,b
  3044  001DAE  BD0A               	btfsc	(_PFN+4)& (0+255),6,b
  3045  001DB0  D0C1               	goto	l195
  3046                           ;main.c: 793: {
  3047  001DB2  0102               	movlb	(_PFN+1) shr (0+8)
  3048  001DB4  AD07               	btfss	(_PFN+1)& (0+255),6,b
  3049  001DB6  D043               	goto	l196
  3050                           ;main.c: 795: {
  3051  001DB8  AF07               	btfss	(_PFN+1)& (0+255),7,b
  3052  001DBA  D039               	goto	l197
  3053                           ;main.c: 797: {
  3054  001DBC  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  3055  001DBE  D007               	goto	l198
  3056                           ;main.c: 799: {
  3057  001DC0  0100               	movlb	__Lparam shr (0+8)
  3058  001DC2  6BCF               	clrf	?_PrintCS^(__Lparam& (0+65280)),b
  3059  001DC4  C212  FFE8         	movff	_PFN+12,wreg
  3060  001DC8  ECFF  F023         	call	_PrintCS
  3061                           ;main.c: 801: }
  3062  001DCC  D247               	goto	l192
  3063  001DCE                     l198:
  3064                           ;main.c: 802: else
  3065  001DCE  EE12  F021         	lfsr	1,_PFN+27
  3066  001DD2  EE02  F027         	lfsr	0,_PFN+33
  3067  001DD6  52EE               	movf	postinc0,f,c
  3068  001DD8  52E6               	movf	postinc1,f,c
  3069  001DDA  50E5               	movf	postdec1,w,c
  3070  001DDC  5CED               	subwf	postdec0,w,c
  3071  001DDE  E102               	bnz	u3115
  3072  001DE0  50E7               	movf	indf1,w,c
  3073  001DE2  5CEF               	subwf	indf0,w,c
  3074  001DE4                     u3115:
  3075  001DE4  E303               	bnc	u3130
  3076  001DE6  0102               	movlb	(_PFN+7) shr (0+8)
  3077  001DE8  BF0D               	btfsc	(_PFN+7)& (0+255),7,b
  3078  001DEA  D008               	goto	l200
  3079  001DEC                     u3130:
  3080  001DEC  0E01               	movlw	1
  3081  001DEE  0100               	movlb	__Lparam shr (0+8)
  3082  001DF0  6FCF               	movwf	?_PrintCS^(__Lparam& (0+65280)),b
  3083  001DF2  C212  FFE8         	movff	_PFN+12,wreg
  3084  001DF6  ECFF  F023         	call	_PrintCS
  3085  001DFA  D230               	goto	l192
  3086  001DFC                     l200:
  3087                           ;main.c: 805: else
  3088  001DFC  0102               	movlb	(_PFN+6) shr (0+8)
  3089  001DFE  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  3090  001E00  D00F               	goto	l202
  3091                           ;main.c: 808: {
  3092  001E02  0E01               	movlw	1
  3093  001E04  0100               	movlb	__Lparam shr (0+8)
  3094  001E06  6FCF               	movwf	?_PrintCS^(__Lparam& (0+65280)),b
  3095  001E08  C212  FFE8         	movff	_PFN+12,wreg
  3096  001E0C  ECFF  F023         	call	_PrintCS
  3097                           ;main.c: 810: PrintCW(PFN.CW,1);
  3098  001E10  0E01               	movlw	1
  3099  001E12  0100               	movlb	__Lparam shr (0+8)
  3100  001E14  6FCF               	movwf	?_PrintCW^(__Lparam& (0+65280)),b
  3101  001E16  C211  FFE8         	movff	_PFN+11,wreg
  3102  001E1A  EC2C  F024         	call	_PrintCW
  3103                           ;main.c: 811: }
  3104  001E1E  D21E               	goto	l192
  3105  001E20                     l202:
  3106                           ;main.c: 812: else PrintCS(PFN.CS,0);
  3107  001E20  0100               	movlb	__Lparam shr (0+8)
  3108  001E22  6BCF               	clrf	?_PrintCS^(__Lparam& (0+65280)),b
  3109  001E24  C212  FFE8         	movff	_PFN+12,wreg
  3110  001E28  ECFF  F023         	call	_PrintCS
  3111                           ;main.c: 813: }
  3112  001E2C  D217               	goto	l192
  3113  001E2E                     l197:
  3114                           ;main.c: 816: else
  3115  001E2E  0102               	movlb	(_PFN+2) shr (0+8)
  3116  001E30  A108               	btfss	(_PFN+2)& (0+255),0,b
  3117  001E32  D214               	goto	l192
  3118  001E34  C213  FFE8         	movff	_PFN+13,wreg
  3119  001E38  EC12  F025         	call	_PrintIN
  3120                           ;main.c: 819: }
  3121  001E3C  D20F               	goto	l192
  3122  001E3E                     l196:
  3123                           ;main.c: 821: else
  3124  001E3E  0102               	movlb	(_PFN+4) shr (0+8)
  3125  001E40  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  3126  001E42  D01F               	goto	l207
  3127                           ;main.c: 824: {
  3128  001E44  AB0B               	btfss	(_PFN+5)& (0+255),5,b
  3129  001E46  D00F               	goto	l208
  3130  001E48  0E01               	movlw	1
  3131  001E4A  0100               	movlb	__Lparam shr (0+8)
  3132  001E4C  6FCF               	movwf	?_PrintCO^(__Lparam& (0+65280)),b
  3133  001E4E  EE02  F00B         	lfsr	0,_PFN+5
  3134  001E52  38EF               	swapf	indf0,w,c
  3135  001E54  6E00               	movwf	btemp,c
  3136  001E56  3000               	rrcf	btemp,w,c
  3137  001E58  0B01               	andlw	1
  3138  001E5A  6FD0               	movwf	(?_PrintCO+1)^(__Lparam& (0+65280)),b
  3139  001E5C  C210  FFE8         	movff	_PFN+10,wreg
  3140  001E60  ECC1  F024         	call	_PrintCO
  3141  001E64  D007               	goto	l209
  3142  001E66                     l208:
  3143                           ;main.c: 826: else ClrDig(0,1,0);
  3144  001E66  0E01               	movlw	1
  3145  001E68  0100               	movlb	__Lparam shr (0+8)
  3146  001E6A  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  3147  001E6C  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3148  001E6E  0E00               	movlw	0
  3149  001E70  ECBA  F025         	call	_ClrDig
  3150  001E74                     l209:
  3151                           ;main.c: 827: ClrDig(1,0,0);
  3152  001E74  0100               	movlb	__Lparam shr (0+8)
  3153  001E76  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  3154  001E78  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3155  001E7A  0E01               	movlw	1
  3156  001E7C  ECBA  F025         	call	_ClrDig
  3157                           ;main.c: 828: }
  3158  001E80  D1ED               	goto	l192
  3159  001E82                     l207:
  3160                           ;main.c: 829: else
  3161  001E82  0102               	movlb	(_PFN+5) shr (0+8)
  3162  001E84  AB0B               	btfss	(_PFN+5)& (0+255),5,b
  3163  001E86  D02F               	goto	l211
  3164                           ;main.c: 832: {
  3165  001E88  0E01               	movlw	1
  3166  001E8A  0100               	movlb	__Lparam shr (0+8)
  3167  001E8C  6FCF               	movwf	?_PrintCO^(__Lparam& (0+65280)),b
  3168  001E8E  EE02  F00B         	lfsr	0,_PFN+5
  3169  001E92  38EF               	swapf	indf0,w,c
  3170  001E94  6E00               	movwf	btemp,c
  3171  001E96  3000               	rrcf	btemp,w,c
  3172  001E98  0B01               	andlw	1
  3173  001E9A  6FD0               	movwf	(?_PrintCO+1)^(__Lparam& (0+65280)),b
  3174  001E9C  C210  FFE8         	movff	_PFN+10,wreg
  3175  001EA0  ECC1  F024         	call	_PrintCO
  3176                           ;main.c: 834: if(PFN.PCW<PFN.minPCW||!PFN._timZA
      +                          S) ClrDig(1,0,1);
  3177  001EA4  EE12  F021         	lfsr	1,_PFN+27
  3178  001EA8  EE02  F027         	lfsr	0,_PFN+33
  3179  001EAC  52EE               	movf	postinc0,f,c
  3180  001EAE  52E6               	movf	postinc1,f,c
  3181  001EB0  50E5               	movf	postdec1,w,c
  3182  001EB2  5CED               	subwf	postdec0,w,c
  3183  001EB4  E102               	bnz	u3195
  3184  001EB6  50E7               	movf	indf1,w,c
  3185  001EB8  5CEF               	subwf	indf0,w,c
  3186  001EBA                     u3195:
  3187  001EBA  E303               	bnc	u3210
  3188  001EBC  0102               	movlb	(_PFN+7) shr (0+8)
  3189  001EBE  BF0D               	btfsc	(_PFN+7)& (0+255),7,b
  3190  001EC0  D007               	goto	l212
  3191  001EC2                     u3210:
  3192  001EC2  0100               	movlb	__Lparam shr (0+8)
  3193  001EC4  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  3194  001EC6  0E01               	movlw	1
  3195  001EC8  6FD0               	movwf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3196  001ECA  ECBA  F025         	call	_ClrDig
  3197  001ECE  D1C6               	goto	l192
  3198  001ED0                     l212:
  3199                           ;main.c: 835: else
  3200  001ED0  0102               	movlb	(_PFN+6) shr (0+8)
  3201  001ED2  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  3202  001ED4  D1C3               	goto	l192
  3203  001ED6  0E01               	movlw	1
  3204  001ED8  0100               	movlb	__Lparam shr (0+8)
  3205  001EDA  6FCF               	movwf	?_PrintCW^(__Lparam& (0+65280)),b
  3206  001EDC  C211  FFE8         	movff	_PFN+11,wreg
  3207  001EE0  EC2C  F024         	call	_PrintCW
  3208                           ;main.c: 838: }
  3209  001EE4  D1BB               	goto	l192
  3210  001EE6                     l211:
  3211                           ;main.c: 840: else
  3212  001EE6  0E01               	movlw	1
  3213  001EE8  0100               	movlb	__Lparam shr (0+8)
  3214  001EEA  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  3215  001EEC  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3216  001EEE  0E00               	movlw	0
  3217  001EF0  ECBA  F025         	call	_ClrDig
  3218                           ;main.c: 843: if(PFN.PCW<PFN.minPCW||!PFN._timZA
      +                          S) ClrDig(1,0,1);
  3219  001EF4  EE12  F021         	lfsr	1,_PFN+27
  3220  001EF8  EE02  F027         	lfsr	0,_PFN+33
  3221  001EFC  52EE               	movf	postinc0,f,c
  3222  001EFE  52E6               	movf	postinc1,f,c
  3223  001F00  50E5               	movf	postdec1,w,c
  3224  001F02  5CED               	subwf	postdec0,w,c
  3225  001F04  E102               	bnz	u3235
  3226  001F06  50E7               	movf	indf1,w,c
  3227  001F08  5CEF               	subwf	indf0,w,c
  3228  001F0A                     u3235:
  3229  001F0A  E303               	bnc	u3250
  3230  001F0C  0102               	movlb	(_PFN+7) shr (0+8)
  3231  001F0E  BF0D               	btfsc	(_PFN+7)& (0+255),7,b
  3232  001F10  D007               	goto	l216
  3233  001F12                     u3250:
  3234  001F12  0100               	movlb	__Lparam shr (0+8)
  3235  001F14  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  3236  001F16  0E01               	movlw	1
  3237  001F18  6FD0               	movwf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3238  001F1A  ECBA  F025         	call	_ClrDig
  3239  001F1E  D19E               	goto	l192
  3240  001F20                     l216:
  3241                           ;main.c: 844: else
  3242  001F20  0102               	movlb	(_PFN+6) shr (0+8)
  3243  001F22  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  3244  001F24  D19B               	goto	l192
  3245  001F26  0100               	movlb	__Lparam shr (0+8)
  3246  001F28  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  3247  001F2A  C211  FFE8         	movff	_PFN+11,wreg
  3248  001F2E  EC2C  F024         	call	_PrintCW
  3249                           ;main.c: 847: }
  3250  001F32  D194               	goto	l192
  3251  001F34                     l195:
  3252                           ;main.c: 852: else
  3253  001F34  0102               	movlb	(_PFN+4) shr (0+8)
  3254  001F36  AB0A               	btfss	(_PFN+4)& (0+255),5,b
  3255  001F38  D0DF               	goto	l220
  3256                           ;main.c: 855: {
  3257  001F3A  AD07               	btfss	(_PFN+1)& (0+255),6,b
  3258  001F3C  D053               	goto	l221
  3259                           ;main.c: 857: {
  3260  001F3E  AF07               	btfss	(_PFN+1)& (0+255),7,b
  3261  001F40  D039               	goto	l222
  3262                           ;main.c: 859: {
  3263  001F42  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  3264  001F44  D007               	goto	l223
  3265                           ;main.c: 861: {
  3266  001F46  0100               	movlb	__Lparam shr (0+8)
  3267  001F48  6BCF               	clrf	?_PrintCS^(__Lparam& (0+65280)),b
  3268  001F4A  C212  FFE8         	movff	_PFN+12,wreg
  3269  001F4E  ECFF  F023         	call	_PrintCS
  3270                           ;main.c: 863: }
  3271  001F52  D184               	goto	l192
  3272  001F54                     l223:
  3273                           ;main.c: 864: else
  3274  001F54  EE12  F021         	lfsr	1,_PFN+27
  3275  001F58  EE02  F027         	lfsr	0,_PFN+33
  3276  001F5C  52EE               	movf	postinc0,f,c
  3277  001F5E  52E6               	movf	postinc1,f,c
  3278  001F60  50E5               	movf	postdec1,w,c
  3279  001F62  5CED               	subwf	postdec0,w,c
  3280  001F64  E102               	bnz	u3315
  3281  001F66  50E7               	movf	indf1,w,c
  3282  001F68  5CEF               	subwf	indf0,w,c
  3283  001F6A                     u3315:
  3284  001F6A  E303               	bnc	u3330
  3285  001F6C  0102               	movlb	(_PFN+7) shr (0+8)
  3286  001F6E  BF0D               	btfsc	(_PFN+7)& (0+255),7,b
  3287  001F70  D008               	goto	l225
  3288  001F72                     u3330:
  3289  001F72  0E01               	movlw	1
  3290  001F74  0100               	movlb	__Lparam shr (0+8)
  3291  001F76  6FCF               	movwf	?_PrintCS^(__Lparam& (0+65280)),b
  3292  001F78  C212  FFE8         	movff	_PFN+12,wreg
  3293  001F7C  ECFF  F023         	call	_PrintCS
  3294  001F80  D16D               	goto	l192
  3295  001F82                     l225:
  3296                           ;main.c: 867: else
  3297  001F82  0102               	movlb	(_PFN+6) shr (0+8)
  3298  001F84  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  3299  001F86  D00F               	goto	l227
  3300                           ;main.c: 870: {
  3301  001F88  0E01               	movlw	1
  3302  001F8A  0100               	movlb	__Lparam shr (0+8)
  3303  001F8C  6FCF               	movwf	?_PrintCS^(__Lparam& (0+65280)),b
  3304  001F8E  C212  FFE8         	movff	_PFN+12,wreg
  3305  001F92  ECFF  F023         	call	_PrintCS
  3306                           ;main.c: 872: PrintCW(PFN.CW,1);
  3307  001F96  0E01               	movlw	1
  3308  001F98  0100               	movlb	__Lparam shr (0+8)
  3309  001F9A  6FCF               	movwf	?_PrintCW^(__Lparam& (0+65280)),b
  3310  001F9C  C211  FFE8         	movff	_PFN+11,wreg
  3311  001FA0  EC2C  F024         	call	_PrintCW
  3312                           ;main.c: 873: }
  3313  001FA4  D15B               	goto	l192
  3314  001FA6                     l227:
  3315                           ;main.c: 874: else PrintCS(PFN.CS,0);
  3316  001FA6  0100               	movlb	__Lparam shr (0+8)
  3317  001FA8  6BCF               	clrf	?_PrintCS^(__Lparam& (0+65280)),b
  3318  001FAA  C212  FFE8         	movff	_PFN+12,wreg
  3319  001FAE  ECFF  F023         	call	_PrintCS
  3320                           ;main.c: 875: }
  3321  001FB2  D154               	goto	l192
  3322  001FB4                     l222:
  3323                           ;main.c: 878: else
  3324  001FB4  0102               	movlb	(_PFN+2) shr (0+8)
  3325  001FB6  A108               	btfss	(_PFN+2)& (0+255),0,b
  3326  001FB8  D005               	goto	l230
  3327  001FBA  C213  FFE8         	movff	_PFN+13,wreg
  3328  001FBE  EC12  F025         	call	_PrintIN
  3329  001FC2  D14C               	goto	l192
  3330  001FC4                     l230:
  3331                           ;main.c: 880: else
  3332  001FC4  0102               	movlb	(_PFN+2) shr (0+8)
  3333  001FC6  A308               	btfss	(_PFN+2)& (0+255),1,b
  3334  001FC8  D005               	goto	l232
  3335  001FCA  C214  FFE8         	movff	_PFN+14,wreg
  3336  001FCE  EC47  F025         	call	_PrintPP
  3337  001FD2  D144               	goto	l192
  3338  001FD4                     l232:
  3339                           ;main.c: 882: else
  3340  001FD4  0102               	movlb	(_PFN+2) shr (0+8)
  3341  001FD6  A508               	btfss	(_PFN+2)& (0+255),2,b
  3342  001FD8  D141               	goto	l192
  3343  001FDA  C215  FFE8         	movff	_PFN+15,wreg
  3344  001FDE  EC80  F025         	call	_PrintPG
  3345                           ;main.c: 884: }
  3346  001FE2  D13C               	goto	l192
  3347  001FE4                     l221:
  3348                           ;main.c: 885: else
  3349  001FE4  0102               	movlb	(_PFN+6) shr (0+8)
  3350  001FE6  B50C               	btfsc	(_PFN+6)& (0+255),2,b
  3351  001FE8  D04E               	goto	l236
  3352                           ;main.c: 889: {
  3353  001FEA  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  3354  001FEC  D00E               	goto	l237
  3355                           ;main.c: 891: {
  3356  001FEE  0100               	movlb	__Lparam shr (0+8)
  3357  001FF0  6BCF               	clrf	?_PrintCO^(__Lparam& (0+65280)),b
  3358  001FF2  EE02  F00B         	lfsr	0,_PFN+5
  3359  001FF6  38EF               	swapf	indf0,w,c
  3360  001FF8  6E00               	movwf	btemp,c
  3361  001FFA  3000               	rrcf	btemp,w,c
  3362  001FFC  0B01               	andlw	1
  3363  001FFE  6FD0               	movwf	(?_PrintCO+1)^(__Lparam& (0+65280)),b
  3364  002000  C210  FFE8         	movff	_PFN+10,wreg
  3365  002004  ECC1  F024         	call	_PrintCO
  3366                           ;main.c: 893: }
  3367  002008  D045               	goto	l243
  3368  00200A                     l237:
  3369                           ;main.c: 894: else
  3370  00200A  EE12  F021         	lfsr	1,_PFN+27
  3371  00200E  EE02  F027         	lfsr	0,_PFN+33
  3372  002012  52EE               	movf	postinc0,f,c
  3373  002014  52E6               	movf	postinc1,f,c
  3374  002016  50E5               	movf	postdec1,w,c
  3375  002018  5CED               	subwf	postdec0,w,c
  3376  00201A  E102               	bnz	u3405
  3377  00201C  50E7               	movf	indf1,w,c
  3378  00201E  5CEF               	subwf	indf0,w,c
  3379  002020                     u3405:
  3380  002020  E303               	bnc	u3420
  3381  002022  0102               	movlb	(_PFN+7) shr (0+8)
  3382  002024  BF0D               	btfsc	(_PFN+7)& (0+255),7,b
  3383  002026  D00F               	goto	l239
  3384  002028                     u3420:
  3385  002028  0E01               	movlw	1
  3386  00202A  0100               	movlb	__Lparam shr (0+8)
  3387  00202C  6FCF               	movwf	?_PrintCO^(__Lparam& (0+65280)),b
  3388  00202E  EE02  F00B         	lfsr	0,_PFN+5
  3389  002032  38EF               	swapf	indf0,w,c
  3390  002034  6E00               	movwf	btemp,c
  3391  002036  3000               	rrcf	btemp,w,c
  3392  002038  0B01               	andlw	1
  3393  00203A  6FD0               	movwf	(?_PrintCO+1)^(__Lparam& (0+65280)),b
  3394  00203C  C210  FFE8         	movff	_PFN+10,wreg
  3395  002040  ECC1  F024         	call	_PrintCO
  3396  002044  D027               	goto	l243
  3397  002046                     l239:
  3398                           ;main.c: 897: else
  3399  002046  0102               	movlb	(_PFN+6) shr (0+8)
  3400  002048  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  3401  00204A  D00F               	goto	l241
  3402                           ;main.c: 900: {
  3403  00204C  0E01               	movlw	1
  3404  00204E  0100               	movlb	__Lparam shr (0+8)
  3405  002050  6FCF               	movwf	?_PrintCO^(__Lparam& (0+65280)),b
  3406  002052  EE02  F00B         	lfsr	0,_PFN+5
  3407  002056  38EF               	swapf	indf0,w,c
  3408  002058  6E00               	movwf	btemp,c
  3409  00205A  3000               	rrcf	btemp,w,c
  3410  00205C  0B01               	andlw	1
  3411  00205E  6FD0               	movwf	(?_PrintCO+1)^(__Lparam& (0+65280)),b
  3412  002060  C210  FFE8         	movff	_PFN+10,wreg
  3413  002064  ECC1  F024         	call	_PrintCO
  3414                           ;main.c: 902: }
  3415  002068  D015               	goto	l243
  3416  00206A                     l241:
  3417                           ;main.c: 903: else PrintCO(PFN.CO,0,PFN._fL3);
  3418  00206A  0100               	movlb	__Lparam shr (0+8)
  3419  00206C  6BCF               	clrf	?_PrintCO^(__Lparam& (0+65280)),b
  3420  00206E  EE02  F00B         	lfsr	0,_PFN+5
  3421  002072  38EF               	swapf	indf0,w,c
  3422  002074  6E00               	movwf	btemp,c
  3423  002076  3000               	rrcf	btemp,w,c
  3424  002078  0B01               	andlw	1
  3425  00207A  6FD0               	movwf	(?_PrintCO+1)^(__Lparam& (0+65280)),b
  3426  00207C  C210  FFE8         	movff	_PFN+10,wreg
  3427  002080  ECC1  F024         	call	_PrintCO
  3428                           ;main.c: 904: }
  3429  002084  D007               	goto	l243
  3430  002086                     l236:
  3431                           ;main.c: 907: else ClrDig(0,1,0);
  3432  002086  0E01               	movlw	1
  3433  002088  0100               	movlb	__Lparam shr (0+8)
  3434  00208A  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  3435  00208C  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3436  00208E  0E00               	movlw	0
  3437  002090  ECBA  F025         	call	_ClrDig
  3438  002094                     l243:
  3439                           ;main.c: 909: if(!PFN._EnAleg)
  3440  002094  0102               	movlb	(_PFN+4) shr (0+8)
  3441  002096  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  3442  002098  D007               	goto	l244
  3443                           ;main.c: 910: {
  3444  00209A  0100               	movlb	__Lparam shr (0+8)
  3445  00209C  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  3446  00209E  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3447  0020A0  0E01               	movlw	1
  3448  0020A2  ECBA  F025         	call	_ClrDig
  3449                           ;main.c: 912: }
  3450  0020A6  D0DA               	goto	l192
  3451  0020A8                     l244:
  3452                           ;main.c: 913: else
  3453  0020A8  EE12  F021         	lfsr	1,_PFN+27
  3454  0020AC  EE02  F027         	lfsr	0,_PFN+33
  3455  0020B0  52EE               	movf	postinc0,f,c
  3456  0020B2  52E6               	movf	postinc1,f,c
  3457  0020B4  50E5               	movf	postdec1,w,c
  3458  0020B6  5CED               	subwf	postdec0,w,c
  3459  0020B8  E102               	bnz	u3455
  3460  0020BA  50E7               	movf	indf1,w,c
  3461  0020BC  5CEF               	subwf	indf0,w,c
  3462  0020BE                     u3455:
  3463  0020BE  E303               	bnc	u3470
  3464  0020C0  0102               	movlb	(_PFN+7) shr (0+8)
  3465  0020C2  BF0D               	btfsc	(_PFN+7)& (0+255),7,b
  3466  0020C4  D007               	goto	l246
  3467  0020C6                     u3470:
  3468  0020C6  0100               	movlb	__Lparam shr (0+8)
  3469  0020C8  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  3470  0020CA  0E01               	movlw	1
  3471  0020CC  6FD0               	movwf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3472  0020CE  ECBA  F025         	call	_ClrDig
  3473  0020D2  D0C4               	goto	l192
  3474  0020D4                     l246:
  3475                           ;main.c: 916: else
  3476  0020D4  0102               	movlb	(_PFN+6) shr (0+8)
  3477  0020D6  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  3478  0020D8  D008               	goto	l248
  3479  0020DA  0E01               	movlw	1
  3480  0020DC  0100               	movlb	__Lparam shr (0+8)
  3481  0020DE  6FCF               	movwf	?_PrintCW^(__Lparam& (0+65280)),b
  3482  0020E0  C211  FFE8         	movff	_PFN+11,wreg
  3483  0020E4  EC2C  F024         	call	_PrintCW
  3484  0020E8  D0B9               	goto	l192
  3485  0020EA                     l248:
  3486                           ;main.c: 919: else ClrDig(1,0,0);
  3487  0020EA  0100               	movlb	__Lparam shr (0+8)
  3488  0020EC  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  3489  0020EE  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3490  0020F0  0E01               	movlw	1
  3491  0020F2  ECBA  F025         	call	_ClrDig
  3492                           ;main.c: 920: }
  3493  0020F6  D0B2               	goto	l192
  3494  0020F8                     l220:
  3495                           ;main.c: 924: else
  3496  0020F8  0102               	movlb	(_PFN+1) shr (0+8)
  3497  0020FA  AD07               	btfss	(_PFN+1)& (0+255),6,b
  3498  0020FC  D01B               	goto	l251
  3499                           ;main.c: 927: {
  3500  0020FE  AF07               	btfss	(_PFN+1)& (0+255),7,b
  3501  002100  D0AD               	goto	l192
  3502                           ;main.c: 929: {
  3503  002102  0E01               	movlw	1
  3504  002104  0100               	movlb	__Lparam shr (0+8)
  3505  002106  6FCF               	movwf	?_PrintCS^(__Lparam& (0+65280)),b
  3506  002108  C212  FFE8         	movff	_PFN+12,wreg
  3507  00210C  ECFF  F023         	call	_PrintCS
  3508                           ;main.c: 931: if(!PFN._errCW)
  3509  002110  0102               	movlb	(_PFN+6) shr (0+8)
  3510  002112  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  3511  002114  D008               	goto	l253
  3512                           ;main.c: 932: {
  3513  002116  0E01               	movlw	1
  3514  002118  0100               	movlb	__Lparam shr (0+8)
  3515  00211A  6FCF               	movwf	?_PrintCW^(__Lparam& (0+65280)),b
  3516  00211C  C211  FFE8         	movff	_PFN+11,wreg
  3517  002120  EC2C  F024         	call	_PrintCW
  3518                           ;main.c: 934: }
  3519  002124  D09B               	goto	l192
  3520  002126                     l253:
  3521                           ;main.c: 935: else ClrDig(1,0,0);
  3522  002126  0100               	movlb	__Lparam shr (0+8)
  3523  002128  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  3524  00212A  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3525  00212C  0E01               	movlw	1
  3526  00212E  ECBA  F025         	call	_ClrDig
  3527                           ;main.c: 936: }
  3528  002132  D094               	goto	l192
  3529  002134                     l251:
  3530                           ;main.c: 938: else
  3531  002134  0102               	movlb	(_PFN+6) shr (0+8)
  3532  002136  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  3533  002138  D091               	goto	l192
  3534  00213A  0100               	movlb	__Lparam shr (0+8)
  3535  00213C  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  3536  00213E  C211  FFE8         	movff	_PFN+11,wreg
  3537  002142  EC2C  F024         	call	_PrintCW
  3538                           ;main.c: 941: }
  3539  002146  D08A               	goto	l192
  3540  002148                     l194:
  3541                           ;main.c: 945: else
  3542  002148  0102               	movlb	(_PFN+4) shr (0+8)
  3543  00214A  B70A               	btfsc	(_PFN+4)& (0+255),3,b
  3544  00214C  D002               	goto	u3550
  3545  00214E  A907               	btfss	(_PFN+1)& (0+255),4,b
  3546  002150  D01C               	goto	l258
  3547  002152                     u3550:
  3548                           ;main.c: 948: {
  3549  002152  0E01               	movlw	1
  3550  002154  ECF4  F03D         	call	_SetLightLLed
  3551                           ;main.c: 950: if(!PFN._errCO) PrintCO(PFN.CO,1,P
      +                          FN._fL3);
  3552  002158  0102               	movlb	(_PFN+6) shr (0+8)
  3553  00215A  B50C               	btfsc	(_PFN+6)& (0+255),2,b
  3554  00215C  D00E               	goto	l259
  3555  00215E  0E01               	movlw	1
  3556  002160  0100               	movlb	__Lparam shr (0+8)
  3557  002162  6FCF               	movwf	?_PrintCO^(__Lparam& (0+65280)),b
  3558  002164  EE02  F00B         	lfsr	0,_PFN+5
  3559  002168  38EF               	swapf	indf0,w,c
  3560  00216A  6E00               	movwf	btemp,c
  3561  00216C  3000               	rrcf	btemp,w,c
  3562  00216E  0B01               	andlw	1
  3563  002170  6FD0               	movwf	(?_PrintCO+1)^(__Lparam& (0+65280)),b
  3564  002172  C210  FFE8         	movff	_PFN+10,wreg
  3565  002176  ECC1  F024         	call	_PrintCO
  3566  00217A                     l259:
  3567                           ;main.c: 951: PrintVNT(PFN.VNT,1);
  3568  00217A  0E01               	movlw	1
  3569  00217C  0100               	movlb	__Lparam shr (0+8)
  3570  00217E  6FCF               	movwf	?_PrintVNT^(__Lparam& (0+65280)),b
  3571  002180  C216  FFE8         	movff	_PFN+16,wreg
  3572  002184  EC95  F024         	call	_PrintVNT
  3573                           ;main.c: 952: }
  3574  002188  D069               	goto	l192
  3575  00218A                     l258:
  3576                           ;main.c: 953: else
  3577  00218A  0102               	movlb	(_PFN+4) shr (0+8)
  3578  00218C  B10A               	btfsc	(_PFN+4)& (0+255),0,b
  3579  00218E  D023               	goto	l261
  3580                           ;main.c: 956: {
  3581  002190  A70C               	btfss	(_PFN+6)& (0+255),3,b
  3582  002192  AD0A               	btfss	(_PFN+4)& (0+255),6,b
  3583  002194  D007               	goto	l262
  3584  002196  0100               	movlb	__Lparam shr (0+8)
  3585  002198  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  3586  00219A  C211  FFE8         	movff	_PFN+11,wreg
  3587  00219E  EC2C  F024         	call	_PrintCW
  3588  0021A2  D011               	goto	l263
  3589  0021A4                     l262:
  3590                           ;main.c: 958: else
  3591  0021A4  0102               	movlb	(_PFN+6) shr (0+8)
  3592  0021A6  A70C               	btfss	(_PFN+6)& (0+255),3,b
  3593  0021A8  AB07               	btfss	(_PFN+1)& (0+255),5,b
  3594  0021AA  D007               	goto	l264
  3595  0021AC  0100               	movlb	__Lparam shr (0+8)
  3596  0021AE  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  3597  0021B0  C211  FFE8         	movff	_PFN+11,wreg
  3598  0021B4  EC2C  F024         	call	_PrintCW
  3599  0021B8  D006               	goto	l263
  3600  0021BA                     l264:
  3601                           ;main.c: 960: else ClrDig(1,0,0);
  3602  0021BA  0100               	movlb	__Lparam shr (0+8)
  3603  0021BC  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  3604  0021BE  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3605  0021C0  0E01               	movlw	1
  3606  0021C2  ECBA  F025         	call	_ClrDig
  3607  0021C6                     l263:
  3608                           ;main.c: 961: ClrDig(0,1,0);
  3609  0021C6  0E01               	movlw	1
  3610  0021C8  0100               	movlb	__Lparam shr (0+8)
  3611  0021CA  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  3612  0021CC  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3613  0021CE  0E00               	movlw	0
  3614  0021D0  ECBA  F025         	call	_ClrDig
  3615                           ;main.c: 962: }
  3616  0021D4  D043               	goto	l192
  3617  0021D6                     l261:
  3618                           ;main.c: 963: else
  3619  0021D6  0102               	movlb	(_PFN+6) shr (0+8)
  3620  0021D8  A70C               	btfss	(_PFN+6)& (0+255),3,b
  3621  0021DA  AD0A               	btfss	(_PFN+4)& (0+255),6,b
  3622  0021DC  D007               	goto	l267
  3623  0021DE  0100               	movlb	__Lparam shr (0+8)
  3624  0021E0  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  3625  0021E2  C211  FFE8         	movff	_PFN+11,wreg
  3626  0021E6  EC2C  F024         	call	_PrintCW
  3627  0021EA  D031               	goto	l268
  3628  0021EC                     l267:
  3629                           ;main.c: 966: else
  3630  0021EC  0102               	movlb	(_PFN+6) shr (0+8)
  3631  0021EE  A70C               	btfss	(_PFN+6)& (0+255),3,b
  3632  0021F0  AB07               	btfss	(_PFN+1)& (0+255),5,b
  3633  0021F2  D007               	goto	l269
  3634  0021F4  0100               	movlb	__Lparam shr (0+8)
  3635  0021F6  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  3636  0021F8  C211  FFE8         	movff	_PFN+11,wreg
  3637  0021FC  EC2C  F024         	call	_PrintCW
  3638  002200  D026               	goto	l268
  3639  002202                     l269:
  3640                           ;main.c: 968: else
  3641  002202  EE12  F021         	lfsr	1,_PFN+27
  3642  002206  EE02  F027         	lfsr	0,_PFN+33
  3643  00220A  52EE               	movf	postinc0,f,c
  3644  00220C  52E6               	movf	postinc1,f,c
  3645  00220E  50E5               	movf	postdec1,w,c
  3646  002210  5CED               	subwf	postdec0,w,c
  3647  002212  E102               	bnz	u3705
  3648  002214  50E7               	movf	indf1,w,c
  3649  002216  5CEF               	subwf	indf0,w,c
  3650  002218                     u3705:
  3651  002218  E303               	bnc	u3720
  3652  00221A  0102               	movlb	(_PFN+7) shr (0+8)
  3653  00221C  BF0D               	btfsc	(_PFN+7)& (0+255),7,b
  3654  00221E  D007               	goto	l271
  3655  002220                     u3720:
  3656  002220  0100               	movlb	__Lparam shr (0+8)
  3657  002222  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  3658  002224  0E01               	movlw	1
  3659  002226  6FD0               	movwf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3660  002228  ECBA  F025         	call	_ClrDig
  3661  00222C  D010               	goto	l268
  3662  00222E                     l271:
  3663                           ;main.c: 970: else
  3664  00222E  0102               	movlb	(_PFN+6) shr (0+8)
  3665  002230  B70C               	btfsc	(_PFN+6)& (0+255),3,b
  3666  002232  D007               	goto	l273
  3667  002234  0100               	movlb	__Lparam shr (0+8)
  3668  002236  6BCF               	clrf	?_PrintCW^(__Lparam& (0+65280)),b
  3669  002238  C211  FFE8         	movff	_PFN+11,wreg
  3670  00223C  EC2C  F024         	call	_PrintCW
  3671  002240  D006               	goto	l268
  3672  002242                     l273:
  3673                           ;main.c: 973: else ClrDig(1,0,0);
  3674  002242  0100               	movlb	__Lparam shr (0+8)
  3675  002244  6BCF               	clrf	?_ClrDig^(__Lparam& (0+65280)),b
  3676  002246  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3677  002248  0E01               	movlw	1
  3678  00224A  ECBA  F025         	call	_ClrDig
  3679  00224E                     l268:
  3680                           ;main.c: 974: }
  3681  00224E  0E01               	movlw	1
  3682  002250  0100               	movlb	__Lparam shr (0+8)
  3683  002252  6FCF               	movwf	?_ClrDig^(__Lparam& (0+65280)),b
  3684  002254  6BD0               	clrf	(?_ClrDig+1)^(__Lparam& (0+65280)),b
  3685  002256  0E00               	movlw	0
  3686  002258  ECBA  F025         	call	_ClrDig
  3687  00225C                     l192:
  3688                           ;main.c: 976: }
  3689  00225C  0E01               	movlw	1
  3690  00225E  EC26  F00A         	call	_NastawaCOCW
  3691  002262                     l128:
  3692                           ;main.c: 984: }
  3693  002262  EE02  F00A         	lfsr	0,_PFN+4
  3694  002266  30EF               	rrcf	indf0,w,c
  3695  002268  6E00               	movwf	btemp,c
  3696  00226A  3000               	rrcf	btemp,w,c
  3697  00226C  0B01               	andlw	1
  3698  00226E  0100               	movlb	__Lparam shr (0+8)
  3699  002270  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  3700  002272  0E09               	movlw	9
  3701  002274  ECDB  F023         	call	_Mark
  3702                           ;main.c: 988: Mark(8,PFN._plmCO);
  3703  002278  EE02  F00A         	lfsr	0,_PFN+4
  3704  00227C  30EF               	rrcf	indf0,w,c
  3705  00227E  0B01               	andlw	1
  3706  002280  0100               	movlb	__Lparam shr (0+8)
  3707  002282  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  3708  002284  0E08               	movlw	8
  3709  002286  ECDB  F023         	call	_Mark
  3710                           ;main.c: 989: Mark(7,PFN._pgd&&!PFN._oflato&&!PF
      +                          N._ofoff&&!PFN._opKNF);
  3711  00228A  0102               	movlb	(_PFN+5) shr (0+8)
  3712  00228C  BD0B               	btfsc	(_PFN+5)& (0+255),6,b
  3713  00228E  BD0C               	btfsc	(_PFN+6)& (0+255),6,b
  3714  002290  D008               	goto	u3800
  3715  002292  0102               	movlb	(_PFN+6) shr (0+8)
  3716  002294  BF0C               	btfsc	(_PFN+6)& (0+255),7,b
  3717  002296  D005               	goto	u3800
  3718  002298  0102               	movlb	(_PFN+4) shr (0+8)
  3719  00229A  BF0A               	btfsc	(_PFN+4)& (0+255),7,b
  3720  00229C  D002               	goto	u3800
  3721  00229E  0E01               	movlw	1
  3722  0022A0  D001               	goto	u3810
  3723  0022A2                     u3800:
  3724  0022A2  0E00               	movlw	0
  3725  0022A4                     u3810:
  3726  0022A4  0100               	movlb	__Lparam shr (0+8)
  3727  0022A6  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  3728  0022A8  0E07               	movlw	7
  3729  0022AA  ECDB  F023         	call	_Mark
  3730                           ;main.c: 990: Mark(0,PFN._ofzima&&!PFN._ofoff&&!
      +                          PFN._opKNF);
  3731  0022AE  0102               	movlb	(_PFN+6) shr (0+8)
  3732  0022B0  BB0C               	btfsc	(_PFN+6)& (0+255),5,b
  3733  0022B2  BF0C               	btfsc	(_PFN+6)& (0+255),7,b
  3734  0022B4  D005               	goto	u3860
  3735  0022B6  0102               	movlb	(_PFN+4) shr (0+8)
  3736  0022B8  BF0A               	btfsc	(_PFN+4)& (0+255),7,b
  3737  0022BA  D002               	goto	u3860
  3738  0022BC  0E01               	movlw	1
  3739  0022BE  D001               	goto	u3870
  3740  0022C0                     u3860:
  3741  0022C0  0E00               	movlw	0
  3742  0022C2                     u3870:
  3743  0022C2  0100               	movlb	__Lparam shr (0+8)
  3744  0022C4  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  3745  0022C6  0E00               	movlw	0
  3746  0022C8  ECDB  F023         	call	_Mark
  3747                           ;main.c: 991: Mark(1,(PFN._ofzima||PFN._oflato)&
      +                          &!PFN._ofoff&&!PFN._opKNF);
  3748  0022CC  0102               	movlb	(_PFN+6) shr (0+8)
  3749  0022CE  AB0C               	btfss	(_PFN+6)& (0+255),5,b
  3750  0022D0  BD0C               	btfsc	(_PFN+6)& (0+255),6,b
  3751  0022D2  D001               	goto	u3901
  3752  0022D4  D008               	goto	u3940
  3753  0022D6                     u3901:
  3754  0022D6  0102               	movlb	(_PFN+6) shr (0+8)
  3755  0022D8  BF0C               	btfsc	(_PFN+6)& (0+255),7,b
  3756  0022DA  D005               	goto	u3940
  3757  0022DC  0102               	movlb	(_PFN+4) shr (0+8)
  3758  0022DE  BF0A               	btfsc	(_PFN+4)& (0+255),7,b
  3759  0022E0  D002               	goto	u3940
  3760  0022E2  0E01               	movlw	1
  3761  0022E4  D001               	goto	u3950
  3762  0022E6                     u3940:
  3763  0022E6  0E00               	movlw	0
  3764  0022E8                     u3950:
  3765  0022E8  0100               	movlb	__Lparam shr (0+8)
  3766  0022EA  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  3767  0022EC  0E01               	movlw	1
  3768  0022EE  ECDB  F023         	call	_Mark
  3769                           ;main.c: 992: Mark(10,PFN._ofoff&&!PFN._opKNF);
  3770  0022F2  0102               	movlb	(_PFN+6) shr (0+8)
  3771  0022F4  BF0C               	btfsc	(_PFN+6)& (0+255),7,b
  3772  0022F6  BF0A               	btfsc	(_PFN+4)& (0+255),7,b
  3773  0022F8  D002               	goto	u3980
  3774  0022FA  0E01               	movlw	1
  3775  0022FC  D001               	goto	u3990
  3776  0022FE                     u3980:
  3777  0022FE  0E00               	movlw	0
  3778  002300                     u3990:
  3779  002300  0100               	movlb	__Lparam shr (0+8)
  3780  002302  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  3781  002304  0E0A               	movlw	10
  3782  002306  ECDB  F023         	call	_Mark
  3783                           ;main.c: 993: if(PFN._set_fnserw||PFN._set_aleg)
  3784  00230A  0102               	movlb	(_PFN+1) shr (0+8)
  3785  00230C  B907               	btfsc	(_PFN+1)& (0+255),4,b
  3786  00230E  D002               	goto	u4020
  3787  002310  AB07               	btfss	(_PFN+1)& (0+255),5,b
  3788  002312  D006               	goto	l275
  3789  002314                     u4020:
  3790                           ;main.c: 994: Mark(2,2);
  3791  002314  0E02               	movlw	2
  3792  002316  0100               	movlb	__Lparam shr (0+8)
  3793  002318  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  3794  00231A  ECDB  F023         	call	_Mark
  3795  00231E  D011               	goto	l276
  3796  002320                     l275:
  3797                           ;main.c: 995: else
  3798  002320  0102               	movlb	(_PFN+4) shr (0+8)
  3799  002322  B90A               	btfsc	(_PFN+4)& (0+255),4,b
  3800  002324  D002               	goto	u4050
  3801  002326  A70A               	btfss	(_PFN+4)& (0+255),3,b
  3802  002328  D007               	goto	l277
  3803  00232A                     u4050:
  3804                           ;main.c: 997: Mark(2,1);
  3805  00232A  0E01               	movlw	1
  3806  00232C  0100               	movlb	__Lparam shr (0+8)
  3807  00232E  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  3808  002330  0E02               	movlw	2
  3809  002332  ECDB  F023         	call	_Mark
  3810  002336  D005               	goto	l276
  3811  002338                     l277:
  3812                           ;main.c: 998: else
  3813  002338  0100               	movlb	__Lparam shr (0+8)
  3814  00233A  6BDD               	clrf	?_Mark^(__Lparam& (0+65280)),b
  3815  00233C  0E02               	movlw	2
  3816  00233E  ECDB  F023         	call	_Mark
  3817  002342                     l276:
  3818                           ;main.c: 1001: if(!PFN._opKNF&&!PFN._ferr&&!PFN.
      +                          _fmsg&&!PFN._set_ncw&&!PFN._set_nco&&!PFN._set_e
      +                          co)
  3819  002342  0102               	movlb	(_PFN+4) shr (0+8)
  3820  002344  AF0A               	btfss	(_PFN+4)& (0+255),7,b
  3821  002346  B90B               	btfsc	(_PFN+5)& (0+255),4,b
  3822  002348  0012               	return	
  3823  00234A  0102               	movlb	(_PFN+5) shr (0+8)
  3824  00234C  B70B               	btfsc	(_PFN+5)& (0+255),3,b
  3825  00234E  0012               	return	
  3826  002350  0102               	movlb	(_PFN+1) shr (0+8)
  3827  002352  B107               	btfsc	(_PFN+1)& (0+255),0,b
  3828  002354  0012               	return	
  3829  002356  0102               	movlb	_PFN shr (0+8)
  3830  002358  BF06               	btfsc	_PFN& (0+255),7,b
  3831  00235A  0012               	return	
  3832  00235C  0102               	movlb	(_PFN+2) shr (0+8)
  3833  00235E  B708               	btfsc	(_PFN+2)& (0+255),3,b
  3834  002360  0012               	return	
  3835                           ;main.c: 1002: {
  3836  002362  0102               	movlb	(_PFN+4) shr (0+8)
  3837  002364  A70A               	btfss	(_PFN+4)& (0+255),3,b
  3838  002366  B907               	btfsc	(_PFN+1)& (0+255),4,b
  3839  002368  D006               	goto	u4230
  3840  00236A  B90A               	btfsc	(_PFN+4)& (0+255),4,b
  3841  00236C  D004               	goto	u4230
  3842  00236E  0102               	movlb	(_PFN+1) shr (0+8)
  3843  002370  AB07               	btfss	(_PFN+1)& (0+255),5,b
  3844  002372  EFEE  F023         	goto	_ClrMarkMinMax
  3845  002376                     u4230:
  3846                           ;main.c: 1004: {
  3847  002376  0102               	movlb	(_PFN+4) shr (0+8)
  3848  002378  B90A               	btfsc	(_PFN+4)& (0+255),4,b
  3849  00237A  D002               	goto	u4260
  3850  00237C  AB07               	btfss	(_PFN+1)& (0+255),5,b
  3851  00237E  D018               	goto	l281
  3852  002380                     u4260:
  3853                           ;main.c: 1006: {
  3854  002380  0100               	movlb	__Lparam shr (0+8)
  3855  002382  6BDD               	clrf	?_Mark^(__Lparam& (0+65280)),b
  3856  002384  0E0C               	movlw	12
  3857  002386  ECDB  F023         	call	_Mark
  3858                           ;main.c: 1008: Mark(11,PFN._oaleg||PFN._set_aleg
      +                          );
  3859  00238A  0102               	movlb	(_PFN+4) shr (0+8)
  3860  00238C  A90A               	btfss	(_PFN+4)& (0+255),4,b
  3861  00238E  BB07               	btfsc	(_PFN+1)& (0+255),5,b
  3862  002390  D001               	goto	u4291
  3863  002392  D002               	goto	u4290
  3864  002394                     u4291:
  3865  002394  0E01               	movlw	1
  3866  002396  D001               	goto	u4300
  3867  002398                     u4290:
  3868  002398  0E00               	movlw	0
  3869  00239A                     u4300:
  3870  00239A  0100               	movlb	__Lparam shr (0+8)
  3871  00239C  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  3872  00239E  0E0B               	movlw	11
  3873  0023A0  ECDB  F023         	call	_Mark
  3874                           ;main.c: 1009: Mark(13,0);
  3875  0023A4  0100               	movlb	__Lparam shr (0+8)
  3876  0023A6  6BDD               	clrf	?_Mark^(__Lparam& (0+65280)),b
  3877  0023A8  0E0D               	movlw	13
  3878  0023AA  ECDB  F023         	call	_Mark
  3879  0023AE  D025               	goto	L3
  3880                           ;main.c: 1010: Mark(14,0);
  3881                           ;main.c: 1011: }
  3882  0023B0                     l281:
  3883                           ;main.c: 1012: else
  3884  0023B0  0102               	movlb	(_PFN+4) shr (0+8)
  3885  0023B2  A70A               	btfss	(_PFN+4)& (0+255),3,b
  3886  0023B4  B907               	btfsc	(_PFN+1)& (0+255),4,b
  3887  0023B6  D001               	goto	u4331
  3888  0023B8  D005               	goto	u4350
  3889  0023BA                     u4331:
  3890  0023BA  0102               	movlb	(_PFN+2) shr (0+8)
  3891  0023BC  BF08               	btfsc	(_PFN+2)& (0+255),7,b
  3892  0023BE  D002               	goto	u4350
  3893  0023C0  0E01               	movlw	1
  3894  0023C2  D001               	goto	u4360
  3895  0023C4                     u4350:
  3896  0023C4  0E00               	movlw	0
  3897  0023C6                     u4360:
  3898  0023C6  0100               	movlb	__Lparam shr (0+8)
  3899  0023C8  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  3900  0023CA  0E0C               	movlw	12
  3901  0023CC  ECDB  F023         	call	_Mark
  3902                           ;main.c: 1015: Mark(11,(PFN._ofnserw||PFN._set_f
      +                          nserw)&&PFN._fns_max);
  3903  0023D0  0102               	movlb	(_PFN+4) shr (0+8)
  3904  0023D2  A70A               	btfss	(_PFN+4)& (0+255),3,b
  3905  0023D4  B907               	btfsc	(_PFN+1)& (0+255),4,b
  3906  0023D6  D001               	goto	u4391
  3907  0023D8  D005               	goto	u4410
  3908  0023DA                     u4391:
  3909  0023DA  0102               	movlb	(_PFN+2) shr (0+8)
  3910  0023DC  AF08               	btfss	(_PFN+2)& (0+255),7,b
  3911  0023DE  D002               	goto	u4410
  3912  0023E0  0E01               	movlw	1
  3913  0023E2  D001               	goto	u4420
  3914  0023E4                     u4410:
  3915  0023E4  0E00               	movlw	0
  3916  0023E6                     u4420:
  3917  0023E6  0100               	movlb	__Lparam shr (0+8)
  3918  0023E8  6FDD               	movwf	?_Mark^(__Lparam& (0+65280)),b
  3919  0023EA  0E0B               	movlw	11
  3920  0023EC  ECDB  F023         	call	_Mark
  3921                           ;main.c: 1016: Mark(13,0);
  3922  0023F0  0100               	movlb	__Lparam shr (0+8)
  3923  0023F2  6BDD               	clrf	?_Mark^(__Lparam& (0+65280)),b
  3924  0023F4  0E0D               	movlw	13
  3925  0023F6  ECDB  F023         	call	_Mark
  3926  0023FA                     L3:
  3927                           ;main.c: 1017: Mark(14,0);
  3928  0023FA  0100               	movlb	__Lparam shr (0+8)
  3929  0023FC  6BDD               	clrf	?_Mark^(__Lparam& (0+65280)),b
  3930  0023FE  0E0E               	movlw	14
  3931  002400  EFDB  F023         	goto	_Mark
  3932                           ;main.c: 1018: }
  3933                           ;main.c: 1020: else
  3934                           ;main.c: 1023: }
  3935  002404                     __end_of_DecWsw:
  3936                           ;main.c: 1241: void DecRes(void)
  3937                           ;main.c: 1242: {
  3938  002404                     _DecRes:
  3939  000000                     
  3940                           ;main.c: 1243: switch(PFN.KRS)
  3941  002404  D011               	goto	l286
  3942  002406                     l287:
  3943                           ;main.c: 1244: {
  3944                           ;main.c: 1246: {
  3945  002406  0102               	movlb	(_PFN+5) shr (0+8)
  3946  002408  BF0B               	btfsc	(_PFN+5)& (0+255),7,b
  3947  00240A  A90B               	btfss	(_PFN+5)& (0+255),4,b
  3948  00240C  0012               	return	
  3949                           ;main.c: 1248: {
  3950  00240E  0E01               	movlw	1
  3951  002410  CFE8 F22B          	movff	wreg,_PFN+37
  3952                           ;main.c: 1250: }
  3953  002414  0C01               	retlw	1
  3954  002416                     l289:
  3955                           ;main.c: 1252: }
  3956                           ;main.c: 1254: {
  3957  002416  0102               	movlb	(_PFN+5) shr (0+8)
  3958  002418  AF0B               	btfss	(_PFN+5)& (0+255),7,b
  3959  00241A  D002               	goto	u4480
  3960  00241C  B90B               	btfsc	(_PFN+5)& (0+255),4,b
  3961  00241E  0012               	return	
  3962  002420                     u4480:
  3963                           ;main.c: 1256: {
  3964  002420  0102               	movlb	(_PFN+3) shr (0+8)
  3965  002422  8B09               	bsf	(_PFN+3)& (0+255),5,b
  3966                           ;main.c: 1258: PFN.KRS=0;
  3967  002424  6B2B               	clrf	(_PFN+37)& (0+255),b
  3968                           ;main.c: 1259: }
  3969  002426  0012               	return	
  3970  002428                     l286:
  3971  002428  C22B  FFE8         	movff	_PFN+37,wreg
  3972  00242C  0A00               	xorlw	0
  3973  00242E  E0EB               	bz	l287
  3974  002430  0A01               	xorlw	1
  3975  002432  E0F1               	bz	l289
  3976  002434  0012               	return	
  3977                           ;main.c: 1262: }
  3978  002436                     __end_of_DecRes:
  3979                           ;main.c: 1265: void InitGlobal(void)
  3980                           ;main.c: 1266: {
  3981  002436                     _InitGlobal:
  3982  000000                     
  3983                           ;main.c: 1268: IPEN=1;
  3984  002436  8ED0               	bsf	4048,7,c
  3985                           ;main.c: 1270: GIEH=1;
  3986  002438  8EF2               	bsf	intcon,7,c
  3987                           ;main.c: 1271: GIEL=1;
  3988  00243A  8CF2               	bsf	intcon,6,c
  3989                           ;main.c: 1272: }
  3990  00243C  0012               	return	
  3991  00243E                     __end_of_InitGlobal:
  3992  000000                     
  3993  000000                     
  3994  000000                     
  3995  000000                     
  3996  000000                     
  3997  000000                     
  3998  000000                     
  3999  000000                     
  4000  000000                     
  4001  000000                     
  4002  000000                     
  4003  000000                     
  4004  000000                     
  4005  000000                     
  4006  000000                     
  4007  000000                     
  4008  000000                     
  4009  000000                     
  4010  000000                     
  4011  000000                     
  4012  000000                     
  4013  000000                     
  4014  000000                     
  4015  000000                     
  4016  000000                     
  4017  000000                     
  4018  000000                     
  4019  000000                     
  4020  000000                     
  4021  000000                     
  4022  000000                     
  4023  000000                     
  4024  000000                     
  4025  000000                     
  4026  000000                     
  4027  000000                     
  4028  000000                     
  4029  000000                     
  4030  000000                     
  4031  000000                     
  4032  000000                     
  4033  000000                     
  4034  000000                     
  4035  000000                     
  4036  000000                     
  4037  000000                     
  4038  000000                     
  4039  000000                     
  4040  000000                     
  4041  000000                     
  4042  000000                     
  4043  000000                     
  4044  000000                     
  4045  000000                     
  4046  000000                     
  4047  000000                     
  4048  000000                     
  4049  000000                     
  4050  000000                     
  4051  000000                     
  4052  000000                     
  4053  000000                     
  4054  000000                     
  4055  000000                     
  4056  000000                     
  4057  000000                     
  4058  000000                     
  4059  000000                     
  4060  000000                     
  4061  000000                     
  4062  000000                     
  4063  000000                     
  4064  000000                     
  4065  000000                     
  4066  000000                     
  4067  000000                     
  4068  000000                     
  4069  000000                     
  4070  000000                     
  4071  000000                     
  4072  000000                     
  4073  000000                     
  4074  000000                     
  4075  000000                     
  4076  000000                     
  4077  000000                     
  4078  000000                     
  4079  000000                     
  4080  000000                     
  4081  000000                     
  4082  000000                     
  4083  000000                     
  4084  000000                     
  4085  000000                     
  4086  000000                     
  4087  000000                     
  4088  000000                     
  4089  000000                     
  4090  000000                     
  4091  000000                     
  4092  000000                     
  4093  000000                     
  4094  000000                     
  4095  000000                     
  4096  000000                     
  4097  000000                     
  4098  000000                     
  4099  000000                     
  4100  000000                     
  4101  000000                     
  4102  000000                     
  4103  000000                     
  4104  000000                     
  4105  000000                     
  4106  000000                     
  4107  000000                     
  4108  000000                     
  4109  000000                     
  4110  000000                     
  4111  000000                     
  4112  000000                     
  4113  000000                     
  4114  000000                     
  4115  000000                     
  4116  000000                     
  4117  000000                     
  4118  000000                     
  4119  000000                     
  4120  000000                     
  4121  000000                     
  4122  000000                     
  4123  000000                     
  4124  000000                     
  4125  000000                     
  4126  000000                     
  4127  000000                     
  4128  000000                     
  4129  000000                     
  4130  000000                     
  4131  000000                     
  4132  000000                     
  4133  000000                     
  4134  000000                     
  4135  000000                     
  4136  000000                     
  4137  000000                     
  4138  000000                     
  4139  000000                     
  4140  000000                     
  4141  000000                     
  4142  000000                     
  4143  000000                     
  4144  000000                     
  4145  000000                     
  4146  000000                     
  4147  000000                     
  4148  000000                     
  4149  000000                     
  4150  000000                     
  4151  000000                     
  4152  000000                     
  4153  000000                     
  4154  000000                     
  4155  000000                     
  4156  000000                     
  4157  000000                     
  4158  000000                     
  4159  000000                     
  4160  000000                     
  4161  000000                     
  4162  000000                     
  4163  000000                     
  4164  000000                     
  4165  000000                     
  4166  000000                     
  4167  000000                     
  4168  000000                     
  4169  000000                     
  4170  000000                     
  4171  000000                     
  4172  000000                     
  4173  000000                     
  4174  000000                     
  4175  000000                     
  4176  000000                     
  4177  000000                     
  4178  000000                     
  4179  000000                     
  4180  000000                     
  4181  000000                     
  4182  000000                     
  4183  000000                     
  4184  000000                     
  4185  000000                     
  4186  000000                     
  4187  000000                     
  4188  000000                     
  4189  000000                     
  4190  000000                     
  4191  000000                     
  4192  000000                     
  4193  000000                     
  4194  000000                     
  4195  000000                     
  4196  000000                     
  4197  000000                     
  4198  000000                     
  4199  000000                     
  4200  000000                     
  4201  000000                     
  4202  000000                     
  4203  000000                     
  4204  000000                     
  4205  000000                     
  4206  000000                     
  4207  000000                     
  4208  000000                     
  4209  000000                     
  4210  000000                     
  4211  000000                     
  4212  000000                     
  4213  000000                     
  4214  000000                     
  4215  000000                     
  4216  000000                     
  4217  000000                     
  4218  000000                     
  4219  000000                     
  4220  000000                     
  4221  000000                     
  4222  000000                     
  4223  000000                     
  4224  000000                     
  4225  000000                     
  4226  000000                     
  4227  000000                     
  4228  000000                     
  4229  000000                     
  4230  000000                     
  4231  000000                     
  4232  000000                     
  4233  000000                     
  4234  000000                     
  4235  000000                     
  4236  000000                     
  4237  000000                     
  4238  000000                     
  4239  000000                     
  4240  000000                     
  4241  000000                     
  4242  000000                     
  4243  000000                     
  4244  000000                     
  4245  000000                     
  4246  000000                     
  4247  000000                     
  4248  000000                     
  4249  000000                     
  4250  000000                     
  4251  000000                     
  4252  000000                     
  4253  000000                     
  4254  000000                     
  4255  000000                     
  4256  000000                     
  4257  000000                     
  4258  000000                     
  4259  000000                     
  4260  000000                     
  4261  000000                     
  4262  000000                     
  4263  000000                     
  4264  000000                     
  4265  000000                     
  4266  000000                     
  4267  000000                     
  4268  000000                     
  4269  000000                     
  4270  000000                     
  4271  000000                     
  4272  000000                     
  4273  000000                     
  4274  000000                     
  4275  000000                     
  4276  000000                     
  4277  000000                     
  4278  000000                     
  4279  000000                     
  4280  000000                     
  4281  000000                     
  4282  000000                     
  4283  000000                     
  4284  000000                     
  4285  000000                     
  4286  000000                     
  4287  000000                     
  4288  000000                     
  4289  000000                     
  4290  000000                     
  4291  000000                     
  4292  000000                     
  4293  000000                     
  4294  000000                     
  4295  000000                     
  4296  000000                     
  4297  000000                     
  4298  000000                     
  4299  000000                     
  4300  000000                     
  4301  000000                     
  4302  000000                     
  4303  000000                     
  4304  000000                     
  4305  000000                     
  4306  000000                     
  4307  000000                     
  4308  000000                     
  4309  000000                     
  4310  000000                     
  4311  000000                     
  4312  000000                     
  4313  000000                     
  4314  000000                     
  4315  000000                     
  4316  000000                     
  4317  000000                     
  4318  000000                     
  4319  000000                     
  4320  000000                     
  4321  000000                     
  4322  000000                     
  4323  000000                     
  4324  000000                     
  4325  000000                     
  4326  000000                     
  4327  000000                     
  4328  000000                     
  4329  000000                     
  4330  000000                     
  4331  000000                     
  4332  000000                     
  4333  000000                     
  4334  000000                     
  4335  000000                     
  4336  000000                     
  4337  000000                     
  4338  000000                     
  4339  000000                     
  4340  000000                     
  4341  000000                     
  4342  000000                     
  4343  000000                     
  4344  000000                     
  4345  000000                     
  4346  000000                     
  4347  000000                     
  4348  000000                     
  4349  000000                     
  4350  000000                     
  4351  000000                     
  4352  000000                     
  4353  000000                     
  4354  000000                     
  4355  000000                     
  4356  000000                     
  4357  000000                     
  4358  000000                     
  4359  000000                     
  4360  000000                     
  4361  000000                     
  4362  000000                     
  4363  000000                     
  4364  000000                     
  4365  000000                     
  4366  000000                     
  4367  000000                     
  4368  000000                     
  4369  000000                     
  4370  000000                     
  4371  000000                     
  4372  000000                     
  4373  000000                     
  4374  000000                     
  4375  000000                     
  4376  000000                     
  4377  000000                     
  4378  000000                     
  4379  000000                     
  4380  000000                     
  4381  000000                     
  4382  000000                     
  4383  000000                     
  4384  000000                     
  4385  000000                     
  4386  000000                     
  4387  000000                     
  4388  000000                     
  4389  000000                     
  4390  000000                     
  4391  000000                     
  4392  000000                     
  4393  000000                     
  4394  000000                     
  4395  000000                     
  4396  000000                     
  4397  000000                     
  4398  000000                     
  4399  000000                     
  4400  000000                     
  4401  000000                     
  4402  000000                     
  4403  000000                     
  4404  000000                     
  4405  000000                     
  4406  000000                     
  4407  000000                     
  4408  000000                     
  4409  000000                     
  4410  000000                     
  4411  000000                     
  4412  000000                     
  4413  000000                     
  4414  000000                     
  4415  000000                     
  4416  000000                     
  4417  000000                     
  4418  000000                     
  4419  000000                     
  4420  000000                     
  4421  000000                     
  4422  000000                     
  4423  000000                     
  4424  000000                     
  4425  000000                     
  4426  000000                     
  4427  000000                     
  4428  000000                     
  4429  000000                     
  4430  000000                     
  4431  000000                     
  4432  000000                     
  4433  000000                     
  4434  000000                     
  4435  000000                     
  4436  000000                     
  4437  000000                     
  4438  000000                     
  4439  000000                     
  4440  000000                     
  4441  000000                     
  4442  000000                     
  4443  000000                     
  4444  000000                     
  4445  000000                     
  4446  000000                     
  4447  000000                     
  4448  000000                     
  4449  000000                     
  4450  000000                     
  4451  000000                     
  4452  000000                     
  4453  000000                     
  4454  000000                     
  4455  000000                     
  4456  000000                     
  4457  000000                     
  4458  000000                     
  4459  000000                     
  4460  000000                     
  4461  000000                     
  4462  000000                     
  4463  000000                     
  4464  000000                     
  4465  000000                     
  4466  000000                     
  4467  000000                     
  4468  000000                     
  4469  000000                     
  4470  000000                     
  4471  000000                     
  4472  000000                     
  4473  000000                     
  4474  000000                     
  4475  000000                     
  4476  000000                     
  4477  000000                     
  4478  000000                     
  4479  000000                     
  4480  000000                     
  4481  000000                     
  4482  000000                     
  4483  000000                     
  4484  000000                     
  4485  000000                     
  4486  000000                     
  4487  000000                     
  4488  000000                     
  4489  000000                     
  4490  000000                     
  4491  000000                     
  4492  000000                     
  4493  000000                     
  4494  000000                     
  4495  000000                     
  4496  000000                     
  4497  000000                     
  4498  000000                     
  4499  000000                     
  4500  000000                     
  4501  000000                     
  4502  000000                     
  4503  000000                     
  4504  000000                     
  4505  000000                     
  4506  000000                     
  4507  000000                     
  4508  000000                     
  4509  000000                     
  4510  000000                     
  4511  000000                     
  4512  000000                     
  4513  000000                     
  4514  000000                     
  4515  000000                     
  4516  000000                     
  4517  000000                     
  4518  000000                     
  4519  000000                     
  4520  000000                     
  4521  000000                     
  4522  000000                     
  4523  000000                     
  4524  000000                     
  4525  000000                     
  4526  000000                     
  4527  000000                     
  4528  000000                     
  4529  000000                     
  4530  000000                     
  4531  000000                     
  4532  000000                     
  4533  000000                     
  4534  000000                     
  4535  000000                     
  4536  000000                     
  4537  000000                     
  4538  000000                     
  4539  000000                     
  4540  000000                     
  4541  000000                     
  4542  000000                     
  4543  000000                     
  4544  000000                     
  4545  000000                     
  4546  000000                     
  4547  000000                     
  4548  000000                     
  4549  000000                     
  4550  000000                     
  4551  000000                     
  4552  000000                     
  4553  000000                     
  4554  000000                     
  4555  000000                     
  4556  000000                     
  4557  000000                     
  4558  000000                     
  4559  000000                     
  4560  000000                     
  4561  000000                     
  4562  000000                     
  4563  000000                     
  4564  000000                     
  4565  000000                     
  4566  000000                     
  4567  000000                     
  4568  000000                     
  4569  000000                     
  4570  000000                     
  4571  000000                     
  4572  000000                     
  4573  000000                     
  4574  000000                     
  4575  000000                     
  4576  000000                     
  4577  000000                     
  4578  000000                     
  4579  000000                     
  4580  000000                     
  4581  000000                     
  4582  000000                     
  4583  000000                     
  4584  000000                     
  4585  000000                     
  4586  000000                     
  4587  000000                     
  4588  000000                     
  4589  000000                     
  4590  000000                     
  4591  000000                     
  4592  000000                     
  4593  000000                     
  4594  000000                     
  4595  000000                     
  4596  000000                     
  4597  000000                     
  4598  000000                     
  4599  000000                     
  4600  000000                     
  4601  000000                     
  4602  000000                     
  4603  000000                     
  4604  000000                     
  4605  000000                     
  4606  000000                     
  4607  000000                     
  4608  000000                     
  4609  000000                     
  4610  000000                     
  4611                           
  4612                           	psect	bigdata
  4613                           ;main.h: 42: void InitGlobal(void);
  4614                           ;main.h: 43: void Program(void);
  4615                           ;main.h: 46: void OpenTCO(const unsigned char Po
      +                          zycja);
  4616                           ;main.h: 47: void OpenTCW(const unsigned char Po
      +                          zycja);
  4617                           ;main.h: 48: void OpenCS(const unsigned char Poz
      +                          ycja);
  4618                           ;main.h: 49: void OpenMOD(const unsigned char Po
      +                          zycja);
  4619                           ;main.h: 50: void OpenZEW(const unsigned char st
      +                          n);
  4620                           ;main.h: 51: void SetMod(const unsigned char Poz
      +                          ycja);
  4621                           ;main.h: 52: void SetPrzWU(const unsigned char p
      +                          rz, const unsigned char imps);
  4622                           ;main.h: 53: void SetRT(unsigned char stn);
  4623                           ;main.h: 54: void SetWCW(unsigned char stn);
  4624                           ;main.h: 55: void SetPRE(unsigned char stn);
  4625                           ;main.h: 56: void SetPLM(unsigned char stn);
  4626                           ;main.h: 57: void SetPRZ(unsigned char stn);
  4627                           ;main.h: 58: void SetCIG(unsigned char stn);
  4628                           ;main.h: 59: void SetZ95(unsigned char stn);
  4629                           ;main.h: 60: void SetFZ(unsigned char stn);
  4630                           ;main.h: 61: void CyklFZ(void);
  4631                           ;main.h: 62: void StartCyklFZ(unsigned char stn)
      +                          ;
  4632                           ;main.h: 63: void DecSter(void);
  4633                           ;main.h: 64: extern void StartUSARTRC(const unsi
      +                          gned char nData);
  4634                           ;main.h: 65: void KeyManager(void);
  4635                           ;main.h: 66: void PrintVerBoards(unsigned char r
      +                          ef);
  4636                           ;main.h: 68: void InitOsc(void);
  4637                           ;main.h: 70: void InitAC(void);
  4638                           ;main.h: 72: void RdEEParam(void);
  4639                           ;main.h: 73: void WriteDATA(void);
  4640                           ;main.h: 75: signed char PomiarPOT(unsigned char
      +                           chanel, signed char min, signed char max);
  4641                           ;main.h: 77: extern void SetRCO(unsigned char TC
      +                          O);
  4642                           ;main.h: 78: extern void SetRCW(unsigned char TC
      +                          W);
  4643                           ;main.h: 79: extern void SetRZW(signed char TZW)
      +                          ;
  4644                           ;main.h: 80: extern void SetCS(unsigned char CS)
      +                          ;
  4645                           ;main.h: 82: extern void StartRTS(const unsigned
      +                           char Index);
  4646                           ;main.h: 83: extern unsigned char RTS(const unsi
      +                          gned char Index);
  4647                           ;main.h: 84: extern void StartRTdS(const unsigne
      +                          d char Index);
  4648                           ;main.h: 85: extern unsigned char RTdS(const uns
      +                          igned char Index);
  4649                           ;main.h: 87: extern void InitTimer0(void);
  4650                           ;main.h: 89: extern void InitTimer1(void);
  4651                           ;main.h: 91: extern void InitTimer2(void);
  4652                           ;main.h: 94: extern void InitPort(void);
  4653                           ;main.h: 95: extern bit RdPrt(unsigned char Inde
      +                          x);
  4654                           ;main.h: 96: extern void SetPrt(unsigned char In
      +                          dex, unsigned char nw);
  4655                           ;main.h: 97: extern void RefPrt(unsigned char In
      +                          dex);
  4656                           ;main.h: 99: extern void PwrOnDelay(void);
  4657                           ;main.h: 101: extern void InitI2C(void);
  4658                           ;main.h: 102: extern void StartI2CTim(void);
  4659                           ;main.h: 103: extern bit I2CTim(void);
  4660                           ;main.h: 104: extern bit ReceptI2C(unsigned char
      +                           NBTI2C);
  4661                           ;main.h: 105: extern bit TransmitI2C(unsigned ch
      +                          ar NBTI2C);
  4662                           ;main.h: 107: extern void InitIMY(void);
  4663                           ;main.h: 108: extern void KomunikacjaIMY(void);
  4664                           ;main.h: 110: extern void InitIMZ(void);
  4665                           ;main.h: 111: extern void KomunikacjaIMZ(void);
  4666                           ;main.h: 113: extern void InitAC(void);
  4667                           ;main.h: 114: unsigned char ReadAC(unsigned char
      +                           chanel);
  4668                           ;main.h: 116: extern void PomiarTPRC(void);
  4669                           ;main.h: 117: extern void PomiarMMY5(void);
  4670                           ;main.h: 118: extern void PomiarMMY18(void);
  4671                           ;main.h: 119: extern void PomiarMMYVRT(void);
  4672                           ;main.h: 121: extern void Buzzer(void);
  4673                           ;main.h: 122: extern void SetBuzz(const unsigned
      +                           char sB,const unsigned char rB,const unsigned c
      +                          har nB);
  4674                           ;main.h: 123: extern void ResBuzz(void);
  4675                           ;main.h: 125: extern void InitUart(void);
  4676                           ;main.h: 126: extern void StartUSARTRC(const uns
      +                          igned char nData);
  4677                           ;main.h: 129: extern void InitTransProc(void);
  4678                           ;main.h: 130: extern void ReceptDataAMMY0(void);
  4679                           ;main.h: 131: extern void ReceptData(const unsig
      +                          ned char rnDat, const unsigned char tnDat);
  4680                           ;main.h: 133: extern void InitPWM2(void);
  4681                           ;main.h: 135: extern void InitLLED(void);
  4682                           ;main.h: 136: extern void SetLightLLed(unsigned 
      +                          char nowhigh);
  4683                           ;main.h: 148: extern void GoldenEye(void);
  4684                           ;main.h: 151: void DecRes(void);
  4685                           ;main.h: 152: void InitUNIData(void);
  4686                           ;main.h: 153: void RefData(void);
  4687                           ;main.h: 154: void InitGlobal(void);
  4688                           ;main.h: 155: void ErrDTF(void);
  4689                           ;main.h: 156: void ErrPTG(void);
  4690                           ;main.h: 157: void ToReset(void);
  4691                           ;main.h: 158: void DecWSW(void);
  4692                           ;main.h: 159: void DecERR(void);
  4693                           ;main.h: 160: void DecSTR(void);
  4694                           ;main.h: 161: void DecRozruch(void);
  4695                           ;main.h: 162: void SetRozruch(void);
  4696                           ;main.h: 163: void DecWylacz(void);
  4697                           ;main.h: 164: void SetWylacz(void);
  4698                           ;main.h: 165: void RuszPlomien(void);
  4699                           ;main.h: 166: void ReloadPlomien(void);
  4700                           ;main.h: 167: void RuszCiag(void);
  4701                           ;main.h: 168: void ReloadCiag(void);
  4702                           ;main.h: 169: void Proba48(void);
  4703                           ;main.h: 170: void Rusz48(void);
  4704                           ;main.h: 171: void Proba48Z3(void);
  4705                           ;main.h: 172: void Rusz48Z3(void);
  4706                           ;main.h: 173: void Rozruch(void);
  4707                           ;main.h: 174: void DecyzjaPLM(void);
  4708                           ;main.h: 175: void VWybieg(void);
  4709                           ;main.h: 176: void ZmienKCOKCW(void);
  4710                           ;main.h: 177: void FunkcjaSerwisowa(void);
  4711                           ;main.h: 178: void KolejkaPobudzen(void);
  4712                           ;main.h: 179: void BlokadaL3(void);
  4713  000758                     _tzn:
  4714  000758                     	ds	1
  4715  000758                     	ds	1
  4716  000758                     	ds	1
  4717  000758                     	ds	1
  4718  000758                     	ds	1
  4719  000758                     	ds	1
  4720  000758                     	ds	1
  4721  000758                     	ds	1
  4722  000758                     	ds	1
  4723                           
  4724                           	psect	ibigdata
  4725  000912  31                 	db	49
  4726  000913  32                 	db	50
  4727  000914  33                 	db	51
  4728  000915  34                 	db	52
  4729  000916  35                 	db	53
  4730  000917  36                 	db	54
  4731  000918  37                 	db	55
  4732  000919  38                 	db	56
  4733  00091A  39                 	db	57
  4734                           
  4735                           	psect	bigbss
  4736  000769                     F2603:
  4737  000769                     	ds	1
  4738  000769                     F2614:
  4739  000769                     	ds	1
  4740  000769                     F2615:
  4741  000769                     	ds	1
  4742  000769                     F2616:
  4743  000769                     	ds	1
  4744  000769                     F2618:
  4745  000769                     	ds	1
  4746  000769                     F2619:
  4747  000769                     	ds	1
  4748  000000                     
  4749  000000                     
  4750  000000                     
  4751  000000                     
  4752  000000                     
  4753  000000                     
  4754  000000                     
  4755  000000                     
  4756  000000                     
  4757  000000                     
  4758  000000                     
  4759  000000                     
  4760  000000                     
  4761  000000                     
  4762  000000                     
  4763  000000                     
  4764  000000                     
  4765  000000                     
  4766  000000                     
  4767  000000                     
  4768  000000                     
  4769  000000                     
  4770  000000                     
  4771  000000                     
  4772  000000                     
  4773  000000                     
  4774  000000                     
  4775  000000                     
  4776  000000                     
  4777  000000                     
  4778  000000                     
  4779  000000                     
  4780  000000                     
  4781  000000                     
  4782  000000                     
  4783  000000                     
  4784  000000                     
  4785  000000                     
  4786  000000                     
  4787  000000                     
  4788  000000                     
  4789  000000                     
  4790  000000                     
  4791  000000                     
  4792  000000                     
  4793  000000                     
  4794  000000                     
  4795  000000                     
  4796  000000                     
  4797  000000                     
  4798  000000                     
  4799  000000                     
  4800  000000                     
  4801  000000                     
  4802  000000                     
  4803  000000                     
  4804  000000                     
  4805  000000                     
  4806  000000                     
  4807  000000                     
  4808  000000                     
  4809  000000                     
  4810  000000                     
  4811  000000                     
  4812  000000                     
  4813  000000                     
  4814  000000                     
  4815  000000                     
  4816  000000                     
  4817  000000                     
  4818  000000                     
  4819  000000                     
  4820  000000                     
  4821  000000                     
  4822  000000                     
  4823  000000                     
  4824  000000                     
  4825  000000                     
  4826  000000                     
  4827  000000                     
  4828  000000                     
  4829  000000                     
  4830  000000                     
  4831  000000                     
  4832  000000                     
  4833  000000                     
  4834  000000                     
  4835  000000                     
  4836  000000                     
  4837  000000                     
  4838  000000                     
  4839  000000                     
  4840  000000                     
  4841  000000                     
  4842  000000                     
  4843  000000                     
  4844  000000                     
  4845  000000                     
  4846  000000                     
  4847  000000                     
  4848  000000                     
  4849  000000                     
  4850  000000                     
  4851  000000                     
  4852  000000                     
  4853  000000                     
  4854  000000                     
  4855  000000                     
  4856  000000                     
  4857  000000                     
  4858  000000                     
  4859  000000                     
  4860  000000                     
  4861  000000                     
  4862  000000                     
  4863  000000                     
  4864  000000                     
  4865  000000                     
  4866  000000                     
  4867  000000                     
  4868  000000                     
  4869  000000                     
  4870  000000                     
  4871  000000                     
  4872  000000                     
  4873  000000                     
  4874  000000                     
  4875  000000                     
  4876  000000                     
  4877  000000                     
  4878  000000                     
  4879  000000                     
  4880  000000                     
  4881  000000                     
  4882  000000                     
  4883  000000                     
  4884  000000                     
  4885  000000                     
  4886  000000                     
  4887  000000                     
  4888  000000                     
  4889  000000                     
  4890  000000                     
  4891  000000                     
  4892  000000                     
  4893  000000                     
  4894  000000                     
  4895  000000                     
  4896  000000                     
  4897  000000                     
  4898  000000                     
  4899  000000                     
  4900  000769                     _dc0:
  4901  000769                     	ds	1
  4902  000769                     _dc1:
  4903  000769                     	ds	1
  4904  000769                     _dc2:
  4905  000769                     	ds	1
  4906  000769                     _dc3:
  4907  000769                     	ds	1
  4908  000769                     _key0:
  4909  000769                     	ds	1
  4910  000769                     _key1:
  4911  000769                     	ds	1
  4912  000769                     _krok1:
  4913  000769                     	ds	1
  4914  000769                     _krok2:
  4915  000769                     	ds	1
  4916  000769                     _zmn:
  4917  000769                     	ds	1
  4918  000769                     _zps:
  4919  000769                     	ds	1
  4920  000000                     
  4921  000000                     
  4922  000000                     
  4923  000000                     
  4924  000000                     
  4925  000000                     
  4926  000000                     
  4927                           
  4928                           	psect	bss
  4929  000200                     _bprm:
  4930  000200                     	ds	2
  4931  000200                     _di:
  4932  000200                     	ds	2
  4933  000200                     _prm:
  4934  000200                     	ds	2
  4935  000200                     _PFN:
  4936  000200                     	ds	38
  4937  000200                     _M:
  4938  000200                     	ds	48
  4939  000200                     _RSDT1:
  4940  000200                     	ds	73
  4941                           
  4942                           	psect	temp
  4943  000000                     btemp:
  4944  000000                     	ds	2
  4945                           intcon	equ	0xFF2
  4946                           indf0	equ	0xFEF
  4947                           postinc0	equ	0xFEE
  4948                           postdec0	equ	0xFED
  4949                           wreg	equ	0xFE8
  4950                           indf1	equ	0xFE7
  4951                           postinc1	equ	0xFE6
  4952                           postdec1	equ	0xFE5
  4953                           fsr2l	equ	0xFD9
  4954                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Fri Nov 21 09:58:02 2014

              _RingProc 7C90                       _M 022C  
              _PrintVER 48C0                _PrintVNT 492A  
                    l40 0AF8                      l33 0B0E  
                    l25 095E                      l50 0FDA  
                    l34 09FE                      l26 0962  
                    l51 0FE6                      l27 0972  
                    l44 0FEA                      l36 0A04  
                    l61 12EA                      l45 0FAE  
                    l29 0982                      l70 13AA  
                    l71 13B2                      l63 1316  
                    l47 0FBE                      l39 0B04  
                    l80 14B6                      l48 0FCA  
                    l81 14D4                      l73 13DE  
                    l65 1344                      l57 1416  
                    l90 16A8                      l82 1554  
                    l58 128C                      l91 1592  
                    l83 1506                      l75 13F6  
                    l67 1370                      l59 12BC  
                    l92 15DA                      l76 1414  
                    l85 151C                      l69 139C  
                    l94 1628                      l78 1468  
                    l87 1546                      l79 148C  
                    l96 163E                      l89 1570  
                    l98 1696                      u30 0954  
                    u60 096E                      u90 098E  
                    _di 0202                      _ky 02A5  
             ?_PrintVER 00CF               ?_PrintVNT 00CF  
           _ClrAllMarks 39D8                     l100 176C  
                   l101 1708                     l110 1842  
                   l103 1746                     l200 1DFC  
                   l112 1956                     l104 1828  
                   l113 1918                     l105 178E  
                   l202 1E20                     l130 199A  
                   l122 1950                     l114 1912  
                   l106 17C4                     l211 1EE6  
                   l131 19AC                     l123 192C  
                   l115 187E                     l107 17DA  
                   l220 20F8                     l212 1ED0  
                   l140 1AA2                     l132 19CC  
                   l116 18A6                     l221 1FE4  
                   l141 1A42                     l133 19E2  
                   l125 196E                     l230 1FC4  
                   l222 1FB4                     l150 1AF4  
                   l126 1964                     l118 18D8  
                   l223 1F54                     l207 1E82  
                   l151 1AD8                     l143 1A70  
                   l127 196A                     l232 1FD4  
                   l216 1F20                     l208 1E66  
                   l152 1AE6                     l136 1D92  
                   l128 2262                     l241 206A  
                   l225 1F82                     l209 1E74  
                   l161 1BB8                     l145 1A94  
                   l137 1CFE                     l129 1A0C  
                   l170 1C78                     l154 1B3C  
                   l138 1B8A                     l251 2134  
                   l243 2094                     l227 1FA6  
                   l171 1C46                     l163 1BCC  
                   l139 1AB2                     l244 20A8  
                   l236 2086                     l180 1CD0  
                   l172 1C68                     l156 1B6E  
                   l261 21D6                     l253 2126  
                   l237 200A                     l173 1C5C  
                   l165 1BFA                     l262 21A4  
                   l246 20D4                     l190 1D76  
                   l271 222E                     l263 21C6  
                   l239 2046                     l167 1C1E  
                   l159 1C2C                     l264 21BA  
                   l248 20EA                     l192 225C  
                   l184 1D34                     l176 1C8E  
                   l281 23B0                     l273 2242  
                   l185 1D18                     l177 1CEE  
                   l258 218A                     l194 2148  
                   l186 1D24                     l178 1CA4  
                   l275 2320                     l267 21EC  
                   l259 217A                     l195 1F34  
                   l276 2342                     l268 224E  
                   l196 1E3E                     l188 1D4A  
                   l277 2338                     l269 2202  
                   l197 1E2E                     l189 1D82  
                   l286 2428                     l198 1DCE  
                   l287 2406                     l289 2416  
                   u100 0A12                     u210 0B28  
                   u250 0B32                     u430 0D9A  
                   u440 0D9C                     _PFN 0206  
                   u470 0DC6                     u480 0DC8  
                   u910 104E                     u920 1050  
                   u950 1072                     u870 102A  
                   u960 1074                     u880 102C  
                   u990 1096                     _dc0 076F  
                   _dc1 0770                     _dc2 0771  
                   _dc3 0772                     _prm 0204  
                   _zmn 0777                     _tzn 0758  
                   _zps 0778                __config1 00F3BE  
              __config2 00F778                __config3 00FFFF  
                   wreg 000FE8               _StartRTdS 762C  
                  F2603 0769                    F2614 076A  
                  F2615 076B                    F2616 076C  
                  F2618 076D                    F2619 076E  
            _PrintNstCO 458A              _PrintNstCW 4364  
            _PwrOnDelay 7F60               _TrybPracy 4FB2  
                  u1000 1098                    u1110 1200  
                  u1030 11A0                    u1120 1202  
                  u1040 11A2                    u1105 11FA  
                  u1025 119A                    u2030 186E  
                  u1150 122C                    u1070 11D2  
                  u1320 145E                    u1080 11D4  
                  u1145 1228                    u1065 11CC  
                  u3210 1EC2                    u3130 1DEC  
                  u1530 156A                    u3115 1DE4  
                  u4020 2314                    u2420 1A1A  
                  u2510 1A60                    u1470 14FA  
                  u4050 232A                    u3330 1F72  
                  u3250 1F12                    u2450 1A24  
                  u3315 1F6A                    u3235 1F0A  
                  u4300 239A                    u3420 2028  
                  u1740 1714                    u3405 2020  
                  u4230 2376                    u1670 164A  
                  u1495 1532                    u4410 23E4  
                  u4331 23BA                    u3195 1EBA  
                  u4420 23E6                    u4260 2380  
                  u2580 1B12                    u2565 1B0A  
                  u1765 172E                    u1685 165E  
                  u4350 23C4                    u3550 2152  
                  u3470 20C6                    u1870 17E6  
                  u3455 20BE                    u2495 1A58  
                  u4360 23C6                    u3800 22A2  
                  u3720 2220                    u2680 1BEA  
                  u3705 2218                    u2665 1BE2  
                  u4290 2398                    u3810 22A4  
                  u2850 1CC2                    u4291 2394  
                  u2835 1CBA                    u3901 22D6  
                  u1885 17FA                    u1990 1856  
                  _MGSD 02EB                    u4391 23DA  
                  u4480 2420                    u2960 1D68  
                  u2945 1D60                    u3940 22E6  
                  u3860 22C0                    u3950 22E8  
                  u3870 22C2                    u3980 22FE  
                  u3990 2300                    _RTdS 7650  
                  _Mark 47B6                    _key0 0773  
                  _key1 0774                    _bprm 0200  
                  _main 0922                    indf0 000FEF  
                  indf1 000FE7                    fsr2l 000FD9  
                  btemp 0000             ?_PrintNstCO 00CF  
           ?_PrintNstCW 00CF                    start 0010  
               ?_ClrDig 00CF         __end_of_RefData 117C  
           _PrintErrMsg 3D02                   ?_Mark 00DD  
           _PrintNstECO 46D4             _PrintNstCW2 443A  
          ?a_MarkMinMax 00DC           _MarkMinMaxECO 1230  
                 _RSDT1 025C                   _EndPR 432A  
                 _RdPrt 72D0              used_btemp0 0001  
            used_btemp1 0001                   _krok1 0775  
                 _krok2 0776   __end_of_MarkMinMaxECO 127C  
          ?_PrintErrMsg 00CF                 _BitSet2 7D90  
          ?_PrintNstCW2 00CF                 _GetBit2 7D2A  
              ?_BitSet2 00CF                   status 000FD8  
              ?_GetBit2 00D0                 _InitI2C 7838  
               _RefData 0C64                 _InitOsc 7F7A  
               _InitWsw 256E                 __Lparam 00CF  
               _PrintCO 4982                 _PrintCS 47FE  
               _PrintCW 4858                 _PrintIN 4A24  
               _TestScr 4C24                 _PrintPG 4B00  
               _PrintPP 4A8E                ?_PrintCO 00CF  
              ?_PrintCS 00CF                ?_PrintCW 00CF  
               __ramtop 0800          __end_of_DecRes 2436  
        _PrintVerBoards 127C          __end_of_DecWsw 2404  
            _EndTestScr 4C86             _InitUNIData 09A8  
         _ClrMarkMinMax 47DC     __end_of_InitUNIData 0C64  
          __end_of_main 09A8                  _DecRes 2404  
                _DecWsw 184C                  _ClrDig 4B74  
                _EndErr 3CF4                  _EndNst 47AE  
__end_of_PrintVerBoards 144C                 postdec0 000FED  
               postdec1 000FE5                 postinc0 000FEE  
               postinc1 000FE6              _MarkMinMax 117E  
    __end_of_MarkMinMax 1230             _NastawaCOCW 144C  
            _InitGlobal 2436     __end_of_NastawaCOCW 184C  
    __end_of_InitGlobal 243E              _InitTimer1 7F1E  
           _ResBufKeyEx 6BA0             ?_MarkMinMax 00DB  
         _MKonfiguracja 5A86           _InitTransProc 62FA  
             _ReadParam 4D52                _InitLLED 7AFE  
              _InitPWM2 7E34                _InitKonf 594E  
            ?_ReadParam 00D0                _InitUart 7376  
              _InitPort 715C            ?_ResBufKeyEx 00D4  
          _SetLightLLed 7BE8  
