

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Fri Nov 21 09:58:03 2014


     1                           	processor	18F65J90
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	const,global,class=CODE,delta=1
     5                           	psect	bigdata,global,class=BIGRAM,space=1,delta
      +                          =1
     6                           	psect	ibigdata,global,class=CODE,delta=1
     7                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     8                           	psect	bss,global,class=RAM,space=1,delta=1
     9                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100                           
   101                           	psect	text
   102                           ;pic18f85j90.h: 18: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   103                           ;pic18f85j90.h: 19: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   104                           ;pic18f85j90.h: 20: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   105                           ;pic18f85j90.h: 21: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   106                           ;pic18f85j90.h: 22: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   107                           ;pic18f85j90.h: 23: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   108                           ;pic18f85j90.h: 24: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   109                           ;pic18f85j90.h: 25: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   110                           ;pic18f85j90.h: 26: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   111                           ;pic18f85j90.h: 27: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   112                           ;pic18f85j90.h: 28: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   113                           ;pic18f85j90.h: 29: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   114                           ;pic18f85j90.h: 30: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   115                           ;pic18f85j90.h: 31: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   116                           ;pic18f85j90.h: 32: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   117                           ;pic18f85j90.h: 33: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   118                           ;pic18f85j90.h: 34: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   119                           ;pic18f85j90.h: 35: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   120                           ;pic18f85j90.h: 36: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   121                           ;pic18f85j90.h: 37: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   122                           ;pic18f85j90.h: 38: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   123                           ;pic18f85j90.h: 39: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   124                           ;pic18f85j90.h: 40: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   125                           ;pic18f85j90.h: 41: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   126                           ;pic18f85j90.h: 42: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   127                           ;pic18f85j90.h: 43: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   128                           ;pic18f85j90.h: 44: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   129                           ;pic18f85j90.h: 45: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   130                           ;pic18f85j90.h: 46: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   131                           ;pic18f85j90.h: 47: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   132                           ;pic18f85j90.h: 48: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   133                           ;pic18f85j90.h: 49: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   134                           ;pic18f85j90.h: 50: static near unsigned char BS
      +                          R @ 0xFE0;
   135                           ;pic18f85j90.h: 51: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   136                           ;pic18f85j90.h: 52: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   137                           ;pic18f85j90.h: 53: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   138                           ;pic18f85j90.h: 54: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   139                           ;pic18f85j90.h: 55: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   140                           ;pic18f85j90.h: 56: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   141                           ;pic18f85j90.h: 57: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   142                           ;pic18f85j90.h: 58: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   143                           ;pic18f85j90.h: 59: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   144                           ;pic18f85j90.h: 60: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   145                           ;pic18f85j90.h: 62: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   146                           ;pic18f85j90.h: 63: static near unsigned char T0
      +                          CON @ 0xFD5;
   147                           ;pic18f85j90.h: 64: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   148                           ;pic18f85j90.h: 65: static near unsigned char LC
      +                          DREG @ 0xFD2;
   149                           ;pic18f85j90.h: 66: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   150                           ;pic18f85j90.h: 67: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   151                           ;pic18f85j90.h: 68: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   152                           ;pic18f85j90.h: 69: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   153                           ;pic18f85j90.h: 71: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   154                           ;pic18f85j90.h: 72: static near unsigned char T1
      +                          CON @ 0xFCD;
   155                           ;pic18f85j90.h: 73: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   156                           ;pic18f85j90.h: 74: static near unsigned char PR
      +                          2 @ 0xFCB;
   157                           ;pic18f85j90.h: 75: static near unsigned char T2
      +                          CON @ 0xFCA;
   158                           ;pic18f85j90.h: 76: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   159                           ;pic18f85j90.h: 77: static near unsigned char SS
      +                          PADD @ 0xFC8;
   160                           ;pic18f85j90.h: 78: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   161                           ;pic18f85j90.h: 79: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   162                           ;pic18f85j90.h: 80: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   163                           ;pic18f85j90.h: 81: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   164                           ;pic18f85j90.h: 82: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   165                           ;pic18f85j90.h: 84: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   166                           ;pic18f85j90.h: 85: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   167                           ;pic18f85j90.h: 86: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   168                           ;pic18f85j90.h: 87: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   169                           ;pic18f85j90.h: 88: static near unsigned char LC
      +                          DDATA4 @ 0xFBF;
   170                           ;pic18f85j90.h: 89: static near unsigned char LC
      +                          DDATA3 @ 0xFBE;
   171                           ;pic18f85j90.h: 90: static near unsigned char LC
      +                          DDATA2 @ 0xFBD;
   172                           ;pic18f85j90.h: 91: static near unsigned char LC
      +                          DDATA1 @ 0xFBC;
   173                           ;pic18f85j90.h: 92: static near unsigned char LC
      +                          DDATA0 @ 0xFBB;
   174                           ;pic18f85j90.h: 93: static near unsigned char LC
      +                          DSE5 @ 0xFBA;
   175                           ;pic18f85j90.h: 94: static near unsigned char LC
      +                          DSE4 @ 0xFB9;
   176                           ;pic18f85j90.h: 95: static near unsigned char LC
      +                          DSE3 @ 0xFB8;
   177                           ;pic18f85j90.h: 96: static near unsigned char LC
      +                          DSE2 @ 0xFB7;
   178                           ;pic18f85j90.h: 97: static near unsigned char LC
      +                          DSE1 @ 0xFB6;
   179                           ;pic18f85j90.h: 98: static volatile near unsigne
      +                          d char CVRCON @ 0xFB5;
   180                           ;pic18f85j90.h: 99: static volatile near unsigne
      +                          d char CMCON @ 0xFB4;
   181                           ;pic18f85j90.h: 100: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   182                           ;pic18f85j90.h: 101: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   183                           ;pic18f85j90.h: 103: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   184                           ;pic18f85j90.h: 104: static near unsigned char T
      +                          3CON @ 0xFB1;
   185                           ;pic18f85j90.h: 105: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   186                           ;pic18f85j90.h: 107: static near unsigned char S
      +                          PBRG @ 0xFAF;
   187                           ;pic18f85j90.h: 108: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   188                           ;pic18f85j90.h: 110: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   189                           ;pic18f85j90.h: 111: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   190                           ;pic18f85j90.h: 113: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   191                           ;pic18f85j90.h: 114: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   192                           ;pic18f85j90.h: 116: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   193                           ;pic18f85j90.h: 117: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   194                           ;pic18f85j90.h: 119: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   195                           ;pic18f85j90.h: 120: static volatile near unsign
      +                          ed char LCDPS @ 0xFAA;
   196                           ;pic18f85j90.h: 121: static near unsigned char L
      +                          CDSE0 @ 0xFA9;
   197                           ;pic18f85j90.h: 122: static volatile near unsign
      +                          ed char LCDCON @ 0xFA8;
   198                           ;pic18f85j90.h: 123: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   199                           ;pic18f85j90.h: 124: static volatile near unsign
      +                          ed char EECON1 @ 0xFA6;
   200                           ;pic18f85j90.h: 125: static near unsigned char I
      +                          PR3 @ 0xFA5;
   201                           ;pic18f85j90.h: 126: static volatile near unsign
      +                          ed char PIR3 @ 0xFA4;
   202  00243E                     _InitLCD:
   203                           ;       param _nrpoz assigned to ?_ResetPoz+0
   204  000000                     _ResetPoz$nrpoz	set	?_ResetPoz
   205                           ;       param _nrpoz assigned to ?_SetPoz+0
   206  000000                     _SetPoz$nrpoz	set	?_SetPoz
   207                           ;       param _nrpoz assigned to ?_GetPoz+0
   208  000000                     _GetPoz$nrpoz	set	?_GetPoz
   209                           ;       param _wrt assigned to ?_SetMark+4
   210  000000                     _SetMark$wrt	set	?_SetMark+4
   211                           ;       param _pulse assigned to ?_SetMark+3
   212  000000                     _SetMark$pulse	set	?_SetMark+3
   213                           ;       param _focus assigned to ?_SetMark+2
   214  000000                     _SetMark$focus	set	?_SetMark+2
   215                           ;       param _wData assigned to ?_SetMark+0
   216  000000                     _SetMark$wData	set	?_SetMark
   217                           ;       param _rbdid assigned to ?_SetStatus+7
   218  000000                     _SetStatus$rbdid	set	?_SetStatus+7
   219                           ;       param _sbdid assigned to ?_SetStatus+6
   220  000000                     _SetStatus$sbdid	set	?_SetStatus+6
   221                           ;       param _mask assigned to ?_SetStatus+4
   222  000000                     _SetStatus$mask	set	?_SetStatus+4
   223                           ;       param _wst assigned to ?_SetStatus+2
   224  000000                     _SetStatus$wst	set	?_SetStatus+2
   225                           ;       param _St assigned to ?_SetStatus+0
   226  000000                     _SetStatus$St	set	?_SetStatus
   227                           ;       param _wdt0 assigned to ?_SetData+3
   228  000000                     _SetData$wdt0	set	?_SetData+3
   229                           ;       param _wdt1 assigned to ?_SetData+2
   230  000000                     _SetData$wdt1	set	?_SetData+2
   231                           ;       param _Dt assigned to ?_SetData+0
   232  000000                     _SetData$Dt	set	?_SetData
   233                           ;       param _gr assigned to ?_SetLedData+10
   234  000000                     _SetLedData$gr	set	?_SetLedData+10
   235                           ;       param _LedData assigned to ?_SetLedData+
      +                          8
   236  000000                     _SetLedData$LedData	set	?_SetLedData+8
   237                           ;       param _St assigned to ?_SetLedData+2
   238  000000                     _SetLedData$St	set	?_SetLedData+2
   239                           ;       param _Dt assigned to ?_SetLedData+0
   240  000000                     _SetLedData$Dt	set	?_SetLedData
   241                           ;	_cadr assigned to ?a_KolProc+6
   242  000000                     _KolProc$cadr	set	?a_KolProc+6
   243                           ;	_padr assigned to ?a_KolProc+4
   244  000000                     _KolProc$padr	set	?a_KolProc+4
   245                           ;	_i assigned to ?a_KolProc+3
   246  000000                     _KolProc$i	set	?a_KolProc+3
   247                           ;	_nC assigned to ?a_KolProc+2
   248  000000                     _KolProc$nC	set	?a_KolProc+2
   249                           ;	_l assigned to ?a_KolProc+1
   250  000000                     _KolProc$l	set	?a_KolProc+1
   251                           ;	_kk assigned to ?a_KolProc+0
   252  000000                     _KolProc$kk	set	?a_KolProc
   253  000000                     
   254                           ;wsw.c: 56: LP3=0;
   255  00243E  96AA               	bcf	4010,3,c
   256                           ;wsw.c: 57: LP2=0;
   257  002440  94AA               	bcf	4010,2,c
   258                           ;wsw.c: 58: LP1=0;
   259  002442  92AA               	bcf	4010,1,c
   260                           ;wsw.c: 59: LP0=0;
   261  002444  90AA               	bcf	4010,0,c
   262                           ;wsw.c: 62: SE00=0;
   263  002446  90A9               	bcf	4009,0,c
   264                           ;wsw.c: 63: SE01=0;
   265  002448  92A9               	bcf	4009,1,c
   266                           ;wsw.c: 64: SE02=1;
   267  00244A  84A9               	bsf	4009,2,c
   268                           ;wsw.c: 65: SE03=1;
   269  00244C  86A9               	bsf	4009,3,c
   270                           ;wsw.c: 66: SE04=1;
   271  00244E  88A9               	bsf	4009,4,c
   272                           ;wsw.c: 67: SE05=1;
   273  002450  8AA9               	bsf	4009,5,c
   274                           ;wsw.c: 68: SE06=1;
   275  002452  8CA9               	bsf	4009,6,c
   276                           ;wsw.c: 69: SE07=1;
   277  002454  8EA9               	bsf	4009,7,c
   278                           ;wsw.c: 70: SE08=0;
   279  002456  90B6               	bcf	4022,0,c
   280                           ;wsw.c: 71: SE09=0;
   281  002458  92B6               	bcf	4022,1,c
   282                           ;wsw.c: 72: SE10=0;
   283  00245A  94B6               	bcf	4022,2,c
   284                           ;wsw.c: 73: SE11=0;
   285  00245C  96B6               	bcf	4022,3,c
   286                           ;wsw.c: 74: SE12=0;
   287  00245E  98B6               	bcf	4022,4,c
   288                           ;wsw.c: 75: SE13=0;
   289  002460  9AB6               	bcf	4022,5,c
   290                           ;wsw.c: 76: SE14=0;
   291  002462  9CB6               	bcf	4022,6,c
   292                           ;wsw.c: 77: SE15=0;
   293  002464  9EB6               	bcf	4022,7,c
   294                           ;wsw.c: 78: SE16=0;
   295  002466  90B7               	bcf	4023,0,c
   296                           ;wsw.c: 79: SE17=0;
   297  002468  92B7               	bcf	4023,1,c
   298                           ;wsw.c: 80: SE18=0;
   299  00246A  94B7               	bcf	4023,2,c
   300                           ;wsw.c: 81: SE19=0;
   301  00246C  96B7               	bcf	4023,3,c
   302                           ;wsw.c: 82: SE20=1;
   303  00246E  88B7               	bsf	4023,4,c
   304                           ;wsw.c: 83: SE21=1;
   305  002470  8AB7               	bsf	4023,5,c
   306                           ;wsw.c: 84: SE22=1;
   307  002472  8CB7               	bsf	4023,6,c
   308                           ;wsw.c: 85: SE23=1;
   309  002474  8EB7               	bsf	4023,7,c
   310                           ;wsw.c: 86: SE24=1;
   311  002476  80B8               	bsf	4024,0,c
   312                           ;wsw.c: 87: SE25=1;
   313  002478  82B8               	bsf	4024,1,c
   314                           ;wsw.c: 88: SE26=0;
   315  00247A  94B8               	bcf	4024,2,c
   316                           ;wsw.c: 89: SE27=0;
   317  00247C  96B8               	bcf	4024,3,c
   318                           ;wsw.c: 90: SE28=0;
   319  00247E  98B8               	bcf	4024,4,c
   320                           ;wsw.c: 91: SE29=0;
   321  002480  9AB8               	bcf	4024,5,c
   322                           ;wsw.c: 92: SE30=0;
   323  002482  9CB8               	bcf	4024,6,c
   324                           ;wsw.c: 93: SE31=0;
   325  002484  9EB8               	bcf	4024,7,c
   326                           ;wsw.c: 94: SE32=0;
   327  002486  90B9               	bcf	4025,0,c
   328                           ;wsw.c: 97: LMUX1=1;
   329  002488  82A8               	bsf	4008,1,c
   330                           ;wsw.c: 98: LMUX0=1;
   331  00248A  80A8               	bsf	4008,0,c
   332                           ;wsw.c: 99: CS1=0;
   333  00248C  96A8               	bcf	4008,3,c
   334                           ;wsw.c: 100: CS0=0;
   335  00248E  94A8               	bcf	4008,2,c
   336                           ;wsw.c: 101: SLPEN=0;
   337  002490  9CA8               	bcf	4008,6,c
   338                           ;wsw.c: 107: CKSEL1=0;
   339  002492  92D2               	bcf	4050,1,c
   340                           ;wsw.c: 108: CKSEL0=0;
   341  002494  90D2               	bcf	4050,0,c
   342                           ;wsw.c: 109: CPEN=1;
   343  002496  8CD2               	bsf	4050,6,c
   344                           ;wsw.c: 112: WFT=0;
   345  002498  9EAA               	bcf	4010,7,c
   346                           ;wsw.c: 113: BIASMD=0;
   347  00249A  9CAA               	bcf	4010,6,c
   348                           ;wsw.c: 116: LCDIF=0;
   349  00249C  9CA4               	bcf	4004,6,c	;volatile
   350                           ;wsw.c: 122: LCDIE=0;
   351  00249E  9CA3               	bcf	4003,6,c
   352                           ;wsw.c: 125: LCDEN=1;
   353  0024A0  8EA8               	bsf	4008,7,c
   354                           ;wsw.c: 128: BIAS2=1;
   355  0024A2  8AD2               	bsf	4050,5,c
   356                           ;wsw.c: 129: BIAS1=1;
   357  0024A4  88D2               	bsf	4050,4,c
   358                           ;wsw.c: 130: BIAS0=1;
   359  0024A6  86D2               	bsf	4050,3,c
   360                           ;wsw.c: 132: }
   361  0024A8  0012               	return	
   362  0024AA                     __end_of_InitLCD:
   363                           ;wsw.c: 136: void SetWSW(unsigned char sall)
   364                           ;wsw.c: 137: {
   365  0024AA                     _SetWSW:
   366  000000                     
   367                           ; _sall loaded to fsr2l
   368  0024AA  6ED9               	movwf	fsr2l,c
   369                           ;wsw.c: 139: LCDDATA0=(sall)?0xff:0;
   370  0024AC  50D9               	movf	fsr2l,w,c
   371  0024AE  E102               	bnz	u26
   372  0024B0  0E00               	movlw	0
   373  0024B2  D001               	goto	u28
   374  0024B4                     u26:
   375  0024B4  0EFF               	movlw	255
   376  0024B6                     u28:
   377  0024B6  6EBB               	movwf	4027,c
   378                           ;wsw.c: 140: LCDDATA1=(sall)?0xff:0;
   379  0024B8  50D9               	movf	fsr2l,w,c
   380  0024BA  E102               	bnz	u46
   381  0024BC  0E00               	movlw	0
   382  0024BE  D001               	goto	u48
   383  0024C0                     u46:
   384  0024C0  0EFF               	movlw	255
   385  0024C2                     u48:
   386  0024C2  6EBC               	movwf	4028,c
   387                           ;wsw.c: 141: LCDDATA2=(sall)?0xff:0;
   388  0024C4  50D9               	movf	fsr2l,w,c
   389  0024C6  E102               	bnz	u66
   390  0024C8  0E00               	movlw	0
   391  0024CA  D001               	goto	u68
   392  0024CC                     u66:
   393  0024CC  0EFF               	movlw	255
   394  0024CE                     u68:
   395  0024CE  6EBD               	movwf	4029,c
   396                           ;wsw.c: 142: LCDDATA3=(sall)?0xff:0;
   397  0024D0  50D9               	movf	fsr2l,w,c
   398  0024D2  E102               	bnz	u86
   399  0024D4  0E00               	movlw	0
   400  0024D6  D001               	goto	u88
   401  0024D8                     u86:
   402  0024D8  0EFF               	movlw	255
   403  0024DA                     u88:
   404  0024DA  6EBE               	movwf	4030,c
   405                           ;wsw.c: 144: LCDDATA6=(sall)?0xff:0;
   406  0024DC  50D9               	movf	fsr2l,w,c
   407  0024DE  E102               	bnz	u106
   408  0024E0  0E00               	movlw	0
   409  0024E2  D001               	goto	u108
   410  0024E4                     u106:
   411  0024E4  0EFF               	movlw	255
   412  0024E6                     u108:
   413  0024E6  6E6C               	movwf	3948,c
   414                           ;wsw.c: 145: LCDDATA7=(sall)?0xff:0;
   415  0024E8  50D9               	movf	fsr2l,w,c
   416  0024EA  E102               	bnz	u126
   417  0024EC  0E00               	movlw	0
   418  0024EE  D001               	goto	u128
   419  0024F0                     u126:
   420  0024F0  0EFF               	movlw	255
   421  0024F2                     u128:
   422  0024F2  6E6D               	movwf	3949,c
   423                           ;wsw.c: 146: LCDDATA8=(sall)?0xff:0;
   424  0024F4  50D9               	movf	fsr2l,w,c
   425  0024F6  E102               	bnz	u146
   426  0024F8  0E00               	movlw	0
   427  0024FA  D001               	goto	u148
   428  0024FC                     u146:
   429  0024FC  0EFF               	movlw	255
   430  0024FE                     u148:
   431  0024FE  6E6E               	movwf	3950,c
   432                           ;wsw.c: 147: LCDDATA9=(sall)?0xff:0;
   433  002500  50D9               	movf	fsr2l,w,c
   434  002502  E102               	bnz	u166
   435  002504  0E00               	movlw	0
   436  002506  D001               	goto	u168
   437  002508                     u166:
   438  002508  0EFF               	movlw	255
   439  00250A                     u168:
   440  00250A  6E6F               	movwf	3951,c
   441                           ;wsw.c: 149: LCDDATA12=(sall)?0xff:0;
   442  00250C  50D9               	movf	fsr2l,w,c
   443  00250E  E102               	bnz	u186
   444  002510  0E00               	movlw	0
   445  002512  D001               	goto	u188
   446  002514                     u186:
   447  002514  0EFF               	movlw	255
   448  002516                     u188:
   449  002516  6E72               	movwf	3954,c
   450                           ;wsw.c: 150: LCDDATA13=(sall)?0xff:0;
   451  002518  50D9               	movf	fsr2l,w,c
   452  00251A  E102               	bnz	u206
   453  00251C  0E00               	movlw	0
   454  00251E  D001               	goto	u208
   455  002520                     u206:
   456  002520  0EFF               	movlw	255
   457  002522                     u208:
   458  002522  6E73               	movwf	3955,c
   459                           ;wsw.c: 151: LCDDATA14=(sall)?0xff:0;
   460  002524  50D9               	movf	fsr2l,w,c
   461  002526  E102               	bnz	u226
   462  002528  0E00               	movlw	0
   463  00252A  D001               	goto	u228
   464  00252C                     u226:
   465  00252C  0EFF               	movlw	255
   466  00252E                     u228:
   467  00252E  6E74               	movwf	3956,c
   468                           ;wsw.c: 152: LCDDATA15=(sall)?0xff:0;
   469  002530  50D9               	movf	fsr2l,w,c
   470  002532  E102               	bnz	u246
   471  002534  0E00               	movlw	0
   472  002536  D001               	goto	u248
   473  002538                     u246:
   474  002538  0EFF               	movlw	255
   475  00253A                     u248:
   476  00253A  6E75               	movwf	3957,c
   477                           ;wsw.c: 154: LCDDATA18=(sall)?0xff:0;
   478  00253C  50D9               	movf	fsr2l,w,c
   479  00253E  E102               	bnz	u266
   480  002540  0E00               	movlw	0
   481  002542  D001               	goto	u268
   482  002544                     u266:
   483  002544  0EFF               	movlw	255
   484  002546                     u268:
   485  002546  6E78               	movwf	3960,c
   486                           ;wsw.c: 155: LCDDATA19=(sall)?0xff:0;
   487  002548  50D9               	movf	fsr2l,w,c
   488  00254A  E102               	bnz	u286
   489  00254C  0E00               	movlw	0
   490  00254E  D001               	goto	u288
   491  002550                     u286:
   492  002550  0EFF               	movlw	255
   493  002552                     u288:
   494  002552  6E79               	movwf	3961,c
   495                           ;wsw.c: 156: LCDDATA20=(sall)?0xff:0;
   496  002554  50D9               	movf	fsr2l,w,c
   497  002556  E102               	bnz	u306
   498  002558  0E00               	movlw	0
   499  00255A  D001               	goto	u308
   500  00255C                     u306:
   501  00255C  0EFF               	movlw	255
   502  00255E                     u308:
   503  00255E  6E7A               	movwf	3962,c
   504                           ;wsw.c: 157: LCDDATA21=(sall)?0xff:0;
   505  002560  50D9               	movf	fsr2l,w,c
   506  002562  E102               	bnz	u326
   507  002564  0E00               	movlw	0
   508  002566  D001               	goto	u328
   509  002568                     u326:
   510  002568  0EFF               	movlw	255
   511  00256A                     u328:
   512  00256A  6E7B               	movwf	3963,c
   513                           ;wsw.c: 158: }
   514  00256C  0012               	return	
   515  00256E                     __end_of_SetWSW:
   516                           ;wsw.c: 160: void InitWsw(void)
   517                           ;wsw.c: 161: {
   518  00256E                     _InitWsw:
   519  000000                     
   520                           ;wsw.c: 162: unsigned char i;
   521  00256E  DF67               	call	_InitLCD	;wreg free
   522                           ;wsw.c: 165: for(i=0;i<5-1;i++) PWD[i].St.focus=
      +                          0;
   523  002570  6AD9               	clrf	fsr2l,c
   524  002572                     l19:
   525  002572  50D9               	movf	fsr2l,w,c
   526  002574  0D10               	mullw	16
   527  002576  0E40               	movlw	low _PWD
   528  002578  24F3               	addwf	prodl,w,c
   529  00257A  6EE9               	movwf	fsr0l,c
   530  00257C  0E01               	movlw	high _PWD
   531  00257E  20F4               	addwfc	prodh,w,c
   532  002580  6EEA               	movwf	fsr0h,c
   533  002582  0EFE               	movlw	-2
   534  002584  16EF               	andwf	indf0,f,c
   535  002586  2AD9               	incf	fsr2l,f,c
   536  002588  0E03               	movlw	3
   537  00258A  64D9               	cpfsgt	fsr2l,c
   538  00258C  D7F2               	goto	l19
   539                           ;wsw.c: 167: for(i=0;i<5-1;i++) PWD[i].St2.focus
      +                          =0;
   540  00258E  6AD9               	clrf	fsr2l,c
   541  002590                     l22:
   542  002590  50D9               	movf	fsr2l,w,c
   543  002592  0D10               	mullw	16
   544  002594  0E4A               	movlw	low (_PWD+10)
   545  002596  24F3               	addwf	prodl,w,c
   546  002598  6EE9               	movwf	fsr0l,c
   547  00259A  0E01               	movlw	high (_PWD+10)
   548  00259C  20F4               	addwfc	prodh,w,c
   549  00259E  6EEA               	movwf	fsr0h,c
   550  0025A0  0EFE               	movlw	-2
   551  0025A2  16EF               	andwf	indf0,f,c
   552  0025A4  2AD9               	incf	fsr2l,f,c
   553  0025A6  0E03               	movlw	3
   554  0025A8  64D9               	cpfsgt	fsr2l,c
   555  0025AA  D7F2               	goto	l22
   556                           ;wsw.c: 170: for(i=0;i<16;i++) KMark[i].focus=0;
   557  0025AC  6AD9               	clrf	fsr2l,c
   558  0025AE                     l25:
   559  0025AE  50D9               	movf	fsr2l,w,c
   560  0025B0  EE07  F07C         	lfsr	0,_KMark
   561  0025B4  26E9               	addwf	fsr0l,f,c
   562  0025B6  0E00               	movlw	0
   563  0025B8  22EA               	addwfc	fsr0h,f,c
   564  0025BA  0EFE               	movlw	-2
   565  0025BC  16EF               	andwf	indf0,f,c
   566  0025BE  2AD9               	incf	fsr2l,f,c
   567  0025C0  0E0F               	movlw	15
   568  0025C2  64D9               	cpfsgt	fsr2l,c
   569  0025C4  D7F4               	goto	l25
   570  0025C6  0C0F               	retlw	15
   571                           ;wsw.c: 189: }
   572  0025C8                     __end_of_InitWsw:
   573                           ;wsw.c: 403: const unsigned char Znak[16]={
   574                           ;wsw.c: 404: 0b00111111,
   575                           ;wsw.c: 405: 0b00000110,
   576                           ;wsw.c: 406: 0b01011011,
   577                           ;wsw.c: 407: 0b01001111,
   578                           ;wsw.c: 408: 0b01100110,
   579                           ;wsw.c: 409: 0b01101101,
   580                           ;wsw.c: 410: 0b01111101,
   581                           ;wsw.c: 411: 0b00000111,
   582                           ;wsw.c: 412: 0b01111111,
   583                           ;wsw.c: 413: 0b01101111,
   584                           ;wsw.c: 414: 0b01110111,
   585                           ;wsw.c: 415: 0b01111100,
   586                           ;wsw.c: 416: 0b00111001,
   587                           ;wsw.c: 417: 0b01011110,
   588                           ;wsw.c: 418: 0b01111001,
   589                           ;wsw.c: 419: 0b01110001,
   590                           ;wsw.c: 420: };
   591                           ;wsw.c: 448: void RefreshWSW(void)
   592                           ;wsw.c: 449: {
   593  0025C8                     _RefreshWSW:
   594  000000                     
   595                           ;wsw.c: 451: KolProc();
   596  0025C8  D808               	call	_KolProc	;wreg free
   597                           ;wsw.c: 454: KolMark();
   598  0025CA  ECB7  F018         	call	_KolMark	;wreg free
   599                           ;wsw.c: 456: SetPrWswData();
   600  0025CE  ECFC  F018         	call	_SetPrWswData	;wreg free
   601                           ;wsw.c: 457: FormatWswData();
   602  0025D2  EC29  F01A         	call	_FormatWswData	;wreg free
   603                           ;wsw.c: 458: PrintWswData();
   604  0025D6  EFE7  F01A         	goto	_PrintWswData	;wreg free
   605                           ;wsw.c: 459: }
   606  0025DA                     __end_of_RefreshWSW:
   607                           ;wsw.c: 464: void KolProc(void)
   608                           ;wsw.c: 465: {
   609  0025DA                     _KolProc:
   610  000000                     
   611                           ;_cadr stored from fsr0
   612                           ;_cadr stored from fsr0
   613                           ;wsw.c: 466: unsigned char i,j,k,l,nC,kk;
   614  0025DA  6AD9               	clrf	fsr2l,c
   615  0025DC                     l30:
   616                           ;wsw.c: 471: {
   617  0025DC  50D9               	movf	fsr2l,w,c
   618  0025DE  0D03               	mullw	3
   619  0025E0  50F3               	movf	prodl,w,c
   620  0025E2  0F35               	addlw	low _Klj
   621  0025E4  6EF6               	movwf	tblptrl,c
   622  0025E6  50F4               	movf	prodh,w,c
   623  0025E8  6EF7               	movwf	tblptrh,c
   624  0025EA  0E08               	movlw	high _Klj
   625  0025EC  22F7               	addwfc	tblptrh,f,c
   626  0025EE  0009               	tblrd		*+
   627  0025F0  CFF5 F000          	movff	tablat,btemp
   628  0025F4  0009               	tblrd		*+
   629  0025F6  CFF5 F001          	movff	tablat,btemp+1
   630  0025FA  0E06               	movlw	6
   631  0025FC  2600               	addwf	btemp,f,c
   632  0025FE  0E00               	movlw	0
   633  002600  2201               	addwfc	btemp+1,f,c
   634  002602  C000  FFF6         	movff	btemp,tblptrl
   635  002606  C001  FFF7         	movff	btemp+1,tblptrh
   636  00260A  0E07               	movlw	(high __ramtop+-1)
   637  00260C  64F7               	cpfsgt	tblptrh,c
   638  00260E  D007               	bra	u367
   639  002610  0009               	tblrd		*+
   640  002612  CFF5 F000          	movff	tablat,btemp
   641  002616  0009               	tblrd		*+
   642  002618  CFF5 F001          	movff	tablat,btemp+1
   643  00261C  D008               	bra	u360
   644  00261E                     u367:
   645  00261E  CFF6 FFE1          	movff	tblptrl,fsr1l
   646  002622  CFF7 FFE2          	movff	tblptrh,fsr1h
   647  002626  CFE6 F000          	movff	postinc1,btemp
   648  00262A  CFE6 F001          	movff	postinc1,btemp+1
   649  00262E                     u360:
   650  00262E  C000  FFF6         	movff	btemp,tblptrl
   651  002632  C001  FFF7         	movff	btemp+1,tblptrh
   652  002636  0E07               	movlw	(high __ramtop+-1)
   653  002638  64F7               	cpfsgt	tblptrh,c
   654  00263A  D007               	bra	u377
   655  00263C  0009               	tblrd		*+
   656  00263E  CFF5 FFE9          	movff	tablat,fsr0l
   657  002642  0009               	tblrd		*+
   658  002644  CFF5 FFEA          	movff	tablat,fsr0h
   659  002648  D008               	bra	u370
   660  00264A                     u377:
   661  00264A  CFF6 FFE1          	movff	tblptrl,fsr1l
   662  00264E  CFF7 FFE2          	movff	tblptrh,fsr1h
   663  002652  CFE6 FFE9          	movff	postinc1,fsr0l
   664  002656  CFE6 FFEA          	movff	postinc1,fsr0h
   665  00265A                     u370:
   666                           ;wsw.c: 475: nC=(*(*Klj[j].KL).KOut).nCykli;
   667  00265A  50D9               	movf	fsr2l,w,c
   668  00265C  0D03               	mullw	3
   669  00265E  50F3               	movf	prodl,w,c
   670  002660  0F35               	addlw	low _Klj
   671  002662  6EF6               	movwf	tblptrl,c
   672  002664  50F4               	movf	prodh,w,c
   673  002666  6EF7               	movwf	tblptrh,c
   674  002668  0E08               	movlw	high _Klj
   675  00266A  22F7               	addwfc	tblptrh,f,c
   676  00266C  0009               	tblrd		*+
   677  00266E  CFF5 F000          	movff	tablat,btemp
   678  002672  0009               	tblrd		*+
   679  002674  CFF5 F001          	movff	tablat,btemp+1
   680  002678  0E06               	movlw	6
   681  00267A  2600               	addwf	btemp,f,c
   682  00267C  0E00               	movlw	0
   683  00267E  2201               	addwfc	btemp+1,f,c
   684  002680  C000  FFF6         	movff	btemp,tblptrl
   685  002684  C001  FFF7         	movff	btemp+1,tblptrh
   686  002688  0E07               	movlw	(high __ramtop+-1)
   687  00268A  64F7               	cpfsgt	tblptrh,c
   688  00268C  D007               	bra	u387
   689  00268E  0009               	tblrd		*+
   690  002690  CFF5 F000          	movff	tablat,btemp
   691  002694  0009               	tblrd		*+
   692  002696  CFF5 F001          	movff	tablat,btemp+1
   693  00269A  D008               	bra	u380
   694  00269C                     u387:
   695  00269C  CFF6 FFE1          	movff	tblptrl,fsr1l
   696  0026A0  CFF7 FFE2          	movff	tblptrh,fsr1h
   697  0026A4  CFE6 F000          	movff	postinc1,btemp
   698  0026A8  CFE6 F001          	movff	postinc1,btemp+1
   699  0026AC                     u380:
   700  0026AC  0E02               	movlw	2
   701  0026AE  2600               	addwf	btemp,f,c
   702  0026B0  0E00               	movlw	0
   703  0026B2  2201               	addwfc	btemp+1,f,c
   704  0026B4  C000  FFF6         	movff	btemp,tblptrl
   705  0026B8  C001  FFF7         	movff	btemp+1,tblptrh
   706  0026BC  0E07               	movlw	(high __ramtop+-1)
   707  0026BE  64F7               	cpfsgt	tblptrh,c
   708  0026C0  D003               	bra	u397
   709  0026C2  0008               	tblrd		*
   710  0026C4  50F5               	movf	tablat,w,c
   711  0026C6  D005               	bra	u390
   712  0026C8                     u397:
   713  0026C8  CFF6 FFE1          	movff	tblptrl,fsr1l
   714  0026CC  CFF7 FFE2          	movff	tblptrh,fsr1h
   715  0026D0  50E7               	movf	indf1,w,c
   716  0026D2                     u390:
   717  0026D2  0100               	movlb	__Lparam shr (0+8)
   718  0026D4  6FF7               	movwf	(?a_KolProc+2)^(__Lparam& (0+65280)),b
   719                           ;wsw.c: 476: if((KInd[j].reset)||(nC&&KTim[j].cy
      +                          kl>=nC))
   720  0026D6  50D9               	movf	fsr2l,w,c
   721  0026D8  0D02               	mullw	2
   722  0026DA  0E00               	movlw	low _KInd
   723  0026DC  24F3               	addwf	prodl,w,c
   724  0026DE  6EE1               	movwf	fsr1l,c
   725  0026E0  0E01               	movlw	high _KInd
   726  0026E2  20F4               	addwfc	prodh,w,c
   727  0026E4  6EE2               	movwf	fsr1h,c
   728  0026E6  50E7               	movf	indf1,w,c
   729  0026E8  6E00               	movwf	btemp,c
   730  0026EA  B600               	btfsc	btemp,3,c
   731  0026EC  D00F               	goto	u440
   732  0026EE  51F7               	movf	(?a_KolProc+2)^(__Lparam& (0+65280)),w
   733  0026F0  E065               	bz	l33
   734  0026F2  50D9               	movf	fsr2l,w,c
   735  0026F4  0D03               	mullw	3
   736  0026F6  0E10               	movlw	low (_KTim+2)
   737  0026F8  24F3               	addwf	prodl,w,c
   738  0026FA  6EE1               	movwf	fsr1l,c
   739  0026FC  0E01               	movlw	high (_KTim+2)
   740  0026FE  20F4               	addwfc	prodh,w,c
   741  002700  6EE2               	movwf	fsr1h,c
   742  002702  50E7               	movf	indf1,w,c
   743  002704  6E00               	movwf	btemp,c
   744  002706  51F7               	movf	(?a_KolProc+2)^(__Lparam& (0+65280)),w
   745  002708  5C00               	subwf	btemp,w,c
   746  00270A  E358               	bnc	l33
   747  00270C                     u440:
   748                           ;wsw.c: 477: {
   749  00270C  50D9               	movf	fsr2l,w,c
   750  00270E  0D03               	mullw	3
   751  002710  0E10               	movlw	low (_KTim+2)
   752  002712  24F3               	addwf	prodl,w,c
   753  002714  6EE1               	movwf	fsr1l,c
   754  002716  0E01               	movlw	high (_KTim+2)
   755  002718  20F4               	addwfc	prodh,w,c
   756  00271A  6EE2               	movwf	fsr1h,c
   757  00271C  6AE7               	clrf	indf1,c
   758                           ;wsw.c: 479: KInd[j].reset=0;
   759  00271E  50D9               	movf	fsr2l,w,c
   760  002720  0D02               	mullw	2
   761  002722  0E00               	movlw	low _KInd
   762  002724  24F3               	addwf	prodl,w,c
   763  002726  6EE1               	movwf	fsr1l,c
   764  002728  0E01               	movlw	high _KInd
   765  00272A  20F4               	addwfc	prodh,w,c
   766  00272C  6EE2               	movwf	fsr1h,c
   767  00272E  0EF7               	movlw	-9
   768  002730  16E7               	andwf	indf1,f,c
   769                           ;wsw.c: 480: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j]
      +                          .KL).KFc[i].focus=0;
   770  002732  6A02               	clrf	btemp+2,c
   771  002734                     l37:
   772  002734  50D9               	movf	fsr2l,w,c
   773  002736  0D03               	mullw	3
   774  002738  50F3               	movf	prodl,w,c
   775  00273A  0F35               	addlw	low _Klj
   776  00273C  6EF6               	movwf	tblptrl,c
   777  00273E  50F4               	movf	prodh,w,c
   778  002740  6EF7               	movwf	tblptrh,c
   779  002742  0E08               	movlw	high _Klj
   780  002744  22F7               	addwfc	tblptrh,f,c
   781  002746  0E02               	movlw	2
   782  002748  26F6               	addwf	tblptrl,f,c
   783  00274A  0E00               	movlw	0
   784  00274C  22F7               	addwfc	tblptrh,f,c
   785  00274E  0008               	tblrd		*
   786  002750  50F5               	movf	tablat,w,c
   787  002752  5C02               	subwf	btemp+2,w,c
   788  002754  E233               	bc	l33
   789  002756  50D9               	movf	fsr2l,w,c
   790  002758  0D03               	mullw	3
   791  00275A  50F3               	movf	prodl,w,c
   792  00275C  0F35               	addlw	low _Klj
   793  00275E  6EF6               	movwf	tblptrl,c
   794  002760  50F4               	movf	prodh,w,c
   795  002762  6EF7               	movwf	tblptrh,c
   796  002764  0E08               	movlw	high _Klj
   797  002766  22F7               	addwfc	tblptrh,f,c
   798  002768  0009               	tblrd		*+
   799  00276A  CFF5 F000          	movff	tablat,btemp
   800  00276E  0009               	tblrd		*+
   801  002770  CFF5 F001          	movff	tablat,btemp+1
   802  002774  0E04               	movlw	4
   803  002776  2600               	addwf	btemp,f,c
   804  002778  0E00               	movlw	0
   805  00277A  2201               	addwfc	btemp+1,f,c
   806  00277C  C000  FFF6         	movff	btemp,tblptrl
   807  002780  C001  FFF7         	movff	btemp+1,tblptrh
   808  002784  0E07               	movlw	(high __ramtop+-1)
   809  002786  64F7               	cpfsgt	tblptrh,c
   810  002788  D007               	bra	u457
   811  00278A  0009               	tblrd		*+
   812  00278C  CFF5 F000          	movff	tablat,btemp
   813  002790  0009               	tblrd		*+
   814  002792  CFF5 F001          	movff	tablat,btemp+1
   815  002796  D008               	bra	u450
   816  002798                     u457:
   817  002798  CFF6 FFE1          	movff	tblptrl,fsr1l
   818  00279C  CFF7 FFE2          	movff	tblptrh,fsr1h
   819  0027A0  CFE6 F000          	movff	postinc1,btemp
   820  0027A4  CFE6 F001          	movff	postinc1,btemp+1
   821  0027A8                     u450:
   822  0027A8  5002               	movf	btemp+2,w,c
   823  0027AA  2400               	addwf	btemp,w,c
   824  0027AC  6EE1               	movwf	fsr1l,c
   825  0027AE  0E00               	movlw	0
   826  0027B0  2001               	addwfc	btemp+1,w,c
   827  0027B2  6EE2               	movwf	fsr1h,c
   828  0027B4  0EFE               	movlw	-2
   829  0027B6  16E7               	andwf	indf1,f,c
   830  0027B8  2A02               	incf	btemp+2,f,c
   831  0027BA  D7BC               	goto	l37
   832  0027BC                     l33:
   833                           ;wsw.c: 481: }
   834  0027BC  50D9               	movf	fsr2l,w,c
   835  0027BE  0D02               	mullw	2
   836  0027C0  0E00               	movlw	low _KInd
   837  0027C2  24F3               	addwf	prodl,w,c
   838  0027C4  6EE1               	movwf	fsr1l,c
   839  0027C6  0E01               	movlw	high _KInd
   840  0027C8  20F4               	addwfc	prodh,w,c
   841  0027CA  6EE2               	movwf	fsr1h,c
   842  0027CC  50E7               	movf	indf1,w,c
   843  0027CE  6E00               	movwf	btemp,c
   844  0027D0  B400               	btfsc	btemp,2,c
   845  0027D2  D00C               	goto	u490
   846  0027D4  50D9               	movf	fsr2l,w,c
   847  0027D6  0D02               	mullw	2
   848  0027D8  0E00               	movlw	low _KInd
   849  0027DA  24F3               	addwf	prodl,w,c
   850  0027DC  6EE1               	movwf	fsr1l,c
   851  0027DE  0E01               	movlw	high _KInd
   852  0027E0  20F4               	addwfc	prodh,w,c
   853  0027E2  6EE2               	movwf	fsr1h,c
   854  0027E4  50E7               	movf	indf1,w,c
   855  0027E6  6E00               	movwf	btemp,c
   856  0027E8  A200               	btfss	btemp,1,c
   857  0027EA  D053               	goto	l38
   858  0027EC                     u490:
   859  0027EC  0100               	movlb	__Lparam shr (0+8)
   860  0027EE  51F7               	movf	(?a_KolProc+2)^(__Lparam& (0+65280)),w
   861  0027F0  E050               	bz	l38
   862                           ;wsw.c: 484: {
   863  0027F2  50D9               	movf	fsr2l,w,c
   864  0027F4  0D03               	mullw	3
   865  0027F6  0E10               	movlw	low (_KTim+2)
   866  0027F8  24F3               	addwf	prodl,w,c
   867  0027FA  6EE1               	movwf	fsr1l,c
   868  0027FC  0E01               	movlw	high (_KTim+2)
   869  0027FE  20F4               	addwfc	prodh,w,c
   870  002800  6EE2               	movwf	fsr1h,c
   871  002802  6AE7               	clrf	indf1,c
   872                           ;wsw.c: 486: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j]
      +                          .KL).KFc[i].focus=1;
   873  002804  6A02               	clrf	btemp+2,c
   874  002806                     l42:
   875  002806  50D9               	movf	fsr2l,w,c
   876  002808  0D03               	mullw	3
   877  00280A  50F3               	movf	prodl,w,c
   878  00280C  0F35               	addlw	low _Klj
   879  00280E  6EF6               	movwf	tblptrl,c
   880  002810  50F4               	movf	prodh,w,c
   881  002812  6EF7               	movwf	tblptrh,c
   882  002814  0E08               	movlw	high _Klj
   883  002816  22F7               	addwfc	tblptrh,f,c
   884  002818  0E02               	movlw	2
   885  00281A  26F6               	addwf	tblptrl,f,c
   886  00281C  0E00               	movlw	0
   887  00281E  22F7               	addwfc	tblptrh,f,c
   888  002820  0008               	tblrd		*
   889  002822  50F5               	movf	tablat,w,c
   890  002824  5C02               	subwf	btemp+2,w,c
   891  002826  E235               	bc	l38
   892  002828  50D9               	movf	fsr2l,w,c
   893  00282A  0D03               	mullw	3
   894  00282C  50F3               	movf	prodl,w,c
   895  00282E  0F35               	addlw	low _Klj
   896  002830  6EF6               	movwf	tblptrl,c
   897  002832  50F4               	movf	prodh,w,c
   898  002834  6EF7               	movwf	tblptrh,c
   899  002836  0E08               	movlw	high _Klj
   900  002838  22F7               	addwfc	tblptrh,f,c
   901  00283A  0009               	tblrd		*+
   902  00283C  CFF5 F000          	movff	tablat,btemp
   903  002840  0009               	tblrd		*+
   904  002842  CFF5 F001          	movff	tablat,btemp+1
   905  002846  0E04               	movlw	4
   906  002848  2600               	addwf	btemp,f,c
   907  00284A  0E00               	movlw	0
   908  00284C  2201               	addwfc	btemp+1,f,c
   909  00284E  C000  FFF6         	movff	btemp,tblptrl
   910  002852  C001  FFF7         	movff	btemp+1,tblptrh
   911  002856  0E07               	movlw	(high __ramtop+-1)
   912  002858  64F7               	cpfsgt	tblptrh,c
   913  00285A  D007               	bra	u527
   914  00285C  0009               	tblrd		*+
   915  00285E  CFF5 F000          	movff	tablat,btemp
   916  002862  0009               	tblrd		*+
   917  002864  CFF5 F001          	movff	tablat,btemp+1
   918  002868  D008               	bra	u520
   919  00286A                     u527:
   920  00286A  CFF6 FFE1          	movff	tblptrl,fsr1l
   921  00286E  CFF7 FFE2          	movff	tblptrh,fsr1h
   922  002872  CFE6 F000          	movff	postinc1,btemp
   923  002876  CFE6 F001          	movff	postinc1,btemp+1
   924  00287A                     u520:
   925  00287A  5002               	movf	btemp+2,w,c
   926  00287C  2400               	addwf	btemp,w,c
   927  00287E  6EE1               	movwf	fsr1l,c
   928  002880  0E00               	movlw	0
   929  002882  2001               	addwfc	btemp+1,w,c
   930  002884  6EE2               	movwf	fsr1h,c
   931  002886  50E7               	movf	indf1,w,c
   932  002888  0BFE               	andlw	-2
   933  00288A  0901               	iorlw	1
   934  00288C  6EE7               	movwf	indf1,c
   935  00288E  2A02               	incf	btemp+2,f,c
   936  002890  D7BA               	goto	l42
   937  002892                     l38:
   938                           ;wsw.c: 487: }
   939  002892  50D9               	movf	fsr2l,w,c
   940  002894  0D02               	mullw	2
   941  002896  0E00               	movlw	low _KInd
   942  002898  24F3               	addwf	prodl,w,c
   943  00289A  6EE1               	movwf	fsr1l,c
   944  00289C  0E01               	movlw	high _KInd
   945  00289E  20F4               	addwfc	prodh,w,c
   946  0028A0  6EE2               	movwf	fsr1h,c
   947  0028A2  50E7               	movf	indf1,w,c
   948  0028A4  6E00               	movwf	btemp,c
   949  0028A6  B400               	btfsc	btemp,2,c
   950  0028A8  D00E               	goto	u580
   951  0028AA  50EF               	movf	indf0,w,c
   952  0028AC  6E00               	movwf	btemp,c
   953  0028AE  B000               	btfsc	btemp,0,c
   954  0028B0  D054               	goto	l43
   955  0028B2  EE10 F00A          	lfsr	1,10
   956  0028B6  50E9               	movf	fsr0l,w,c
   957  0028B8  26E1               	addwf	fsr1l,f,c
   958  0028BA  50EA               	movf	fsr0h,w,c
   959  0028BC  22E2               	addwfc	fsr1h,f,c
   960  0028BE  50E7               	movf	indf1,w,c
   961  0028C0  6E00               	movwf	btemp,c
   962  0028C2  B000               	btfsc	btemp,0,c
   963  0028C4  D04A               	goto	l43
   964  0028C6                     u580:
   965                           ;wsw.c: 510: {
   966  0028C6  50D9               	movf	fsr2l,w,c
   967  0028C8  0D02               	mullw	2
   968  0028CA  0E00               	movlw	low _KInd
   969  0028CC  24F3               	addwf	prodl,w,c
   970  0028CE  6EE1               	movwf	fsr1l,c
   971  0028D0  0E01               	movlw	high _KInd
   972  0028D2  20F4               	addwfc	prodh,w,c
   973  0028D4  6EE2               	movwf	fsr1h,c
   974  0028D6  0EFB               	movlw	-5
   975  0028D8  16E7               	andwf	indf1,f,c
   976                           ;wsw.c: 520: KInd[j].indeks=0;
   977  0028DA  50D9               	movf	fsr2l,w,c
   978  0028DC  0D02               	mullw	2
   979  0028DE  0E01               	movlw	low (_KInd+1)
   980  0028E0  24F3               	addwf	prodl,w,c
   981  0028E2  6EE1               	movwf	fsr1l,c
   982  0028E4  0E01               	movlw	high (_KInd+1)
   983  0028E6  20F4               	addwfc	prodh,w,c
   984  0028E8  6EE2               	movwf	fsr1h,c
   985  0028EA  0EC0               	movlw	-64
   986  0028EC  16E7               	andwf	indf1,f,c
   987                           ;wsw.c: 521: KTim[j].ncS=0;
   988  0028EE  50D9               	movf	fsr2l,w,c
   989  0028F0  0D03               	mullw	3
   990  0028F2  0E0E               	movlw	low _KTim
   991  0028F4  24F3               	addwf	prodl,w,c
   992  0028F6  6EE1               	movwf	fsr1l,c
   993  0028F8  0E01               	movlw	high _KTim
   994  0028FA  20F4               	addwfc	prodh,w,c
   995  0028FC  6EE2               	movwf	fsr1h,c
   996  0028FE  6AE7               	clrf	indf1,c
   997                           ;wsw.c: 522: KTim[j].ndS=0;
   998  002900  50D9               	movf	fsr2l,w,c
   999  002902  0D03               	mullw	3
  1000  002904  0E0F               	movlw	low (_KTim+1)
  1001  002906  24F3               	addwf	prodl,w,c
  1002  002908  6EE1               	movwf	fsr1l,c
  1003  00290A  0E01               	movlw	high (_KTim+1)
  1004  00290C  20F4               	addwfc	prodh,w,c
  1005  00290E  6EE2               	movwf	fsr1h,c
  1006  002910  6AE7               	clrf	indf1,c
  1007                           ;wsw.c: 524: if(KInd[j].restart1&&KInd[j].restar
      +                          t2) KInd[j].indeks=1;
  1008  002912  50D9               	movf	fsr2l,w,c
  1009  002914  0D02               	mullw	2
  1010  002916  0E00               	movlw	low _KInd
  1011  002918  24F3               	addwf	prodl,w,c
  1012  00291A  6EE1               	movwf	fsr1l,c
  1013  00291C  0E01               	movlw	high _KInd
  1014  00291E  20F4               	addwfc	prodh,w,c
  1015  002920  6EE2               	movwf	fsr1h,c
  1016  002922  50E7               	movf	indf1,w,c
  1017  002924  6E00               	movwf	btemp,c
  1018  002926  A200               	btfss	btemp,1,c
  1019  002928  D018               	goto	l43
  1020  00292A  50D9               	movf	fsr2l,w,c
  1021  00292C  0D02               	mullw	2
  1022  00292E  0E00               	movlw	low _KInd
  1023  002930  24F3               	addwf	prodl,w,c
  1024  002932  6EE1               	movwf	fsr1l,c
  1025  002934  0E01               	movlw	high _KInd
  1026  002936  20F4               	addwfc	prodh,w,c
  1027  002938  6EE2               	movwf	fsr1h,c
  1028  00293A  50E7               	movf	indf1,w,c
  1029  00293C  6E00               	movwf	btemp,c
  1030  00293E  A000               	btfss	btemp,0,c
  1031  002940  D00C               	goto	l43
  1032  002942  50D9               	movf	fsr2l,w,c
  1033  002944  0D02               	mullw	2
  1034  002946  0E01               	movlw	low (_KInd+1)
  1035  002948  24F3               	addwf	prodl,w,c
  1036  00294A  6EE1               	movwf	fsr1l,c
  1037  00294C  0E01               	movlw	high (_KInd+1)
  1038  00294E  20F4               	addwfc	prodh,w,c
  1039  002950  6EE2               	movwf	fsr1h,c
  1040  002952  50E7               	movf	indf1,w,c
  1041  002954  0BC0               	andlw	-64
  1042  002956  0901               	iorlw	1
  1043  002958  6EE7               	movwf	indf1,c
  1044  00295A                     l43:
  1045                           ;wsw.c: 525: }
  1046  00295A  0EFE               	movlw	-2
  1047  00295C  16EF               	andwf	indf0,f,c
  1048                           ;wsw.c: 527: (*cadr).St2.focus=0;
  1049  00295E  EE10 F00A          	lfsr	1,10
  1050  002962  50E9               	movf	fsr0l,w,c
  1051  002964  26E1               	addwf	fsr1l,f,c
  1052  002966  50EA               	movf	fsr0h,w,c
  1053  002968  22E2               	addwfc	fsr1h,f,c
  1054  00296A  0EFE               	movlw	-2
  1055  00296C  16E7               	andwf	indf1,f,c
  1056                           ;wsw.c: 529: for(i=KInd[j].indeks;i<Klj[j].nPzc;
      +                          i++)
  1057  00296E  50D9               	movf	fsr2l,w,c
  1058  002970  0D02               	mullw	2
  1059  002972  0E01               	movlw	low (_KInd+1)
  1060  002974  24F3               	addwf	prodl,w,c
  1061  002976  6EE1               	movwf	fsr1l,c
  1062  002978  0E01               	movlw	high (_KInd+1)
  1063  00297A  20F4               	addwfc	prodh,w,c
  1064  00297C  6EE2               	movwf	fsr1h,c
  1065  00297E  50E7               	movf	indf1,w,c
  1066  002980  0B3F               	andlw	63
  1067  002982  0100               	movlb	__Lparam shr (0+8)
  1068  002984  6FF8               	movwf	(?a_KolProc+3)^(__Lparam& (0+65280)),b
  1069  002986                     l48:
  1070  002986  50D9               	movf	fsr2l,w,c
  1071  002988  0D03               	mullw	3
  1072  00298A  50F3               	movf	prodl,w,c
  1073  00298C  0F35               	addlw	low _Klj
  1074  00298E  6EF6               	movwf	tblptrl,c
  1075  002990  50F4               	movf	prodh,w,c
  1076  002992  6EF7               	movwf	tblptrh,c
  1077  002994  0E08               	movlw	high _Klj
  1078  002996  22F7               	addwfc	tblptrh,f,c
  1079  002998  0E02               	movlw	2
  1080  00299A  26F6               	addwf	tblptrl,f,c
  1081  00299C  0E00               	movlw	0
  1082  00299E  22F7               	addwfc	tblptrh,f,c
  1083  0029A0  0008               	tblrd		*
  1084  0029A2  50F5               	movf	tablat,w,c
  1085  0029A4  0100               	movlb	__Lparam shr (0+8)
  1086  0029A6  5DF8               	subwf	(?a_KolProc+3)^(__Lparam& (0+65280)),w
  1087  0029A8  E301 D3DB          	bc	l46
  1088                           ;wsw.c: 530: {
  1089  0029AC  50D9               	movf	fsr2l,w,c
  1090  0029AE  0D03               	mullw	3
  1091  0029B0  50F3               	movf	prodl,w,c
  1092  0029B2  0F35               	addlw	low _Klj
  1093  0029B4  6EF6               	movwf	tblptrl,c
  1094  0029B6  50F4               	movf	prodh,w,c
  1095  0029B8  6EF7               	movwf	tblptrh,c
  1096  0029BA  0E08               	movlw	high _Klj
  1097  0029BC  22F7               	addwfc	tblptrh,f,c
  1098  0029BE  0009               	tblrd		*+
  1099  0029C0  CFF5 F000          	movff	tablat,btemp
  1100  0029C4  0009               	tblrd		*+
  1101  0029C6  CFF5 F001          	movff	tablat,btemp+1
  1102  0029CA  C000  FFF6         	movff	btemp,tblptrl
  1103  0029CE  C001  FFF7         	movff	btemp+1,tblptrh
  1104  0029D2  0E07               	movlw	(high __ramtop+-1)
  1105  0029D4  64F7               	cpfsgt	tblptrh,c
  1106  0029D6  D007               	bra	u627
  1107  0029D8  0009               	tblrd		*+
  1108  0029DA  CFF5 F000          	movff	tablat,btemp
  1109  0029DE  0009               	tblrd		*+
  1110  0029E0  CFF5 F001          	movff	tablat,btemp+1
  1111  0029E4  D008               	bra	u620
  1112  0029E6                     u627:
  1113  0029E6  CFF6 FFE1          	movff	tblptrl,fsr1l
  1114  0029EA  CFF7 FFE2          	movff	tblptrh,fsr1h
  1115  0029EE  CFE6 F000          	movff	postinc1,btemp
  1116  0029F2  CFE6 F001          	movff	postinc1,btemp+1
  1117  0029F6                     u620:
  1118  0029F6  0100               	movlb	__Lparam shr (0+8)
  1119  0029F8  51F8               	movf	(?a_KolProc+3)^(__Lparam& (0+65280)),w
  1120  0029FA  0D02               	mullw	2
  1121  0029FC  5000               	movf	btemp,w,c
  1122  0029FE  24F3               	addwf	prodl,w,c
  1123  002A00  6E02               	movwf	btemp+2,c
  1124  002A02  5001               	movf	btemp+1,w,c
  1125  002A04  20F4               	addwfc	prodh,w,c
  1126  002A06  6E03               	movwf	btemp+3,c
  1127  002A08  C002  FFF6         	movff	btemp+2,tblptrl
  1128  002A0C  C003  FFF7         	movff	btemp+3,tblptrh
  1129  002A10  0E07               	movlw	(high __ramtop+-1)
  1130  002A12  64F7               	cpfsgt	tblptrh,c
  1131  002A14  D007               	bra	u637
  1132  002A16  0009               	tblrd		*+
  1133  002A18  CFF5 F0F9          	movff	tablat,?a_KolProc+4
  1134  002A1C  0009               	tblrd		*+
  1135  002A1E  CFF5 F0FA          	movff	tablat,?a_KolProc+5
  1136  002A22  D008               	bra	u630
  1137  002A24                     u637:
  1138  002A24  CFF6 FFE1          	movff	tblptrl,fsr1l
  1139  002A28  CFF7 FFE2          	movff	tblptrh,fsr1h
  1140  002A2C  CFE6 F0F9          	movff	postinc1,?a_KolProc+4
  1141  002A30  CFE6 F0FA          	movff	postinc1,?a_KolProc+5
  1142  002A34                     u630:
  1143                           ;wsw.c: 533: if (!(*Klj[j].KL).KFc[i].focus)
  1144  002A34  50D9               	movf	fsr2l,w,c
  1145  002A36  0D03               	mullw	3
  1146  002A38  50F3               	movf	prodl,w,c
  1147  002A3A  0F35               	addlw	low _Klj
  1148  002A3C  6EF6               	movwf	tblptrl,c
  1149  002A3E  50F4               	movf	prodh,w,c
  1150  002A40  6EF7               	movwf	tblptrh,c
  1151  002A42  0E08               	movlw	high _Klj
  1152  002A44  22F7               	addwfc	tblptrh,f,c
  1153  002A46  0009               	tblrd		*+
  1154  002A48  CFF5 F000          	movff	tablat,btemp
  1155  002A4C  0009               	tblrd		*+
  1156  002A4E  CFF5 F001          	movff	tablat,btemp+1
  1157  002A52  0E04               	movlw	4
  1158  002A54  2600               	addwf	btemp,f,c
  1159  002A56  0E00               	movlw	0
  1160  002A58  2201               	addwfc	btemp+1,f,c
  1161  002A5A  C000  FFF6         	movff	btemp,tblptrl
  1162  002A5E  C001  FFF7         	movff	btemp+1,tblptrh
  1163  002A62  0E07               	movlw	(high __ramtop+-1)
  1164  002A64  64F7               	cpfsgt	tblptrh,c
  1165  002A66  D007               	bra	u647
  1166  002A68  0009               	tblrd		*+
  1167  002A6A  CFF5 F000          	movff	tablat,btemp
  1168  002A6E  0009               	tblrd		*+
  1169  002A70  CFF5 F001          	movff	tablat,btemp+1
  1170  002A74  D008               	bra	u640
  1171  002A76                     u647:
  1172  002A76  CFF6 FFE1          	movff	tblptrl,fsr1l
  1173  002A7A  CFF7 FFE2          	movff	tblptrh,fsr1h
  1174  002A7E  CFE6 F000          	movff	postinc1,btemp
  1175  002A82  CFE6 F001          	movff	postinc1,btemp+1
  1176  002A86                     u640:
  1177  002A86  51F8               	movf	(?a_KolProc+3)^(__Lparam& (0+65280)),w
  1178  002A88  2400               	addwf	btemp,w,c
  1179  002A8A  6EE1               	movwf	fsr1l,c
  1180  002A8C  0E00               	movlw	0
  1181  002A8E  2001               	addwfc	btemp+1,w,c
  1182  002A90  6EE2               	movwf	fsr1h,c
  1183  002A92  50E7               	movf	indf1,w,c
  1184  002A94  6E00               	movwf	btemp,c
  1185                           ;wsw.c: 534: {
  1186  002A96  50D9               	movf	fsr2l,w,c
  1187  002A98  B000               	btfsc	btemp,0,c
  1188  002A9A  D02D               	goto	L8
  1189  002A9C  0D03               	mullw	3
  1190  002A9E  50F3               	movf	prodl,w,c
  1191  002AA0  0F35               	addlw	low _Klj
  1192  002AA2  6EF6               	movwf	tblptrl,c
  1193  002AA4  50F4               	movf	prodh,w,c
  1194  002AA6  6EF7               	movwf	tblptrh,c
  1195  002AA8  0E08               	movlw	high _Klj
  1196  002AAA  22F7               	addwfc	tblptrh,f,c
  1197  002AAC  0E02               	movlw	2
  1198  002AAE  26F6               	addwf	tblptrl,f,c
  1199  002AB0  0E00               	movlw	0
  1200  002AB2  22F7               	addwfc	tblptrh,f,c
  1201  002AB4  0008               	tblrd		*
  1202  002AB6  50F5               	movf	tablat,w,c
  1203  002AB8  6E00               	movwf	btemp,c
  1204  002ABA  0FFF               	addlw	255
  1205  002ABC  6E02               	movwf	btemp+2,c
  1206  002ABE  6A03               	clrf	btemp+3,c
  1207  002AC0  0EFF               	movlw	255
  1208  002AC2  2203               	addwfc	btemp+3,f,c
  1209  002AC4  C0F8  F000         	movff	?a_KolProc+3,btemp
  1210  002AC8  6A01               	clrf	btemp+1,c
  1211  002ACA  5001               	movf	btemp+1,w,c
  1212  002ACC  0A80               	xorlw	128
  1213  002ACE  6E04               	movwf	btemp+4,c
  1214  002AD0  5003               	movf	btemp+3,w,c
  1215  002AD2  0A80               	xorlw	128
  1216  002AD4  5C04               	subwf	btemp+4,w,c
  1217  002AD6  E102               	bnz	u665
  1218  002AD8  5002               	movf	btemp+2,w,c
  1219  002ADA  5C00               	subwf	btemp,w,c
  1220  002ADC                     u665:
  1221  002ADC  E201 D33E          	bnc	l47
  1222                           ;wsw.c: 536: {
  1223  002AE0  50D9               	movf	fsr2l,w,c
  1224  002AE2  0D02               	mullw	2
  1225  002AE4  0E01               	movlw	low (_KInd+1)
  1226  002AE6  24F3               	addwf	prodl,w,c
  1227  002AE8  6EE1               	movwf	fsr1l,c
  1228  002AEA  0E01               	movlw	high (_KInd+1)
  1229  002AEC  20F4               	addwfc	prodh,w,c
  1230  002AEE  6EE2               	movwf	fsr1h,c
  1231  002AF0  0EC0               	movlw	-64
  1232  002AF2  16E7               	andwf	indf1,f,c
  1233  002AF4  D328               	goto	L7
  1234                           ;wsw.c: 538: if(nC) KTim[j].cykl++;
  1235                           ;wsw.c: 539: }
  1236                           ;wsw.c: 541: }
  1237  002AF6                     L8:
  1238  002AF6  0D02               	mullw	2
  1239  002AF8  0E01               	movlw	low (_KInd+1)
  1240  002AFA  24F3               	addwf	prodl,w,c
  1241  002AFC  6EE1               	movwf	fsr1l,c
  1242  002AFE  0E01               	movlw	high (_KInd+1)
  1243  002B00  20F4               	addwfc	prodh,w,c
  1244  002B02  6EE2               	movwf	fsr1h,c
  1245  002B04  0100               	movlb	__Lparam shr (0+8)
  1246  002B06  50E7               	movf	indf1,w,c
  1247  002B08  19F8               	xorwf	(?a_KolProc+3)^(__Lparam& (0+65280)),w
  1248  002B0A  0BC0               	andlw	-64
  1249  002B0C  19F8               	xorwf	(?a_KolProc+3)^(__Lparam& (0+65280)),w
  1250  002B0E  6EE7               	movwf	indf1,c
  1251                           ;wsw.c: 546: for(k=j+1;k<3;k++)
  1252  002B10  28D9               	incf	fsr2l,w,c
  1253  002B12  6E02               	movwf	btemp+2,c
  1254  002B14  D090               	goto	L5
  1255  002B16                     l52:
  1256                           ;wsw.c: 547: if((*(*Klj[k].KL).KOut).nCykli)
  1257  002B16  5002               	movf	btemp+2,w,c
  1258  002B18  0D03               	mullw	3
  1259  002B1A  50F3               	movf	prodl,w,c
  1260  002B1C  0F35               	addlw	low _Klj
  1261  002B1E  6EF6               	movwf	tblptrl,c
  1262  002B20  50F4               	movf	prodh,w,c
  1263  002B22  6EF7               	movwf	tblptrh,c
  1264  002B24  0E08               	movlw	high _Klj
  1265  002B26  22F7               	addwfc	tblptrh,f,c
  1266  002B28  0009               	tblrd		*+
  1267  002B2A  CFF5 F000          	movff	tablat,btemp
  1268  002B2E  0009               	tblrd		*+
  1269  002B30  CFF5 F001          	movff	tablat,btemp+1
  1270  002B34  0E06               	movlw	6
  1271  002B36  2600               	addwf	btemp,f,c
  1272  002B38  0E00               	movlw	0
  1273  002B3A  2201               	addwfc	btemp+1,f,c
  1274  002B3C  C000  FFF6         	movff	btemp,tblptrl
  1275  002B40  C001  FFF7         	movff	btemp+1,tblptrh
  1276  002B44  0E07               	movlw	(high __ramtop+-1)
  1277  002B46  64F7               	cpfsgt	tblptrh,c
  1278  002B48  D007               	bra	u697
  1279  002B4A  0009               	tblrd		*+
  1280  002B4C  CFF5 F000          	movff	tablat,btemp
  1281  002B50  0009               	tblrd		*+
  1282  002B52  CFF5 F001          	movff	tablat,btemp+1
  1283  002B56  D008               	bra	u690
  1284  002B58                     u697:
  1285  002B58  CFF6 FFE1          	movff	tblptrl,fsr1l
  1286  002B5C  CFF7 FFE2          	movff	tblptrh,fsr1h
  1287  002B60  CFE6 F000          	movff	postinc1,btemp
  1288  002B64  CFE6 F001          	movff	postinc1,btemp+1
  1289  002B68                     u690:
  1290  002B68  0E02               	movlw	2
  1291  002B6A  2600               	addwf	btemp,f,c
  1292  002B6C  0E00               	movlw	0
  1293  002B6E  2201               	addwfc	btemp+1,f,c
  1294  002B70  C000  FFF6         	movff	btemp,tblptrl
  1295  002B74  C001  FFF7         	movff	btemp+1,tblptrh
  1296  002B78  0E07               	movlw	(high __ramtop+-1)
  1297  002B7A  64F7               	cpfsgt	tblptrh,c
  1298  002B7C  D003               	bra	u707
  1299  002B7E  0008               	tblrd		*
  1300  002B80  50F5               	movf	tablat,w,c
  1301  002B82  D005               	bra	u700
  1302  002B84                     u707:
  1303  002B84  CFF6 FFE1          	movff	tblptrl,fsr1l
  1304  002B88  CFF7 FFE2          	movff	tblptrh,fsr1h
  1305  002B8C  50E7               	movf	indf1,w,c
  1306  002B8E                     u700:
  1307  002B8E  0900               	iorlw	0
  1308  002B90  E051               	bz	l55
  1309                           ;wsw.c: 548: {
  1310  002B92  0100               	movlb	__Lparam shr (0+8)
  1311  002B94  6BF6               	clrf	(?a_KolProc+1)^(__Lparam& (0+65280)),b
  1312  002B96                     l59:
  1313  002B96  5002               	movf	btemp+2,w,c
  1314  002B98  0D03               	mullw	3
  1315  002B9A  50F3               	movf	prodl,w,c
  1316  002B9C  0F35               	addlw	low _Klj
  1317  002B9E  6EF6               	movwf	tblptrl,c
  1318  002BA0  50F4               	movf	prodh,w,c
  1319  002BA2  6EF7               	movwf	tblptrh,c
  1320  002BA4  0E08               	movlw	high _Klj
  1321  002BA6  22F7               	addwfc	tblptrh,f,c
  1322  002BA8  0E02               	movlw	2
  1323  002BAA  26F6               	addwf	tblptrl,f,c
  1324  002BAC  0E00               	movlw	0
  1325  002BAE  22F7               	addwfc	tblptrh,f,c
  1326  002BB0  0008               	tblrd		*
  1327  002BB2  50F5               	movf	tablat,w,c
  1328  002BB4  0100               	movlb	__Lparam shr (0+8)
  1329  002BB6  5DF6               	subwf	(?a_KolProc+1)^(__Lparam& (0+65280)),w
  1330  002BB8  E234               	bc	u730
  1331  002BBA  5002               	movf	btemp+2,w,c
  1332  002BBC  0D03               	mullw	3
  1333  002BBE  50F3               	movf	prodl,w,c
  1334  002BC0  0F35               	addlw	low _Klj
  1335  002BC2  6EF6               	movwf	tblptrl,c
  1336  002BC4  50F4               	movf	prodh,w,c
  1337  002BC6  6EF7               	movwf	tblptrh,c
  1338  002BC8  0E08               	movlw	high _Klj
  1339  002BCA  22F7               	addwfc	tblptrh,f,c
  1340  002BCC  0009               	tblrd		*+
  1341  002BCE  CFF5 F000          	movff	tablat,btemp
  1342  002BD2  0009               	tblrd		*+
  1343  002BD4  CFF5 F001          	movff	tablat,btemp+1
  1344  002BD8  0E04               	movlw	4
  1345  002BDA  2600               	addwf	btemp,f,c
  1346  002BDC  0E00               	movlw	0
  1347  002BDE  2201               	addwfc	btemp+1,f,c
  1348  002BE0  C000  FFF6         	movff	btemp,tblptrl
  1349  002BE4  C001  FFF7         	movff	btemp+1,tblptrh
  1350  002BE8  0E07               	movlw	(high __ramtop+-1)
  1351  002BEA  64F7               	cpfsgt	tblptrh,c
  1352  002BEC  D007               	bra	u727
  1353  002BEE  0009               	tblrd		*+
  1354  002BF0  CFF5 F000          	movff	tablat,btemp
  1355  002BF4  0009               	tblrd		*+
  1356  002BF6  CFF5 F001          	movff	tablat,btemp+1
  1357  002BFA  D008               	bra	u720
  1358  002BFC                     u727:
  1359  002BFC  CFF6 FFE1          	movff	tblptrl,fsr1l
  1360  002C00  CFF7 FFE2          	movff	tblptrh,fsr1h
  1361  002C04  CFE6 F000          	movff	postinc1,btemp
  1362  002C08  CFE6 F001          	movff	postinc1,btemp+1
  1363  002C0C                     u720:
  1364  002C0C  0100               	movlb	__Lparam shr (0+8)
  1365  002C0E  51F6               	movf	(?a_KolProc+1)^(__Lparam& (0+65280)),w
  1366  002C10  2400               	addwf	btemp,w,c
  1367  002C12  6EE1               	movwf	fsr1l,c
  1368  002C14  0E00               	movlw	0
  1369  002C16  2001               	addwfc	btemp+1,w,c
  1370  002C18  6EE2               	movwf	fsr1h,c
  1371  002C1A  0EFE               	movlw	-2
  1372  002C1C  16E7               	andwf	indf1,f,c
  1373  002C1E  2BF6               	incf	(?a_KolProc+1)^(__Lparam& (0+65280)),f,b
  1374  002C20  D7BA               	goto	l59
  1375  002C22                     u730:
  1376                           ;wsw.c: 550: KTim[k].cykl=0;
  1377  002C22  5002               	movf	btemp+2,w,c
  1378  002C24  0D03               	mullw	3
  1379  002C26  0E10               	movlw	low (_KTim+2)
  1380  002C28  24F3               	addwf	prodl,w,c
  1381  002C2A  6EE1               	movwf	fsr1l,c
  1382  002C2C  0E01               	movlw	high (_KTim+2)
  1383  002C2E  20F4               	addwfc	prodh,w,c
  1384  002C30  6EE2               	movwf	fsr1h,c
  1385  002C32  6AE7               	clrf	indf1,c
  1386  002C34                     l55:
  1387  002C34  2A02               	incf	btemp+2,f,c
  1388  002C36                     L5:
  1389  002C36  0E02               	movlw	2
  1390  002C38  6402               	cpfsgt	btemp+2,c
  1391  002C3A  D76D               	goto	l52
  1392                           ;wsw.c: 551: }
  1393  002C3C  28D9               	incf	fsr2l,w,c
  1394  002C3E  6E02               	movwf	btemp+2,c
  1395  002C40  D01D               	goto	L6
  1396  002C42                     l60:
  1397                           ;wsw.c: 556: {
  1398  002C42  5002               	movf	btemp+2,w,c
  1399  002C44  0D02               	mullw	2
  1400  002C46  0E01               	movlw	low (_KInd+1)
  1401  002C48  24F3               	addwf	prodl,w,c
  1402  002C4A  6EE1               	movwf	fsr1l,c
  1403  002C4C  0E01               	movlw	high (_KInd+1)
  1404  002C4E  20F4               	addwfc	prodh,w,c
  1405  002C50  6EE2               	movwf	fsr1h,c
  1406  002C52  0EC0               	movlw	-64
  1407  002C54  16E7               	andwf	indf1,f,c
  1408                           ;wsw.c: 558: KTim[k].ncS=0;
  1409  002C56  5002               	movf	btemp+2,w,c
  1410  002C58  0D03               	mullw	3
  1411  002C5A  0E0E               	movlw	low _KTim
  1412  002C5C  24F3               	addwf	prodl,w,c
  1413  002C5E  6EE1               	movwf	fsr1l,c
  1414  002C60  0E01               	movlw	high _KTim
  1415  002C62  20F4               	addwfc	prodh,w,c
  1416  002C64  6EE2               	movwf	fsr1h,c
  1417  002C66  6AE7               	clrf	indf1,c
  1418                           ;wsw.c: 559: KTim[k].ndS=0;
  1419  002C68  5002               	movf	btemp+2,w,c
  1420  002C6A  0D03               	mullw	3
  1421  002C6C  0E0F               	movlw	low (_KTim+1)
  1422  002C6E  24F3               	addwf	prodl,w,c
  1423  002C70  6EE1               	movwf	fsr1l,c
  1424  002C72  0E01               	movlw	high (_KTim+1)
  1425  002C74  20F4               	addwfc	prodh,w,c
  1426  002C76  6EE2               	movwf	fsr1h,c
  1427  002C78  6AE7               	clrf	indf1,c
  1428  002C7A  2A02               	incf	btemp+2,f,c
  1429  002C7C                     L6:
  1430  002C7C  0E02               	movlw	2
  1431  002C7E  6402               	cpfsgt	btemp+2,c
  1432  002C80  D7E0               	goto	l60
  1433                           ;wsw.c: 560: }
  1434  002C82  50EF               	movf	indf0,w,c
  1435  002C84  0BFE               	andlw	-2
  1436  002C86  0901               	iorlw	1
  1437  002C88  6EEF               	movwf	indf0,c
  1438                           ;wsw.c: 624: (*cadr).St2.focus=1;
  1439  002C8A  EE10 F00A          	lfsr	1,10
  1440  002C8E  50E9               	movf	fsr0l,w,c
  1441  002C90  26E1               	addwf	fsr1l,f,c
  1442  002C92  50EA               	movf	fsr0h,w,c
  1443  002C94  22E2               	addwfc	fsr1h,f,c
  1444  002C96  50E7               	movf	indf1,w,c
  1445  002C98  0BFE               	andlw	-2
  1446  002C9A  0901               	iorlw	1
  1447  002C9C  6EE7               	movwf	indf1,c
  1448                           ;wsw.c: 625: if (KTim[j].ndS<(*Klj[j].KL).KWP[i]
      +                          .delay)
  1449  002C9E  50D9               	movf	fsr2l,w,c
  1450  002CA0  0D03               	mullw	3
  1451  002CA2  0E0F               	movlw	low (_KTim+1)
  1452  002CA4  24F3               	addwf	prodl,w,c
  1453  002CA6  6EE1               	movwf	fsr1l,c
  1454  002CA8  0E01               	movlw	high (_KTim+1)
  1455  002CAA  20F4               	addwfc	prodh,w,c
  1456  002CAC  6EE2               	movwf	fsr1h,c
  1457  002CAE  50E7               	movf	indf1,w,c
  1458  002CB0  0100               	movlb	__Lparam shr (0+8)
  1459  002CB2  6FFD               	movwf	(?a_KolProc+8)^(?a_KolProc& (0+65280)),b
  1460  002CB4  50D9               	movf	fsr2l,w,c
  1461  002CB6  0D03               	mullw	3
  1462  002CB8  50F3               	movf	prodl,w,c
  1463  002CBA  0F35               	addlw	low _Klj
  1464  002CBC  6EF6               	movwf	tblptrl,c
  1465  002CBE  50F4               	movf	prodh,w,c
  1466  002CC0  6EF7               	movwf	tblptrh,c
  1467  002CC2  0E08               	movlw	high _Klj
  1468  002CC4  22F7               	addwfc	tblptrh,f,c
  1469  002CC6  0009               	tblrd		*+
  1470  002CC8  CFF5 F000          	movff	tablat,btemp
  1471  002CCC  0009               	tblrd		*+
  1472  002CCE  CFF5 F001          	movff	tablat,btemp+1
  1473  002CD2  0E02               	movlw	2
  1474  002CD4  2600               	addwf	btemp,f,c
  1475  002CD6  0E00               	movlw	0
  1476  002CD8  2201               	addwfc	btemp+1,f,c
  1477  002CDA  C000  FFF6         	movff	btemp,tblptrl
  1478  002CDE  C001  FFF7         	movff	btemp+1,tblptrh
  1479  002CE2  0E07               	movlw	(high __ramtop+-1)
  1480  002CE4  64F7               	cpfsgt	tblptrh,c
  1481  002CE6  D007               	bra	u777
  1482  002CE8  0009               	tblrd		*+
  1483  002CEA  CFF5 F000          	movff	tablat,btemp
  1484  002CEE  0009               	tblrd		*+
  1485  002CF0  CFF5 F001          	movff	tablat,btemp+1
  1486  002CF4  D008               	bra	u770
  1487  002CF6                     u777:
  1488  002CF6  CFF6 FFE1          	movff	tblptrl,fsr1l
  1489  002CFA  CFF7 FFE2          	movff	tblptrh,fsr1h
  1490  002CFE  CFE6 F000          	movff	postinc1,btemp
  1491  002D02  CFE6 F001          	movff	postinc1,btemp+1
  1492  002D06                     u770:
  1493  002D06  51F8               	movf	(?a_KolProc+3)^(__Lparam& (0+65280)),w
  1494  002D08  2400               	addwf	btemp,w,c
  1495  002D0A  6E02               	movwf	btemp+2,c
  1496  002D0C  0E00               	movlw	0
  1497  002D0E  2001               	addwfc	btemp+1,w,c
  1498  002D10  6E03               	movwf	btemp+3,c
  1499  002D12  C002  FFF6         	movff	btemp+2,tblptrl
  1500  002D16  C003  FFF7         	movff	btemp+3,tblptrh
  1501  002D1A  0E07               	movlw	(high __ramtop+-1)
  1502  002D1C  64F7               	cpfsgt	tblptrh,c
  1503  002D1E  D003               	bra	u787
  1504  002D20  0008               	tblrd		*
  1505  002D22  50F5               	movf	tablat,w,c
  1506  002D24  D005               	bra	u780
  1507  002D26                     u787:
  1508  002D26  CFF6 FFE1          	movff	tblptrl,fsr1l
  1509  002D2A  CFF7 FFE2          	movff	tblptrh,fsr1h
  1510  002D2E  50E7               	movf	indf1,w,c
  1511  002D30                     u780:
  1512  002D30  5DFD               	subwf	(?a_KolProc+8)^(__Lparam& (0+65280)),w
  1513  002D32  E301 D1BE          	bc	l63
  1514                           ;wsw.c: 626: {
  1515  002D36  50D9               	movf	fsr2l,w,c
  1516  002D38  0D03               	mullw	3
  1517  002D3A  0E0E               	movlw	low _KTim
  1518  002D3C  24F3               	addwf	prodl,w,c
  1519  002D3E  6EE1               	movwf	fsr1l,c
  1520  002D40  0E01               	movlw	high _KTim
  1521  002D42  20F4               	addwfc	prodh,w,c
  1522  002D44  6EE2               	movwf	fsr1h,c
  1523  002D46  2AE7               	incf	indf1,f,c
  1524                           ;wsw.c: 628: if (KTim[j].ncS>=10)
  1525  002D48  50D9               	movf	fsr2l,w,c
  1526  002D4A  0D03               	mullw	3
  1527  002D4C  0E0E               	movlw	low _KTim
  1528  002D4E  24F3               	addwf	prodl,w,c
  1529  002D50  6EE1               	movwf	fsr1l,c
  1530  002D52  0E01               	movlw	high _KTim
  1531  002D54  20F4               	addwfc	prodh,w,c
  1532  002D56  6EE2               	movwf	fsr1h,c
  1533  002D58  50E7               	movf	indf1,w,c
  1534  002D5A  6E00               	movwf	btemp,c
  1535  002D5C  0E0A               	movlw	10
  1536  002D5E  5C00               	subwf	btemp,w,c
  1537  002D60  E312               	bnc	l64
  1538                           ;wsw.c: 629: {
  1539  002D62  50D9               	movf	fsr2l,w,c
  1540  002D64  0D03               	mullw	3
  1541  002D66  0E0E               	movlw	low _KTim
  1542  002D68  24F3               	addwf	prodl,w,c
  1543  002D6A  6EE1               	movwf	fsr1l,c
  1544  002D6C  0E01               	movlw	high _KTim
  1545  002D6E  20F4               	addwfc	prodh,w,c
  1546  002D70  6EE2               	movwf	fsr1h,c
  1547  002D72  6AE7               	clrf	indf1,c
  1548                           ;wsw.c: 631: KTim[j].ndS++;
  1549  002D74  50D9               	movf	fsr2l,w,c
  1550  002D76  0D03               	mullw	3
  1551  002D78  0E0F               	movlw	low (_KTim+1)
  1552  002D7A  24F3               	addwf	prodl,w,c
  1553  002D7C  6EE1               	movwf	fsr1l,c
  1554  002D7E  0E01               	movlw	high (_KTim+1)
  1555  002D80  20F4               	addwfc	prodh,w,c
  1556  002D82  6EE2               	movwf	fsr1h,c
  1557  002D84  2AE7               	incf	indf1,f,c
  1558  002D86                     l64:
  1559                           ;_cadr stored from fsr0
  1560  002D86  CFE9 F0FB          	movff	fsr0l,?a_KolProc+6
  1561  002D8A  CFEA F0FC          	movff	fsr0h,?a_KolProc+7
  1562                           ;wsw.c: 632: }
  1563  002D8E  50D9               	movf	fsr2l,w,c
  1564  002D90  0D02               	mullw	2
  1565  002D92  0E00               	movlw	low _KInd
  1566  002D94  24F3               	addwf	prodl,w,c
  1567  002D96  6EE9               	movwf	fsr0l,c
  1568  002D98  0E01               	movlw	high _KInd
  1569  002D9A  20F4               	addwfc	prodh,w,c
  1570  002D9C  6EEA               	movwf	fsr0h,c
  1571  002D9E  50EF               	movf	indf0,w,c
  1572  002DA0  6E00               	movwf	btemp,c
  1573  002DA2  B200               	btfsc	btemp,1,c
  1574  002DA4  D00C               	goto	l65
  1575                           ;wsw.c: 664: {
  1576  002DA6  C0F9  FFE9         	movff	?a_KolProc+4,fsr0l
  1577  002DAA  C0FA  FFEA         	movff	?a_KolProc+5,fsr0h
  1578  002DAE  C0FB  FFE1         	movff	?a_KolProc+6,fsr1l
  1579  002DB2  C0FC  FFE2         	movff	?a_KolProc+7,fsr1h
  1580  002DB6  0E10               	movlw	16
  1581  002DB8  ECC4  F03F         	call	structcopy
  1582                           ;wsw.c: 666: }
  1583  002DBC  D167               	goto	l66
  1584  002DBE                     l65:
  1585                           ;wsw.c: 667: else
  1586  002DBE  0100               	movlb	__Lparam shr (0+8)
  1587  002DC0  51F8               	movf	(?a_KolProc+3)^(__Lparam& (0+65280)),w
  1588  002DC2  E114               	bnz	l67
  1589  002DC4  50D9               	movf	fsr2l,w,c
  1590  002DC6  0D02               	mullw	2
  1591  002DC8  0E00               	movlw	low _KInd
  1592  002DCA  24F3               	addwf	prodl,w,c
  1593  002DCC  6EE9               	movwf	fsr0l,c
  1594  002DCE  0E01               	movlw	high _KInd
  1595  002DD0  20F4               	addwfc	prodh,w,c
  1596  002DD2  6EEA               	movwf	fsr0h,c
  1597  002DD4  0EFD               	movlw	-3
  1598  002DD6  16EF               	andwf	indf0,f,c
  1599  002DD8  50D9               	movf	fsr2l,w,c
  1600  002DDA  0D02               	mullw	2
  1601  002DDC  0E00               	movlw	low _KInd
  1602  002DDE  24F3               	addwf	prodl,w,c
  1603  002DE0  6EE9               	movwf	fsr0l,c
  1604  002DE2  0E01               	movlw	high _KInd
  1605  002DE4  20F4               	addwfc	prodh,w,c
  1606  002DE6  6EEA               	movwf	fsr0h,c
  1607  002DE8  0EFE               	movlw	-2
  1608  002DEA  16EF               	andwf	indf0,f,c
  1609  002DEC                     l67:
  1610                           ;wsw.c: 670: *cadr=*((*Klj[j].KL).KAP[0].PAdr);
  1611  002DEC  50D9               	movf	fsr2l,w,c
  1612  002DEE  0D03               	mullw	3
  1613  002DF0  50F3               	movf	prodl,w,c
  1614  002DF2  0F35               	addlw	low _Klj
  1615  002DF4  6EF6               	movwf	tblptrl,c
  1616  002DF6  50F4               	movf	prodh,w,c
  1617  002DF8  6EF7               	movwf	tblptrh,c
  1618  002DFA  0E08               	movlw	high _Klj
  1619  002DFC  22F7               	addwfc	tblptrh,f,c
  1620  002DFE  0009               	tblrd		*+
  1621  002E00  CFF5 F000          	movff	tablat,btemp
  1622  002E04  0009               	tblrd		*+
  1623  002E06  CFF5 F001          	movff	tablat,btemp+1
  1624  002E0A  C000  FFF6         	movff	btemp,tblptrl
  1625  002E0E  C001  FFF7         	movff	btemp+1,tblptrh
  1626  002E12  0E07               	movlw	(high __ramtop+-1)
  1627  002E14  64F7               	cpfsgt	tblptrh,c
  1628  002E16  D007               	bra	u837
  1629  002E18  0009               	tblrd		*+
  1630  002E1A  CFF5 F000          	movff	tablat,btemp
  1631  002E1E  0009               	tblrd		*+
  1632  002E20  CFF5 F001          	movff	tablat,btemp+1
  1633  002E24  D008               	bra	u830
  1634  002E26                     u837:
  1635  002E26  CFF6 FFE9          	movff	tblptrl,fsr0l
  1636  002E2A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1637  002E2E  CFEE F000          	movff	postinc0,btemp
  1638  002E32  CFEE F001          	movff	postinc0,btemp+1
  1639  002E36                     u830:
  1640  002E36  C000  FFF6         	movff	btemp,tblptrl
  1641  002E3A  C001  FFF7         	movff	btemp+1,tblptrh
  1642  002E3E  0E07               	movlw	(high __ramtop+-1)
  1643  002E40  64F7               	cpfsgt	tblptrh,c
  1644  002E42  D007               	bra	u847
  1645  002E44  0009               	tblrd		*+
  1646  002E46  CFF5 F000          	movff	tablat,btemp
  1647  002E4A  0009               	tblrd		*+
  1648  002E4C  CFF5 F001          	movff	tablat,btemp+1
  1649  002E50  D008               	bra	u840
  1650  002E52                     u847:
  1651  002E52  CFF6 FFE9          	movff	tblptrl,fsr0l
  1652  002E56  CFF7 FFEA          	movff	tblptrh,fsr0h
  1653  002E5A  CFEE F000          	movff	postinc0,btemp
  1654  002E5E  CFEE F001          	movff	postinc0,btemp+1
  1655  002E62                     u840:
  1656  002E62  C000  FFE9         	movff	btemp,fsr0l
  1657  002E66  C001  FFEA         	movff	btemp+1,fsr0h
  1658  002E6A  C0FB  FFE1         	movff	?a_KolProc+6,fsr1l
  1659  002E6E  C0FC  FFE2         	movff	?a_KolProc+7,fsr1h
  1660  002E72  0E10               	movlw	16
  1661  002E74  ECC4  F03F         	call	structcopy
  1662                           ;wsw.c: 671: if(!KInd[j].restart2)
  1663  002E78  50D9               	movf	fsr2l,w,c
  1664  002E7A  0D02               	mullw	2
  1665  002E7C  0E00               	movlw	low _KInd
  1666  002E7E  24F3               	addwf	prodl,w,c
  1667  002E80  6EE9               	movwf	fsr0l,c
  1668  002E82  0E01               	movlw	high _KInd
  1669  002E84  20F4               	addwfc	prodh,w,c
  1670  002E86  6EEA               	movwf	fsr0h,c
  1671  002E88  50EF               	movf	indf0,w,c
  1672  002E8A  6E00               	movwf	btemp,c
  1673  002E8C  B000               	btfsc	btemp,0,c
  1674  002E8E  D003               	goto	l68
  1675                           ;wsw.c: 672: {
  1676  002E90  0100               	movlb	__Lparam shr (0+8)
  1677  002E92  51F8               	movf	(?a_KolProc+3)^(__Lparam& (0+65280)),w
  1678  002E94  D002               	goto	L1
  1679                           ;wsw.c: 674: }
  1680  002E96                     l68:
  1681                           ;wsw.c: 675: else
  1682  002E96  0E01               	movlw	1
  1683  002E98  0100               	movlb	__Lparam shr (0+8)
  1684  002E9A                     L1:
  1685  002E9A  6FF5               	movwf	?a_KolProc^(__Lparam& (0+65280)),b
  1686                           ;wsw.c: 678: }
  1687  002E9C  50D9               	movf	fsr2l,w,c
  1688  002E9E  0D03               	mullw	3
  1689  002EA0  50F3               	movf	prodl,w,c
  1690  002EA2  0F35               	addlw	low _Klj
  1691  002EA4  6EF6               	movwf	tblptrl,c
  1692  002EA6  50F4               	movf	prodh,w,c
  1693  002EA8  6EF7               	movwf	tblptrh,c
  1694  002EAA  0E08               	movlw	high _Klj
  1695  002EAC  22F7               	addwfc	tblptrh,f,c
  1696  002EAE  0009               	tblrd		*+
  1697  002EB0  CFF5 F000          	movff	tablat,btemp
  1698  002EB4  0009               	tblrd		*+
  1699  002EB6  CFF5 F001          	movff	tablat,btemp+1
  1700  002EBA  C000  FFF6         	movff	btemp,tblptrl
  1701  002EBE  C001  FFF7         	movff	btemp+1,tblptrh
  1702  002EC2  0E07               	movlw	(high __ramtop+-1)
  1703  002EC4  64F7               	cpfsgt	tblptrh,c
  1704  002EC6  D007               	bra	u867
  1705  002EC8  0009               	tblrd		*+
  1706  002ECA  CFF5 F000          	movff	tablat,btemp
  1707  002ECE  0009               	tblrd		*+
  1708  002ED0  CFF5 F001          	movff	tablat,btemp+1
  1709  002ED4  D008               	bra	u860
  1710  002ED6                     u867:
  1711  002ED6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1712  002EDA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1713  002EDE  CFEE F000          	movff	postinc0,btemp
  1714  002EE2  CFEE F001          	movff	postinc0,btemp+1
  1715  002EE6                     u860:
  1716  002EE6  0100               	movlb	__Lparam shr (0+8)
  1717  002EE8  51F5               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1718  002EEA  0D02               	mullw	2
  1719  002EEC  5000               	movf	btemp,w,c
  1720  002EEE  24F3               	addwf	prodl,w,c
  1721  002EF0  6E02               	movwf	btemp+2,c
  1722  002EF2  5001               	movf	btemp+1,w,c
  1723  002EF4  20F4               	addwfc	prodh,w,c
  1724  002EF6  6E03               	movwf	btemp+3,c
  1725  002EF8  C002  FFF6         	movff	btemp+2,tblptrl
  1726  002EFC  C003  FFF7         	movff	btemp+3,tblptrh
  1727  002F00  0E07               	movlw	(high __ramtop+-1)
  1728  002F02  64F7               	cpfsgt	tblptrh,c
  1729  002F04  D007               	bra	u877
  1730  002F06  0009               	tblrd		*+
  1731  002F08  CFF5 FFE1          	movff	tablat,fsr1l
  1732  002F0C  0009               	tblrd		*+
  1733  002F0E  CFF5 FFE2          	movff	tablat,fsr1h
  1734  002F12  D008               	bra	u870
  1735  002F14                     u877:
  1736  002F14  CFF6 FFE9          	movff	tblptrl,fsr0l
  1737  002F18  CFF7 FFEA          	movff	tblptrh,fsr0h
  1738  002F1C  CFEE FFE1          	movff	postinc0,fsr1l
  1739  002F20  CFEE FFE2          	movff	postinc0,fsr1h
  1740  002F24                     u870:
  1741                           ;wsw.c: 680: (*cadr).St.sdiode=(*padr2).St.sdiod
      +                          e;
  1742  002F24  EE00 F001          	lfsr	0,1
  1743  002F28  50E1               	movf	fsr1l,w,c
  1744  002F2A  26E9               	addwf	fsr0l,f,c
  1745  002F2C  50E2               	movf	fsr1h,w,c
  1746  002F2E  22EA               	addwfc	fsr0h,f,c
  1747  002F30  30EF               	rrcf	indf0,w,c
  1748  002F32  6E00               	movwf	btemp,c
  1749  002F34  3000               	rrcf	btemp,w,c
  1750  002F36  0B01               	andlw	1
  1751  002F38  6E00               	movwf	btemp,c
  1752  002F3A  EE00 F001          	lfsr	0,1
  1753  002F3E  51FB               	movf	(?a_KolProc+6)^(__Lparam& (0+65280)),w
  1754  002F40  26E9               	addwf	fsr0l,f,c
  1755  002F42  51FC               	movf	(?a_KolProc+7)^(__Lparam& (0+65280)),w
  1756  002F44  22EA               	addwfc	fsr0h,f,c
  1757  002F46  3600               	rlcf	btemp,f,c
  1758  002F48  3600               	rlcf	btemp,f,c
  1759  002F4A  50EF               	movf	indf0,w,c
  1760  002F4C  1800               	xorwf	btemp,w,c
  1761  002F4E  0BFB               	andlw	-5
  1762  002F50  1800               	xorwf	btemp,w,c
  1763  002F52  6EEF               	movwf	indf0,c
  1764                           ;wsw.c: 681: (*cadr).St.rdiode=(*padr2).St.rdiod
      +                          e;
  1765  002F54  EE00 F001          	lfsr	0,1
  1766  002F58  50E1               	movf	fsr1l,w,c
  1767  002F5A  26E9               	addwf	fsr0l,f,c
  1768  002F5C  50E2               	movf	fsr1h,w,c
  1769  002F5E  22EA               	addwfc	fsr0h,f,c
  1770  002F60  30EF               	rrcf	indf0,w,c
  1771  002F62  6E00               	movwf	btemp,c
  1772  002F64  3200               	rrcf	btemp,f,c
  1773  002F66  3000               	rrcf	btemp,w,c
  1774  002F68  0B01               	andlw	1
  1775  002F6A  6E00               	movwf	btemp,c
  1776  002F6C  EE00 F001          	lfsr	0,1
  1777  002F70  51FB               	movf	(?a_KolProc+6)^(__Lparam& (0+65280)),w
  1778  002F72  26E9               	addwf	fsr0l,f,c
  1779  002F74  51FC               	movf	(?a_KolProc+7)^(__Lparam& (0+65280)),w
  1780  002F76  22EA               	addwfc	fsr0h,f,c
  1781  002F78  3600               	rlcf	btemp,f,c
  1782  002F7A  3600               	rlcf	btemp,f,c
  1783  002F7C  3600               	rlcf	btemp,f,c
  1784  002F7E  50EF               	movf	indf0,w,c
  1785  002F80  1800               	xorwf	btemp,w,c
  1786  002F82  0BF7               	andlw	-9
  1787  002F84  1800               	xorwf	btemp,w,c
  1788  002F86  6EEF               	movwf	indf0,c
  1789                           ;wsw.c: 682: (*cadr).St.sbdid=(*padr2).St.sbdid;
  1790  002F88  EE00 F004          	lfsr	0,4
  1791  002F8C  50E1               	movf	fsr1l,w,c
  1792  002F8E  26E9               	addwf	fsr0l,f,c
  1793  002F90  50E2               	movf	fsr1h,w,c
  1794  002F92  22EA               	addwfc	fsr0h,f,c
  1795  002F94  50EF               	movf	indf0,w,c
  1796  002F96  0BFF               	andlw	255
  1797  002F98  6E00               	movwf	btemp,c
  1798  002F9A  EE00 F004          	lfsr	0,4
  1799  002F9E  51FB               	movf	(?a_KolProc+6)^(__Lparam& (0+65280)),w
  1800  002FA0  26E9               	addwf	fsr0l,f,c
  1801  002FA2  51FC               	movf	(?a_KolProc+7)^(__Lparam& (0+65280)),w
  1802  002FA4  22EA               	addwfc	fsr0h,f,c
  1803  002FA6  50EF               	movf	indf0,w,c
  1804  002FA8  1800               	xorwf	btemp,w,c
  1805  002FAA  0B00               	andlw	-256
  1806  002FAC  1800               	xorwf	btemp,w,c
  1807  002FAE  6EEF               	movwf	indf0,c
  1808                           ;wsw.c: 683: (*cadr).St.rbdid=(*padr2).St.rbdid;
  1809  002FB0  EE00 F005          	lfsr	0,5
  1810  002FB4  50E1               	movf	fsr1l,w,c
  1811  002FB6  26E9               	addwf	fsr0l,f,c
  1812  002FB8  50E2               	movf	fsr1h,w,c
  1813  002FBA  22EA               	addwfc	fsr0h,f,c
  1814  002FBC  50EF               	movf	indf0,w,c
  1815  002FBE  0BFF               	andlw	255
  1816  002FC0  6E00               	movwf	btemp,c
  1817  002FC2  EE00 F005          	lfsr	0,5
  1818  002FC6  51FB               	movf	(?a_KolProc+6)^(__Lparam& (0+65280)),w
  1819  002FC8  26E9               	addwf	fsr0l,f,c
  1820  002FCA  51FC               	movf	(?a_KolProc+7)^(__Lparam& (0+65280)),w
  1821  002FCC  22EA               	addwfc	fsr0h,f,c
  1822  002FCE  50EF               	movf	indf0,w,c
  1823  002FD0  1800               	xorwf	btemp,w,c
  1824  002FD2  0B00               	andlw	-256
  1825  002FD4  1800               	xorwf	btemp,w,c
  1826  002FD6  6EEF               	movwf	indf0,c
  1827                           ;wsw.c: 684: (*cadr).St2.sdiode=(*padr2).St2.sdi
      +                          ode;
  1828  002FD8  EE00 F00B          	lfsr	0,11
  1829  002FDC  50E1               	movf	fsr1l,w,c
  1830  002FDE  26E9               	addwf	fsr0l,f,c
  1831  002FE0  50E2               	movf	fsr1h,w,c
  1832  002FE2  22EA               	addwfc	fsr0h,f,c
  1833  002FE4  30EF               	rrcf	indf0,w,c
  1834  002FE6  6E00               	movwf	btemp,c
  1835  002FE8  3000               	rrcf	btemp,w,c
  1836  002FEA  0B01               	andlw	1
  1837  002FEC  6E00               	movwf	btemp,c
  1838  002FEE  EE00 F00B          	lfsr	0,11
  1839  002FF2  51FB               	movf	(?a_KolProc+6)^(__Lparam& (0+65280)),w
  1840  002FF4  26E9               	addwf	fsr0l,f,c
  1841  002FF6  51FC               	movf	(?a_KolProc+7)^(__Lparam& (0+65280)),w
  1842  002FF8  22EA               	addwfc	fsr0h,f,c
  1843  002FFA  3600               	rlcf	btemp,f,c
  1844  002FFC  3600               	rlcf	btemp,f,c
  1845  002FFE  50EF               	movf	indf0,w,c
  1846  003000  1800               	xorwf	btemp,w,c
  1847  003002  0BFB               	andlw	-5
  1848  003004  1800               	xorwf	btemp,w,c
  1849  003006  6EEF               	movwf	indf0,c
  1850                           ;wsw.c: 685: (*cadr).St2.rdiode=(*padr2).St2.rdi
      +                          ode;
  1851  003008  EE00 F00B          	lfsr	0,11
  1852  00300C  50E1               	movf	fsr1l,w,c
  1853  00300E  26E9               	addwf	fsr0l,f,c
  1854  003010  50E2               	movf	fsr1h,w,c
  1855  003012  22EA               	addwfc	fsr0h,f,c
  1856  003014  30EF               	rrcf	indf0,w,c
  1857  003016  6E00               	movwf	btemp,c
  1858  003018  3200               	rrcf	btemp,f,c
  1859  00301A  3000               	rrcf	btemp,w,c
  1860  00301C  0B01               	andlw	1
  1861  00301E  6E00               	movwf	btemp,c
  1862  003020  EE00 F00B          	lfsr	0,11
  1863  003024  51FB               	movf	(?a_KolProc+6)^(__Lparam& (0+65280)),w
  1864  003026  26E9               	addwf	fsr0l,f,c
  1865  003028  51FC               	movf	(?a_KolProc+7)^(__Lparam& (0+65280)),w
  1866  00302A  22EA               	addwfc	fsr0h,f,c
  1867  00302C  3600               	rlcf	btemp,f,c
  1868  00302E  3600               	rlcf	btemp,f,c
  1869  003030  3600               	rlcf	btemp,f,c
  1870  003032  50EF               	movf	indf0,w,c
  1871  003034  1800               	xorwf	btemp,w,c
  1872  003036  0BF7               	andlw	-9
  1873  003038  1800               	xorwf	btemp,w,c
  1874  00303A  6EEF               	movwf	indf0,c
  1875                           ;wsw.c: 686: (*cadr).St2.sbdid=(*padr2).St2.sbdi
      +                          d;
  1876  00303C  EE00 F00E          	lfsr	0,14
  1877  003040  50E1               	movf	fsr1l,w,c
  1878  003042  26E9               	addwf	fsr0l,f,c
  1879  003044  50E2               	movf	fsr1h,w,c
  1880  003046  22EA               	addwfc	fsr0h,f,c
  1881  003048  50EF               	movf	indf0,w,c
  1882  00304A  0BFF               	andlw	255
  1883  00304C  6E00               	movwf	btemp,c
  1884  00304E  EE00 F00E          	lfsr	0,14
  1885  003052  51FB               	movf	(?a_KolProc+6)^(__Lparam& (0+65280)),w
  1886  003054  26E9               	addwf	fsr0l,f,c
  1887  003056  51FC               	movf	(?a_KolProc+7)^(__Lparam& (0+65280)),w
  1888  003058  22EA               	addwfc	fsr0h,f,c
  1889  00305A  50EF               	movf	indf0,w,c
  1890  00305C  1800               	xorwf	btemp,w,c
  1891  00305E  0B00               	andlw	-256
  1892  003060  1800               	xorwf	btemp,w,c
  1893  003062  6EEF               	movwf	indf0,c
  1894                           ;wsw.c: 687: (*cadr).St2.rbdid=(*padr2).St2.rbdi
      +                          d;
  1895  003064  EE00 F00F          	lfsr	0,15
  1896  003068  50E1               	movf	fsr1l,w,c
  1897  00306A  26E9               	addwf	fsr0l,f,c
  1898  00306C  50E2               	movf	fsr1h,w,c
  1899  00306E  22EA               	addwfc	fsr0h,f,c
  1900  003070  50EF               	movf	indf0,w,c
  1901  003072  0BFF               	andlw	255
  1902  003074  6E00               	movwf	btemp,c
  1903  003076  EE00 F00F          	lfsr	0,15
  1904  00307A  51FB               	movf	(?a_KolProc+6)^(__Lparam& (0+65280)),w
  1905  00307C  26E9               	addwf	fsr0l,f,c
  1906  00307E  51FC               	movf	(?a_KolProc+7)^(__Lparam& (0+65280)),w
  1907  003080  22EA               	addwfc	fsr0h,f,c
  1908  003082  50EF               	movf	indf0,w,c
  1909  003084  1800               	xorwf	btemp,w,c
  1910  003086  0B00               	andlw	-256
  1911  003088  1800               	xorwf	btemp,w,c
  1912  00308A  6EEF               	movwf	indf0,c
  1913  00308C                     l66:
  1914                           ;wsw.c: 688: }
  1915                           ; _cadr loaded to fsr0
  1916  00308C  C0FB  FFE9         	movff	?a_KolProc+6,fsr0l
  1917  003090  C0FC  FFEA         	movff	?a_KolProc+7,fsr0h
  1918  003094  50EF               	movf	indf0,w,c
  1919  003096  0BFE               	andlw	-2
  1920  003098  0901               	iorlw	1
  1921  00309A  6EEF               	movwf	indf0,c
  1922                           ;wsw.c: 691: (*cadr).St2.focus=1;
  1923  00309C  EE10 F00A          	lfsr	1,10
  1924  0030A0  50E9               	movf	fsr0l,w,c
  1925  0030A2  26E1               	addwf	fsr1l,f,c
  1926  0030A4  50EA               	movf	fsr0h,w,c
  1927  0030A6  22E2               	addwfc	fsr1h,f,c
  1928  0030A8  50E7               	movf	indf1,w,c
  1929  0030AA  0BFE               	andlw	-2
  1930  0030AC  0901               	iorlw	1
  1931  0030AE  6EE7               	movwf	indf1,c
  1932                           ;wsw.c: 692: break;
  1933  0030B0  D058               	goto	l46
  1934  0030B2                     l63:
  1935                           ;wsw.c: 694: {
  1936  0030B2  50D9               	movf	fsr2l,w,c
  1937  0030B4  0D03               	mullw	3
  1938  0030B6  0E0E               	movlw	low _KTim
  1939  0030B8  24F3               	addwf	prodl,w,c
  1940  0030BA  6EE1               	movwf	fsr1l,c
  1941  0030BC  0E01               	movlw	high _KTim
  1942  0030BE  20F4               	addwfc	prodh,w,c
  1943  0030C0  6EE2               	movwf	fsr1h,c
  1944  0030C2  6AE7               	clrf	indf1,c
  1945                           ;wsw.c: 696: KTim[j].ndS=0;
  1946  0030C4  50D9               	movf	fsr2l,w,c
  1947  0030C6  0D03               	mullw	3
  1948  0030C8  0E0F               	movlw	low (_KTim+1)
  1949  0030CA  24F3               	addwf	prodl,w,c
  1950  0030CC  6EE1               	movwf	fsr1l,c
  1951  0030CE  0E01               	movlw	high (_KTim+1)
  1952  0030D0  20F4               	addwfc	prodh,w,c
  1953  0030D2  6EE2               	movwf	fsr1h,c
  1954  0030D4  6AE7               	clrf	indf1,c
  1955                           ;wsw.c: 697: if (KInd[j].indeks>=Klj[j].nPzc-1)
  1956  0030D6  50D9               	movf	fsr2l,w,c
  1957  0030D8  0D03               	mullw	3
  1958  0030DA  50F3               	movf	prodl,w,c
  1959  0030DC  0F35               	addlw	low _Klj
  1960  0030DE  6EF6               	movwf	tblptrl,c
  1961  0030E0  50F4               	movf	prodh,w,c
  1962  0030E2  6EF7               	movwf	tblptrh,c
  1963  0030E4  0E08               	movlw	high _Klj
  1964  0030E6  22F7               	addwfc	tblptrh,f,c
  1965  0030E8  0E02               	movlw	2
  1966  0030EA  26F6               	addwf	tblptrl,f,c
  1967  0030EC  0E00               	movlw	0
  1968  0030EE  22F7               	addwfc	tblptrh,f,c
  1969  0030F0  0008               	tblrd		*
  1970  0030F2  50F5               	movf	tablat,w,c
  1971  0030F4  6E00               	movwf	btemp,c
  1972  0030F6  0FFF               	addlw	255
  1973  0030F8  6EF6               	movwf	tblptrl,c
  1974  0030FA  6AF7               	clrf	tblptrh,c
  1975  0030FC  0EFF               	movlw	255
  1976  0030FE  22F7               	addwfc	tblptrh,f,c
  1977  003100  50D9               	movf	fsr2l,w,c
  1978  003102  0D02               	mullw	2
  1979  003104  0E01               	movlw	low (_KInd+1)
  1980  003106  24F3               	addwf	prodl,w,c
  1981  003108  6EE1               	movwf	fsr1l,c
  1982  00310A  0E01               	movlw	high (_KInd+1)
  1983  00310C  20F4               	addwfc	prodh,w,c
  1984  00310E  6EE2               	movwf	fsr1h,c
  1985  003110  50E7               	movf	indf1,w,c
  1986  003112  0B3F               	andlw	63
  1987  003114  6E00               	movwf	btemp,c
  1988  003116  C000  F002         	movff	btemp,btemp+2
  1989  00311A  6A03               	clrf	btemp+3,c
  1990  00311C  5003               	movf	btemp+3,w,c
  1991  00311E  0A80               	xorlw	128
  1992  003120  6E00               	movwf	btemp,c
  1993  003122  50F7               	movf	tblptrh,w,c
  1994  003124  0A80               	xorlw	128
  1995  003126  5C00               	subwf	btemp,w,c
  1996  003128  E102               	bnz	u885
  1997  00312A  50F6               	movf	tblptrl,w,c
  1998  00312C  5C02               	subwf	btemp+2,w,c
  1999  00312E                     u885:
  2000  00312E  E316               	bnc	l47
  2001                           ;wsw.c: 698: {
  2002  003130  50D9               	movf	fsr2l,w,c
  2003  003132  0D02               	mullw	2
  2004  003134  0E01               	movlw	low (_KInd+1)
  2005  003136  24F3               	addwf	prodl,w,c
  2006  003138  6EE1               	movwf	fsr1l,c
  2007  00313A  0E01               	movlw	high (_KInd+1)
  2008  00313C  20F4               	addwfc	prodh,w,c
  2009  00313E  6EE2               	movwf	fsr1h,c
  2010  003140  0EC0               	movlw	-64
  2011  003142  16E7               	andwf	indf1,f,c
  2012                           ;wsw.c: 700: if(nC) KTim[j].cykl++;
  2013  003144  0100               	movlb	__Lparam shr (0+8)
  2014  003146                     L7:
  2015  003146  51F7               	movf	(?a_KolProc+2)^(__Lparam& (0+65280)),w
  2016  003148  E009               	bz	l47
  2017  00314A  50D9               	movf	fsr2l,w,c
  2018  00314C  0D03               	mullw	3
  2019  00314E  0E10               	movlw	low (_KTim+2)
  2020  003150  24F3               	addwf	prodl,w,c
  2021  003152  6EE1               	movwf	fsr1l,c
  2022  003154  0E01               	movlw	high (_KTim+2)
  2023  003156  20F4               	addwfc	prodh,w,c
  2024  003158  6EE2               	movwf	fsr1h,c
  2025  00315A  2AE7               	incf	indf1,f,c
  2026  00315C                     l47:
  2027  00315C  0100               	movlb	__Lparam shr (0+8)
  2028  00315E  2BF8               	incf	(?a_KolProc+3)^(__Lparam& (0+65280)),f,b
  2029  003160  D412               	goto	l48
  2030  003162                     l46:
  2031  003162  2AD9               	incf	fsr2l,f,c
  2032  003164  0E02               	movlw	2
  2033  003166  64D9               	cpfsgt	fsr2l,c
  2034  003168  EFEE  F012         	goto	l30
  2035  00316C  0C02               	retlw	2
  2036                           ;wsw.c: 701: }
  2037  00316E                     __end_of_KolProc:
  2038                           ;wsw.c: 712: void KolMark(void)
  2039                           ;wsw.c: 713: {
  2040  00316E                     _KolMark:
  2041  000000                     
  2042                           ;wsw.c: 714: static unsigned char c,d,fl;
  2043  00316E  0107               	movlb	F1653 shr (0+8)
  2044  003170  2B79               	incf	F1653& (0+255),f,b
  2045                           ;wsw.c: 719: if (c>=10)
  2046  003172  0E09               	movlw	9
  2047  003174  6579               	cpfsgt	F1653& (0+255),b
  2048  003176  D003               	goto	l74
  2049                           ;wsw.c: 720: {
  2050  003178  6B79               	clrf	F1653& (0+255),b
  2051                           ;wsw.c: 722: d++;
  2052  00317A  0107               	movlb	F1654 shr (0+8)
  2053  00317C  2B7A               	incf	F1654& (0+255),f,b
  2054  00317E                     l74:
  2055                           ;wsw.c: 723: }
  2056  00317E  0E05               	movlw	5
  2057  003180  0107               	movlb	F1654 shr (0+8)
  2058  003182  657A               	cpfsgt	F1654& (0+255),b
  2059  003184  D009               	goto	l75
  2060                           ;wsw.c: 725: {
  2061  003186  6B7A               	clrf	F1654& (0+255),b
  2062                           ;wsw.c: 727: if(fl) fl=0;
  2063  003188  0107               	movlb	F1655 shr (0+8)
  2064  00318A  537B               	movf	F1655& (0+255),f,b
  2065  00318C  E002               	bz	l76
  2066  00318E  6B7B               	clrf	F1655& (0+255),b
  2067  003190  D003               	goto	l75
  2068  003192                     l76:
  2069                           ;wsw.c: 728: else fl=1;
  2070  003192  0E01               	movlw	1
  2071  003194  CFE8 F77B          	movff	wreg,F1655
  2072  003198                     l75:
  2073                           ;wsw.c: 729: }
  2074  003198  6AD9               	clrf	fsr2l,c
  2075  00319A                     l78:
  2076                           ;wsw.c: 732: {
  2077  00319A  50D9               	movf	fsr2l,w,c
  2078  00319C  EE07  F07C         	lfsr	0,_KMark
  2079  0031A0  26E9               	addwf	fsr0l,f,c
  2080  0031A2  0E00               	movlw	0
  2081  0031A4  22EA               	addwfc	fsr0h,f,c
  2082  0031A6  50EF               	movf	indf0,w,c
  2083  0031A8  6E00               	movwf	btemp,c
  2084  0031AA  A000               	btfss	btemp,0,c
  2085  0031AC  D020               	goto	l81
  2086                           ;wsw.c: 734: {
  2087  0031AE  50D9               	movf	fsr2l,w,c
  2088  0031B0  EE07  F07C         	lfsr	0,_KMark
  2089  0031B4  26E9               	addwf	fsr0l,f,c
  2090  0031B6  0E00               	movlw	0
  2091  0031B8  22EA               	addwfc	fsr0h,f,c
  2092  0031BA  50EF               	movf	indf0,w,c
  2093  0031BC  6E00               	movwf	btemp,c
  2094  0031BE  A400               	btfss	btemp,2,c
  2095  0031C0  D016               	goto	l81
  2096                           ;wsw.c: 736: {
  2097  0031C2  0107               	movlb	F1655 shr (0+8)
  2098  0031C4  537B               	movf	F1655& (0+255),f,b
  2099  0031C6  E00B               	bz	l83
  2100  0031C8  50D9               	movf	fsr2l,w,c
  2101  0031CA  EE07  F07C         	lfsr	0,_KMark
  2102  0031CE  26E9               	addwf	fsr0l,f,c
  2103  0031D0  0E00               	movlw	0
  2104  0031D2  22EA               	addwfc	fsr0h,f,c
  2105  0031D4  50EF               	movf	indf0,w,c
  2106  0031D6  0BFD               	andlw	-3
  2107  0031D8  0902               	iorlw	2
  2108  0031DA  6EEF               	movwf	indf0,c
  2109  0031DC  D008               	goto	l81
  2110  0031DE                     l83:
  2111                           ;wsw.c: 739: else KMark[i].m=0;
  2112  0031DE  50D9               	movf	fsr2l,w,c
  2113  0031E0  EE07  F07C         	lfsr	0,_KMark
  2114  0031E4  26E9               	addwf	fsr0l,f,c
  2115  0031E6  0E00               	movlw	0
  2116  0031E8  22EA               	addwfc	fsr0h,f,c
  2117  0031EA  0EFD               	movlw	-3
  2118  0031EC  16EF               	andwf	indf0,f,c
  2119  0031EE                     l81:
  2120  0031EE  2AD9               	incf	fsr2l,f,c
  2121  0031F0  0E0F               	movlw	15
  2122  0031F2  64D9               	cpfsgt	fsr2l,c
  2123  0031F4  D7D2               	goto	l78
  2124  0031F6  0C0F               	retlw	15
  2125                           ;wsw.c: 740: }
  2126  0031F8                     __end_of_KolMark:
  2127                           ;wsw.c: 749: void SetPrWswData(void)
  2128                           ;wsw.c: 750: {
  2129  0031F8                     _SetPrWswData:
  2130  000000                     
  2131                           ;wsw.c: 751: unsigned char i;
  2132  0031F8  6AD9               	clrf	fsr2l,c
  2133  0031FA                     l86:
  2134                           ;wsw.c: 755: {
  2135  0031FA  50D9               	movf	fsr2l,w,c
  2136  0031FC  0D10               	mullw	16
  2137  0031FE  0E40               	movlw	low _PWD
  2138  003200  24F3               	addwf	prodl,w,c
  2139  003202  6EE9               	movwf	fsr0l,c
  2140  003204  0E01               	movlw	high _PWD
  2141  003206  20F4               	addwfc	prodh,w,c
  2142  003208  6EEA               	movwf	fsr0h,c
  2143  00320A  50EF               	movf	indf0,w,c
  2144  00320C  6E00               	movwf	btemp,c
  2145  00320E  50D9               	movf	fsr2l,w,c
  2146  003210  0D10               	mullw	16
  2147  003212  B000               	btfsc	btemp,0,c
  2148  003214  D00C               	goto	L9
  2149  003216  0E4A               	movlw	low (_PWD+10)
  2150  003218  24F3               	addwf	prodl,w,c
  2151  00321A  6EE9               	movwf	fsr0l,c
  2152  00321C  0E01               	movlw	high (_PWD+10)
  2153  00321E  20F4               	addwfc	prodh,w,c
  2154  003220  6EEA               	movwf	fsr0h,c
  2155  003222  50EF               	movf	indf0,w,c
  2156  003224  6E00               	movwf	btemp,c
  2157  003226  A000               	btfss	btemp,0,c
  2158  003228  D00B               	goto	l89
  2159                           ;wsw.c: 757: {
  2160  00322A  50D9               	movf	fsr2l,w,c
  2161  00322C  0D10               	mullw	16
  2162  00322E                     L9:
  2163  00322E  0E40               	movlw	low _PWD
  2164  003230  24F3               	addwf	prodl,w,c
  2165  003232  6EE9               	movwf	fsr0l,c
  2166  003234  0E01               	movlw	high _PWD
  2167  003236  20F4               	addwfc	prodh,w,c
  2168  003238  6EEA               	movwf	fsr0h,c
  2169  00323A  EE11  F020         	lfsr	1,_WswData
  2170  00323E  D00F               	goto	L10
  2171                           ;wsw.c: 759: return;
  2172  003240                     l89:
  2173                           ;wsw.c: 760: };
  2174  003240  2AD9               	incf	fsr2l,f,c
  2175  003242  0E03               	movlw	3
  2176  003244  64D9               	cpfsgt	fsr2l,c
  2177  003246  D7D9               	goto	l86
  2178                           ;wsw.c: 761: }
  2179  003248  EE01  F080         	lfsr	0,_PWD+64
  2180  00324C  EE11  F020         	lfsr	1,_WswData
  2181  003250  0E10               	movlw	16
  2182  003252  ECC4  F03F         	call	structcopy
  2183                           ;wsw.c: 773: bfWswData=PWD[5-1];
  2184  003256  EE01  F080         	lfsr	0,_PWD+64
  2185  00325A  EE11  F030         	lfsr	1,_bfWswData
  2186  00325E                     L10:
  2187  00325E  0E10               	movlw	16
  2188  003260  EFC4  F03F         	goto	structcopy
  2189                           ;wsw.c: 774: }
  2190  003264                     __end_of_SetPrWswData:
  2191                           ;wsw.c: 776: void SetLedData(WData Dt,WStatus St
      +                          ,LedPack *LedData,const unsigned char gr)
  2192                           ;wsw.c: 777: {
  2193  003264  00F5               	dw	?_SetLedData
  2194  003266                     _SetLedData:
  2195  000000                     
  2196                           ;wsw.c: 778: unsigned char *dLed1,*dLed0;
  2197                           ; _LedData loaded to fsr1
  2198  003266  C0FD  FFE1         	movff	?_SetLedData+8,fsr1l
  2199  00326A  C0FE  FFE2         	movff	?_SetLedData+9,fsr1h
  2200  00326E  0100               	movlb	__Lparam shr (0+8)
  2201  003270  51FF               	movf	(?_SetLedData+10)^(__Lparam& (0+65280)),w
  2202  003272  E002               	bz	u1046
  2203  003274  0E01               	movlw	1
  2204  003276  D001               	goto	L2
  2205  003278                     u1046:
  2206  003278  0E03               	movlw	3
  2207  00327A                     L2:
  2208  00327A  CFE1 F000          	movff	fsr1l,btemp
  2209  00327E  CFE2 F001          	movff	fsr1h,btemp+1
  2210  003282  2600               	addwf	btemp,f,c
  2211  003284  0E00               	movlw	0
  2212  003286  2201               	addwfc	btemp+1,f,c
  2213  003288  C000  FFD9         	movff	btemp,fsr2l
  2214  00328C  C001  FFDA         	movff	btemp+1,fsr2h
  2215                           ;wsw.c: 781: dLed0=(!gr)?&(*LedData).dLed0:&(*Le
      +                          dData).dLed2;
  2216  003290  51FF               	movf	(?_SetLedData+10)^(__Lparam& (0+65280)),w
  2217  003292  E002               	bz	u1066
  2218  003294  0E02               	movlw	2
  2219  003296  D001               	goto	L3
  2220  003298                     u1066:
  2221  003298  0E04               	movlw	4
  2222  00329A                     L3:
  2223  00329A  CFE1 F000          	movff	fsr1l,btemp
  2224  00329E  CFE2 F001          	movff	fsr1h,btemp+1
  2225  0032A2  2600               	addwf	btemp,f,c
  2226  0032A4  0E00               	movlw	0
  2227  0032A6  2201               	addwfc	btemp+1,f,c
  2228  0032A8  C000  FFF3         	movff	btemp,prodl
  2229  0032AC  C001  FFF4         	movff	btemp+1,prodh
  2230                           ;wsw.c: 786: if(St.hex)
  2231  0032B0  A5F7               	btfss	(?_SetLedData+2)^(__Lparam& (0+65280)),2,
      +                          b
  2232  0032B2  D019               	goto	l91
  2233                           ;wsw.c: 787: {
  2234  0032B4  C0F6  F000         	movff	?_SetLedData+1,btemp
  2235  0032B8  0EF0               	movlw	-16
  2236  0032BA  1600               	andwf	btemp,f,c
  2237  0032BC  3A00               	swapf	btemp,f,c
  2238  0032BE  0E0F               	movlw	15
  2239  0032C0  1600               	andwf	btemp,f,c
  2240  0032C2  C000  F002         	movff	btemp,btemp+2
  2241  0032C6  6A03               	clrf	btemp+3,c
  2242  0032C8  5002               	movf	btemp+2,w,c
  2243  0032CA  0F3E               	addlw	low _Znak
  2244  0032CC  6EF6               	movwf	tblptrl,c
  2245  0032CE  5003               	movf	btemp+3,w,c
  2246  0032D0  6EF7               	movwf	tblptrh,c
  2247  0032D2  0E08               	movlw	high _Znak
  2248  0032D4  22F7               	addwfc	tblptrh,f,c
  2249  0032D6  0008               	tblrd		*
  2250  0032D8  CFF5 FFDF          	movff	tablat,indf2
  2251                           ;wsw.c: 789: *dLed0=Znak[Dt.Data0&0x0F];
  2252  0032DC  C0F6  F000         	movff	?_SetLedData+1,btemp
  2253  0032E0  0E0F               	movlw	15
  2254  0032E2  1600               	andwf	btemp,f,c
  2255  0032E4  D020               	goto	L4
  2256                           ;wsw.c: 790: }else
  2257  0032E6                     l91:
  2258                           ;wsw.c: 791: if(St.dec)
  2259  0032E6  0100               	movlb	__Lparam shr (0+8)
  2260  0032E8  A3F7               	btfss	(?_SetLedData+2)^(__Lparam& (0+65280)),1,
      +                          b
  2261  0032EA  D02F               	goto	l93
  2262                           ;wsw.c: 792: {
  2263  0032EC  0E63               	movlw	99
  2264  0032EE  65F6               	cpfsgt	(?_SetLedData+1)^(__Lparam& (0+65280)),b
  2265  0032F0  D001               	goto	l94
  2266  0032F2  6FF6               	movwf	(?_SetLedData+1)^(__Lparam& (0+65280)),b
  2267  0032F4                     l94:
  2268                           ;wsw.c: 794: *dLed1=Znak[Dt.Data0/10];
  2269  0032F4  0E0A               	movlw	10
  2270  0032F6  6E01               	movwf	btemp+1,c
  2271  0032F8  0100               	movlb	__Lparam shr (0+8)
  2272  0032FA  51F6               	movf	(?_SetLedData+1)^(__Lparam& (0+65280)),w
  2273  0032FC  EC4C  F03F         	call	lbdiv
  2274  003300  6E00               	movwf	btemp,c
  2275  003302  C000  F002         	movff	btemp,btemp+2
  2276  003306  6A03               	clrf	btemp+3,c
  2277  003308  5002               	movf	btemp+2,w,c
  2278  00330A  0F3E               	addlw	low _Znak
  2279  00330C  6EF6               	movwf	tblptrl,c
  2280  00330E  5003               	movf	btemp+3,w,c
  2281  003310  6EF7               	movwf	tblptrh,c
  2282  003312  0E08               	movlw	high _Znak
  2283  003314  22F7               	addwfc	tblptrh,f,c
  2284  003316  0008               	tblrd		*
  2285  003318  CFF5 FFDF          	movff	tablat,indf2
  2286                           ;wsw.c: 795: *dLed0=Znak[Dt.Data0%10];
  2287  00331C  0E0A               	movlw	10
  2288  00331E  6E01               	movwf	btemp+1,c
  2289  003320  51F6               	movf	(?_SetLedData+1)^(__Lparam& (0+65280)),w
  2290  003322  EC4C  F03F         	call	lbmod
  2291  003326                     L4:
  2292  003326  C000  F002         	movff	btemp,btemp+2
  2293  00332A  6A03               	clrf	btemp+3,c
  2294  00332C  5002               	movf	btemp+2,w,c
  2295  00332E  0F3E               	addlw	low _Znak
  2296  003330  6EF6               	movwf	tblptrl,c
  2297  003332  5003               	movf	btemp+3,w,c
  2298  003334  6EF7               	movwf	tblptrh,c
  2299  003336  0E08               	movlw	high _Znak
  2300  003338  22F7               	addwfc	tblptrh,f,c
  2301  00333A  CFF3 FFE9          	movff	prodl,fsr0l
  2302  00333E  CFF4 FFEA          	movff	prodh,fsr0h
  2303  003342  0008               	tblrd		*
  2304  003344  CFF5 FFEF          	movff	tablat,indf0
  2305                           ;wsw.c: 796: }else
  2306  003348  D008               	goto	l92
  2307  00334A                     l93:
  2308                           ;wsw.c: 797: {
  2309  00334A  C0F5  FFDF         	movff	?_SetLedData,indf2
  2310                           ;wsw.c: 799: *dLed0=Dt.Data0;
  2311  00334E  CFF3 FFE9          	movff	prodl,fsr0l
  2312  003352  CFF4 FFEA          	movff	prodh,fsr0h
  2313  003356  C0F6  FFEF         	movff	?_SetLedData+1,indf0
  2314  00335A                     l92:
  2315                           ;wsw.c: 800: }
  2316  00335A  0100               	movlb	__Lparam shr (0+8)
  2317  00335C  A7F7               	btfss	(?_SetLedData+2)^(__Lparam& (0+65280)),3,
      +                          b
  2318  00335E  D00B               	goto	l96
  2319  003360  0E3E               	movlw	low _Znak
  2320  003362  6EF6               	movwf	tblptrl,c
  2321  003364  0E08               	movlw	high _Znak
  2322  003366  6EF7               	movwf	tblptrh,c
  2323  003368  0008               	tblrd		*
  2324  00336A  50F5               	movf	tablat,w,c
  2325  00336C  6E00               	movwf	btemp,c
  2326  00336E  18DF               	xorwf	indf2,w,c
  2327  003370  E102               	bnz	l96
  2328                           ;wsw.c: 802: *dLed1=0b00000000;
  2329  003372  0E00               	movlw	0
  2330  003374  6EDF               	movwf	indf2,c
  2331  003376                     l96:
  2332                           ;wsw.c: 803: if (St.kropka0)
  2333  003376  0100               	movlb	__Lparam shr (0+8)
  2334  003378  A9F7               	btfss	(?_SetLedData+2)^(__Lparam& (0+65280)),4,
      +                          b
  2335  00337A  D00B               	goto	l97
  2336                           ;wsw.c: 804: *dLed0=*dLed0|0b10000000;
  2337  00337C  CFF3 FFE9          	movff	prodl,fsr0l
  2338  003380  CFF4 FFEA          	movff	prodh,fsr0h
  2339  003384  50EF               	movf	indf0,w,c
  2340  003386  0980               	iorlw	-128
  2341  003388  CFF3 FFE9          	movff	prodl,fsr0l
  2342  00338C  CFF4 FFEA          	movff	prodh,fsr0h
  2343  003390  6EEF               	movwf	indf0,c
  2344  003392                     l97:
  2345                           ;wsw.c: 805: if (St.kropka1)
  2346  003392  0100               	movlb	__Lparam shr (0+8)
  2347  003394  ABF7               	btfss	(?_SetLedData+2)^(__Lparam& (0+65280)),5,
      +                          b
  2348  003396  D003               	goto	l98
  2349                           ;wsw.c: 806: *dLed1=*dLed1|0b10000000;
  2350  003398  50DF               	movf	indf2,w,c
  2351  00339A  0980               	iorlw	-128
  2352  00339C  6EDF               	movwf	indf2,c
  2353  00339E                     l98:
  2354                           ;wsw.c: 807: if (St.wygas0||(*LedData).setOff)
  2355  00339E  0100               	movlb	__Lparam shr (0+8)
  2356  0033A0  BDF7               	btfsc	(?_SetLedData+2)^(__Lparam& (0+65280)),6,
      +                          b
  2357  0033A2  D004               	goto	u1170
  2358  0033A4  50E7               	movf	indf1,w,c
  2359  0033A6  6E00               	movwf	btemp,c
  2360  0033A8  A000               	btfss	btemp,0,c
  2361  0033AA  D006               	goto	l99
  2362  0033AC                     u1170:
  2363                           ;wsw.c: 808: *dLed0=0b00000000;
  2364  0033AC  CFF3 FFE9          	movff	prodl,fsr0l
  2365  0033B0  CFF4 FFEA          	movff	prodh,fsr0h
  2366  0033B4  0E00               	movlw	0
  2367  0033B6  6EEF               	movwf	indf0,c
  2368  0033B8                     l99:
  2369                           ;wsw.c: 809: if (St.wygas1||(*LedData).setOff)
  2370  0033B8  0100               	movlb	__Lparam shr (0+8)
  2371  0033BA  BFF7               	btfsc	(?_SetLedData+2)^(__Lparam& (0+65280)),7,
      +                          b
  2372  0033BC  D004               	goto	u1200
  2373  0033BE  50E7               	movf	indf1,w,c
  2374  0033C0  6E00               	movwf	btemp,c
  2375  0033C2  A000               	btfss	btemp,0,c
  2376  0033C4  D002               	goto	l100
  2377  0033C6                     u1200:
  2378                           ;wsw.c: 810: *dLed1=0b00000000;
  2379  0033C6  0E00               	movlw	0
  2380  0033C8  6EDF               	movwf	indf2,c
  2381  0033CA                     l100:
  2382                           ;wsw.c: 816: if (St.sdiode&&St.sbdid)
  2383  0033CA  0100               	movlb	__Lparam shr (0+8)
  2384  0033CC  A5F8               	btfss	(?_SetLedData+3)^(__Lparam& (0+65280)),2,
      +                          b
  2385  0033CE  D01A               	goto	l101
  2386  0033D0  51FB               	movf	(?_SetLedData+6)^(__Lparam& (0+65280)),w
  2387  0033D2  0BFF               	andlw	255
  2388  0033D4  E017               	bz	l101
  2389                           ;wsw.c: 817: {
  2390  0033D6  EE00 F007          	lfsr	0,7
  2391  0033DA  50E1               	movf	fsr1l,w,c
  2392  0033DC  26E9               	addwf	fsr0l,f,c
  2393  0033DE  50E2               	movf	fsr1h,w,c
  2394  0033E0  22EA               	addwfc	fsr0h,f,c
  2395  0033E2  0100               	movlb	__Lparam shr (0+8)
  2396  0033E4  51FB               	movf	(?_SetLedData+6)^(__Lparam& (0+65280)),w
  2397  0033E6  0BFF               	andlw	255
  2398  0033E8  12EE               	iorwf	postinc0,f,c
  2399  0033EA  0E00               	movlw	0
  2400  0033EC  12ED               	iorwf	postdec0,f,c
  2401                           ;wsw.c: 819: (*LedData).mark|=(0x00ff&St.sbdid);
  2402  0033EE  EE00 F005          	lfsr	0,5
  2403  0033F2  50E1               	movf	fsr1l,w,c
  2404  0033F4  26E9               	addwf	fsr0l,f,c
  2405  0033F6  50E2               	movf	fsr1h,w,c
  2406  0033F8  22EA               	addwfc	fsr0h,f,c
  2407  0033FA  51FB               	movf	(?_SetLedData+6)^(__Lparam& (0+65280)),w
  2408  0033FC  0BFF               	andlw	255
  2409  0033FE  12EE               	iorwf	postinc0,f,c
  2410  003400  0E00               	movlw	0
  2411  003402  12ED               	iorwf	postdec0,f,c
  2412  003404                     l101:
  2413                           ;wsw.c: 820: }
  2414  003404  0100               	movlb	__Lparam shr (0+8)
  2415  003406  A7F8               	btfss	(?_SetLedData+3)^(__Lparam& (0+65280)),3,
      +                          b
  2416  003408  0012               	return	
  2417  00340A  51FC               	movf	(?_SetLedData+7)^(__Lparam& (0+65280)),w
  2418  00340C  0BFF               	andlw	255
  2419  00340E  B4D8               	btfsc	status,2,c
  2420  003410  0012               	return	
  2421                           ;wsw.c: 822: {
  2422  003412  EE00 F007          	lfsr	0,7
  2423  003416  50E1               	movf	fsr1l,w,c
  2424  003418  26E9               	addwf	fsr0l,f,c
  2425  00341A  50E2               	movf	fsr1h,w,c
  2426  00341C  22EA               	addwfc	fsr0h,f,c
  2427  00341E  51FC               	movf	(?_SetLedData+7)^(__Lparam& (0+65280)),w
  2428  003420  0BFF               	andlw	255
  2429  003422  12EE               	iorwf	postinc0,f,c
  2430  003424  0E00               	movlw	0
  2431  003426  12ED               	iorwf	postdec0,f,c
  2432                           ;wsw.c: 824: (*LedData).mark&=~(0x00ff&St.rbdid)
      +                          ;
  2433  003428  51FC               	movf	(?_SetLedData+7)^(__Lparam& (0+65280)),w
  2434  00342A  0BFF               	andlw	255
  2435  00342C  6E00               	movwf	btemp,c
  2436  00342E  C000  F002         	movff	btemp,btemp+2
  2437  003432  6A03               	clrf	btemp+3,c
  2438  003434  1C02               	comf	btemp+2,w,c
  2439  003436  6E00               	movwf	btemp,c
  2440  003438  1C03               	comf	btemp+3,w,c
  2441  00343A  6E01               	movwf	btemp+1,c
  2442  00343C  EE00 F005          	lfsr	0,5
  2443  003440  50E1               	movf	fsr1l,w,c
  2444  003442  26E9               	addwf	fsr0l,f,c
  2445  003444  50E2               	movf	fsr1h,w,c
  2446  003446  22EA               	addwfc	fsr0h,f,c
  2447  003448  5000               	movf	btemp,w,c
  2448  00344A  16EE               	andwf	postinc0,f,c
  2449  00344C  5001               	movf	btemp+1,w,c
  2450  00344E  16ED               	andwf	postdec0,f,c
  2451                           ;wsw.c: 825: }
  2452  003450  0012               	return	
  2453  003452                     __end_of_SetLedData:
  2454                           ;wsw.c: 829: void FormatWswData(void)
  2455                           ;wsw.c: 830: {
  2456  003452                     _FormatWswData:
  2457  000000                     
  2458                           ;wsw.c: 831: unsigned char i;
  2459  003452  0E01               	movlw	1
  2460  003454  6EF3               	movwf	prodl,c
  2461  003456  6AF4               	clrf	prodh,c
  2462                           ;wsw.c: 838: for(i=0;i<16;i++)
  2463  003458  6AD9               	clrf	fsr2l,c
  2464  00345A                     l104:
  2465                           ;wsw.c: 839: {
  2466  00345A  50D9               	movf	fsr2l,w,c
  2467  00345C  EE07  F07C         	lfsr	0,_KMark
  2468  003460  26E9               	addwf	fsr0l,f,c
  2469  003462  0E00               	movlw	0
  2470  003464  22EA               	addwfc	fsr0h,f,c
  2471  003466  50EF               	movf	indf0,w,c
  2472  003468  6E00               	movwf	btemp,c
  2473  00346A  A000               	btfss	btemp,0,c
  2474  00346C  D00C               	goto	l107
  2475  00346E  CFF3 F000          	movff	prodl,btemp
  2476  003472  CFF4 F001          	movff	prodh,btemp+1
  2477  003476  0101               	movlb	(_LedData+7) shr (0+8)
  2478  003478  C000  FFE8         	movff	btemp,wreg
  2479  00347C  131E               	iorwf	(_LedData+7)& (0+255),f,b
  2480  00347E  C001  FFE8         	movff	btemp+1,wreg
  2481  003482  131F               	iorwf	(_LedData+8)& (0+255),f,b
  2482  003484  D00B               	goto	l108
  2483  003486                     l107:
  2484                           ;wsw.c: 841: else LedData.mask&=~msk;
  2485  003486  1CF3               	comf	prodl,w,c
  2486  003488  6E00               	movwf	btemp,c
  2487  00348A  1CF4               	comf	prodh,w,c
  2488  00348C  6E01               	movwf	btemp+1,c
  2489  00348E  0101               	movlb	(_LedData+7) shr (0+8)
  2490  003490  C000  FFE8         	movff	btemp,wreg
  2491  003494  171E               	andwf	(_LedData+7)& (0+255),f,b
  2492  003496  C001  FFE8         	movff	btemp+1,wreg
  2493  00349A  171F               	andwf	(_LedData+8)& (0+255),f,b
  2494  00349C                     l108:
  2495                           ;wsw.c: 842: if(KMark[i].m) LedData.mark|=msk;
  2496  00349C  50D9               	movf	fsr2l,w,c
  2497  00349E  EE07  F07C         	lfsr	0,_KMark
  2498  0034A2  26E9               	addwf	fsr0l,f,c
  2499  0034A4  0E00               	movlw	0
  2500  0034A6  22EA               	addwfc	fsr0h,f,c
  2501  0034A8  50EF               	movf	indf0,w,c
  2502  0034AA  6E00               	movwf	btemp,c
  2503  0034AC  A200               	btfss	btemp,1,c
  2504  0034AE  D00C               	goto	l109
  2505  0034B0  CFF3 F000          	movff	prodl,btemp
  2506  0034B4  CFF4 F001          	movff	prodh,btemp+1
  2507  0034B8  0101               	movlb	(_LedData+5) shr (0+8)
  2508  0034BA  C000  FFE8         	movff	btemp,wreg
  2509  0034BE  131C               	iorwf	(_LedData+5)& (0+255),f,b
  2510  0034C0  C001  FFE8         	movff	btemp+1,wreg
  2511  0034C4  131D               	iorwf	(_LedData+6)& (0+255),f,b
  2512  0034C6  D00B               	goto	l110
  2513  0034C8                     l109:
  2514                           ;wsw.c: 843: else LedData.mark&=~msk;
  2515  0034C8  1CF3               	comf	prodl,w,c
  2516  0034CA  6E00               	movwf	btemp,c
  2517  0034CC  1CF4               	comf	prodh,w,c
  2518  0034CE  6E01               	movwf	btemp+1,c
  2519  0034D0  0101               	movlb	(_LedData+5) shr (0+8)
  2520  0034D2  C000  FFE8         	movff	btemp,wreg
  2521  0034D6  171C               	andwf	(_LedData+5)& (0+255),f,b
  2522  0034D8  C001  FFE8         	movff	btemp+1,wreg
  2523  0034DC  171D               	andwf	(_LedData+6)& (0+255),f,b
  2524  0034DE                     l110:
  2525                           ;wsw.c: 844: msk=msk<<1;
  2526  0034DE  90D8               	bcf	status,0,c
  2527  0034E0  36F3               	rlcf	prodl,f,c
  2528  0034E2  36F4               	rlcf	prodh,f,c
  2529  0034E4  2AD9               	incf	fsr2l,f,c
  2530  0034E6  0E0F               	movlw	15
  2531  0034E8  64D9               	cpfsgt	fsr2l,c
  2532  0034EA  D7B7               	goto	l104
  2533                           ;wsw.c: 845: }
  2534  0034EC  0101               	movlb	(_WswData+11) shr (0+8)
  2535  0034EE  A92B               	btfss	(_WswData+11)& (0+255),4,b
  2536  0034F0  D013               	goto	l111
  2537  0034F2  C10C  F0F5         	movff	_DynData+6,?_SetLedData
  2538  0034F6  C10D  F0F6         	movff	_DynData+7,?_SetLedData+1
  2539  0034FA  EE01  F006         	lfsr	0,_DynData
  2540  0034FE  EE10  F0F7         	lfsr	1,?_SetLedData+2
  2541  003502  0E06               	movlw	6
  2542  003504  ECC4  F03F         	call	structcopy
  2543  003508  0100               	movlb	__Lparam shr (0+8)
  2544  00350A  0E17               	movlw	low _LedData
  2545  00350C  6FFD               	movwf	(?_SetLedData+8)^(__Lparam& (0+65280)),b
  2546  00350E  0E01               	movlw	high _LedData
  2547  003510  6FFE               	movwf	(?_SetLedData+9)^(__Lparam& (0+65280)),b
  2548  003512  6BFF               	clrf	(?_SetLedData+10)^(__Lparam& (0+65280)),b
  2549  003514  DEA8               	call	_SetLedData	;wreg free
  2550  003516  D029               	goto	l112
  2551  003518                     l111:
  2552                           ;wsw.c: 851: else
  2553  003518  0101               	movlb	(_WswData+12) shr (0+8)
  2554  00351A  512C               	movf	(_WswData+12)& (0+255),w,b
  2555  00351C  112D               	iorwf	(_WswData+13)& (0+255),w,b
  2556  00351E  E013               	bz	l113
  2557  003520  C136  F0F5         	movff	_bfWswData+6,?_SetLedData
  2558  003524  C137  F0F6         	movff	_bfWswData+7,?_SetLedData+1
  2559  003528  EE01  F030         	lfsr	0,_bfWswData
  2560  00352C  EE10  F0F7         	lfsr	1,?_SetLedData+2
  2561  003530  0E06               	movlw	6
  2562  003532  ECC4  F03F         	call	structcopy
  2563  003536  0100               	movlb	__Lparam shr (0+8)
  2564  003538  0E17               	movlw	low _LedData
  2565  00353A  6FFD               	movwf	(?_SetLedData+8)^(__Lparam& (0+65280)),b
  2566  00353C  0E01               	movlw	high _LedData
  2567  00353E  6FFE               	movwf	(?_SetLedData+9)^(__Lparam& (0+65280)),b
  2568  003540  6BFF               	clrf	(?_SetLedData+10)^(__Lparam& (0+65280)),b
  2569  003542  DE91               	call	_SetLedData	;wreg free
  2570  003544  D012               	goto	l112
  2571  003546                     l113:
  2572                           ;wsw.c: 853: else SetLedData(WswData.Dt,WswData.
      +                          St,&LedData,0);
  2573  003546  C126  F0F5         	movff	_WswData+6,?_SetLedData
  2574  00354A  C127  F0F6         	movff	_WswData+7,?_SetLedData+1
  2575  00354E  EE01  F020         	lfsr	0,_WswData
  2576  003552  EE10  F0F7         	lfsr	1,?_SetLedData+2
  2577  003556  0E06               	movlw	6
  2578  003558  ECC4  F03F         	call	structcopy
  2579  00355C  0100               	movlb	__Lparam shr (0+8)
  2580  00355E  0E17               	movlw	low _LedData
  2581  003560  6FFD               	movwf	(?_SetLedData+8)^(__Lparam& (0+65280)),b
  2582  003562  0E01               	movlw	high _LedData
  2583  003564  6FFE               	movwf	(?_SetLedData+9)^(__Lparam& (0+65280)),b
  2584  003566  6BFF               	clrf	(?_SetLedData+10)^(__Lparam& (0+65280)),b
  2585  003568  DE7E               	call	_SetLedData	;wreg free
  2586  00356A                     l112:
  2587                           ;wsw.c: 856: if(WswData.St.dyn) SetLedData(DynDa
      +                          ta.Dt,DynData.St,&LedData,1);
  2588  00356A  0101               	movlb	(_WswData+1) shr (0+8)
  2589  00356C  A921               	btfss	(_WswData+1)& (0+255),4,b
  2590  00356E  D00C               	goto	l115
  2591  003570  C10C  F0F5         	movff	_DynData+6,?_SetLedData
  2592  003574  C10D  F0F6         	movff	_DynData+7,?_SetLedData+1
  2593  003578  EE01  F006         	lfsr	0,_DynData
  2594  00357C  EE10  F0F7         	lfsr	1,?_SetLedData+2
  2595  003580  0E06               	movlw	6
  2596  003582  ECC4  F03F         	call	structcopy
  2597  003586  D01B               	goto	L12
  2598  003588                     l115:
  2599                           ;wsw.c: 857: else
  2600  003588  0101               	movlb	(_WswData+2) shr (0+8)
  2601  00358A  5122               	movf	(_WswData+2)& (0+255),w,b
  2602  00358C  1123               	iorwf	(_WswData+3)& (0+255),w,b
  2603  00358E  E00C               	bz	l117
  2604  003590  C138  F0F5         	movff	_bfWswData+8,?_SetLedData
  2605  003594  C139  F0F6         	movff	_bfWswData+9,?_SetLedData+1
  2606  003598  EE01  F03A         	lfsr	0,_bfWswData+10
  2607  00359C  EE10  F0F7         	lfsr	1,?_SetLedData+2
  2608  0035A0  0E06               	movlw	6
  2609  0035A2  ECC4  F03F         	call	structcopy
  2610  0035A6  D00B               	goto	L12
  2611  0035A8                     l117:
  2612                           ;wsw.c: 859: else SetLedData(WswData.Dt2,WswData
      +                          .St2,&LedData,1);
  2613  0035A8  C128  F0F5         	movff	_WswData+8,?_SetLedData
  2614  0035AC  C129  F0F6         	movff	_WswData+9,?_SetLedData+1
  2615  0035B0  EE01  F02A         	lfsr	0,_WswData+10
  2616  0035B4  EE10  F0F7         	lfsr	1,?_SetLedData+2
  2617  0035B8  0E06               	movlw	6
  2618  0035BA  ECC4  F03F         	call	structcopy
  2619  0035BE                     L12:
  2620  0035BE  0100               	movlb	__Lparam shr (0+8)
  2621  0035C0  0E17               	movlw	low _LedData
  2622  0035C2  6FFD               	movwf	(?_SetLedData+8)^(__Lparam& (0+65280)),b
  2623  0035C4  0E01               	movlw	high _LedData
  2624  0035C6  6FFE               	movwf	(?_SetLedData+9)^(__Lparam& (0+65280)),b
  2625  0035C8  0E01               	movlw	1
  2626  0035CA  6FFF               	movwf	(?_SetLedData+10)^(__Lparam& (0+65280)),b
  2627  0035CC  D64C               	goto	_SetLedData	;wreg free
  2628                           ;wsw.c: 868: }
  2629  0035CE                     __end_of_FormatWswData:
  2630                           ;wsw.c: 871: void PrintWswData(void)
  2631                           ;wsw.c: 872: {
  2632  0035CE                     _PrintWswData:
  2633  000000                     
  2634                           ;wsw.c: 877: S23C0=(LedData.dLed0&0b00000001)?1:
      +                          0;
  2635  0035CE  0101               	movlb	(_LedData+4) shr (0+8)
  2636  0035D0  8EBD               	bsf	4029,7,c
  2637  0035D2  A11B               	btfss	(_LedData+4)& (0+255),0,b
  2638  0035D4  9EBD               	bcf	4029,7,c
  2639                           ;wsw.c: 878: S23C1=(LedData.dLed0&0b00000010)?1:
      +                          0;
  2640  0035D6  8E6E               	bsf	3950,7,c
  2641  0035D8  A31B               	btfss	(_LedData+4)& (0+255),1,b
  2642  0035DA  9E6E               	bcf	3950,7,c
  2643                           ;wsw.c: 879: S23C2=(LedData.dLed0&0b00000100)?1:
      +                          0;
  2644  0035DC  8E74               	bsf	3956,7,c
  2645  0035DE  A51B               	btfss	(_LedData+4)& (0+255),2,b
  2646  0035E0  9E74               	bcf	3956,7,c
  2647                           ;wsw.c: 880: S23C3=(LedData.dLed0&0b00001000)?1:
      +                          0;
  2648  0035E2  8E7A               	bsf	3962,7,c
  2649  0035E4  A71B               	btfss	(_LedData+4)& (0+255),3,b
  2650  0035E6  9E7A               	bcf	3962,7,c
  2651                           ;wsw.c: 881: S22C3=(LedData.dLed0&0b00010000)?1:
      +                          0;
  2652  0035E8  8C7A               	bsf	3962,6,c
  2653  0035EA  A91B               	btfss	(_LedData+4)& (0+255),4,b
  2654  0035EC  9C7A               	bcf	3962,6,c
  2655                           ;wsw.c: 882: S22C1=(LedData.dLed0&0b00100000)?1:
      +                          0;
  2656  0035EE  8C6E               	bsf	3950,6,c
  2657  0035F0  AB1B               	btfss	(_LedData+4)& (0+255),5,b
  2658  0035F2  9C6E               	bcf	3950,6,c
  2659                           ;wsw.c: 883: S22C2=(LedData.dLed0&0b01000000)?1:
      +                          0;
  2660  0035F4  8C74               	bsf	3956,6,c
  2661  0035F6  AD1B               	btfss	(_LedData+4)& (0+255),6,b
  2662  0035F8  9C74               	bcf	3956,6,c
  2663                           ;wsw.c: 886: S21C0=(LedData.dLed1&0b00000001)?1:
      +                          0;
  2664  0035FA  8ABD               	bsf	4029,5,c
  2665  0035FC  A11A               	btfss	(_LedData+3)& (0+255),0,b
  2666  0035FE  9ABD               	bcf	4029,5,c
  2667                           ;wsw.c: 887: S21C1=(LedData.dLed1&0b00000010)?1:
      +                          0;
  2668  003600  8A6E               	bsf	3950,5,c
  2669  003602  A31A               	btfss	(_LedData+3)& (0+255),1,b
  2670  003604  9A6E               	bcf	3950,5,c
  2671                           ;wsw.c: 888: S21C2=(LedData.dLed1&0b00000100)?1:
      +                          0;
  2672  003606  8A74               	bsf	3956,5,c
  2673  003608  A51A               	btfss	(_LedData+3)& (0+255),2,b
  2674  00360A  9A74               	bcf	3956,5,c
  2675                           ;wsw.c: 889: S21C3=(LedData.dLed1&0b00001000)?1:
      +                          0;
  2676  00360C  8A7A               	bsf	3962,5,c
  2677  00360E  A71A               	btfss	(_LedData+3)& (0+255),3,b
  2678  003610  9A7A               	bcf	3962,5,c
  2679                           ;wsw.c: 890: S20C3=(LedData.dLed1&0b00010000)?1:
      +                          0;
  2680  003612  887A               	bsf	3962,4,c
  2681  003614  A91A               	btfss	(_LedData+3)& (0+255),4,b
  2682  003616  987A               	bcf	3962,4,c
  2683                           ;wsw.c: 891: S20C1=(LedData.dLed1&0b00100000)?1:
      +                          0;
  2684  003618  886E               	bsf	3950,4,c
  2685  00361A  AB1A               	btfss	(_LedData+3)& (0+255),5,b
  2686  00361C  986E               	bcf	3950,4,c
  2687                           ;wsw.c: 892: S20C2=(LedData.dLed1&0b01000000)?1:
      +                          0;
  2688  00361E  8874               	bsf	3956,4,c
  2689  003620  AD1A               	btfss	(_LedData+3)& (0+255),6,b
  2690  003622  9874               	bcf	3956,4,c
  2691                           ;wsw.c: 895: S06C0=(LedData.dLed2&0b00000001)?1:
      +                          0;
  2692  003624  8CBB               	bsf	4027,6,c
  2693  003626  A119               	btfss	(_LedData+2)& (0+255),0,b
  2694  003628  9CBB               	bcf	4027,6,c
  2695                           ;wsw.c: 896: S06C1=(LedData.dLed2&0b00000010)?1:
      +                          0;
  2696  00362A  8C6C               	bsf	3948,6,c
  2697  00362C  A319               	btfss	(_LedData+2)& (0+255),1,b
  2698  00362E  9C6C               	bcf	3948,6,c
  2699                           ;wsw.c: 897: S06C2=(LedData.dLed2&0b00000100)?1:
      +                          0;
  2700  003630  8C72               	bsf	3954,6,c
  2701  003632  A519               	btfss	(_LedData+2)& (0+255),2,b
  2702  003634  9C72               	bcf	3954,6,c
  2703                           ;wsw.c: 898: S06C3=(LedData.dLed2&0b00001000)?1:
      +                          0;
  2704  003636  8C78               	bsf	3960,6,c
  2705  003638  A719               	btfss	(_LedData+2)& (0+255),3,b
  2706  00363A  9C78               	bcf	3960,6,c
  2707                           ;wsw.c: 899: S05C3=(LedData.dLed2&0b00010000)?1:
      +                          0;
  2708  00363C  8A78               	bsf	3960,5,c
  2709  00363E  A919               	btfss	(_LedData+2)& (0+255),4,b
  2710  003640  9A78               	bcf	3960,5,c
  2711                           ;wsw.c: 900: S05C1=(LedData.dLed2&0b00100000)?1:
      +                          0;
  2712  003642  8A6C               	bsf	3948,5,c
  2713  003644  AB19               	btfss	(_LedData+2)& (0+255),5,b
  2714  003646  9A6C               	bcf	3948,5,c
  2715                           ;wsw.c: 901: S05C2=(LedData.dLed2&0b01000000)?1:
      +                          0;
  2716  003648  8A72               	bsf	3954,5,c
  2717  00364A  AD19               	btfss	(_LedData+2)& (0+255),6,b
  2718  00364C  9A72               	bcf	3954,5,c
  2719                           ;wsw.c: 904: S04C0=(LedData.dLed3&0b00000001)?1:
      +                          0;
  2720  00364E  88BB               	bsf	4027,4,c
  2721  003650  A118               	btfss	(_LedData+1)& (0+255),0,b
  2722  003652  98BB               	bcf	4027,4,c
  2723                           ;wsw.c: 905: S04C1=(LedData.dLed3&0b00000010)?1:
      +                          0;
  2724  003654  886C               	bsf	3948,4,c
  2725  003656  A318               	btfss	(_LedData+1)& (0+255),1,b
  2726  003658  986C               	bcf	3948,4,c
  2727                           ;wsw.c: 906: S04C2=(LedData.dLed3&0b00000100)?1:
      +                          0;
  2728  00365A  8872               	bsf	3954,4,c
  2729  00365C  A518               	btfss	(_LedData+1)& (0+255),2,b
  2730  00365E  9872               	bcf	3954,4,c
  2731                           ;wsw.c: 907: S04C3=(LedData.dLed3&0b00001000)?1:
      +                          0;
  2732  003660  8878               	bsf	3960,4,c
  2733  003662  A718               	btfss	(_LedData+1)& (0+255),3,b
  2734  003664  9878               	bcf	3960,4,c
  2735                           ;wsw.c: 908: S03C3=(LedData.dLed3&0b00010000)?1:
      +                          0;
  2736  003666  8678               	bsf	3960,3,c
  2737  003668  A918               	btfss	(_LedData+1)& (0+255),4,b
  2738  00366A  9678               	bcf	3960,3,c
  2739                           ;wsw.c: 909: S03C1=(LedData.dLed3&0b00100000)?1:
      +                          0;
  2740  00366C  866C               	bsf	3948,3,c
  2741  00366E  AB18               	btfss	(_LedData+1)& (0+255),5,b
  2742  003670  966C               	bcf	3948,3,c
  2743                           ;wsw.c: 910: S03C2=(LedData.dLed3&0b01000000)?1:
      +                          0;
  2744  003672  8672               	bsf	3954,3,c
  2745  003674  AD18               	btfss	(_LedData+1)& (0+255),6,b
  2746  003676  9672               	bcf	3954,3,c
  2747                           ;wsw.c: 913: S24C3=(LedData.dLed1&0b10000000)?1:
      +                          0;
  2748  003678  807B               	bsf	3963,0,c
  2749  00367A  AF1A               	btfss	(_LedData+3)& (0+255),7,b
  2750  00367C  907B               	bcf	3963,0,c
  2751                           ;wsw.c: 924: if(LedData.mask&0b0000000000000001)
      +                           S25C0=(LedData.mark&0b0000000000000001)?1:0;
  2752  00367E  A11E               	btfss	(_LedData+7)& (0+255),0,b
  2753  003680  D003               	goto	l120
  2754  003682  82BE               	bsf	4030,1,c
  2755  003684  A11C               	btfss	(_LedData+5)& (0+255),0,b
  2756  003686  92BE               	bcf	4030,1,c
  2757  003688                     l120:
  2758                           ;wsw.c: 925: if(LedData.mask&0b0000000000000010)
      +                           S02C0=(LedData.mark&0b0000000000000010)?1:0;
  2759  003688  0101               	movlb	(_LedData+7) shr (0+8)
  2760  00368A  A31E               	btfss	(_LedData+7)& (0+255),1,b
  2761  00368C  D003               	goto	l121
  2762  00368E  84BB               	bsf	4027,2,c
  2763  003690  A31C               	btfss	(_LedData+5)& (0+255),1,b
  2764  003692  94BB               	bcf	4027,2,c
  2765  003694                     l121:
  2766                           ;wsw.c: 926: if(LedData.mask&0b0000000000000100)
      +                           S02C2=(LedData.mark&0b0000000000000100)?1:0;
  2767  003694  0101               	movlb	(_LedData+7) shr (0+8)
  2768  003696  A51E               	btfss	(_LedData+7)& (0+255),2,b
  2769  003698  D003               	goto	l122
  2770  00369A  8472               	bsf	3954,2,c
  2771  00369C  A51C               	btfss	(_LedData+5)& (0+255),2,b
  2772  00369E  9472               	bcf	3954,2,c
  2773  0036A0                     l122:
  2774                           ;wsw.c: 927: if(LedData.mask&0b0000000000001000)
      +                           S07C2=(LedData.mark&0b0000000000001000)?1:0;
  2775  0036A0  0101               	movlb	(_LedData+7) shr (0+8)
  2776  0036A2  A71E               	btfss	(_LedData+7)& (0+255),3,b
  2777  0036A4  D003               	goto	l123
  2778  0036A6  8E72               	bsf	3954,7,c
  2779  0036A8  A71C               	btfss	(_LedData+5)& (0+255),3,b
  2780  0036AA  9E72               	bcf	3954,7,c
  2781  0036AC                     l123:
  2782                           ;wsw.c: 928: if(LedData.mask&0b0000000000010000)
      +                           S24C1=(LedData.mark&0b0000000000010000)?1:0;
  2783  0036AC  0101               	movlb	(_LedData+7) shr (0+8)
  2784  0036AE  A91E               	btfss	(_LedData+7)& (0+255),4,b
  2785  0036B0  D003               	goto	l124
  2786  0036B2  806F               	bsf	3951,0,c
  2787  0036B4  A91C               	btfss	(_LedData+5)& (0+255),4,b
  2788  0036B6  906F               	bcf	3951,0,c
  2789  0036B8                     l124:
  2790                           ;wsw.c: 929: if(LedData.mask&0b0000000000100000)
      +                           S07C0=(LedData.mark&0b0000000000100000)?1:0;
  2791  0036B8  0101               	movlb	(_LedData+7) shr (0+8)
  2792  0036BA  AB1E               	btfss	(_LedData+7)& (0+255),5,b
  2793  0036BC  D003               	goto	l125
  2794  0036BE  8EBB               	bsf	4027,7,c
  2795  0036C0  AB1C               	btfss	(_LedData+5)& (0+255),5,b
  2796  0036C2  9EBB               	bcf	4027,7,c
  2797  0036C4                     l125:
  2798                           ;wsw.c: 930: if(LedData.mask&0b0000000001000000)
      +                           S24C2=(LedData.mark&0b0000000001000000)?1:0;
  2799  0036C4  0101               	movlb	(_LedData+7) shr (0+8)
  2800  0036C6  AD1E               	btfss	(_LedData+7)& (0+255),6,b
  2801  0036C8  D003               	goto	l126
  2802  0036CA  8075               	bsf	3957,0,c
  2803  0036CC  AD1C               	btfss	(_LedData+5)& (0+255),6,b
  2804  0036CE  9075               	bcf	3957,0,c
  2805  0036D0                     l126:
  2806                           ;wsw.c: 931: if(LedData.mask&0b0000000010000000)
      +                           S25C2=(LedData.mark&0b0000000010000000)?1:0;
  2807  0036D0  0101               	movlb	(_LedData+7) shr (0+8)
  2808  0036D2  AF1E               	btfss	(_LedData+7)& (0+255),7,b
  2809  0036D4  D003               	goto	l127
  2810  0036D6  8275               	bsf	3957,1,c
  2811  0036D8  AF1C               	btfss	(_LedData+5)& (0+255),7,b
  2812  0036DA  9275               	bcf	3957,1,c
  2813  0036DC                     l127:
  2814                           ;wsw.c: 933: if(LedData.mask&0b0000000100000000)
      +                           S25C3=(LedData.mark&0b0000000100000000)?1:0;
  2815  0036DC  0101               	movlb	(_LedData+7) shr (0+8)
  2816  0036DE  A11F               	btfss	(_LedData+8)& (0+255),0,b
  2817  0036E0  D003               	goto	l128
  2818  0036E2  827B               	bsf	3963,1,c
  2819  0036E4  A11D               	btfss	(_LedData+6)& (0+255),0,b
  2820  0036E6  927B               	bcf	3963,1,c
  2821  0036E8                     l128:
  2822                           ;wsw.c: 934: if(LedData.mask&0b0000001000000000)
      +                           S02C3=(LedData.mark&0b0000001000000000)?1:0;
  2823  0036E8  0101               	movlb	(_LedData+7) shr (0+8)
  2824  0036EA  A31F               	btfss	(_LedData+8)& (0+255),1,b
  2825  0036EC  D003               	goto	l129
  2826  0036EE  8478               	bsf	3960,2,c
  2827  0036F0  A31D               	btfss	(_LedData+6)& (0+255),1,b
  2828  0036F2  9478               	bcf	3960,2,c
  2829  0036F4                     l129:
  2830                           ;wsw.c: 935: if(LedData.mask&0b0000010000000000)
      +                           S07C1=(LedData.mark&0b0000010000000000)?1:0;
  2831  0036F4  0101               	movlb	(_LedData+7) shr (0+8)
  2832  0036F6  A51F               	btfss	(_LedData+8)& (0+255),2,b
  2833  0036F8  D003               	goto	l130
  2834  0036FA  8E6C               	bsf	3948,7,c
  2835  0036FC  A51D               	btfss	(_LedData+6)& (0+255),2,b
  2836  0036FE  9E6C               	bcf	3948,7,c
  2837  003700                     l130:
  2838                           ;wsw.c: 936: if(LedData.mask&0b0000100000000000)
      +                           S03C0=(LedData.mark&0b0000100000000000)?1:0;
  2839  003700  0101               	movlb	(_LedData+7) shr (0+8)
  2840  003702  A71F               	btfss	(_LedData+8)& (0+255),3,b
  2841  003704  D003               	goto	l131
  2842  003706  86BB               	bsf	4027,3,c
  2843  003708  A71D               	btfss	(_LedData+6)& (0+255),3,b
  2844  00370A  96BB               	bcf	4027,3,c
  2845  00370C                     l131:
  2846                           ;wsw.c: 937: if(LedData.mask&0b0001000000000000)
      +                           S05C0=(LedData.mark&0b0001000000000000)?1:0;
  2847  00370C  0101               	movlb	(_LedData+7) shr (0+8)
  2848  00370E  A91F               	btfss	(_LedData+8)& (0+255),4,b
  2849  003710  D003               	goto	l132
  2850  003712  8ABB               	bsf	4027,5,c
  2851  003714  A91D               	btfss	(_LedData+6)& (0+255),4,b
  2852  003716  9ABB               	bcf	4027,5,c
  2853  003718                     l132:
  2854                           ;wsw.c: 938: if(LedData.mask&0b0010000000000000)
      +                           S20C0=(LedData.mark&0b0010000000000000)?1:0;
  2855  003718  0101               	movlb	(_LedData+7) shr (0+8)
  2856  00371A  AB1F               	btfss	(_LedData+8)& (0+255),5,b
  2857  00371C  D003               	goto	l133
  2858  00371E  88BD               	bsf	4029,4,c
  2859  003720  AB1D               	btfss	(_LedData+6)& (0+255),5,b
  2860  003722  98BD               	bcf	4029,4,c
  2861  003724                     l133:
  2862                           ;wsw.c: 939: if(LedData.mask&0b0100000000000000)
      +                           S22C0=(LedData.mark&0b0100000000000000)?1:0;
  2863  003724  0101               	movlb	(_LedData+7) shr (0+8)
  2864  003726  AD1F               	btfss	(_LedData+8)& (0+255),6,b
  2865  003728  D003               	goto	l134
  2866  00372A  8CBD               	bsf	4029,6,c
  2867  00372C  AD1D               	btfss	(_LedData+6)& (0+255),6,b
  2868  00372E  9CBD               	bcf	4029,6,c
  2869  003730                     l134:
  2870                           ;wsw.c: 942: S25C1=1;
  2871  003730  826F               	bsf	3951,1,c
  2872                           ;wsw.c: 943: }
  2873  003732  0012               	return	
  2874  003734                     __end_of_PrintWswData:
  2875                           ;wsw.c: 949: void WswOff(void)
  2876                           ;wsw.c: 950: {
  2877  003734                     _WswOff:
  2878  000000                     
  2879                           ;wsw.c: 951: LedData.setOff=1;
  2880  003734  0101               	movlb	_LedData shr (0+8)
  2881  003736  8117               	bsf	_LedData& (0+255),0,b
  2882                           ;wsw.c: 952: }
  2883  003738  0012               	return	
  2884  00373A                     __end_of_WswOff:
  2885                           ;wsw.c: 954: void WswOn(void)
  2886                           ;wsw.c: 955: {
  2887  00373A                     _WswOn:
  2888  000000                     
  2889                           ;wsw.c: 956: LedData.setOff=0;
  2890  00373A  0101               	movlb	_LedData shr (0+8)
  2891  00373C  9117               	bcf	_LedData& (0+255),0,b
  2892                           ;wsw.c: 957: }
  2893  00373E  0012               	return	
  2894  003740                     __end_of_WswOn:
  2895                           ;wsw.c: 962: void SetData(WData *Dt,const unsign
      +                          ed char wdt1,const unsigned char wdt0)
  2896                           ;wsw.c: 963: {
  2897  003740  00DF               	dw	?_SetData
  2898  003742                     _SetData:
  2899  000000                     
  2900                           ;wsw.c: 964: (*Dt).Data1=wdt1;
  2901                           ; _Dt loaded to fsr1
  2902  003742  C0DF  FFE1         	movff	?_SetData,fsr1l
  2903  003746  C0E0  FFE2         	movff	?_SetData+1,fsr1h
  2904  00374A  C0E1  FFE7         	movff	?_SetData+2,indf1
  2905                           ;wsw.c: 965: (*Dt).Data0=wdt0;
  2906  00374E  EE00 F001          	lfsr	0,1
  2907  003752  50E1               	movf	fsr1l,w,c
  2908  003754  26E9               	addwf	fsr0l,f,c
  2909  003756  50E2               	movf	fsr1h,w,c
  2910  003758  22EA               	addwfc	fsr0h,f,c
  2911  00375A  C0E2  FFEF         	movff	?_SetData+3,indf0
  2912                           ;wsw.c: 966: }
  2913  00375E  0012               	return	
  2914  003760                     __end_of_SetData:
  2915                           ;wsw.c: 976: void SetStatus(WStatus *St,const un
      +                          signed int wst,const unsigned int mask,const uns
      +                          igned char sbdid, const unsigned char rbdid)
  2916                           ;wsw.c: 977: {
  2917  003760  00DF               	dw	?_SetStatus
  2918  003762                     _SetStatus:
  2919  000000                     
  2920                           ; _St loaded to fsr1
  2921  003762  C0DF  FFE1         	movff	?_SetStatus,fsr1l
  2922  003766  C0E0  FFE2         	movff	?_SetStatus+1,fsr1h
  2923                           ;wsw.c: 978: if (mask&0b1000000000000000)(*St).f
      +                          ocus=(wst&0b1000000000000000)?1:0;
  2924  00376A  0100               	movlb	__Lparam shr (0+8)
  2925  00376C  AFE4               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),7,b
  2926  00376E  D008               	goto	l139
  2927  003770  0E00               	movlw	0
  2928  003772  BFE2               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),7,b
  2929  003774  0E01               	movlw	1
  2930  003776  6E00               	movwf	btemp,c
  2931  003778  18E7               	xorwf	indf1,w,c
  2932  00377A  0BFE               	andlw	-2
  2933  00377C  1800               	xorwf	btemp,w,c
  2934  00377E  6EE7               	movwf	indf1,c
  2935  003780                     l139:
  2936                           ;wsw.c: 979: if (mask&0b0100000000000000)(*St).d
      +                          ec=(wst&0b0100000000000000)?1:0;
  2937  003780  0100               	movlb	__Lparam shr (0+8)
  2938  003782  ADE4               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),6,b
  2939  003784  D00A               	goto	l140
  2940  003786  0E00               	movlw	0
  2941  003788  BDE2               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),6,b
  2942  00378A  0E01               	movlw	1
  2943  00378C  6E00               	movwf	btemp,c
  2944  00378E  3600               	rlcf	btemp,f,c
  2945  003790  50E7               	movf	indf1,w,c
  2946  003792  1800               	xorwf	btemp,w,c
  2947  003794  0BFD               	andlw	-3
  2948  003796  1800               	xorwf	btemp,w,c
  2949  003798  6EE7               	movwf	indf1,c
  2950  00379A                     l140:
  2951                           ;wsw.c: 980: if (mask&0b0010000000000000)(*St).h
      +                          ex=(wst&0b0010000000000000)?1:0;
  2952  00379A  0100               	movlb	__Lparam shr (0+8)
  2953  00379C  ABE4               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),5,b
  2954  00379E  D00B               	goto	l141
  2955  0037A0  0E00               	movlw	0
  2956  0037A2  BBE2               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),5,b
  2957  0037A4  0E01               	movlw	1
  2958  0037A6  6E00               	movwf	btemp,c
  2959  0037A8  3600               	rlcf	btemp,f,c
  2960  0037AA  3600               	rlcf	btemp,f,c
  2961  0037AC  50E7               	movf	indf1,w,c
  2962  0037AE  1800               	xorwf	btemp,w,c
  2963  0037B0  0BFB               	andlw	-5
  2964  0037B2  1800               	xorwf	btemp,w,c
  2965  0037B4  6EE7               	movwf	indf1,c
  2966  0037B6                     l141:
  2967                           ;wsw.c: 981: if (mask&0b0001000000000000)(*St).a
      +                          utoOFF=(wst&0b0001000000000000)?1:0;
  2968  0037B6  0100               	movlb	__Lparam shr (0+8)
  2969  0037B8  A9E4               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),4,b
  2970  0037BA  D00C               	goto	l142
  2971  0037BC  0E00               	movlw	0
  2972  0037BE  B9E2               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),4,b
  2973  0037C0  0E01               	movlw	1
  2974  0037C2  6E00               	movwf	btemp,c
  2975  0037C4  3600               	rlcf	btemp,f,c
  2976  0037C6  3600               	rlcf	btemp,f,c
  2977  0037C8  3600               	rlcf	btemp,f,c
  2978  0037CA  50E7               	movf	indf1,w,c
  2979  0037CC  1800               	xorwf	btemp,w,c
  2980  0037CE  0BF7               	andlw	-9
  2981  0037D0  1800               	xorwf	btemp,w,c
  2982  0037D2  6EE7               	movwf	indf1,c
  2983  0037D4                     l142:
  2984                           ;wsw.c: 982: if (mask&0b0000100000000000)(*St).k
      +                          ropka0=(wst&0b0000100000000000)?1:0;
  2985  0037D4  0100               	movlb	__Lparam shr (0+8)
  2986  0037D6  A7E4               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),3,b
  2987  0037D8  D00A               	goto	l143
  2988  0037DA  0E00               	movlw	0
  2989  0037DC  B7E2               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),3,b
  2990  0037DE  0E01               	movlw	1
  2991  0037E0  6E00               	movwf	btemp,c
  2992  0037E2  3A00               	swapf	btemp,f,c
  2993  0037E4  50E7               	movf	indf1,w,c
  2994  0037E6  1800               	xorwf	btemp,w,c
  2995  0037E8  0BEF               	andlw	-17
  2996  0037EA  1800               	xorwf	btemp,w,c
  2997  0037EC  6EE7               	movwf	indf1,c
  2998  0037EE                     l143:
  2999                           ;wsw.c: 983: if (mask&0b0000010000000000)(*St).k
      +                          ropka1=(wst&0b0000010000000000)?1:0;
  3000  0037EE  0100               	movlb	__Lparam shr (0+8)
  3001  0037F0  A5E4               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),2,b
  3002  0037F2  D00B               	goto	l144
  3003  0037F4  0E00               	movlw	0
  3004  0037F6  B5E2               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),2,b
  3005  0037F8  0E01               	movlw	1
  3006  0037FA  6E00               	movwf	btemp,c
  3007  0037FC  3A00               	swapf	btemp,f,c
  3008  0037FE  3600               	rlcf	btemp,f,c
  3009  003800  50E7               	movf	indf1,w,c
  3010  003802  1800               	xorwf	btemp,w,c
  3011  003804  0BDF               	andlw	-33
  3012  003806  1800               	xorwf	btemp,w,c
  3013  003808  6EE7               	movwf	indf1,c
  3014  00380A                     l144:
  3015                           ;wsw.c: 984: if (mask&0b0000001000000000)(*St).w
      +                          ygas0=(wst&0b0000001000000000)?1:0;
  3016  00380A  0100               	movlb	__Lparam shr (0+8)
  3017  00380C  A3E4               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),1,b
  3018  00380E  D00C               	goto	l145
  3019  003810  0E00               	movlw	0
  3020  003812  B3E2               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),1,b
  3021  003814  0E01               	movlw	1
  3022  003816  6E00               	movwf	btemp,c
  3023  003818  3A00               	swapf	btemp,f,c
  3024  00381A  3600               	rlcf	btemp,f,c
  3025  00381C  3600               	rlcf	btemp,f,c
  3026  00381E  50E7               	movf	indf1,w,c
  3027  003820  1800               	xorwf	btemp,w,c
  3028  003822  0BBF               	andlw	-65
  3029  003824  1800               	xorwf	btemp,w,c
  3030  003826  6EE7               	movwf	indf1,c
  3031  003828                     l145:
  3032                           ;wsw.c: 985: if (mask&0b0000000100000000)(*St).w
      +                          ygas1=(wst&0b0000000100000000)?1:0;
  3033  003828  0100               	movlb	__Lparam shr (0+8)
  3034  00382A  A1E4               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),0,b
  3035  00382C  D00B               	goto	l146
  3036  00382E  0E00               	movlw	0
  3037  003830  B1E2               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),0,b
  3038  003832  0E01               	movlw	1
  3039  003834  6E00               	movwf	btemp,c
  3040  003836  3200               	rrcf	btemp,f,c
  3041  003838  3200               	rrcf	btemp,f,c
  3042  00383A  50E7               	movf	indf1,w,c
  3043  00383C  1800               	xorwf	btemp,w,c
  3044  00383E  0B7F               	andlw	-129
  3045  003840  1800               	xorwf	btemp,w,c
  3046  003842  6EE7               	movwf	indf1,c
  3047  003844                     l146:
  3048                           ;wsw.c: 986: if (mask&0b0000000010000000)(*St).l
      +                          ed0=(wst&0b0000000010000000)?1:0;
  3049  003844  0100               	movlb	__Lparam shr (0+8)
  3050  003846  AFE3               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),7,b
  3051  003848  D00F               	goto	l147
  3052  00384A  0E00               	movlw	0
  3053  00384C  BFE1               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),7,b
  3054  00384E  0E01               	movlw	1
  3055  003850  6E00               	movwf	btemp,c
  3056  003852  EE00 F001          	lfsr	0,1
  3057  003856  50E1               	movf	fsr1l,w,c
  3058  003858  26E9               	addwf	fsr0l,f,c
  3059  00385A  50E2               	movf	fsr1h,w,c
  3060  00385C  22EA               	addwfc	fsr0h,f,c
  3061  00385E  50EF               	movf	indf0,w,c
  3062  003860  1800               	xorwf	btemp,w,c
  3063  003862  0BFE               	andlw	-2
  3064  003864  1800               	xorwf	btemp,w,c
  3065  003866  6EEF               	movwf	indf0,c
  3066  003868                     l147:
  3067                           ;wsw.c: 987: if (mask&0b0000000001000000)(*St).l
      +                          ed1=(wst&0b0000000001000000)?1:0;
  3068  003868  0100               	movlb	__Lparam shr (0+8)
  3069  00386A  ADE3               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),6,b
  3070  00386C  D010               	goto	l148
  3071  00386E  0E00               	movlw	0
  3072  003870  BDE1               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),6,b
  3073  003872  0E01               	movlw	1
  3074  003874  6E00               	movwf	btemp,c
  3075  003876  EE00 F001          	lfsr	0,1
  3076  00387A  50E1               	movf	fsr1l,w,c
  3077  00387C  26E9               	addwf	fsr0l,f,c
  3078  00387E  50E2               	movf	fsr1h,w,c
  3079  003880  22EA               	addwfc	fsr0h,f,c
  3080  003882  3600               	rlcf	btemp,f,c
  3081  003884  50EF               	movf	indf0,w,c
  3082  003886  1800               	xorwf	btemp,w,c
  3083  003888  0BFD               	andlw	-3
  3084  00388A  1800               	xorwf	btemp,w,c
  3085  00388C  6EEF               	movwf	indf0,c
  3086  00388E                     l148:
  3087                           ;wsw.c: 988: if (mask&0b0000000000100000)(*St).s
      +                          diode=(wst&0b0000000000100000)?1:0;
  3088  00388E  0100               	movlb	__Lparam shr (0+8)
  3089  003890  ABE3               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),5,b
  3090  003892  D011               	goto	l149
  3091  003894  0E00               	movlw	0
  3092  003896  BBE1               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),5,b
  3093  003898  0E01               	movlw	1
  3094  00389A  6E00               	movwf	btemp,c
  3095  00389C  EE00 F001          	lfsr	0,1
  3096  0038A0  50E1               	movf	fsr1l,w,c
  3097  0038A2  26E9               	addwf	fsr0l,f,c
  3098  0038A4  50E2               	movf	fsr1h,w,c
  3099  0038A6  22EA               	addwfc	fsr0h,f,c
  3100  0038A8  3600               	rlcf	btemp,f,c
  3101  0038AA  3600               	rlcf	btemp,f,c
  3102  0038AC  50EF               	movf	indf0,w,c
  3103  0038AE  1800               	xorwf	btemp,w,c
  3104  0038B0  0BFB               	andlw	-5
  3105  0038B2  1800               	xorwf	btemp,w,c
  3106  0038B4  6EEF               	movwf	indf0,c
  3107  0038B6                     l149:
  3108                           ;wsw.c: 989: if (mask&0b0000000000010000)(*St).r
      +                          diode=(wst&0b0000000000010000)?1:0;
  3109  0038B6  0100               	movlb	__Lparam shr (0+8)
  3110  0038B8  A9E3               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),4,b
  3111  0038BA  D012               	goto	l150
  3112  0038BC  0E00               	movlw	0
  3113  0038BE  B9E1               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),4,b
  3114  0038C0  0E01               	movlw	1
  3115  0038C2  6E00               	movwf	btemp,c
  3116  0038C4  EE00 F001          	lfsr	0,1
  3117  0038C8  50E1               	movf	fsr1l,w,c
  3118  0038CA  26E9               	addwf	fsr0l,f,c
  3119  0038CC  50E2               	movf	fsr1h,w,c
  3120  0038CE  22EA               	addwfc	fsr0h,f,c
  3121  0038D0  3600               	rlcf	btemp,f,c
  3122  0038D2  3600               	rlcf	btemp,f,c
  3123  0038D4  3600               	rlcf	btemp,f,c
  3124  0038D6  50EF               	movf	indf0,w,c
  3125  0038D8  1800               	xorwf	btemp,w,c
  3126  0038DA  0BF7               	andlw	-9
  3127  0038DC  1800               	xorwf	btemp,w,c
  3128  0038DE  6EEF               	movwf	indf0,c
  3129  0038E0                     l150:
  3130                           ;wsw.c: 990: if (mask&0b0000000000001000)(*St).d
      +                          yn=(wst&0b0000000000001000)?1:0;
  3131  0038E0  0100               	movlb	__Lparam shr (0+8)
  3132  0038E2  A7E3               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),3,b
  3133  0038E4  D010               	goto	l151
  3134  0038E6  0E00               	movlw	0
  3135  0038E8  B7E1               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),3,b
  3136  0038EA  0E01               	movlw	1
  3137  0038EC  6E00               	movwf	btemp,c
  3138  0038EE  EE00 F001          	lfsr	0,1
  3139  0038F2  50E1               	movf	fsr1l,w,c
  3140  0038F4  26E9               	addwf	fsr0l,f,c
  3141  0038F6  50E2               	movf	fsr1h,w,c
  3142  0038F8  22EA               	addwfc	fsr0h,f,c
  3143  0038FA  3A00               	swapf	btemp,f,c
  3144  0038FC  50EF               	movf	indf0,w,c
  3145  0038FE  1800               	xorwf	btemp,w,c
  3146  003900  0BEF               	andlw	-17
  3147  003902  1800               	xorwf	btemp,w,c
  3148  003904  6EEF               	movwf	indf0,c
  3149  003906                     l151:
  3150                           ;wsw.c: 991: if (mask&0b0000000000000100)(*St).o
      +                          nly=(wst&0b0000000000000100)?1:0;
  3151  003906  0100               	movlb	__Lparam shr (0+8)
  3152  003908  A5E3               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),2,b
  3153  00390A  D00F               	goto	l152
  3154  00390C  0E00               	movlw	0
  3155  00390E  B5E1               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),2,b
  3156  003910  0E01               	movlw	1
  3157  003912  6E00               	movwf	btemp,c
  3158  003914  6A01               	clrf	btemp+1,c
  3159  003916  EE00 F002          	lfsr	0,2
  3160  00391A  50E1               	movf	fsr1l,w,c
  3161  00391C  26E9               	addwf	fsr0l,f,c
  3162  00391E  50E2               	movf	fsr1h,w,c
  3163  003920  22EA               	addwfc	fsr0h,f,c
  3164  003922  C000  FFEE         	movff	btemp,postinc0
  3165  003926  C001  FFED         	movff	btemp+1,postdec0
  3166  00392A                     l152:
  3167                           ;wsw.c: 993: if(((*St).sdiode)&&sbdid)
  3168  00392A  EE00 F001          	lfsr	0,1
  3169  00392E  50E1               	movf	fsr1l,w,c
  3170  003930  26E9               	addwf	fsr0l,f,c
  3171  003932  50E2               	movf	fsr1h,w,c
  3172  003934  22EA               	addwfc	fsr0h,f,c
  3173  003936  50EF               	movf	indf0,w,c
  3174  003938  6E00               	movwf	btemp,c
  3175  00393A  A400               	btfss	btemp,2,c
  3176  00393C  D00E               	goto	l153
  3177  00393E  0100               	movlb	__Lparam shr (0+8)
  3178  003940  51E5               	movf	(?_SetStatus+6)^(__Lparam& (0+65280)),w
  3179  003942  E00B               	bz	l153
  3180                           ;wsw.c: 994: {
  3181  003944  EE00 F004          	lfsr	0,4
  3182  003948  50E1               	movf	fsr1l,w,c
  3183  00394A  26E9               	addwf	fsr0l,f,c
  3184  00394C  50E2               	movf	fsr1h,w,c
  3185  00394E  22EA               	addwfc	fsr0h,f,c
  3186  003950  50EF               	movf	indf0,w,c
  3187  003952  19E5               	xorwf	(?_SetStatus+6)^(__Lparam& (0+65280)),w
  3188  003954  0B00               	andlw	-256
  3189  003956  19E5               	xorwf	(?_SetStatus+6)^(__Lparam& (0+65280)),w
  3190  003958  6EEF               	movwf	indf0,c
  3191  00395A                     l153:
  3192                           ;wsw.c: 996: }
  3193  00395A  EE00 F001          	lfsr	0,1
  3194  00395E  50E1               	movf	fsr1l,w,c
  3195  003960  26E9               	addwf	fsr0l,f,c
  3196  003962  50E2               	movf	fsr1h,w,c
  3197  003964  22EA               	addwfc	fsr0h,f,c
  3198  003966  50EF               	movf	indf0,w,c
  3199  003968  6E00               	movwf	btemp,c
  3200  00396A  A600               	btfss	btemp,3,c
  3201  00396C  0012               	return	
  3202  00396E  0100               	movlb	__Lparam shr (0+8)
  3203  003970  51E6               	movf	(?_SetStatus+7)^(__Lparam& (0+65280)),w
  3204  003972  B4D8               	btfsc	status,2,c
  3205  003974  0012               	return	
  3206                           ;wsw.c: 998: {
  3207  003976  EE00 F005          	lfsr	0,5
  3208  00397A  50E1               	movf	fsr1l,w,c
  3209  00397C  26E9               	addwf	fsr0l,f,c
  3210  00397E  50E2               	movf	fsr1h,w,c
  3211  003980  22EA               	addwfc	fsr0h,f,c
  3212  003982  50EF               	movf	indf0,w,c
  3213  003984  19E6               	xorwf	(?_SetStatus+7)^(__Lparam& (0+65280)),w
  3214  003986  0B00               	andlw	-256
  3215  003988  19E6               	xorwf	(?_SetStatus+7)^(__Lparam& (0+65280)),w
  3216  00398A  6EEF               	movwf	indf0,c
  3217                           ;wsw.c: 1000: }
  3218  00398C  0012               	return	
  3219  00398E                     __end_of_SetStatus:
  3220                           ;wsw.c: 1007: void SetMark(WMark *wData,const un
      +                          signed char focus,const unsigned char pulse, con
      +                          st unsigned char wrt)
  3221                           ;wsw.c: 1008: {
  3222  00398E  00DE               	dw	?_SetMark
  3223  003990                     _SetMark:
  3224  000000                     
  3225                           ;wsw.c: 1009: (*wData).focus=(focus)?1:0;
  3226                           ; _wData loaded to fsr1
  3227  003990  C0DE  FFE1         	movff	?_SetMark,fsr1l
  3228  003994  C0DF  FFE2         	movff	?_SetMark+1,fsr1h
  3229  003998  0E00               	movlw	0
  3230  00399A  6A00               	clrf	btemp,c
  3231  00399C  0100               	movlb	__Lparam shr (0+8)
  3232  00399E  63E0               	cpfseq	(?_SetMark+2)^(__Lparam& (0+65280)),b
  3233  0039A0  2A00               	incf	btemp,f,c
  3234  0039A2  50E7               	movf	indf1,w,c
  3235  0039A4  1800               	xorwf	btemp,w,c
  3236  0039A6  0BFE               	andlw	-2
  3237  0039A8  1800               	xorwf	btemp,w,c
  3238  0039AA  6EE7               	movwf	indf1,c
  3239                           ;wsw.c: 1010: (*wData).p=(pulse)?1:0;
  3240  0039AC  0E00               	movlw	0
  3241  0039AE  6A00               	clrf	btemp,c
  3242  0039B0  63E1               	cpfseq	(?_SetMark+3)^(__Lparam& (0+65280)),b
  3243  0039B2  2A00               	incf	btemp,f,c
  3244  0039B4  3600               	rlcf	btemp,f,c
  3245  0039B6  3600               	rlcf	btemp,f,c
  3246  0039B8  50E7               	movf	indf1,w,c
  3247  0039BA  1800               	xorwf	btemp,w,c
  3248  0039BC  0BFB               	andlw	-5
  3249  0039BE  1800               	xorwf	btemp,w,c
  3250  0039C0  6EE7               	movwf	indf1,c
  3251                           ;wsw.c: 1011: (*wData).m=(wrt)?1:0;
  3252  0039C2  0E00               	movlw	0
  3253  0039C4  6A00               	clrf	btemp,c
  3254  0039C6  63E2               	cpfseq	(?_SetMark+4)^(__Lparam& (0+65280)),b
  3255  0039C8  2A00               	incf	btemp,f,c
  3256  0039CA  3600               	rlcf	btemp,f,c
  3257  0039CC  50E7               	movf	indf1,w,c
  3258  0039CE  1800               	xorwf	btemp,w,c
  3259  0039D0  0BFD               	andlw	-3
  3260  0039D2  1800               	xorwf	btemp,w,c
  3261  0039D4  6EE7               	movwf	indf1,c
  3262                           ;wsw.c: 1012: }
  3263  0039D6  0012               	return	
  3264  0039D8                     __end_of_SetMark:
  3265                           ;wsw.c: 1015: void ClrAllMarks(void)
  3266                           ;wsw.c: 1016: {
  3267  0039D8                     _ClrAllMarks:
  3268  000000                     
  3269                           ;wsw.c: 1017: unsigned char i;
  3270  0039D8  6AD9               	clrf	fsr2l,c
  3271  0039DA                     l157:
  3272                           ;wsw.c: 1019: {
  3273  0039DA  50D9               	movf	fsr2l,w,c
  3274  0039DC  EE07  F07C         	lfsr	0,_KMark
  3275  0039E0  26E9               	addwf	fsr0l,f,c
  3276  0039E2  0E00               	movlw	0
  3277  0039E4  22EA               	addwfc	fsr0h,f,c
  3278  0039E6  50EF               	movf	indf0,w,c
  3279  0039E8  0BFE               	andlw	-2
  3280  0039EA  0901               	iorlw	1
  3281  0039EC  6EEF               	movwf	indf0,c
  3282                           ;wsw.c: 1021: KMark[i].p=0;
  3283  0039EE  50D9               	movf	fsr2l,w,c
  3284  0039F0  EE07  F07C         	lfsr	0,_KMark
  3285  0039F4  26E9               	addwf	fsr0l,f,c
  3286  0039F6  0E00               	movlw	0
  3287  0039F8  22EA               	addwfc	fsr0h,f,c
  3288  0039FA  0EFB               	movlw	-5
  3289  0039FC  16EF               	andwf	indf0,f,c
  3290                           ;wsw.c: 1022: KMark[i].m=0;
  3291  0039FE  50D9               	movf	fsr2l,w,c
  3292  003A00  EE07  F07C         	lfsr	0,_KMark
  3293  003A04  26E9               	addwf	fsr0l,f,c
  3294  003A06  0E00               	movlw	0
  3295  003A08  22EA               	addwfc	fsr0h,f,c
  3296  003A0A  0EFD               	movlw	-3
  3297  003A0C  16EF               	andwf	indf0,f,c
  3298  003A0E  2AD9               	incf	fsr2l,f,c
  3299  003A10  0E0F               	movlw	15
  3300  003A12  64D9               	cpfsgt	fsr2l,c
  3301  003A14  D7E2               	goto	l157
  3302  003A16  0C0F               	retlw	15
  3303                           ;wsw.c: 1023: }
  3304  003A18                     __end_of_ClrAllMarks:
  3305                           ;wsw.c: 1030: bit GetPoz(const unsigned char nrk
      +                          ol,const unsigned char nrpoz)
  3306                           ;wsw.c: 1031: {
  3307  003A18  00CF               	dw	?_GetPoz
  3308  003A1A                     _GetPoz:
  3309  000000                     
  3310                           ; _nrkol loaded to fsr2l
  3311  003A1A  6ED9               	movwf	fsr2l,c
  3312                           ;wsw.c: 1032: if ((nrkol>=3)||(nrpoz>=Klj[nrkol]
      +                          .nPzc)) asm("RESET");
  3313  003A1C  0E02               	movlw	2
  3314  003A1E  64D9               	cpfsgt	fsr2l,c
  3315  003A20  D001               	goto	u2141
  3316  003A22  D012               	goto	u2160
  3317  003A24                     u2141:
  3318  003A24  50D9               	movf	fsr2l,w,c
  3319  003A26  0D03               	mullw	3
  3320  003A28  50F3               	movf	prodl,w,c
  3321  003A2A  0F35               	addlw	low _Klj
  3322  003A2C  6EF6               	movwf	tblptrl,c
  3323  003A2E  50F4               	movf	prodh,w,c
  3324  003A30  6EF7               	movwf	tblptrh,c
  3325  003A32  0E08               	movlw	high _Klj
  3326  003A34  22F7               	addwfc	tblptrh,f,c
  3327  003A36  0E02               	movlw	2
  3328  003A38  26F6               	addwf	tblptrl,f,c
  3329  003A3A  0E00               	movlw	0
  3330  003A3C  22F7               	addwfc	tblptrh,f,c
  3331  003A3E  0008               	tblrd		*
  3332  003A40  50F5               	movf	tablat,w,c
  3333  003A42  0100               	movlb	__Lparam shr (0+8)
  3334  003A44  5DCF               	subwf	?_GetPoz^(__Lparam& (0+65280)),w
  3335  003A46  B0D8               	btfsc	status,0,c
  3336  003A48                     u2160:
  3337  003A48  00FF               	reset		;#
  3338                           ;wsw.c: 1033: return (*Klj[nrkol].KL).KFc[nrpoz]
      +                          .focus;
  3339  003A4A  50D9               	movf	fsr2l,w,c
  3340  003A4C  0D03               	mullw	3
  3341  003A4E  50F3               	movf	prodl,w,c
  3342  003A50  0F35               	addlw	low _Klj
  3343  003A52  6EF6               	movwf	tblptrl,c
  3344  003A54  50F4               	movf	prodh,w,c
  3345  003A56  6EF7               	movwf	tblptrh,c
  3346  003A58  0E08               	movlw	high _Klj
  3347  003A5A  22F7               	addwfc	tblptrh,f,c
  3348  003A5C  0009               	tblrd		*+
  3349  003A5E  CFF5 F000          	movff	tablat,btemp
  3350  003A62  0009               	tblrd		*+
  3351  003A64  CFF5 F001          	movff	tablat,btemp+1
  3352  003A68  0E04               	movlw	4
  3353  003A6A  2600               	addwf	btemp,f,c
  3354  003A6C  0E00               	movlw	0
  3355  003A6E  2201               	addwfc	btemp+1,f,c
  3356  003A70  C000  FFF6         	movff	btemp,tblptrl
  3357  003A74  C001  FFF7         	movff	btemp+1,tblptrh
  3358  003A78  0E07               	movlw	(high __ramtop+-1)
  3359  003A7A  64F7               	cpfsgt	tblptrh,c
  3360  003A7C  D007               	bra	u2177
  3361  003A7E  0009               	tblrd		*+
  3362  003A80  CFF5 F000          	movff	tablat,btemp
  3363  003A84  0009               	tblrd		*+
  3364  003A86  CFF5 F001          	movff	tablat,btemp+1
  3365  003A8A  D008               	bra	u2170
  3366  003A8C                     u2177:
  3367  003A8C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3368  003A90  CFF7 FFEA          	movff	tblptrh,fsr0h
  3369  003A94  CFEE F000          	movff	postinc0,btemp
  3370  003A98  CFEE F001          	movff	postinc0,btemp+1
  3371  003A9C                     u2170:
  3372  003A9C  0100               	movlb	__Lparam shr (0+8)
  3373  003A9E  51CF               	movf	?_GetPoz^(__Lparam& (0+65280)),w
  3374  003AA0  2400               	addwf	btemp,w,c
  3375  003AA2  6EE9               	movwf	fsr0l,c
  3376  003AA4  0E00               	movlw	0
  3377  003AA6  2001               	addwfc	btemp+1,w,c
  3378  003AA8  6EEA               	movwf	fsr0h,c
  3379  003AAA  50EF               	movf	indf0,w,c
  3380  003AAC  0B01               	andlw	1
  3381  003AAE  6E00               	movwf	btemp,c
  3382  003AB0  3000               	rrcf	btemp,w,c
  3383  003AB2  0012               	return	
  3384                           ;wsw.c: 1034: }
  3385  003AB4                     __end_of_GetPoz:
  3386                           ;wsw.c: 1036: void SetPoz(const unsigned char nr
      +                          kol,const unsigned char nrpoz)
  3387                           ;wsw.c: 1037: {
  3388  003AB4  00DF               	dw	?_SetPoz
  3389  003AB6                     _SetPoz:
  3390  000000                     
  3391                           ; _nrkol loaded to fsr2l
  3392  003AB6  6ED9               	movwf	fsr2l,c
  3393                           ;wsw.c: 1038: if ((nrkol>=3)||(nrpoz>=Klj[nrkol]
      +                          .nPzc)) asm("RESET");
  3394  003AB8  0E02               	movlw	2
  3395  003ABA  64D9               	cpfsgt	fsr2l,c
  3396  003ABC  D001               	goto	u2181
  3397  003ABE  D012               	goto	u2200
  3398  003AC0                     u2181:
  3399  003AC0  50D9               	movf	fsr2l,w,c
  3400  003AC2  0D03               	mullw	3
  3401  003AC4  50F3               	movf	prodl,w,c
  3402  003AC6  0F35               	addlw	low _Klj
  3403  003AC8  6EF6               	movwf	tblptrl,c
  3404  003ACA  50F4               	movf	prodh,w,c
  3405  003ACC  6EF7               	movwf	tblptrh,c
  3406  003ACE  0E08               	movlw	high _Klj
  3407  003AD0  22F7               	addwfc	tblptrh,f,c
  3408  003AD2  0E02               	movlw	2
  3409  003AD4  26F6               	addwf	tblptrl,f,c
  3410  003AD6  0E00               	movlw	0
  3411  003AD8  22F7               	addwfc	tblptrh,f,c
  3412  003ADA  0008               	tblrd		*
  3413  003ADC  50F5               	movf	tablat,w,c
  3414  003ADE  0100               	movlb	__Lparam shr (0+8)
  3415  003AE0  5DDF               	subwf	?_SetPoz^(__Lparam& (0+65280)),w
  3416  003AE2  B0D8               	btfsc	status,0,c
  3417  003AE4                     u2200:
  3418  003AE4  00FF               	reset		;#
  3419                           ;wsw.c: 1039: (*Klj[nrkol].KL).KFc[nrpoz].focus=
      +                          1;
  3420  003AE6  50D9               	movf	fsr2l,w,c
  3421  003AE8  0D03               	mullw	3
  3422  003AEA  50F3               	movf	prodl,w,c
  3423  003AEC  0F35               	addlw	low _Klj
  3424  003AEE  6EF6               	movwf	tblptrl,c
  3425  003AF0  50F4               	movf	prodh,w,c
  3426  003AF2  6EF7               	movwf	tblptrh,c
  3427  003AF4  0E08               	movlw	high _Klj
  3428  003AF6  22F7               	addwfc	tblptrh,f,c
  3429  003AF8  0009               	tblrd		*+
  3430  003AFA  CFF5 F000          	movff	tablat,btemp
  3431  003AFE  0009               	tblrd		*+
  3432  003B00  CFF5 F001          	movff	tablat,btemp+1
  3433  003B04  0E04               	movlw	4
  3434  003B06  2600               	addwf	btemp,f,c
  3435  003B08  0E00               	movlw	0
  3436  003B0A  2201               	addwfc	btemp+1,f,c
  3437  003B0C  C000  FFF6         	movff	btemp,tblptrl
  3438  003B10  C001  FFF7         	movff	btemp+1,tblptrh
  3439  003B14  0E07               	movlw	(high __ramtop+-1)
  3440  003B16  64F7               	cpfsgt	tblptrh,c
  3441  003B18  D007               	bra	u2217
  3442  003B1A  0009               	tblrd		*+
  3443  003B1C  CFF5 F000          	movff	tablat,btemp
  3444  003B20  0009               	tblrd		*+
  3445  003B22  CFF5 F001          	movff	tablat,btemp+1
  3446  003B26  D008               	bra	u2210
  3447  003B28                     u2217:
  3448  003B28  CFF6 FFE9          	movff	tblptrl,fsr0l
  3449  003B2C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3450  003B30  CFEE F000          	movff	postinc0,btemp
  3451  003B34  CFEE F001          	movff	postinc0,btemp+1
  3452  003B38                     u2210:
  3453  003B38  0100               	movlb	__Lparam shr (0+8)
  3454  003B3A  51DF               	movf	?_SetPoz^(__Lparam& (0+65280)),w
  3455  003B3C  2400               	addwf	btemp,w,c
  3456  003B3E  6EE9               	movwf	fsr0l,c
  3457  003B40  0E00               	movlw	0
  3458  003B42  2001               	addwfc	btemp+1,w,c
  3459  003B44  6EEA               	movwf	fsr0h,c
  3460  003B46  50EF               	movf	indf0,w,c
  3461  003B48  0BFE               	andlw	-2
  3462  003B4A  0901               	iorlw	1
  3463  003B4C  6EEF               	movwf	indf0,c
  3464                           ;wsw.c: 1040: KInd[nrkol].reset=0;
  3465  003B4E  50D9               	movf	fsr2l,w,c
  3466  003B50  0D02               	mullw	2
  3467  003B52  0E00               	movlw	low _KInd
  3468  003B54  24F3               	addwf	prodl,w,c
  3469  003B56  6EE9               	movwf	fsr0l,c
  3470  003B58  0E01               	movlw	high _KInd
  3471  003B5A  20F4               	addwfc	prodh,w,c
  3472  003B5C  6EEA               	movwf	fsr0h,c
  3473  003B5E  0EF7               	movlw	-9
  3474  003B60  16EF               	andwf	indf0,f,c
  3475                           ;wsw.c: 1041: }
  3476  003B62  0CF7               	retlw	247
  3477  003B64                     __end_of_SetPoz:
  3478                           ;wsw.c: 1043: void ResetPoz(const unsigned char 
      +                          nrkol,const unsigned char nrpoz)
  3479                           ;wsw.c: 1044: {
  3480  003B64  00CF               	dw	?_ResetPoz
  3481  003B66                     _ResetPoz:
  3482  000000                     
  3483                           ; _nrkol loaded to fsr2l
  3484  003B66  6ED9               	movwf	fsr2l,c
  3485                           ;wsw.c: 1045: if ((nrkol>=3)||(nrpoz>=Klj[nrkol]
      +                          .nPzc)) asm("RESET");
  3486  003B68  0E02               	movlw	2
  3487  003B6A  64D9               	cpfsgt	fsr2l,c
  3488  003B6C  D001               	goto	u2221
  3489  003B6E  D012               	goto	u2240
  3490  003B70                     u2221:
  3491  003B70  50D9               	movf	fsr2l,w,c
  3492  003B72  0D03               	mullw	3
  3493  003B74  50F3               	movf	prodl,w,c
  3494  003B76  0F35               	addlw	low _Klj
  3495  003B78  6EF6               	movwf	tblptrl,c
  3496  003B7A  50F4               	movf	prodh,w,c
  3497  003B7C  6EF7               	movwf	tblptrh,c
  3498  003B7E  0E08               	movlw	high _Klj
  3499  003B80  22F7               	addwfc	tblptrh,f,c
  3500  003B82  0E02               	movlw	2
  3501  003B84  26F6               	addwf	tblptrl,f,c
  3502  003B86  0E00               	movlw	0
  3503  003B88  22F7               	addwfc	tblptrh,f,c
  3504  003B8A  0008               	tblrd		*
  3505  003B8C  50F5               	movf	tablat,w,c
  3506  003B8E  0100               	movlb	__Lparam shr (0+8)
  3507  003B90  5DCF               	subwf	?_ResetPoz^(__Lparam& (0+65280)),w
  3508  003B92  B0D8               	btfsc	status,0,c
  3509  003B94                     u2240:
  3510  003B94  00FF               	reset		;#
  3511                           ;wsw.c: 1046: (*Klj[nrkol].KL).KFc[nrpoz].focus=
      +                          0;
  3512  003B96  50D9               	movf	fsr2l,w,c
  3513  003B98  0D03               	mullw	3
  3514  003B9A  50F3               	movf	prodl,w,c
  3515  003B9C  0F35               	addlw	low _Klj
  3516  003B9E  6EF6               	movwf	tblptrl,c
  3517  003BA0  50F4               	movf	prodh,w,c
  3518  003BA2  6EF7               	movwf	tblptrh,c
  3519  003BA4  0E08               	movlw	high _Klj
  3520  003BA6  22F7               	addwfc	tblptrh,f,c
  3521  003BA8  0009               	tblrd		*+
  3522  003BAA  CFF5 F000          	movff	tablat,btemp
  3523  003BAE  0009               	tblrd		*+
  3524  003BB0  CFF5 F001          	movff	tablat,btemp+1
  3525  003BB4  0E04               	movlw	4
  3526  003BB6  2600               	addwf	btemp,f,c
  3527  003BB8  0E00               	movlw	0
  3528  003BBA  2201               	addwfc	btemp+1,f,c
  3529  003BBC  C000  FFF6         	movff	btemp,tblptrl
  3530  003BC0  C001  FFF7         	movff	btemp+1,tblptrh
  3531  003BC4  0E07               	movlw	(high __ramtop+-1)
  3532  003BC6  64F7               	cpfsgt	tblptrh,c
  3533  003BC8  D007               	bra	u2257
  3534  003BCA  0009               	tblrd		*+
  3535  003BCC  CFF5 F000          	movff	tablat,btemp
  3536  003BD0  0009               	tblrd		*+
  3537  003BD2  CFF5 F001          	movff	tablat,btemp+1
  3538  003BD6  D008               	bra	u2250
  3539  003BD8                     u2257:
  3540  003BD8  CFF6 FFE9          	movff	tblptrl,fsr0l
  3541  003BDC  CFF7 FFEA          	movff	tblptrh,fsr0h
  3542  003BE0  CFEE F000          	movff	postinc0,btemp
  3543  003BE4  CFEE F001          	movff	postinc0,btemp+1
  3544  003BE8                     u2250:
  3545  003BE8  0100               	movlb	__Lparam shr (0+8)
  3546  003BEA  51CF               	movf	?_ResetPoz^(__Lparam& (0+65280)),w
  3547  003BEC  2400               	addwf	btemp,w,c
  3548  003BEE  6EE9               	movwf	fsr0l,c
  3549  003BF0  0E00               	movlw	0
  3550  003BF2  2001               	addwfc	btemp+1,w,c
  3551  003BF4  6EEA               	movwf	fsr0h,c
  3552  003BF6  0EFE               	movlw	-2
  3553  003BF8  16EF               	andwf	indf0,f,c
  3554                           ;wsw.c: 1047: }
  3555  003BFA  0CFE               	retlw	254
  3556  003BFC                     __end_of_ResetPoz:
  3557                           ;wsw.c: 1049: void ResetKol(const unsigned char 
      +                          nrkol)
  3558                           ;wsw.c: 1050: {
  3559  003BFC                     _ResetKol:
  3560  000000                     
  3561                           ; _nrkol loaded to fsr2l
  3562  003BFC  6ED9               	movwf	fsr2l,c
  3563                           ;wsw.c: 1051: if (nrkol>=3) asm("RESET");
  3564  003BFE  0E02               	movlw	2
  3565  003C00  64D9               	cpfsgt	fsr2l,c
  3566  003C02  D001               	goto	l167
  3567  003C04  00FF               	reset		;#
  3568  003C06                     l167:
  3569                           ;wsw.c: 1052: KInd[nrkol].reset=1;
  3570  003C06  50D9               	movf	fsr2l,w,c
  3571  003C08  0D02               	mullw	2
  3572  003C0A  0E00               	movlw	low _KInd
  3573  003C0C  24F3               	addwf	prodl,w,c
  3574  003C0E  6EE9               	movwf	fsr0l,c
  3575  003C10  0E01               	movlw	high _KInd
  3576  003C12  20F4               	addwfc	prodh,w,c
  3577  003C14  6EEA               	movwf	fsr0h,c
  3578  003C16  50EF               	movf	indf0,w,c
  3579  003C18  0BF7               	andlw	-9
  3580  003C1A  0908               	iorlw	8
  3581  003C1C  6EEF               	movwf	indf0,c
  3582                           ;wsw.c: 1053: }
  3583  003C1E  0012               	return	
  3584  003C20                     __end_of_ResetKol:
  3585                           ;wsw.c: 1056: void RestartKol(const unsigned cha
      +                          r nrkol)
  3586                           ;wsw.c: 1057: {
  3587  003C20                     _RestartKol:
  3588  000000                     
  3589                           ; _nrkol loaded to fsr2l
  3590  003C20  6ED9               	movwf	fsr2l,c
  3591                           ;wsw.c: 1058: if (nrkol>=3) asm("RESET");
  3592  003C22  0E02               	movlw	2
  3593  003C24  64D9               	cpfsgt	fsr2l,c
  3594  003C26  D001               	goto	l169
  3595  003C28  00FF               	reset		;#
  3596  003C2A                     l169:
  3597                           ;wsw.c: 1059: KInd[nrkol].restart=1;
  3598  003C2A  50D9               	movf	fsr2l,w,c
  3599  003C2C  0D02               	mullw	2
  3600  003C2E  0E00               	movlw	low _KInd
  3601  003C30  24F3               	addwf	prodl,w,c
  3602  003C32  6EE9               	movwf	fsr0l,c
  3603  003C34  0E01               	movlw	high _KInd
  3604  003C36  20F4               	addwfc	prodh,w,c
  3605  003C38  6EEA               	movwf	fsr0h,c
  3606  003C3A  50EF               	movf	indf0,w,c
  3607  003C3C  0BFB               	andlw	-5
  3608  003C3E  0904               	iorlw	4
  3609  003C40  6EEF               	movwf	indf0,c
  3610                           ;wsw.c: 1060: }
  3611  003C42  0012               	return	
  3612  003C44                     __end_of_RestartKol:
  3613                           ;wsw.c: 1063: void RestartKol1(const unsigned ch
      +                          ar nrkol)
  3614                           ;wsw.c: 1064: {
  3615  003C44                     _RestartKol1:
  3616  000000                     
  3617                           ; _nrkol loaded to fsr2l
  3618  003C44  6ED9               	movwf	fsr2l,c
  3619                           ;wsw.c: 1065: if (nrkol>=3) asm("RESET");
  3620  003C46  0E02               	movlw	2
  3621  003C48  64D9               	cpfsgt	fsr2l,c
  3622  003C4A  D001               	goto	l171
  3623  003C4C  00FF               	reset		;#
  3624  003C4E                     l171:
  3625                           ;wsw.c: 1066: KInd[nrkol].restart1=1;
  3626  003C4E  50D9               	movf	fsr2l,w,c
  3627  003C50  0D02               	mullw	2
  3628  003C52  0E00               	movlw	low _KInd
  3629  003C54  24F3               	addwf	prodl,w,c
  3630  003C56  6EE9               	movwf	fsr0l,c
  3631  003C58  0E01               	movlw	high _KInd
  3632  003C5A  20F4               	addwfc	prodh,w,c
  3633  003C5C  6EEA               	movwf	fsr0h,c
  3634  003C5E  50EF               	movf	indf0,w,c
  3635  003C60  0BFD               	andlw	-3
  3636  003C62  0902               	iorlw	2
  3637  003C64  6EEF               	movwf	indf0,c
  3638                           ;wsw.c: 1067: }
  3639  003C66  0012               	return	
  3640  003C68                     __end_of_RestartKol1:
  3641                           ;wsw.c: 1070: void RestartKol2(const unsigned ch
      +                          ar nrkol)
  3642                           ;wsw.c: 1071: {
  3643  003C68                     _RestartKol2:
  3644  000000                     
  3645                           ; _nrkol loaded to fsr2l
  3646  003C68  6ED9               	movwf	fsr2l,c
  3647                           ;wsw.c: 1072: if (nrkol>=3) asm("RESET");
  3648  003C6A  0E02               	movlw	2
  3649  003C6C  64D9               	cpfsgt	fsr2l,c
  3650  003C6E  D001               	goto	l173
  3651  003C70  00FF               	reset		;#
  3652  003C72                     l173:
  3653                           ;wsw.c: 1073: KInd[nrkol].restart1=1;
  3654  003C72  50D9               	movf	fsr2l,w,c
  3655  003C74  0D02               	mullw	2
  3656  003C76  0E00               	movlw	low _KInd
  3657  003C78  24F3               	addwf	prodl,w,c
  3658  003C7A  6EE9               	movwf	fsr0l,c
  3659  003C7C  0E01               	movlw	high _KInd
  3660  003C7E  20F4               	addwfc	prodh,w,c
  3661  003C80  6EEA               	movwf	fsr0h,c
  3662  003C82  50EF               	movf	indf0,w,c
  3663  003C84  0BFD               	andlw	-3
  3664  003C86  0902               	iorlw	2
  3665  003C88  6EEF               	movwf	indf0,c
  3666                           ;wsw.c: 1074: KInd[nrkol].restart2=1;
  3667  003C8A  50D9               	movf	fsr2l,w,c
  3668  003C8C  0D02               	mullw	2
  3669  003C8E  0E00               	movlw	low _KInd
  3670  003C90  24F3               	addwf	prodl,w,c
  3671  003C92  6EE9               	movwf	fsr0l,c
  3672  003C94  0E01               	movlw	high _KInd
  3673  003C96  20F4               	addwfc	prodh,w,c
  3674  003C98  6EEA               	movwf	fsr0h,c
  3675  003C9A  50EF               	movf	indf0,w,c
  3676  003C9C  0BFE               	andlw	-2
  3677  003C9E  0901               	iorlw	1
  3678  003CA0  6EEF               	movwf	indf0,c
  3679                           ;wsw.c: 1075: }
  3680  003CA2  0012               	return	
  3681  003CA4                     __end_of_RestartKol2:
  3682                           ;wsw.c: 1077: void AllKolToFirstPoz(void)
  3683                           ;wsw.c: 1078: {
  3684  003CA4                     _AllKolToFirstPoz:
  3685  000000                     
  3686                           ;wsw.c: 1079: unsigned char j;
  3687  003CA4  6AD9               	clrf	fsr2l,c
  3688  003CA6                     l175:
  3689                           ;wsw.c: 1081: {
  3690  003CA6  50D9               	movf	fsr2l,w,c
  3691  003CA8  0D02               	mullw	2
  3692  003CAA  0E01               	movlw	low (_KInd+1)
  3693  003CAC  24F3               	addwf	prodl,w,c
  3694  003CAE  6EE9               	movwf	fsr0l,c
  3695  003CB0  0E01               	movlw	high (_KInd+1)
  3696  003CB2  20F4               	addwfc	prodh,w,c
  3697  003CB4  6EEA               	movwf	fsr0h,c
  3698  003CB6  0EC0               	movlw	-64
  3699  003CB8  16EF               	andwf	indf0,f,c
  3700                           ;wsw.c: 1083: KTim[j].ncS=0;
  3701  003CBA  50D9               	movf	fsr2l,w,c
  3702  003CBC  0D03               	mullw	3
  3703  003CBE  0E0E               	movlw	low _KTim
  3704  003CC0  24F3               	addwf	prodl,w,c
  3705  003CC2  6EE9               	movwf	fsr0l,c
  3706  003CC4  0E01               	movlw	high _KTim
  3707  003CC6  20F4               	addwfc	prodh,w,c
  3708  003CC8  6EEA               	movwf	fsr0h,c
  3709  003CCA  6AEF               	clrf	indf0,c
  3710                           ;wsw.c: 1084: KTim[j].ndS=0;
  3711  003CCC  50D9               	movf	fsr2l,w,c
  3712  003CCE  0D03               	mullw	3
  3713  003CD0  0E0F               	movlw	low (_KTim+1)
  3714  003CD2  24F3               	addwf	prodl,w,c
  3715  003CD4  6EE9               	movwf	fsr0l,c
  3716  003CD6  0E01               	movlw	high (_KTim+1)
  3717  003CD8  20F4               	addwfc	prodh,w,c
  3718  003CDA  6EEA               	movwf	fsr0h,c
  3719  003CDC  6AEF               	clrf	indf0,c
  3720  003CDE  2AD9               	incf	fsr2l,f,c
  3721  003CE0  0E02               	movlw	2
  3722  003CE2  64D9               	cpfsgt	fsr2l,c
  3723  003CE4  D7E0               	goto	l175
  3724  003CE6  0C02               	retlw	2
  3725                           ;wsw.c: 1085: }
  3726  003CE8                     __end_of_AllKolToFirstPoz:
  3727  000000                     
  3728  000000                     
  3729  000000                     
  3730  000000                     
  3731  000000                     
  3732  000000                     
  3733  000000                     
  3734  000000                     
  3735  000000                     
  3736  000000                     
  3737  000000                     
  3738  000000                     
  3739  000000                     
  3740  000000                     
  3741  000000                     
  3742  000000                     
  3743  000000                     
  3744  000000                     
  3745  000000                     
  3746  000000                     
  3747  000000                     
  3748  000000                     
  3749  000000                     
  3750  000000                     
  3751  000000                     
  3752  000000                     
  3753  000000                     
  3754  000000                     
  3755  000000                     
  3756  000000                     
  3757  000000                     
  3758  000000                     
  3759  000000                     
  3760  000000                     
  3761  000000                     
  3762  000000                     
  3763  000000                     
  3764  000000                     
  3765  000000                     
  3766  000000                     
  3767  000000                     
  3768  000000                     
  3769  000000                     
  3770  000000                     
  3771  000000                     
  3772  000000                     
  3773  000000                     
  3774  000000                     
  3775  000000                     
  3776  000000                     
  3777  000000                     
  3778  000000                     
  3779  000000                     
  3780  000000                     
  3781  000000                     
  3782  000000                     
  3783  000000                     
  3784  000000                     
  3785  000000                     
  3786  000000                     
  3787  000000                     
  3788  000000                     
  3789  000000                     
  3790  000000                     
  3791  000000                     
  3792  000000                     
  3793  000000                     
  3794  000000                     
  3795  000000                     
  3796  000000                     
  3797  000000                     
  3798  000000                     
  3799  000000                     
  3800  000000                     
  3801  000000                     
  3802  000000                     
  3803  000000                     
  3804  000000                     
  3805  000000                     
  3806  000000                     
  3807  000000                     
  3808  000000                     
  3809  000000                     
  3810  000000                     
  3811  000000                     
  3812  000000                     
  3813  000000                     
  3814  000000                     
  3815  000000                     
  3816  000000                     
  3817  000000                     
  3818  000000                     
  3819  000000                     
  3820  000000                     
  3821  000000                     
  3822  000000                     
  3823  000000                     
  3824  000000                     
  3825  000000                     
  3826  000000                     
  3827  000000                     
  3828  000000                     
  3829  000000                     
  3830  000000                     
  3831  000000                     
  3832  000000                     
  3833  000000                     
  3834  000000                     
  3835  000000                     
  3836  000000                     
  3837  000000                     
  3838  000000                     
  3839  000000                     
  3840  000000                     
  3841  000000                     
  3842  000000                     
  3843  000000                     
  3844  000000                     
  3845  000000                     
  3846  000000                     
  3847  000000                     
  3848  000000                     
  3849  000000                     
  3850  000000                     
  3851  000000                     
  3852  000000                     
  3853  000000                     
  3854  000000                     
  3855  000000                     
  3856  000000                     
  3857  000000                     
  3858  000000                     
  3859  000000                     
  3860  000000                     
  3861  000000                     
  3862  000000                     
  3863  000000                     
  3864  000000                     
  3865  000000                     
  3866  000000                     
  3867  000000                     
  3868  000000                     
  3869  000000                     
  3870  000000                     
  3871  000000                     
  3872  000000                     
  3873  000000                     
  3874  000000                     
  3875  000000                     
  3876  000000                     
  3877  000000                     
  3878  000000                     
  3879  000000                     
  3880  000000                     
  3881  000000                     
  3882  000000                     
  3883  000000                     
  3884  000000                     
  3885  000000                     
  3886  000000                     
  3887  000000                     
  3888  000000                     
  3889  000000                     
  3890  000000                     
  3891  000000                     
  3892  000000                     
  3893  000000                     
  3894  000000                     
  3895  000000                     
  3896  000000                     
  3897  000000                     
  3898  000000                     
  3899  000000                     
  3900  000000                     
  3901  000000                     
  3902  000000                     
  3903  000000                     
  3904  000000                     
  3905  000000                     
  3906  000000                     
  3907  000000                     
  3908  000000                     
  3909  000000                     
  3910  000000                     
  3911  000000                     
  3912  000000                     
  3913  000000                     
  3914  000000                     
  3915  000000                     
  3916  000000                     
  3917  000000                     
  3918  000000                     
  3919  000000                     
  3920  000000                     
  3921  000000                     
  3922  000000                     
  3923  000000                     
  3924  000000                     
  3925  000000                     
  3926  000000                     
  3927  000000                     
  3928  000000                     
  3929  000000                     
  3930  000000                     
  3931  000000                     
  3932  000000                     
  3933  000000                     
  3934  000000                     
  3935  000000                     
  3936  000000                     
  3937  000000                     
  3938  000000                     
  3939  000000                     
  3940  000000                     
  3941  000000                     
  3942  000000                     
  3943  000000                     
  3944  000000                     
  3945  000000                     
  3946  000000                     
  3947  000000                     
  3948  000000                     
  3949  000000                     
  3950  000000                     
  3951  000000                     
  3952  000000                     
  3953  000000                     
  3954  000000                     
  3955  000000                     
  3956  000000                     
  3957  000000                     
  3958  000000                     
  3959  000000                     
  3960  000000                     
  3961  000000                     
  3962  000000                     
  3963  000000                     
  3964  000000                     
  3965  000000                     
  3966  000000                     
  3967  000000                     
  3968  000000                     
  3969  000000                     
  3970  000000                     
  3971  000000                     
  3972  000000                     
  3973  000000                     
  3974  000000                     
  3975  000000                     
  3976  000000                     
  3977  000000                     
  3978  000000                     
  3979  000000                     
  3980  000000                     
  3981  000000                     
  3982  000000                     
  3983  000000                     
  3984  000000                     
  3985  000000                     
  3986  000000                     
  3987  000000                     
  3988  000000                     
  3989  000000                     
  3990  000000                     
  3991  000000                     
  3992  000000                     
  3993  000000                     
  3994  000000                     
  3995  000000                     
  3996  000000                     
  3997  000000                     
  3998  000000                     
  3999  000000                     
  4000  000000                     
  4001  000000                     
  4002  000000                     
  4003  000000                     
  4004  000000                     
  4005  000000                     
  4006  000000                     
  4007  000000                     
  4008  000000                     
  4009  000000                     
  4010  000000                     
  4011  000000                     
  4012  000000                     
  4013  000000                     
  4014  000000                     
  4015  000000                     
  4016  000000                     
  4017  000000                     
  4018  000000                     
  4019  000000                     
  4020  000000                     
  4021  000000                     
  4022  000000                     
  4023  000000                     
  4024  000000                     
  4025  000000                     
  4026  000000                     
  4027  000000                     
  4028  000000                     
  4029  000000                     
  4030  000000                     
  4031  000000                     
  4032  000000                     
  4033  000000                     
  4034  000000                     
  4035  000000                     
  4036  000000                     
  4037  000000                     
  4038  000000                     
  4039  000000                     
  4040  000000                     
  4041  000000                     
  4042  000000                     
  4043  000000                     
  4044  000000                     
  4045  000000                     
  4046  000000                     
  4047  000000                     
  4048  000000                     
  4049  000000                     
  4050  000000                     
  4051  000000                     
  4052  000000                     
  4053  000000                     
  4054  000000                     
  4055  000000                     
  4056  000000                     
  4057  000000                     
  4058  000000                     
  4059  000000                     
  4060  000000                     
  4061  000000                     
  4062  000000                     
  4063  000000                     
  4064  000000                     
  4065  000000                     
  4066  000000                     
  4067  000000                     
  4068  000000                     
  4069  000000                     
  4070  000000                     
  4071  000000                     
  4072  000000                     
  4073  000000                     
  4074  000000                     
  4075  000000                     
  4076  000000                     
  4077  000000                     
  4078  000000                     
  4079  000000                     
  4080  000000                     
  4081  000000                     
  4082  000000                     
  4083  000000                     
  4084  000000                     
  4085  000000                     
  4086  000000                     
  4087  000000                     
  4088  000000                     
  4089  000000                     
  4090  000000                     
  4091  000000                     
  4092  000000                     
  4093  000000                     
  4094  000000                     
  4095  000000                     
  4096  000000                     
  4097  000000                     
  4098  000000                     
  4099  000000                     
  4100  000000                     
  4101  000000                     
  4102  000000                     
  4103  000000                     
  4104  000000                     
  4105  000000                     
  4106  000000                     
  4107  000000                     
  4108  000000                     
  4109  000000                     
  4110  000000                     
  4111  000000                     
  4112  000000                     
  4113  000000                     
  4114  000000                     
  4115  000000                     
  4116  000000                     
  4117  000000                     
  4118  000000                     
  4119  000000                     
  4120  000000                     
  4121  000000                     
  4122  000000                     
  4123  000000                     
  4124  000000                     
  4125  000000                     
  4126  000000                     
  4127  000000                     
  4128  000000                     
  4129  000000                     
  4130  000000                     
  4131  000000                     
  4132  000000                     
  4133  000000                     
  4134  000000                     
  4135  000000                     
  4136  000000                     
  4137  000000                     
  4138  000000                     
  4139  000000                     
  4140  000000                     
  4141  000000                     
  4142  000000                     
  4143  000000                     
  4144  000000                     
  4145  000000                     
  4146  000000                     
  4147  000000                     
  4148  000000                     
  4149  000000                     
  4150  000000                     
  4151  000000                     
  4152  000000                     
  4153  000000                     
  4154  000000                     
  4155  000000                     
  4156  000000                     
  4157  000000                     
  4158  000000                     
  4159  000000                     
  4160  000000                     
  4161  000000                     
  4162  000000                     
  4163  000000                     
  4164  000000                     
  4165  000000                     
  4166  000000                     
  4167  000000                     
  4168  000000                     
  4169  000000                     
  4170  000000                     
  4171  000000                     
  4172  000000                     
  4173  000000                     
  4174  000000                     
  4175  000000                     
  4176  000000                     
  4177  000000                     
  4178  000000                     
  4179  000000                     
  4180  000000                     
  4181  000000                     
  4182  000000                     
  4183  000000                     
  4184  000000                     
  4185  000000                     
  4186  000000                     
  4187  000000                     
  4188  000000                     
  4189  000000                     
  4190  000000                     
  4191  000000                     
  4192  000000                     
  4193  000000                     
  4194  000000                     
  4195  000000                     
  4196  000000                     
  4197  000000                     
  4198  000000                     
  4199  000000                     
  4200  000000                     
  4201  000000                     
  4202  000000                     
  4203  000000                     
  4204  000000                     
  4205  000000                     
  4206  000000                     
  4207  000000                     
  4208  000000                     
  4209  000000                     
  4210  000000                     
  4211  000000                     
  4212  000000                     
  4213  000000                     
  4214  000000                     
  4215  000000                     
  4216  000000                     
  4217  000000                     
  4218  000000                     
  4219  000000                     
  4220  000000                     
  4221  000000                     
  4222  000000                     
  4223  000000                     
  4224  000000                     
  4225  000000                     
  4226  000000                     
  4227  000000                     
  4228  000000                     
  4229  000000                     
  4230  000000                     
  4231  000000                     
  4232  000000                     
  4233  000000                     
  4234  000000                     
  4235  000000                     
  4236  000000                     
  4237  000000                     
  4238  000000                     
  4239  000000                     
  4240  000000                     
  4241  000000                     
  4242  000000                     
  4243  000000                     
  4244  000000                     
  4245  000000                     
  4246  000000                     
  4247  000000                     
  4248  000000                     
  4249  000000                     
  4250  000000                     
  4251  000000                     
  4252  000000                     
  4253  000000                     
  4254  000000                     
  4255  000000                     
  4256  000000                     
  4257  000000                     
  4258  000000                     
  4259  000000                     
  4260  000000                     
  4261  000000                     
  4262  000000                     
  4263  000000                     
  4264  000000                     
  4265  000000                     
  4266  000000                     
  4267  000000                     
  4268  000000                     
  4269  000000                     
  4270  000000                     
  4271  000000                     
  4272  000000                     
  4273  000000                     
  4274  000000                     
  4275  000000                     
  4276  000000                     
  4277  000000                     
  4278  000000                     
  4279  000000                     
  4280  000000                     
  4281  000000                     
  4282  000000                     
  4283  000000                     
  4284  000000                     
  4285  000000                     
  4286  000000                     
  4287  000000                     
  4288  000000                     
  4289  000000                     
  4290  000000                     
  4291  000000                     
  4292  000000                     
  4293  000000                     
  4294  000000                     
  4295  000000                     
  4296  000000                     
  4297  000000                     
  4298  000000                     
  4299  000000                     
  4300  000000                     
  4301  000000                     
  4302  000000                     
  4303  000000                     
  4304  000000                     
  4305  000000                     
  4306  000000                     
  4307  000000                     
  4308  000000                     
  4309  000000                     
  4310  000000                     
  4311  000000                     
  4312  000000                     
  4313  000000                     
  4314  000000                     
  4315  000000                     
  4316  000000                     
  4317  000000                     
  4318  000000                     
  4319  000000                     
  4320  000000                     
  4321  000000                     
  4322  000000                     
  4323  000000                     
  4324  000000                     
  4325  000000                     
  4326  000000                     
  4327  000000                     
  4328  000000                     
  4329  000000                     
  4330  000000                     
  4331  000000                     
  4332  000000                     
  4333  000000                     
  4334  000000                     
  4335  000000                     
  4336  000000                     
  4337  000000                     
  4338  000000                     
  4339  000000                     
  4340  000000                     
  4341  000000                     
  4342  000000                     
  4343  000000                     
  4344  000000                     
  4345  000000                     
  4346                           
  4347                           	psect	const
  4348  000802                     _KL0_AP:
  4349  000802  0190               	dw	_DWD
  4350  000804  01A0               	dw	_DWD+16
  4351                           ;wsw.c: 202: const KAdrPoz KL0_AP[2]= {
  4352                           ;wsw.c: 203: DWD,
  4353                           ;wsw.c: 204: DWD+1
  4354                           ;wsw.c: 205: };
  4355  000806                     _KL1_AP:
  4356  000806  01B0               	dw	_DWD+32
  4357  000808  01C0               	dw	_DWD+48
  4358                           ;wsw.c: 207: const KAdrPoz KL1_AP[2]= {
  4359                           ;wsw.c: 208: DWD+2,
  4360                           ;wsw.c: 209: DWD+3
  4361                           ;wsw.c: 210: };
  4362  00080A                     _KL2_AP:
  4363  00080A  01D0               	dw	_DWD+64
  4364  00080C  01E0               	dw	_DWD+80
  4365                           ;wsw.c: 212: const KAdrPoz KL2_AP[2]= {
  4366                           ;wsw.c: 213: DWD+4,
  4367                           ;wsw.c: 214: DWD+5
  4368                           ;wsw.c: 215: };
  4369  00080E                     _KL0_WP:
  4370  00080E  08                 	db	8
  4371  00080F  08                 	db	8
  4372                           ;wsw.c: 260: const KWrtPoz KL0_WP[2]={
  4373                           ;wsw.c: 261: 8,
  4374                           ;wsw.c: 262: 8
  4375                           ;wsw.c: 263: };
  4376  000810                     _KL1_WP:
  4377  000810  06                 	db	6
  4378  000811  06                 	db	6
  4379                           ;wsw.c: 265: const KWrtPoz KL1_WP[2]={
  4380                           ;wsw.c: 266: 6,
  4381                           ;wsw.c: 267: 6
  4382                           ;wsw.c: 268: };
  4383  000812                     _KL2_WP:
  4384  000812  0F                 	db	15
  4385  000813  0F                 	db	15
  4386                           ;wsw.c: 331: static KFocus KL2_FC[2]= {
  4387                           ;wsw.c: 332: 0,
  4388                           ;wsw.c: 333: 0
  4389                           ;wsw.c: 334: };
  4390  000814                     _KL0_OUT:
  4391  000814  0140               	dw	_PWD
  4392  000816  00                 	db	0
  4393                           ;wsw.c: 339: const KOutput KL0_OUT= {PWD,0};
  4394  000817                     _KL1_OUT:
  4395  000817  0160               	dw	_PWD+32
  4396  000819  03                 	db	3
  4397                           ;wsw.c: 340: const KOutput KL1_OUT= {PWD+2,3};
  4398  00081A                     _KL2_OUT:
  4399  00081A  0170               	dw	_PWD+48
  4400  00081C  00                 	db	0
  4401                           ;wsw.c: 341: const KOutput KL2_OUT= {PWD+3,0};
  4402  00081D                     _KL0:
  4403  00081D  0802               	dw	_KL0_AP
  4404  00081F  080E               	dw	_KL0_WP
  4405  000821  0761               	dw	_KL0_FC
  4406  000823  0814               	dw	_KL0_OUT
  4407                           ;wsw.c: 349: const Kolejka KL0={KL0_AP,KL0_WP,KL
      +                          0_FC,&KL0_OUT};
  4408  000825                     _KL1:
  4409  000825  0806               	dw	_KL1_AP
  4410  000827  0810               	dw	_KL1_WP
  4411  000829  0763               	dw	_KL1_FC
  4412  00082B  0817               	dw	_KL1_OUT
  4413                           ;wsw.c: 350: const Kolejka KL1={KL1_AP,KL1_WP,KL
      +                          1_FC,&KL1_OUT};
  4414  00082D                     _KL2:
  4415  00082D  080A               	dw	_KL2_AP
  4416  00082F  0812               	dw	_KL2_WP
  4417  000831  0765               	dw	_KL2_FC
  4418  000833  081A               	dw	_KL2_OUT
  4419                           ;wsw.c: 351: const Kolejka KL2={KL2_AP,KL2_WP,KL
      +                          2_FC,&KL2_OUT};
  4420  000835                     _Klj:
  4421  000835  081D               	dw	_KL0
  4422  000837  02                 	db	2
  4423  000838  0825               	dw	_KL1
  4424  00083A  02                 	db	2
  4425  00083B  082D               	dw	_KL2
  4426  00083D  02                 	db	2
  4427                           ;wsw.c: 358: const KGlobal Klj[3]= {
  4428                           ;wsw.c: 359: &KL0,2,
  4429                           ;wsw.c: 360: &KL1,2,
  4430                           ;wsw.c: 361: &KL2,2
  4431                           ;wsw.c: 362: };
  4432                           ;wsw.c: 396: static KIndeks KInd[3];
  4433                           ;wsw.c: 397: static KTime KTim[3];
  4434  00083E                     _Znak:
  4435  00083E  3F                 	db	63
  4436  00083F  06                 	db	6
  4437  000840  5B                 	db	91
  4438  000841  4F                 	db	79
  4439  000842  66                 	db	102
  4440  000843  6D                 	db	109
  4441  000844  7D                 	db	125
  4442  000845  07                 	db	7
  4443  000846  7F                 	db	127
  4444  000847  6F                 	db	111
  4445  000848  77                 	db	119
  4446  000849  7C                 	db	124
  4447  00084A  39                 	db	57
  4448  00084B  5E                 	db	94
  4449  00084C  79                 	db	121
  4450  00084D  71                 	db	113
  4451                           
  4452                           	psect	bigdata
  4453                           ;wsw.c: 270: const KWrtPoz KL2_WP[2]={
  4454                           ;wsw.c: 271: 15,
  4455                           ;wsw.c: 272: 15
  4456                           ;wsw.c: 273: };
  4457  000761                     _KL0_FC:
  4458  000761                     	ds	1
  4459  000761                     	ds	1
  4460                           ;wsw.c: 321: static KFocus KL0_FC[2]= {
  4461                           ;wsw.c: 322: 0,
  4462                           ;wsw.c: 323: 0
  4463                           ;wsw.c: 324: };
  4464  000761                     _KL1_FC:
  4465  000761                     	ds	1
  4466  000761                     	ds	1
  4467                           ;wsw.c: 326: static KFocus KL1_FC[2]= {
  4468                           ;wsw.c: 327: 0,
  4469                           ;wsw.c: 328: 0
  4470                           ;wsw.c: 329: };
  4471  000761                     _KL2_FC:
  4472  000761                     	ds	1
  4473  000761                     	ds	1
  4474                           
  4475                           	psect	ibigdata
  4476  00091B  00                 	db	0
  4477  00091C  00                 	db	0
  4478  00091D  00                 	db	0
  4479  00091E  00                 	db	0
  4480  00091F  00                 	db	0
  4481  000920  00                 	db	0
  4482                           
  4483                           	psect	bigbss
  4484  000779                     F1653:
  4485  000779                     	ds	1
  4486  000779                     F1654:
  4487  000779                     	ds	1
  4488  000779                     F1655:
  4489  000779                     	ds	1
  4490  000000                     
  4491  000000                     
  4492  000000                     
  4493  000000                     
  4494  000000                     
  4495  000000                     
  4496  000000                     
  4497  000000                     
  4498  000000                     
  4499  000000                     
  4500  000000                     
  4501  000000                     
  4502  000000                     
  4503  000000                     
  4504  000000                     
  4505  000000                     
  4506  000000                     
  4507  000000                     
  4508  000000                     
  4509  000000                     
  4510  000000                     
  4511  000000                     
  4512  000000                     
  4513  000000                     
  4514  000000                     
  4515  000000                     
  4516  000000                     
  4517  000000                     
  4518  000000                     
  4519  000000                     
  4520  000000                     
  4521  000000                     
  4522  000000                     
  4523  000000                     
  4524  000000                     
  4525  000000                     
  4526  000000                     
  4527  000000                     
  4528  000000                     
  4529  000000                     
  4530  000000                     
  4531  000000                     
  4532  000000                     
  4533  000000                     
  4534  000000                     
  4535  000000                     
  4536  000000                     
  4537  000000                     
  4538  000000                     
  4539  000000                     
  4540  000000                     
  4541  000000                     
  4542  000000                     
  4543  000000                     
  4544  000000                     
  4545  000000                     
  4546  000000                     
  4547  000000                     
  4548  000000                     
  4549  000000                     
  4550  000000                     
  4551  000000                     
  4552  000000                     
  4553  000000                     
  4554  000000                     
  4555  000000                     
  4556  000000                     
  4557  000000                     
  4558  000000                     
  4559  000000                     
  4560  000000                     
  4561  000000                     
  4562  000000                     
  4563  000000                     
  4564  000000                     
  4565  000000                     
  4566  000000                     
  4567  000000                     
  4568  000000                     
  4569  000000                     
  4570  000000                     
  4571  000000                     
  4572  000000                     
  4573  000000                     
  4574  000000                     
  4575  000000                     
  4576  000000                     
  4577  000000                     
  4578  000000                     
  4579  000000                     
  4580  000000                     
  4581  000000                     
  4582  000000                     
  4583  000000                     
  4584  000000                     
  4585  000000                     
  4586  000000                     
  4587  000000                     
  4588  000000                     
  4589  000000                     
  4590  000000                     
  4591  000000                     
  4592  000000                     
  4593  000000                     
  4594  000000                     
  4595  000000                     
  4596  000000                     
  4597  000000                     
  4598  000000                     
  4599  000000                     
  4600  000000                     
  4601  000000                     
  4602  000000                     
  4603  000000                     
  4604  000000                     
  4605  000000                     
  4606  000000                     
  4607  000000                     
  4608  000000                     
  4609  000000                     
  4610  000000                     
  4611  000000                     
  4612  000000                     
  4613  000000                     
  4614  000000                     
  4615  000000                     
  4616  000000                     
  4617  000000                     
  4618  000000                     
  4619  000000                     
  4620  000000                     
  4621  000000                     
  4622  000000                     
  4623  000000                     
  4624  000000                     
  4625  000000                     
  4626  000000                     
  4627  000000                     
  4628  000000                     
  4629  000000                     
  4630  000000                     
  4631  000000                     
  4632  000000                     
  4633  000000                     
  4634  000000                     
  4635  000000                     
  4636  000000                     
  4637  000000                     
  4638  000000                     
  4639  000000                     
  4640  000000                     
  4641  000000                     
  4642  000000                     
  4643  000000                     
  4644  000000                     
  4645  000000                     
  4646  000000                     
  4647  000000                     
  4648  000000                     
  4649  000779                     _KMark:
  4650  000779                     	ds	16
  4651                           
  4652                           	psect	bss
  4653  000100                     _KInd:
  4654  000100                     	ds	6
  4655  000100                     _DynData:
  4656  000100                     	ds	8
  4657  000100                     _KTim:
  4658  000100                     	ds	9
  4659  000100                     _LedData:
  4660  000100                     	ds	9
  4661  000100                     _WswData:
  4662  000100                     	ds	16
  4663  000100                     _bfWswData:
  4664  000100                     	ds	16
  4665  000100                     _PWD:
  4666  000100                     	ds	80
  4667  000100                     _DWD:
  4668  000100                     	ds	96
  4669                           
  4670                           	psect	temp
  4671  000000                     btemp:
  4672  000000                     	ds	5
  4673                           tblptrh	equ	0xFF7
  4674                           tblptrl	equ	0xFF6
  4675                           tablat	equ	0xFF5
  4676                           prodh	equ	0xFF4
  4677                           prodl	equ	0xFF3
  4678                           indf0	equ	0xFEF
  4679                           postinc0	equ	0xFEE
  4680                           postdec0	equ	0xFED
  4681                           fsr0h	equ	0xFEA
  4682                           fsr0l	equ	0xFE9
  4683                           wreg	equ	0xFE8
  4684                           indf1	equ	0xFE7
  4685                           postinc1	equ	0xFE6
  4686                           fsr1h	equ	0xFE2
  4687                           fsr1l	equ	0xFE1
  4688                           indf2	equ	0xFDF
  4689                           fsr2h	equ	0xFDA
  4690                           fsr2l	equ	0xFD9
  4691                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Fri Nov 21 09:58:03 2014

      __end_of_RefreshWSW 25DA                  _ResetKol 3BFC  
                _ResetPoz 3B66                 _SetStatus 3762  
       __end_of_SetStatus 398E                 ?_ResetPoz 00CF  
             ?_SetLedData 00F5                        l30 25DC  
                      l22 2590                        l33 27BC  
                      l25 25AE                        l42 2806  
                      l43 295A                        l19 2572  
                      l60 2C42                        l52 2B16  
                      l37 2734                        l46 3162  
                      l38 2892                        l63 30B2  
                      l55 2C34                        l47 315C  
                      l64 2D86                        l48 2986  
                      l81 31EE                        l65 2DBE  
                      l74 317E                        l66 308C  
                      l91 32E6                        l83 31DE  
                      l75 3198                        l67 2DEC  
                      l59 2B96                        l92 335A  
                      l76 3192                        l68 2E96  
                      l93 334A                        l94 32F4  
                      l86 31FA                        l78 319A  
                      l96 3376                        l97 3392  
                      l89 3240                        l98 339E  
                      l99 33B8                        u26 24B4  
                      u28 24B6                        u46 24C0  
                      u48 24C2                        u66 24CC  
                      u68 24CE                        u86 24D8  
                      u88 24DA                 ?a_KolProc 00F5  
              ?_SetStatus 00DF               _ClrAllMarks 39D8  
                     l100 33CA                       l101 3404  
                     l110 34DE                       l111 3518  
                     l120 3688                       l112 356A  
                     l104 345A                       l121 3694  
                     l113 3546                       l130 3700  
                     l122 36A0                       l131 370C  
                     l123 36AC                       l115 3588  
                     l107 3486                       l140 379A  
                     l132 3718                       l124 36B8  
                     l108 349C                       l141 37B6  
                     l133 3724                       l125 36C4  
                     l117 35A8                       l109 34C8  
                     l150 38E0                       l142 37D4  
                     l134 3730                       l126 36D0  
                     l151 3906                       l143 37EE  
                     l127 36DC                       l152 392A  
                     l144 380A                       l128 36E8  
                     l153 395A                       l145 3828  
                     l129 36F4                       l146 3844  
                     l171 3C4E                       l147 3868  
                     l139 3780                       l148 388E  
                     l173 3C72                       l157 39DA  
                     l149 38B6                       l175 3CA6  
                     l167 3C06                       l169 3C2A  
                     _KL0 081D                       _KL1 0825  
                     _KL2 082D                       _DWD 0190  
                     u106 24E4                       u108 24E6  
                     u206 2520                       u126 24F0  
                     u208 2522                       u128 24F2  
                     u306 255C                       u226 252C  
                     u146 24FC                       u308 255E  
                     u228 252E                       u148 24FE  
                     u326 2568                       u246 2538  
                     u166 2508                       u520 287A  
                     u440 270C                       u360 262E  
                     u328 256A                       u248 253A  
                     u168 250A                       u450 27A8  
                     u370 265A                       u266 2544  
                     u186 2514                       u700 2B8E  
                     u620 29F6                       u380 26AC  
                     u268 2546                       u188 2516  
                     u630 2A34                       u390 26D2  
                     u286 2550                       u527 286A  
                     u367 261E                       u720 2C0C  
                     u640 2A86                       u288 2552  
                     u457 2798                       u377 264A  
                     u730 2C22                       u490 27EC  
                     u707 2B84                       u627 29E6  
                     u387 269C                       u580 28C6  
                     u637 2A24                       u397 26C8  
                     u830 2E36                       u727 2BFC  
                     u647 2A76                       u840 2E62  
                     u665 2ADC                       u770 2D06  
                     u690 2B68                       u860 2EE6  
                     u780 2D30                       u837 2E26  
                     u870 2F24                       u847 2E52  
                     u777 2CF6                       u697 2B58  
                     _PWD 0140                       u867 2ED6  
                     u787 2D26                       u885 312E  
                     u877 2F14              _SetPrWswData 31F8  
                     _Klj 0835       __end_of_ClrAllMarks 3A18  
                     wreg 000FE8                _RestartKol 3C20  
                    F1653 0779                      F1654 077A  
                    F1655 077B        __end_of_RestartKol 3C44  
    __end_of_SetPrWswData 3264                      f8143 00FD  
                    u1200 33C6                      u1046 3278  
                    u2200 3AE4                      u2210 3B38  
                    u1170 33AC                      u1066 3298  
                    u2221 3B70                      u2141 3A24  
                    u2240 3B94                      u2160 3A48  
                    u2217 3B28                      u2250 3BE8  
                    u2170 3A9C                      u2181 3AC0  
                    u2257 3BD8                      u2177 3A8C  
                    _KInd 0100                      _KTim 010E  
                    _Znak 083E                 _bfWswData 0130  
                    fsr0h 000FEA                      fsr1h 000FE2  
                    indf0 000FEF                      fsr0l 000FE9  
                    indf1 000FE7                      fsr1l 000FE1  
                    indf2 000FDF                      fsr2l 000FD9  
                    btemp 0000                      lbdiv 7E98  
                    lbmod 7E98                      prodh 000FF4  
                    prodl 000FF3           __end_of_InitLCD 24AA  
             _RestartKol1 3C44               _RestartKol2 3C68  
         __end_of_KolMark 31F8                   ?_GetPoz 00CF  
         __end_of_KolProc 316E           __end_of_InitWsw 25C8  
         __end_of_SetData 3760       __end_of_RestartKol1 3C68  
     __end_of_RestartKol2 3CA4           __end_of_SetMark 39D8  
                 ?_SetPoz 00DF          _AllKolToFirstPoz 3CA4  
           __end_of_WswOn 3740                 structcopy 7F88  
                 _KL0_OUT 0814                   _KL1_OUT 0817  
                 _KL2_OUT 081A                     _KMark 077C  
              used_btemp0 0001                used_btemp1 0001  
              used_btemp2 0001                used_btemp3 0001  
              used_btemp4 0001                     _WswOn 373A  
                   tablat 000FF5                   _LedData 0117  
                   status 000FD8                   _DynData 0106  
                 _InitLCD 243E                   _KolMark 316E  
                 _KolProc 25DA                   _InitWsw 256E  
                 _SetData 3742                   _SetMark 3990  
                ?_SetData 00DF                   __Lparam 00CF  
                ?_SetMark 00DE                 ??_KolProc 00F5  
        __end_of_ResetKol 3C20          __end_of_ResetPoz 3BFC  
                 _WswData 0120                   __ramtop 0800  
          __end_of_GetPoz 3AB4            __end_of_SetWSW 256E  
          __end_of_SetPoz 3B64            __end_of_WswOff 373A  
                  _KL0_FC 0761                    _KL0_AP 0802  
                  _KL1_FC 0763                    _KL1_AP 0806  
                  _KL2_FC 0765                    _KL2_AP 080A  
                  _KL0_WP 080E                    _KL1_WP 0810  
                  _KL2_WP 0812              _PrintWswData 35CE  
    __end_of_PrintWswData 3734                    _GetPoz 3A1A  
                  _SetWSW 24AA                    _SetPoz 3AB6  
                  _WswOff 3734                   postdec0 000FED  
                 postinc0 000FEE                   postinc1 000FE6  
           _FormatWswData 3452                    tblptrh 000FF7  
                  tblptrl 000FF6     __end_of_FormatWswData 35CE  
__end_of_AllKolToFirstPoz 3CE8                _SetLedData 3266  
      __end_of_SetLedData 3452                _RefreshWSW 25C8  
