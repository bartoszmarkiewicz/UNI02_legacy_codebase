ý

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Fri Nov 21 09:58:02 2014


     1                           	processor	18F65J90
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	rbss,global,common,class=COMRAM,space=1,d
      +                          elta=1
     5                           	psect	temp,global,ovrld,common,class=COMRAMý,spa
      +                          ce=1,delta=1
     6                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     7  000000                     
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000ý000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000  ý                   
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000       ý              
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000            ý         
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                 ý    
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
ý    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96                           
    97                           	psect	text
    98                           ;pic18f85j90.h: 18: static volatile near unsigne
      +                 ý         d char TOSU @ 0xFFF;
    99                           ;pic18f85j90.h: 19: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   100                           ;pic18f85j90.h: 20: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   101                           ;pic18f85j90.h: 21: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   102                           ;pic18f85j90.h: 22: static volatile ýnear unsigne
      +                          d char PCLATU @ 0xFFB;
   103                           ;pic18f85j90.h: 23: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   104                           ;pic18f85j90.h: 24: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   105                           ;pic18f85j90.h: 25: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   106                      ý     ;pic18f85j90.h: 26: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   107                           ;pic18f85j90.h: 27: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   108                           ;pic18f85j90.h: 28: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   109                           ;pic18f85j90.h: 29: static volatile near unsigne
      +                          d chaýr TABLAT @ 0xFF5;
   110                           ;pic18f85j90.h: 30: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   111                           ;pic18f85j90.h: 31: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   112                           ;pic18f85j90.h: 32: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   113                           ;pic18f85j90.h: 33: static near unsigned char ýIN
      +                          TCON2 @ 0xFF1;
   114                           ;pic18f85j90.h: 34: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   115                           ;pic18f85j90.h: 35: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   116                           ;pic18f85j90.h: 36: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   117                           ;pic18f85ýj90.h: 37: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   118                           ;pic18f85j90.h: 38: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   119                           ;pic18f85j90.h: 39: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   120                           ;pic18f85j90.h: 40: static volatile near unsigne
      +                          d char FSR0H @ 0xFEýA;
   121                           ;pic18f85j90.h: 41: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   122                           ;pic18f85j90.h: 42: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   123                           ;pic18f85j90.h: 43: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   124                           ;pic18f85j90.h: 44: static volatile near unsigne
      +       ý                   d char POSTINC1 @ 0xFE6;
   125                           ;pic18f85j90.h: 45: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   126                           ;pic18f85j90.h: 46: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   127                           ;pic18f85j90.h: 47: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   128                           ;pic18f85j90.h:ý 48: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   129                           ;pic18f85j90.h: 49: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   130                           ;pic18f85j90.h: 50: static near unsigned char BS
      +                          R @ 0xFE0;
   131                           ;pic18f85j90.h: 51: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   132              ý             ;pic18f85j90.h: 52: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   133                           ;pic18f85j90.h: 53: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   134                           ;pic18f85j90.h: 54: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   135                           ;pic18f85j90.h: 55: static volatile near unsigne
      +                     ý     d char PLUSW2 @ 0xFDB;
   136                           ;pic18f85j90.h: 56: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   137                           ;pic18f85j90.h: 57: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   138                           ;pic18f85j90.h: 58: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   139                           ;pic18f85j90.h: 59: static volatile ýnear unsigne
      +                          d char TMR0H @ 0xFD7;
   140                           ;pic18f85j90.h: 60: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   141                           ;pic18f85j90.h: 62: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   142                           ;pic18f85j90.h: 63: static near unsigned char T0
      +                          CON @ 0xFD5;
   143                           ;pic18f8ý5j90.h: 64: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   144                           ;pic18f85j90.h: 65: static near unsigned char LC
      +                          DREG @ 0xFD2;
   145                           ;pic18f85j90.h: 66: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   146                           ;pic18f85j90.h: 67: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   147   ý                        ;pic18f85j90.h: 68: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   148                           ;pic18f85j90.h: 69: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   149                           ;pic18f85j90.h: 71: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   150                           ;pic18f85j90.h: 72: static near unsigned char T1
      +                    ý      CON @ 0xFCD;
   151                           ;pic18f85j90.h: 73: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   152                           ;pic18f85j90.h: 74: static near unsigned char PR
      +                          2 @ 0xFCB;
   153                           ;pic18f85j90.h: 75: static near unsigned char T2
      +                          CON @ 0xFCA;
   154                           ;pic18f85j90.h: 76: static volatile near unsigne
      +           ý               d char SSPBUF @ 0xFC9;
   155                           ;pic18f85j90.h: 77: static near unsigned char SS
      +                          PADD @ 0xFC8;
   156                           ;pic18f85j90.h: 78: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   157                           ;pic18f85j90.h: 79: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   158                           ;pic18f85j90.h: 80: static volaýtile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   159                           ;pic18f85j90.h: 81: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   160                           ;pic18f85j90.h: 82: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   161                           ;pic18f85j90.h: 84: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   162                ý           ;pic18f85j90.h: 85: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   163                           ;pic18f85j90.h: 86: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   164                           ;pic18f85j90.h: 87: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   165                           ;pic18f85j90.h: 88: static near unsigned char LC
      +                          DDATA4 @ 0xFBF;
   1ý66                           ;pic18f85j90.h: 89: static near unsigned char LC
      +                          DDATA3 @ 0xFBE;
   167                           ;pic18f85j90.h: 90: static near unsigned char LC
      +                          DDATA2 @ 0xFBD;
   168                           ;pic18f85j90.h: 91: static near unsigned char LC
      +                          DDATA1 @ 0xFBC;
   169                           ;pic18f85j90.h: 92: static near unsigned char LC
      +                          DDATAý0 @ 0xFBB;
   170                           ;pic18f85j90.h: 93: static near unsigned char LC
      +                          DSE5 @ 0xFBA;
   171                           ;pic18f85j90.h: 94: static near unsigned char LC
      +                          DSE4 @ 0xFB9;
   172                           ;pic18f85j90.h: 95: static near unsigned char LC
      +                          DSE3 @ 0xFB8;
   173                           ;pic18f85j90.h: 96: static near unsigned char LC
      +                      ý    DSE2 @ 0xFB7;
   174                           ;pic18f85j90.h: 97: static near unsigned char LC
      +                          DSE1 @ 0xFB6;
   175                           ;pic18f85j90.h: 98: static volatile near unsigne
      +                          d char CVRCON @ 0xFB5;
   176                           ;pic18f85j90.h: 99: static volatile near unsigne
      +                          d char CMCON @ 0xFB4;
   177                           ;pic18f85j90.h: 100: static volatile near unsign
     ý +                          ed char TMR3H @ 0xFB3;
   178                           ;pic18f85j90.h: 101: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   179                           ;pic18f85j90.h: 103: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   180                           ;pic18f85j90.h: 104: static near unsigned char T
      +                          3CON @ 0xFB1;
   181                           ;pic18f85j90.h: 105: sýtatic near unsigned char S
      +                          PBRG1 @ 0xFAF;
   182                           ;pic18f85j90.h: 107: static near unsigned char S
      +                          PBRG @ 0xFAF;
   183                           ;pic18f85j90.h: 108: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   184                           ;pic18f85j90.h: 110: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   185                      ý     ;pic18f85j90.h: 111: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   186                           ;pic18f85j90.h: 113: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   187                           ;pic18f85j90.h: 114: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   188                           ;pic18f85j90.h: 116: static volatile near unsign
      +                          ed chaýr TXSTA @ 0xFAC;
   189                           ;pic18f85j90.h: 117: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   190                           ;pic18f85j90.h: 119: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   191                           ;pic18f85j90.h: 120: static volatile near unsign
      +                          ed char LCDPS @ 0xFAA;
   192                           ;pic18f85j90.h: 121: static near unsigned chýar L
      +                          CDSE0 @ 0xFA9;
   193                           ;pic18f85j90.h: 122: static volatile near unsign
      +                          ed char LCDCON @ 0xFA8;
   194                           ;pic18f85j90.h: 123: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   195                           ;pic18f85j90.h: 124: static volatile near unsign
      +                          ed char EECON1 @ 0xFA6;
   196                           ;pic18ê f85j90.h: 125: static near unsigned char I
      +                          PR3 @ 0xFA5;
   197                           ;pic18f85j90.h: 126: static volatile near unsign
      +                          ed char PIR3 @ 0xFA4;
   198        4text                        _StartRTcS:
   199  000000                     
   200                           ; _Index loaded to fsr2l
   201        4text  y   6ED9               	movwf	fsr2l,c
   202                           ;rtimer.c: 42: if (Index>1-1) asm("RESET");
   203        4text     -   50D9               	movf	fsr2l,w,c
   204        4text     /   A4D8               	btfss	status,2,c
   205        4text     f   00FF               	reset		;#
   206                           ;rtimer.c: 43: cSk[Index]=0;
   207        4text     -   50D9               	movf	fsr2l,w,c
   208        4text 
            1rbss  #                	addlw	_cSk
   209        4text     ,   6EE9               	movwf	fsr0l,c
   210        4text     +   6AEA               	clrf	fsr0h,c
   211        4text     ]   6AEF               	clrf	indf0,c
   212                           ;rtimer.c: 44: }
   213        4text     &   0C00               	retlw	0
   214        4text     ã                      __end_of_StartRTcS:
   215                           ;rtimer.c: 45: unsigned char RTcS(const unsigned
      +                           char Index)
   216                           ;rtimer.c: 46: {
   217        4text                           _RTcS:
   218  000000                     
   219                           ; _Index loaded to fsr2l
   220        4text     y   6ED9               	movwf	fsr2l,c
   221                           ;rtimer.c: 47: if (Index>1-1) asm("RESET");
   222        4text     -   50D9               	movf	fsr2l,w,c
   223        4text     /   A4D8               	btfss	status,2,c
   224        4text     k   00FF               	reset		;#
   225                           ;rtimer.c: 48: return cSk[Index];
   226        4text     -   50D9               	movf	fsr2l,w,c
   227        4text             1rbss  #                	addlw	_cSk
   228        4text      ,   6EE9               	movwf	fsr0l,c
   229        4text "    +   6AEA               	clrf	fsr0h,c
   230        4text $    -   50EF               	movf	indf0,w,c
   231        4text &    X   0012               	return	
   232                           ;rtimer.c: 49: }
   233        4text (    Ú                      __end_of_RTcS:
   234                           ;rtimer.c: 54: void StartRTdS(const unsigned cha
      +                          r Index)
   235                           ;rtimer.c: 55: {
   236        4text (                          _StartRTdS:
   237  000000                     
   238                           ; _Index loaded to fsr2l
   239        4text (    y   6ED9               	movwf	fsr2l,c
   240                           ;rtimer.c: 56: if (Index>9-1) asm("RESET");
   241        4text *    &   0E08               	movlw	8
   242        4text ,    -   64D9               	cpfsgt	fsr2l,c
   243        4text .    '   D001               	goto	l11
   244        4text 0    (   00FF               	reset		;#
   245        4text 2    c                      l11:
   246                           ;rtimer.c: 57: dSk[Index].cS=0;
   247        4text 2    -   50D9               	movf	fsr2l,w,c
   248        4text 4    .   24D9               	addwf	fsr2l,w,c
   249        4text 6            1rbss     #                	addlw	_dSk
   250        4text 8    ,   6EE9               	movwf	fsr0l,c
   251        4text :    +   6AEA               	clrf	fsr0h,c
   252        4text <    l   6AEF               	clrf	indf0,c
   253                           ;rtimer.c: 58: dSk[Index].dS=0;
   254        4text >    -   50D9               	movf	fsr2l,w,c
   255        4text @    .   24D9               	addwf	fsr2l,w,c
   256        4text B            1rbss     %                	addlw	_dSk+1
   257        4text D    ,   6EE9               	movwf	fsr0l,c
   258        4text F    +   6AEA               	clrf	fsr0h,c
   259        4text H    ]   6AEF               	clrf	indf0,c
   260                           ;rtimer.c: 59: }
   261        4text J    &   0C00               	retlw	0
   262        4text L    ã                      __end_of_StartRTdS:
   263                           ;rtimer.c: 60: unsigned char RTdS(const unsigned
      +                           char Index)
   264                           ;rtimer.c: 61: {
   265        4text L                          _RTdS:
   266  000000                     
   267                           ; _Index loaded to fsr2l
   268        4text L    y   6ED9               	movwf	fsr2l,c
   269                           ;rtimer.c: 62: if (Index>9-1) asm("RESET");
   270        4text N    &   0E08               	movlw	8
   271        4text P    -   64D9               	cpfsgt	fsr2l,c
   272        4text R    '   D001               	goto	l13
   273        4text T    (   00FF               	reset		;#
   274        4text V    h                      l13:
   275                           ;rtimer.c: 63: return dSk[Index].dS;
   276        4text V    -   50D9               	movf	fsr2l,w,c
   277        4text X    .   24D9               	addwf	fsr2l,w,c
   278        4text Z            1rbss     %                	addlw	_dSk+1
   279        4text \    ,   6EE9               	movwf	fsr0l,c
   280        4text ^    +   6AEA               	clrf	fsr0h,c
   281        4text `    -   50EF               	movf	indf0,w,c
   282        4text b    X   0012               	return	
   283                           ;rtimer.c: 64: }
   284        4text d    Ù                      __end_of_RTdS:
   285                           ;rtimer.c: 69: void StartRTS(const unsigned char
      +                           Index)
   286                           ;rtimer.c: 70: {
   287        4text d                          _StartRTS:
   288  000000                     
   289                           ; _Index loaded to fsr2l
   290        4text d    y   6ED9               	movwf	fsr2l,c
   291                           ;rtimer.c: 71: if (Index>3-1) asm("RESET");
   292        4text f    &   0E02               	movlw	2
   293        4text h    -   64D9               	cpfsgt	fsr2l,c
   294        4text j    '   D001               	goto	l15
   295        4text l    (   00FF               	reset		;#
   296        4text n    b                      l15:
   297                           ;rtimer.c: 72: Sk[Index].dS=0;
   298        4text n    -   50D9               	movf	fsr2l,w,c
   299        4text p    .   24D9               	addwf	fsr2l,w,c
   300        4text r            1rbss     "                	addlw	_Sk
   301        4text t    ,   6EE9               	movwf	fsr0l,c
   302        4text v    +   6AEA               	clrf	fsr0h,c
   303        4text x    j   6AEF               	clrf	indf0,c
   304                           ;rtimer.c: 73: Sk[Index].S=0;
   305        4text z    -   50D9               	movf	fsr2l,w,c
   306        4text |    .   24D9               	addwf	fsr2l,w,c
   307        4text ~            1rbss     $                	addlw	_Sk+1
   308        4text     ,   6EE9               	movwf	fsr0l,c
   309        4text     +   6AEA               	clrf	fsr0h,c
   310        4text     ]   6AEF               	clrf	indf0,c
   311                           ;rtimer.c: 74: }
   312        4text     &   0C00               	retlw	0
   313        4text     á                      __end_of_StartRTS:
   314                           ;rtimer.c: 75: unsigned char RTS(const unsigned 
      +                          char Index)
   315                           ;rtimer.c: 76: {
   316        4text                           _RTS:
   317  000000                     
   318                           ; _Index loaded to fsr2l
   319        4text     y   6ED9               	movwf	fsr2l,c
   320                           ;rtimer.c: 77: if (Index>3-1) asm("RESET");
   321        4text     &   0E02               	movlw	2
   322        4text     -   64D9               	cpfsgt	fsr2l,c
   323        4text     '   D001               	goto	l17
   324        4text     (   00FF               	reset		;#
   325        4text     f                      l17:
   326                           ;rtimer.c: 78: return Sk[Index].S;
   327        4text     -   50D9               	movf	fsr2l,w,c
   328        4text     .   24D9               	addwf	fsr2l,w,c
   329        4text             1rbss     $                	addlw	_Sk+1
   330        4text     ,   6EE9               	movwf	fsr0l,c
   331        4text     +   6AEA               	clrf	fsr0h,c
   332        4text     -   50EF               	movf	indf0,w,c
   333        4text     X   0012               	return	
   334                           ;rtimer.c: 79: }
   335        4text      Ø                      __end_of_RTS:
   336                           ;rtimer.c: 84: void StartRTM(const unsigned char
      +                           Index)
   337                           ;rtimer.c: 85: {
   338        4text                            _StartRTM:
   339  000000                     
   340                           ; _Index loaded to fsr2l
   341        4text      y   6ED9               	movwf	fsr2l,c
   342                           ;rtimer.c: 86: if (Index>4-1) asm("RESET");
   343        4text ¢    &   0E03               	movlw	3
   344        4text ¤    -   64D9               	cpfsgt	fsr2l,c
   345        4text ¦    '   D001               	goto	l19
   346        4text ¨    (   00FF               	reset		;#
   347        4text ª    a                      l19:
   348                           ;rtimer.c: 87: Mn[Index].S=0;
   349        4text ª    -   50D9               	movf	fsr2l,w,c
   350        4text ¬    .   24D9               	addwf	fsr2l,w,c
   351        4text ®            1rbss 
    "                	addlw	_Mn
   352        4text °    ,   6EE9               	movwf	fsr0l,c
   353        4text ²    +   6AEA               	clrf	fsr0h,c
   354        4text ´    j   6AEF               	clrf	indf0,c
   355                           ;rtimer.c: 88: Mn[Index].M=0;
   356        4text ¶    -   50D9               	movf	fsr2l,w,c
   357        4text ¸    .   24D9               	addwf	fsr2l,w,c
   358        4text º            1rbss     $                	addlw	_Mn+1
   359        4text ¼    ,   6EE9               	movwf	fsr0l,c
   360        4text ¾    +   6AEA               	clrf	fsr0h,c
   361        4text À    ]   6AEF               	clrf	indf0,c
   362                           ;rtimer.c: 89: }
   363        4text Â    &   0C00               	retlw	0
   364        4text Ä    á                      __end_of_StartRTM:
   365                           ;rtimer.c: 90: unsigned char RTM(const unsigned 
      +                          char Index)
   366                           ;rtimer.c: 91: {
   367        4text Ä                          _RTM:
   368  000000                     
   369                           ; _Index loaded to fsr2l
   370        4text Ä    y   6ED9               	movwf	fsr2l,c
   371                           ;rtimer.c: 92: if (Index>4-1) asm("RESET");
   372        4text Æ    &   0E03               	movlw	3
   373        4text È    -   64D9               	cpfsgt	fsr2l,c
   374        4text Ê    '   D001               	goto	l21
   375        4text Ì    (   00FF               	reset		;#
   376        4text Î    f                      l21:
   377                           ;rtimer.c: 93: return Mn[Index].M;
   378        4text Î    -   50D9               	movf	fsr2l,w,c
   379        4text Ð    .   24D9               	addwf	fsr2l,w,c
   380        4text Ò            1rbss     $                	addlw	_Mn+1
   381        4text Ô    ,   6EE9               	movwf	fsr0l,c
   382        4text Ö    +   6AEA               	clrf	fsr0h,c
   383        4text Ø    -   50EF               	movf	indf0,w,c
   384        4text Ú    X   0012               	return	
   385                           ;rtimer.c: 94: }
   386        4text Ü    Ý                      __end_of_RTM:
   387                           ;rtimer.c: 95: unsigned char RTMs(const unsigned
      +                           char Index)
   388                           ;rtimer.c: 96: {
   389        4text Ü                          _RTMs:
   390  000000                     
   391                           ; _Index loaded to fsr2l
   392        4text Ü    y   6ED9               	movwf	fsr2l,c
   393                           ;rtimer.c: 97: if (Index>4-1) asm("RESET");
   394        4text Þ    &   0E03               	movlw	3
   395        4text à    -   64D9               	cpfsgt	fsr2l,c
   396        4text â    '   D001               	goto	l23
   397        4text ä    (   00FF               	reset		;#
   398        4text æ    f                      l23:
   399                           ;rtimer.c: 98: return Mn[Index].S;
   400        4text æ    -   50D9               	movf	fsr2l,w,c
   401        4text è    .   24D9               	addwf	fsr2l,w,c
   402        4text ê            1rbss 
    "                	addlw	_Mn
   403        4text ì    ,   6EE9               	movwf	fsr0l,c
   404        4text î    +   6AEA               	clrf	fsr0h,c
   405        4text ð    -   50EF               	movf	indf0,w,c
   406        4text ò    X   0012               	return	
   407                           ;rtimer.c: 99: }
   408        4text ô    ¥                      __end_of_RTMs:
   409                           ;rtimer.c: 119: void IncRTimer(void)
   410                           ;rtimer.c: 120: {
   411        4text ô                          _IncRTimer:
   412  000000                     
   413                           ;rtimer.c: 122: unsigned char i;
   414        4text ô    +   6AD9               	clrf	fsr2l,c
   415        4text ö    l                      l25:
   416                           ;rtimer.c: 129: if(cSk[i]<255) cSk[i]++;
   417        4text ö    -   50D9               	movf	fsr2l,w,c
   418        4text ø            1rbss  #                	addlw	_cSk
   419        4text ú    ,   6EE9               	movwf	fsr0l,c
   420        4text ü    +   6AEA               	clrf	fsr0h,c
   421        4text þ    -   50EF               	movf	indf0,w,c
   422        4text          n   1temp  &                	movwf	btemp,c
   423        4text         (   1temp  '                	incf	btemp,w,c
   424        4text    %   E005               	bz	l28
   425        4text    -   50D9               	movf	fsr2l,w,c
   426        4text            1rbss  #                	addlw	_cSk
   427        4text 
   ,   6EE9               	movwf	fsr0l,c
   428        4text    +   6AEA               	clrf	fsr0h,c
   429        4text    -   2AEF               	incf	indf0,f,c
   430        4text    "                      l28:
   431        4text    -   2AD9               	incf	fsr2l,f,c
   432        4text    &   0E00               	movlw	0
   433        4text    -   64D9               	cpfsgt	fsr2l,c
   434        4text    i   D7EF               	goto	l25
   435                           ;rtimer.c: 135: for(i=0;i<9;i++)
   436        4text    +   6AD9               	clrf	fsr2l,c
   437        4text    U                      l29:
   438                           ;rtimer.c: 136: {
   439        4text    -   50D9               	movf	fsr2l,w,c
   440        4text    .   24D9               	addwf	fsr2l,w,c
   441        4text            1rbss     #                	addlw	_dSk
   442        4text     ,   6EE9               	movwf	fsr0l,c
   443        4text "   +   6AEA               	clrf	fsr0h,c
   444        4text $   n   2AEF               	incf	indf0,f,c
   445                           ;rtimer.c: 138: if(dSk[i].cS>9)
   446        4text &   -   50D9               	movf	fsr2l,w,c
   447        4text (   .   24D9               	addwf	fsr2l,w,c
   448        4text *           1rbss     #                	addlw	_dSk
   449        4text ,   ,   6EE9               	movwf	fsr0l,c
   450        4text .   +   6AEA               	clrf	fsr0h,c
   451        4text 0   -   50EF               	movf	indf0,w,c
   452        4text 2        n   1temp  &                	movwf	btemp,c
   453        4text 4   '   0E0A               	movlw	10
   454        4text 6        \   1temp  (                	subwf	btemp,w,c
   455        4text 8   Y   E315               	bnc	l32
   456                           ;rtimer.c: 139: {
   457        4text :   -   50D9               	movf	fsr2l,w,c
   458        4text <   .   24D9               	addwf	fsr2l,w,c
   459        4text >           1rbss     #                	addlw	_dSk
   460        4text @   ,   6EE9               	movwf	fsr0l,c
   461        4text B   +   6AEA               	clrf	fsr0h,c
   462        4text D   {   6AEF               	clrf	indf0,c
   463                           ;rtimer.c: 141: if(dSk[i].dS<255) dSk[i].dS++;
   464        4text F   -   50D9               	movf	fsr2l,w,c
   465        4text H   .   24D9               	addwf	fsr2l,w,c
   466        4text J           1rbss     %                	addlw	_dSk+1
   467        4text L   ,   6EE9               	movwf	fsr0l,c
   468        4text N   +   6AEA               	clrf	fsr0h,c
   469        4text P   -   50EF               	movf	indf0,w,c
   470        4text R        n   1temp  &                	movwf	btemp,c
   471        4text T        (   1temp  '                	incf	btemp,w,c
   472        4text V   %   E006               	bz	l32
   473        4text X   -   50D9               	movf	fsr2l,w,c
   474        4text Z   .   24D9               	addwf	fsr2l,w,c
   475        4text \           1rbss     %                	addlw	_dSk+1
   476        4text ^   ,   6EE9               	movwf	fsr0l,c
   477        4text `   +   6AEA               	clrf	fsr0h,c
   478        4text b   -   2AEF               	incf	indf0,f,c
   479        4text d   "                      l32:
   480        4text d   -   2AD9               	incf	fsr2l,f,c
   481        4text f   &   0E08               	movlw	8
   482        4text h   -   64D9               	cpfsgt	fsr2l,c
   483        4text j   Z   D7D7               	goto	l29
   484                           ;rtimer.c: 142: }
   485        4text l        *   1rbss     t                	incf	_CommRT,f,c	;volatile
   486                           ;rtimer.c: 149: if(CommRT.cS>9)
   487        4text n   &   0E09               	movlw	9
   488        4text p        d   1rbss     3                	cpfsgt	_CommRT,c	;volatile
   489        4text r   Y   0C09               	retlw	9
   490                           ;rtimer.c: 150: {
   491        4text t        j   1rbss     o                	clrf	_CommRT,c	;volatile
   492                           ;rtimer.c: 152: CommRT.dS++;
   493        4text v        *   1rbss     w                	incf	_CommRT+1,f,c	;volatile
   494                           ;rtimer.c: 157: for(i=0;i<3;i++)
   495        4text x   +   6AD9               	clrf	fsr2l,c
   496        4text z   U                      l35:
   497                           ;rtimer.c: 158: {
   498        4text z   -   50D9               	movf	fsr2l,w,c
   499        4text |   .   24D9               	addwf	fsr2l,w,c
   500        4text ~           1rbss     "                	addlw	_Sk
   501        4text    ,   6EE9               	movwf	fsr0l,c
   502        4text    +   6AEA               	clrf	fsr0h,c
   503        4text    m   2AEF               	incf	indf0,f,c
   504                           ;rtimer.c: 160: if(Sk[i].dS>9)
   505        4text    -   50D9               	movf	fsr2l,w,c
   506        4text    .   24D9               	addwf	fsr2l,w,c
   507        4text            1rbss     "                	addlw	_Sk
   508        4text    ,   6EE9               	movwf	fsr0l,c
   509        4text    +   6AEA               	clrf	fsr0h,c
   510        4text    -   50EF               	movf	indf0,w,c
   511        4text         n   1temp  &                	movwf	btemp,c
   512        4text    '   0E0A               	movlw	10
   513        4text         \   1temp  (                	subwf	btemp,w,c
   514        4text    Y   E315               	bnc	l38
   515                           ;rtimer.c: 161: {
   516        4text    -   50D9               	movf	fsr2l,w,c
   517        4text    .   24D9               	addwf	fsr2l,w,c
   518        4text            1rbss     "                	addlw	_Sk
   519        4text     ,   6EE9               	movwf	fsr0l,c
   520        4text ¢   +   6AEA               	clrf	fsr0h,c
   521        4text ¤   w   6AEF               	clrf	indf0,c
   522                           ;rtimer.c: 163: if(Sk[i].S<255) Sk[i].S++;
   523        4text ¦   -   50D9               	movf	fsr2l,w,c
   524        4text ¨   .   24D9               	addwf	fsr2l,w,c
   525        4text ª           1rbss     $                	addlw	_Sk+1
   526        4text ¬   ,   6EE9               	movwf	fsr0l,c
   527        4text ®   +   6AEA               	clrf	fsr0h,c
   528        4text °   -   50EF               	movf	indf0,w,c
   529        4text ²        n   1temp  &                	movwf	btemp,c
   530        4text ´        (   1temp  '                	incf	btemp,w,c
   531        4text ¶   %   E006               	bz	l38
   532        4text ¸   -   50D9               	movf	fsr2l,w,c
   533        4text º   .   24D9               	addwf	fsr2l,w,c
   534        4text ¼           1rbss     $                	addlw	_Sk+1
   535        4text ¾   ,   6EE9               	movwf	fsr0l,c
   536        4text À   +   6AEA               	clrf	fsr0h,c
   537        4text Â   -   2AEF               	incf	indf0,f,c
   538        4text Ä   "                      l38:
   539        4text Ä   -   2AD9               	incf	fsr2l,f,c
   540        4text Æ   &   0E02               	movlw	2
   541        4text È   -   64D9               	cpfsgt	fsr2l,c
   542        4text Ê   Z   D7D7               	goto	l35
   543                           ;rtimer.c: 164: }
   544        4text Ì   &   0E09               	movlw	9
   545        4text Î        d   1rbss     5                	cpfsgt	_CommRT+1,c	;volatile
   546        4text Ð   Y   0C09               	retlw	9
   547                           ;rtimer.c: 169: {
   548        4text Ò        j   1rbss     p                	clrf	_CommRT+1,c	;volatile
   549                           ;rtimer.c: 171: CommRT.S++;
   550        4text Ô        *   1rbss     w                	incf	_CommRT+2,f,c	;volatile
   551                           ;rtimer.c: 176: for(i=0;i<4;i++)
   552        4text Ö   +   6AD9               	clrf	fsr2l,c
   553        4text Ø   U                      l41:
   554                           ;rtimer.c: 177: {
   555        4text Ø   -   50D9               	movf	fsr2l,w,c
   556        4text Ú   .   24D9               	addwf	fsr2l,w,c
   557        4text Ü           1rbss 
    "                	addlw	_Mn
   558        4text Þ   ,   6EE9               	movwf	fsr0l,c
   559        4text à   +   6AEA               	clrf	fsr0h,c
   560        4text â   m   2AEF               	incf	indf0,f,c
   561                           ;rtimer.c: 179: if(Mn[i].S>59)
   562        4text ä   -   50D9               	movf	fsr2l,w,c
   563        4text æ   .   24D9               	addwf	fsr2l,w,c
   564        4text è           1rbss 
    "                	addlw	_Mn
   565        4text ê   ,   6EE9               	movwf	fsr0l,c
   566        4text ì   +   6AEA               	clrf	fsr0h,c
   567        4text î   -   50EF               	movf	indf0,w,c
   568        4text ð        n   1temp  &                	movwf	btemp,c
   569        4text ò   '   0E3C               	movlw	60
   570        4text ô        \   1temp  (                	subwf	btemp,w,c
   571        4text ö   Y   E315               	bnc	l44
   572                           ;rtimer.c: 180: {
   573        4text ø   -   50D9               	movf	fsr2l,w,c
   574        4text ú   .   24D9               	addwf	fsr2l,w,c
   575        4text ü           1rbss 
    "                	addlw	_Mn
   576        4text þ   ,   6EE9               	movwf	fsr0l,c
   577        4text     +   6AEA               	clrf	fsr0h,c
   578        4text    w   6AEF               	clrf	indf0,c
   579                           ;rtimer.c: 182: if(Mn[i].M<255) Mn[i].M++;
   580        4text    -   50D9               	movf	fsr2l,w,c
   581        4text    .   24D9               	addwf	fsr2l,w,c
   582        4text            1rbss     $                	addlw	_Mn+1
   583        4text 
   ,   6EE9               	movwf	fsr0l,c
   584        4text    +   6AEA               	clrf	fsr0h,c
   585        4text    -   50EF               	movf	indf0,w,c
   586        4text         n   1temp  &                	movwf	btemp,c
   587        4text         (   1temp  '                	incf	btemp,w,c
   588        4text    %   E006               	bz	l44
   589        4text    -   50D9               	movf	fsr2l,w,c
   590        4text    .   24D9               	addwf	fsr2l,w,c
   591        4text            1rbss     $                	addlw	_Mn+1
   592        4text    ,   6EE9               	movwf	fsr0l,c
   593        4text    +   6AEA               	clrf	fsr0h,c
   594        4text     -   2AEF               	incf	indf0,f,c
   595        4text "   "                      l44:
   596        4text "   -   2AD9               	incf	fsr2l,f,c
   597        4text $   &   0E03               	movlw	3
   598        4text &   -   64D9               	cpfsgt	fsr2l,c
   599        4text (   Z   D7D7               	goto	l41
   600                           ;rtimer.c: 183: }
   601        4text *   '   0E3B               	movlw	59
   602        4text ,        d   1rbss     5                	cpfsgt	_CommRT+2,c	;volatile
   603        4text .   Z   0C3B               	retlw	59
   604                           ;rtimer.c: 188: {
   605        4text 0        j   1rbss     f                	clrf	_CommRT+2,c	;volatile
   606                           ;rtimer.c: 204: }
   607        4text 2   &   0012               	return	
   608        4text 4   ý                     __end_of_IncRTimer:
   609  000000                     
   610  000000                     
   611  000000                     
   612  000000                     
   613  000000                     
   614  000000                     
   615  000000                     
   616  000000                     
   617  000000                     
   618  000000                     
   619  000000                     
   620  000000                     
   621  000000                     
ý   622  000000                     
   623  000000                     
   624  000000                     
   625  000000                     
   626  000000                     
   627  000000                     
   628  000000                     
   629  000000                     
   630  000000                     
   631  000000                     
   632  000000                     
   633  000000                     
   634  000000                     
   635  000000                     
   63ý6  000000                     
   637  000000                     
   638  000000                     
   639  000000                     
   640  000000                     
   641  000000                     
   642  000000                     
   643  000000                     
   644  000000                     
   645  000000                     
   646  000000                     
   647  000000                     
   648  000000                     
   649  000000                     
   650  00ý0000                     
   651  000000                     
   652  000000                     
   653  000000                     
   654  000000                     
   655  000000                     
   656  000000                     
   657  000000                     
   658  000000                     
   659  000000                     
   660  000000                     
   661  000000                     
   662  000000                     
   663  000000                     
   664  000000 ý                    
   665  000000                     
   666  000000                     
   667  000000                     
   668  000000                     
   669  000000                     
   670  000000                     
   671  000000                     
   672  000000                     
   673  000000                     
   674  000000                     
   675  000000                     
   676  000000                     
   677  000000                     
   678  000000      ý               
   679  000000                     
   680  000000                     
   681  000000                     
   682  000000                     
   683  000000                     
   684  000000                     
   685  000000                     
   686  000000                     
   687  000000                     
   688  000000                     
   689  000000                     
   690  000000                     
   691  000000                     
   692  000000           ý          
   693  000000                     
   694  000000                     
   695  000000                     
   696  000000                     
   697  000000                     
   698  000000                     
   699  000000                     
   700  000000                     
   701  000000                     
   702  000000                     
   703  000000                     
   704  000000                     
   705  000000                     
   706  000000                ý     
   707  000000                     
   708  000000                     
   709  000000                     
   710  000000                     
   711  000000                     
   712  000000                     
   713  000000                     
   714  000000                     
   715  000000                     
   716  000000                     
   717  000000                     
   718  000000                     
   719  000000                     
   720  000000                     ý
   721  000000                     
   722  000000                     
   723  000000                     
   724  000000                     
   725  000000                     
   726  000000                     
   727  000000                     
   728  000000                     
   729  000000                     
   730  000000                     
   731  000000                     
   732  000000                     
   733  000000                     
   734  000000                     
   7ý35  000000                     
   736  000000                     
   737  000000                     
   738  000000                     
   739  000000                     
   740  000000                     
   741  000000                     
   742  000000                     
   743  000000                     
   744  000000                     
   745  000000                     
   746  000000                     
   747  000000                     
   748  000000                     
   749  0ý00000                     
   750  000000                     
   751  000000                     
   752  000000                     
   753  000000                     
   754  000000                     
   755  000000                     
   756  000000                     
   757  000000                     
   758  000000                     
   759  000000                     
   760  000000                     
   761  000000                     
   762  000000                     
   763  000000ý                     
   764  000000                     
   765  000000                     
   766  000000                     
   767  000000                     
   768  000000                     
   769  000000                     
   770  000000                     
   771  000000                     
   772  000000                     
   773  000000                     
   774  000000                     
   775  000000                     
   776  000000                     
   777  000000     ý                
   778  000000                     
   779  000000                     
   780  000000                     
   781  000000                     
   782  000000                     
   783  000000                     
   784  000000                     
   785  000000                     
   786  000000                     
   787  000000                     
   788  000000                     
   789  000000                     
   790  000000                     
   791  000000          ý           
   792  000000                     
   793  000000                     
   794  000000                     
   795  000000                     
   796  000000                     
   797  000000                     
   798  000000                     
   799  000000                     
   800  000000                     
   801  000000                     
   802  000000                     
   803  000000                     
   804  000000                     
   805  000000               ý      
   806  000000                     
   807  000000                     
   808  000000                     
   809  000000                     
   810  000000                     
   811  000000                     
   812  000000                     
   813  000000                     
   814  000000                     
   815  000000                     
   816  000000                     
   817  000000                     
   818  000000                     
   819  000000                    ý 
   820  000000                     
   821  000000                     
   822  000000                     
   823  000000                     
   824  000000                     
   825  000000                     
   826  000000                     
   827  000000                     
   828  000000                     
   829  000000                     
   830  000000                     
   831  000000                     
   832  000000                     
   833  000000                     
   ý834  000000                     
   835  000000                     
   836  000000                     
   837  000000                     
   838  000000                     
   839  000000                     
   840  000000                     
   841  000000                     
   842  000000                     
   843  000000                     
   844  000000                     
   845  000000                     
   846  000000                     
   847  000000                     
   848  ý000000                     
   849  000000                     
   850  000000                     
   851  000000                     
   852  000000                     
   853  000000                     
   854  000000                     
   855  000000                     
   856  000000                     
   857  000000                     
   858  000000                     
   859  000000                     
   860  000000                     
   861  000000                     
   862  00000ý0                     
   863  000000                     
   864  000000                     
   865  000000                     
   866  000000                     
   867  000000                     
   868  000000                     
   869  000000                     
   870  000000                     
   871  000000                     
   872  000000                     
   873  000000                     
   874  000000                     
   875  000000                     
   876  000000    ý                 
   877  000000                     
   878  000000                     
   879  000000                     
   880  000000                     
   881  000000                     
   882  000000                     
   883  000000                     
   884  000000                     
   885  000000                     
   886  000000                     
   887  000000                     
   888  000000                     
   889  000000                     
   890  000000         ý            
   891  000000                     
   892  000000                     
   893  000000                     
   894  000000                     
   895  000000                     
   896  000000                     
   897  000000                     
   898  000000                     
   899  000000                     
   900  000000                     
   901  000000                     
   902  000000                     
   903  000000                     
   904  000000              ý       
   905  000000                     
   906  000000                     
   907  000000                     
   908  000000                     
   909  000000                     
   910  000000                     
   911  000000                     
   912  000000                     
   913  000000                     
   914  000000                     
   915  000000                     
   916  000000                     
   917  000000                     
   918  000000                   ý  
   919  000000                     
   920  000000                     
   921  000000                     
   922  000000                     
   923  000000                     
   924  000000                     
   925  000000                     
   926  000000                     
   927  000000                     
   928  000000                     
   929  000000                     
   930  000000                     
   931  000000                     
   932  000000                     
  ý 933  000000                     
   934  000000                     
   935  000000                     
   936  000000                     
   937  000000                     
   938  000000                     
   939  000000                     
   940  000000                     
   941  000000                     
   942  000000                     
   943  000000                     
   944  000000                     
   945  000000                     
   946  000000                     
   947 ý 000000                     
   948  000000                     
   949  000000                     
   950  000000                     
   951  000000                     
   952  000000                     
   953  000000                     
   954  000000                     
   955  000000                     
   956  000000                     
   957  000000                     
   958  000000                     
   959  000000                     
   960  000000                     
   961  0000ý00                     
   962  000000                     
   963  000000                     
   964  000000                     
   965  000000                     
   966  000000                     
   967  000000                     
   968  000000                     
   969  000000                     
   970  000000                     
   971  000000                     
   972  000000                     
   973  000000                     
   974  000000                     
   975  000000   ý                  
   976  000000                     
   977  000000                     
   978  000000                     
   979  000000                     
   980  000000                     
   981  000000                     
   982  000000                     
   983  000000                     
   984  000000                     
   985  000000                     
   986  000000                     
   987  000000                     
   988  000000                     
   989  000000        ý             
   990  000000                     
   991  000000                     
   992  000000                     
   993  000000                     
   994  000000                     
   995  000000                     
   996  000000                     
   997  000000                     
   998  000000                     
   999  000000                     
  1000  000000                     
  1001  000000                     
  1002  000000                     
  1003  000000             ý        
  1004  000000                     
  1005  000000                     
  1006  000000                     
  1007  000000                     
  1008  000000                     
  1009  000000                     
  1010  000000                     
  1011  000000                     
  1012  000000                     
  1013  000000                     
  1014  000000                     
  1015  000000                     
  1016  000000                     
  1017  000000                  ý   
  1018  000000                     
  1019  000000                     
  1020  000000                     
  1021  000000                     
  1022  000000                     
  1023  000000                     
  1024  000000                     
  1025  000000                     
  1026  000000                     
  1027  000000                     
  1028  000000                     
  1029  000000                     
  1030  000000                     
  1031  000000                     
 ý 1032  000000                     
  1033  000000                     
  1034  000000                     
  1035  000000                     
  1036  000000                     
  1037  000000                     
  1038  000000                     
  1039  000000                     
  1040  000000                     
  1041  000000                     
  1042  000000                     
  1043  000000                     
  1044  000000                     
  1045  000000                     
  1046ý  000000                     
  1047  000000                     
  1048  000000                     
  1049  000000                     
  1050  000000                     
  1051  000000                     
  1052  000000                     
  1053  000000                     
  1054  000000                     
  1055  000000                     
  1056  000000                     
  1057  000000                     
  1058  000000                     
  1059  000000                     
  1060  000ý000                     
  1061  000000                     
  1062  000000                     
  1063  000000                     
  1064  000000                     
  1065  000000                     
  1066  000000                     
  1067  000000                     
  1068  000000                     
  1069  000000                     
  1070  000000                     
  1071  000000                     
  1072  000000                     
  1073  000000                     
  1074  000000  ý                   
  1075  000000                     
  1076  000000                     
  1077  000000                     
  1078  000000                     
  1079  000000                     
  1080  000000                     
  1081  000000                     
  1082  000000                     
  1083  000000                     
  1084  000000                     
  1085  000000                     
  1086  000000                     
  1087  000000                     
  1088  000000       ý              
  1089  000000                     
  1090  000000                     
  1091  000000                     
  1092  000000                     
  1093  000000                     
  1094  000000                     
  1095  000000                     
  1096  000000                     
  1097  000000                     
  1098  000000                     
  1099  000000                     
  1100  000000                     
  1101  000000                     
  1102  000000            ý         
  1103  000000                     
  1104  000000                     
  1105  000000                     
  1106  000000                     
  1107  000000                     
  1108  000000                     
  1109  000000                     
  1110  000000                     
  1111  000000                     
  1112  000000                     
  1113  000000                     
  1114  000000                     
  1115  000000                     
  1116  000000                 ý    
  1117  000000                     
  1118  000000                     
  1119  000000                     
  1120  000000                     
  1121  000000                     
  1122  000000                     
  1123  000000                     
  1124  000000                     
  1125  000000                     
  1126  000000                     
  1127  000000                     
  1128  000000                     
  1129  000000                     
  1130  000000                     
ý  1131  000000                     
  1132  000000                     
  1133  000000                     
  1134  000000                     
  1135  000000                     
  1136  000000                     
  1137  000000                     
  1138  000000                     
  1139  000000                     
  1140  000000                     
  1141  000000                     
  1142  000000                     
  1143  000000                     
  1144  000000                     
  114ý5  000000                     
  1146  000000                     
  1147  000000                     
  1148  000000                     
  1149  000000                     
  1150  000000                     
  1151  000000                     
  1152  000000                     
  1153  000000                     
  1154  000000                     
  1155  000000                     
  1156  000000                     
  1157  000000                     
  1158  000000                     
  1159  00ý0000                     
  1160  000000                     
  1161  000000                     
  1162  000000                     
  1163  000000                     
  1164  000000                     
  1165  000000                     
  1166  000000                     
  1167  000000                     
  1168  000000                     
  1169  000000                     
  1170  000000                     
  1171  000000                     
  1172  000000                     
  1173  000000 ý                    
  1174  000000                     
  1175  000000                     
  1176  000000                     
  1177  000000                     
  1178  000000                     
  1179  000000                     
  1180  000000                     
  1181  000000                     
  1182  000000                     
  1183  000000                     
  1184  000000                     
  1185  000000                     
  1186  000000                     
  1187  000000      ý               
  1188  000000                     
  1189  000000                     
  1190  000000                     
  1191  000000                     
  1192  000000                     
  1193  000000                     
  1194  000000                     
  1195  000000                     
  1196  000000                     
  1197  000000                     
  1198  000000                     
  1199  000000                     
  1200  000000                     
  1201  000000           ý          
  1202  000000                     
  1203  000000                     
  1204  000000                     
  1205  000000                     
  1206  000000                     
  1207  000000                     
  1208  000000                     
  1209  000000                     
  1210  000000                     
  1211  000000                     
  1212  000000                     
  1213  000000                     
  1214  000000                     
  1215  000000                ý     
  1216  000000                     
  1217  000000                     
  1218  000000                     
  1219  000000                     
  1220  000000                     
  1221  000000                     
  1222  000000                     
  1223  000000                     
  1224  000000                     
  1225  000000                     
  1226  000000                     
  1227  000000                     
  1228  000000                     
  1229  000000                     ý
  1230  000000                     
  1231  000000                     
  1232  000000                     
  1233  000000                     
  1234  000000                     
  1235  000000                     
  1236  000000                     
  1237  000000                     
  1238  000000                     
  1239  000000                     
  1240  000000                     
  1241  000000                     
  1242  000000                     
  1243  000000                     
  12ý44  000000                     
  1245  000000                     
  1246  000000                     
  1247  000000                     
  1248  000000                     
  1249  000000                     
  1250  000000                     
  1251  000000                     
  1252  000000                     
  1253  000000                     
  1254  000000                     
  1255  000000                     
  1256  000000                     
  1257  000000                     
  1258  0ý00000                     
  1259  000000                     
  1260  000000                     
  1261  000000                     
  1262  000000                     
  1263  000000                     
  1264  000000                     
  1265  000000                     
  1266  000000                     
  1267  000000                     
  1268  000000                     
  1269  000000                     
  1270  000000                     
  1271  000000                     
  1272  000000ý                     
  1273  000000                     
  1274  000000                     
  1275  000000                     
  1276  000000                     
  1277  000000                     
  1278  000000                     
  1279  000000                     
  1280  000000                     
  1281  000000                     
  1282  000000                     
  1283  000000                     
  1284  000000                     
  1285  000000                     
  1286  000000     ý                
  1287  000000                     
  1288  000000                     
  1289  000000                     
  1290  000000                     
  1291  000000                     
  1292  000000                     
  1293  000000                     
  1294  000000                     
  1295  000000                     
  1296  000000                     
  1297  000000                     
  1298  000000                     
  1299  000000                     
  1300  000000          ý           
  1301  000000                     
  1302  000000                     
  1303  000000                     
  1304  000000                     
  1305  000000                     
  1306  000000                     
  1307  000000                     
  1308  000000                     
  1309  000000                     
  1310  000000                     
  1311  000000                     
  1312  000000                     
  1313  000000                     
  1314  000000               ý      
  1315  000000                     
  1316  000000                     
  1317  000000                     
  1318  000000                     
  1319  000000                     
  1320  000000                     
  1321  000000                     
  1322  000000                     
  1323  000000                     
  1324  000000                     
  1325  000000                     
  1326  000000                     
  1327  000000                     
  1328  000000                    ý 
  1329  000000                     
  1330  000000                     
  1331  000000                     
  1332  000000                     
  1333  000000                     
  1334  000000                     
  1335  000000                     
  1336  000000                     
  1337  000000                     
  1338  000000                     
  1339  000000                     
  1340  000000                     
  1341  000000                     
  1342  000000                     
  1ý343  000000                     
  1344  000000                     
  1345  000000                     
  1346  000000                     
  1347  000000                     
  1348  000000                     
  1349  000000                     
  1350  000000                     
  1351  000000                     
  1352  000000                     
  1353  000000                     
  1354  000000                     
  1355  000000                     
  1356  000000                     
  1357  ý000000                     
  1358  000000                     
  1359  000000                     
  1360  000000                     
  1361  000000                     
  1362  000000                     
  1363  000000                     
  1364  000000                     
  1365  000000                     
  1366  000000                     
  1367  000000                     
  1368  000000                     
  1369  000000                     
  1370  000000                     
  1371  000000                     
  1372  000000                     
  1373  000000                     
  1374  000000                     
  1375  000000                     
  1376  000000                     
  1377  000000                     
  1378  000000                     
  1379  000000                     
  1380                           
  1381                           	psect	rbss
  1382        4rbss                        _cSk:
   1383        4rbss                       	ds	1
  1384  000000                     
  1385  000000                     
  1386  000000                     
  1387  000000                     
  1388  000000                     
  1389  000000                     
  1390  000000                     
  1391        4rbss                        _CommRT:
   1392        4rbss  #                      	ds	3
  1393        4rbss                        _Sk:
   1394        4rbss  #                      	ds	6
  1395        4rbss                        _Mn:
   1396        4rbss  #                      	ds	8
  1397        4rbss                        _dSk:
   1398        4rbss  s                      	ds	18
  1399                           
  1400                           	psect	temp
  1401        4temp                        btemp:
   1402        4temp  ©                     	ds	1
  1403                           indf0	equ	0xFEF
  1404                           fsr0h	equ	0xFEA
  1405                           fsr0l	equ	0xFE9
  1406                           fsr2l	equ	0xFD9
  1407                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Fri Nov 21 09:58:02 2014

               l11       4text 2                      l21       4text Î                      l13       4text V       
               l23       4text æ                      l15       4text n                      l32       4text d      
               l41       4text Ø                     l25       4text ö                      l17       4text        
               l35       4text z                     l19       4text ª                      l44       4text "      
               l28       4text                      l29       4text                      l38       4text Ä      
               _Mn       4rbss 
                      _Sk       4rbss                 _StartRTM       4text         
         _StartRTS       4text d                     _RTM       4text Ä                     _RTS       4text        
              _cSk       4rbss                   _dSk       4rbss                _StartRTcS       4text     
        _StartRTdS       4text (       __end_of_StartRTcS       4text        __end_of_StartRTdS       4text L       
             _RTMs       4text Ü                    _RTcS       4text                     _RTdS       4text L       
             fsr0h 000FEA               indf0 000FEF               fsr0l 000FE9  
             fsr2l 000FD9               btemp       4temp            used_btemp0       4 used_btemp0  1   
            status 000FD8            __Lparam       4 __Lparam      __end_of_StartRTM       4text Ä       
 __end_of_StartRTS       4text                  __ramtop       4 __ramtop          __end_of_RTMs       4text ô       
     __end_of_RTcS       4text (            __end_of_RTdS       4text d                  _CommRT       4rbss        
      __end_of_RTM       4text Ü             __end_of_RTS       4text                 _IncRTimer       4text ô       
__end_of_IncRTimer       4text 4      
   