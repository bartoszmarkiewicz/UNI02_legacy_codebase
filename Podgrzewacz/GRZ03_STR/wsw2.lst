

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Wed Jun 11 12:30:10 2014


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	const,global,class=CODE,delta=1
     5                           	psect	bigdata,global,class=BIGRAM,space=1,delta
      +                          =1
     6                           	psect	ibigdata,global,class=CODE,delta=1
     7                           	psect	rbit,global,bit,common,class=COMRAM,space
      +                          =1,delta=1
     8                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     9                           	psect	bss,global,class=RAM,space=1,delta=1
    10                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     
   101                           
   102                           	psect	text
   103                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   104                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   105                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   106                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   107                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   108                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   109                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   110                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   111                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   112                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   113                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   114                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   115                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   116                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   117                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   118                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   119                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   120                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   121                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   122                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   123                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   124                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   125                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   126                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   127                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   128                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   129                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   130                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   131                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   132                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   133                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   134                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   135                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   136                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   137                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   138                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   139                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   140                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   141                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   142                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   143                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   144                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   145                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   146                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   147                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   148                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   149                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   150                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   151                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   152                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   153                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   154                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   155                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   156                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   157                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   158                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   159                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   160                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   161                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   162                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   163                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   164                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   165                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   166                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   167                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   168                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   169                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   170                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   171                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   172                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   173                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   174                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   175                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   176                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   177                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   178                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   179                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   180                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   181                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   182                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   183                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   184                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   185                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   186                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   187                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   188                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   189                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   190                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   191                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   192                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   193                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   194                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   195                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   196                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   197                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   198                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   199                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   200                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   201                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   202                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   203  004270                     _InitWsw:
   204                           ;       param _nrpoz assigned to ?_ResetPoz+0
   205  000000                     _ResetPoz$nrpoz	set	?_ResetPoz
   206                           ;       param _nrpoz assigned to ?_SetPoz+0
   207  000000                     _SetPoz$nrpoz	set	?_SetPoz
   208                           ;       param _nrpoz assigned to ?_GetPoz+0
   209  000000                     _GetPoz$nrpoz	set	?_GetPoz
   210                           ;       param _mask assigned to ?_SetStatus+4
   211  000000                     _SetStatus$mask	set	?_SetStatus+4
   212                           ;       param _wst assigned to ?_SetStatus+2
   213  000000                     _SetStatus$wst	set	?_SetStatus+2
   214                           ;       param _wData assigned to ?_SetStatus+0
   215  000000                     _SetStatus$wData	set	?_SetStatus
   216                           ;       param _wdt0 assigned to ?_SetData+3
   217  000000                     _SetData$wdt0	set	?_SetData+3
   218                           ;       param _wdt1 assigned to ?_SetData+2
   219  000000                     _SetData$wdt1	set	?_SetData+2
   220                           ;       param _wData assigned to ?_SetData+0
   221  000000                     _SetData$wData	set	?_SetData
   222                           ;       param _bt assigned to ?_SetWbtyBit+1
   223  000000                     _SetWbtyBit$bt	set	?_SetWbtyBit+1
   224                           ;       param _nrbit assigned to ?_SetWbtyBit+0
   225  000000                     _SetWbtyBit$nrbit	set	?_SetWbtyBit
   226                           ;	_i assigned to ?a_KolProc+0
   227  000000                     _KolProc$i	set	?a_KolProc
   228  000000                     
   229                           ;wsw2.c: 54: unsigned char i;
   230  004270  9284               	bcf	3972,1,c	;volatile
   231                           ;wsw2.c: 58: RE2=0;
   232  004272  9484               	bcf	3972,2,c	;volatile
   233                           ;wsw2.c: 59: RE0=0;
   234  004274  9084               	bcf	3972,0,c	;volatile
   235                           ;wsw2.c: 61: wbty[0]=0xff;
   236  004276  0EFF               	movlw	255
   237  004278  CFE8 FF3F          	movff	wreg,_wbty
   238                           ;wsw2.c: 62: wbty[1]=0xff;
   239  00427C  CFE8 FF40          	movff	wreg,_wbty+1
   240                           ;wsw2.c: 63: wsdid=0x00;
   241  004280  010F               	movlb	_wsdid shr (0+8)
   242  004282  6B3E               	clrf	_wsdid& (0+255),b
   243                           ;wsw2.c: 72: for(i=0;i<6-1;i++) PWD[i].St.focus=
      +                          0;
   244  004284  6AD9               	clrf	fsr2l,c
   245  004286                     l15:
   246  004286  50D9               	movf	fsr2l,w,c
   247  004288  0D04               	mullw	4
   248  00428A  0EBC               	movlw	low _PWD
   249  00428C  24F3               	addwf	prodl,w,c
   250  00428E  6EE9               	movwf	fsr0l,c
   251  004290  0E00               	movlw	high _PWD
   252  004292  20F4               	addwfc	prodh,w,c
   253  004294  6EEA               	movwf	fsr0h,c
   254  004296  0EFE               	movlw	-2
   255  004298  16EF               	andwf	indf0,f,c
   256  00429A  2AD9               	incf	fsr2l,f,c
   257  00429C  0E04               	movlw	4
   258  00429E  64D9               	cpfsgt	fsr2l,c
   259  0042A0  D7F2               	goto	l15
   260                           ;wsw2.c: 87: SetStatus(&PWD[4],0b001000000000000
      +                          0,0b1111111111111111);
   261  0042A2  0100               	movlb	__Lparam shr (0+8)
   262  0042A4  0ECC               	movlw	low (_PWD+16)
   263  0042A6  6FF3               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   264  0042A8  0E00               	movlw	high (_PWD+16)
   265  0042AA  6FF4               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   266  0042AC  6BF5               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   267  0042AE  0E20               	movlw	32
   268  0042B0  6FF6               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   269  0042B2  69F7               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   270  0042B4  69F8               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   271  0042B6  ECAE  F029         	call	_SetStatus	;wreg free
   272                           ;wsw2.c: 88: SetStatus(&PWD[5],0b010000000000000
      +                          0,0b1111111111111111);
   273  0042BA  0100               	movlb	__Lparam shr (0+8)
   274  0042BC  0ED0               	movlw	low (_PWD+20)
   275  0042BE  6FF3               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   276  0042C0  0E00               	movlw	high (_PWD+20)
   277  0042C2  6FF4               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   278  0042C4  6BF5               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   279  0042C6  0E40               	movlw	64
   280  0042C8  6FF6               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   281  0042CA  69F7               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   282  0042CC  69F8               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   283  0042CE  EFAE  F029         	goto	_SetStatus	;wreg free
   284                           ;wsw2.c: 94: }
   285  0042D2                     __end_of_InitWsw:
   286                           ;wsw2.c: 314: const unsigned char Znak[16]={
   287                           ;wsw2.c: 315: 0b01010000,
   288                           ;wsw2.c: 316: 0b11111001,
   289                           ;wsw2.c: 317: 0b00110010,
   290                           ;wsw2.c: 318: 0b00110001,
   291                           ;wsw2.c: 319: 0b10011001,
   292                           ;wsw2.c: 320: 0b00010101,
   293                           ;wsw2.c: 321: 0b00010100,
   294                           ;wsw2.c: 322: 0b01111001,
   295                           ;wsw2.c: 323: 0b00010000,
   296                           ;wsw2.c: 324: 0b00010001,
   297                           ;wsw2.c: 325: 0b00011000,
   298                           ;wsw2.c: 326: 0b10010100,
   299                           ;wsw2.c: 327: 0b01010110,
   300                           ;wsw2.c: 328: 0b10110000,
   301                           ;wsw2.c: 329: 0b00010110,
   302                           ;wsw2.c: 330: 0b00011110,
   303                           ;wsw2.c: 331: };
   304                           ;wsw2.c: 337: void RefreshWSW(void)
   305                           ;wsw2.c: 338: {
   306  0042D2                     _RefreshWSW:
   307  000000                     
   308                           ;wsw2.c: 340: KolProc();
   309  0042D2  D806               	call	_KolProc	;wreg free
   310                           ;wsw2.c: 342: SetPrWswData();
   311  0042D4  EC0A  F028         	call	_SetPrWswData	;wreg free
   312                           ;wsw2.c: 343: FormatWswData();
   313  0042D8  EC37  F028         	call	_FormatWswData	;wreg free
   314                           ;wsw2.c: 344: PrintWswData();
   315  0042DC  EFDE  F028         	goto	_PrintWswData	;wreg free
   316                           ;wsw2.c: 345: }
   317  0042E0                     __end_of_RefreshWSW:
   318                           ;wsw2.c: 350: void KolProc(void)
   319                           ;wsw2.c: 351: {
   320  0042E0                     _KolProc:
   321  000000                     
   322                           ;wsw2.c: 352: unsigned char i,j,k,l,nC;
   323  0042E0  6AD9               	clrf	fsr2l,c
   324  0042E2                     l20:
   325                           ;wsw2.c: 355: {
   326  0042E2  50D9               	movf	fsr2l,w,c
   327  0042E4  0D03               	mullw	3
   328  0042E6  50F3               	movf	prodl,w,c
   329  0042E8  0F86               	addlw	low _Klj
   330  0042EA  6EF6               	movwf	tblptrl,c
   331  0042EC  50F4               	movf	prodh,w,c
   332  0042EE  6EF7               	movwf	tblptrh,c
   333  0042F0  0E10               	movlw	high _Klj
   334  0042F2  22F7               	addwfc	tblptrh,f,c
   335  0042F4  0009               	tblrd		*+
   336  0042F6  CFF5 F000          	movff	tablat,btemp
   337  0042FA  0009               	tblrd		*+
   338  0042FC  CFF5 F001          	movff	tablat,btemp+1
   339  004300  0E08               	movlw	8
   340  004302  2600               	addwf	btemp,f,c
   341  004304  0E00               	movlw	0
   342  004306  2201               	addwfc	btemp+1,f,c
   343  004308  C000  FFF6         	movff	btemp,tblptrl
   344  00430C  C001  FFF7         	movff	btemp+1,tblptrh
   345  004310  0E0F               	movlw	(high __ramtop+-1)
   346  004312  64F7               	cpfsgt	tblptrh,c
   347  004314  D007               	bra	u27
   348  004316  0009               	tblrd		*+
   349  004318  CFF5 F000          	movff	tablat,btemp
   350  00431C  0009               	tblrd		*+
   351  00431E  CFF5 F001          	movff	tablat,btemp+1
   352  004322  D008               	bra	u20
   353  004324                     u27:
   354  004324  CFF6 FFE9          	movff	tblptrl,fsr0l
   355  004328  CFF7 FFEA          	movff	tblptrh,fsr0h
   356  00432C  CFEE F000          	movff	postinc0,btemp
   357  004330  CFEE F001          	movff	postinc0,btemp+1
   358  004334                     u20:
   359  004334  0E02               	movlw	2
   360  004336  2600               	addwf	btemp,f,c
   361  004338  0E00               	movlw	0
   362  00433A  2201               	addwfc	btemp+1,f,c
   363  00433C  C000  FFF6         	movff	btemp,tblptrl
   364  004340  C001  FFF7         	movff	btemp+1,tblptrh
   365  004344  0E0F               	movlw	(high __ramtop+-1)
   366  004346  64F7               	cpfsgt	tblptrh,c
   367  004348  D003               	bra	u37
   368  00434A  0008               	tblrd		*
   369  00434C  50F5               	movf	tablat,w,c
   370  00434E  D005               	bra	u30
   371  004350                     u37:
   372  004350  CFF6 FFE9          	movff	tblptrl,fsr0l
   373  004354  CFF7 FFEA          	movff	tblptrh,fsr0h
   374  004358  50EF               	movf	indf0,w,c
   375  00435A                     u30:
   376  00435A  6EE1               	movwf	fsr1l,c
   377                           ;wsw2.c: 357: if((KInd[j].reset)||(nC&&KTim[j].c
      +                          ykl>=nC))
   378  00435C  50D9               	movf	fsr2l,w,c
   379  00435E  EE0F  F041         	lfsr	0,_KInd
   380  004362  26E9               	addwf	fsr0l,f,c
   381  004364  0E00               	movlw	0
   382  004366  22EA               	addwfc	fsr0h,f,c
   383  004368  50EF               	movf	indf0,w,c
   384  00436A  6E00               	movwf	btemp,c
   385  00436C  B200               	btfsc	btemp,1,c
   386  00436E  D00F               	goto	u80
   387  004370  50E1               	movf	fsr1l,w,c
   388  004372  E063               	bz	l23
   389  004374  50D9               	movf	fsr2l,w,c
   390  004376  0D03               	mullw	3
   391  004378  0EB2               	movlw	low (_KTim+2)
   392  00437A  24F3               	addwf	prodl,w,c
   393  00437C  6EE9               	movwf	fsr0l,c
   394  00437E  0E00               	movlw	high (_KTim+2)
   395  004380  20F4               	addwfc	prodh,w,c
   396  004382  6EEA               	movwf	fsr0h,c
   397  004384  50EF               	movf	indf0,w,c
   398  004386  6E00               	movwf	btemp,c
   399  004388  50E1               	movf	fsr1l,w,c
   400  00438A  5C00               	subwf	btemp,w,c
   401  00438C  E356               	bnc	l23
   402  00438E                     u80:
   403                           ;wsw2.c: 358: {
   404  00438E  50D9               	movf	fsr2l,w,c
   405  004390  0D03               	mullw	3
   406  004392  0EB2               	movlw	low (_KTim+2)
   407  004394  24F3               	addwf	prodl,w,c
   408  004396  6EE9               	movwf	fsr0l,c
   409  004398  0E00               	movlw	high (_KTim+2)
   410  00439A  20F4               	addwfc	prodh,w,c
   411  00439C  6EEA               	movwf	fsr0h,c
   412  00439E  6AEF               	clrf	indf0,c
   413                           ;wsw2.c: 360: KInd[j].reset=0;
   414  0043A0  50D9               	movf	fsr2l,w,c
   415  0043A2  EE0F  F041         	lfsr	0,_KInd
   416  0043A6  26E9               	addwf	fsr0l,f,c
   417  0043A8  0E00               	movlw	0
   418  0043AA  22EA               	addwfc	fsr0h,f,c
   419  0043AC  0EFD               	movlw	-3
   420  0043AE  16EF               	andwf	indf0,f,c
   421                           ;wsw2.c: 361: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j
      +                          ].KL).KFc[i].focus=0;
   422  0043B0  6A02               	clrf	btemp+2,c
   423  0043B2                     l27:
   424  0043B2  50D9               	movf	fsr2l,w,c
   425  0043B4  0D03               	mullw	3
   426  0043B6  50F3               	movf	prodl,w,c
   427  0043B8  0F86               	addlw	low _Klj
   428  0043BA  6EF6               	movwf	tblptrl,c
   429  0043BC  50F4               	movf	prodh,w,c
   430  0043BE  6EF7               	movwf	tblptrh,c
   431  0043C0  0E10               	movlw	high _Klj
   432  0043C2  22F7               	addwfc	tblptrh,f,c
   433  0043C4  0E02               	movlw	2
   434  0043C6  26F6               	addwf	tblptrl,f,c
   435  0043C8  0E00               	movlw	0
   436  0043CA  22F7               	addwfc	tblptrh,f,c
   437  0043CC  0008               	tblrd		*
   438  0043CE  50F5               	movf	tablat,w,c
   439  0043D0  5C02               	subwf	btemp+2,w,c
   440  0043D2  E233               	bc	l23
   441  0043D4  50D9               	movf	fsr2l,w,c
   442  0043D6  0D03               	mullw	3
   443  0043D8  50F3               	movf	prodl,w,c
   444  0043DA  0F86               	addlw	low _Klj
   445  0043DC  6EF6               	movwf	tblptrl,c
   446  0043DE  50F4               	movf	prodh,w,c
   447  0043E0  6EF7               	movwf	tblptrh,c
   448  0043E2  0E10               	movlw	high _Klj
   449  0043E4  22F7               	addwfc	tblptrh,f,c
   450  0043E6  0009               	tblrd		*+
   451  0043E8  CFF5 F000          	movff	tablat,btemp
   452  0043EC  0009               	tblrd		*+
   453  0043EE  CFF5 F001          	movff	tablat,btemp+1
   454  0043F2  0E06               	movlw	6
   455  0043F4  2600               	addwf	btemp,f,c
   456  0043F6  0E00               	movlw	0
   457  0043F8  2201               	addwfc	btemp+1,f,c
   458  0043FA  C000  FFF6         	movff	btemp,tblptrl
   459  0043FE  C001  FFF7         	movff	btemp+1,tblptrh
   460  004402  0E0F               	movlw	(high __ramtop+-1)
   461  004404  64F7               	cpfsgt	tblptrh,c
   462  004406  D007               	bra	u97
   463  004408  0009               	tblrd		*+
   464  00440A  CFF5 F000          	movff	tablat,btemp
   465  00440E  0009               	tblrd		*+
   466  004410  CFF5 F001          	movff	tablat,btemp+1
   467  004414  D008               	bra	u90
   468  004416                     u97:
   469  004416  CFF6 FFE9          	movff	tblptrl,fsr0l
   470  00441A  CFF7 FFEA          	movff	tblptrh,fsr0h
   471  00441E  CFEE F000          	movff	postinc0,btemp
   472  004422  CFEE F001          	movff	postinc0,btemp+1
   473  004426                     u90:
   474  004426  5002               	movf	btemp+2,w,c
   475  004428  2400               	addwf	btemp,w,c
   476  00442A  6EE9               	movwf	fsr0l,c
   477  00442C  0E00               	movlw	0
   478  00442E  2001               	addwfc	btemp+1,w,c
   479  004430  6EEA               	movwf	fsr0h,c
   480  004432  0EFE               	movlw	-2
   481  004434  16EF               	andwf	indf0,f,c
   482  004436  2A02               	incf	btemp+2,f,c
   483  004438  D7BC               	goto	l27
   484  00443A                     l23:
   485                           ;wsw2.c: 362: }
   486  00443A  50D9               	movf	fsr2l,w,c
   487  00443C  EE0F  F041         	lfsr	0,_KInd
   488  004440  26E9               	addwf	fsr0l,f,c
   489  004442  0E00               	movlw	0
   490  004444  22EA               	addwfc	fsr0h,f,c
   491  004446  50EF               	movf	indf0,w,c
   492  004448  6E00               	movwf	btemp,c
   493  00444A  A000               	btfss	btemp,0,c
   494  00444C  D052               	goto	l28
   495  00444E  50E1               	movf	fsr1l,w,c
   496  004450  E050               	bz	l28
   497                           ;wsw2.c: 364: {
   498  004452  50D9               	movf	fsr2l,w,c
   499  004454  0D03               	mullw	3
   500  004456  0EB2               	movlw	low (_KTim+2)
   501  004458  24F3               	addwf	prodl,w,c
   502  00445A  6EE9               	movwf	fsr0l,c
   503  00445C  0E00               	movlw	high (_KTim+2)
   504  00445E  20F4               	addwfc	prodh,w,c
   505  004460  6EEA               	movwf	fsr0h,c
   506  004462  6AEF               	clrf	indf0,c
   507                           ;wsw2.c: 366: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j
      +                          ].KL).KFc[i].focus=1;
   508  004464  6A02               	clrf	btemp+2,c
   509  004466                     l32:
   510  004466  50D9               	movf	fsr2l,w,c
   511  004468  0D03               	mullw	3
   512  00446A  50F3               	movf	prodl,w,c
   513  00446C  0F86               	addlw	low _Klj
   514  00446E  6EF6               	movwf	tblptrl,c
   515  004470  50F4               	movf	prodh,w,c
   516  004472  6EF7               	movwf	tblptrh,c
   517  004474  0E10               	movlw	high _Klj
   518  004476  22F7               	addwfc	tblptrh,f,c
   519  004478  0E02               	movlw	2
   520  00447A  26F6               	addwf	tblptrl,f,c
   521  00447C  0E00               	movlw	0
   522  00447E  22F7               	addwfc	tblptrh,f,c
   523  004480  0008               	tblrd		*
   524  004482  50F5               	movf	tablat,w,c
   525  004484  5C02               	subwf	btemp+2,w,c
   526  004486  E235               	bc	l28
   527  004488  50D9               	movf	fsr2l,w,c
   528  00448A  0D03               	mullw	3
   529  00448C  50F3               	movf	prodl,w,c
   530  00448E  0F86               	addlw	low _Klj
   531  004490  6EF6               	movwf	tblptrl,c
   532  004492  50F4               	movf	prodh,w,c
   533  004494  6EF7               	movwf	tblptrh,c
   534  004496  0E10               	movlw	high _Klj
   535  004498  22F7               	addwfc	tblptrh,f,c
   536  00449A  0009               	tblrd		*+
   537  00449C  CFF5 F000          	movff	tablat,btemp
   538  0044A0  0009               	tblrd		*+
   539  0044A2  CFF5 F001          	movff	tablat,btemp+1
   540  0044A6  0E06               	movlw	6
   541  0044A8  2600               	addwf	btemp,f,c
   542  0044AA  0E00               	movlw	0
   543  0044AC  2201               	addwfc	btemp+1,f,c
   544  0044AE  C000  FFF6         	movff	btemp,tblptrl
   545  0044B2  C001  FFF7         	movff	btemp+1,tblptrh
   546  0044B6  0E0F               	movlw	(high __ramtop+-1)
   547  0044B8  64F7               	cpfsgt	tblptrh,c
   548  0044BA  D007               	bra	u147
   549  0044BC  0009               	tblrd		*+
   550  0044BE  CFF5 F000          	movff	tablat,btemp
   551  0044C2  0009               	tblrd		*+
   552  0044C4  CFF5 F001          	movff	tablat,btemp+1
   553  0044C8  D008               	bra	u140
   554  0044CA                     u147:
   555  0044CA  CFF6 FFE9          	movff	tblptrl,fsr0l
   556  0044CE  CFF7 FFEA          	movff	tblptrh,fsr0h
   557  0044D2  CFEE F000          	movff	postinc0,btemp
   558  0044D6  CFEE F001          	movff	postinc0,btemp+1
   559  0044DA                     u140:
   560  0044DA  5002               	movf	btemp+2,w,c
   561  0044DC  2400               	addwf	btemp,w,c
   562  0044DE  6EE9               	movwf	fsr0l,c
   563  0044E0  0E00               	movlw	0
   564  0044E2  2001               	addwfc	btemp+1,w,c
   565  0044E4  6EEA               	movwf	fsr0h,c
   566  0044E6  50EF               	movf	indf0,w,c
   567  0044E8  0BFE               	andlw	-2
   568  0044EA  0901               	iorlw	1
   569  0044EC  6EEF               	movwf	indf0,c
   570  0044EE  2A02               	incf	btemp+2,f,c
   571  0044F0  D7BA               	goto	l32
   572  0044F2                     l28:
   573                           ;wsw2.c: 367: }
   574  0044F2  50D9               	movf	fsr2l,w,c
   575  0044F4  EE0F  F041         	lfsr	0,_KInd
   576  0044F8  26E9               	addwf	fsr0l,f,c
   577  0044FA  0E00               	movlw	0
   578  0044FC  22EA               	addwfc	fsr0h,f,c
   579  0044FE  50EF               	movf	indf0,w,c
   580  004500  6E00               	movwf	btemp,c
   581  004502  50D9               	movf	fsr2l,w,c
   582  004504  B000               	btfsc	btemp,0,c
   583  004506  D047               	goto	L4
   584  004508  0D03               	mullw	3
   585  00450A  50F3               	movf	prodl,w,c
   586  00450C  0F86               	addlw	low _Klj
   587  00450E  6EF6               	movwf	tblptrl,c
   588  004510  50F4               	movf	prodh,w,c
   589  004512  6EF7               	movwf	tblptrh,c
   590  004514  0E10               	movlw	high _Klj
   591  004516  22F7               	addwfc	tblptrh,f,c
   592  004518  0009               	tblrd		*+
   593  00451A  CFF5 F000          	movff	tablat,btemp
   594  00451E  0009               	tblrd		*+
   595  004520  CFF5 F001          	movff	tablat,btemp+1
   596  004524  0E08               	movlw	8
   597  004526  2600               	addwf	btemp,f,c
   598  004528  0E00               	movlw	0
   599  00452A  2201               	addwfc	btemp+1,f,c
   600  00452C  C000  FFF6         	movff	btemp,tblptrl
   601  004530  C001  FFF7         	movff	btemp+1,tblptrh
   602  004534  0E0F               	movlw	(high __ramtop+-1)
   603  004536  64F7               	cpfsgt	tblptrh,c
   604  004538  D007               	bra	u177
   605  00453A  0009               	tblrd		*+
   606  00453C  CFF5 F000          	movff	tablat,btemp
   607  004540  0009               	tblrd		*+
   608  004542  CFF5 F001          	movff	tablat,btemp+1
   609  004546  D008               	bra	u170
   610  004548                     u177:
   611  004548  CFF6 FFE9          	movff	tblptrl,fsr0l
   612  00454C  CFF7 FFEA          	movff	tblptrh,fsr0h
   613  004550  CFEE F000          	movff	postinc0,btemp
   614  004554  CFEE F001          	movff	postinc0,btemp+1
   615  004558                     u170:
   616  004558  C000  FFF6         	movff	btemp,tblptrl
   617  00455C  C001  FFF7         	movff	btemp+1,tblptrh
   618  004560  0E0F               	movlw	(high __ramtop+-1)
   619  004562  64F7               	cpfsgt	tblptrh,c
   620  004564  D007               	bra	u187
   621  004566  0009               	tblrd		*+
   622  004568  CFF5 F000          	movff	tablat,btemp
   623  00456C  0009               	tblrd		*+
   624  00456E  CFF5 F001          	movff	tablat,btemp+1
   625  004572  D008               	bra	u180
   626  004574                     u187:
   627  004574  CFF6 FFE9          	movff	tblptrl,fsr0l
   628  004578  CFF7 FFEA          	movff	tblptrh,fsr0h
   629  00457C  CFEE F000          	movff	postinc0,btemp
   630  004580  CFEE F001          	movff	postinc0,btemp+1
   631  004584                     u180:
   632  004584  C000  FFE9         	movff	btemp,fsr0l
   633  004588  C001  FFEA         	movff	btemp+1,fsr0h
   634  00458C  50EF               	movf	indf0,w,c
   635  00458E  6E00               	movwf	btemp,c
   636  004590  B000               	btfsc	btemp,0,c
   637  004592  D022               	goto	l33
   638                           ;wsw2.c: 369: {
   639  004594  50D9               	movf	fsr2l,w,c
   640  004596                     L4:
   641  004596  EE0F  F041         	lfsr	0,_KInd
   642  00459A  26E9               	addwf	fsr0l,f,c
   643  00459C  0E00               	movlw	0
   644  00459E  22EA               	addwfc	fsr0h,f,c
   645  0045A0  0EFE               	movlw	-2
   646  0045A2  16EF               	andwf	indf0,f,c
   647                           ;wsw2.c: 379: KInd[j].indeks=0;
   648  0045A4  50D9               	movf	fsr2l,w,c
   649  0045A6  EE0F  F041         	lfsr	0,_KInd
   650  0045AA  26E9               	addwf	fsr0l,f,c
   651  0045AC  0E00               	movlw	0
   652  0045AE  22EA               	addwfc	fsr0h,f,c
   653  0045B0  0E03               	movlw	-253
   654  0045B2  16EF               	andwf	indf0,f,c
   655                           ;wsw2.c: 380: KTim[j].ncS=0;
   656  0045B4  50D9               	movf	fsr2l,w,c
   657  0045B6  0D03               	mullw	3
   658  0045B8  0EB0               	movlw	low _KTim
   659  0045BA  24F3               	addwf	prodl,w,c
   660  0045BC  6EE9               	movwf	fsr0l,c
   661  0045BE  0E00               	movlw	high _KTim
   662  0045C0  20F4               	addwfc	prodh,w,c
   663  0045C2  6EEA               	movwf	fsr0h,c
   664  0045C4  6AEF               	clrf	indf0,c
   665                           ;wsw2.c: 381: KTim[j].ndS=0;
   666  0045C6  50D9               	movf	fsr2l,w,c
   667  0045C8  0D03               	mullw	3
   668  0045CA  0EB1               	movlw	low (_KTim+1)
   669  0045CC  24F3               	addwf	prodl,w,c
   670  0045CE  6EE9               	movwf	fsr0l,c
   671  0045D0  0E00               	movlw	high (_KTim+1)
   672  0045D2  20F4               	addwfc	prodh,w,c
   673  0045D4  6EEA               	movwf	fsr0h,c
   674  0045D6  6AEF               	clrf	indf0,c
   675  0045D8                     l33:
   676                           ;wsw2.c: 383: }
   677  0045D8  50D9               	movf	fsr2l,w,c
   678  0045DA  0D03               	mullw	3
   679  0045DC  50F3               	movf	prodl,w,c
   680  0045DE  0F86               	addlw	low _Klj
   681  0045E0  6EF6               	movwf	tblptrl,c
   682  0045E2  50F4               	movf	prodh,w,c
   683  0045E4  6EF7               	movwf	tblptrh,c
   684  0045E6  0E10               	movlw	high _Klj
   685  0045E8  22F7               	addwfc	tblptrh,f,c
   686  0045EA  0009               	tblrd		*+
   687  0045EC  CFF5 F000          	movff	tablat,btemp
   688  0045F0  0009               	tblrd		*+
   689  0045F2  CFF5 F001          	movff	tablat,btemp+1
   690  0045F6  0E08               	movlw	8
   691  0045F8  2600               	addwf	btemp,f,c
   692  0045FA  0E00               	movlw	0
   693  0045FC  2201               	addwfc	btemp+1,f,c
   694  0045FE  C000  FFF6         	movff	btemp,tblptrl
   695  004602  C001  FFF7         	movff	btemp+1,tblptrh
   696  004606  0E0F               	movlw	(high __ramtop+-1)
   697  004608  64F7               	cpfsgt	tblptrh,c
   698  00460A  D007               	bra	u217
   699  00460C  0009               	tblrd		*+
   700  00460E  CFF5 F000          	movff	tablat,btemp
   701  004612  0009               	tblrd		*+
   702  004614  CFF5 F001          	movff	tablat,btemp+1
   703  004618  D008               	bra	u210
   704  00461A                     u217:
   705  00461A  CFF6 FFE9          	movff	tblptrl,fsr0l
   706  00461E  CFF7 FFEA          	movff	tblptrh,fsr0h
   707  004622  CFEE F000          	movff	postinc0,btemp
   708  004626  CFEE F001          	movff	postinc0,btemp+1
   709  00462A                     u210:
   710  00462A  C000  FFF6         	movff	btemp,tblptrl
   711  00462E  C001  FFF7         	movff	btemp+1,tblptrh
   712  004632  0E0F               	movlw	(high __ramtop+-1)
   713  004634  64F7               	cpfsgt	tblptrh,c
   714  004636  D007               	bra	u227
   715  004638  0009               	tblrd		*+
   716  00463A  CFF5 F000          	movff	tablat,btemp
   717  00463E  0009               	tblrd		*+
   718  004640  CFF5 F001          	movff	tablat,btemp+1
   719  004644  D008               	bra	u220
   720  004646                     u227:
   721  004646  CFF6 FFE9          	movff	tblptrl,fsr0l
   722  00464A  CFF7 FFEA          	movff	tblptrh,fsr0h
   723  00464E  CFEE F000          	movff	postinc0,btemp
   724  004652  CFEE F001          	movff	postinc0,btemp+1
   725  004656                     u220:
   726  004656  C000  FFE9         	movff	btemp,fsr0l
   727  00465A  C001  FFEA         	movff	btemp+1,fsr0h
   728  00465E  0EFE               	movlw	-2
   729  004660  16EF               	andwf	indf0,f,c
   730                           ;wsw2.c: 385: for(i=KInd[j].indeks;i<Klj[j].nPzc
      +                          ;i++)
   731  004662  50D9               	movf	fsr2l,w,c
   732  004664  EE0F  F041         	lfsr	0,_KInd
   733  004668  26E9               	addwf	fsr0l,f,c
   734  00466A  0E00               	movlw	0
   735  00466C  22EA               	addwfc	fsr0h,f,c
   736  00466E  30EF               	rrcf	indf0,w,c
   737  004670  6E00               	movwf	btemp,c
   738  004672  3000               	rrcf	btemp,w,c
   739  004674  0B3F               	andlw	63
   740  004676  0100               	movlb	__Lparam shr (0+8)
   741  004678  6FFC               	movwf	?a_KolProc^(__Lparam& (0+65280)),b
   742  00467A                     l37:
   743  00467A  50D9               	movf	fsr2l,w,c
   744  00467C  0D03               	mullw	3
   745  00467E  50F3               	movf	prodl,w,c
   746  004680  0F86               	addlw	low _Klj
   747  004682  6EF6               	movwf	tblptrl,c
   748  004684  50F4               	movf	prodh,w,c
   749  004686  6EF7               	movwf	tblptrh,c
   750  004688  0E10               	movlw	high _Klj
   751  00468A  22F7               	addwfc	tblptrh,f,c
   752  00468C  0E02               	movlw	2
   753  00468E  26F6               	addwf	tblptrl,f,c
   754  004690  0E00               	movlw	0
   755  004692  22F7               	addwfc	tblptrh,f,c
   756  004694  0008               	tblrd		*
   757  004696  50F5               	movf	tablat,w,c
   758  004698  0100               	movlb	__Lparam shr (0+8)
   759  00469A  5DFC               	subwf	?a_KolProc^(__Lparam& (0+65280)),w
   760  00469C  E302 EF04  F028    	bc	l35
   761                           ;wsw2.c: 386: {
   762  0046A2  50D9               	movf	fsr2l,w,c
   763  0046A4  0D03               	mullw	3
   764  0046A6  50F3               	movf	prodl,w,c
   765  0046A8  0F86               	addlw	low _Klj
   766  0046AA  6EF6               	movwf	tblptrl,c
   767  0046AC  50F4               	movf	prodh,w,c
   768  0046AE  6EF7               	movwf	tblptrh,c
   769  0046B0  0E10               	movlw	high _Klj
   770  0046B2  22F7               	addwfc	tblptrh,f,c
   771  0046B4  0009               	tblrd		*+
   772  0046B6  CFF5 F000          	movff	tablat,btemp
   773  0046BA  0009               	tblrd		*+
   774  0046BC  CFF5 F001          	movff	tablat,btemp+1
   775  0046C0  0E06               	movlw	6
   776  0046C2  2600               	addwf	btemp,f,c
   777  0046C4  0E00               	movlw	0
   778  0046C6  2201               	addwfc	btemp+1,f,c
   779  0046C8  C000  FFF6         	movff	btemp,tblptrl
   780  0046CC  C001  FFF7         	movff	btemp+1,tblptrh
   781  0046D0  0E0F               	movlw	(high __ramtop+-1)
   782  0046D2  64F7               	cpfsgt	tblptrh,c
   783  0046D4  D007               	bra	u237
   784  0046D6  0009               	tblrd		*+
   785  0046D8  CFF5 F000          	movff	tablat,btemp
   786  0046DC  0009               	tblrd		*+
   787  0046DE  CFF5 F001          	movff	tablat,btemp+1
   788  0046E2  D008               	bra	u230
   789  0046E4                     u237:
   790  0046E4  CFF6 FFE9          	movff	tblptrl,fsr0l
   791  0046E8  CFF7 FFEA          	movff	tblptrh,fsr0h
   792  0046EC  CFEE F000          	movff	postinc0,btemp
   793  0046F0  CFEE F001          	movff	postinc0,btemp+1
   794  0046F4                     u230:
   795  0046F4  0100               	movlb	__Lparam shr (0+8)
   796  0046F6  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
   797  0046F8  2400               	addwf	btemp,w,c
   798  0046FA  6EE9               	movwf	fsr0l,c
   799  0046FC  0E00               	movlw	0
   800  0046FE  2001               	addwfc	btemp+1,w,c
   801  004700  6EEA               	movwf	fsr0h,c
   802  004702  50EF               	movf	indf0,w,c
   803  004704  6E00               	movwf	btemp,c
   804  004706  B000               	btfsc	btemp,0,c
   805  004708  D023               	goto	l38
   806                           ;wsw2.c: 389: {
   807  00470A  50D9               	movf	fsr2l,w,c
   808  00470C  0D03               	mullw	3
   809  00470E  50F3               	movf	prodl,w,c
   810  004710  0F86               	addlw	low _Klj
   811  004712  6EF6               	movwf	tblptrl,c
   812  004714  50F4               	movf	prodh,w,c
   813  004716  6EF7               	movwf	tblptrh,c
   814  004718  0E10               	movlw	high _Klj
   815  00471A  22F7               	addwfc	tblptrh,f,c
   816  00471C  0E02               	movlw	2
   817  00471E  26F6               	addwf	tblptrl,f,c
   818  004720  0E00               	movlw	0
   819  004722  22F7               	addwfc	tblptrh,f,c
   820  004724  0008               	tblrd		*
   821  004726  50F5               	movf	tablat,w,c
   822  004728  6E00               	movwf	btemp,c
   823  00472A  0FFF               	addlw	255
   824  00472C  6E02               	movwf	btemp+2,c
   825  00472E  6A03               	clrf	btemp+3,c
   826  004730  0EFF               	movlw	255
   827  004732  2203               	addwfc	btemp+3,f,c
   828  004734  C0FC  F000         	movff	?a_KolProc,btemp
   829  004738  6A01               	clrf	btemp+1,c
   830  00473A  5001               	movf	btemp+1,w,c
   831  00473C  0A80               	xorlw	128
   832  00473E  6E04               	movwf	btemp+4,c
   833  004740  5003               	movf	btemp+3,w,c
   834  004742  0A80               	xorlw	128
   835  004744  5C04               	subwf	btemp+4,w,c
   836  004746  E102               	bnz	u255
   837  004748  5002               	movf	btemp+2,w,c
   838  00474A  5C00               	subwf	btemp,w,c
   839  00474C                     u255:
   840  00474C  EFEC  F027         	goto	u615
   841                           ;wsw2.c: 391: {
   842                           ;wsw2.c: 393: if(nC) KTim[j].cykl++;
   843                           ;wsw2.c: 394: }
   844  004750                     l38:
   845                           ;wsw2.c: 396: }
   846  004750  C0FC  F000         	movff	?a_KolProc,btemp
   847  004754  50D9               	movf	fsr2l,w,c
   848  004756  EE0F  F041         	lfsr	0,_KInd
   849  00475A  26E9               	addwf	fsr0l,f,c
   850  00475C  0E00               	movlw	0
   851  00475E  22EA               	addwfc	fsr0h,f,c
   852  004760  3600               	rlcf	btemp,f,c
   853  004762  3600               	rlcf	btemp,f,c
   854  004764  50EF               	movf	indf0,w,c
   855  004766  1800               	xorwf	btemp,w,c
   856  004768  0B03               	andlw	-253
   857  00476A  1800               	xorwf	btemp,w,c
   858  00476C  6EEF               	movwf	indf0,c
   859                           ;wsw2.c: 401: for(k=j+1;k<4;k++)
   860  00476E  28D9               	incf	fsr2l,w,c
   861  004770  6E02               	movwf	btemp+2,c
   862  004772  D08D               	goto	L2
   863  004774                     l41:
   864                           ;wsw2.c: 402: if((*(*Klj[k].KL).KOut).nCykli)
   865  004774  5002               	movf	btemp+2,w,c
   866  004776  0D03               	mullw	3
   867  004778  50F3               	movf	prodl,w,c
   868  00477A  0F86               	addlw	low _Klj
   869  00477C  6EF6               	movwf	tblptrl,c
   870  00477E  50F4               	movf	prodh,w,c
   871  004780  6EF7               	movwf	tblptrh,c
   872  004782  0E10               	movlw	high _Klj
   873  004784  22F7               	addwfc	tblptrh,f,c
   874  004786  0009               	tblrd		*+
   875  004788  CFF5 F000          	movff	tablat,btemp
   876  00478C  0009               	tblrd		*+
   877  00478E  CFF5 F001          	movff	tablat,btemp+1
   878  004792  0E08               	movlw	8
   879  004794  2600               	addwf	btemp,f,c
   880  004796  0E00               	movlw	0
   881  004798  2201               	addwfc	btemp+1,f,c
   882  00479A  C000  FFF6         	movff	btemp,tblptrl
   883  00479E  C001  FFF7         	movff	btemp+1,tblptrh
   884  0047A2  0E0F               	movlw	(high __ramtop+-1)
   885  0047A4  64F7               	cpfsgt	tblptrh,c
   886  0047A6  D007               	bra	u287
   887  0047A8  0009               	tblrd		*+
   888  0047AA  CFF5 F000          	movff	tablat,btemp
   889  0047AE  0009               	tblrd		*+
   890  0047B0  CFF5 F001          	movff	tablat,btemp+1
   891  0047B4  D008               	bra	u280
   892  0047B6                     u287:
   893  0047B6  CFF6 FFE9          	movff	tblptrl,fsr0l
   894  0047BA  CFF7 FFEA          	movff	tblptrh,fsr0h
   895  0047BE  CFEE F000          	movff	postinc0,btemp
   896  0047C2  CFEE F001          	movff	postinc0,btemp+1
   897  0047C6                     u280:
   898  0047C6  0E02               	movlw	2
   899  0047C8  2600               	addwf	btemp,f,c
   900  0047CA  0E00               	movlw	0
   901  0047CC  2201               	addwfc	btemp+1,f,c
   902  0047CE  C000  FFF6         	movff	btemp,tblptrl
   903  0047D2  C001  FFF7         	movff	btemp+1,tblptrh
   904  0047D6  0E0F               	movlw	(high __ramtop+-1)
   905  0047D8  64F7               	cpfsgt	tblptrh,c
   906  0047DA  D003               	bra	u297
   907  0047DC  0008               	tblrd		*
   908  0047DE  50F5               	movf	tablat,w,c
   909  0047E0  D005               	bra	u290
   910  0047E2                     u297:
   911  0047E2  CFF6 FFE9          	movff	tblptrl,fsr0l
   912  0047E6  CFF7 FFEA          	movff	tblptrh,fsr0h
   913  0047EA  50EF               	movf	indf0,w,c
   914  0047EC                     u290:
   915  0047EC  0900               	iorlw	0
   916  0047EE  E04E               	bz	l44
   917                           ;wsw2.c: 403: {
   918  0047F0  6A03               	clrf	btemp+3,c
   919  0047F2                     l48:
   920  0047F2  5002               	movf	btemp+2,w,c
   921  0047F4  0D03               	mullw	3
   922  0047F6  50F3               	movf	prodl,w,c
   923  0047F8  0F86               	addlw	low _Klj
   924  0047FA  6EF6               	movwf	tblptrl,c
   925  0047FC  50F4               	movf	prodh,w,c
   926  0047FE  6EF7               	movwf	tblptrh,c
   927  004800  0E10               	movlw	high _Klj
   928  004802  22F7               	addwfc	tblptrh,f,c
   929  004804  0E02               	movlw	2
   930  004806  26F6               	addwf	tblptrl,f,c
   931  004808  0E00               	movlw	0
   932  00480A  22F7               	addwfc	tblptrh,f,c
   933  00480C  0008               	tblrd		*
   934  00480E  50F5               	movf	tablat,w,c
   935  004810  5C03               	subwf	btemp+3,w,c
   936  004812  E233               	bc	u320
   937  004814  5002               	movf	btemp+2,w,c
   938  004816  0D03               	mullw	3
   939  004818  50F3               	movf	prodl,w,c
   940  00481A  0F86               	addlw	low _Klj
   941  00481C  6EF6               	movwf	tblptrl,c
   942  00481E  50F4               	movf	prodh,w,c
   943  004820  6EF7               	movwf	tblptrh,c
   944  004822  0E10               	movlw	high _Klj
   945  004824  22F7               	addwfc	tblptrh,f,c
   946  004826  0009               	tblrd		*+
   947  004828  CFF5 F000          	movff	tablat,btemp
   948  00482C  0009               	tblrd		*+
   949  00482E  CFF5 F001          	movff	tablat,btemp+1
   950  004832  0E06               	movlw	6
   951  004834  2600               	addwf	btemp,f,c
   952  004836  0E00               	movlw	0
   953  004838  2201               	addwfc	btemp+1,f,c
   954  00483A  C000  FFF6         	movff	btemp,tblptrl
   955  00483E  C001  FFF7         	movff	btemp+1,tblptrh
   956  004842  0E0F               	movlw	(high __ramtop+-1)
   957  004844  64F7               	cpfsgt	tblptrh,c
   958  004846  D007               	bra	u317
   959  004848  0009               	tblrd		*+
   960  00484A  CFF5 F000          	movff	tablat,btemp
   961  00484E  0009               	tblrd		*+
   962  004850  CFF5 F001          	movff	tablat,btemp+1
   963  004854  D008               	bra	u310
   964  004856                     u317:
   965  004856  CFF6 FFE9          	movff	tblptrl,fsr0l
   966  00485A  CFF7 FFEA          	movff	tblptrh,fsr0h
   967  00485E  CFEE F000          	movff	postinc0,btemp
   968  004862  CFEE F001          	movff	postinc0,btemp+1
   969  004866                     u310:
   970  004866  5003               	movf	btemp+3,w,c
   971  004868  2400               	addwf	btemp,w,c
   972  00486A  6EE9               	movwf	fsr0l,c
   973  00486C  0E00               	movlw	0
   974  00486E  2001               	addwfc	btemp+1,w,c
   975  004870  6EEA               	movwf	fsr0h,c
   976  004872  0EFE               	movlw	-2
   977  004874  16EF               	andwf	indf0,f,c
   978  004876  2A03               	incf	btemp+3,f,c
   979  004878  D7BC               	goto	l48
   980  00487A                     u320:
   981                           ;wsw2.c: 405: KTim[k].cykl=0;
   982  00487A  5002               	movf	btemp+2,w,c
   983  00487C  0D03               	mullw	3
   984  00487E  0EB2               	movlw	low (_KTim+2)
   985  004880  24F3               	addwf	prodl,w,c
   986  004882  6EE9               	movwf	fsr0l,c
   987  004884  0E00               	movlw	high (_KTim+2)
   988  004886  20F4               	addwfc	prodh,w,c
   989  004888  6EEA               	movwf	fsr0h,c
   990  00488A  6AEF               	clrf	indf0,c
   991  00488C                     l44:
   992  00488C  2A02               	incf	btemp+2,f,c
   993  00488E                     L2:
   994  00488E  0E03               	movlw	3
   995  004890  6402               	cpfsgt	btemp+2,c
   996  004892  D770               	goto	l41
   997                           ;wsw2.c: 406: }
   998  004894  28D9               	incf	fsr2l,w,c
   999  004896  6E02               	movwf	btemp+2,c
  1000  004898  D01B               	goto	L3
  1001  00489A                     l49:
  1002                           ;wsw2.c: 411: {
  1003  00489A  5002               	movf	btemp+2,w,c
  1004  00489C  EE0F  F041         	lfsr	0,_KInd
  1005  0048A0  26E9               	addwf	fsr0l,f,c
  1006  0048A2  0E00               	movlw	0
  1007  0048A4  22EA               	addwfc	fsr0h,f,c
  1008  0048A6  0E03               	movlw	-253
  1009  0048A8  16EF               	andwf	indf0,f,c
  1010                           ;wsw2.c: 413: KTim[k].ncS=0;
  1011  0048AA  5002               	movf	btemp+2,w,c
  1012  0048AC  0D03               	mullw	3
  1013  0048AE  0EB0               	movlw	low _KTim
  1014  0048B0  24F3               	addwf	prodl,w,c
  1015  0048B2  6EE9               	movwf	fsr0l,c
  1016  0048B4  0E00               	movlw	high _KTim
  1017  0048B6  20F4               	addwfc	prodh,w,c
  1018  0048B8  6EEA               	movwf	fsr0h,c
  1019  0048BA  6AEF               	clrf	indf0,c
  1020                           ;wsw2.c: 414: KTim[k].ndS=0;
  1021  0048BC  5002               	movf	btemp+2,w,c
  1022  0048BE  0D03               	mullw	3
  1023  0048C0  0EB1               	movlw	low (_KTim+1)
  1024  0048C2  24F3               	addwf	prodl,w,c
  1025  0048C4  6EE9               	movwf	fsr0l,c
  1026  0048C6  0E00               	movlw	high (_KTim+1)
  1027  0048C8  20F4               	addwfc	prodh,w,c
  1028  0048CA  6EEA               	movwf	fsr0h,c
  1029  0048CC  6AEF               	clrf	indf0,c
  1030  0048CE  2A02               	incf	btemp+2,f,c
  1031  0048D0                     L3:
  1032  0048D0  0E03               	movlw	3
  1033  0048D2  6402               	cpfsgt	btemp+2,c
  1034  0048D4  D7E2               	goto	l49
  1035                           ;wsw2.c: 415: }
  1036  0048D6  50D9               	movf	fsr2l,w,c
  1037  0048D8  0D03               	mullw	3
  1038  0048DA  50F3               	movf	prodl,w,c
  1039  0048DC  0F86               	addlw	low _Klj
  1040  0048DE  6EF6               	movwf	tblptrl,c
  1041  0048E0  50F4               	movf	prodh,w,c
  1042  0048E2  6EF7               	movwf	tblptrh,c
  1043  0048E4  0E10               	movlw	high _Klj
  1044  0048E6  22F7               	addwfc	tblptrh,f,c
  1045  0048E8  0009               	tblrd		*+
  1046  0048EA  CFF5 F000          	movff	tablat,btemp
  1047  0048EE  0009               	tblrd		*+
  1048  0048F0  CFF5 F001          	movff	tablat,btemp+1
  1049  0048F4  0E08               	movlw	8
  1050  0048F6  2600               	addwf	btemp,f,c
  1051  0048F8  0E00               	movlw	0
  1052  0048FA  2201               	addwfc	btemp+1,f,c
  1053  0048FC  C000  FFF6         	movff	btemp,tblptrl
  1054  004900  C001  FFF7         	movff	btemp+1,tblptrh
  1055  004904  0E0F               	movlw	(high __ramtop+-1)
  1056  004906  64F7               	cpfsgt	tblptrh,c
  1057  004908  D007               	bra	u367
  1058  00490A  0009               	tblrd		*+
  1059  00490C  CFF5 F000          	movff	tablat,btemp
  1060  004910  0009               	tblrd		*+
  1061  004912  CFF5 F001          	movff	tablat,btemp+1
  1062  004916  D008               	bra	u360
  1063  004918                     u367:
  1064  004918  CFF6 FFE9          	movff	tblptrl,fsr0l
  1065  00491C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1066  004920  CFEE F000          	movff	postinc0,btemp
  1067  004924  CFEE F001          	movff	postinc0,btemp+1
  1068  004928                     u360:
  1069  004928  C000  FFF6         	movff	btemp,tblptrl
  1070  00492C  C001  FFF7         	movff	btemp+1,tblptrh
  1071  004930  0E0F               	movlw	(high __ramtop+-1)
  1072  004932  64F7               	cpfsgt	tblptrh,c
  1073  004934  D007               	bra	u377
  1074  004936  0009               	tblrd		*+
  1075  004938  CFF5 F000          	movff	tablat,btemp
  1076  00493C  0009               	tblrd		*+
  1077  00493E  CFF5 F001          	movff	tablat,btemp+1
  1078  004942  D008               	bra	u370
  1079  004944                     u377:
  1080  004944  CFF6 FFE9          	movff	tblptrl,fsr0l
  1081  004948  CFF7 FFEA          	movff	tblptrh,fsr0h
  1082  00494C  CFEE F000          	movff	postinc0,btemp
  1083  004950  CFEE F001          	movff	postinc0,btemp+1
  1084  004954                     u370:
  1085  004954  C000  FFE9         	movff	btemp,fsr0l
  1086  004958  C001  FFEA         	movff	btemp+1,fsr0h
  1087  00495C  50EF               	movf	indf0,w,c
  1088  00495E  0BFE               	andlw	-2
  1089  004960  0901               	iorlw	1
  1090  004962  6EEF               	movwf	indf0,c
  1091                           ;wsw2.c: 420: Dmask=(*(*Klj[j].KL).KOut).DMask;
  1092  004964  50D9               	movf	fsr2l,w,c
  1093  004966  0D03               	mullw	3
  1094  004968  50F3               	movf	prodl,w,c
  1095  00496A  0F86               	addlw	low _Klj
  1096  00496C  6EF6               	movwf	tblptrl,c
  1097  00496E  50F4               	movf	prodh,w,c
  1098  004970  6EF7               	movwf	tblptrh,c
  1099  004972  0E10               	movlw	high _Klj
  1100  004974  22F7               	addwfc	tblptrh,f,c
  1101  004976  0009               	tblrd		*+
  1102  004978  CFF5 F000          	movff	tablat,btemp
  1103  00497C  0009               	tblrd		*+
  1104  00497E  CFF5 F001          	movff	tablat,btemp+1
  1105  004982  0E08               	movlw	8
  1106  004984  2600               	addwf	btemp,f,c
  1107  004986  0E00               	movlw	0
  1108  004988  2201               	addwfc	btemp+1,f,c
  1109  00498A  C000  FFF6         	movff	btemp,tblptrl
  1110  00498E  C001  FFF7         	movff	btemp+1,tblptrh
  1111  004992  0E0F               	movlw	(high __ramtop+-1)
  1112  004994  64F7               	cpfsgt	tblptrh,c
  1113  004996  D007               	bra	u387
  1114  004998  0009               	tblrd		*+
  1115  00499A  CFF5 F000          	movff	tablat,btemp
  1116  00499E  0009               	tblrd		*+
  1117  0049A0  CFF5 F001          	movff	tablat,btemp+1
  1118  0049A4  D008               	bra	u380
  1119  0049A6                     u387:
  1120  0049A6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1121  0049AA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1122  0049AE  CFEE F000          	movff	postinc0,btemp
  1123  0049B2  CFEE F001          	movff	postinc0,btemp+1
  1124  0049B6                     u380:
  1125  0049B6  0E03               	movlw	3
  1126  0049B8  2600               	addwf	btemp,f,c
  1127  0049BA  0E00               	movlw	0
  1128  0049BC  2201               	addwfc	btemp+1,f,c
  1129  0049BE  C000  FFF6         	movff	btemp,tblptrl
  1130  0049C2  C001  FFF7         	movff	btemp+1,tblptrh
  1131  0049C6  0E0F               	movlw	(high __ramtop+-1)
  1132  0049C8  64F7               	cpfsgt	tblptrh,c
  1133  0049CA  D003               	bra	u397
  1134  0049CC  0008               	tblrd		*
  1135  0049CE  50F5               	movf	tablat,w,c
  1136  0049D0  D005               	bra	u390
  1137  0049D2                     u397:
  1138  0049D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1139  0049D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1140  0049DA  50EF               	movf	indf0,w,c
  1141  0049DC                     u390:
  1142  0049DC  CFE8 FF3D          	movff	wreg,_Dmask
  1143                           ;wsw2.c: 422: if (KTim[j].ndS<(*Klj[j].KL).KWP[i
      +                          ].delay)
  1144  0049E0  50D9               	movf	fsr2l,w,c
  1145  0049E2  0D03               	mullw	3
  1146  0049E4  0EB1               	movlw	low (_KTim+1)
  1147  0049E6  24F3               	addwf	prodl,w,c
  1148  0049E8  6EE9               	movwf	fsr0l,c
  1149  0049EA  0E00               	movlw	high (_KTim+1)
  1150  0049EC  20F4               	addwfc	prodh,w,c
  1151  0049EE  6EEA               	movwf	fsr0h,c
  1152  0049F0  50EF               	movf	indf0,w,c
  1153  0049F2  0100               	movlb	__Lparam shr (0+8)
  1154  0049F4  6FFD               	movwf	(?a_KolProc+1)^(?a_KolProc& (0+65280)),b
  1155  0049F6  50D9               	movf	fsr2l,w,c
  1156  0049F8  0D03               	mullw	3
  1157  0049FA  50F3               	movf	prodl,w,c
  1158  0049FC  0F86               	addlw	low _Klj
  1159  0049FE  6EF6               	movwf	tblptrl,c
  1160  004A00  50F4               	movf	prodh,w,c
  1161  004A02  6EF7               	movwf	tblptrh,c
  1162  004A04  0E10               	movlw	high _Klj
  1163  004A06  22F7               	addwfc	tblptrh,f,c
  1164  004A08  0009               	tblrd		*+
  1165  004A0A  CFF5 F000          	movff	tablat,btemp
  1166  004A0E  0009               	tblrd		*+
  1167  004A10  CFF5 F001          	movff	tablat,btemp+1
  1168  004A14  0E02               	movlw	2
  1169  004A16  2600               	addwf	btemp,f,c
  1170  004A18  0E00               	movlw	0
  1171  004A1A  2201               	addwfc	btemp+1,f,c
  1172  004A1C  C000  FFF6         	movff	btemp,tblptrl
  1173  004A20  C001  FFF7         	movff	btemp+1,tblptrh
  1174  004A24  0E0F               	movlw	(high __ramtop+-1)
  1175  004A26  64F7               	cpfsgt	tblptrh,c
  1176  004A28  D007               	bra	u407
  1177  004A2A  0009               	tblrd		*+
  1178  004A2C  CFF5 F000          	movff	tablat,btemp
  1179  004A30  0009               	tblrd		*+
  1180  004A32  CFF5 F001          	movff	tablat,btemp+1
  1181  004A36  D008               	bra	u400
  1182  004A38                     u407:
  1183  004A38  CFF6 FFE9          	movff	tblptrl,fsr0l
  1184  004A3C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1185  004A40  CFEE F000          	movff	postinc0,btemp
  1186  004A44  CFEE F001          	movff	postinc0,btemp+1
  1187  004A48                     u400:
  1188  004A48  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1189  004A4A  0D03               	mullw	3
  1190  004A4C  5000               	movf	btemp,w,c
  1191  004A4E  24F3               	addwf	prodl,w,c
  1192  004A50  6E02               	movwf	btemp+2,c
  1193  004A52  5001               	movf	btemp+1,w,c
  1194  004A54  20F4               	addwfc	prodh,w,c
  1195  004A56  6E03               	movwf	btemp+3,c
  1196  004A58  0E02               	movlw	2
  1197  004A5A  2602               	addwf	btemp+2,f,c
  1198  004A5C  0E00               	movlw	0
  1199  004A5E  2203               	addwfc	btemp+3,f,c
  1200  004A60  C002  FFF6         	movff	btemp+2,tblptrl
  1201  004A64  C003  FFF7         	movff	btemp+3,tblptrh
  1202  004A68  0E0F               	movlw	(high __ramtop+-1)
  1203  004A6A  64F7               	cpfsgt	tblptrh,c
  1204  004A6C  D003               	bra	u417
  1205  004A6E  0008               	tblrd		*
  1206  004A70  50F5               	movf	tablat,w,c
  1207  004A72  D005               	bra	u410
  1208  004A74                     u417:
  1209  004A74  CFF6 FFE9          	movff	tblptrl,fsr0l
  1210  004A78  CFF7 FFEA          	movff	tblptrh,fsr0h
  1211  004A7C  50EF               	movf	indf0,w,c
  1212  004A7E                     u410:
  1213  004A7E  5DFD               	subwf	(?a_KolProc+1)^(__Lparam& (0+65280)),w
  1214  004A80  E301 D26C          	bc	l52
  1215                           ;wsw2.c: 423: {
  1216  004A84  50D9               	movf	fsr2l,w,c
  1217  004A86  0D03               	mullw	3
  1218  004A88  0EB0               	movlw	low _KTim
  1219  004A8A  24F3               	addwf	prodl,w,c
  1220  004A8C  6EE9               	movwf	fsr0l,c
  1221  004A8E  0E00               	movlw	high _KTim
  1222  004A90  20F4               	addwfc	prodh,w,c
  1223  004A92  6EEA               	movwf	fsr0h,c
  1224  004A94  2AEF               	incf	indf0,f,c
  1225                           ;wsw2.c: 425: if (KTim[j].ncS>=10)
  1226  004A96  50D9               	movf	fsr2l,w,c
  1227  004A98  0D03               	mullw	3
  1228  004A9A  0EB0               	movlw	low _KTim
  1229  004A9C  24F3               	addwf	prodl,w,c
  1230  004A9E  6EE9               	movwf	fsr0l,c
  1231  004AA0  0E00               	movlw	high _KTim
  1232  004AA2  20F4               	addwfc	prodh,w,c
  1233  004AA4  6EEA               	movwf	fsr0h,c
  1234  004AA6  50EF               	movf	indf0,w,c
  1235  004AA8  6E00               	movwf	btemp,c
  1236  004AAA  0E0A               	movlw	10
  1237  004AAC  5C00               	subwf	btemp,w,c
  1238  004AAE  E312               	bnc	l53
  1239                           ;wsw2.c: 426: {
  1240  004AB0  50D9               	movf	fsr2l,w,c
  1241  004AB2  0D03               	mullw	3
  1242  004AB4  0EB0               	movlw	low _KTim
  1243  004AB6  24F3               	addwf	prodl,w,c
  1244  004AB8  6EE9               	movwf	fsr0l,c
  1245  004ABA  0E00               	movlw	high _KTim
  1246  004ABC  20F4               	addwfc	prodh,w,c
  1247  004ABE  6EEA               	movwf	fsr0h,c
  1248  004AC0  6AEF               	clrf	indf0,c
  1249                           ;wsw2.c: 428: KTim[j].ndS++;
  1250  004AC2  50D9               	movf	fsr2l,w,c
  1251  004AC4  0D03               	mullw	3
  1252  004AC6  0EB1               	movlw	low (_KTim+1)
  1253  004AC8  24F3               	addwf	prodl,w,c
  1254  004ACA  6EE9               	movwf	fsr0l,c
  1255  004ACC  0E00               	movlw	high (_KTim+1)
  1256  004ACE  20F4               	addwfc	prodh,w,c
  1257  004AD0  6EEA               	movwf	fsr0h,c
  1258  004AD2  2AEF               	incf	indf0,f,c
  1259  004AD4                     l53:
  1260                           ;wsw2.c: 429: }
  1261  004AD4  50D9               	movf	fsr2l,w,c
  1262  004AD6  0D03               	mullw	3
  1263  004AD8  50F3               	movf	prodl,w,c
  1264  004ADA  0F86               	addlw	low _Klj
  1265  004ADC  6EF6               	movwf	tblptrl,c
  1266  004ADE  50F4               	movf	prodh,w,c
  1267  004AE0  6EF7               	movwf	tblptrh,c
  1268  004AE2  0E10               	movlw	high _Klj
  1269  004AE4  22F7               	addwfc	tblptrh,f,c
  1270  004AE6  0009               	tblrd		*+
  1271  004AE8  CFF5 F000          	movff	tablat,btemp
  1272  004AEC  0009               	tblrd		*+
  1273  004AEE  CFF5 F001          	movff	tablat,btemp+1
  1274  004AF2  C000  FFF6         	movff	btemp,tblptrl
  1275  004AF6  C001  FFF7         	movff	btemp+1,tblptrh
  1276  004AFA  0E0F               	movlw	(high __ramtop+-1)
  1277  004AFC  64F7               	cpfsgt	tblptrh,c
  1278  004AFE  D007               	bra	u447
  1279  004B00  0009               	tblrd		*+
  1280  004B02  CFF5 F000          	movff	tablat,btemp
  1281  004B06  0009               	tblrd		*+
  1282  004B08  CFF5 F001          	movff	tablat,btemp+1
  1283  004B0C  D008               	bra	u440
  1284  004B0E                     u447:
  1285  004B0E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1286  004B12  CFF7 FFEA          	movff	tblptrh,fsr0h
  1287  004B16  CFEE F000          	movff	postinc0,btemp
  1288  004B1A  CFEE F001          	movff	postinc0,btemp+1
  1289  004B1E                     u440:
  1290  004B1E  0100               	movlb	__Lparam shr (0+8)
  1291  004B20  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1292  004B22  0D02               	mullw	2
  1293  004B24  5000               	movf	btemp,w,c
  1294  004B26  24F3               	addwf	prodl,w,c
  1295  004B28  6E02               	movwf	btemp+2,c
  1296  004B2A  5001               	movf	btemp+1,w,c
  1297  004B2C  20F4               	addwfc	prodh,w,c
  1298  004B2E  6E03               	movwf	btemp+3,c
  1299  004B30  C002  FFF6         	movff	btemp+2,tblptrl
  1300  004B34  C003  FFF7         	movff	btemp+3,tblptrh
  1301  004B38  0E0F               	movlw	(high __ramtop+-1)
  1302  004B3A  64F7               	cpfsgt	tblptrh,c
  1303  004B3C  D007               	bra	u457
  1304  004B3E  0009               	tblrd		*+
  1305  004B40  CFF5 F000          	movff	tablat,btemp
  1306  004B44  0009               	tblrd		*+
  1307  004B46  CFF5 F001          	movff	tablat,btemp+1
  1308  004B4A  D008               	bra	u450
  1309  004B4C                     u457:
  1310  004B4C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1311  004B50  CFF7 FFEA          	movff	tblptrh,fsr0h
  1312  004B54  CFEE F000          	movff	postinc0,btemp
  1313  004B58  CFEE F001          	movff	postinc0,btemp+1
  1314  004B5C                     u450:
  1315  004B5C  5001               	movf	btemp+1,w,c
  1316  004B5E  1000               	iorwf	btemp,w,c
  1317  004B60  E001 D11F          	bnz	l54
  1318                           ;wsw2.c: 431: {
  1319  004B64  50D9               	movf	fsr2l,w,c
  1320  004B66  0D03               	mullw	3
  1321  004B68  50F3               	movf	prodl,w,c
  1322  004B6A  0F86               	addlw	low _Klj
  1323  004B6C  6EF6               	movwf	tblptrl,c
  1324  004B6E  50F4               	movf	prodh,w,c
  1325  004B70  6EF7               	movwf	tblptrh,c
  1326  004B72  0E10               	movlw	high _Klj
  1327  004B74  22F7               	addwfc	tblptrh,f,c
  1328  004B76  0009               	tblrd		*+
  1329  004B78  CFF5 F000          	movff	tablat,btemp
  1330  004B7C  0009               	tblrd		*+
  1331  004B7E  CFF5 F001          	movff	tablat,btemp+1
  1332  004B82  0E04               	movlw	4
  1333  004B84  2600               	addwf	btemp,f,c
  1334  004B86  0E00               	movlw	0
  1335  004B88  2201               	addwfc	btemp+1,f,c
  1336  004B8A  C000  FFF6         	movff	btemp,tblptrl
  1337  004B8E  C001  FFF7         	movff	btemp+1,tblptrh
  1338  004B92  0E0F               	movlw	(high __ramtop+-1)
  1339  004B94  64F7               	cpfsgt	tblptrh,c
  1340  004B96  D007               	bra	u477
  1341  004B98  0009               	tblrd		*+
  1342  004B9A  CFF5 F000          	movff	tablat,btemp
  1343  004B9E  0009               	tblrd		*+
  1344  004BA0  CFF5 F001          	movff	tablat,btemp+1
  1345  004BA4  D008               	bra	u470
  1346  004BA6                     u477:
  1347  004BA6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1348  004BAA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1349  004BAE  CFEE F000          	movff	postinc0,btemp
  1350  004BB2  CFEE F001          	movff	postinc0,btemp+1
  1351  004BB6                     u470:
  1352  004BB6  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1353  004BB8  0D02               	mullw	2
  1354  004BBA  5000               	movf	btemp,w,c
  1355  004BBC  24F3               	addwf	prodl,w,c
  1356  004BBE  6E02               	movwf	btemp+2,c
  1357  004BC0  5001               	movf	btemp+1,w,c
  1358  004BC2  20F4               	addwfc	prodh,w,c
  1359  004BC4  6E03               	movwf	btemp+3,c
  1360  004BC6  C002  FFF6         	movff	btemp+2,tblptrl
  1361  004BCA  C003  FFF7         	movff	btemp+3,tblptrh
  1362  004BCE  0E0F               	movlw	(high __ramtop+-1)
  1363  004BD0  64F7               	cpfsgt	tblptrh,c
  1364  004BD2  D007               	bra	u487
  1365  004BD4  0009               	tblrd		*+
  1366  004BD6  CFF5 F000          	movff	tablat,btemp
  1367  004BDA  0009               	tblrd		*+
  1368  004BDC  CFF5 F001          	movff	tablat,btemp+1
  1369  004BE0  D008               	bra	u480
  1370  004BE2                     u487:
  1371  004BE2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1372  004BE6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1373  004BEA  CFEE F000          	movff	postinc0,btemp
  1374  004BEE  CFEE F001          	movff	postinc0,btemp+1
  1375  004BF2                     u480:
  1376  004BF2  50D9               	movf	fsr2l,w,c
  1377  004BF4  0D03               	mullw	3
  1378  004BF6  50F3               	movf	prodl,w,c
  1379  004BF8  0F86               	addlw	low _Klj
  1380  004BFA  6EF6               	movwf	tblptrl,c
  1381  004BFC  50F4               	movf	prodh,w,c
  1382  004BFE  6EF7               	movwf	tblptrh,c
  1383  004C00  0E10               	movlw	high _Klj
  1384  004C02  22F7               	addwfc	tblptrh,f,c
  1385  004C04  0009               	tblrd		*+
  1386  004C06  CFF5 F002          	movff	tablat,btemp+2
  1387  004C0A  0009               	tblrd		*+
  1388  004C0C  CFF5 F003          	movff	tablat,btemp+3
  1389  004C10  0E08               	movlw	8
  1390  004C12  2602               	addwf	btemp+2,f,c
  1391  004C14  0E00               	movlw	0
  1392  004C16  2203               	addwfc	btemp+3,f,c
  1393  004C18  C002  FFF6         	movff	btemp+2,tblptrl
  1394  004C1C  C003  FFF7         	movff	btemp+3,tblptrh
  1395  004C20  0E0F               	movlw	(high __ramtop+-1)
  1396  004C22  64F7               	cpfsgt	tblptrh,c
  1397  004C24  D007               	bra	u497
  1398  004C26  0009               	tblrd		*+
  1399  004C28  CFF5 F002          	movff	tablat,btemp+2
  1400  004C2C  0009               	tblrd		*+
  1401  004C2E  CFF5 F003          	movff	tablat,btemp+3
  1402  004C32  D008               	bra	u490
  1403  004C34                     u497:
  1404  004C34  CFF6 FFE9          	movff	tblptrl,fsr0l
  1405  004C38  CFF7 FFEA          	movff	tblptrh,fsr0h
  1406  004C3C  CFEE F002          	movff	postinc0,btemp+2
  1407  004C40  CFEE F003          	movff	postinc0,btemp+3
  1408  004C44                     u490:
  1409  004C44  C002  FFF6         	movff	btemp+2,tblptrl
  1410  004C48  C003  FFF7         	movff	btemp+3,tblptrh
  1411  004C4C  0E0F               	movlw	(high __ramtop+-1)
  1412  004C4E  64F7               	cpfsgt	tblptrh,c
  1413  004C50  D007               	bra	u507
  1414  004C52  0009               	tblrd		*+
  1415  004C54  CFF5 F002          	movff	tablat,btemp+2
  1416  004C58  0009               	tblrd		*+
  1417  004C5A  CFF5 F003          	movff	tablat,btemp+3
  1418  004C5E  D008               	bra	u500
  1419  004C60                     u507:
  1420  004C60  CFF6 FFE9          	movff	tblptrl,fsr0l
  1421  004C64  CFF7 FFEA          	movff	tblptrh,fsr0h
  1422  004C68  CFEE F002          	movff	postinc0,btemp+2
  1423  004C6C  CFEE F003          	movff	postinc0,btemp+3
  1424  004C70                     u500:
  1425  004C70  C002  FFE9         	movff	btemp+2,fsr0l
  1426  004C74  C003  FFEA         	movff	btemp+3,fsr0h
  1427  004C78  C000  FFEE         	movff	btemp,postinc0
  1428  004C7C  C001  FFED         	movff	btemp+1,postdec0
  1429                           ;wsw2.c: 433: (*(*(*Klj[j].KL).KOut).CAdr).Dt=(*
      +                          Klj[j].KL).KWP[i].PWrt;
  1430  004C80  50D9               	movf	fsr2l,w,c
  1431  004C82  0D03               	mullw	3
  1432  004C84  50F3               	movf	prodl,w,c
  1433  004C86  0F86               	addlw	low _Klj
  1434  004C88  6EF6               	movwf	tblptrl,c
  1435  004C8A  50F4               	movf	prodh,w,c
  1436  004C8C  6EF7               	movwf	tblptrh,c
  1437  004C8E  0E10               	movlw	high _Klj
  1438  004C90  22F7               	addwfc	tblptrh,f,c
  1439  004C92  0009               	tblrd		*+
  1440  004C94  CFF5 F000          	movff	tablat,btemp
  1441  004C98  0009               	tblrd		*+
  1442  004C9A  CFF5 F001          	movff	tablat,btemp+1
  1443  004C9E  0E02               	movlw	2
  1444  004CA0  2600               	addwf	btemp,f,c
  1445  004CA2  0E00               	movlw	0
  1446  004CA4  2201               	addwfc	btemp+1,f,c
  1447  004CA6  C000  FFF6         	movff	btemp,tblptrl
  1448  004CAA  C001  FFF7         	movff	btemp+1,tblptrh
  1449  004CAE  0E0F               	movlw	(high __ramtop+-1)
  1450  004CB0  64F7               	cpfsgt	tblptrh,c
  1451  004CB2  D007               	bra	u517
  1452  004CB4  0009               	tblrd		*+
  1453  004CB6  CFF5 F000          	movff	tablat,btemp
  1454  004CBA  0009               	tblrd		*+
  1455  004CBC  CFF5 F001          	movff	tablat,btemp+1
  1456  004CC0  D008               	bra	u510
  1457  004CC2                     u517:
  1458  004CC2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1459  004CC6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1460  004CCA  CFEE F000          	movff	postinc0,btemp
  1461  004CCE  CFEE F001          	movff	postinc0,btemp+1
  1462  004CD2                     u510:
  1463  004CD2  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1464  004CD4  0D03               	mullw	3
  1465  004CD6  5000               	movf	btemp,w,c
  1466  004CD8  24F3               	addwf	prodl,w,c
  1467  004CDA  6E02               	movwf	btemp+2,c
  1468  004CDC  5001               	movf	btemp+1,w,c
  1469  004CDE  20F4               	addwfc	prodh,w,c
  1470  004CE0  6E03               	movwf	btemp+3,c
  1471  004CE2  C002  FFF6         	movff	btemp+2,tblptrl
  1472  004CE6  C003  FFF7         	movff	btemp+3,tblptrh
  1473  004CEA  0E0F               	movlw	(high __ramtop+-1)
  1474  004CEC  64F7               	cpfsgt	tblptrh,c
  1475  004CEE  D007               	bra	u527
  1476  004CF0  0009               	tblrd		*+
  1477  004CF2  CFF5 F000          	movff	tablat,btemp
  1478  004CF6  0009               	tblrd		*+
  1479  004CF8  CFF5 F001          	movff	tablat,btemp+1
  1480  004CFC  D008               	bra	u520
  1481  004CFE                     u527:
  1482  004CFE  CFF6 FFE9          	movff	tblptrl,fsr0l
  1483  004D02  CFF7 FFEA          	movff	tblptrh,fsr0h
  1484  004D06  CFEE F000          	movff	postinc0,btemp
  1485  004D0A  CFEE F001          	movff	postinc0,btemp+1
  1486  004D0E                     u520:
  1487  004D0E  50D9               	movf	fsr2l,w,c
  1488  004D10  0D03               	mullw	3
  1489  004D12  50F3               	movf	prodl,w,c
  1490  004D14  0F86               	addlw	low _Klj
  1491  004D16  6EF6               	movwf	tblptrl,c
  1492  004D18  50F4               	movf	prodh,w,c
  1493  004D1A  6EF7               	movwf	tblptrh,c
  1494  004D1C  0E10               	movlw	high _Klj
  1495  004D1E  22F7               	addwfc	tblptrh,f,c
  1496  004D20  0009               	tblrd		*+
  1497  004D22  CFF5 F002          	movff	tablat,btemp+2
  1498  004D26  0009               	tblrd		*+
  1499  004D28  CFF5 F003          	movff	tablat,btemp+3
  1500  004D2C  0E08               	movlw	8
  1501  004D2E  2602               	addwf	btemp+2,f,c
  1502  004D30  0E00               	movlw	0
  1503  004D32  2203               	addwfc	btemp+3,f,c
  1504  004D34  C002  FFF6         	movff	btemp+2,tblptrl
  1505  004D38  C003  FFF7         	movff	btemp+3,tblptrh
  1506  004D3C  0E0F               	movlw	(high __ramtop+-1)
  1507  004D3E  64F7               	cpfsgt	tblptrh,c
  1508  004D40  D007               	bra	u537
  1509  004D42  0009               	tblrd		*+
  1510  004D44  CFF5 F002          	movff	tablat,btemp+2
  1511  004D48  0009               	tblrd		*+
  1512  004D4A  CFF5 F003          	movff	tablat,btemp+3
  1513  004D4E  D008               	bra	u530
  1514  004D50                     u537:
  1515  004D50  CFF6 FFE9          	movff	tblptrl,fsr0l
  1516  004D54  CFF7 FFEA          	movff	tblptrh,fsr0h
  1517  004D58  CFEE F002          	movff	postinc0,btemp+2
  1518  004D5C  CFEE F003          	movff	postinc0,btemp+3
  1519  004D60                     u530:
  1520  004D60  C002  FFF6         	movff	btemp+2,tblptrl
  1521  004D64  C003  FFF7         	movff	btemp+3,tblptrh
  1522  004D68  0E0F               	movlw	(high __ramtop+-1)
  1523  004D6A  64F7               	cpfsgt	tblptrh,c
  1524  004D6C  D007               	bra	u547
  1525  004D6E  0009               	tblrd		*+
  1526  004D70  CFF5 F002          	movff	tablat,btemp+2
  1527  004D74  0009               	tblrd		*+
  1528  004D76  CFF5 F003          	movff	tablat,btemp+3
  1529  004D7A  D008               	bra	u540
  1530  004D7C                     u547:
  1531  004D7C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1532  004D80  CFF7 FFEA          	movff	tblptrh,fsr0h
  1533  004D84  CFEE F002          	movff	postinc0,btemp+2
  1534  004D88  CFEE F003          	movff	postinc0,btemp+3
  1535  004D8C                     u540:
  1536  004D8C  0E02               	movlw	2
  1537  004D8E  2402               	addwf	btemp+2,w,c
  1538  004D90  6EE9               	movwf	fsr0l,c
  1539  004D92  0E00               	movlw	0
  1540  004D94  2003               	addwfc	btemp+3,w,c
  1541  004D96  6EEA               	movwf	fsr0h,c
  1542  004D98  C000  FFEE         	movff	btemp,postinc0
  1543  004D9C  C001  FFED         	movff	btemp+1,postdec0
  1544                           ;wsw2.c: 434: }else (*(*(*Klj[j].KL).KOut).CAdr)
      +                          =*((*Klj[j].KL).KAP[i].PAdr);
  1545  004DA0  D095               	goto	l55
  1546  004DA2                     l54:
  1547  004DA2  50D9               	movf	fsr2l,w,c
  1548  004DA4  0D03               	mullw	3
  1549  004DA6  50F3               	movf	prodl,w,c
  1550  004DA8  0F86               	addlw	low _Klj
  1551  004DAA  6EF6               	movwf	tblptrl,c
  1552  004DAC  50F4               	movf	prodh,w,c
  1553  004DAE  6EF7               	movwf	tblptrh,c
  1554  004DB0  0E10               	movlw	high _Klj
  1555  004DB2  22F7               	addwfc	tblptrh,f,c
  1556  004DB4  0009               	tblrd		*+
  1557  004DB6  CFF5 F000          	movff	tablat,btemp
  1558  004DBA  0009               	tblrd		*+
  1559  004DBC  CFF5 F001          	movff	tablat,btemp+1
  1560  004DC0  C000  FFF6         	movff	btemp,tblptrl
  1561  004DC4  C001  FFF7         	movff	btemp+1,tblptrh
  1562  004DC8  0E0F               	movlw	(high __ramtop+-1)
  1563  004DCA  64F7               	cpfsgt	tblptrh,c
  1564  004DCC  D007               	bra	u557
  1565  004DCE  0009               	tblrd		*+
  1566  004DD0  CFF5 F000          	movff	tablat,btemp
  1567  004DD4  0009               	tblrd		*+
  1568  004DD6  CFF5 F001          	movff	tablat,btemp+1
  1569  004DDA  D008               	bra	u550
  1570  004DDC                     u557:
  1571  004DDC  CFF6 FFE9          	movff	tblptrl,fsr0l
  1572  004DE0  CFF7 FFEA          	movff	tblptrh,fsr0h
  1573  004DE4  CFEE F000          	movff	postinc0,btemp
  1574  004DE8  CFEE F001          	movff	postinc0,btemp+1
  1575  004DEC                     u550:
  1576  004DEC  0100               	movlb	__Lparam shr (0+8)
  1577  004DEE  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1578  004DF0  0D02               	mullw	2
  1579  004DF2  5000               	movf	btemp,w,c
  1580  004DF4  24F3               	addwf	prodl,w,c
  1581  004DF6  6E02               	movwf	btemp+2,c
  1582  004DF8  5001               	movf	btemp+1,w,c
  1583  004DFA  20F4               	addwfc	prodh,w,c
  1584  004DFC  6E03               	movwf	btemp+3,c
  1585  004DFE  C002  FFF6         	movff	btemp+2,tblptrl
  1586  004E02  C003  FFF7         	movff	btemp+3,tblptrh
  1587  004E06  0E0F               	movlw	(high __ramtop+-1)
  1588  004E08  64F7               	cpfsgt	tblptrh,c
  1589  004E0A  D007               	bra	u567
  1590  004E0C  0009               	tblrd		*+
  1591  004E0E  CFF5 F000          	movff	tablat,btemp
  1592  004E12  0009               	tblrd		*+
  1593  004E14  CFF5 F001          	movff	tablat,btemp+1
  1594  004E18  D008               	bra	u560
  1595  004E1A                     u567:
  1596  004E1A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1597  004E1E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1598  004E22  CFEE F000          	movff	postinc0,btemp
  1599  004E26  CFEE F001          	movff	postinc0,btemp+1
  1600  004E2A                     u560:
  1601  004E2A  C000  FFE1         	movff	btemp,fsr1l
  1602  004E2E  C001  FFE2         	movff	btemp+1,fsr1h
  1603  004E32  50D9               	movf	fsr2l,w,c
  1604  004E34  0D03               	mullw	3
  1605  004E36  50F3               	movf	prodl,w,c
  1606  004E38  0F86               	addlw	low _Klj
  1607  004E3A  6EF6               	movwf	tblptrl,c
  1608  004E3C  50F4               	movf	prodh,w,c
  1609  004E3E  6EF7               	movwf	tblptrh,c
  1610  004E40  0E10               	movlw	high _Klj
  1611  004E42  22F7               	addwfc	tblptrh,f,c
  1612  004E44  0009               	tblrd		*+
  1613  004E46  CFF5 F000          	movff	tablat,btemp
  1614  004E4A  0009               	tblrd		*+
  1615  004E4C  CFF5 F001          	movff	tablat,btemp+1
  1616  004E50  0E08               	movlw	8
  1617  004E52  2600               	addwf	btemp,f,c
  1618  004E54  0E00               	movlw	0
  1619  004E56  2201               	addwfc	btemp+1,f,c
  1620  004E58  C000  FFF6         	movff	btemp,tblptrl
  1621  004E5C  C001  FFF7         	movff	btemp+1,tblptrh
  1622  004E60  0E0F               	movlw	(high __ramtop+-1)
  1623  004E62  64F7               	cpfsgt	tblptrh,c
  1624  004E64  D007               	bra	u577
  1625  004E66  0009               	tblrd		*+
  1626  004E68  CFF5 F000          	movff	tablat,btemp
  1627  004E6C  0009               	tblrd		*+
  1628  004E6E  CFF5 F001          	movff	tablat,btemp+1
  1629  004E72  D008               	bra	u570
  1630  004E74                     u577:
  1631  004E74  CFF6 FFE9          	movff	tblptrl,fsr0l
  1632  004E78  CFF7 FFEA          	movff	tblptrh,fsr0h
  1633  004E7C  CFEE F000          	movff	postinc0,btemp
  1634  004E80  CFEE F001          	movff	postinc0,btemp+1
  1635  004E84                     u570:
  1636  004E84  C000  FFF6         	movff	btemp,tblptrl
  1637  004E88  C001  FFF7         	movff	btemp+1,tblptrh
  1638  004E8C  0E0F               	movlw	(high __ramtop+-1)
  1639  004E8E  64F7               	cpfsgt	tblptrh,c
  1640  004E90  D007               	bra	u587
  1641  004E92  0009               	tblrd		*+
  1642  004E94  CFF5 F000          	movff	tablat,btemp
  1643  004E98  0009               	tblrd		*+
  1644  004E9A  CFF5 F001          	movff	tablat,btemp+1
  1645  004E9E  D008               	bra	u580
  1646  004EA0                     u587:
  1647  004EA0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1648  004EA4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1649  004EA8  CFEE F000          	movff	postinc0,btemp
  1650  004EAC  CFEE F001          	movff	postinc0,btemp+1
  1651  004EB0                     u580:
  1652  004EB0  C000  FFE9         	movff	btemp,fsr0l
  1653  004EB4  C001  FFEA         	movff	btemp+1,fsr0h
  1654  004EB8  CFE6 FFEE          	movff	postinc1,postinc0
  1655  004EBC  CFE6 FFEE          	movff	postinc1,postinc0
  1656  004EC0  CFE6 FFEE          	movff	postinc1,postinc0
  1657  004EC4  CFE5 FFED          	movff	postdec1,postdec0
  1658  004EC8  52ED               	movf	postdec0,f,c
  1659  004ECA  52ED               	movf	postdec0,f,c
  1660  004ECC                     l55:
  1661                           ;wsw2.c: 435: (*(*(*Klj[j].KL).KOut).CAdr).St.fo
      +                          cus=1;
  1662  004ECC  50D9               	movf	fsr2l,w,c
  1663  004ECE  0D03               	mullw	3
  1664  004ED0  50F3               	movf	prodl,w,c
  1665  004ED2  0F86               	addlw	low _Klj
  1666  004ED4  6EF6               	movwf	tblptrl,c
  1667  004ED6  50F4               	movf	prodh,w,c
  1668  004ED8  6EF7               	movwf	tblptrh,c
  1669  004EDA  0E10               	movlw	high _Klj
  1670  004EDC  22F7               	addwfc	tblptrh,f,c
  1671  004EDE  0009               	tblrd		*+
  1672  004EE0  CFF5 F000          	movff	tablat,btemp
  1673  004EE4  0009               	tblrd		*+
  1674  004EE6  CFF5 F001          	movff	tablat,btemp+1
  1675  004EEA  0E08               	movlw	8
  1676  004EEC  2600               	addwf	btemp,f,c
  1677  004EEE  0E00               	movlw	0
  1678  004EF0  2201               	addwfc	btemp+1,f,c
  1679  004EF2  C000  FFF6         	movff	btemp,tblptrl
  1680  004EF6  C001  FFF7         	movff	btemp+1,tblptrh
  1681  004EFA  0E0F               	movlw	(high __ramtop+-1)
  1682  004EFC  64F7               	cpfsgt	tblptrh,c
  1683  004EFE  D007               	bra	u597
  1684  004F00  0009               	tblrd		*+
  1685  004F02  CFF5 F000          	movff	tablat,btemp
  1686  004F06  0009               	tblrd		*+
  1687  004F08  CFF5 F001          	movff	tablat,btemp+1
  1688  004F0C  D008               	bra	u590
  1689  004F0E                     u597:
  1690  004F0E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1691  004F12  CFF7 FFEA          	movff	tblptrh,fsr0h
  1692  004F16  CFEE F000          	movff	postinc0,btemp
  1693  004F1A  CFEE F001          	movff	postinc0,btemp+1
  1694  004F1E                     u590:
  1695  004F1E  C000  FFF6         	movff	btemp,tblptrl
  1696  004F22  C001  FFF7         	movff	btemp+1,tblptrh
  1697  004F26  0E0F               	movlw	(high __ramtop+-1)
  1698  004F28  64F7               	cpfsgt	tblptrh,c
  1699  004F2A  D007               	bra	u607
  1700  004F2C  0009               	tblrd		*+
  1701  004F2E  CFF5 F000          	movff	tablat,btemp
  1702  004F32  0009               	tblrd		*+
  1703  004F34  CFF5 F001          	movff	tablat,btemp+1
  1704  004F38  D008               	bra	u600
  1705  004F3A                     u607:
  1706  004F3A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1707  004F3E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1708  004F42  CFEE F000          	movff	postinc0,btemp
  1709  004F46  CFEE F001          	movff	postinc0,btemp+1
  1710  004F4A                     u600:
  1711  004F4A  C000  FFE9         	movff	btemp,fsr0l
  1712  004F4E  C001  FFEA         	movff	btemp+1,fsr0h
  1713  004F52  50EF               	movf	indf0,w,c
  1714  004F54  0BFE               	andlw	-2
  1715  004F56  0901               	iorlw	1
  1716  004F58  6EEF               	movwf	indf0,c
  1717                           ;wsw2.c: 436: break;
  1718  004F5A  D056               	goto	l35
  1719  004F5C                     l52:
  1720                           ;wsw2.c: 438: {
  1721  004F5C  50D9               	movf	fsr2l,w,c
  1722  004F5E  0D03               	mullw	3
  1723  004F60  0EB0               	movlw	low _KTim
  1724  004F62  24F3               	addwf	prodl,w,c
  1725  004F64  6EE9               	movwf	fsr0l,c
  1726  004F66  0E00               	movlw	high _KTim
  1727  004F68  20F4               	addwfc	prodh,w,c
  1728  004F6A  6EEA               	movwf	fsr0h,c
  1729  004F6C  6AEF               	clrf	indf0,c
  1730                           ;wsw2.c: 440: KTim[j].ndS=0;
  1731  004F6E  50D9               	movf	fsr2l,w,c
  1732  004F70  0D03               	mullw	3
  1733  004F72  0EB1               	movlw	low (_KTim+1)
  1734  004F74  24F3               	addwf	prodl,w,c
  1735  004F76  6EE9               	movwf	fsr0l,c
  1736  004F78  0E00               	movlw	high (_KTim+1)
  1737  004F7A  20F4               	addwfc	prodh,w,c
  1738  004F7C  6EEA               	movwf	fsr0h,c
  1739  004F7E  6AEF               	clrf	indf0,c
  1740                           ;wsw2.c: 441: if (KInd[j].indeks>=Klj[j].nPzc-1)
  1741  004F80  50D9               	movf	fsr2l,w,c
  1742  004F82  0D03               	mullw	3
  1743  004F84  50F3               	movf	prodl,w,c
  1744  004F86  0F86               	addlw	low _Klj
  1745  004F88  6EF6               	movwf	tblptrl,c
  1746  004F8A  50F4               	movf	prodh,w,c
  1747  004F8C  6EF7               	movwf	tblptrh,c
  1748  004F8E  0E10               	movlw	high _Klj
  1749  004F90  22F7               	addwfc	tblptrh,f,c
  1750  004F92  0E02               	movlw	2
  1751  004F94  26F6               	addwf	tblptrl,f,c
  1752  004F96  0E00               	movlw	0
  1753  004F98  22F7               	addwfc	tblptrh,f,c
  1754  004F9A  0008               	tblrd		*
  1755  004F9C  50F5               	movf	tablat,w,c
  1756  004F9E  6E00               	movwf	btemp,c
  1757  004FA0  0FFF               	addlw	255
  1758  004FA2  6EF6               	movwf	tblptrl,c
  1759  004FA4  6AF7               	clrf	tblptrh,c
  1760  004FA6  0EFF               	movlw	255
  1761  004FA8  22F7               	addwfc	tblptrh,f,c
  1762  004FAA  50D9               	movf	fsr2l,w,c
  1763  004FAC  EE0F  F041         	lfsr	0,_KInd
  1764  004FB0  26E9               	addwf	fsr0l,f,c
  1765  004FB2  0E00               	movlw	0
  1766  004FB4  22EA               	addwfc	fsr0h,f,c
  1767  004FB6  30EF               	rrcf	indf0,w,c
  1768  004FB8  6E00               	movwf	btemp,c
  1769  004FBA  3000               	rrcf	btemp,w,c
  1770  004FBC  0B3F               	andlw	63
  1771  004FBE  6E00               	movwf	btemp,c
  1772  004FC0  C000  F002         	movff	btemp,btemp+2
  1773  004FC4  6A03               	clrf	btemp+3,c
  1774  004FC6  5003               	movf	btemp+3,w,c
  1775  004FC8  0A80               	xorlw	128
  1776  004FCA  6E00               	movwf	btemp,c
  1777  004FCC  50F7               	movf	tblptrh,w,c
  1778  004FCE  0A80               	xorlw	128
  1779  004FD0  5C00               	subwf	btemp,w,c
  1780  004FD2  E102               	bnz	u615
  1781  004FD4  50F6               	movf	tblptrl,w,c
  1782  004FD6  5C02               	subwf	btemp+2,w,c
  1783  004FD8                     u615:
  1784  004FD8  E313               	bnc	l36
  1785                           ;wsw2.c: 442: {
  1786  004FDA  50D9               	movf	fsr2l,w,c
  1787  004FDC  EE0F  F041         	lfsr	0,_KInd
  1788  004FE0  26E9               	addwf	fsr0l,f,c
  1789  004FE2  0E00               	movlw	0
  1790  004FE4  22EA               	addwfc	fsr0h,f,c
  1791  004FE6  0E03               	movlw	-253
  1792  004FE8  16EF               	andwf	indf0,f,c
  1793                           ;wsw2.c: 444: if(nC) KTim[j].cykl++;
  1794  004FEA  50E1               	movf	fsr1l,w,c
  1795  004FEC  E009               	bz	l36
  1796  004FEE  50D9               	movf	fsr2l,w,c
  1797  004FF0  0D03               	mullw	3
  1798  004FF2  0EB2               	movlw	low (_KTim+2)
  1799  004FF4  24F3               	addwf	prodl,w,c
  1800  004FF6  6EE9               	movwf	fsr0l,c
  1801  004FF8  0E00               	movlw	high (_KTim+2)
  1802  004FFA  20F4               	addwfc	prodh,w,c
  1803  004FFC  6EEA               	movwf	fsr0h,c
  1804  004FFE  2AEF               	incf	indf0,f,c
  1805  005000                     l36:
  1806  005000  0100               	movlb	__Lparam shr (0+8)
  1807  005002  2BFC               	incf	?a_KolProc^(__Lparam& (0+65280)),f,b
  1808  005004  EF3D  F023         	goto	l37
  1809  005008                     l35:
  1810  005008  2AD9               	incf	fsr2l,f,c
  1811  00500A  0E03               	movlw	3
  1812  00500C  64D9               	cpfsgt	fsr2l,c
  1813  00500E  EF71  F021         	goto	l20
  1814  005012  0C03               	retlw	3
  1815                           ;wsw2.c: 445: }
  1816  005014                     __end_of_KolProc:
  1817                           ;wsw2.c: 455: void SetPrWswData(void)
  1818                           ;wsw2.c: 456: {
  1819  005014                     _SetPrWswData:
  1820  000000                     
  1821                           ;wsw2.c: 457: unsigned char i;
  1822  005014  6AD9               	clrf	fsr2l,c
  1823  005016                     l60:
  1824                           ;wsw2.c: 459: {
  1825  005016  50D9               	movf	fsr2l,w,c
  1826  005018  0D04               	mullw	4
  1827  00501A  0EBC               	movlw	low _PWD
  1828  00501C  24F3               	addwf	prodl,w,c
  1829  00501E  6EE9               	movwf	fsr0l,c
  1830  005020  0E00               	movlw	high _PWD
  1831  005022  20F4               	addwfc	prodh,w,c
  1832  005024  6EEA               	movwf	fsr0h,c
  1833  005026  50EF               	movf	indf0,w,c
  1834  005028  6E00               	movwf	btemp,c
  1835  00502A  A000               	btfss	btemp,0,c
  1836  00502C  D013               	goto	l63
  1837                           ;wsw2.c: 461: {
  1838  00502E  50D9               	movf	fsr2l,w,c
  1839  005030  0D04               	mullw	4
  1840  005032  0EBC               	movlw	low _PWD
  1841  005034  24F3               	addwf	prodl,w,c
  1842  005036  6EE9               	movwf	fsr0l,c
  1843  005038  0E00               	movlw	high _PWD
  1844  00503A  20F4               	addwfc	prodh,w,c
  1845  00503C  6EEA               	movwf	fsr0h,c
  1846  00503E  CFEE F0AC          	movff	postinc0,_WswData
  1847  005042  CFEE F0AD          	movff	postinc0,_WswData+1
  1848  005046  CFEE F0AE          	movff	postinc0,_WswData+2
  1849  00504A  CFED F0AF          	movff	postdec0,_WswData+3
  1850  00504E  52ED               	movf	postdec0,f,c
  1851  005050  52ED               	movf	postdec0,f,c
  1852                           ;wsw2.c: 463: return;
  1853  005052  0012               	return	
  1854  005054                     l63:
  1855                           ;wsw2.c: 464: };
  1856  005054  2AD9               	incf	fsr2l,f,c
  1857  005056  0E04               	movlw	4
  1858  005058  64D9               	cpfsgt	fsr2l,c
  1859  00505A  D7DD               	goto	l60
  1860                           ;wsw2.c: 465: }
  1861  00505C  C0D0  F0AC         	movff	_PWD+20,_WswData
  1862  005060  C0D1  F0AD         	movff	_PWD+21,_WswData+1
  1863  005064  C0D2  F0AE         	movff	_PWD+22,_WswData+2
  1864  005068  C0D3  F0AF         	movff	_PWD+23,_WswData+3
  1865                           ;wsw2.c: 467: }
  1866  00506C  0C04               	retlw	4
  1867  00506E                     __end_of_SetPrWswData:
  1868                           ;wsw2.c: 469: void Swbty(unsigned char dtd);
  1869                           ;wsw2.c: 470: void Rwbty(unsigned char dtd);
  1870                           ;wsw2.c: 472: void FormatWswData(void)
  1871                           ;wsw2.c: 473: {
  1872  00506E                     _FormatWswData:
  1873  000000                     
  1874                           ;wsw2.c: 474: unsigned char nrbty;
  1875  00506E  0100               	movlb	_WswData shr (0+8)
  1876  005070  A5AC               	btfss	_WswData& (0+255),2,b
  1877  005072  D019               	goto	l65
  1878                           ;wsw2.c: 477: {
  1879  005074  C0AF  F000         	movff	_WswData+3,btemp
  1880  005078  0EF0               	movlw	-16
  1881  00507A  1600               	andwf	btemp,f,c
  1882  00507C  3A00               	swapf	btemp,f,c
  1883  00507E  0E0F               	movlw	15
  1884  005080  1600               	andwf	btemp,f,c
  1885  005082  C000  F002         	movff	btemp,btemp+2
  1886  005086  6A03               	clrf	btemp+3,c
  1887  005088  5002               	movf	btemp+2,w,c
  1888  00508A  0F92               	addlw	low _Znak
  1889  00508C  6EF6               	movwf	tblptrl,c
  1890  00508E  5003               	movf	btemp+3,w,c
  1891  005090  6EF7               	movwf	tblptrh,c
  1892  005092  0E10               	movlw	high _Znak
  1893  005094  22F7               	addwfc	tblptrh,f,c
  1894  005096  0008               	tblrd		*
  1895  005098  CFF5 F0AA          	movff	tablat,_LedData+1
  1896                           ;wsw2.c: 479: LedData.dLed0=Znak[WswData.Dt.Data
      +                          0&0x0F];
  1897  00509C  C0AF  F000         	movff	_WswData+3,btemp
  1898  0050A0  0E0F               	movlw	15
  1899  0050A2  1600               	andwf	btemp,f,c
  1900  0050A4  D022               	goto	L1
  1901                           ;wsw2.c: 480: }else
  1902  0050A6                     l65:
  1903                           ;wsw2.c: 481: if(WswData.St.dec)
  1904  0050A6  0100               	movlb	_WswData shr (0+8)
  1905  0050A8  A3AC               	btfss	_WswData& (0+255),1,b
  1906  0050AA  D02D               	goto	l67
  1907                           ;wsw2.c: 482: {
  1908  0050AC  0E63               	movlw	99
  1909  0050AE  65AF               	cpfsgt	(_WswData+3)& (0+255),b
  1910  0050B0  D002               	goto	l68
  1911  0050B2  CFE8 F0AF          	movff	wreg,_WswData+3
  1912  0050B6                     l68:
  1913                           ;wsw2.c: 484: LedData.dLed1=Znak[WswData.Dt.Data
      +                          0/10];
  1914  0050B6  0E0A               	movlw	10
  1915  0050B8  6E01               	movwf	btemp+1,c
  1916  0050BA  C0AF  FFE8         	movff	_WswData+3,wreg
  1917  0050BE  EC8D  F049         	call	lbdiv
  1918  0050C2  6E00               	movwf	btemp,c
  1919  0050C4  C000  F002         	movff	btemp,btemp+2
  1920  0050C8  6A03               	clrf	btemp+3,c
  1921  0050CA  5002               	movf	btemp+2,w,c
  1922  0050CC  0F92               	addlw	low _Znak
  1923  0050CE  6EF6               	movwf	tblptrl,c
  1924  0050D0  5003               	movf	btemp+3,w,c
  1925  0050D2  6EF7               	movwf	tblptrh,c
  1926  0050D4  0E10               	movlw	high _Znak
  1927  0050D6  22F7               	addwfc	tblptrh,f,c
  1928  0050D8  0008               	tblrd		*
  1929  0050DA  CFF5 F0AA          	movff	tablat,_LedData+1
  1930                           ;wsw2.c: 485: LedData.dLed0=Znak[WswData.Dt.Data
      +                          0%10];
  1931  0050DE  0E0A               	movlw	10
  1932  0050E0  6E01               	movwf	btemp+1,c
  1933  0050E2  C0AF  FFE8         	movff	_WswData+3,wreg
  1934  0050E6  EC8D  F049         	call	lbmod
  1935  0050EA                     L1:
  1936  0050EA  C000  F002         	movff	btemp,btemp+2
  1937  0050EE  6A03               	clrf	btemp+3,c
  1938  0050F0  5002               	movf	btemp+2,w,c
  1939  0050F2  0F92               	addlw	low _Znak
  1940  0050F4  6EF6               	movwf	tblptrl,c
  1941  0050F6  5003               	movf	btemp+3,w,c
  1942  0050F8  6EF7               	movwf	tblptrh,c
  1943  0050FA  0E10               	movlw	high _Znak
  1944  0050FC  22F7               	addwfc	tblptrh,f,c
  1945  0050FE  0008               	tblrd		*
  1946  005100  CFF5 F0AB          	movff	tablat,_LedData+2
  1947                           ;wsw2.c: 486: }else
  1948  005104  D004               	goto	l66
  1949  005106                     l67:
  1950                           ;wsw2.c: 487: {
  1951  005106  C0AE  F0AA         	movff	_WswData+2,_LedData+1
  1952                           ;wsw2.c: 489: LedData.dLed0=WswData.Dt.Data0;
  1953  00510A  C0AF  F0AB         	movff	_WswData+3,_LedData+2
  1954  00510E                     l66:
  1955                           ;wsw2.c: 490: }
  1956  00510E  0100               	movlb	_WswData shr (0+8)
  1957  005110  A7AC               	btfss	_WswData& (0+255),3,b
  1958  005112  D00B               	goto	l70
  1959  005114  0E92               	movlw	low _Znak
  1960  005116  6EF6               	movwf	tblptrl,c
  1961  005118  0E10               	movlw	high _Znak
  1962  00511A  6EF7               	movwf	tblptrh,c
  1963  00511C  0008               	tblrd		*
  1964  00511E  50F5               	movf	tablat,w,c
  1965  005120  63AA               	cpfseq	(_LedData+1)& (0+255),b
  1966  005122  D003               	goto	l70
  1967                           ;wsw2.c: 492: LedData.dLed1=0b11111111;
  1968  005124  0EFF               	movlw	255
  1969  005126  CFE8 F0AA          	movff	wreg,_LedData+1
  1970  00512A                     l70:
  1971                           ;wsw2.c: 493: if (WswData.St.kropka0)
  1972  00512A  0100               	movlb	_WswData shr (0+8)
  1973  00512C  A9AC               	btfss	_WswData& (0+255),4,b
  1974  00512E  D005               	goto	l71
  1975                           ;wsw2.c: 494: LedData.dLed0=LedData.dLed0&0b1110
      +                          1111;
  1976  005130  C0AB  FFE8         	movff	_LedData+2,wreg
  1977  005134  0BEF               	andlw	-17
  1978  005136  CFE8 F0AB          	movff	wreg,_LedData+2
  1979  00513A                     l71:
  1980                           ;wsw2.c: 495: if (WswData.St.kropka1)
  1981  00513A  0100               	movlb	_WswData shr (0+8)
  1982  00513C  ABAC               	btfss	_WswData& (0+255),5,b
  1983  00513E  D005               	goto	l72
  1984                           ;wsw2.c: 496: LedData.dLed1=LedData.dLed1&0b1110
      +                          1111;
  1985  005140  C0AA  FFE8         	movff	_LedData+1,wreg
  1986  005144  0BEF               	andlw	-17
  1987  005146  CFE8 F0AA          	movff	wreg,_LedData+1
  1988  00514A                     l72:
  1989                           ;wsw2.c: 497: if (WswData.St.wygas0||LedData.set
      +                          Off)
  1990  00514A  0100               	movlb	_WswData shr (0+8)
  1991  00514C  BDAC               	btfsc	_WswData& (0+255),6,b
  1992  00514E  D002               	goto	u770
  1993  005150  A1A9               	btfss	_LedData& (0+255),0,b
  1994  005152  D003               	goto	l73
  1995  005154                     u770:
  1996                           ;wsw2.c: 498: LedData.dLed0=0b11111111;
  1997  005154  0EFF               	movlw	255
  1998  005156  CFE8 F0AB          	movff	wreg,_LedData+2
  1999  00515A                     l73:
  2000                           ;wsw2.c: 499: if (WswData.St.wygas1||LedData.set
      +                          Off)
  2001  00515A  0100               	movlb	_WswData shr (0+8)
  2002  00515C  BFAC               	btfsc	_WswData& (0+255),7,b
  2003  00515E  D002               	goto	u800
  2004  005160  A1A9               	btfss	_LedData& (0+255),0,b
  2005  005162  D003               	goto	l74
  2006  005164                     u800:
  2007                           ;wsw2.c: 500: LedData.dLed1=0b11111111;
  2008  005164  0EFF               	movlw	255
  2009  005166  CFE8 F0AA          	movff	wreg,_LedData+1
  2010  00516A                     l74:
  2011                           ;wsw2.c: 502: if (LedData.setOff)
  2012  00516A  0100               	movlb	_LedData shr (0+8)
  2013  00516C  A1A9               	btfss	_LedData& (0+255),0,b
  2014  00516E  D004               	goto	l75
  2015                           ;wsw2.c: 503: {
  2016  005170  010F               	movlb	(_wbty+1) shr (0+8)
  2017  005172  0E0F               	movlw	15
  2018  005174  1340               	iorwf	(_wbty+1)& (0+255),f,b
  2019                           ;wsw2.c: 511: }
  2020  005176  0C0F               	retlw	15
  2021  005178                     l75:
  2022                           ;wsw2.c: 512: else
  2023  005178  EE00  F0AD         	lfsr	0,_WswData+1
  2024  00517C  38EF               	swapf	indf0,w,c
  2025  00517E  0B0F               	andlw	15
  2026  005180  E015               	bz	l77
  2027  005182  0100               	movlb	(_WswData+1) shr (0+8)
  2028  005184  B5AD               	btfsc	(_WswData+1)& (0+255),2,b
  2029  005186  D002               	goto	u860
  2030  005188  A7AD               	btfss	(_WswData+1)& (0+255),3,b
  2031  00518A  D010               	goto	l77
  2032  00518C                     u860:
  2033                           ;wsw2.c: 514: {
  2034  00518C  0100               	movlb	(_WswData+1) shr (0+8)
  2035  00518E  A5AD               	btfss	(_WswData+1)& (0+255),2,b
  2036  005190  D005               	goto	l78
  2037  005192  EE00  F0AD         	lfsr	0,_WswData+1
  2038  005196  38EF               	swapf	indf0,w,c
  2039  005198  0B0F               	andlw	15
  2040  00519A  D08C               	goto	_Swbty
  2041  00519C                     l78:
  2042                           ;wsw2.c: 518: else
  2043  00519C  0100               	movlb	(_WswData+1) shr (0+8)
  2044  00519E  A7AD               	btfss	(_WswData+1)& (0+255),3,b
  2045  0051A0  0012               	return	
  2046  0051A2  EE00  F0AD         	lfsr	0,_WswData+1
  2047  0051A6  38EF               	swapf	indf0,w,c
  2048  0051A8  0B0F               	andlw	15
  2049  0051AA  D098               	goto	_Rwbty
  2050                           ;wsw2.c: 520: }
  2051  0051AC                     l77:
  2052                           ;wsw2.c: 521: else
  2053  0051AC  010F               	movlb	(_wbty+1) shr (0+8)
  2054  0051AE  0E0F               	movlw	15
  2055  0051B0  1340               	iorwf	(_wbty+1)& (0+255),f,b
  2056                           ;wsw2.c: 527: wbty[1]&=~(wsdid);
  2057  0051B2  CF3E  FFE8         	movff	_wsdid,wreg
  2058  0051B6  0AFF               	xorlw	255
  2059  0051B8  1740               	andwf	(_wbty+1)& (0+255),f,b
  2060                           ;wsw2.c: 533: }
  2061  0051BA  0012               	return	
  2062  0051BC                     __end_of_FormatWswData:
  2063                           ;wsw2.c: 540: void PrintWswData(void)
  2064                           ;wsw2.c: 541: {
  2065  0051BC                     _PrintWswData:
  2066  000000                     
  2067                           ;wsw2.c: 543: unsigned char i,j,k;
  2068  0051BC  784F               	btg	_mux/(0+8),_mux& (0+7),c
  2069                           ;wsw2.c: 567: if (mux)
  2070  0051BE  A84F               	btfss	_mux/(0+8),_mux& (0+7),c
  2071  0051C0  D003               	goto	l83
  2072                           ;wsw2.c: 568: wbty[0]=LedData.dLed0;
  2073  0051C2  C0AB  FF3F         	movff	_LedData+2,_wbty
  2074  0051C6  D002               	goto	l84
  2075  0051C8                     l83:
  2076                           ;wsw2.c: 569: else
  2077  0051C8  C0AA  FF3F         	movff	_LedData+1,_wbty
  2078  0051CC                     l84:
  2079                           ;wsw2.c: 577: for(k=0;k<1;k++)
  2080  0051CC  6AD9               	clrf	fsr2l,c
  2081  0051CE                     l85:
  2082                           ;wsw2.c: 578: {
  2083  0051CE  6AE1               	clrf	fsr1l,c
  2084  0051D0                     l88:
  2085                           ;wsw2.c: 580: {
  2086  0051D0  50D9               	movf	fsr2l,w,c
  2087  0051D2  6A00               	clrf	btemp,c
  2088  0051D4  6A01               	clrf	btemp+1,c
  2089  0051D6  5E00               	subwf	btemp,f,c
  2090  0051D8  0E00               	movlw	0
  2091  0051DA  5A01               	subwfb	btemp+1,f,c
  2092  0051DC  0E3F               	movlw	low _wbty
  2093  0051DE  2400               	addwf	btemp,w,c
  2094  0051E0  6EE9               	movwf	fsr0l,c
  2095  0051E2  0E0F               	movlw	high _wbty
  2096  0051E4  2001               	addwfc	btemp+1,w,c
  2097  0051E6  6EEA               	movwf	fsr0h,c
  2098  0051E8  50EF               	movf	indf0,w,c
  2099  0051EA  6E01               	movwf	btemp+1,c
  2100  0051EC  50E1               	movf	fsr1l,w,c
  2101  0051EE  0807               	sublw	7
  2102  0051F0  6E02               	movwf	btemp+2,c
  2103  0051F2  0E01               	movlw	1
  2104  0051F4  6E00               	movwf	btemp,c
  2105  0051F6  2A02               	incf	btemp+2,f,c
  2106  0051F8  D002               	goto	u904
  2107  0051FA                     u905:
  2108  0051FA  90D8               	bcf	status,0,c
  2109  0051FC  3600               	rlcf	btemp,f,c
  2110  0051FE                     u904:
  2111  0051FE  2E02               	decfsz	btemp+2,f,c
  2112  005200  D7FC               	goto	u905
  2113  005202  5001               	movf	btemp+1,w,c
  2114  005204  1400               	andwf	btemp,w,c
  2115  005206  E002               	bz	u910
  2116  005208  8284               	bsf	3972,1,c	;volatile
  2117  00520A  D001               	goto	u925
  2118  00520C                     u910:
  2119  00520C  9284               	bcf	3972,1,c	;volatile
  2120  00520E                     u925:
  2121                           ;wsw2.c: 583: for(i=0;i<10;i++);
  2122                           ; _i allocated to fsr0l
  2123  00520E  6AE9               	clrf	fsr0l,c
  2124  005210                     l91:
  2125  005210  2AE9               	incf	fsr0l,f,c
  2126  005212  0E09               	movlw	9
  2127  005214  64E9               	cpfsgt	fsr0l,c
  2128  005216  D7FC               	goto	l91
  2129                           ;wsw2.c: 584: RE2=1;
  2130  005218  8484               	bsf	3972,2,c	;volatile
  2131                           ;wsw2.c: 585: for(i=0;i<10;i++);
  2132  00521A  6AE9               	clrf	fsr0l,c
  2133  00521C                     l94:
  2134  00521C  2AE9               	incf	fsr0l,f,c
  2135  00521E  0E09               	movlw	9
  2136  005220  64E9               	cpfsgt	fsr0l,c
  2137  005222  D7FC               	goto	l94
  2138                           ;wsw2.c: 586: RE2=0;
  2139  005224  9484               	bcf	3972,2,c	;volatile
  2140  005226  2AE1               	incf	fsr1l,f,c
  2141  005228  0E07               	movlw	7
  2142  00522A  64E1               	cpfsgt	fsr1l,c
  2143  00522C  D7D1               	goto	l88
  2144  00522E  2AD9               	incf	fsr2l,f,c
  2145  005230  0E00               	movlw	0
  2146  005232  64D9               	cpfsgt	fsr2l,c
  2147  005234  D7CC               	goto	l85
  2148                           ;wsw2.c: 587: }
  2149                           ; _i allocated to fsr2l
  2150  005236  6AD9               	clrf	fsr2l,c
  2151  005238                     l97:
  2152  005238  2AD9               	incf	fsr2l,f,c
  2153  00523A  0E09               	movlw	9
  2154  00523C  64D9               	cpfsgt	fsr2l,c
  2155  00523E  D7FC               	goto	l97
  2156                           ;wsw2.c: 591: RE0=1;
  2157  005240  8084               	bsf	3972,0,c	;volatile
  2158                           ;wsw2.c: 592: RB3=(mux)?1:0;
  2159  005242  A84F               	btfss	_mux/(0+8),_mux& (0+7),c
  2160  005244  D002               	goto	u980
  2161  005246  8681               	bsf	3969,3,c	;volatile
  2162  005248  D001               	goto	u995
  2163  00524A                     u980:
  2164  00524A  9681               	bcf	3969,3,c	;volatile
  2165  00524C                     u995:
  2166                           ;wsw2.c: 593: for(i=0;i<10;i++);
  2167  00524C  6AD9               	clrf	fsr2l,c
  2168  00524E                     l100:
  2169  00524E  2AD9               	incf	fsr2l,f,c
  2170  005250  0E09               	movlw	9
  2171  005252  64D9               	cpfsgt	fsr2l,c
  2172  005254  D7FC               	goto	l100
  2173                           ;wsw2.c: 594: RE0=0;
  2174  005256  9084               	bcf	3972,0,c	;volatile
  2175                           ;wsw2.c: 596: }
  2176  005258  0C09               	retlw	9
  2177  00525A                     __end_of_PrintWswData:
  2178                           ;wsw2.c: 604: void SetWbtyBit(unsigned char nrbt
      +                          y, unsigned char nrbit, const unsigned char bt)
  2179                           ;wsw2.c: 605: {
  2180  00525A  00F0               	dw	?_SetWbtyBit
  2181  00525C                     _SetWbtyBit:
  2182  000000                     
  2183                           ; _nrbty loaded to fsr2l
  2184  00525C  6ED9               	movwf	fsr2l,c
  2185                           ;wsw2.c: 606: if(nrbty>=1) nrbty=1-1;
  2186  00525E  0E00               	movlw	0
  2187  005260  64D9               	cpfsgt	fsr2l,c
  2188  005262  D001               	goto	l104
  2189  005264  6AD9               	clrf	fsr2l,c
  2190  005266                     l104:
  2191                           ;wsw2.c: 607: if(bt) wbty[nrbty]|=1<<nrbit;
  2192  005266  0100               	movlb	__Lparam shr (0+8)
  2193  005268  51F1               	movf	(?_SetWbtyBit+1)^(__Lparam& (0+65280)),w
  2194  00526A  C0F0  F001         	movff	?_SetWbtyBit,btemp+1
  2195  00526E  0E01               	movlw	1
  2196  005270  E010               	bz	L5
  2197  005272  6E00               	movwf	btemp,c
  2198  005274  2A01               	incf	btemp+1,f,c
  2199  005276  D002               	goto	u1034
  2200  005278                     u1035:
  2201  005278  90D8               	bcf	status,0,c
  2202  00527A  3600               	rlcf	btemp,f,c
  2203  00527C                     u1034:
  2204  00527C  2E01               	decfsz	btemp+1,f,c
  2205  00527E  D7FC               	goto	u1035
  2206  005280  50D9               	movf	fsr2l,w,c
  2207  005282  EE0F  F03F         	lfsr	0,_wbty
  2208  005286  26E9               	addwf	fsr0l,f,c
  2209  005288  0E00               	movlw	0
  2210  00528A  22EA               	addwfc	fsr0h,f,c
  2211  00528C  5000               	movf	btemp,w,c
  2212  00528E  12EF               	iorwf	indf0,f,c
  2213  005290  0012               	return	
  2214                           ;wsw2.c: 608: else wbty[nrbty]&=~(1<<nrbit);
  2215  005292                     L5:
  2216  005292  6E00               	movwf	btemp,c
  2217  005294  2A01               	incf	btemp+1,f,c
  2218  005296  D002               	goto	u1044
  2219  005298                     u1045:
  2220  005298  90D8               	bcf	status,0,c
  2221  00529A  3600               	rlcf	btemp,f,c
  2222  00529C                     u1044:
  2223  00529C  2E01               	decfsz	btemp+1,f,c
  2224  00529E  D7FC               	goto	u1045
  2225  0052A0  1E00               	comf	btemp,f,c
  2226  0052A2  50D9               	movf	fsr2l,w,c
  2227  0052A4  EE0F  F03F         	lfsr	0,_wbty
  2228  0052A8  26E9               	addwf	fsr0l,f,c
  2229  0052AA  0E00               	movlw	0
  2230  0052AC  22EA               	addwfc	fsr0h,f,c
  2231  0052AE  5000               	movf	btemp,w,c
  2232  0052B0  16EF               	andwf	indf0,f,c
  2233                           ;wsw2.c: 609: }
  2234  0052B2  0012               	return	
  2235  0052B4                     __end_of_SetWbtyBit:
  2236                           ;wsw2.c: 612: void Swbty(unsigned char dtd)
  2237                           ;wsw2.c: 613: {
  2238  0052B4                     _Swbty:
  2239  000000                     
  2240                           ; _dtd loaded to fsr2l
  2241  0052B4  6ED9               	movwf	fsr2l,c
  2242                           ;wsw2.c: 614: unsigned char mask;
  2243  0052B6  0E0F               	movlw	15
  2244  0052B8  16D9               	andwf	fsr2l,f,c
  2245                           ;wsw2.c: 616: mask=~(wsdid&dtd);
  2246  0052BA  50D9               	movf	fsr2l,w,c
  2247  0052BC  010F               	movlb	_wsdid shr (0+8)
  2248  0052BE  153E               	andwf	_wsdid& (0+255),w,b
  2249  0052C0  0AFF               	xorlw	255
  2250  0052C2  6EE1               	movwf	fsr1l,c
  2251                           ;wsw2.c: 620: wbty[1]|=0x0f;
  2252  0052C4  010F               	movlb	(_wbty+1) shr (0+8)
  2253  0052C6  0E0F               	movlw	15
  2254  0052C8  1340               	iorwf	(_wbty+1)& (0+255),f,b
  2255                           ;wsw2.c: 621: wbty[1]&=~(dtd|(wsdid&mask));
  2256  0052CA  50E1               	movf	fsr1l,w,c
  2257  0052CC  010F               	movlb	_wsdid shr (0+8)
  2258  0052CE  153E               	andwf	_wsdid& (0+255),w,b
  2259  0052D0  6E00               	movwf	btemp,c
  2260  0052D2  10D9               	iorwf	fsr2l,w,c
  2261  0052D4  0AFF               	xorlw	255
  2262  0052D6  010F               	movlb	(_wbty+1) shr (0+8)
  2263  0052D8  1740               	andwf	(_wbty+1)& (0+255),f,b
  2264                           ;wsw2.c: 627: }
  2265  0052DA  0012               	return	
  2266  0052DC                     __end_of_Swbty:
  2267                           ;wsw2.c: 629: void Rwbty(unsigned char dtd)
  2268                           ;wsw2.c: 630: {
  2269  0052DC                     _Rwbty:
  2270  000000                     
  2271                           ; _dtd loaded to fsr2l
  2272  0052DC  6ED9               	movwf	fsr2l,c
  2273                           ;wsw2.c: 631: unsigned char mask;
  2274  0052DE  0E0F               	movlw	15
  2275  0052E0  16D9               	andwf	fsr2l,f,c
  2276                           ;wsw2.c: 634: mask=~(wsdid&dtd);
  2277  0052E2  50D9               	movf	fsr2l,w,c
  2278  0052E4  010F               	movlb	_wsdid shr (0+8)
  2279  0052E6  153E               	andwf	_wsdid& (0+255),w,b
  2280  0052E8  0AFF               	xorlw	255
  2281  0052EA  6EE1               	movwf	fsr1l,c
  2282                           ;wsw2.c: 637: wbty[1]|=0x0f;
  2283  0052EC  010F               	movlb	(_wbty+1) shr (0+8)
  2284  0052EE  0E0F               	movlw	15
  2285  0052F0  1340               	iorwf	(_wbty+1)& (0+255),f,b
  2286                           ;wsw2.c: 638: wbty[1]&=~((~dtd)&(wsdid&mask));
  2287  0052F2  CF3E  F000         	movff	_wsdid,btemp
  2288  0052F6  1CD9               	comf	fsr2l,w,c
  2289  0052F8  6E01               	movwf	btemp+1,c
  2290  0052FA  1600               	andwf	btemp,f,c
  2291  0052FC  50E1               	movf	fsr1l,w,c
  2292  0052FE  1400               	andwf	btemp,w,c
  2293  005300  0AFF               	xorlw	255
  2294  005302  1740               	andwf	(_wbty+1)& (0+255),f,b
  2295                           ;wsw2.c: 644: }
  2296  005304  0012               	return	
  2297  005306                     __end_of_Rwbty:
  2298                           ;wsw2.c: 646: void Swsdid(unsigned char dtd)
  2299                           ;wsw2.c: 647: {
  2300  005306                     _Swsdid:
  2301  000000                     
  2302                           ; _dtd loaded to fsr2l
  2303  005306  6ED9               	movwf	fsr2l,c
  2304                           ;wsw2.c: 648: dtd=dtd&0x0f;
  2305  005308  0E0F               	movlw	15
  2306  00530A  16D9               	andwf	fsr2l,f,c
  2307                           ;wsw2.c: 649: wsdid|=dtd;
  2308  00530C  50D9               	movf	fsr2l,w,c
  2309  00530E  010F               	movlb	_wsdid shr (0+8)
  2310  005310  133E               	iorwf	_wsdid& (0+255),f,b
  2311                           ;wsw2.c: 650: }
  2312  005312  0012               	return	
  2313  005314                     __end_of_Swsdid:
  2314                           ;wsw2.c: 652: void Rwsdid(unsigned char dtd)
  2315                           ;wsw2.c: 653: {
  2316  005314                     _Rwsdid:
  2317  000000                     
  2318                           ; _dtd loaded to fsr2l
  2319  005314  6ED9               	movwf	fsr2l,c
  2320                           ;wsw2.c: 654: dtd=dtd&0x0f;
  2321  005316  0E0F               	movlw	15
  2322  005318  16D9               	andwf	fsr2l,f,c
  2323                           ;wsw2.c: 655: wsdid&=~(dtd);
  2324  00531A  1CD9               	comf	fsr2l,w,c
  2325  00531C  010F               	movlb	_wsdid shr (0+8)
  2326  00531E  173E               	andwf	_wsdid& (0+255),f,b
  2327                           ;wsw2.c: 656: }
  2328  005320  0012               	return	
  2329  005322                     __end_of_Rwsdid:
  2330                           ;wsw2.c: 661: void WswOff(void)
  2331                           ;wsw2.c: 662: {
  2332  005322                     _WswOff:
  2333  000000                     
  2334                           ;wsw2.c: 663: LedData.setOff=1;
  2335  005322  0100               	movlb	_LedData shr (0+8)
  2336  005324  81A9               	bsf	_LedData& (0+255),0,b
  2337                           ;wsw2.c: 664: }
  2338  005326  0012               	return	
  2339  005328                     __end_of_WswOff:
  2340                           ;wsw2.c: 666: void WswOn(void)
  2341                           ;wsw2.c: 667: {
  2342  005328                     _WswOn:
  2343  000000                     
  2344                           ;wsw2.c: 668: LedData.setOff=0;
  2345  005328  0100               	movlb	_LedData shr (0+8)
  2346  00532A  91A9               	bcf	_LedData& (0+255),0,b
  2347                           ;wsw2.c: 669: }
  2348  00532C  0012               	return	
  2349  00532E                     __end_of_WswOn:
  2350                           ;wsw2.c: 674: void SetData(WPack *wData,const un
      +                          signed char wdt1,const unsigned char wdt0)
  2351                           ;wsw2.c: 675: {
  2352  00532E  00F3               	dw	?_SetData
  2353  005330                     _SetData:
  2354  000000                     
  2355                           ;wsw2.c: 676: (*wData).Dt.Data1=wdt1;
  2356                           ; _wData loaded to fsr1
  2357  005330  C0F3  FFE1         	movff	?_SetData,fsr1l
  2358  005334  C0F4  FFE2         	movff	?_SetData+1,fsr1h
  2359  005338  EE00 F002          	lfsr	0,2
  2360  00533C  50E1               	movf	fsr1l,w,c
  2361  00533E  26E9               	addwf	fsr0l,f,c
  2362  005340  50E2               	movf	fsr1h,w,c
  2363  005342  22EA               	addwfc	fsr0h,f,c
  2364  005344  C0F5  FFEF         	movff	?_SetData+2,indf0
  2365                           ;wsw2.c: 677: (*wData).Dt.Data0=wdt0;
  2366  005348  EE00 F003          	lfsr	0,3
  2367  00534C  50E1               	movf	fsr1l,w,c
  2368  00534E  26E9               	addwf	fsr0l,f,c
  2369  005350  50E2               	movf	fsr1h,w,c
  2370  005352  22EA               	addwfc	fsr0h,f,c
  2371  005354  C0F6  FFEF         	movff	?_SetData+3,indf0
  2372                           ;wsw2.c: 678: }
  2373  005358  0012               	return	
  2374  00535A                     __end_of_SetData:
  2375                           ;wsw2.c: 683: void SetStatus(WPack *wData,const 
      +                          unsigned int wst,const unsigned int mask)
  2376                           ;wsw2.c: 684: {
  2377  00535A  00F3               	dw	?_SetStatus
  2378  00535C                     _SetStatus:
  2379  000000                     
  2380                           ; _wData loaded to fsr1
  2381  00535C  C0F3  FFE1         	movff	?_SetStatus,fsr1l
  2382  005360  C0F4  FFE2         	movff	?_SetStatus+1,fsr1h
  2383                           ;wsw2.c: 685: if (mask&0b1000000000000000)(*wDat
      +                          a).St.focus=(wst&0b1000000000000000)?1:0;
  2384  005364  0100               	movlb	__Lparam shr (0+8)
  2385  005366  AFF8               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),7,b
  2386  005368  D008               	goto	l115
  2387  00536A  0E00               	movlw	0
  2388  00536C  BFF6               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),7,b
  2389  00536E  0E01               	movlw	1
  2390  005370  6E00               	movwf	btemp,c
  2391  005372  18E7               	xorwf	indf1,w,c
  2392  005374  0BFE               	andlw	-2
  2393  005376  1800               	xorwf	btemp,w,c
  2394  005378  6EE7               	movwf	indf1,c
  2395  00537A                     l115:
  2396                           ;wsw2.c: 686: if (mask&0b0100000000000000)(*wDat
      +                          a).St.dec=(wst&0b0100000000000000)?1:0;
  2397  00537A  0100               	movlb	__Lparam shr (0+8)
  2398  00537C  ADF8               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),6,b
  2399  00537E  D00A               	goto	l116
  2400  005380  0E00               	movlw	0
  2401  005382  BDF6               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),6,b
  2402  005384  0E01               	movlw	1
  2403  005386  6E00               	movwf	btemp,c
  2404  005388  3600               	rlcf	btemp,f,c
  2405  00538A  50E7               	movf	indf1,w,c
  2406  00538C  1800               	xorwf	btemp,w,c
  2407  00538E  0BFD               	andlw	-3
  2408  005390  1800               	xorwf	btemp,w,c
  2409  005392  6EE7               	movwf	indf1,c
  2410  005394                     l116:
  2411                           ;wsw2.c: 687: if (mask&0b0010000000000000)(*wDat
      +                          a).St.hex=(wst&0b0010000000000000)?1:0;
  2412  005394  0100               	movlb	__Lparam shr (0+8)
  2413  005396  ABF8               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),5,b
  2414  005398  D00B               	goto	l117
  2415  00539A  0E00               	movlw	0
  2416  00539C  BBF6               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),5,b
  2417  00539E  0E01               	movlw	1
  2418  0053A0  6E00               	movwf	btemp,c
  2419  0053A2  3600               	rlcf	btemp,f,c
  2420  0053A4  3600               	rlcf	btemp,f,c
  2421  0053A6  50E7               	movf	indf1,w,c
  2422  0053A8  1800               	xorwf	btemp,w,c
  2423  0053AA  0BFB               	andlw	-5
  2424  0053AC  1800               	xorwf	btemp,w,c
  2425  0053AE  6EE7               	movwf	indf1,c
  2426  0053B0                     l117:
  2427                           ;wsw2.c: 688: if (mask&0b0001000000000000)(*wDat
      +                          a).St.autoOFF=(wst&0b0001000000000000)?1:0;
  2428  0053B0  0100               	movlb	__Lparam shr (0+8)
  2429  0053B2  A9F8               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),4,b
  2430  0053B4  D00C               	goto	l118
  2431  0053B6  0E00               	movlw	0
  2432  0053B8  B9F6               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),4,b
  2433  0053BA  0E01               	movlw	1
  2434  0053BC  6E00               	movwf	btemp,c
  2435  0053BE  3600               	rlcf	btemp,f,c
  2436  0053C0  3600               	rlcf	btemp,f,c
  2437  0053C2  3600               	rlcf	btemp,f,c
  2438  0053C4  50E7               	movf	indf1,w,c
  2439  0053C6  1800               	xorwf	btemp,w,c
  2440  0053C8  0BF7               	andlw	-9
  2441  0053CA  1800               	xorwf	btemp,w,c
  2442  0053CC  6EE7               	movwf	indf1,c
  2443  0053CE                     l118:
  2444                           ;wsw2.c: 689: if (mask&0b0000100000000000)(*wDat
      +                          a).St.kropka0=(wst&0b0000100000000000)?1:0;
  2445  0053CE  0100               	movlb	__Lparam shr (0+8)
  2446  0053D0  A7F8               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),3,b
  2447  0053D2  D00A               	goto	l119
  2448  0053D4  0E00               	movlw	0
  2449  0053D6  B7F6               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),3,b
  2450  0053D8  0E01               	movlw	1
  2451  0053DA  6E00               	movwf	btemp,c
  2452  0053DC  3A00               	swapf	btemp,f,c
  2453  0053DE  50E7               	movf	indf1,w,c
  2454  0053E0  1800               	xorwf	btemp,w,c
  2455  0053E2  0BEF               	andlw	-17
  2456  0053E4  1800               	xorwf	btemp,w,c
  2457  0053E6  6EE7               	movwf	indf1,c
  2458  0053E8                     l119:
  2459                           ;wsw2.c: 690: if (mask&0b0000010000000000)(*wDat
      +                          a).St.kropka1=(wst&0b0000010000000000)?1:0;
  2460  0053E8  0100               	movlb	__Lparam shr (0+8)
  2461  0053EA  A5F8               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),2,b
  2462  0053EC  D00B               	goto	l120
  2463  0053EE  0E00               	movlw	0
  2464  0053F0  B5F6               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),2,b
  2465  0053F2  0E01               	movlw	1
  2466  0053F4  6E00               	movwf	btemp,c
  2467  0053F6  3A00               	swapf	btemp,f,c
  2468  0053F8  3600               	rlcf	btemp,f,c
  2469  0053FA  50E7               	movf	indf1,w,c
  2470  0053FC  1800               	xorwf	btemp,w,c
  2471  0053FE  0BDF               	andlw	-33
  2472  005400  1800               	xorwf	btemp,w,c
  2473  005402  6EE7               	movwf	indf1,c
  2474  005404                     l120:
  2475                           ;wsw2.c: 691: if (mask&0b0000001000000000)(*wDat
      +                          a).St.wygas0=(wst&0b0000001000000000)?1:0;
  2476  005404  0100               	movlb	__Lparam shr (0+8)
  2477  005406  A3F8               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),1,b
  2478  005408  D00C               	goto	l121
  2479  00540A  0E00               	movlw	0
  2480  00540C  B3F6               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),1,b
  2481  00540E  0E01               	movlw	1
  2482  005410  6E00               	movwf	btemp,c
  2483  005412  3A00               	swapf	btemp,f,c
  2484  005414  3600               	rlcf	btemp,f,c
  2485  005416  3600               	rlcf	btemp,f,c
  2486  005418  50E7               	movf	indf1,w,c
  2487  00541A  1800               	xorwf	btemp,w,c
  2488  00541C  0BBF               	andlw	-65
  2489  00541E  1800               	xorwf	btemp,w,c
  2490  005420  6EE7               	movwf	indf1,c
  2491  005422                     l121:
  2492                           ;wsw2.c: 692: if (mask&0b0000000100000000)(*wDat
      +                          a).St.wygas1=(wst&0b0000000100000000)?1:0;
  2493  005422  0100               	movlb	__Lparam shr (0+8)
  2494  005424  A1F8               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),0,b
  2495  005426  D00B               	goto	l122
  2496  005428  0E00               	movlw	0
  2497  00542A  B1F6               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),0,b
  2498  00542C  0E01               	movlw	1
  2499  00542E  6E00               	movwf	btemp,c
  2500  005430  3200               	rrcf	btemp,f,c
  2501  005432  3200               	rrcf	btemp,f,c
  2502  005434  50E7               	movf	indf1,w,c
  2503  005436  1800               	xorwf	btemp,w,c
  2504  005438  0B7F               	andlw	-129
  2505  00543A  1800               	xorwf	btemp,w,c
  2506  00543C  6EE7               	movwf	indf1,c
  2507  00543E                     l122:
  2508                           ;wsw2.c: 693: if (mask&0b0000000010000000)(*wDat
      +                          a).St.led0=(wst&0b0000000010000000)?1:0;
  2509  00543E  0100               	movlb	__Lparam shr (0+8)
  2510  005440  AFF7               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),7,b
  2511  005442  D00F               	goto	l123
  2512  005444  0E00               	movlw	0
  2513  005446  BFF5               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),7,b
  2514  005448  0E01               	movlw	1
  2515  00544A  6E00               	movwf	btemp,c
  2516  00544C  EE00 F001          	lfsr	0,1
  2517  005450  50E1               	movf	fsr1l,w,c
  2518  005452  26E9               	addwf	fsr0l,f,c
  2519  005454  50E2               	movf	fsr1h,w,c
  2520  005456  22EA               	addwfc	fsr0h,f,c
  2521  005458  50EF               	movf	indf0,w,c
  2522  00545A  1800               	xorwf	btemp,w,c
  2523  00545C  0BFE               	andlw	-2
  2524  00545E  1800               	xorwf	btemp,w,c
  2525  005460  6EEF               	movwf	indf0,c
  2526  005462                     l123:
  2527                           ;wsw2.c: 694: if (mask&0b0000000001000000)(*wDat
      +                          a).St.led1=(wst&0b0000000001000000)?1:0;
  2528  005462  0100               	movlb	__Lparam shr (0+8)
  2529  005464  ADF7               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),6,b
  2530  005466  D010               	goto	l124
  2531  005468  0E00               	movlw	0
  2532  00546A  BDF5               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),6,b
  2533  00546C  0E01               	movlw	1
  2534  00546E  6E00               	movwf	btemp,c
  2535  005470  EE00 F001          	lfsr	0,1
  2536  005474  50E1               	movf	fsr1l,w,c
  2537  005476  26E9               	addwf	fsr0l,f,c
  2538  005478  50E2               	movf	fsr1h,w,c
  2539  00547A  22EA               	addwfc	fsr0h,f,c
  2540  00547C  3600               	rlcf	btemp,f,c
  2541  00547E  50EF               	movf	indf0,w,c
  2542  005480  1800               	xorwf	btemp,w,c
  2543  005482  0BFD               	andlw	-3
  2544  005484  1800               	xorwf	btemp,w,c
  2545  005486  6EEF               	movwf	indf0,c
  2546  005488                     l124:
  2547                           ;wsw2.c: 695: if (mask&0b0000000000100000)(*wDat
      +                          a).St.sdiode=(wst&0b0000000000100000)?1:0;
  2548  005488  0100               	movlb	__Lparam shr (0+8)
  2549  00548A  ABF7               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),5,b
  2550  00548C  D011               	goto	l125
  2551  00548E  0E00               	movlw	0
  2552  005490  BBF5               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),5,b
  2553  005492  0E01               	movlw	1
  2554  005494  6E00               	movwf	btemp,c
  2555  005496  EE00 F001          	lfsr	0,1
  2556  00549A  50E1               	movf	fsr1l,w,c
  2557  00549C  26E9               	addwf	fsr0l,f,c
  2558  00549E  50E2               	movf	fsr1h,w,c
  2559  0054A0  22EA               	addwfc	fsr0h,f,c
  2560  0054A2  3600               	rlcf	btemp,f,c
  2561  0054A4  3600               	rlcf	btemp,f,c
  2562  0054A6  50EF               	movf	indf0,w,c
  2563  0054A8  1800               	xorwf	btemp,w,c
  2564  0054AA  0BFB               	andlw	-5
  2565  0054AC  1800               	xorwf	btemp,w,c
  2566  0054AE  6EEF               	movwf	indf0,c
  2567  0054B0                     l125:
  2568                           ;wsw2.c: 696: if (mask&0b0000000000010000)(*wDat
      +                          a).St.rdiode=(wst&0b0000000000010000)?1:0;
  2569  0054B0  0100               	movlb	__Lparam shr (0+8)
  2570  0054B2  A9F7               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),4,b
  2571  0054B4  D012               	goto	l126
  2572  0054B6  0E00               	movlw	0
  2573  0054B8  B9F5               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),4,b
  2574  0054BA  0E01               	movlw	1
  2575  0054BC  6E00               	movwf	btemp,c
  2576  0054BE  EE00 F001          	lfsr	0,1
  2577  0054C2  50E1               	movf	fsr1l,w,c
  2578  0054C4  26E9               	addwf	fsr0l,f,c
  2579  0054C6  50E2               	movf	fsr1h,w,c
  2580  0054C8  22EA               	addwfc	fsr0h,f,c
  2581  0054CA  3600               	rlcf	btemp,f,c
  2582  0054CC  3600               	rlcf	btemp,f,c
  2583  0054CE  3600               	rlcf	btemp,f,c
  2584  0054D0  50EF               	movf	indf0,w,c
  2585  0054D2  1800               	xorwf	btemp,w,c
  2586  0054D4  0BF7               	andlw	-9
  2587  0054D6  1800               	xorwf	btemp,w,c
  2588  0054D8  6EEF               	movwf	indf0,c
  2589  0054DA                     l126:
  2590                           ;wsw2.c: 698: if (mask&0b0000000000001111)
  2591  0054DA  0E0F               	movlw	15
  2592  0054DC  C0F7  F000         	movff	?_SetStatus+4,btemp
  2593  0054E0  C0F8  F001         	movff	?_SetStatus+5,btemp+1
  2594  0054E4  1600               	andwf	btemp,f,c
  2595  0054E6  6A01               	clrf	btemp+1,c
  2596  0054E8  5001               	movf	btemp+1,w,c
  2597  0054EA  1000               	iorwf	btemp,w,c
  2598  0054EC  B4D8               	btfsc	status,2,c
  2599  0054EE  0012               	return	
  2600                           ;wsw2.c: 699: if(((*wData).St.sdiode||(*wData).S
      +                          t.rdiode)&&(wst&0b0000000000001111))
  2601  0054F0  EE00 F001          	lfsr	0,1
  2602  0054F4  50E1               	movf	fsr1l,w,c
  2603  0054F6  26E9               	addwf	fsr0l,f,c
  2604  0054F8  50E2               	movf	fsr1h,w,c
  2605  0054FA  22EA               	addwfc	fsr0h,f,c
  2606  0054FC  50EF               	movf	indf0,w,c
  2607  0054FE  6E00               	movwf	btemp,c
  2608  005500  B400               	btfsc	btemp,2,c
  2609  005502  D00A               	goto	u1200
  2610  005504  EE00 F001          	lfsr	0,1
  2611  005508  50E1               	movf	fsr1l,w,c
  2612  00550A  26E9               	addwf	fsr0l,f,c
  2613  00550C  50E2               	movf	fsr1h,w,c
  2614  00550E  22EA               	addwfc	fsr0h,f,c
  2615  005510  50EF               	movf	indf0,w,c
  2616  005512  6E00               	movwf	btemp,c
  2617  005514  A600               	btfss	btemp,3,c
  2618  005516  0012               	return	
  2619  005518                     u1200:
  2620  005518  0E0F               	movlw	15
  2621  00551A  C0F5  F000         	movff	?_SetStatus+2,btemp
  2622  00551E  C0F6  F001         	movff	?_SetStatus+3,btemp+1
  2623  005522  1600               	andwf	btemp,f,c
  2624  005524  6A01               	clrf	btemp+1,c
  2625  005526  5001               	movf	btemp+1,w,c
  2626  005528  1000               	iorwf	btemp,w,c
  2627  00552A  B4D8               	btfsc	status,2,c
  2628  00552C  0012               	return	
  2629                           ;wsw2.c: 700: {
  2630  00552E  C0F5  F000         	movff	?_SetStatus+2,btemp
  2631  005532  0E0F               	movlw	15
  2632  005534  1600               	andwf	btemp,f,c
  2633  005536  EE00 F001          	lfsr	0,1
  2634  00553A  50E1               	movf	fsr1l,w,c
  2635  00553C  26E9               	addwf	fsr0l,f,c
  2636  00553E  50E2               	movf	fsr1h,w,c
  2637  005540  22EA               	addwfc	fsr0h,f,c
  2638  005542  3A00               	swapf	btemp,f,c
  2639  005544  50EF               	movf	indf0,w,c
  2640  005546  1800               	xorwf	btemp,w,c
  2641  005548  0B0F               	andlw	-241
  2642  00554A  1800               	xorwf	btemp,w,c
  2643  00554C  6EEF               	movwf	indf0,c
  2644                           ;wsw2.c: 702: }
  2645  00554E  0012               	return	
  2646  005550                     __end_of_SetStatus:
  2647                           ;wsw2.c: 708: bit GetPoz(const unsigned char nrk
      +                          ol,const unsigned char nrpoz)
  2648                           ;wsw2.c: 709: {
  2649  005550  00F0               	dw	?_GetPoz
  2650  005552                     _GetPoz:
  2651  000000                     
  2652                           ; _nrkol loaded to fsr2l
  2653  005552  6ED9               	movwf	fsr2l,c
  2654                           ;wsw2.c: 710: if ((nrkol>=4)||(nrpoz>=Klj[nrkol]
      +                          .nPzc)) asm("RESET");
  2655  005554  0E03               	movlw	3
  2656  005556  64D9               	cpfsgt	fsr2l,c
  2657  005558  D001               	goto	u1231
  2658  00555A  D012               	goto	u1250
  2659  00555C                     u1231:
  2660  00555C  50D9               	movf	fsr2l,w,c
  2661  00555E  0D03               	mullw	3
  2662  005560  50F3               	movf	prodl,w,c
  2663  005562  0F86               	addlw	low _Klj
  2664  005564  6EF6               	movwf	tblptrl,c
  2665  005566  50F4               	movf	prodh,w,c
  2666  005568  6EF7               	movwf	tblptrh,c
  2667  00556A  0E10               	movlw	high _Klj
  2668  00556C  22F7               	addwfc	tblptrh,f,c
  2669  00556E  0E02               	movlw	2
  2670  005570  26F6               	addwf	tblptrl,f,c
  2671  005572  0E00               	movlw	0
  2672  005574  22F7               	addwfc	tblptrh,f,c
  2673  005576  0008               	tblrd		*
  2674  005578  50F5               	movf	tablat,w,c
  2675  00557A  0100               	movlb	__Lparam shr (0+8)
  2676  00557C  5DF0               	subwf	?_GetPoz^(__Lparam& (0+65280)),w
  2677  00557E  B0D8               	btfsc	status,0,c
  2678  005580                     u1250:
  2679  005580  00FF               	reset		;#
  2680                           ;wsw2.c: 711: return (*Klj[nrkol].KL).KFc[nrpoz]
      +                          .focus;
  2681  005582  50D9               	movf	fsr2l,w,c
  2682  005584  0D03               	mullw	3
  2683  005586  50F3               	movf	prodl,w,c
  2684  005588  0F86               	addlw	low _Klj
  2685  00558A  6EF6               	movwf	tblptrl,c
  2686  00558C  50F4               	movf	prodh,w,c
  2687  00558E  6EF7               	movwf	tblptrh,c
  2688  005590  0E10               	movlw	high _Klj
  2689  005592  22F7               	addwfc	tblptrh,f,c
  2690  005594  0009               	tblrd		*+
  2691  005596  CFF5 F000          	movff	tablat,btemp
  2692  00559A  0009               	tblrd		*+
  2693  00559C  CFF5 F001          	movff	tablat,btemp+1
  2694  0055A0  0E06               	movlw	6
  2695  0055A2  2600               	addwf	btemp,f,c
  2696  0055A4  0E00               	movlw	0
  2697  0055A6  2201               	addwfc	btemp+1,f,c
  2698  0055A8  C000  FFF6         	movff	btemp,tblptrl
  2699  0055AC  C001  FFF7         	movff	btemp+1,tblptrh
  2700  0055B0  0E0F               	movlw	(high __ramtop+-1)
  2701  0055B2  64F7               	cpfsgt	tblptrh,c
  2702  0055B4  D007               	bra	u1267
  2703  0055B6  0009               	tblrd		*+
  2704  0055B8  CFF5 F000          	movff	tablat,btemp
  2705  0055BC  0009               	tblrd		*+
  2706  0055BE  CFF5 F001          	movff	tablat,btemp+1
  2707  0055C2  D008               	bra	u1260
  2708  0055C4                     u1267:
  2709  0055C4  CFF6 FFE9          	movff	tblptrl,fsr0l
  2710  0055C8  CFF7 FFEA          	movff	tblptrh,fsr0h
  2711  0055CC  CFEE F000          	movff	postinc0,btemp
  2712  0055D0  CFEE F001          	movff	postinc0,btemp+1
  2713  0055D4                     u1260:
  2714  0055D4  0100               	movlb	__Lparam shr (0+8)
  2715  0055D6  51F0               	movf	?_GetPoz^(__Lparam& (0+65280)),w
  2716  0055D8  2400               	addwf	btemp,w,c
  2717  0055DA  6EE9               	movwf	fsr0l,c
  2718  0055DC  0E00               	movlw	0
  2719  0055DE  2001               	addwfc	btemp+1,w,c
  2720  0055E0  6EEA               	movwf	fsr0h,c
  2721  0055E2  50EF               	movf	indf0,w,c
  2722  0055E4  0B01               	andlw	1
  2723  0055E6  6E00               	movwf	btemp,c
  2724  0055E8  3000               	rrcf	btemp,w,c
  2725  0055EA  0012               	return	
  2726                           ;wsw2.c: 712: }
  2727  0055EC                     __end_of_GetPoz:
  2728                           ;wsw2.c: 714: void SetPoz(const unsigned char nr
      +                          kol,const unsigned char nrpoz)
  2729                           ;wsw2.c: 715: {
  2730  0055EC  00F3               	dw	?_SetPoz
  2731  0055EE                     _SetPoz:
  2732  000000                     
  2733                           ; _nrkol loaded to fsr2l
  2734  0055EE  6ED9               	movwf	fsr2l,c
  2735                           ;wsw2.c: 716: if ((nrkol>=4)||(nrpoz>=Klj[nrkol]
      +                          .nPzc)) asm("RESET");
  2736  0055F0  0E03               	movlw	3
  2737  0055F2  64D9               	cpfsgt	fsr2l,c
  2738  0055F4  D001               	goto	u1271
  2739  0055F6  D012               	goto	u1290
  2740  0055F8                     u1271:
  2741  0055F8  50D9               	movf	fsr2l,w,c
  2742  0055FA  0D03               	mullw	3
  2743  0055FC  50F3               	movf	prodl,w,c
  2744  0055FE  0F86               	addlw	low _Klj
  2745  005600  6EF6               	movwf	tblptrl,c
  2746  005602  50F4               	movf	prodh,w,c
  2747  005604  6EF7               	movwf	tblptrh,c
  2748  005606  0E10               	movlw	high _Klj
  2749  005608  22F7               	addwfc	tblptrh,f,c
  2750  00560A  0E02               	movlw	2
  2751  00560C  26F6               	addwf	tblptrl,f,c
  2752  00560E  0E00               	movlw	0
  2753  005610  22F7               	addwfc	tblptrh,f,c
  2754  005612  0008               	tblrd		*
  2755  005614  50F5               	movf	tablat,w,c
  2756  005616  0100               	movlb	__Lparam shr (0+8)
  2757  005618  5DF3               	subwf	?_SetPoz^(__Lparam& (0+65280)),w
  2758  00561A  B0D8               	btfsc	status,0,c
  2759  00561C                     u1290:
  2760  00561C  00FF               	reset		;#
  2761                           ;wsw2.c: 717: (*Klj[nrkol].KL).KFc[nrpoz].focus=
      +                          1;
  2762  00561E  50D9               	movf	fsr2l,w,c
  2763  005620  0D03               	mullw	3
  2764  005622  50F3               	movf	prodl,w,c
  2765  005624  0F86               	addlw	low _Klj
  2766  005626  6EF6               	movwf	tblptrl,c
  2767  005628  50F4               	movf	prodh,w,c
  2768  00562A  6EF7               	movwf	tblptrh,c
  2769  00562C  0E10               	movlw	high _Klj
  2770  00562E  22F7               	addwfc	tblptrh,f,c
  2771  005630  0009               	tblrd		*+
  2772  005632  CFF5 F000          	movff	tablat,btemp
  2773  005636  0009               	tblrd		*+
  2774  005638  CFF5 F001          	movff	tablat,btemp+1
  2775  00563C  0E06               	movlw	6
  2776  00563E  2600               	addwf	btemp,f,c
  2777  005640  0E00               	movlw	0
  2778  005642  2201               	addwfc	btemp+1,f,c
  2779  005644  C000  FFF6         	movff	btemp,tblptrl
  2780  005648  C001  FFF7         	movff	btemp+1,tblptrh
  2781  00564C  0E0F               	movlw	(high __ramtop+-1)
  2782  00564E  64F7               	cpfsgt	tblptrh,c
  2783  005650  D007               	bra	u1307
  2784  005652  0009               	tblrd		*+
  2785  005654  CFF5 F000          	movff	tablat,btemp
  2786  005658  0009               	tblrd		*+
  2787  00565A  CFF5 F001          	movff	tablat,btemp+1
  2788  00565E  D008               	bra	u1300
  2789  005660                     u1307:
  2790  005660  CFF6 FFE9          	movff	tblptrl,fsr0l
  2791  005664  CFF7 FFEA          	movff	tblptrh,fsr0h
  2792  005668  CFEE F000          	movff	postinc0,btemp
  2793  00566C  CFEE F001          	movff	postinc0,btemp+1
  2794  005670                     u1300:
  2795  005670  0100               	movlb	__Lparam shr (0+8)
  2796  005672  51F3               	movf	?_SetPoz^(__Lparam& (0+65280)),w
  2797  005674  2400               	addwf	btemp,w,c
  2798  005676  6EE9               	movwf	fsr0l,c
  2799  005678  0E00               	movlw	0
  2800  00567A  2001               	addwfc	btemp+1,w,c
  2801  00567C  6EEA               	movwf	fsr0h,c
  2802  00567E  50EF               	movf	indf0,w,c
  2803  005680  0BFE               	andlw	-2
  2804  005682  0901               	iorlw	1
  2805  005684  6EEF               	movwf	indf0,c
  2806                           ;wsw2.c: 718: KInd[nrkol].reset=0;
  2807  005686  50D9               	movf	fsr2l,w,c
  2808  005688  EE0F  F041         	lfsr	0,_KInd
  2809  00568C  26E9               	addwf	fsr0l,f,c
  2810  00568E  0E00               	movlw	0
  2811  005690  22EA               	addwfc	fsr0h,f,c
  2812  005692  0EFD               	movlw	-3
  2813  005694  16EF               	andwf	indf0,f,c
  2814                           ;wsw2.c: 719: }
  2815  005696  0CFD               	retlw	253
  2816  005698                     __end_of_SetPoz:
  2817                           ;wsw2.c: 721: void ResetPoz(const unsigned char 
      +                          nrkol,const unsigned char nrpoz)
  2818                           ;wsw2.c: 722: {
  2819  005698  00F0               	dw	?_ResetPoz
  2820  00569A                     _ResetPoz:
  2821  000000                     
  2822                           ; _nrkol loaded to fsr2l
  2823  00569A  6ED9               	movwf	fsr2l,c
  2824                           ;wsw2.c: 723: if ((nrkol>=4)||(nrpoz>=Klj[nrkol]
      +                          .nPzc)) asm("RESET");
  2825  00569C  0E03               	movlw	3
  2826  00569E  64D9               	cpfsgt	fsr2l,c
  2827  0056A0  D001               	goto	u1311
  2828  0056A2  D012               	goto	u1330
  2829  0056A4                     u1311:
  2830  0056A4  50D9               	movf	fsr2l,w,c
  2831  0056A6  0D03               	mullw	3
  2832  0056A8  50F3               	movf	prodl,w,c
  2833  0056AA  0F86               	addlw	low _Klj
  2834  0056AC  6EF6               	movwf	tblptrl,c
  2835  0056AE  50F4               	movf	prodh,w,c
  2836  0056B0  6EF7               	movwf	tblptrh,c
  2837  0056B2  0E10               	movlw	high _Klj
  2838  0056B4  22F7               	addwfc	tblptrh,f,c
  2839  0056B6  0E02               	movlw	2
  2840  0056B8  26F6               	addwf	tblptrl,f,c
  2841  0056BA  0E00               	movlw	0
  2842  0056BC  22F7               	addwfc	tblptrh,f,c
  2843  0056BE  0008               	tblrd		*
  2844  0056C0  50F5               	movf	tablat,w,c
  2845  0056C2  0100               	movlb	__Lparam shr (0+8)
  2846  0056C4  5DF0               	subwf	?_ResetPoz^(__Lparam& (0+65280)),w
  2847  0056C6  B0D8               	btfsc	status,0,c
  2848  0056C8                     u1330:
  2849  0056C8  00FF               	reset		;#
  2850                           ;wsw2.c: 724: (*Klj[nrkol].KL).KFc[nrpoz].focus=
      +                          0;
  2851  0056CA  50D9               	movf	fsr2l,w,c
  2852  0056CC  0D03               	mullw	3
  2853  0056CE  50F3               	movf	prodl,w,c
  2854  0056D0  0F86               	addlw	low _Klj
  2855  0056D2  6EF6               	movwf	tblptrl,c
  2856  0056D4  50F4               	movf	prodh,w,c
  2857  0056D6  6EF7               	movwf	tblptrh,c
  2858  0056D8  0E10               	movlw	high _Klj
  2859  0056DA  22F7               	addwfc	tblptrh,f,c
  2860  0056DC  0009               	tblrd		*+
  2861  0056DE  CFF5 F000          	movff	tablat,btemp
  2862  0056E2  0009               	tblrd		*+
  2863  0056E4  CFF5 F001          	movff	tablat,btemp+1
  2864  0056E8  0E06               	movlw	6
  2865  0056EA  2600               	addwf	btemp,f,c
  2866  0056EC  0E00               	movlw	0
  2867  0056EE  2201               	addwfc	btemp+1,f,c
  2868  0056F0  C000  FFF6         	movff	btemp,tblptrl
  2869  0056F4  C001  FFF7         	movff	btemp+1,tblptrh
  2870  0056F8  0E0F               	movlw	(high __ramtop+-1)
  2871  0056FA  64F7               	cpfsgt	tblptrh,c
  2872  0056FC  D007               	bra	u1347
  2873  0056FE  0009               	tblrd		*+
  2874  005700  CFF5 F000          	movff	tablat,btemp
  2875  005704  0009               	tblrd		*+
  2876  005706  CFF5 F001          	movff	tablat,btemp+1
  2877  00570A  D008               	bra	u1340
  2878  00570C                     u1347:
  2879  00570C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2880  005710  CFF7 FFEA          	movff	tblptrh,fsr0h
  2881  005714  CFEE F000          	movff	postinc0,btemp
  2882  005718  CFEE F001          	movff	postinc0,btemp+1
  2883  00571C                     u1340:
  2884  00571C  0100               	movlb	__Lparam shr (0+8)
  2885  00571E  51F0               	movf	?_ResetPoz^(__Lparam& (0+65280)),w
  2886  005720  2400               	addwf	btemp,w,c
  2887  005722  6EE9               	movwf	fsr0l,c
  2888  005724  0E00               	movlw	0
  2889  005726  2001               	addwfc	btemp+1,w,c
  2890  005728  6EEA               	movwf	fsr0h,c
  2891  00572A  0EFE               	movlw	-2
  2892  00572C  16EF               	andwf	indf0,f,c
  2893                           ;wsw2.c: 725: }
  2894  00572E  0CFE               	retlw	254
  2895  005730                     __end_of_ResetPoz:
  2896                           ;wsw2.c: 727: void ResetKol(const unsigned char 
      +                          nrkol)
  2897                           ;wsw2.c: 728: {
  2898  005730                     _ResetKol:
  2899  000000                     
  2900                           ; _nrkol loaded to fsr2l
  2901  005730  6ED9               	movwf	fsr2l,c
  2902                           ;wsw2.c: 729: if (nrkol>=4) asm("RESET");
  2903  005732  0E03               	movlw	3
  2904  005734  64D9               	cpfsgt	fsr2l,c
  2905  005736  D001               	goto	l136
  2906  005738  00FF               	reset		;#
  2907  00573A                     l136:
  2908                           ;wsw2.c: 730: KInd[nrkol].reset=1;
  2909  00573A  50D9               	movf	fsr2l,w,c
  2910  00573C  EE0F  F041         	lfsr	0,_KInd
  2911  005740  26E9               	addwf	fsr0l,f,c
  2912  005742  0E00               	movlw	0
  2913  005744  22EA               	addwfc	fsr0h,f,c
  2914  005746  50EF               	movf	indf0,w,c
  2915  005748  0BFD               	andlw	-3
  2916  00574A  0902               	iorlw	2
  2917  00574C  6EEF               	movwf	indf0,c
  2918                           ;wsw2.c: 731: }
  2919  00574E  0012               	return	
  2920  005750                     __end_of_ResetKol:
  2921                           ;wsw2.c: 734: void RestartKol(const unsigned cha
      +                          r nrkol)
  2922                           ;wsw2.c: 735: {
  2923  005750                     _RestartKol:
  2924  000000                     
  2925                           ; _nrkol loaded to fsr2l
  2926  005750  6ED9               	movwf	fsr2l,c
  2927                           ;wsw2.c: 736: if (nrkol>=4) asm("RESET");
  2928  005752  0E03               	movlw	3
  2929  005754  64D9               	cpfsgt	fsr2l,c
  2930  005756  D001               	goto	l138
  2931  005758  00FF               	reset		;#
  2932  00575A                     l138:
  2933                           ;wsw2.c: 737: KInd[nrkol].restart=1;
  2934  00575A  50D9               	movf	fsr2l,w,c
  2935  00575C  EE0F  F041         	lfsr	0,_KInd
  2936  005760  26E9               	addwf	fsr0l,f,c
  2937  005762  0E00               	movlw	0
  2938  005764  22EA               	addwfc	fsr0h,f,c
  2939  005766  50EF               	movf	indf0,w,c
  2940  005768  0BFE               	andlw	-2
  2941  00576A  0901               	iorlw	1
  2942  00576C  6EEF               	movwf	indf0,c
  2943                           ;wsw2.c: 738: }
  2944  00576E  0012               	return	
  2945  005770                     __end_of_RestartKol:
  2946                           ;wsw2.c: 740: void AllKolToFirstPoz(void)
  2947                           ;wsw2.c: 741: {
  2948  005770                     _AllKolToFirstPoz:
  2949  000000                     
  2950                           ;wsw2.c: 742: unsigned char j;
  2951  005770  6AD9               	clrf	fsr2l,c
  2952  005772                     l140:
  2953                           ;wsw2.c: 744: {
  2954  005772  50D9               	movf	fsr2l,w,c
  2955  005774  EE0F  F041         	lfsr	0,_KInd
  2956  005778  26E9               	addwf	fsr0l,f,c
  2957  00577A  0E00               	movlw	0
  2958  00577C  22EA               	addwfc	fsr0h,f,c
  2959  00577E  0E03               	movlw	-253
  2960  005780  16EF               	andwf	indf0,f,c
  2961                           ;wsw2.c: 746: KTim[j].ncS=0;
  2962  005782  50D9               	movf	fsr2l,w,c
  2963  005784  0D03               	mullw	3
  2964  005786  0EB0               	movlw	low _KTim
  2965  005788  24F3               	addwf	prodl,w,c
  2966  00578A  6EE9               	movwf	fsr0l,c
  2967  00578C  0E00               	movlw	high _KTim
  2968  00578E  20F4               	addwfc	prodh,w,c
  2969  005790  6EEA               	movwf	fsr0h,c
  2970  005792  6AEF               	clrf	indf0,c
  2971                           ;wsw2.c: 747: KTim[j].ndS=0;
  2972  005794  50D9               	movf	fsr2l,w,c
  2973  005796  0D03               	mullw	3
  2974  005798  0EB1               	movlw	low (_KTim+1)
  2975  00579A  24F3               	addwf	prodl,w,c
  2976  00579C  6EE9               	movwf	fsr0l,c
  2977  00579E  0E00               	movlw	high (_KTim+1)
  2978  0057A0  20F4               	addwfc	prodh,w,c
  2979  0057A2  6EEA               	movwf	fsr0h,c
  2980  0057A4  6AEF               	clrf	indf0,c
  2981  0057A6  2AD9               	incf	fsr2l,f,c
  2982  0057A8  0E03               	movlw	3
  2983  0057AA  64D9               	cpfsgt	fsr2l,c
  2984  0057AC  D7E2               	goto	l140
  2985  0057AE  0C03               	retlw	3
  2986                           ;wsw2.c: 748: }
  2987  0057B0                     __end_of_AllKolToFirstPoz:
  2988  000000                     
  2989  000000                     
  2990  000000                     
  2991  000000                     
  2992  000000                     
  2993  000000                     
  2994  000000                     
  2995  000000                     
  2996  000000                     
  2997  000000                     
  2998  000000                     
  2999  000000                     
  3000  000000                     
  3001  000000                     
  3002  000000                     
  3003  000000                     
  3004  000000                     
  3005  000000                     
  3006  000000                     
  3007  000000                     
  3008  000000                     
  3009  000000                     
  3010  000000                     
  3011  000000                     
  3012  000000                     
  3013  000000                     
  3014  000000                     
  3015  000000                     
  3016  000000                     
  3017  000000                     
  3018  000000                     
  3019  000000                     
  3020  000000                     
  3021  000000                     
  3022  000000                     
  3023  000000                     
  3024  000000                     
  3025  000000                     
  3026  000000                     
  3027  000000                     
  3028  000000                     
  3029  000000                     
  3030  000000                     
  3031  000000                     
  3032  000000                     
  3033  000000                     
  3034  000000                     
  3035  000000                     
  3036  000000                     
  3037  000000                     
  3038  000000                     
  3039  000000                     
  3040  000000                     
  3041  000000                     
  3042  000000                     
  3043  000000                     
  3044  000000                     
  3045  000000                     
  3046  000000                     
  3047  000000                     
  3048  000000                     
  3049  000000                     
  3050  000000                     
  3051  000000                     
  3052  000000                     
  3053  000000                     
  3054  000000                     
  3055  000000                     
  3056  000000                     
  3057  000000                     
  3058  000000                     
  3059  000000                     
  3060  000000                     
  3061  000000                     
  3062  000000                     
  3063  000000                     
  3064  000000                     
  3065  000000                     
  3066  000000                     
  3067  000000                     
  3068  000000                     
  3069  000000                     
  3070  000000                     
  3071  000000                     
  3072  000000                     
  3073  000000                     
  3074  000000                     
  3075  000000                     
  3076  000000                     
  3077  000000                     
  3078  000000                     
  3079  000000                     
  3080  000000                     
  3081  000000                     
  3082  000000                     
  3083  000000                     
  3084  000000                     
  3085  000000                     
  3086  000000                     
  3087  000000                     
  3088  000000                     
  3089  000000                     
  3090  000000                     
  3091  000000                     
  3092  000000                     
  3093  000000                     
  3094  000000                     
  3095  000000                     
  3096  000000                     
  3097  000000                     
  3098  000000                     
  3099  000000                     
  3100  000000                     
  3101  000000                     
  3102  000000                     
  3103  000000                     
  3104  000000                     
  3105  000000                     
  3106  000000                     
  3107  000000                     
  3108  000000                     
  3109  000000                     
  3110  000000                     
  3111  000000                     
  3112  000000                     
  3113  000000                     
  3114  000000                     
  3115  000000                     
  3116  000000                     
  3117  000000                     
  3118  000000                     
  3119  000000                     
  3120  000000                     
  3121  000000                     
  3122  000000                     
  3123  000000                     
  3124  000000                     
  3125  000000                     
  3126  000000                     
  3127  000000                     
  3128  000000                     
  3129  000000                     
  3130  000000                     
  3131  000000                     
  3132  000000                     
  3133  000000                     
  3134  000000                     
  3135  000000                     
  3136  000000                     
  3137  000000                     
  3138  000000                     
  3139  000000                     
  3140  000000                     
  3141  000000                     
  3142  000000                     
  3143  000000                     
  3144  000000                     
  3145  000000                     
  3146  000000                     
  3147  000000                     
  3148  000000                     
  3149  000000                     
  3150  000000                     
  3151  000000                     
  3152  000000                     
  3153  000000                     
  3154  000000                     
  3155  000000                     
  3156  000000                     
  3157  000000                     
  3158  000000                     
  3159  000000                     
  3160  000000                     
  3161  000000                     
  3162  000000                     
  3163  000000                     
  3164  000000                     
  3165  000000                     
  3166  000000                     
  3167  000000                     
  3168  000000                     
  3169  000000                     
  3170  000000                     
  3171  000000                     
  3172  000000                     
  3173  000000                     
  3174  000000                     
  3175  000000                     
  3176  000000                     
  3177  000000                     
  3178  000000                     
  3179  000000                     
  3180  000000                     
  3181  000000                     
  3182  000000                     
  3183  000000                     
  3184  000000                     
  3185  000000                     
  3186  000000                     
  3187  000000                     
  3188  000000                     
  3189  000000                     
  3190  000000                     
  3191  000000                     
  3192  000000                     
  3193  000000                     
  3194  000000                     
  3195  000000                     
  3196  000000                     
  3197  000000                     
  3198  000000                     
  3199  000000                     
  3200  000000                     
  3201  000000                     
  3202  000000                     
  3203  000000                     
  3204  000000                     
  3205  000000                     
  3206  000000                     
  3207  000000                     
  3208  000000                     
  3209  000000                     
  3210  000000                     
  3211  000000                     
  3212  000000                     
  3213  000000                     
  3214  000000                     
  3215  000000                     
  3216  000000                     
  3217  000000                     
  3218  000000                     
  3219  000000                     
  3220  000000                     
  3221  000000                     
  3222  000000                     
  3223  000000                     
  3224  000000                     
  3225  000000                     
  3226  000000                     
  3227  000000                     
  3228  000000                     
  3229  000000                     
  3230  000000                     
  3231  000000                     
  3232  000000                     
  3233  000000                     
  3234  000000                     
  3235  000000                     
  3236  000000                     
  3237  000000                     
  3238  000000                     
  3239  000000                     
  3240  000000                     
  3241  000000                     
  3242  000000                     
  3243  000000                     
  3244  000000                     
  3245  000000                     
  3246  000000                     
  3247  000000                     
  3248  000000                     
  3249  000000                     
  3250  000000                     
  3251  000000                     
  3252  000000                     
  3253  000000                     
  3254  000000                     
  3255  000000                     
  3256  000000                     
  3257  000000                     
  3258  000000                     
  3259  000000                     
  3260  000000                     
  3261  000000                     
  3262  000000                     
  3263  000000                     
  3264  000000                     
  3265  000000                     
  3266  000000                     
  3267  000000                     
  3268  000000                     
  3269  000000                     
  3270  000000                     
  3271  000000                     
  3272  000000                     
  3273  000000                     
  3274  000000                     
  3275  000000                     
  3276  000000                     
  3277  000000                     
  3278  000000                     
  3279  000000                     
  3280  000000                     
  3281  000000                     
  3282  000000                     
  3283  000000                     
  3284  000000                     
  3285  000000                     
  3286  000000                     
  3287  000000                     
  3288  000000                     
  3289  000000                     
  3290  000000                     
  3291  000000                     
  3292  000000                     
  3293  000000                     
  3294  000000                     
  3295  000000                     
  3296  000000                     
  3297  000000                     
  3298  000000                     
  3299  000000                     
  3300  000000                     
  3301  000000                     
  3302  000000                     
  3303  000000                     
  3304  000000                     
  3305  000000                     
  3306  000000                     
  3307  000000                     
  3308  000000                     
  3309  000000                     
  3310  000000                     
  3311  000000                     
  3312  000000                     
  3313  000000                     
  3314  000000                     
  3315  000000                     
  3316  000000                     
  3317  000000                     
  3318  000000                     
  3319  000000                     
  3320  000000                     
  3321  000000                     
  3322  000000                     
  3323  000000                     
  3324  000000                     
  3325  000000                     
  3326  000000                     
  3327  000000                     
  3328  000000                     
  3329  000000                     
  3330  000000                     
  3331  000000                     
  3332  000000                     
  3333  000000                     
  3334  000000                     
  3335  000000                     
  3336  000000                     
  3337  000000                     
  3338  000000                     
  3339  000000                     
  3340  000000                     
  3341  000000                     
  3342  000000                     
  3343  000000                     
  3344  000000                     
  3345  000000                     
  3346  000000                     
  3347  000000                     
  3348  000000                     
  3349  000000                     
  3350  000000                     
  3351  000000                     
  3352  000000                     
  3353  000000                     
  3354  000000                     
  3355  000000                     
  3356  000000                     
  3357  000000                     
  3358  000000                     
  3359  000000                     
  3360  000000                     
  3361  000000                     
  3362  000000                     
  3363  000000                     
  3364  000000                     
  3365  000000                     
  3366  000000                     
  3367  000000                     
  3368  000000                     
  3369  000000                     
  3370  000000                     
  3371  000000                     
  3372  000000                     
  3373  000000                     
  3374  000000                     
  3375  000000                     
  3376  000000                     
  3377  000000                     
  3378  000000                     
  3379  000000                     
  3380  000000                     
  3381  000000                     
  3382  000000                     
  3383  000000                     
  3384  000000                     
  3385  000000                     
  3386  000000                     
  3387  000000                     
  3388  000000                     
  3389  000000                     
  3390  000000                     
  3391  000000                     
  3392  000000                     
  3393  000000                     
  3394  000000                     
  3395  000000                     
  3396  000000                     
  3397  000000                     
  3398  000000                     
  3399  000000                     
  3400  000000                     
  3401  000000                     
  3402  000000                     
  3403  000000                     
  3404  000000                     
  3405  000000                     
  3406  000000                     
  3407  000000                     
  3408  000000                     
  3409  000000                     
  3410  000000                     
  3411  000000                     
  3412  000000                     
  3413  000000                     
  3414  000000                     
  3415  000000                     
  3416  000000                     
  3417  000000                     
  3418  000000                     
  3419  000000                     
  3420  000000                     
  3421  000000                     
  3422  000000                     
  3423  000000                     
  3424                           
  3425                           	psect	const
  3426  001016                     _KL0_AP:
  3427  001016  00D4               	dw	_DWD
  3428  001018  00D8               	dw	_DWD+4
  3429                           ;wsw2.c: 107: const KAdrPoz KL0_AP[2]= {
  3430                           ;wsw2.c: 108: DWD,
  3431                           ;wsw2.c: 109: DWD+1
  3432                           ;wsw2.c: 110: };
  3433  00101A                     _KL1_AP:
  3434  00101A  00DC               	dw	_DWD+8
  3435  00101C  00DC               	dw	_DWD+8
  3436                           ;wsw2.c: 112: const KAdrPoz KL1_AP[2]= {
  3437                           ;wsw2.c: 113: DWD+2,
  3438                           ;wsw2.c: 114: DWD+2
  3439                           ;wsw2.c: 115: };
  3440  00101E                     _KL2_AP:
  3441  00101E  00E0               	dw	_DWD+12
  3442  001020  00E4               	dw	_DWD+16
  3443                           ;wsw2.c: 117: const KAdrPoz KL2_AP[2]= {
  3444                           ;wsw2.c: 118: DWD+3,
  3445                           ;wsw2.c: 119: DWD+4
  3446                           ;wsw2.c: 120: };
  3447  001022                     _KL3_AP:
  3448  001022  00E8               	dw	_DWD+20
  3449  001024  00EC               	dw	_DWD+24
  3450                           ;wsw2.c: 122: const KAdrPoz KL3_AP[2]= {
  3451                           ;wsw2.c: 123: DWD+5,
  3452                           ;wsw2.c: 124: DWD+6
  3453                           ;wsw2.c: 125: };
  3454  001026                     _KL0_WP:
  3455  001026  00                 	db	0
  3456  001027  00                 	db	0
  3457  001028  06                 	db	6
  3458  001029  00                 	db	0
  3459  00102A  00                 	db	0
  3460  00102B  06                 	db	6
  3461                           ;wsw2.c: 157: const KWrtPoz KL0_WP[2]={
  3462                           ;wsw2.c: 158: 0,0,6,
  3463                           ;wsw2.c: 159: 0,0,6
  3464                           ;wsw2.c: 160: };
  3465  00102C                     _KL1_WP:
  3466  00102C  00                 	db	0
  3467  00102D  00                 	db	0
  3468  00102E  06                 	db	6
  3469  00102F  00                 	db	0
  3470  001030  00                 	db	0
  3471  001031  06                 	db	6
  3472                           ;wsw2.c: 162: const KWrtPoz KL1_WP[2]={
  3473                           ;wsw2.c: 163: 0,0,6,
  3474                           ;wsw2.c: 164: 0,0,6
  3475                           ;wsw2.c: 165: };
  3476  001032                     _KL2_WP:
  3477  001032  00                 	db	0
  3478  001033  00                 	db	0
  3479  001034  06                 	db	6
  3480  001035  00                 	db	0
  3481  001036  00                 	db	0
  3482  001037  06                 	db	6
  3483                           ;wsw2.c: 167: const KWrtPoz KL2_WP[2]={
  3484                           ;wsw2.c: 168: 0,0,6,
  3485                           ;wsw2.c: 169: 0,0,6
  3486                           ;wsw2.c: 170: };
  3487  001038                     _KL3_WP:
  3488  001038  00                 	db	0
  3489  001039  00                 	db	0
  3490  00103A  06                 	db	6
  3491  00103B  00                 	db	0
  3492  00103C  00                 	db	0
  3493  00103D  06                 	db	6
  3494                           ;wsw2.c: 172: const KWrtPoz KL3_WP[2]={
  3495                           ;wsw2.c: 173: 0,0,6,
  3496                           ;wsw2.c: 174: 0,0,6
  3497                           ;wsw2.c: 175: };
  3498  00103E                     _KL0_FP:
  3499  00103E  00                 	db	0
  3500  00103F  00                 	db	0
  3501  001040  00                 	db	0
  3502  001041  00                 	db	0
  3503                           ;wsw2.c: 184: const KFrmPoz KL0_FP[2]={
  3504                           ;wsw2.c: 185: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3505                           ;wsw2.c: 186: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3506                           ;wsw2.c: 187: };
  3507  001042                     _KL1_FP:
  3508  001042  00                 	db	0
  3509  001043  00                 	db	0
  3510  001044  00                 	db	0
  3511  001045  00                 	db	0
  3512                           ;wsw2.c: 189: const KFrmPoz KL1_FP[2]={
  3513                           ;wsw2.c: 190: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3514                           ;wsw2.c: 191: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3515                           ;wsw2.c: 192: };
  3516  001046                     _KL2_FP:
  3517  001046  00                 	db	0
  3518  001047  00                 	db	0
  3519  001048  00                 	db	0
  3520  001049  00                 	db	0
  3521                           ;wsw2.c: 194: const KFrmPoz KL2_FP[2]={
  3522                           ;wsw2.c: 195: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3523                           ;wsw2.c: 196: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3524                           ;wsw2.c: 197: };
  3525  00104A                     _KL3_FP:
  3526  00104A  00                 	db	0
  3527  00104B  00                 	db	0
  3528  00104C  00                 	db	0
  3529  00104D  00                 	db	0
  3530                           ;wsw2.c: 223: static KFocus KL3_FC[2]= {
  3531                           ;wsw2.c: 224: 0,
  3532                           ;wsw2.c: 225: 0
  3533                           ;wsw2.c: 226: };
  3534  00104E                     _KL0_OUT:
  3535  00104E  00BC               	dw	_PWD
  3536  001050  00                 	db	0
  3537  001051  00                 	db	0
  3538                           ;wsw2.c: 231: const KOutput KL0_OUT= {PWD,0,0};
  3539  001052                     _KL1_OUT:
  3540  001052  00C0               	dw	_PWD+4
  3541  001054  00                 	db	0
  3542  001055  00                 	db	0
  3543                           ;wsw2.c: 232: const KOutput KL1_OUT= {PWD+1,0,0}
      +                          ;
  3544  001056                     _KL2_OUT:
  3545  001056  00C4               	dw	_PWD+8
  3546  001058  04                 	db	4
  3547  001059  00                 	db	0
  3548                           ;wsw2.c: 233: const KOutput KL2_OUT= {PWD+2,4,0}
      +                          ;
  3549  00105A                     _KL3_OUT:
  3550  00105A  00C8               	dw	_PWD+12
  3551  00105C  00                 	db	0
  3552  00105D  00                 	db	0
  3553                           ;wsw2.c: 234: const KOutput KL3_OUT= {PWD+3,0,0}
      +                          ;
  3554  00105E                     _KL0:
  3555  00105E  1016               	dw	_KL0_AP
  3556  001060  1026               	dw	_KL0_WP
  3557  001062  103E               	dw	_KL0_FP
  3558  001064  0EE4               	dw	_KL0_FC
  3559  001066  104E               	dw	_KL0_OUT
  3560                           ;wsw2.c: 238: const Kolejka KL0={KL0_AP,KL0_WP,K
      +                          L0_FP,KL0_FC,&KL0_OUT};
  3561  001068                     _KL1:
  3562  001068  101A               	dw	_KL1_AP
  3563  00106A  102C               	dw	_KL1_WP
  3564  00106C  1042               	dw	_KL1_FP
  3565  00106E  0EE6               	dw	_KL1_FC
  3566  001070  1052               	dw	_KL1_OUT
  3567                           ;wsw2.c: 239: const Kolejka KL1={KL1_AP,KL1_WP,K
      +                          L1_FP,KL1_FC,&KL1_OUT};
  3568  001072                     _KL2:
  3569  001072  101E               	dw	_KL2_AP
  3570  001074  1032               	dw	_KL2_WP
  3571  001076  1046               	dw	_KL2_FP
  3572  001078  0EE8               	dw	_KL2_FC
  3573  00107A  1056               	dw	_KL2_OUT
  3574                           ;wsw2.c: 240: const Kolejka KL2={KL2_AP,KL2_WP,K
      +                          L2_FP,KL2_FC,&KL2_OUT};
  3575  00107C                     _KL3:
  3576  00107C  1022               	dw	_KL3_AP
  3577  00107E  1038               	dw	_KL3_WP
  3578  001080  104A               	dw	_KL3_FP
  3579  001082  0EEA               	dw	_KL3_FC
  3580  001084  105A               	dw	_KL3_OUT
  3581                           ;wsw2.c: 241: const Kolejka KL3={KL3_AP,KL3_WP,K
      +                          L3_FP,KL3_FC,&KL3_OUT};
  3582  001086                     _Klj:
  3583  001086  105E               	dw	_KL0
  3584  001088  02                 	db	2
  3585  001089  1068               	dw	_KL1
  3586  00108B  02                 	db	2
  3587  00108C  1072               	dw	_KL2
  3588  00108E  02                 	db	2
  3589  00108F  107C               	dw	_KL3
  3590  001091  02                 	db	2
  3591                           ;wsw2.c: 247: const KGlobal Klj[4]= {
  3592                           ;wsw2.c: 248: &KL0,2,
  3593                           ;wsw2.c: 249: &KL1,2,
  3594                           ;wsw2.c: 250: &KL2,2,
  3595                           ;wsw2.c: 251: &KL3,2
  3596                           ;wsw2.c: 252: };
  3597                           ;wsw2.c: 286: static KIndeks KInd[4];
  3598                           ;wsw2.c: 287: static KTime KTim[4];
  3599  001092                     _Znak:
  3600  001092  50                 	db	80
  3601  001093  F9                 	db	-7
  3602  001094  32                 	db	50
  3603  001095  31                 	db	49
  3604  001096  99                 	db	-103
  3605  001097  15                 	db	21
  3606  001098  14                 	db	20
  3607  001099  79                 	db	121
  3608  00109A  10                 	db	16
  3609  00109B  11                 	db	17
  3610  00109C  18                 	db	24
  3611  00109D  94                 	db	-108
  3612  00109E  56                 	db	86
  3613  00109F  B0                 	db	-80
  3614  0010A0  16                 	db	22
  3615  0010A1  1E                 	db	30
  3616                           
  3617                           	psect	bigdata
  3618                           ;wsw2.c: 199: const KFrmPoz KL3_FP[2]={
  3619                           ;wsw2.c: 200: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3620                           ;wsw2.c: 201: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3621                           ;wsw2.c: 202: };
  3622  000EE4                     _KL0_FC:
  3623  000EE4                     	ds	1
  3624  000EE4                     	ds	1
  3625                           ;wsw2.c: 208: static KFocus KL0_FC[2]= {
  3626                           ;wsw2.c: 209: 0,
  3627                           ;wsw2.c: 210: 0
  3628                           ;wsw2.c: 211: };
  3629  000EE4                     _KL1_FC:
  3630  000EE4                     	ds	1
  3631  000EE4                     	ds	1
  3632                           ;wsw2.c: 213: static KFocus KL1_FC[2]= {
  3633                           ;wsw2.c: 214: 0,
  3634                           ;wsw2.c: 215: 0
  3635                           ;wsw2.c: 216: };
  3636  000EE4                     _KL2_FC:
  3637  000EE4                     	ds	1
  3638  000EE4                     	ds	1
  3639                           ;wsw2.c: 218: static KFocus KL2_FC[2]= {
  3640                           ;wsw2.c: 219: 0,
  3641                           ;wsw2.c: 220: 0
  3642                           ;wsw2.c: 221: };
  3643  000EE4                     _KL3_FC:
  3644  000EE4                     	ds	1
  3645  000EE4                     	ds	1
  3646                           
  3647                           	psect	ibigdata
  3648  0010A2  00                 	db	0
  3649  0010A3  00                 	db	0
  3650  0010A4  00                 	db	0
  3651  0010A5  00                 	db	0
  3652  0010A6  00                 	db	0
  3653  0010A7  00                 	db	0
  3654  0010A8  00                 	db	0
  3655  0010A9  00                 	db	0
  3656                           
  3657                           	psect	rbit
  3658  00027C                     _mux:
  3659  00027C                     	ds	1
  3660  000000                     
  3661  000000                     
  3662  000000                     
  3663  000000                     
  3664  000000                     
  3665  000000                     
  3666  000000                     
  3667  000000                     
  3668  000000                     
  3669  000000                     
  3670  000000                     
  3671  000000                     
  3672  000000                     
  3673  000000                     
  3674  000000                     
  3675  000000                     
  3676  000000                     
  3677  000000                     
  3678  000000                     
  3679  000000                     
  3680                           
  3681                           	psect	bigbss
  3682  000F3D                     _Dmask:
  3683  000F3D                     	ds	1
  3684  000000                     
  3685  000000                     
  3686  000000                     
  3687  000000                     
  3688  000000                     
  3689  000000                     
  3690  000000                     
  3691  000000                     
  3692  000000                     
  3693  000000                     
  3694  000000                     
  3695  000000                     
  3696  000000                     
  3697  000000                     
  3698  000000                     
  3699  000000                     
  3700  000000                     
  3701  000000                     
  3702  000000                     
  3703  000000                     
  3704  000000                     
  3705  000000                     
  3706  000000                     
  3707  000000                     
  3708  000000                     
  3709  000000                     
  3710  000000                     
  3711  000000                     
  3712  000000                     
  3713  000000                     
  3714  000000                     
  3715  000000                     
  3716  000000                     
  3717  000000                     
  3718  000000                     
  3719  000000                     
  3720  000000                     
  3721  000000                     
  3722  000000                     
  3723  000000                     
  3724  000000                     
  3725  000000                     
  3726  000000                     
  3727  000000                     
  3728  000000                     
  3729  000000                     
  3730  000000                     
  3731  000000                     
  3732  000000                     
  3733  000000                     
  3734  000000                     
  3735  000000                     
  3736  000000                     
  3737  000000                     
  3738  000000                     
  3739  000000                     
  3740  000000                     
  3741  000000                     
  3742  000000                     
  3743  000000                     
  3744  000000                     
  3745  000000                     
  3746  000000                     
  3747  000000                     
  3748  000000                     
  3749  000000                     
  3750  000000                     
  3751  000000                     
  3752  000000                     
  3753  000000                     
  3754  000000                     
  3755  000000                     
  3756  000000                     
  3757  000000                     
  3758  000000                     
  3759  000000                     
  3760  000000                     
  3761  000000                     
  3762  000000                     
  3763  000000                     
  3764  000000                     
  3765  000000                     
  3766  000000                     
  3767  000000                     
  3768  000000                     
  3769  000000                     
  3770  000000                     
  3771  000000                     
  3772  000000                     
  3773  000000                     
  3774  000000                     
  3775  000000                     
  3776  000000                     
  3777  000000                     
  3778  000000                     
  3779  000000                     
  3780  000000                     
  3781  000000                     
  3782  000000                     
  3783  000000                     
  3784  000000                     
  3785  000000                     
  3786  000000                     
  3787  000000                     
  3788  000000                     
  3789  000F3D                     _wsdid:
  3790  000F3D                     	ds	1
  3791  000000                     
  3792  000000                     
  3793  000000                     
  3794  000000                     
  3795  000000                     
  3796  000000                     
  3797  000000                     
  3798  000F3D                     _wbty:
  3799  000F3D                     	ds	2
  3800  000F3D                     _KInd:
  3801  000F3D                     	ds	4
  3802                           
  3803                           	psect	bss
  3804  0000A9                     _LedData:
  3805  0000A9                     	ds	3
  3806  0000A9                     _WswData:
  3807  0000A9                     	ds	4
  3808  0000A9                     _KTim:
  3809  0000A9                     	ds	12
  3810  0000A9                     _PWD:
  3811  0000A9                     	ds	24
  3812  0000A9                     _DWD:
  3813  0000A9                     	ds	28
  3814                           
  3815                           	psect	temp
  3816  000000                     btemp:
  3817  000000                     	ds	5
  3818                           tblptrh	equ	0xFF7
  3819                           tblptrl	equ	0xFF6
  3820                           tablat	equ	0xFF5
  3821                           prodh	equ	0xFF4
  3822                           prodl	equ	0xFF3
  3823                           indf0	equ	0xFEF
  3824                           postinc0	equ	0xFEE
  3825                           postdec0	equ	0xFED
  3826                           fsr0h	equ	0xFEA
  3827                           fsr0l	equ	0xFE9
  3828                           wreg	equ	0xFE8
  3829                           indf1	equ	0xFE7
  3830                           postinc1	equ	0xFE6
  3831                           postdec1	equ	0xFE5
  3832                           fsr1h	equ	0xFE2
  3833                           fsr1l	equ	0xFE1
  3834                           fsr2l	equ	0xFD9
  3835                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Wed Jun 11 12:30:10 2014

      __end_of_RefreshWSW 42E0                  _ResetKol 5730  
                _ResetPoz 569A                 _SetStatus 535C  
       __end_of_SetStatus 5550                 ?_ResetPoz 00F0  
                      l20 42E2                        l23 443A  
                      l15 4286                        l32 4466  
                      l41 4774                        l33 45D8  
              _SetWbtyBit 525C                        l35 5008  
                      l27 43B2                        l60 5016  
                      l52 4F5C                        l44 488C  
                      l36 5000                        l28 44F2  
                      l53 4AD4                        l37 467A  
                      l70 512A                        l54 4DA2  
                      l38 4750                        l71 513A  
                      l63 5054                        l55 4ECC  
                      l72 514A                        l48 47F2  
                      l73 515A                        l65 50A6  
                      l49 489A                        l74 516A  
                      l66 510E                        l91 5210  
                      l83 51C8                        l75 5178  
                      l67 5106                        l84 51CC  
                      l68 50B6                        l85 51CE  
                      l77 51AC                        l94 521C  
                      l78 519C                        l88 51D0  
                      l97 5238                        u20 4334  
                      u30 435A                        u27 4324  
                      u37 4350                        u80 438E  
                      u90 4426                        u97 4416  
               ?a_KolProc 00FC        __end_of_SetWbtyBit 52B4  
              ?_SetStatus 00F3                       l100 524E  
                     l120 5404                       l104 5266  
                     l121 5422                       l122 543E  
                     l123 5462                       l115 537A  
                     l140 5772                       l124 5488  
                     l116 5394                       l125 54B0  
                     l117 53B0                       l126 54DA  
                     l118 53CE                       l119 53E8  
                     l136 573A                       l138 575A  
                     _KL0 105E                       _KL1 1068  
                     _KL2 1072                       _KL3 107C  
                     _DWD 00D4                       u210 462A  
                     u220 4656                       u140 44DA  
                     u310 4866                       u230 46F4  
                     u400 4A48                       u320 487A  
                     u217 461A                       u410 4A7E  
                     u170 4558                       u227 4646  
                     u147 44CA                       u500 4C70  
                     u180 4584                       u317 4856  
                     u237 46E4                       u510 4CD2  
                     u407 4A38                       u255 474C  
                     u600 4F4A                       u520 4D0E  
                     u440 4B1E                       u360 4928  
                     u280 47C6                       u417 4A74  
                     u177 4548                       u530 4D60  
                     u450 4B5C                       u370 4954  
                     u290 47EC                       u507 4C60  
                     u187 4574                       u540 4D8C  
                     u380 49B6                       u517 4CC2  
                     u550 4DEC                       u470 4BB6  
                     u390 49DC                       u615 4FD8  
                     u607 4F3A                       u527 4CFE  
                     u447 4B0E                       u367 4918  
                     u287 47B6                       u800 5164  
                     u560 4E2A                       u480 4BF2  
                     u537 4D50                       u457 4B4C  
                     u377 4944                       u297 47E2  
                     u570 4E84                       u490 4C44  
                     u547 4D7C                       u387 49A6  
                     u580 4EB0                       u557 4DDC  
                     u477 4BA6                       u397 49D2  
                     u910 520C                       u590 4F1E  
                     u567 4E1A                       u487 4BE2  
                     u904 51FE                       u905 51FA  
                     u577 4E74                       u497 4C34  
                     u770 5154                       u587 4EA0  
                     u860 518C                       u925 520E  
                     u597 4F0E                       _PWD 00BC  
                     u980 524A                       u995 524C  
            _SetPrWswData 5014                       _Klj 1086  
                     _mux 027C               ?_SetWbtyBit 00F0  
                     wreg 000FE8                _RestartKol 5750  
      __end_of_RestartKol 5770      __end_of_SetPrWswData 506E  
                    f6123 00FD                      u1200 5518  
                    u1034 527C                      u1035 5278  
                    u1300 5670                      u1044 529C  
                    u1045 5298                      u1311 56A4  
                    u1231 555C                      u1330 56C8  
                    u1250 5580                      u1307 5660  
                    u1340 571C                      u1260 55D4  
                    u1271 55F8                      u1290 561C  
                    u1347 570C                      u1267 55C4  
                    _KInd 0F41                      _KTim 00B0  
                    _Znak 1092                      fsr0h 000FEA  
                    fsr1h 000FE2                      indf0 000FEF  
                    fsr0l 000FE9                      indf1 000FE7  
                    fsr1l 000FE1                      fsr2l 000FD9  
                    _wbty 0F3F                      btemp 0000  
                    lbdiv 931A                      lbmod 931A  
                    prodh 000FF4                      prodl 000FF3  
                 ?_GetPoz 00F0           __end_of_KolProc 5014  
         __end_of_InitWsw 42D2           __end_of_SetData 535A  
                 ?_SetPoz 00F3          _AllKolToFirstPoz 5770  
           __end_of_Rwbty 5306             __end_of_Swbty 52DC  
           __end_of_WswOn 532E                   _KL0_OUT 104E  
                 _KL1_OUT 1052                   _KL2_OUT 1056  
                 _KL3_OUT 105A                     _Dmask 0F3D  
              used_btemp0 0001                used_btemp1 0001  
              used_btemp2 0001                used_btemp3 0001  
              used_btemp4 0001                     _Rwbty 52DC  
                   _Swbty 52B4                     _WswOn 5328  
                   _wsdid 0F3E                     tablat 000FF5  
                 _LedData 00A9                     status 000FD8  
                 _KolProc 42E0                   _InitWsw 4270  
                 _SetData 5330                  ?_SetData 00F3  
                 __Lparam 00F0                 ??_KolProc 00FC  
        __end_of_ResetKol 5750          __end_of_ResetPoz 5730  
                 _WswData 00AC                   __ramtop 1000  
          __end_of_GetPoz 55EC            __end_of_SetPoz 5698  
          __end_of_Rwsdid 5322            __end_of_Swsdid 5314  
          __end_of_WswOff 5328                    _KL0_FC 0EE4  
                  _KL0_AP 1016                    _KL1_FC 0EE6  
                  _KL1_AP 101A                    _KL0_FP 103E  
                  _KL2_FC 0EE8                    _KL2_AP 101E  
                  _KL1_FP 1042                    _KL3_FC 0EEA  
                  _KL3_AP 1022                    _KL2_FP 1046  
                  _KL3_FP 104A                    _KL0_WP 1026  
                  _KL1_WP 102C                    _KL2_WP 1032  
                  _KL3_WP 1038              _PrintWswData 51BC  
    __end_of_PrintWswData 525A                    _GetPoz 5552  
                  _SetPoz 55EE                    _Rwsdid 5314  
                  _Swsdid 5306                    _WswOff 5322  
                 postdec0 000FED                   postdec1 000FE5  
                 postinc0 000FEE                   postinc1 000FE6  
           _FormatWswData 506E                    tblptrh 000FF7  
                  tblptrl 000FF6     __end_of_FormatWswData 51BC  
__end_of_AllKolToFirstPoz 57B0                _RefreshWSW 42D2  
