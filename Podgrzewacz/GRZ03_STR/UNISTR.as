opt subtitle "Microchip Technology Omniscient Code Generator (PRO mode) build 52243"

opt pagewidth 120

	opt pm

	processor	18F4525
porta	equ	0F80h
portb	equ	0F81h
portc	equ	0F82h
portd	equ	0F83h
porte	equ	0F84h
lata	equ	0F89h
latb	equ	0F8Ah
latc	equ	0F8Bh
latd	equ	0F8Ch
late	equ	0F8Dh
trisa	equ	0F92h
trisb	equ	0F93h
trisc	equ	0F94h
trisd	equ	0F95h
trise	equ	0F96h
pie1	equ	0F9Dh
pir1	equ	0F9Eh
ipr1	equ	0F9Fh
pie2	equ	0FA0h
pir2	equ	0FA1h
ipr2	equ	0FA2h
t3con	equ	0FB1h
tmr3l	equ	0FB2h
tmr3h	equ	0FB3h
ccp1con	equ	0FBDh
ccpr1l	equ	0FBEh
ccpr1h	equ	0FBFh
adcon1	equ	0FC1h
adcon0	equ	0FC2h
adresl	equ	0FC3h
adresh	equ	0FC4h
sspcon2	equ	0FC5h
sspcon1	equ	0FC6h
sspstat	equ	0FC7h
sspadd	equ	0FC8h
sspbuf	equ	0FC9h
t2con	equ	0FCAh
pr2	equ	0FCBh
tmr2	equ	0FCCh
t1con	equ	0FCDh
tmr1l	equ	0FCEh
tmr1h	equ	0FCFh
rcon	equ	0FD0h
wdtcon	equ	0FD1h
lvdcon	equ	0FD2h
osccon	equ	0FD3h
t0con	equ	0FD5h
tmr0l	equ	0FD6h
tmr0h	equ	0FD7h
status	equ	0FD8h
fsr2	equ	0FD9h
fsr2l	equ	0FD9h
fsr2h	equ	0FDAh
plusw2	equ	0FDBh
preinc2	equ	0FDCh
postdec2	equ	0FDDh
postinc2	equ	0FDEh
indf2	equ	0FDFh
bsr	equ	0FE0h
fsr1	equ	0FE1h
fsr1l	equ	0FE1h
fsr1h	equ	0FE2h
plusw1	equ	0FE3h
preinc1	equ	0FE4h
postdec1	equ	0FE5h
postinc1	equ	0FE6h
indf1	equ	0FE7h
wreg	equ	0FE8h
fsr0	equ	0FE9h
fsr0l	equ	0FE9h
fsr0h	equ	0FEAh
plusw0	equ	0FEBh
preinc0	equ	0FECh
postdec0	equ	0FEDh
postinc0	equ	0FEEh
indf0	equ	0FEFh
intcon3	equ	0FF0h
intcon2	equ	0FF1h
intcon	equ	0FF2h
prod	equ	0FF3h
prodl	equ	0FF3h
prodh	equ	0FF4h
tablat	equ	0FF5h
tblptr	equ	0FF6h
tblptrl	equ	0FF6h
tblptrh	equ	0FF7h
tblptru	equ	0FF8h
pcl	equ	0FF9h
pclat	equ	0FFAh
pclath	equ	0FFAh
pclatu	equ	0FFBh
stkptr	equ	0FFCh
tosl	equ	0FFDh
tosh	equ	0FFEh
tosu	equ	0FFFh
skipnz macro
	btfsc	status,2
endm
pushw macro
	movwf postinc1
endm
pushf macro arg1
	movff arg1, postinc1
endm
popw macro
	movf postdec1,w
	movf indf1,w
endm
popf macro arg1
	movf postdec1,w
	movff indf1,arg1
endm
popfc macro arg1
	movff plusw1,arg1
	decfsz fsr1,f
endm
	global	__ramtop
	global	__accesstop
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 79 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 79 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 99,99,98,98,97,96,95,95 ;# 
# 80 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 80 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 94,93,93,92,91,91,90,89 ;# 
# 81 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 81 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 89,88,87,87,86,85,85,84 ;# 
# 82 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 82 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 84,83,83,82,81,81,80,80 ;# 
# 83 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 83 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 79,79,78,78,77,76,76,76 ;# 
# 84 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 84 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 75,75,74,74,73,73,72,72 ;# 
# 85 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 85 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 71,71,70,70,69,69,68,68 ;# 
# 86 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 86 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 67,67,66,66,65,65,64,64 ;# 
# 87 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 87 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 64,63,63,62,62,61,61,61 ;# 
# 88 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 88 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 60,60,59,59,58,58,57,57 ;# 
# 89 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 89 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 57,56,56,55,55,54,54,54 ;# 
# 90 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 90 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 53,53,52,52,52,51,51,50 ;# 
# 91 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 91 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 50,49,49,49,48,48,47,47 ;# 
# 92 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 92 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 46,46,46,45,45,44,44,44 ;# 
# 93 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 93 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 43,43,42,42,41,41,41,40 ;# 
# 94 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 94 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 40,39,39,38,38,37,37,37 ;# 
# 95 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 95 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 36,36,35,35,34,34,33,33 ;# 
# 96 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 96 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 32,32,31,31,31,30,30,29 ;# 
# 97 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 97 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 29,28,27,27,26,26,25,24 ;# 
# 98 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 98 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 24,23,23,22,22,21,21,20 ;# 
# 99 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 99 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 19,19,18,17,17,16,16,15 ;# 
# 100 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 100 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 14,14,13,12,11,11,10,09 ;# 
# 101 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 101 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 08,08,07,06,05,04,03,02 ;# 
# 102 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 102 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 01,00,00,00,00,00,00,00 ;# 
# 106 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 106 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 0,80,99,60,0,1,00,00 ;# 
# 107 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 107 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 00,00,00,00,00,00,00,00 ;# 
# 138 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 138 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 40,39,39,38,37,37,36,36 ;# 
# 139 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 139 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 35,34,34,33,33,32,32,31 ;# 
# 140 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 140 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 31,30,30,29,29,28,28,27 ;# 
# 141 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 141 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 27,26,26,25,25,24,24,23 ;# 
# 142 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 142 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 23,22,22,22,21,21,20,20 ;# 
# 143 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 143 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 19,19,19,18,18,18,17,17 ;# 
# 144 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 144 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 17,16,16,15,15,15,14,14 ;# 
# 145 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 145 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 14,13,13,13,12,12,12,11 ;# 
# 146 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 146 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 11,11,10,10,10,9,9,9 ;# 
# 147 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 147 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 8,8,8,7,7,7,6,6 ;# 
# 148 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 148 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 5,5,5,4,4,4,4,3 ;# 
# 149 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 149 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 3,3,2,2,2,1,1,1 ;# 
# 150 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 150 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 1,0,0,0,-1,-1,-1,-2 ;# 
# 151 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 151 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -2,-2,-2,-3,-3,-3,-4,-4 ;# 
# 152 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 152 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -4,-5,-5,-5,-6,-6,-6,-7 ;# 
# 153 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 153 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -7,-7,-8,-8,-8,-9,-9,-9 ;# 
# 154 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 154 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -10,-10,-10,-11,-11,-11,-12,-12 ;# 
# 155 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 155 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -12,-13,-13,-13,-14,-14,-14,-15 ;# 
# 156 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 156 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -15,-15,-16,-16,-16,-17,-17,-17 ;# 
# 157 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 157 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -18,-18,-19,-19,-19,-20,-20,-20 ;# 
# 158 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 158 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -21,-21,-22,-22,-23,-23,-23,-24 ;# 
# 159 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 159 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -24,-25,-25,-26,-26,-27,-27,-27 ;# 
# 160 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 160 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -28,-28,-29,-29,-30,-30,-31,-31 ;# 
# 161 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 161 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -32,-33,-33,-34,-35,-35,-36,-37 ;# 
# 162 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 162 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -37,-38,-39,-40,-40,-40,-40,-40 ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
# 53 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 53 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 99,99,98,98,97,96,95,95 ;# 
# 54 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 54 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 94,93,92,92,91,90,90,89 ;# 
# 55 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 55 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 88,88,87,87,86,85,85,84 ;# 
# 56 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 56 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 84,83,82,82,81,81,80,80 ;# 
# 57 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 57 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 79,79,78,77,77,76,76,75 ;# 
# 58 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 58 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 75,74,74,73,73,72,72,71 ;# 
# 59 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 59 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 71,70,70,70,69,69,68,68 ;# 
# 60 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 60 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 67,67,66,66,65,65,64,64 ;# 
# 61 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 61 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 64,63,63,62,62,61,61,61 ;# 
# 62 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 62 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 60,60,59,59,58,58,57,57 ;# 
# 63 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 63 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 57,56,56,55,55,54,54,54 ;# 
# 64 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 64 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 53,53,52,52,52,51,51,50 ;# 
# 65 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 65 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 50,49,49,49,48,48,47,47 ;# 
# 66 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 66 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 46,46,46,45,45,44,44,44 ;# 
# 67 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 67 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 43,43,42,42,41,41,41,40 ;# 
# 68 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 68 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 40,39,39,38,38,37,37,37 ;# 
# 69 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 69 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 36,36,35,35,34,34,33,33 ;# 
# 70 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 70 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 32,32,31,31,30,30,29,29 ;# 
# 71 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 71 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 28,28,27,27,26,26,25,24 ;# 
# 72 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 72 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 24,23,23,22,22,21,21,20 ;# 
# 73 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 73 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 19,19,18,17,17,16,16,15 ;# 
# 74 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 74 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 14,14,13,12,11,11,10,09 ;# 
# 75 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 75 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 08,07,06,06,05,04,03,02 ;# 
# 76 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 76 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 01,00,00,00,00,00,00,00 ;# 
# 106 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 106 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 0,80,99,60,0,1,00,00 ;# 
# 107 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 107 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 00,00,00,00,00,00,00,00 ;# 
# 111 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 111 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 40,40,39,38,38,37,36,36 ;# 
# 112 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 112 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 35,34,34,33,33,32,32,31 ;# 
# 113 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 113 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 31,30,30,29,29,28,28,27 ;# 
# 114 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 114 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 27,26,26,25,25,24,24,23 ;# 
# 115 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 115 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 23,22,22,22,21,21,20,20 ;# 
# 116 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 116 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 20,19,19,18,18,18,17,17 ;# 
# 117 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 117 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 17,16,16,15,15,15,14,14 ;# 
# 118 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 118 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 14,13,13,13,12,12,12,11 ;# 
# 119 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 119 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 11,11,10,10,10,9,9,9 ;# 
# 120 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 120 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 8,8,8,7,7,7,6,6 ;# 
# 121 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 121 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 6,5,5,5,4,4,4,3 ;# 
# 122 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 122 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 3,3,2,2,2,1,1,1 ;# 
# 123 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 123 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db 1,0,0,0,-1,-1,-1,-2 ;# 
# 124 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 124 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -2,-2,-2,-3,-3,-3,-4,-4 ;# 
# 125 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 125 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -4,-5,-5,-5,-6,-6,-6,-7 ;# 
# 126 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 126 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -7,-7,-8,-8,-8,-9,-9,-9 ;# 
# 127 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 127 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -9,-10,-10,-10,-11,-11,-11,-12 ;# 
# 128 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 128 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -12,-13,-13,-13,-13,-14,-14,-14 ;# 
# 129 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 129 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -15,-15,-16,-16,-16,-17,-17,-17 ;# 
# 130 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 130 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -18,-18,-18,-19,-19,-20,-20,-20 ;# 
# 131 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 131 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -21,-21,-22,-22,-22,-23,-23,-24 ;# 
# 132 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 132 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -24,-25,-25,-25,-26,-26,-27,-27 ;# 
# 133 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 133 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -28,-28,-29,-29,-30,-30,-31,-31 ;# 
# 134 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 134 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -32,-33,-33,-34,-35,-35,-36,-37 ;# 
# 135 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 135 "C:\praca\PICC\backup\GRZ01V5\eeprom.h"
db -37,-38,-39,-40,-40,-40,-40,-40 ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTA equ 0F80h ;# 
# 184 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTB equ 0F81h ;# 
# 354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTC equ 0F82h ;# 
# 531 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTD equ 0F83h ;# 
# 672 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PORTE equ 0F84h ;# 
# 1000 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATA equ 0F89h ;# 
# 1132 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATB equ 0F8Ah ;# 
# 1264 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATC equ 0F8Bh ;# 
# 1396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATD equ 0F8Ch ;# 
# 1528 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LATE equ 0F8Dh ;# 
# 1630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISA equ 0F92h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRA equ 0F92h ;# 
# 1851 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISB equ 0F93h ;# 
# 1856 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRB equ 0F93h ;# 
# 2072 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISC equ 0F94h ;# 
# 2077 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRC equ 0F94h ;# 
# 2293 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISD equ 0F95h ;# 
# 2298 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRD equ 0F95h ;# 
# 2514 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TRISE equ 0F96h ;# 
# 2519 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
DDRE equ 0F96h ;# 
# 2677 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCTUNE equ 0F9Bh ;# 
# 2741 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE1 equ 0F9Dh ;# 
# 2820 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR1 equ 0F9Eh ;# 
# 2899 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR1 equ 0F9Fh ;# 
# 2978 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIE2 equ 0FA0h ;# 
# 3043 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PIR2 equ 0FA1h ;# 
# 3108 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
IPR2 equ 0FA2h ;# 
# 3173 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON1 equ 0FA6h ;# 
# 3238 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EECON2 equ 0FA7h ;# 
# 3244 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEDATA equ 0FA8h ;# 
# 3250 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADR equ 0FA9h ;# 
# 3256 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
EEADRH equ 0FAAh ;# 
# 3262 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA equ 0FABh ;# 
# 3267 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCSTA1 equ 0FABh ;# 
# 3419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA equ 0FACh ;# 
# 3424 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXSTA1 equ 0FACh ;# 
# 3682 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG equ 0FADh ;# 
# 3687 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TXREG1 equ 0FADh ;# 
# 3693 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG equ 0FAEh ;# 
# 3698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCREG1 equ 0FAEh ;# 
# 3704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG equ 0FAFh ;# 
# 3709 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRG1 equ 0FAFh ;# 
# 3715 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SPBRGH equ 0FB0h ;# 
# 3721 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T3CON equ 0FB1h ;# 
# 3834 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3 equ 0FB2h ;# 
# 3840 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3L equ 0FB2h ;# 
# 3846 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR3H equ 0FB3h ;# 
# 3852 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CMCON equ 0FB4h ;# 
# 3947 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CVRCON equ 0FB5h ;# 
# 4025 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCP1AS equ 0FB6h ;# 
# 4030 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ECCPAS equ 0FB6h ;# 
# 4186 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PWM1CON equ 0FB7h ;# 
# 4255 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCON equ 0FB8h ;# 
# 4260 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BAUDCTL equ 0FB8h ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP2CON equ 0FBAh ;# 
# 4504 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2 equ 0FBBh ;# 
# 4510 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2L equ 0FBBh ;# 
# 4516 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR2H equ 0FBCh ;# 
# 4522 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCP1CON equ 0FBDh ;# 
# 4618 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1 equ 0FBEh ;# 
# 4624 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1L equ 0FBEh ;# 
# 4630 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
CCPR1H equ 0FBFh ;# 
# 4636 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON2 equ 0FC0h ;# 
# 4706 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON1 equ 0FC1h ;# 
# 4796 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADCON0 equ 0FC2h ;# 
# 4918 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRES equ 0FC3h ;# 
# 4924 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESL equ 0FC3h ;# 
# 4930 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
ADRESH equ 0FC4h ;# 
# 4936 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON2 equ 0FC5h ;# 
# 4997 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPCON1 equ 0FC6h ;# 
# 5066 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPSTAT equ 0FC7h ;# 
# 5305 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPADD equ 0FC8h ;# 
# 5311 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
SSPBUF equ 0FC9h ;# 
# 5317 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T2CON equ 0FCAh ;# 
# 5414 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PR2 equ 0FCBh ;# 
# 5419 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
MEMCON equ 0FCBh ;# 
# 5425 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR2 equ 0FCCh ;# 
# 5431 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T1CON equ 0FCDh ;# 
# 5535 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1 equ 0FCEh ;# 
# 5541 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1L equ 0FCEh ;# 
# 5547 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR1H equ 0FCFh ;# 
# 5553 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
RCON equ 0FD0h ;# 
# 5685 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WDTCON equ 0FD1h ;# 
# 5712 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
HLVDCON equ 0FD2h ;# 
# 5717 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
LVDCON equ 0FD2h ;# 
# 5981 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
OSCCON equ 0FD3h ;# 
# 6063 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
T0CON equ 0FD5h ;# 
# 6139 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0 equ 0FD6h ;# 
# 6145 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0L equ 0FD6h ;# 
# 6151 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TMR0H equ 0FD7h ;# 
# 6157 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STATUS equ 0FD8h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2 equ 0FD9h ;# 
# 6241 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2L equ 0FD9h ;# 
# 6247 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR2H equ 0FDAh ;# 
# 6253 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW2 equ 0FDBh ;# 
# 6259 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC2 equ 0FDCh ;# 
# 6265 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC2 equ 0FDDh ;# 
# 6271 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC2 equ 0FDEh ;# 
# 6277 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF2 equ 0FDFh ;# 
# 6283 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
BSR equ 0FE0h ;# 
# 6289 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1 equ 0FE1h ;# 
# 6295 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1L equ 0FE1h ;# 
# 6301 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR1H equ 0FE2h ;# 
# 6307 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW1 equ 0FE3h ;# 
# 6313 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC1 equ 0FE4h ;# 
# 6319 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC1 equ 0FE5h ;# 
# 6325 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC1 equ 0FE6h ;# 
# 6331 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF1 equ 0FE7h ;# 
# 6337 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
WREG equ 0FE8h ;# 
# 6348 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0 equ 0FE9h ;# 
# 6354 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0L equ 0FE9h ;# 
# 6360 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
FSR0H equ 0FEAh ;# 
# 6366 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PLUSW0 equ 0FEBh ;# 
# 6372 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PREINC0 equ 0FECh ;# 
# 6378 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTDEC0 equ 0FEDh ;# 
# 6384 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
POSTINC0 equ 0FEEh ;# 
# 6390 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INDF0 equ 0FEFh ;# 
# 6396 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON3 equ 0FF0h ;# 
# 6487 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON2 equ 0FF1h ;# 
# 6556 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
INTCON equ 0FF2h ;# 
# 6692 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PROD equ 0FF3h ;# 
# 6698 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODL equ 0FF3h ;# 
# 6704 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PRODH equ 0FF4h ;# 
# 6710 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TABLAT equ 0FF5h ;# 
# 6718 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTR equ 0FF6h ;# 
# 6724 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRL equ 0FF6h ;# 
# 6730 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRH equ 0FF7h ;# 
# 6736 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TBLPTRU equ 0FF8h ;# 
# 6744 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLAT equ 0FF9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PC equ 0FF9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCL equ 0FF9h ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATH equ 0FFAh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
PCLATU equ 0FFBh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
STKPTR equ 0FFCh ;# 
# 6880 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOS equ 0FFDh ;# 
# 6886 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSL equ 0FFDh ;# 
# 6892 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSH equ 0FFEh ;# 
# 6898 "C:\Program Files\Microchip\xc8\v1.20\include\pic18f4525.h"
TOSU equ 0FFFh ;# 
	FNCALL	_main,_InitWsw
	FNCALL	_main,_InitAC
	FNCALL	_main,_Read_b_eep
	FNCALL	_main,_InitI2C
	FNCALL	_main,_InitOsc
	FNCALL	_main,_InitGlobal
	FNCALL	_main,_InitTimer1
	FNCALL	_main,_InitPort
	FNCALL	_main,_InitPWM
	FNCALL	_main,_InitDataPmr
	FNCALL	_main,_ClearData
	FNCALL	_main,_TestScr
	FNCALL	_main,_PwrOnDelay
	FNCALL	_main,_EndTestScr
	FNCALL	_main,_ClsScr
	FNCALL	_main,_EndClsScr
	FNCALL	_main,_EnKonf
	FNCALL	_main,_RdEEParam
	FNCALL	_main,_PrintErr
	FNCALL	_main,_ErrPTG
	FNCALL	_main,_PomiarPCW
	FNCALL	_main,_RestartFltPrt
	FNCALL	_main,_StartRTS
	FNCALL	_main,_MKonfiguracja
	FNCALL	_main,_PomiarCW
	FNCALL	_main,_WritePCW
	FNCALL	_main,_FiltrPomiarowyCW
	FNCALL	_main,_DecWSW
	FNCALL	_main,_DecERR
	FNCALL	_main,_DecSTR
	FNCALL	_main,_DecRozruch
	FNCALL	_main,_DecWylacz
	FNCALL	_main,_FunkcjaSerwisowa
	FNCALL	_main,_KolejkaPobudzen
	FNCALL	_main,_Rozruch
	FNCALL	_main,_VWybieg
	FNCALL	_main,_ReloadPlomien
	FNCALL	_main,_RuszPlomien
	FNCALL	_main,_ReloadCiag
	FNCALL	_main,_RuszCiag
	FNCALL	_main,_Moduluj
	FNCALL	_Moduluj,_StartRTdS
	FNCALL	_Moduluj,_RTdS
	FNCALL	_Moduluj,_StartMCW4
	FNCALL	_Moduluj,_ReadDataCW4
	FNCALL	_Moduluj,_ModToCW4
	FNCALL	_Moduluj,_ModZgCW4
	FNCALL	_Moduluj,_ModDkCW4
	FNCALL	_Moduluj,_IncConstCW4
	FNCALL	_Moduluj,_IncMaxCW4
	FNCALL	_Moduluj,_ModPruCW4
	FNCALL	_Moduluj,_ModPrzCW4
	FNCALL	_Moduluj,_SetPWM_CW4
	FNCALL	_SetPWM_CW4,_WriteOPWM
	FNCALL	_WriteOPWM,___lwdiv
	FNCALL	_WriteOPWM,___wmul
	FNCALL	_ModPrzCW4,_Tnizsza
	FNCALL	_ModPrzCW4,_Twyzsza
	FNCALL	_ModPrzCW4,_Tmaleje
	FNCALL	_ModPrzCW4,___awdiv
	FNCALL	_ModPruCW4,_Tstoi
	FNCALL	_ModPruCW4,_Tnizsza
	FNCALL	_ModPruCW4,_Twyzsza
	FNCALL	_ModPruCW4,_Trosnie
	FNCALL	_ModPruCW4,_Tmaleje
	FNCALL	_IncMaxCW4,_Trosnie
	FNCALL	_IncConstCW4,_Tstoi
	FNCALL	_ModDkCW4,___wmul
	FNCALL	_ModZgCW4,_Tnizsza
	FNCALL	_ModZgCW4,___aldiv
	FNCALL	_ModZgCW4,___lmul
	FNCALL	_ModZgCW4,___wmul
	FNCALL	_StartMCW4,_StartRTdS
	FNCALL	_StartMCW4,_FirstPCW4
	FNCALL	_RuszCiag,_RdPrt
	FNCALL	_RuszCiag,_PrintErr
	FNCALL	_RuszCiag,_ErrPTG
	FNCALL	_RuszCiag,_StartRTS
	FNCALL	_RuszCiag,_RTS
	FNCALL	_RuszCiag,_StartRTM
	FNCALL	_RuszCiag,_RTM
	FNCALL	_ReloadCiag,_RTS
	FNCALL	_RuszPlomien,_StartRTdS
	FNCALL	_RuszPlomien,_StartRTS
	FNCALL	_RuszPlomien,_RTS
	FNCALL	_ReloadPlomien,_RTdS
	FNCALL	_Rozruch,_RdPrt
	FNCALL	_Rozruch,_PrintErr
	FNCALL	_Rozruch,_ErrPTG
	FNCALL	_Rozruch,_StartRTS
	FNCALL	_Rozruch,_PrintNstCW
	FNCALL	_Rozruch,_RTS
	FNCALL	_Rozruch,_WritePWM
	FNCALL	_Rozruch,_GrzejON
	FNCALL	_Rozruch,_DecyzjaPLM
	FNCALL	_Rozruch,_DecyzjaPLM2
	FNCALL	_Rozruch,_FirstPCW4
	FNCALL	_FirstPCW4,___aldiv
	FNCALL	_FirstPCW4,___lmul
	FNCALL	_FirstPCW4,___wmul
	FNCALL	_DecyzjaPLM2,_RdPrt
	FNCALL	_DecyzjaPLM2,_PrintErr
	FNCALL	_DecyzjaPLM2,_ErrPTG
	FNCALL	_DecyzjaPLM,_PrintErr
	FNCALL	_DecyzjaPLM,_ErrPTG
	FNCALL	_KolejkaPobudzen,_RdPrt
	FNCALL	_FunkcjaSerwisowa,_RdPrt
	FNCALL	_FunkcjaSerwisowa,_StartRTS
	FNCALL	_FunkcjaSerwisowa,_PrintNstCW
	FNCALL	_FunkcjaSerwisowa,_RTS
	FNCALL	_FunkcjaSerwisowa,_StartRTM
	FNCALL	_FunkcjaSerwisowa,_RTM
	FNCALL	_DecWylacz,_SetWylacz
	FNCALL	_SetWylacz,_GrzejOFF
	FNCALL	_DecRozruch,_SetRozruch
	FNCALL	_DecSTR,_RdPrt
	FNCALL	_DecSTR,_RTS
	FNCALL	_DecSTR,_RestartMod
	FNCALL	_DecSTR,_WritePWM
	FNCALL	_DecERR,_RdPrt
	FNCALL	_DecERR,_PrintErr
	FNCALL	_DecERR,_ErrPTG
	FNCALL	_DecERR,_StartRTS
	FNCALL	_DecERR,_EndErr
	FNCALL	_ErrPTG,_PomiarPCW
	FNCALL	_ErrPTG,_PomiarCW
	FNCALL	_ErrPTG,_VWybieg
	FNCALL	_ErrPTG,_EndErr
	FNCALL	_ErrPTG,_WritePWM
	FNCALL	_ErrPTG,_GrzejOFF
	FNCALL	_ErrPTG,_KeyRes
	FNCALL	_ErrPTG,_VZPauza
	FNCALL	_ErrPTG,_Busy_eep
	FNCALL	_ErrPTG,_Write_b_eep
	FNCALL	_ErrPTG,_PrintPR
	FNCALL	_ErrPTG,_ToReset
	FNCALL	_ToReset,_Busy_eep
	FNCALL	_ToReset,_Write_b_eep
	FNCALL	_VZPauza,_StartRTS
	FNCALL	_VZPauza,_RTS
	FNCALL	_KeyRes,_RdPrt
	FNCALL	_KeyRes,_StartRTS
	FNCALL	_KeyRes,_RTS
	FNCALL	_EndErr,_ResetKol
	FNCALL	_VWybieg,_StartRTS
	FNCALL	_VWybieg,_RTS
	FNCALL	_PomiarCW,_ReadAC
	FNCALL	_PomiarCW,_ReadTabNTC
	FNCALL	_ReadTabNTC,_Read_b_eep
	FNCALL	_PrintErr,_SetStatus
	FNCALL	_PrintErr,_SetData
	FNCALL	_PrintErr,_SetPoz
	FNCALL	_DecWSW,_PrintOFF
	FNCALL	_DecWSW,_PrintCW
	FNCALL	_DecWSW,_EndOFF
	FNCALL	_DecWSW,_PrintNstCW
	FNCALL	_PrintNstCW,_SetStatus
	FNCALL	_PrintNstCW,_SetData
	FNCALL	_PrintNstCW,_RestartKol
	FNCALL	_EndOFF,_SetStatus
	FNCALL	_PrintCW,_SetStatus
	FNCALL	_PrintCW,_SetData
	FNCALL	_PrintOFF,_SetStatus
	FNCALL	_PrintOFF,_SetData
	FNCALL	_FiltrPomiarowyCW,_StartTim1
	FNCALL	_FiltrPomiarowyCW,_PmrTim1
	FNCALL	_FiltrPomiarowyCW,_StartTim2
	FNCALL	_FiltrPomiarowyCW,_PmrTim2
	FNCALL	_FiltrPomiarowyCW,_GoldenEye
	FNCALL	_FiltrPomiarowyCW,_FltParMod
	FNCALL	_FltParMod,_PredkoscZmianCW
	FNCALL	_GoldenEye,___wmul
	FNCALL	_WritePCW,_StartRTdS
	FNCALL	_WritePCW,_RTdS
	FNCALL	_WritePCW,_WriteEEPCW
	FNCALL	_WriteEEPCW,_Busy_eep
	FNCALL	_WriteEEPCW,_Write_b_eep
	FNCALL	_MKonfiguracja,_RdPrt
	FNCALL	_MKonfiguracja,_SetBufKey1
	FNCALL	_MKonfiguracja,_PresKey1
	FNCALL	_MKonfiguracja,_SetBufKey2
	FNCALL	_MKonfiguracja,_PresKey2
	FNCALL	_MKonfiguracja,_StartRTS
	FNCALL	_MKonfiguracja,_RTS
	FNCALL	_MKonfiguracja,_StartRTM
	FNCALL	_MKonfiguracja,_RTM
	FNCALL	_MKonfiguracja,_Busy_eep
	FNCALL	_MKonfiguracja,_Write_b_eep
	FNCALL	_MKonfiguracja,_PrintPR
	FNCALL	_MKonfiguracja,_PrintWPR
	FNCALL	_MKonfiguracja,_ModParam
	FNCALL	_MKonfiguracja,_MocStart
	FNCALL	_MKonfiguracja,_MocMaksCW
	FNCALL	_MKonfiguracja,_ReadDataONL
	FNCALL	_MKonfiguracja,_ReadDataXONL
	FNCALL	_MKonfiguracja,_ExitKonf
	FNCALL	_ExitKonf,_RdEEParam
	FNCALL	_ExitKonf,_PomiarPCW
	FNCALL	_ExitKonf,_EndPR
	FNCALL	_EndPR,_ResetKol
	FNCALL	_PomiarPCW,_ReturnACfromNTC
	FNCALL	_PomiarPCW,_RdPrt
	FNCALL	_PomiarPCW,_StartRTdS
	FNCALL	_PomiarPCW,_RTdS
	FNCALL	_PomiarPCW,_SetModPCW
	FNCALL	_PomiarPCW,_ReadDataXONLI
	FNCALL	_PomiarPCW,_ReadDataXONLD
	FNCALL	_PomiarPCW,_RNst
	FNCALL	_RNst,_SetData
	FNCALL	_ReadDataXONLD,_ExPresKey2B
	FNCALL	_ReadDataXONLD,___lbdiv
	FNCALL	_ExPresKey2B,_StartRTdS
	FNCALL	_ExPresKey2B,_RTdS
	FNCALL	_ReadDataXONLI,_ExPresKey2
	FNCALL	_ReadDataXONLI,___lbdiv
	FNCALL	_ReturnACfromNTC,_Read_b_eep
	FNCALL	_RdEEParam,_Read_b_eep
	FNCALL	_RdEEParam,_ModParam
	FNCALL	_RdEEParam,_MocStart
	FNCALL	_RdEEParam,_MocMaksCW
	FNCALL	_RdEEParam,_SetTpKtParam
	FNCALL	_MocMaksCW,___awdiv
	FNCALL	_MocMaksCW,___lwdiv
	FNCALL	_MocMaksCW,___wmul
	FNCALL	_MocStart,___awdiv
	FNCALL	_MocStart,___lwdiv
	FNCALL	_MocStart,___wmul
	FNCALL	_ReadDataXONL,_ExPresKey2
	FNCALL	_ReadDataXONL,___lbdiv
	FNCALL	_ExPresKey2,_StartRTdS
	FNCALL	_ExPresKey2,_RTdS
	FNCALL	_ReadDataONL,_ExPresKey
	FNCALL	_ExPresKey,_StartRTdS
	FNCALL	_ExPresKey,_RTdS
	FNCALL	_PrintWPR,_SetStatus
	FNCALL	_PrintWPR,_SetData
	FNCALL	_PrintWPR,_SetPoz
	FNCALL	_PrintPR,_SetStatus
	FNCALL	_PrintPR,_SetData
	FNCALL	_PrintPR,_SetPoz
	FNCALL	_RestartFltPrt,_SetPrt
	FNCALL	_EnKonf,_StartRTS
	FNCALL	_EndClsScr,_WswOn
	FNCALL	_EndClsScr,_AllKolToFirstPoz
	FNCALL	_ClsScr,_WswOff
	FNCALL	_EndTestScr,_SetStatus
	FNCALL	_EndTestScr,_SetData
	FNCALL	_PwrOnDelay,_StartRTdS
	FNCALL	_PwrOnDelay,_RTdS
	FNCALL	_TestScr,_SetStatus
	FNCALL	_TestScr,_SetData
	FNCALL	_InitPort,_RefStan
	FNCALL	_InitPort,_FrsStan
	FNCALL	_InitWsw,_SetStatus
	FNROOT	_main
	FNCALL	_ISR,_RefreshWSW
	FNCALL	_ISR,_I2CSlaveTR
	FNCALL	_ISR,_FormatDataIMY
	FNCALL	_ISR,_ReloadTimer1
	FNCALL	_ISR,_IncRTimer
	FNCALL	_ISR,_IncPmrTimer
	FNCALL	_ISR,_SetResMux
	FNCALL	_ISR,_StabPort
	FNCALL	_ISR,_IntPWM
	FNCALL	_StabPort,i2_RefStan
	FNCALL	_FormatDataIMY,_BitSet
	FNCALL	_FormatDataIMY,i2_RdPrt
	FNCALL	_I2CSlaveTR,_SetTData
	FNCALL	_I2CSlaveTR,_LiczCHK
	FNCALL	_I2CSlaveTR,_SetRData
	FNCALL	_I2CSlaveTR,_ReceptData
	FNCALL	_I2CSlaveTR,_TransmitData
	FNCALL	_ReceptData,_LiczCHK
	FNCALL	_ReceptData,_ToWork
	FNCALL	_RefreshWSW,_KolProc
	FNCALL	_RefreshWSW,_SetPrWswData
	FNCALL	_RefreshWSW,_FormatWswData
	FNCALL	_RefreshWSW,_PrintWswData
	FNCALL	_FormatWswData,___lbmod
	FNCALL	_FormatWswData,i2___lbdiv
	FNCALL	intlevel2,_ISR
	global	intlevel2
	FNROOT	intlevel2
	global	_Nastawa
psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
global __psmallconst
__psmallconst:
	file	"C:\praca\PICC\backup\GRZ01V5\port.c"
	line	26
_Nastawa:
	db	low(01h)
	db	low(01h)
	db	low(01h)
	db	low(01h)
	db	low(02h)
	db	low(01h)
	db	low(02h)
	db	low(01h)
	db	low(02h)
	db	low(02h)
	db	low(04h)
	db	low(08h)
	db	low(02h)
	db	low(02h)
	db	low(05h)
	db	low(05h)
	db	low(02h)
	db	low(02h)
	db	low(02h)
	db	low(0Ah)
	global __end_of_Nastawa
__end_of_Nastawa:
	global	_Znak
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	276
_Znak:
	db	low(03h)
	db	low(09Fh)
	db	low(025h)
	db	low(0Dh)
	db	low(099h)
	db	low(049h)
	db	low(041h)
	db	low(01Fh)
	db	low(01h)
	db	low(09h)
	db	low(011h)
	db	low(0C1h)
	db	low(063h)
	db	low(085h)
	db	low(061h)
	db	low(071h)
	global __end_of_Znak
__end_of_Znak:
	global	_Klj
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	212
_Klj:
	db	low(low((_KL0))|(__smallconst&~0xff))
	db	low(02h)
	db	low(low((_KL1))|(__smallconst&~0xff))
	db	low(02h)
	db	low(low((_KL2))|(__smallconst&~0xff))
	db	low(02h)
	db	low(low((_KL3))|(__smallconst&~0xff))
	db	low(02h)
	global __end_of_Klj
__end_of_Klj:
	global	_KL0
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	203
_KL0:
	db	low(low((_KL0_AP))|(__smallconst&~0xff))
	db	low(low((_KL0_WP))|(__smallconst&~0xff))
	db	low(low((_KL0_FP))|(__smallconst&~0xff))
	dw	(_KL0_FC)&0ffffh
	db	low(low((_KL0_OUT))|(__smallconst&~0xff))
	global __end_of_KL0
__end_of_KL0:
	global	_KL0_WP
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	123
_KL0_WP:
	db	low(0)
	db	low(0)
	db	low(06h)
	db	low(0)
	db	low(0)
	db	low(06h)
	global __end_of_KL0_WP
__end_of_KL0_WP:
	global	_KL1
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	204
_KL1:
	db	low(low((_KL1_AP))|(__smallconst&~0xff))
	db	low(low((_KL1_WP))|(__smallconst&~0xff))
	db	low(low((_KL1_FP))|(__smallconst&~0xff))
	dw	(_KL1_FC)&0ffffh
	db	low(low((_KL1_OUT))|(__smallconst&~0xff))
	global __end_of_KL1
__end_of_KL1:
	global	_KL1_WP
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	128
_KL1_WP:
	db	low(0)
	db	low(0)
	db	low(06h)
	db	low(0)
	db	low(0)
	db	low(06h)
	global __end_of_KL1_WP
__end_of_KL1_WP:
	global	_KL2
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	205
_KL2:
	db	low(low((_KL2_AP))|(__smallconst&~0xff))
	db	low(low((_KL2_WP))|(__smallconst&~0xff))
	db	low(low((_KL2_FP))|(__smallconst&~0xff))
	dw	(_KL2_FC)&0ffffh
	db	low(low((_KL2_OUT))|(__smallconst&~0xff))
	global __end_of_KL2
__end_of_KL2:
	global	_KL2_WP
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	133
_KL2_WP:
	db	low(0)
	db	low(0)
	db	low(06h)
	db	low(0)
	db	low(0)
	db	low(06h)
	global __end_of_KL2_WP
__end_of_KL2_WP:
	global	_KL3
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	206
_KL3:
	db	low(low((_KL3_AP))|(__smallconst&~0xff))
	db	low(low((_KL3_WP))|(__smallconst&~0xff))
	db	low(low((_KL3_FP))|(__smallconst&~0xff))
	dw	(_KL3_FC)&0ffffh
	db	low(low((_KL3_OUT))|(__smallconst&~0xff))
	global __end_of_KL3
__end_of_KL3:
	global	_KL3_WP
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	138
_KL3_WP:
	db	low(0)
	db	low(0)
	db	low(06h)
	db	low(0)
	db	low(0)
	db	low(06h)
	global __end_of_KL3_WP
__end_of_KL3_WP:
	global	_KL0_AP
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	96
_KL0_AP:
	dw	(_DWD)&0ffffh
	dw	(_DWD+04h)&0ffffh
	global __end_of_KL0_AP
__end_of_KL0_AP:
	global	_KL0_FP
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	149
_KL0_FP:
	db	low(0)
	db	low(0)
	db	low(0)
	db	low(0)
	global __end_of_KL0_FP
__end_of_KL0_FP:
	global	_KL0_OUT
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	196
_KL0_OUT:
	dw	(_PWD)&0ffffh
	db	low(0)
	db	low(0)
	global __end_of_KL0_OUT
__end_of_KL0_OUT:
	global	_KL1_AP
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	101
_KL1_AP:
	dw	(_DWD+08h)&0ffffh
	dw	(_DWD+08h)&0ffffh
	global __end_of_KL1_AP
__end_of_KL1_AP:
	global	_KL1_FP
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	154
_KL1_FP:
	db	low(0)
	db	low(0)
	db	low(0)
	db	low(0)
	global __end_of_KL1_FP
__end_of_KL1_FP:
	global	_KL1_OUT
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	197
_KL1_OUT:
	dw	(_PWD+04h)&0ffffh
	db	low(0)
	db	low(0)
	global __end_of_KL1_OUT
__end_of_KL1_OUT:
	global	_KL2_AP
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	106
_KL2_AP:
	dw	(_DWD+0Ch)&0ffffh
	dw	(_DWD+010h)&0ffffh
	global __end_of_KL2_AP
__end_of_KL2_AP:
	global	_KL2_FP
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	159
_KL2_FP:
	db	low(0)
	db	low(0)
	db	low(0)
	db	low(0)
	global __end_of_KL2_FP
__end_of_KL2_FP:
	global	_KL2_OUT
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	198
_KL2_OUT:
	dw	(_PWD+08h)&0ffffh
	db	low(04h)
	db	low(0)
	global __end_of_KL2_OUT
__end_of_KL2_OUT:
	global	_KL3_AP
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	111
_KL3_AP:
	dw	(_DWD+014h)&0ffffh
	dw	(_DWD+018h)&0ffffh
	global __end_of_KL3_AP
__end_of_KL3_AP:
	global	_KL3_FP
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	164
_KL3_FP:
	db	low(0)
	db	low(0)
	db	low(0)
	db	low(0)
	global __end_of_KL3_FP
__end_of_KL3_FP:
	global	_KL3_OUT
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	199
_KL3_OUT:
	dw	(_PWD+0Ch)&0ffffh
	db	low(0)
	db	low(0)
	global __end_of_KL3_OUT
__end_of_KL3_OUT:
	global	_RldT1
psect	smallconst
	file	"C:\praca\PICC\backup\GRZ01V5\timer1.c"
	line	12
_RldT1:
	dw	(063BFh)&0ffffh
	global __end_of_RldT1
__end_of_RldT1:
	global	_Nastawa
	global	_Znak
	global	_Klj
	global	_KL0
	global	_KL0_WP
	global	_KL1
	global	_KL1_WP
	global	_KL2
	global	_KL2_WP
	global	_KL3
	global	_KL3_WP
	global	_KL0_AP
	global	_KL0_FP
	global	_KL0_OUT
	global	_KL1_AP
	global	_KL1_FP
	global	_KL1_OUT
	global	_KL2_AP
	global	_KL2_FP
	global	_KL2_OUT
	global	_KL3_AP
	global	_KL3_FP
	global	_KL3_OUT
	global	_RldT1
	global	_PWM
	global	_SPort
	global	_rgl
	global	_CommRT
	global	FltParMod@fcw
	global	ModPruCW4@m
	global	ModPruCW4@s
	global	PredkoscZmianCW@indff
	global	_ky1
	global	_ky2
	global	_sp
	global	_sp2
	global	_tmr
	global	_DtCW
	global	IntPWM@btOsc
	global	ReadDataXONL@dtmo
	global	ReadDataXONLD@dtmo
	global	ReadDataXONLI@dtmo
	global	_M
	global	_Mn
	global	_Gd
	global	_KInd
	global	_WswData
	global	_LedData
	global	_PmrtimFlt3
	global	FltParMod@indtm
	global	ModPruCW4@l
	global	ModPruCW4@o
	global	ModPruCW4@p
	global	ModPruCW4@q
	global	ModZgCW4@pop
	global	PomiarPCW@pnst
	global	PredkoscZmianCW@ffcw
	global	ReadDataXONL@iu
	global	ReadDataXONL@ktu
	global	ReadDataXONLD@iu
	global	ReadDataXONLD@ktu
	global	ReadDataXONLI@iu
	global	ReadDataXONLI@ktu
	global	StabPort@tim
	global	_PmrtimFlt1
	global	_PmrtimFlt2
	global	_bfrs
	global	_tmr2
	global	_DtI2C
	global	_DtKNF
	global	_KL0_FC
	global	_Sk
	global	_dSk
	global	_DtCO
	global	_KTim
	global	_wff
	global	_DWD
	global	_BufI2C
	global	_PWD
	global	_KL1_FC
	global	_KL2_FC
	global	_KL3_FC
	global	_ADRESH
_ADRESH	set	0xFC4
	global	_CCP1CON
_CCP1CON	set	0xFBD
	global	_CCPR1H
_CCPR1H	set	0xFBF
	global	_CCPR1L
_CCPR1L	set	0xFBE
	global	_EEADR
_EEADR	set	0xFA9
	global	_EEADRH
_EEADRH	set	0xFAA
	global	_EECON1bits
_EECON1bits	set	0xFA6
	global	_EECON2
_EECON2	set	0xFA7
	global	_EEDATA
_EEDATA	set	0xFA8
	global	_INTCONbits
_INTCONbits	set	0xFF2
	global	_PORTA
_PORTA	set	0xF80
	global	_PORTB
_PORTB	set	0xF81
	global	_PORTC
_PORTC	set	0xF82
	global	_PORTD
_PORTD	set	0xF83
	global	_PORTE
_PORTE	set	0xF84
	global	_PR2
_PR2	set	0xFCB
	global	_SSPADD
_SSPADD	set	0xFC8
	global	_SSPBUF
_SSPBUF	set	0xFC9
	global	_T2CON
_T2CON	set	0xFCA
	global	_TMR1H
_TMR1H	set	0xFCF
	global	_TMR1L
_TMR1L	set	0xFCE
	global	_TMR2
_TMR2	set	0xFCC
	global	_TRISA
_TRISA	set	0xF92
	global	_TRISB
_TRISB	set	0xF93
	global	_TRISC
_TRISC	set	0xF94
	global	_TRISD
_TRISD	set	0xF95
	global	_TRISE
_TRISE	set	0xF96
	global	_ACQT0
_ACQT0	set	0x7E03
	global	_ACQT1
_ACQT1	set	0x7E04
	global	_ACQT2
_ACQT2	set	0x7E05
	global	_ADCS0
_ADCS0	set	0x7E00
	global	_ADCS1
_ADCS1	set	0x7E01
	global	_ADCS2
_ADCS2	set	0x7E02
	global	_ADFM
_ADFM	set	0x7E07
	global	_ADIE
_ADIE	set	0x7CEE
	global	_ADON
_ADON	set	0x7E10
	global	_BOR
_BOR	set	0x7E80
	global	_CHS0
_CHS0	set	0x7E12
	global	_CHS1
_CHS1	set	0x7E13
	global	_CHS2
_CHS2	set	0x7E14
	global	_CHS3
_CHS3	set	0x7E15
	global	_CKE
_CKE	set	0x7E3E
	global	_CKP
_CKP	set	0x7E34
	global	_DA
_DA	set	0x7E3D
	global	_DC1B0
_DC1B0	set	0x7DEC
	global	_DC1B1
_DC1B1	set	0x7DED
	global	_GIEH
_GIEH	set	0x7F97
	global	_GIEL
_GIEL	set	0x7F96
	global	_GODONE
_GODONE	set	0x7E11
	global	_IPEN
_IPEN	set	0x7E87
	global	_IRCF0
_IRCF0	set	0x7E9C
	global	_IRCF1
_IRCF1	set	0x7E9D
	global	_IRCF2
_IRCF2	set	0x7E9E
	global	_PCFG0
_PCFG0	set	0x7E08
	global	_PCFG1
_PCFG1	set	0x7E09
	global	_PCFG2
_PCFG2	set	0x7E0A
	global	_PCFG3
_PCFG3	set	0x7E0B
	global	_PLLEN
_PLLEN	set	0x7CDE
	global	_POR
_POR	set	0x7E81
	global	_RA4
_RA4	set	0x7C04
	global	_RA5
_RA5	set	0x7C05
	global	_RA6
_RA6	set	0x7C06
	global	_RA7
_RA7	set	0x7C07
	global	_RB0
_RB0	set	0x7C08
	global	_RB1
_RB1	set	0x7C09
	global	_RB4
_RB4	set	0x7C0C
	global	_RC0
_RC0	set	0x7C10
	global	_RC1
_RC1	set	0x7C11
	global	_RC5
_RC5	set	0x7C15
	global	_RE0
_RE0	set	0x7C20
	global	_RW
_RW	set	0x7E3A
	global	_SMP
_SMP	set	0x7E3F
	global	_SSPEN
_SSPEN	set	0x7E35
	global	_SSPIE
_SSPIE	set	0x7CEB
	global	_SSPIF
_SSPIF	set	0x7CF3
	global	_SSPIP
_SSPIP	set	0x7CFB
	global	_SSPM0
_SSPM0	set	0x7E30
	global	_SSPM1
_SSPM1	set	0x7E31
	global	_SSPM2
_SSPM2	set	0x7E32
	global	_SSPM3
_SSPM3	set	0x7E33
	global	_SSPOV
_SSPOV	set	0x7E36
	global	_T1CKPS0
_T1CKPS0	set	0x7E6C
	global	_T1CKPS1
_T1CKPS1	set	0x7E6D
	global	_T1RD16
_T1RD16	set	0x7E6F
	global	_TMR0IE
_TMR0IE	set	0x7F95
	global	_TMR0IF
_TMR0IF	set	0x7F92
	global	_TMR1CS
_TMR1CS	set	0x7E69
	global	_TMR1IE
_TMR1IE	set	0x7CE8
	global	_TMR1IF
_TMR1IF	set	0x7CF0
	global	_TMR1IP
_TMR1IP	set	0x7CF8
	global	_TMR1ON
_TMR1ON	set	0x7E68
	global	_TMR2IE
_TMR2IE	set	0x7CE9
	global	_TMR2IF
_TMR2IF	set	0x7CF1
	global	_TMR2ON
_TMR2ON	set	0x7E52
	global	_TRISC3
_TRISC3	set	0x7CA3
	global	_TRISC4
_TRISC4	set	0x7CA4
	global	_VCFG0
_VCFG0	set	0x7E0C
	global	_VCFG1
_VCFG1	set	0x7E0D
	global	_WCOL
_WCOL	set	0x7E37
; #config settings
global __CFG_IESO$ON
__CFG_IESO$ON equ 0x0
global __CFG_OSC$INTIO67
__CFG_OSC$INTIO67 equ 0x0
global __CFG_FCMEN$ON
__CFG_FCMEN$ON equ 0x0
global __CFG_BORV$1
__CFG_BORV$1 equ 0x0
global __CFG_PWRT$ON
__CFG_PWRT$ON equ 0x0
global __CFG_WDTPS$128
__CFG_WDTPS$128 equ 0x0
global __CFG_PBADEN$OFF
__CFG_PBADEN$OFF equ 0x0
global __CFG_MCLRE$OFF
__CFG_MCLRE$OFF equ 0x0
global __CFG_LVP$OFF
__CFG_LVP$OFF equ 0x0
global __CFG_CP0$ON
__CFG_CP0$ON equ 0x0
global __CFG_CP1$ON
__CFG_CP1$ON equ 0x0
global __CFG_CP2$ON
__CFG_CP2$ON equ 0x0
global __CFG_WRT0$ON
__CFG_WRT0$ON equ 0x0
global __CFG_WRT1$ON
__CFG_WRT1$ON equ 0x0
global __CFG_WRT2$ON
__CFG_WRT2$ON equ 0x0
global __CFG_WRTC$ON
__CFG_WRTC$ON equ 0x0
	file	"UNISTR.as"
	line	#
psect	cinit,class=CODE,delta=1,reloc=2
global __pcinit
__pcinit:
global start_initialization
start_initialization:

global __initialization
__initialization:
psect	bitbssCOMRAM,class=COMRAM,bit,space=1,noexec
global __pbitbssCOMRAM
__pbitbssCOMRAM:
IntPWM@btOsc:
       ds      1
ReadDataXONL@dtmo:
       ds      1
ReadDataXONLD@dtmo:
       ds      1
ReadDataXONLI@dtmo:
       ds      1
psect	bssCOMRAM,class=COMRAM,space=1,noexec
global __pbssCOMRAM
__pbssCOMRAM:
	global	_PWM
_PWM:
       ds      29
_SPort:
       ds      10
	global	_rgl
_rgl:
       ds      10
_CommRT:
       ds      3
FltParMod@fcw:
       ds      1
ModPruCW4@m:
       ds      1
ModPruCW4@s:
       ds      1
PredkoscZmianCW@indff:
       ds      1
	global	_ky1
_ky1:
       ds      1
	global	_ky2
_ky2:
       ds      1
	global	_sp
_sp:
       ds      1
	global	_sp2
_sp2:
       ds      1
	global	_tmr
_tmr:
       ds      1
	global	_DtCW
_DtCW:
       ds      15
psect	bssBANK0,class=BANK0,space=1,noexec
global __pbssBANK0
__pbssBANK0:
	global	_M
_M:
       ds      44
	global	_Mn
_Mn:
       ds      10
	global	_Gd
_Gd:
       ds      4
_KInd:
       ds      4
_WswData:
       ds      4
_LedData:
       ds      3
_PmrtimFlt3:
       ds      2
FltParMod@indtm:
       ds      1
ModPruCW4@l:
       ds      1
ModPruCW4@o:
       ds      1
ModPruCW4@p:
       ds      1
ModPruCW4@q:
       ds      1
ModZgCW4@pop:
       ds      1
PomiarPCW@pnst:
       ds      1
PredkoscZmianCW@ffcw:
       ds      1
ReadDataXONL@iu:
       ds      1
ReadDataXONL@ktu:
       ds      1
ReadDataXONLD@iu:
       ds      1
ReadDataXONLD@ktu:
       ds      1
ReadDataXONLI@iu:
       ds      1
ReadDataXONLI@ktu:
       ds      1
StabPort@tim:
       ds      1
_PmrtimFlt1:
       ds      1
_PmrtimFlt2:
       ds      1
	global	_bfrs
_bfrs:
       ds      1
	global	_tmr2
_tmr2:
       ds      1
_DtI2C:
       ds      23
	global	_DtKNF
_DtKNF:
       ds      12
_KL0_FC:
       ds      2
psect	bssBANK1,class=BANK1,space=1,noexec
global __pbssBANK1
__pbssBANK1:
	global	_Sk
_Sk:
       ds      28
	global	_dSk
_dSk:
       ds      16
	global	_DtCO
_DtCO:
       ds      15
_KTim:
       ds      12
	global	_wff
_wff:
       ds      12
	global	_DWD
_DWD:
       ds      28
_BufI2C:
       ds      25
	global	_PWD
_PWD:
       ds      24
_KL1_FC:
       ds      2
_KL2_FC:
       ds      2
_KL3_FC:
       ds      2
psect	cinit
; Clear objects allocated to BANK1 (166 bytes)
	global __pbssBANK1
lfsr	0,__pbssBANK1
movlw	166
clear_0:
clrf	postinc0,c
decf	wreg
bnz	clear_0
; Clear objects allocated to BANK0 (127 bytes)
	global __pbssBANK0
lfsr	0,__pbssBANK0
movlw	127
clear_1:
clrf	postinc0,c
decf	wreg
bnz	clear_1
; Clear objects allocated to BITCOMRAM (1 bytes)
	global __pbitbssCOMRAM
clrf	(__pbitbssCOMRAM/8+0)&0xffh,c
; Clear objects allocated to COMRAM (76 bytes)
	global __pbssCOMRAM
lfsr	0,__pbssCOMRAM
movlw	76
clear_2:
clrf	postinc0,c
decf	wreg
bnz	clear_2
psect cinit,class=CODE,delta=1
global end_of_initialization,__end_of__initialization

;End of C runtime variable initialization code

end_of_initialization:
__end_of__initialization:	GLOBAL	__Lmediumconst
	movlw	low highword(__Lmediumconst)
	movwf	tblptru
movlb 0
goto _main	;jump to C main() function
psect	cstackBANK1,class=BANK1,space=1,noexec
global __pcstackBANK1
__pcstackBANK1:
	global	?_SetStatus
?_SetStatus:	; 0 bytes @ 0x0
??_PwrOnDelay:	; 0 bytes @ 0x0
??_VWybieg:	; 0 bytes @ 0x0
??_ReloadPlomien:	; 0 bytes @ 0x0
??_RuszPlomien:	; 0 bytes @ 0x0
??_ReloadCiag:	; 0 bytes @ 0x0
??_SetPrt:	; 0 bytes @ 0x0
	global	?_Write_b_eep
?_Write_b_eep:	; 0 bytes @ 0x0
??_IncMaxCW4:	; 0 bytes @ 0x0
??_Twyzsza:	; 0 bytes @ 0x0
??_Tmaleje:	; 0 bytes @ 0x0
	global	?_SetData
?_SetData:	; 0 bytes @ 0x0
??_SetPoz:	; 0 bytes @ 0x0
	global	?_Read_b_eep
?_Read_b_eep:	; 1 bytes @ 0x0
	global	?_ExPresKey
?_ExPresKey:	; 1 bytes @ 0x0
	global	?_ExPresKey2
?_ExPresKey2:	; 1 bytes @ 0x0
	global	?_ExPresKey2B
?_ExPresKey2B:	; 1 bytes @ 0x0
	global	?___wmul
?___wmul:	; 2 bytes @ 0x0
	global	?___lmul
?___lmul:	; 4 bytes @ 0x0
	global	?___aldiv
?___aldiv:	; 4 bytes @ 0x0
	global	ReadAC@chanel
ReadAC@chanel:	; 1 bytes @ 0x0
	global	PresKey1@k
PresKey1@k:	; 1 bytes @ 0x0
	global	PresKey2@k
PresKey2@k:	; 1 bytes @ 0x0
	global	ExPresKey@dTim
ExPresKey@dTim:	; 1 bytes @ 0x0
	global	ExPresKey2@dTim
ExPresKey2@dTim:	; 1 bytes @ 0x0
	global	ExPresKey2B@dTim
ExPresKey2B@dTim:	; 1 bytes @ 0x0
	global	PredkoscZmianCW@w
PredkoscZmianCW@w:	; 1 bytes @ 0x0
	global	_RefStan$1698
_RefStan$1698:	; 1 bytes @ 0x0
	global	RdPrt@Index
RdPrt@Index:	; 1 bytes @ 0x0
	global	___lbdiv@dividend
___lbdiv@dividend:	; 1 bytes @ 0x0
	global	SetData@wData
SetData@wData:	; 2 bytes @ 0x0
	global	SetStatus@wData
SetStatus@wData:	; 2 bytes @ 0x0
	global	Read_b_eep@badd
Read_b_eep@badd:	; 2 bytes @ 0x0
	global	Write_b_eep@badd
Write_b_eep@badd:	; 2 bytes @ 0x0
	global	___wmul@multiplier
___wmul@multiplier:	; 2 bytes @ 0x0
	global	___aldiv@dividend
___aldiv@dividend:	; 4 bytes @ 0x0
	global	___lmul@multiplier
___lmul@multiplier:	; 4 bytes @ 0x0
	ds   1
??_DecSTR:	; 0 bytes @ 0x1
	global	ExPresKey@pTim
ExPresKey@pTim:	; 1 bytes @ 0x1
	global	ExPresKey2@pTim
ExPresKey2@pTim:	; 1 bytes @ 0x1
	global	ExPresKey2B@pTim
ExPresKey2B@pTim:	; 1 bytes @ 0x1
	global	PredkoscZmianCW@i
PredkoscZmianCW@i:	; 1 bytes @ 0x1
	global	_RefStan$1699
_RefStan$1699:	; 1 bytes @ 0x1
	global	SetPrt@Index
SetPrt@Index:	; 1 bytes @ 0x1
	global	___lbdiv@counter
___lbdiv@counter:	; 1 bytes @ 0x1
	ds   1
??_ExPresKey:	; 0 bytes @ 0x2
??_ExPresKey2:	; 0 bytes @ 0x2
??_ExPresKey2B:	; 0 bytes @ 0x2
??_ModParam:	; 0 bytes @ 0x2
	global	SetData@wdt1
SetData@wdt1:	; 1 bytes @ 0x2
	global	ReadTabNTC@zrAC
ReadTabNTC@zrAC:	; 1 bytes @ 0x2
	global	ReturnACfromNTC@data
ReturnACfromNTC@data:	; 1 bytes @ 0x2
	global	Write_b_eep@bdat
Write_b_eep@bdat:	; 1 bytes @ 0x2
	global	___lbdiv@quotient
___lbdiv@quotient:	; 1 bytes @ 0x2
	global	SetStatus@wst
SetStatus@wst:	; 2 bytes @ 0x2
	global	___wmul@multiplicand
___wmul@multiplicand:	; 2 bytes @ 0x2
	ds   1
??_WritePCW:	; 0 bytes @ 0x3
??_ModPruCW4:	; 0 bytes @ 0x3
	global	SetData@wdt0
SetData@wdt0:	; 1 bytes @ 0x3
	global	ReadTabNTC@data
ReadTabNTC@data:	; 1 bytes @ 0x3
	global	ReturnACfromNTC@bdta
ReturnACfromNTC@bdta:	; 1 bytes @ 0x3
	global	ExPresKey@k
ExPresKey@k:	; 1 bytes @ 0x3
	global	ExPresKey2@k
ExPresKey2@k:	; 1 bytes @ 0x3
	global	ExPresKey2B@k
ExPresKey2B@k:	; 1 bytes @ 0x3
	ds   1
	global	?_ReadDataXONLI
?_ReadDataXONLI:	; 1 bytes @ 0x4
	global	?_ReadDataXONLD
?_ReadDataXONLD:	; 1 bytes @ 0x4
	global	?_ReadDataONL
?_ReadDataONL:	; 1 bytes @ 0x4
	global	?_ReadDataXONL
?_ReadDataXONL:	; 1 bytes @ 0x4
	global	SetPoz@nrkol
SetPoz@nrkol:	; 1 bytes @ 0x4
	global	ReadDataONL@dt
ReadDataONL@dt:	; 1 bytes @ 0x4
	global	ReadDataXONL@dt
ReadDataXONL@dt:	; 1 bytes @ 0x4
	global	ReadDataXONLI@dt
ReadDataXONLI@dt:	; 1 bytes @ 0x4
	global	ReadDataXONLD@dt
ReadDataXONLD@dt:	; 1 bytes @ 0x4
	global	SetStatus@mask
SetStatus@mask:	; 2 bytes @ 0x4
	global	ReadTabNTC@i
ReadTabNTC@i:	; 2 bytes @ 0x4
	global	ReturnACfromNTC@i
ReturnACfromNTC@i:	; 2 bytes @ 0x4
	global	___wmul@product
___wmul@product:	; 2 bytes @ 0x4
	global	___aldiv@divisor
___aldiv@divisor:	; 4 bytes @ 0x4
	global	___lmul@multiplicand
___lmul@multiplicand:	; 4 bytes @ 0x4
	ds   1
	global	ReadDataONL@min
ReadDataONL@min:	; 1 bytes @ 0x5
	global	ReadDataXONL@min
ReadDataXONL@min:	; 1 bytes @ 0x5
	global	ReadDataXONLI@max
ReadDataXONLI@max:	; 1 bytes @ 0x5
	global	ReadDataXONLD@min
ReadDataXONLD@min:	; 1 bytes @ 0x5
	ds   1
	global	?_PrintErr
?_PrintErr:	; 0 bytes @ 0x6
	global	?_PrintCW
?_PrintCW:	; 0 bytes @ 0x6
	global	?_PrintNstCW
?_PrintNstCW:	; 0 bytes @ 0x6
	global	?_PrintPR
?_PrintPR:	; 0 bytes @ 0x6
??_ModDkCW4:	; 0 bytes @ 0x6
??_GoldenEye:	; 0 bytes @ 0x6
	global	?___awdiv
?___awdiv:	; 2 bytes @ 0x6
	global	?___lwdiv
?___lwdiv:	; 2 bytes @ 0x6
	global	InitWsw@i
InitWsw@i:	; 1 bytes @ 0x6
	global	PrintErr@pls
PrintErr@pls:	; 1 bytes @ 0x6
	global	PrintPR@nkod
PrintPR@nkod:	; 1 bytes @ 0x6
	global	PrintWPR@wr
PrintWPR@wr:	; 1 bytes @ 0x6
	global	PrintNstCW@krp
PrintNstCW@krp:	; 1 bytes @ 0x6
	global	PrintCW@krp
PrintCW@krp:	; 1 bytes @ 0x6
	global	ReadDataONL@max
ReadDataONL@max:	; 1 bytes @ 0x6
	global	ReadDataXONL@max
ReadDataXONL@max:	; 1 bytes @ 0x6
	global	ReadDataXONLI@step
ReadDataXONLI@step:	; 1 bytes @ 0x6
	global	ReadDataXONLD@step
ReadDataXONLD@step:	; 1 bytes @ 0x6
	global	___awdiv@dividend
___awdiv@dividend:	; 2 bytes @ 0x6
	global	___lwdiv@dividend
___lwdiv@dividend:	; 2 bytes @ 0x6
	ds   1
	global	PrintErr@kod
PrintErr@kod:	; 1 bytes @ 0x7
	global	PrintPR@tryb
PrintPR@tryb:	; 1 bytes @ 0x7
	global	PrintNstCW@nst
PrintNstCW@nst:	; 1 bytes @ 0x7
	global	PrintCW@tm
PrintCW@tm:	; 1 bytes @ 0x7
	global	ReadDataONL@step
ReadDataONL@step:	; 1 bytes @ 0x7
	global	ReadDataXONL@step
ReadDataXONL@step:	; 1 bytes @ 0x7
	global	ReadDataXONLI@step2
ReadDataXONLI@step2:	; 1 bytes @ 0x7
	global	ReadDataXONLD@step2
ReadDataXONLD@step2:	; 1 bytes @ 0x7
	ds   1
??_FunkcjaSerwisowa:	; 0 bytes @ 0x8
??_PrintPR:	; 0 bytes @ 0x8
??_ReadDataXONLI:	; 0 bytes @ 0x8
??_ReadDataXONLD:	; 0 bytes @ 0x8
	global	ModPruCW4@tmp
ModPruCW4@tmp:	; 1 bytes @ 0x8
	global	ReadDataONL@wrn
ReadDataONL@wrn:	; 1 bytes @ 0x8
	global	ReadDataXONL@step2
ReadDataXONL@step2:	; 1 bytes @ 0x8
	global	___aldiv@counter
___aldiv@counter:	; 1 bytes @ 0x8
	global	___awdiv@divisor
___awdiv@divisor:	; 2 bytes @ 0x8
	global	___lwdiv@divisor
___lwdiv@divisor:	; 2 bytes @ 0x8
	global	___lmul@product
___lmul@product:	; 4 bytes @ 0x8
	ds   1
??_ReadDataONL:	; 0 bytes @ 0x9
	global	PrintPR@lkod
PrintPR@lkod:	; 1 bytes @ 0x9
	global	ModPruCW4@k
ModPruCW4@k:	; 1 bytes @ 0x9
	global	ReadDataXONL@wrn
ReadDataXONL@wrn:	; 1 bytes @ 0x9
	global	___aldiv@sign
___aldiv@sign:	; 1 bytes @ 0x9
	ds   1
??_ReadDataXONL:	; 0 bytes @ 0xA
	global	___awdiv@counter
___awdiv@counter:	; 1 bytes @ 0xA
	global	___lwdiv@counter
___lwdiv@counter:	; 1 bytes @ 0xA
	global	_PrintPR$1754
_PrintPR$1754:	; 2 bytes @ 0xA
	global	___aldiv@quotient
___aldiv@quotient:	; 4 bytes @ 0xA
	ds   1
	global	GoldenEye@pop
GoldenEye@pop:	; 1 bytes @ 0xB
	global	ModDkCW4@k
ModDkCW4@k:	; 1 bytes @ 0xB
	global	___awdiv@sign
___awdiv@sign:	; 1 bytes @ 0xB
	global	___lwdiv@quotient
___lwdiv@quotient:	; 2 bytes @ 0xB
	ds   1
	global	GoldenEye@dt
GoldenEye@dt:	; 1 bytes @ 0xC
	global	ModDkCW4@p
ModDkCW4@p:	; 1 bytes @ 0xC
	global	___awdiv@quotient
___awdiv@quotient:	; 2 bytes @ 0xC
	ds   1
??_WriteOPWM:	; 0 bytes @ 0xD
	global	ModDkCW4@ada
ModDkCW4@ada:	; 1 bytes @ 0xD
	global	ReadDataXONLI@k
ReadDataXONLI@k:	; 1 bytes @ 0xD
	global	ReadDataXONLD@k
ReadDataXONLD@k:	; 1 bytes @ 0xD
	ds   1
??_FirstPCW4:	; 0 bytes @ 0xE
??_ModZgCW4:	; 0 bytes @ 0xE
??_ModPrzCW4:	; 0 bytes @ 0xE
	global	ReadDataONL@k
ReadDataONL@k:	; 1 bytes @ 0xE
	global	ReadDataXONLI@key
ReadDataXONLI@key:	; 1 bytes @ 0xE
	global	ReadDataXONLD@key
ReadDataXONLD@key:	; 1 bytes @ 0xE
	global	MocStart@tmp
MocStart@tmp:	; 2 bytes @ 0xE
	global	MocMaksCW@tmp
MocMaksCW@tmp:	; 2 bytes @ 0xE
	global	ModDkCW4@m
ModDkCW4@m:	; 4 bytes @ 0xE
	ds   1
??_PomiarPCW:	; 0 bytes @ 0xF
	global	ReadDataXONL@k
ReadDataXONL@k:	; 1 bytes @ 0xF
	ds   1
??_RuszCiag:	; 0 bytes @ 0x10
	global	DecERR@w
DecERR@w:	; 1 bytes @ 0x10
	global	MocStart@nst
MocStart@nst:	; 1 bytes @ 0x10
	global	MocMaksCW@nst
MocMaksCW@nst:	; 1 bytes @ 0x10
	global	FirstPCW4@p
FirstPCW4@p:	; 1 bytes @ 0x10
	global	ReadDataXONL@key
ReadDataXONL@key:	; 1 bytes @ 0x10
	ds   1
??_MKonfiguracja:	; 0 bytes @ 0x11
	global	_DecERR$1358
_DecERR$1358:	; 1 bytes @ 0x11
	global	FirstPCW4@p2
FirstPCW4@p2:	; 1 bytes @ 0x11
	ds   1
	global	DecERR@KnfDisErr
DecERR@KnfDisErr:	; 1 bytes @ 0x12
	global	WriteOPWM@aosc
WriteOPWM@aosc:	; 1 bytes @ 0x12
	global	FirstPCW4@maxmod
FirstPCW4@maxmod:	; 1 bytes @ 0x12
	ds   1
	global	ModZgCW4@p
ModZgCW4@p:	; 1 bytes @ 0x13
	global	ModPrzCW4@maxmod
ModPrzCW4@maxmod:	; 1 bytes @ 0x13
	global	WriteOPWM@tmp
WriteOPWM@tmp:	; 2 bytes @ 0x13
	global	FirstPCW4@m
FirstPCW4@m:	; 4 bytes @ 0x13
	ds   1
	global	ModPrzCW4@r
ModPrzCW4@r:	; 2 bytes @ 0x14
	global	ModZgCW4@m
ModZgCW4@m:	; 4 bytes @ 0x14
	ds   1
	global	WriteOPWM@tpwm
WriteOPWM@tpwm:	; 1 bytes @ 0x15
	ds   1
	global	ModPrzCW4@p
ModPrzCW4@p:	; 1 bytes @ 0x16
	ds   1
??_Rozruch:	; 0 bytes @ 0x17
	ds   1
??_Moduluj:	; 0 bytes @ 0x18
	ds   1
	global	_main$1349
_main$1349:	; 1 bytes @ 0x19
	ds   1
psect	cstackBANK0,class=BANK0,space=1,noexec
global __pcstackBANK0
__pcstackBANK0:
??_SetStatus:	; 0 bytes @ 0x0
??_Read_b_eep:	; 0 bytes @ 0x0
??_RdPrt:	; 0 bytes @ 0x0
??_StartRTdS:	; 0 bytes @ 0x0
??_RTdS:	; 0 bytes @ 0x0
??_InitOsc:	; 0 bytes @ 0x0
??_InitGlobal:	; 0 bytes @ 0x0
??_InitTimer1:	; 0 bytes @ 0x0
??_InitPWM:	; 0 bytes @ 0x0
??_InitDataPmr:	; 0 bytes @ 0x0
??_ClearData:	; 0 bytes @ 0x0
??_ClsScr:	; 0 bytes @ 0x0
??_StartRTS:	; 0 bytes @ 0x0
??_DecRozruch:	; 0 bytes @ 0x0
??_DecWylacz:	; 0 bytes @ 0x0
	global	?_SetPrt
?_SetPrt:	; 0 bytes @ 0x0
??_RTS:	; 0 bytes @ 0x0
??_RestartMod:	; 0 bytes @ 0x0
??_WritePWM:	; 0 bytes @ 0x0
??_SetRozruch:	; 0 bytes @ 0x0
??_SetWylacz:	; 0 bytes @ 0x0
??_GrzejOFF:	; 0 bytes @ 0x0
??_StartRTM:	; 0 bytes @ 0x0
??_RTM:	; 0 bytes @ 0x0
??_Busy_eep:	; 0 bytes @ 0x0
??_Write_b_eep:	; 0 bytes @ 0x0
??_RNst:	; 0 bytes @ 0x0
??_ReadDataCW4:	; 0 bytes @ 0x0
??_ModToCW4:	; 0 bytes @ 0x0
??_IncConstCW4:	; 0 bytes @ 0x0
??_SetPWM_CW4:	; 0 bytes @ 0x0
??_Tstoi:	; 0 bytes @ 0x0
??_Tnizsza:	; 0 bytes @ 0x0
??_Trosnie:	; 0 bytes @ 0x0
??_SetTpKtParam:	; 0 bytes @ 0x0
??___lmul:	; 0 bytes @ 0x0
??_WswOff:	; 0 bytes @ 0x0
??_WswOn:	; 0 bytes @ 0x0
??_SetData:	; 0 bytes @ 0x0
	global	?_SetPoz
?_SetPoz:	; 0 bytes @ 0x0
??_ResetKol:	; 0 bytes @ 0x0
??_RestartKol:	; 0 bytes @ 0x0
??_AllKolToFirstPoz:	; 0 bytes @ 0x0
??_InitAC:	; 0 bytes @ 0x0
??_ReadAC:	; 0 bytes @ 0x0
??_ReadTabNTC:	; 0 bytes @ 0x0
??_ReturnACfromNTC:	; 0 bytes @ 0x0
??_InitI2C:	; 0 bytes @ 0x0
??_SetBufKey1:	; 0 bytes @ 0x0
??_PresKey1:	; 0 bytes @ 0x0
??_SetBufKey2:	; 0 bytes @ 0x0
??_PresKey2:	; 0 bytes @ 0x0
??_GrzejON:	; 0 bytes @ 0x0
??_StartTim1:	; 0 bytes @ 0x0
??_PmrTim1:	; 0 bytes @ 0x0
??_StartTim2:	; 0 bytes @ 0x0
??_PmrTim2:	; 0 bytes @ 0x0
??_PredkoscZmianCW:	; 0 bytes @ 0x0
??_FltParMod:	; 0 bytes @ 0x0
??_SetModPCW:	; 0 bytes @ 0x0
??_RefStan:	; 0 bytes @ 0x0
??_FrsStan:	; 0 bytes @ 0x0
	global	?_ModParam
?_ModParam:	; 0 bytes @ 0x0
??_MocStart:	; 0 bytes @ 0x0
??_MocMaksCW:	; 0 bytes @ 0x0
??___aldiv:	; 0 bytes @ 0x0
??___awdiv:	; 0 bytes @ 0x0
??___lwdiv:	; 0 bytes @ 0x0
??___wmul:	; 0 bytes @ 0x0
	global	?___lbdiv
?___lbdiv:	; 1 bytes @ 0x0
	global	SetPoz@nrpoz
SetPoz@nrpoz:	; 1 bytes @ 0x0
	global	ResetKol@nrkol
ResetKol@nrkol:	; 1 bytes @ 0x0
	global	RestartKol@nrkol
RestartKol@nrkol:	; 1 bytes @ 0x0
	global	AllKolToFirstPoz@j
AllKolToFirstPoz@j:	; 1 bytes @ 0x0
	global	PmrTim1@tm
PmrTim1@tm:	; 1 bytes @ 0x0
	global	PmrTim2@tm
PmrTim2@tm:	; 1 bytes @ 0x0
	global	FltParMod@wr
FltParMod@wr:	; 1 bytes @ 0x0
	global	SetPrt@nw
SetPrt@nw:	; 1 bytes @ 0x0
	global	RNst@nst
RNst@nst:	; 1 bytes @ 0x0
	global	ModParam@tpg
ModParam@tpg:	; 1 bytes @ 0x0
	global	WritePWM@tpwm
WritePWM@tpwm:	; 1 bytes @ 0x0
	global	Trosnie@t
Trosnie@t:	; 1 bytes @ 0x0
	global	Tmaleje@t
Tmaleje@t:	; 1 bytes @ 0x0
	global	Tnizsza@t
Tnizsza@t:	; 1 bytes @ 0x0
	global	Twyzsza@t
Twyzsza@t:	; 1 bytes @ 0x0
	global	StartRTdS@Index
StartRTdS@Index:	; 1 bytes @ 0x0
	global	RTdS@Index
RTdS@Index:	; 1 bytes @ 0x0
	global	StartRTS@Index
StartRTS@Index:	; 1 bytes @ 0x0
	global	RTS@Index
RTS@Index:	; 1 bytes @ 0x0
	global	StartRTM@Index
StartRTM@Index:	; 1 bytes @ 0x0
	global	RTM@Index
RTM@Index:	; 1 bytes @ 0x0
	global	Write_b_eep@GIE_BIT_VAL
Write_b_eep@GIE_BIT_VAL:	; 1 bytes @ 0x0
	global	___lbdiv@divisor
___lbdiv@divisor:	; 1 bytes @ 0x0
	ds   1
??_InitPort:	; 0 bytes @ 0x1
??_TestScr:	; 0 bytes @ 0x1
??_EndTestScr:	; 0 bytes @ 0x1
??_EndClsScr:	; 0 bytes @ 0x1
??_EnKonf:	; 0 bytes @ 0x1
??_RdEEParam:	; 0 bytes @ 0x1
??_PrintErr:	; 0 bytes @ 0x1
??_ErrPTG:	; 0 bytes @ 0x1
??_RestartFltPrt:	; 0 bytes @ 0x1
??_PomiarCW:	; 0 bytes @ 0x1
??_FiltrPomiarowyCW:	; 0 bytes @ 0x1
??_DecWSW:	; 0 bytes @ 0x1
??_DecERR:	; 0 bytes @ 0x1
??_KolejkaPobudzen:	; 0 bytes @ 0x1
??_PrintOFF:	; 0 bytes @ 0x1
??_PrintCW:	; 0 bytes @ 0x1
??_EndOFF:	; 0 bytes @ 0x1
??_PrintNstCW:	; 0 bytes @ 0x1
??_EndErr:	; 0 bytes @ 0x1
??_DecyzjaPLM:	; 0 bytes @ 0x1
??_DecyzjaPLM2:	; 0 bytes @ 0x1
??_ToReset:	; 0 bytes @ 0x1
??_WriteEEPCW:	; 0 bytes @ 0x1
??_StartMCW4:	; 0 bytes @ 0x1
??_InitWsw:	; 0 bytes @ 0x1
??_main:	; 0 bytes @ 0x1
??_KeyRes:	; 0 bytes @ 0x1
??_VZPauza:	; 0 bytes @ 0x1
??_PrintWPR:	; 0 bytes @ 0x1
??_EndPR:	; 0 bytes @ 0x1
??_ExitKonf:	; 0 bytes @ 0x1
??___lbdiv:	; 0 bytes @ 0x1
psect	cstackCOMRAM,class=COMRAM,space=1,noexec
global __pcstackCOMRAM
__pcstackCOMRAM:
?_KolProc:	; 0 bytes @ 0x0
??_KolProc:	; 0 bytes @ 0x0
?_SetPrWswData:	; 0 bytes @ 0x0
??_SetPrWswData:	; 0 bytes @ 0x0
?_FormatWswData:	; 0 bytes @ 0x0
?_PrintWswData:	; 0 bytes @ 0x0
??_PrintWswData:	; 0 bytes @ 0x0
?_SetTData:	; 0 bytes @ 0x0
??_SetTData:	; 0 bytes @ 0x0
??_LiczCHK:	; 0 bytes @ 0x0
?_SetRData:	; 0 bytes @ 0x0
??_SetRData:	; 0 bytes @ 0x0
?_ReceptData:	; 0 bytes @ 0x0
?_TransmitData:	; 0 bytes @ 0x0
??_TransmitData:	; 0 bytes @ 0x0
?_ToWork:	; 0 bytes @ 0x0
??_ToWork:	; 0 bytes @ 0x0
?_RdPrt:	; 1 bit 
?_ReloadTimer1:	; 0 bytes @ 0x0
??_ReloadTimer1:	; 0 bytes @ 0x0
?_IncRTimer:	; 0 bytes @ 0x0
??_IncRTimer:	; 0 bytes @ 0x0
?_IncPmrTimer:	; 0 bytes @ 0x0
??_IncPmrTimer:	; 0 bytes @ 0x0
?_SetResMux:	; 0 bytes @ 0x0
??_SetResMux:	; 0 bytes @ 0x0
?_StabPort:	; 0 bytes @ 0x0
?_IntPWM:	; 0 bytes @ 0x0
??_IntPWM:	; 0 bytes @ 0x0
?_StartRTdS:	; 0 bytes @ 0x0
?_InitOsc:	; 0 bytes @ 0x0
?_InitGlobal:	; 0 bytes @ 0x0
?_InitTimer1:	; 0 bytes @ 0x0
?_InitPort:	; 0 bytes @ 0x0
?_InitPWM:	; 0 bytes @ 0x0
?_InitDataPmr:	; 0 bytes @ 0x0
?_ClearData:	; 0 bytes @ 0x0
?_TestScr:	; 0 bytes @ 0x0
?_PwrOnDelay:	; 0 bytes @ 0x0
?_EndTestScr:	; 0 bytes @ 0x0
?_ClsScr:	; 0 bytes @ 0x0
?_EndClsScr:	; 0 bytes @ 0x0
?_EnKonf:	; 0 bytes @ 0x0
?_RdEEParam:	; 0 bytes @ 0x0
?_ErrPTG:	; 0 bytes @ 0x0
?_PomiarPCW:	; 0 bytes @ 0x0
?_RestartFltPrt:	; 0 bytes @ 0x0
?_StartRTS:	; 0 bytes @ 0x0
?_MKonfiguracja:	; 0 bytes @ 0x0
?_PomiarCW:	; 0 bytes @ 0x0
?_WritePCW:	; 0 bytes @ 0x0
?_FiltrPomiarowyCW:	; 0 bytes @ 0x0
?_DecWSW:	; 0 bytes @ 0x0
?_DecERR:	; 0 bytes @ 0x0
?_DecSTR:	; 0 bytes @ 0x0
?_DecRozruch:	; 0 bytes @ 0x0
?_DecWylacz:	; 0 bytes @ 0x0
?_FunkcjaSerwisowa:	; 0 bytes @ 0x0
?_KolejkaPobudzen:	; 0 bytes @ 0x0
?_Rozruch:	; 0 bytes @ 0x0
?_VWybieg:	; 0 bytes @ 0x0
?_ReloadPlomien:	; 0 bytes @ 0x0
?_RuszPlomien:	; 0 bytes @ 0x0
?_ReloadCiag:	; 0 bytes @ 0x0
?_RuszCiag:	; 0 bytes @ 0x0
?_Moduluj:	; 0 bytes @ 0x0
?_PrintOFF:	; 0 bytes @ 0x0
?_EndOFF:	; 0 bytes @ 0x0
?_EndErr:	; 0 bytes @ 0x0
?_RestartMod:	; 0 bytes @ 0x0
?_WritePWM:	; 0 bytes @ 0x0
?_SetRozruch:	; 0 bytes @ 0x0
?_SetWylacz:	; 0 bytes @ 0x0
?_GrzejOFF:	; 0 bytes @ 0x0
?_StartRTM:	; 0 bytes @ 0x0
?_DecyzjaPLM:	; 0 bytes @ 0x0
?_DecyzjaPLM2:	; 0 bytes @ 0x0
?_Busy_eep:	; 0 bytes @ 0x0
?_ToReset:	; 0 bytes @ 0x0
?_WriteEEPCW:	; 0 bytes @ 0x0
?_RNst:	; 0 bytes @ 0x0
?_StartMCW4:	; 0 bytes @ 0x0
?_ReadDataCW4:	; 0 bytes @ 0x0
?_ModToCW4:	; 0 bytes @ 0x0
?_ModZgCW4:	; 0 bytes @ 0x0
?_ModDkCW4:	; 0 bytes @ 0x0
?_IncConstCW4:	; 0 bytes @ 0x0
?_IncMaxCW4:	; 0 bytes @ 0x0
?_ModPruCW4:	; 0 bytes @ 0x0
?_ModPrzCW4:	; 0 bytes @ 0x0
?_SetPWM_CW4:	; 0 bytes @ 0x0
?_Tstoi:	; 1 bit 
?_Tnizsza:	; 1 bit 
?_Twyzsza:	; 1 bit 
?_Trosnie:	; 1 bit 
?_Tmaleje:	; 1 bit 
?_SetTpKtParam:	; 0 bytes @ 0x0
?_InitWsw:	; 0 bytes @ 0x0
?_RefreshWSW:	; 0 bytes @ 0x0
?_WswOff:	; 0 bytes @ 0x0
?_WswOn:	; 0 bytes @ 0x0
?_ResetKol:	; 0 bytes @ 0x0
?_RestartKol:	; 0 bytes @ 0x0
?_AllKolToFirstPoz:	; 0 bytes @ 0x0
?_InitAC:	; 0 bytes @ 0x0
?_InitI2C:	; 0 bytes @ 0x0
?_I2CSlaveTR:	; 0 bytes @ 0x0
?_FormatDataIMY:	; 0 bytes @ 0x0
?_ISR:	; 0 bytes @ 0x0
?_SetBufKey1:	; 0 bytes @ 0x0
?_SetBufKey2:	; 0 bytes @ 0x0
?_main:	; 0 bytes @ 0x0
?_GrzejON:	; 0 bytes @ 0x0
?_KeyRes:	; 1 bit 
?_VZPauza:	; 0 bytes @ 0x0
?_StartTim1:	; 0 bytes @ 0x0
?_PmrTim1:	; 1 bit 
?_StartTim2:	; 0 bytes @ 0x0
?_PmrTim2:	; 1 bit 
?_GoldenEye:	; 0 bytes @ 0x0
?_PredkoscZmianCW:	; 0 bytes @ 0x0
?_FltParMod:	; 0 bytes @ 0x0
?_SetModPCW:	; 0 bytes @ 0x0
?_RefStan:	; 0 bytes @ 0x0
?_FrsStan:	; 0 bytes @ 0x0
?_PrintWPR:	; 0 bytes @ 0x0
?_EndPR:	; 0 bytes @ 0x0
?_WriteOPWM:	; 0 bytes @ 0x0
?_MocStart:	; 0 bytes @ 0x0
?_MocMaksCW:	; 0 bytes @ 0x0
?_ExitKonf:	; 0 bytes @ 0x0
?i2_RefStan:	; 0 bytes @ 0x0
??i2_RefStan:	; 0 bytes @ 0x0
?i2_RdPrt:	; 1 bit 
??i2_RdPrt:	; 0 bytes @ 0x0
?_LiczCHK:	; 1 bytes @ 0x0
?_RTdS:	; 1 bytes @ 0x0
?_RTS:	; 1 bytes @ 0x0
?_RTM:	; 1 bytes @ 0x0
?_FirstPCW4:	; 1 bytes @ 0x0
?_ReadAC:	; 1 bytes @ 0x0
?_ReadTabNTC:	; 1 bytes @ 0x0
?_ReturnACfromNTC:	; 1 bytes @ 0x0
?_PresKey1:	; 1 bytes @ 0x0
?_PresKey2:	; 1 bytes @ 0x0
	global	?___lbmod
?___lbmod:	; 1 bytes @ 0x0
	global	?i2___lbdiv
?i2___lbdiv:	; 1 bytes @ 0x0
ModParam@tpk:	; 1 bytes @ 0x0
	global	IncRTimer@i
IncRTimer@i:	; 1 bytes @ 0x0
	global	___lbmod@divisor
___lbmod@divisor:	; 1 bytes @ 0x0
	global	i2___lbdiv@divisor
i2___lbdiv@divisor:	; 1 bytes @ 0x0
	ds   1
??___lbmod:	; 0 bytes @ 0x1
??i2___lbdiv:	; 0 bytes @ 0x1
	global	SetPrWswData@i
SetPrWswData@i:	; 1 bytes @ 0x1
	global	___lbmod@dividend
___lbmod@dividend:	; 1 bytes @ 0x1
	global	i2_RefStan$1698
i2_RefStan$1698:	; 1 bytes @ 0x1
	global	i2RdPrt@Index
i2RdPrt@Index:	; 1 bytes @ 0x1
	global	i2___lbdiv@dividend
i2___lbdiv@dividend:	; 1 bytes @ 0x1
	ds   1
	global	?_BitSet
?_BitSet:	; 0 bytes @ 0x2
	global	BitSet@nbit
BitSet@nbit:	; 1 bytes @ 0x2
	global	___lbmod@counter
___lbmod@counter:	; 1 bytes @ 0x2
	global	i2_RefStan$1699
i2_RefStan$1699:	; 1 bytes @ 0x2
	global	i2___lbdiv@counter
i2___lbdiv@counter:	; 1 bytes @ 0x2
	ds   1
??_StabPort:	; 0 bytes @ 0x3
	global	BitSet@bt
BitSet@bt:	; 1 bytes @ 0x3
	global	___lbmod@rem
___lbmod@rem:	; 1 bytes @ 0x3
	global	i2___lbdiv@quotient
i2___lbdiv@quotient:	; 1 bytes @ 0x3
	ds   1
??_FormatWswData:	; 0 bytes @ 0x4
??_BitSet:	; 0 bytes @ 0x4
	ds   1
	global	LiczCHK@chk
LiczCHK@chk:	; 1 bytes @ 0x5
	global	StabPort@delay
StabPort@delay:	; 1 bytes @ 0x5
	ds   1
	global	LiczCHK@NBTI2C
LiczCHK@NBTI2C:	; 1 bytes @ 0x6
	global	StabPort@i
StabPort@i:	; 1 bytes @ 0x6
	ds   1
	global	BitSet@data
BitSet@data:	; 1 bytes @ 0x7
	global	LiczCHK@i
LiczCHK@i:	; 1 bytes @ 0x7
	ds   1
??_ReceptData:	; 0 bytes @ 0x8
??_I2CSlaveTR:	; 0 bytes @ 0x8
??_FormatDataIMY:	; 0 bytes @ 0x8
	global	_FormatDataIMY$839
_FormatDataIMY$839:	; 1 bytes @ 0x8
	ds   1
	global	_FormatDataIMY$840
_FormatDataIMY$840:	; 1 bytes @ 0x9
	ds   1
	global	_FormatDataIMY$841
_FormatDataIMY$841:	; 1 bytes @ 0xA
	ds   1
	global	KolProc@l
KolProc@l:	; 1 bytes @ 0xB
	ds   1
	global	KolProc@nC
KolProc@nC:	; 1 bytes @ 0xC
	ds   1
	global	KolProc@k
KolProc@k:	; 1 bytes @ 0xD
	ds   1
	global	KolProc@i
KolProc@i:	; 1 bytes @ 0xE
	ds   1
	global	KolProc@j
KolProc@j:	; 1 bytes @ 0xF
	ds   1
??_RefreshWSW:	; 0 bytes @ 0x10
??_ISR:	; 0 bytes @ 0x10
	ds   10
;!
;!Data Sizes:
;!    Strings     0
;!    Constant    142
;!    Data        0
;!    BSS         369
;!    Persistent  0
;!    Stack       0
;!
;!Auto Spaces:
;!    Space          Size  Autos    Used
;!    COMRAM          127     26     103
;!    BANK0           128      1     128
;!    BANK1           256     26     192
;!    BANK2           256      0       0
;!    BANK3           256      0       0
;!    BANK4           256      0       0
;!    BANK5           256      0       0
;!    BANK6           256      0       0
;!    BANK7           256      0       0
;!    BANK8           256      0       0
;!    BANK9           256      0       0
;!    BANK10          256      0       0
;!    BANK11          256      0       0
;!    BANK12          256      0       0
;!    BANK13          256      0       0
;!    BANK14          256      0       0
;!    BANK15          128      0       0

;!
;!Pointer List with Targets:
;!
;!    ?___lmul	unsigned long  size(2) Largest target is 0
;!
;!    ?___aldiv	long  size(2) Largest target is 0
;!
;!    ?___awdiv	int  size(2) Largest target is 0
;!
;!    ?___lwdiv	unsigned int  size(2) Largest target is 0
;!
;!    ?___wmul	unsigned int  size(2) Largest target is 0
;!
;!    ReadDataXONLD@dt	PTR unsigned char  size(1) Largest target is 15
;!		 -> DtCW(COMRAM[15]), 
;!
;!    ReadDataXONLI@dt	PTR unsigned char  size(1) Largest target is 15
;!		 -> DtCW(COMRAM[15]), 
;!
;!    ReadDataXONL@dt	PTR unsigned char  size(1) Largest target is 12
;!		 -> DtKNF(BANK0[12]), 
;!
;!    ReadDataONL@dt	PTR unsigned char  size(1) Largest target is 12
;!		 -> DtKNF(BANK0[12]), 
;!
;!    BitSet@data	PTR unsigned char  size(1) Largest target is 23
;!		 -> DtI2C(BANK0[23]), 
;!
;!    SetStatus@wData	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK1[28]), PWD(BANK1[24]), 
;!
;!    SetData@wData	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK1[28]), PWD(BANK1[24]), 
;!
;!    Klj.KL.KAP.PAdr	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK1[28]), 
;!
;!    Klj.KL.KOut.CAdr	PTR struct . size(2) Largest target is 24
;!		 -> PWD(BANK1[24]), 
;!
;!    Klj.KL.KOut	PTR const struct . size(1) Largest target is 5
;!		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 
;!
;!    Klj.KL.KFc	PTR struct . size(2) Largest target is 2
;!		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK0[2]), 
;!
;!    Klj.KL.KFP	PTR const struct . size(1) Largest target is 4
;!		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 
;!
;!    Klj.KL.KWP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 
;!
;!    Klj.KL.KAP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 
;!
;!    S71$KL	PTR const struct . size(1) Largest target is 15
;!		 -> KL3(CODE[6]), KL2(CODE[6]), KL1(CODE[6]), KL0(CODE[6]), 
;!
;!    Klj.KL	PTR const struct . size(1) Largest target is 15
;!		 -> KL3(CODE[6]), KL2(CODE[6]), KL1(CODE[6]), KL0(CODE[6]), 
;!
;!    KL3.KOut	PTR const struct . size(1) Largest target is 5
;!		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 
;!
;!    KL3.KFc	PTR struct . size(2) Largest target is 2
;!		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK0[2]), 
;!
;!    KL3.KFP	PTR const struct . size(1) Largest target is 4
;!		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 
;!
;!    KL3.KWP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 
;!
;!    KL3.KAP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 
;!
;!    KL2.KOut	PTR const struct . size(1) Largest target is 5
;!		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 
;!
;!    KL2.KFc	PTR struct . size(2) Largest target is 2
;!		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK0[2]), 
;!
;!    KL2.KFP	PTR const struct . size(1) Largest target is 4
;!		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 
;!
;!    KL2.KWP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 
;!
;!    KL2.KAP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 
;!
;!    KL1.KOut	PTR const struct . size(1) Largest target is 5
;!		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 
;!
;!    KL1.KFc	PTR struct . size(2) Largest target is 2
;!		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK0[2]), 
;!
;!    KL1.KFP	PTR const struct . size(1) Largest target is 4
;!		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 
;!
;!    KL1.KWP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 
;!
;!    KL1.KAP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 
;!
;!    S65$KOut	PTR const struct . size(1) Largest target is 5
;!		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 
;!
;!    KL0.KOut	PTR const struct . size(1) Largest target is 5
;!		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 
;!
;!    S65$KFc	PTR struct . size(2) Largest target is 2
;!		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK0[2]), 
;!
;!    KL0.KFc	PTR struct . size(2) Largest target is 2
;!		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK0[2]), 
;!
;!    S65$KFP	PTR const struct . size(1) Largest target is 4
;!		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 
;!
;!    KL0.KFP	PTR const struct . size(1) Largest target is 4
;!		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 
;!
;!    S65$KWP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 
;!
;!    KL0.KWP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 
;!
;!    S65$KAP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 
;!
;!    KL0.KAP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 
;!
;!    KL3_OUT.CAdr	PTR struct . size(2) Largest target is 24
;!		 -> PWD(BANK1[24]), 
;!
;!    KL2_OUT.CAdr	PTR struct . size(2) Largest target is 24
;!		 -> PWD(BANK1[24]), 
;!
;!    KL1_OUT.CAdr	PTR struct . size(2) Largest target is 24
;!		 -> PWD(BANK1[24]), 
;!
;!    S61$CAdr	PTR struct . size(2) Largest target is 24
;!		 -> PWD(BANK1[24]), 
;!
;!    KL0_OUT.CAdr	PTR struct . size(2) Largest target is 24
;!		 -> PWD(BANK1[24]), 
;!
;!    KL3_AP.PAdr	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK1[28]), 
;!
;!    KL2_AP.PAdr	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK1[28]), 
;!
;!    KL1_AP.PAdr	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK1[28]), 
;!
;!    S52$PAdr	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK1[28]), 
;!
;!    KL0_AP.PAdr	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK1[28]), 
;!


;!
;!Critical Paths under _main in COMRAM
;!
;!    None.
;!
;!Critical Paths under _ISR in COMRAM
;!
;!    _StabPort->i2_RefStan
;!    _FormatDataIMY->_BitSet
;!    _BitSet->i2_RdPrt
;!    _I2CSlaveTR->_LiczCHK
;!    _ReceptData->_LiczCHK
;!    _RefreshWSW->_KolProc
;!    _FormatWswData->___lbmod
;!    _FormatWswData->i2___lbdiv
;!
;!Critical Paths under _main in BANK0
;!
;!    _main->_StartRTS
;!    _Moduluj->_StartRTdS
;!    _Moduluj->_RTdS
;!    _ModPrzCW4->_Tnizsza
;!    _ModPrzCW4->_Twyzsza
;!    _ModPrzCW4->_Tmaleje
;!    _ModPruCW4->_Tnizsza
;!    _ModPruCW4->_Twyzsza
;!    _ModPruCW4->_Trosnie
;!    _ModPruCW4->_Tmaleje
;!    _IncMaxCW4->_Trosnie
;!    _ModZgCW4->_Tnizsza
;!    _StartMCW4->_StartRTdS
;!    _RuszCiag->_RdPrt
;!    _RuszCiag->_StartRTS
;!    _RuszCiag->_RTS
;!    _RuszCiag->_StartRTM
;!    _RuszCiag->_RTM
;!    _ReloadCiag->_RTS
;!    _RuszPlomien->_StartRTdS
;!    _RuszPlomien->_StartRTS
;!    _RuszPlomien->_RTS
;!    _ReloadPlomien->_RTdS
;!    _Rozruch->_RdPrt
;!    _Rozruch->_StartRTS
;!    _Rozruch->_RTS
;!    _Rozruch->_WritePWM
;!    _DecyzjaPLM2->_RdPrt
;!    _KolejkaPobudzen->_RdPrt
;!    _FunkcjaSerwisowa->_RdPrt
;!    _FunkcjaSerwisowa->_StartRTS
;!    _FunkcjaSerwisowa->_RTS
;!    _FunkcjaSerwisowa->_StartRTM
;!    _FunkcjaSerwisowa->_RTM
;!    _DecSTR->_RdPrt
;!    _DecSTR->_RTS
;!    _DecSTR->_WritePWM
;!    _DecERR->_RdPrt
;!    _DecERR->_StartRTS
;!    _ErrPTG->_WritePWM
;!    _ErrPTG->_Write_b_eep
;!    _ToReset->_Write_b_eep
;!    _VZPauza->_StartRTS
;!    _VZPauza->_RTS
;!    _KeyRes->_RdPrt
;!    _KeyRes->_StartRTS
;!    _KeyRes->_RTS
;!    _EndErr->_ResetKol
;!    _VWybieg->_StartRTS
;!    _VWybieg->_RTS
;!    _PomiarCW->_ReadAC
;!    _PrintErr->_SetStatus
;!    _PrintErr->_SetPoz
;!    _PrintNstCW->_SetStatus
;!    _PrintNstCW->_RestartKol
;!    _EndOFF->_SetStatus
;!    _PrintCW->_SetStatus
;!    _PrintOFF->_SetStatus
;!    _FiltrPomiarowyCW->_PmrTim1
;!    _FiltrPomiarowyCW->_PmrTim2
;!    _FiltrPomiarowyCW->_FltParMod
;!    _WritePCW->_StartRTdS
;!    _WritePCW->_RTdS
;!    _WriteEEPCW->_Write_b_eep
;!    _MKonfiguracja->_RdPrt
;!    _MKonfiguracja->_PresKey1
;!    _MKonfiguracja->_PresKey2
;!    _MKonfiguracja->_StartRTS
;!    _MKonfiguracja->_RTS
;!    _MKonfiguracja->_StartRTM
;!    _MKonfiguracja->_RTM
;!    _MKonfiguracja->_Write_b_eep
;!    _MKonfiguracja->_ModParam
;!    _EndPR->_ResetKol
;!    _PomiarPCW->_RdPrt
;!    _PomiarPCW->_StartRTdS
;!    _PomiarPCW->_RTdS
;!    _PomiarPCW->_RNst
;!    _ReadDataXONLD->_RdPrt
;!    _ReadDataXONLD->___lbdiv
;!    _ExPresKey2B->_StartRTdS
;!    _ExPresKey2B->_RTdS
;!    _ReadDataXONLI->_RdPrt
;!    _ReadDataXONLI->___lbdiv
;!    _RdEEParam->_ModParam
;!    _ReadDataXONL->_RdPrt
;!    _ReadDataXONL->_PresKey1
;!    _ReadDataXONL->___lbdiv
;!    _ExPresKey2->_StartRTdS
;!    _ExPresKey2->_RTdS
;!    _ReadDataONL->_RdPrt
;!    _ReadDataONL->_PresKey1
;!    _ExPresKey->_StartRTdS
;!    _ExPresKey->_RTdS
;!    _PrintWPR->_SetStatus
;!    _PrintWPR->_SetPoz
;!    _PrintPR->_SetStatus
;!    _PrintPR->_SetPoz
;!    _RestartFltPrt->_SetPrt
;!    _EnKonf->_StartRTS
;!    _EndClsScr->_AllKolToFirstPoz
;!    _EndTestScr->_SetStatus
;!    _PwrOnDelay->_StartRTdS
;!    _PwrOnDelay->_RTdS
;!    _TestScr->_SetStatus
;!    _InitPort->_RefStan
;!    _InitWsw->_SetStatus
;!
;!Critical Paths under _ISR in BANK0
;!
;!    None.
;!
;!Critical Paths under _main in BANK1
;!
;!    _main->_Moduluj
;!    _Moduluj->_ModZgCW4
;!    _SetPWM_CW4->_WriteOPWM
;!    _WriteOPWM->___lwdiv
;!    _ModPrzCW4->___awdiv
;!    _ModPruCW4->_Twyzsza
;!    _ModPruCW4->_Tmaleje
;!    _ModDkCW4->___wmul
;!    _ModZgCW4->___aldiv
;!    _StartMCW4->_FirstPCW4
;!    _Rozruch->_FirstPCW4
;!    _FirstPCW4->___aldiv
;!    _KolejkaPobudzen->_RdPrt
;!    _FunkcjaSerwisowa->_PrintNstCW
;!    _DecSTR->_RdPrt
;!    _ErrPTG->_PomiarPCW
;!    _ToReset->_Write_b_eep
;!    _KeyRes->_RdPrt
;!    _PomiarCW->_ReadTabNTC
;!    _ReadTabNTC->_Read_b_eep
;!    _PrintErr->_SetStatus
;!    _DecWSW->_PrintCW
;!    _DecWSW->_PrintNstCW
;!    _PrintNstCW->_SetStatus
;!    _EndOFF->_SetStatus
;!    _PrintCW->_SetStatus
;!    _PrintOFF->_SetStatus
;!    _FiltrPomiarowyCW->_GoldenEye
;!    _FltParMod->_PredkoscZmianCW
;!    _GoldenEye->___wmul
;!    _WriteEEPCW->_Write_b_eep
;!    _MKonfiguracja->_MocStart
;!    _MKonfiguracja->_MocMaksCW
;!    _MKonfiguracja->_ReadDataXONL
;!    _PomiarPCW->_ReadDataXONLI
;!    _PomiarPCW->_ReadDataXONLD
;!    _RNst->_SetData
;!    _ReadDataXONLD->_ExPresKey2B
;!    _ReadDataXONLI->_ExPresKey2
;!    _ReturnACfromNTC->_Read_b_eep
;!    _RdEEParam->_MocStart
;!    _RdEEParam->_MocMaksCW
;!    _MocMaksCW->___awdiv
;!    _MocStart->___awdiv
;!    ___lwdiv->___wmul
;!    ___awdiv->___wmul
;!    _ModParam->_Read_b_eep
;!    _ReadDataXONL->_ExPresKey2
;!    _ReadDataONL->_ExPresKey
;!    _PrintWPR->_SetStatus
;!    _PrintPR->_SetStatus
;!    _RestartFltPrt->_SetPrt
;!    _EndTestScr->_SetStatus
;!    _TestScr->_SetStatus
;!    _InitPort->_RefStan
;!    _InitWsw->_SetStatus
;!
;!Critical Paths under _ISR in BANK1
;!
;!    None.
;!
;!Critical Paths under _main in BANK2
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK2
;!
;!    None.
;!
;!Critical Paths under _main in BANK3
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK3
;!
;!    None.
;!
;!Critical Paths under _main in BANK4
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK4
;!
;!    None.
;!
;!Critical Paths under _main in BANK5
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK5
;!
;!    None.
;!
;!Critical Paths under _main in BANK6
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK6
;!
;!    None.
;!
;!Critical Paths under _main in BANK7
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK7
;!
;!    None.
;!
;!Critical Paths under _main in BANK8
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK8
;!
;!    None.
;!
;!Critical Paths under _main in BANK9
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK9
;!
;!    None.
;!
;!Critical Paths under _main in BANK10
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK10
;!
;!    None.
;!
;!Critical Paths under _main in BANK11
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK11
;!
;!    None.
;!
;!Critical Paths under _main in BANK12
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK12
;!
;!    None.
;!
;!Critical Paths under _main in BANK13
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK13
;!
;!    None.
;!
;!Critical Paths under _main in BANK14
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK14
;!
;!    None.
;!
;!Critical Paths under _main in BANK15
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK15
;!
;!    None.

;;
;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
;;

;!
;!Call Graph Tables:
;!
;! ---------------------------------------------------------------------------------
;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
;! ---------------------------------------------------------------------------------
;! (0) _main                                                 1     1      0   92345
;!                                             25 BANK1      1     1      0
;!                            _InitWsw
;!                             _InitAC
;!                         _Read_b_eep
;!                            _InitI2C
;!                            _InitOsc
;!                         _InitGlobal
;!                         _InitTimer1
;!                           _InitPort
;!                            _InitPWM
;!                        _InitDataPmr
;!                          _ClearData
;!                            _TestScr
;!                         _PwrOnDelay
;!                         _EndTestScr
;!                             _ClsScr
;!                          _EndClsScr
;!                             _EnKonf
;!                          _RdEEParam
;!                           _PrintErr
;!                             _ErrPTG
;!                          _PomiarPCW
;!                      _RestartFltPrt
;!                           _StartRTS
;!                      _MKonfiguracja
;!                           _PomiarCW
;!                           _WritePCW
;!                   _FiltrPomiarowyCW
;!                             _DecWSW
;!                             _DecERR
;!                             _DecSTR
;!                         _DecRozruch
;!                          _DecWylacz
;!                   _FunkcjaSerwisowa
;!                    _KolejkaPobudzen
;!                            _Rozruch
;!                            _VWybieg
;!                      _ReloadPlomien
;!                        _RuszPlomien
;!                         _ReloadCiag
;!                           _RuszCiag
;!                            _Moduluj
;! ---------------------------------------------------------------------------------
;! (1) _Moduluj                                              4     4      0    6939
;!                                             24 BANK1      1     1      0
;!                          _StartRTdS
;!                               _RTdS
;!                          _StartMCW4
;!                        _ReadDataCW4
;!                           _ModToCW4
;!                           _ModZgCW4
;!                           _ModDkCW4
;!                        _IncConstCW4
;!                          _IncMaxCW4
;!                          _ModPruCW4
;!                          _ModPrzCW4
;!                         _SetPWM_CW4
;! ---------------------------------------------------------------------------------
;! (2) _SetPWM_CW4                                           0     0      0    1033
;!                          _WriteOPWM
;! ---------------------------------------------------------------------------------
;! (3) _WriteOPWM                                            9     9      0    1033
;!                                             13 BANK1      9     9      0
;!                            ___lwdiv
;!                             ___wmul
;! ---------------------------------------------------------------------------------
;! (2) _ModPrzCW4                                           13    13      0    1361
;!                                             14 BANK1      9     9      0
;!                            _Tnizsza
;!                            _Twyzsza
;!                            _Tmaleje
;!                            ___awdiv
;! ---------------------------------------------------------------------------------
;! (2) _ModPruCW4                                            8     8      0     614
;!                                              3 BANK1      7     7      0
;!                              _Tstoi
;!                            _Tnizsza
;!                            _Twyzsza
;!                            _Trosnie
;!                            _Tmaleje
;! ---------------------------------------------------------------------------------
;! (3) _Tmaleje                                              4     4      0      31
;!                                              0 BANK0      1     1      0
;!                                              0 BANK1      3     3      0
;! ---------------------------------------------------------------------------------
;! (3) _Twyzsza                                              4     4      0      31
;!                                              0 BANK0      1     1      0
;!                                              0 BANK1      3     3      0
;! ---------------------------------------------------------------------------------
;! (2) _IncMaxCW4                                            5     5      0     109
;!                                              0 BANK1      3     3      0
;!                            _Trosnie
;! ---------------------------------------------------------------------------------
;! (3) _Trosnie                                              1     1      0      31
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _IncConstCW4                                          0     0      0       0
;!                              _Tstoi
;! ---------------------------------------------------------------------------------
;! (3) _Tstoi                                                0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _ModDkCW4                                            12    12      0     470
;!                                              6 BANK1     12    12      0
;!                             ___wmul
;! ---------------------------------------------------------------------------------
;! (2) _ModZgCW4                                            10    10      0    1181
;!                                             14 BANK1     10    10      0
;!                            _Tnizsza
;!                            ___aldiv
;!                             ___lmul
;!                             ___wmul
;! ---------------------------------------------------------------------------------
;! (3) _Tnizsza                                              1     1      0      31
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _ModToCW4                                             0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _ReadDataCW4                                          0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _StartMCW4                                            0     0      0    2016
;!                          _StartRTdS
;!                          _FirstPCW4
;! ---------------------------------------------------------------------------------
;! (1) _RuszCiag                                             1     1      0    8168
;!                                             16 BANK1      1     1      0
;!                              _RdPrt
;!                           _PrintErr
;!                             _ErrPTG
;!                           _StartRTS
;!                                _RTS
;!                           _StartRTM
;!                                _RTM
;! ---------------------------------------------------------------------------------
;! (1) _ReloadCiag                                           1     1      0      62
;!                                              0 BANK1      1     1      0
;!                                _RTS
;! ---------------------------------------------------------------------------------
;! (1) _RuszPlomien                                          1     1      0     248
;!                                              0 BANK1      1     1      0
;!                          _StartRTdS
;!                           _StartRTS
;!                                _RTS
;! ---------------------------------------------------------------------------------
;! (1) _ReloadPlomien                                        1     1      0      62
;!                                              0 BANK1      1     1      0
;!                               _RTdS
;! ---------------------------------------------------------------------------------
;! (1) _Rozruch                                              1     1      0   27171
;!                                             23 BANK1      1     1      0
;!                              _RdPrt
;!                           _PrintErr
;!                             _ErrPTG
;!                           _StartRTS
;!                         _PrintNstCW
;!                                _RTS
;!                           _WritePWM
;!                            _GrzejON
;!                         _DecyzjaPLM
;!                        _DecyzjaPLM2
;!                          _FirstPCW4
;! ---------------------------------------------------------------------------------
;! (3) _FirstPCW4                                            9     9      0    1923
;!                                             14 BANK1      9     9      0
;!                            ___aldiv
;!                             ___lmul
;!                             ___wmul
;! ---------------------------------------------------------------------------------
;! (3) ___lmul                                              12     4      8     136
;!                                              0 BANK1     12     4      8
;! ---------------------------------------------------------------------------------
;! (3) ___aldiv                                             14     6      8     445
;!                                              0 BANK1     14     6      8
;! ---------------------------------------------------------------------------------
;! (2) _DecyzjaPLM2                                          0     0      0    7858
;!                              _RdPrt
;!                           _PrintErr
;!                             _ErrPTG
;! ---------------------------------------------------------------------------------
;! (2) _DecyzjaPLM                                           0     0      0    7796
;!                           _PrintErr
;!                             _ErrPTG
;! ---------------------------------------------------------------------------------
;! (2) _GrzejON                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _KolejkaPobudzen                                      1     1      0      62
;!                              _RdPrt
;! ---------------------------------------------------------------------------------
;! (1) _FunkcjaSerwisowa                                     1     1      0    1922
;!                                              8 BANK1      1     1      0
;!                              _RdPrt
;!                           _StartRTS
;!                         _PrintNstCW
;!                                _RTS
;!                           _StartRTM
;!                                _RTM
;! ---------------------------------------------------------------------------------
;! (1) _DecWylacz                                            0     0      0       0
;!                          _SetWylacz
;! ---------------------------------------------------------------------------------
;! (2) _SetWylacz                                            0     0      0       0
;!                           _GrzejOFF
;! ---------------------------------------------------------------------------------
;! (1) _DecRozruch                                           0     0      0       0
;!                         _SetRozruch
;! ---------------------------------------------------------------------------------
;! (2) _SetRozruch                                           0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _DecSTR                                               1     1      0     155
;!                                              1 BANK1      1     1      0
;!                              _RdPrt
;!                                _RTS
;!                         _RestartMod
;!                           _WritePWM
;! ---------------------------------------------------------------------------------
;! (2) _RestartMod                                           0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _DecERR                                               3     3      0    8214
;!                                             16 BANK1      3     3      0
;!                              _RdPrt
;!                           _PrintErr
;!                             _ErrPTG
;!                           _StartRTS
;!                             _EndErr
;! ---------------------------------------------------------------------------------
;! (2) _ErrPTG                                               1     1      0    6060
;!                          _PomiarPCW
;!                           _PomiarCW
;!                            _VWybieg
;!                             _EndErr
;!                           _WritePWM
;!                           _GrzejOFF
;!                             _KeyRes
;!                            _VZPauza
;!                           _Busy_eep
;!                        _Write_b_eep
;!                            _PrintPR
;!                            _ToReset
;! ---------------------------------------------------------------------------------
;! (3) _ToReset                                              0     0      0     130
;!                           _Busy_eep
;!                        _Write_b_eep
;! ---------------------------------------------------------------------------------
;! (3) _VZPauza                                              0     0      0     155
;!                           _StartRTS
;!                                _RTS
;! ---------------------------------------------------------------------------------
;! (3) _KeyRes                                               0     0      0     217
;!                              _RdPrt
;!                           _StartRTS
;!                                _RTS
;! ---------------------------------------------------------------------------------
;! (3) _GrzejOFF                                             0     0      0       0
;! ---------------------------------------------------------------------------------
;! (3) _WritePWM                                             1     1      0      31
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (3) _EndErr                                               0     0      0      62
;!                           _ResetKol
;! ---------------------------------------------------------------------------------
;! (3) _VWybieg                                              1     1      0     155
;!                                              0 BANK1      1     1      0
;!                           _StartRTS
;!                                _RTS
;! ---------------------------------------------------------------------------------
;! (3) _PomiarCW                                             0     0      0     390
;!                             _ReadAC
;!                         _ReadTabNTC
;! ---------------------------------------------------------------------------------
;! (4) _ReadTabNTC                                           4     4      0     266
;!                                              2 BANK1      4     4      0
;!                         _Read_b_eep
;! ---------------------------------------------------------------------------------
;! (4) _ReadAC                                               2     2      0     124
;!                                              0 BANK0      1     1      0
;!                                              0 BANK1      1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _PrintErr                                             2     1      1    1736
;!                                              6 BANK1      2     1      1
;!                          _SetStatus
;!                            _SetData
;!                             _SetPoz
;! ---------------------------------------------------------------------------------
;! (1) _DecWSW                                               0     0      0    5766
;!                           _PrintOFF
;!                            _PrintCW
;!                             _EndOFF
;!                         _PrintNstCW
;! ---------------------------------------------------------------------------------
;! (2) _PrintNstCW                                           2     1      1    1550
;!                                              6 BANK1      2     1      1
;!                          _SetStatus
;!                            _SetData
;!                         _RestartKol
;! ---------------------------------------------------------------------------------
;! (3) _RestartKol                                           1     1      0      62
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _EndOFF                                               0     0      0    1302
;!                          _SetStatus
;! ---------------------------------------------------------------------------------
;! (2) _PrintCW                                              2     1      1    1488
;!                                              6 BANK1      2     1      1
;!                          _SetStatus
;!                            _SetData
;! ---------------------------------------------------------------------------------
;! (2) _PrintOFF                                             0     0      0    1426
;!                          _SetStatus
;!                            _SetData
;! ---------------------------------------------------------------------------------
;! (1) _FiltrPomiarowyCW                                     0     0      0    1213
;!                          _StartTim1
;!                            _PmrTim1
;!                          _StartTim2
;!                            _PmrTim2
;!                          _GoldenEye
;!                          _FltParMod
;! ---------------------------------------------------------------------------------
;! (2) _FltParMod                                            1     1      0     433
;!                                              0 BANK0      1     1      0
;!                    _PredkoscZmianCW
;! ---------------------------------------------------------------------------------
;! (3) _PredkoscZmianCW                                      2     2      0     365
;!                                              0 BANK1      2     2      0
;! ---------------------------------------------------------------------------------
;! (2) _GoldenEye                                            7     7      0     718
;!                                              6 BANK1      7     7      0
;!                             ___wmul
;! ---------------------------------------------------------------------------------
;! (2) _PmrTim2                                              1     1      0      31
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _StartTim2                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _PmrTim1                                              1     1      0      31
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _StartTim1                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _WritePCW                                             1     1      0     285
;!                                              3 BANK1      1     1      0
;!                          _StartRTdS
;!                               _RTdS
;!                         _WriteEEPCW
;! ---------------------------------------------------------------------------------
;! (2) _WriteEEPCW                                           0     0      0     130
;!                           _Busy_eep
;!                        _Write_b_eep
;! ---------------------------------------------------------------------------------
;! (1) _MKonfiguracja                                        7     7      0   13606
;!                                             17 BANK1      1     1      0
;!                              _RdPrt
;!                         _SetBufKey1
;!                           _PresKey1
;!                         _SetBufKey2
;!                           _PresKey2
;!                           _StartRTS
;!                                _RTS
;!                           _StartRTM
;!                                _RTM
;!                           _Busy_eep
;!                        _Write_b_eep
;!                            _PrintPR
;!                           _PrintWPR
;!                           _ModParam
;!                           _MocStart
;!                          _MocMaksCW
;!                        _ReadDataONL
;!                       _ReadDataXONL
;!                           _ExitKonf
;! ---------------------------------------------------------------------------------
;! (2) _ExitKonf                                             0     0      0    5141
;!                          _RdEEParam
;!                          _PomiarPCW
;!                              _EndPR
;! ---------------------------------------------------------------------------------
;! (3) _EndPR                                                0     0      0      62
;!                           _ResetKol
;! ---------------------------------------------------------------------------------
;! (4) _ResetKol                                             1     1      0      62
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (3) _PomiarPCW                                            1     1      0    2952
;!                                             15 BANK1      1     1      0
;!                    _ReturnACfromNTC
;!                              _RdPrt
;!                          _StartRTdS
;!                               _RTdS
;!                          _SetModPCW
;!                      _ReadDataXONLI
;!                      _ReadDataXONLD
;!                               _RNst
;! ---------------------------------------------------------------------------------
;! (4) _RNst                                                 1     1      0     155
;!                                              0 BANK0      1     1      0
;!                            _SetData
;! ---------------------------------------------------------------------------------
;! (4) _ReadDataXONLD                                       11     7      4    1208
;!                                              4 BANK1     11     7      4
;!                              _RdPrt (ARG)
;!                        _ExPresKey2B
;!                            ___lbdiv
;! ---------------------------------------------------------------------------------
;! (5) _ExPresKey2B                                          4     2      2     248
;!                                              0 BANK1      4     2      2
;!                          _StartRTdS
;!                               _RTdS
;! ---------------------------------------------------------------------------------
;! (4) _ReadDataXONLI                                       11     7      4    1084
;!                                              4 BANK1     11     7      4
;!                              _RdPrt (ARG)
;!                         _ExPresKey2
;!                            ___lbdiv
;! ---------------------------------------------------------------------------------
;! (4) _SetModPCW                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (4) _RdPrt                                                2     2      0      62
;!                                              0 BANK0      1     1      0
;!                                              0 BANK1      1     1      0
;! ---------------------------------------------------------------------------------
;! (4) _ReturnACfromNTC                                      4     4      0     288
;!                                              2 BANK1      4     4      0
;!                         _Read_b_eep
;! ---------------------------------------------------------------------------------
;! (3) _RdEEParam                                            0     0      0    2127
;!                         _Read_b_eep
;!                           _ModParam
;!                           _MocStart
;!                          _MocMaksCW
;!                       _SetTpKtParam
;! ---------------------------------------------------------------------------------
;! (4) _SetTpKtParam                                         0     0      0       0
;! ---------------------------------------------------------------------------------
;! (4) _MocMaksCW                                            3     3      0    1017
;!                                             14 BANK1      3     3      0
;!                            ___awdiv
;!                            ___lwdiv
;!                             ___wmul
;! ---------------------------------------------------------------------------------
;! (4) _MocStart                                             3     3      0    1017
;!                                             14 BANK1      3     3      0
;!                            ___awdiv
;!                            ___lwdiv
;!                             ___wmul
;! ---------------------------------------------------------------------------------
;! (4) ___wmul                                               6     2      4     232
;!                                              0 BANK1      6     2      4
;! ---------------------------------------------------------------------------------
;! (4) ___lwdiv                                              7     3      4     241
;!                                              6 BANK1      7     3      4
;!                             ___wmul (ARG)
;! ---------------------------------------------------------------------------------
;! (3) ___awdiv                                              8     4      4     445
;!                                              6 BANK1      8     4      4
;!                             ___wmul (ARG)
;! ---------------------------------------------------------------------------------
;! (4) _ModParam                                             3     2      1      31
;!                                              0 BANK0      1     0      1
;!                                              2 BANK1      1     1      0
;!                         _Read_b_eep (ARG)
;! ---------------------------------------------------------------------------------
;! (5) _Read_b_eep                                           2     0      2      62
;!                                              0 BANK1      2     0      2
;! ---------------------------------------------------------------------------------
;! (2) _ReadDataXONL                                        13     7      6    1487
;!                                              4 BANK1     13     7      6
;!                              _RdPrt (ARG)
;!                           _PresKey1 (ARG)
;!                         _ExPresKey2
;!                            ___lbdiv
;! ---------------------------------------------------------------------------------
;! (5) ___lbdiv                                              4     3      1     241
;!                                              0 BANK0      1     0      1
;!                                              0 BANK1      3     3      0
;! ---------------------------------------------------------------------------------
;! (5) _ExPresKey2                                           4     2      2     248
;!                                              0 BANK1      4     2      2
;!                          _StartRTdS
;!                               _RTdS
;! ---------------------------------------------------------------------------------
;! (2) _ReadDataONL                                         11     6      5     868
;!                                              4 BANK1     11     6      5
;!                              _RdPrt (ARG)
;!                           _PresKey1 (ARG)
;!                          _ExPresKey
;! ---------------------------------------------------------------------------------
;! (3) _ExPresKey                                            4     2      2     248
;!                                              0 BANK1      4     2      2
;!                          _StartRTdS
;!                               _RTdS
;! ---------------------------------------------------------------------------------
;! (2) _PrintWPR                                             1     1      0    1643
;!                                              6 BANK1      1     1      0
;!                          _SetStatus
;!                            _SetData
;!                             _SetPoz
;! ---------------------------------------------------------------------------------
;! (3) _PrintPR                                              6     4      2    1838
;!                                              6 BANK1      6     4      2
;!                          _SetStatus
;!                            _SetData
;!                             _SetPoz
;! ---------------------------------------------------------------------------------
;! (4) _SetPoz                                               6     5      1     186
;!                                              0 BANK0      1     0      1
;!                                              0 BANK1      5     5      0
;! ---------------------------------------------------------------------------------
;! (4) _Write_b_eep                                          4     1      3     130
;!                                              0 BANK0      1     1      0
;!                                              0 BANK1      3     0      3
;! ---------------------------------------------------------------------------------
;! (4) _Busy_eep                                             0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _RTM                                                  1     1      0      62
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _StartRTM                                             1     1      0      93
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _RTS                                                  1     1      0      62
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _PresKey2                                             2     2      0      31
;!                                              0 BANK0      1     1      0
;!                                              0 BANK1      1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _SetBufKey2                                           0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _PresKey1                                             2     2      0      31
;!                                              0 BANK0      1     1      0
;!                                              0 BANK1      1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _SetBufKey1                                           0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _RestartFltPrt                                        0     0      0     124
;!                             _SetPrt
;! ---------------------------------------------------------------------------------
;! (2) _SetPrt                                               3     2      1     124
;!                                              0 BANK0      1     0      1
;!                                              0 BANK1      2     2      0
;! ---------------------------------------------------------------------------------
;! (1) _EnKonf                                               0     0      0      93
;!                           _StartRTS
;! ---------------------------------------------------------------------------------
;! (2) _StartRTS                                             1     1      0      93
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (1) _EndClsScr                                            0     0      0     161
;!                              _WswOn
;!                   _AllKolToFirstPoz
;! ---------------------------------------------------------------------------------
;! (2) _AllKolToFirstPoz                                     1     1      0     161
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _WswOn                                                0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _ClsScr                                               0     0      0       0
;!                             _WswOff
;! ---------------------------------------------------------------------------------
;! (2) _WswOff                                               0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _EndTestScr                                           0     0      0    1426
;!                          _SetStatus
;!                            _SetData
;! ---------------------------------------------------------------------------------
;! (1) _PwrOnDelay                                           1     1      0     155
;!                                              0 BANK1      1     1      0
;!                          _StartRTdS
;!                               _RTdS
;! ---------------------------------------------------------------------------------
;! (2) _RTdS                                                 1     1      0      62
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (3) _StartRTdS                                            1     1      0      93
;!                                              0 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (1) _TestScr                                              0     0      0    1426
;!                          _SetStatus
;!                            _SetData
;! ---------------------------------------------------------------------------------
;! (4) _SetData                                              4     0      4     124
;!                                              0 BANK1      4     0      4
;! ---------------------------------------------------------------------------------
;! (1) _ClearData                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitDataPmr                                          0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitPWM                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitPort                                             0     0      0      74
;!                            _RefStan
;!                            _FrsStan
;! ---------------------------------------------------------------------------------
;! (2) _FrsStan                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _RefStan                                              3     3      0      74
;!                                              0 BANK0      1     1      0
;!                                              0 BANK1      2     2      0
;! ---------------------------------------------------------------------------------
;! (1) _InitTimer1                                           0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitGlobal                                           0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitOsc                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitI2C                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitAC                                               0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitWsw                                              1     1      0    1401
;!                                              6 BANK1      1     1      0
;!                          _SetStatus
;! ---------------------------------------------------------------------------------
;! (4) _SetStatus                                            7     1      6    1302
;!                                              0 BANK0      1     1      0
;!                                              0 BANK1      6     0      6
;! ---------------------------------------------------------------------------------
;! Estimated maximum stack depth 5
;! ---------------------------------------------------------------------------------
;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
;! ---------------------------------------------------------------------------------
;! (8) _ISR                                                 10    10      0    4395
;!                                             16 COMRAM    10    10      0
;!                         _RefreshWSW
;!                         _I2CSlaveTR
;!                      _FormatDataIMY
;!                       _ReloadTimer1
;!                          _IncRTimer
;!                        _IncPmrTimer
;!                          _SetResMux
;!                           _StabPort
;!                             _IntPWM
;! ---------------------------------------------------------------------------------
;! (9) _IntPWM                                               0     0      0       0
;! ---------------------------------------------------------------------------------
;! (9) _StabPort                                             4     4      0     554
;!                                              3 COMRAM     4     4      0
;!                          i2_RefStan
;! ---------------------------------------------------------------------------------
;! (10) i2_RefStan                                           3     3      0     154
;!                                              0 COMRAM     3     3      0
;! ---------------------------------------------------------------------------------
;! (9) _SetResMux                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (9) _IncPmrTimer                                          0     0      0       0
;! ---------------------------------------------------------------------------------
;! (9) _IncRTimer                                            1     1      0     624
;!                                              0 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (9) _ReloadTimer1                                         0     0      0       0
;! ---------------------------------------------------------------------------------
;! (9) _FormatDataIMY                                        3     3      0     328
;!                                              8 COMRAM     3     3      0
;!                             _BitSet
;!                            i2_RdPrt
;! ---------------------------------------------------------------------------------
;! (10) i2_RdPrt                                             2     2      0     146
;!                                              0 COMRAM     2     2      0
;! ---------------------------------------------------------------------------------
;! (10) _BitSet                                              6     4      2     110
;!                                              2 COMRAM     6     4      2
;!                            i2_RdPrt (ARG)
;! ---------------------------------------------------------------------------------
;! (9) _I2CSlaveTR                                           1     1      0     316
;!                           _SetTData
;!                            _LiczCHK
;!                           _SetRData
;!                         _ReceptData
;!                       _TransmitData
;! ---------------------------------------------------------------------------------
;! (10) _TransmitData                                        0     0      0       0
;! ---------------------------------------------------------------------------------
;! (10) _ReceptData                                          0     0      0     158
;!                            _LiczCHK
;!                             _ToWork
;! ---------------------------------------------------------------------------------
;! (11) _ToWork                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (11) _LiczCHK                                             8     8      0     158
;!                                              0 COMRAM     8     8      0
;! ---------------------------------------------------------------------------------
;! (10) _SetRData                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (10) _SetTData                                            2     2      0       0
;! ---------------------------------------------------------------------------------
;! (9) _RefreshWSW                                           0     0      0    2573
;!                            _KolProc
;!                       _SetPrWswData
;!                      _FormatWswData
;!                       _PrintWswData
;! ---------------------------------------------------------------------------------
;! (10) _PrintWswData                                        0     0      0       0
;! ---------------------------------------------------------------------------------
;! (10) _FormatWswData                                       3     3      0     686
;!                                              4 COMRAM     2     2      0
;!                            ___lbmod
;!                          i2___lbdiv
;! ---------------------------------------------------------------------------------
;! (11) i2___lbdiv                                           4     3      1     527
;!                                              0 COMRAM     4     3      1
;! ---------------------------------------------------------------------------------
;! (11) ___lbmod                                             4     3      1     159
;!                                              0 COMRAM     4     3      1
;! ---------------------------------------------------------------------------------
;! (10) _SetPrWswData                                        2     2      0      90
;!                                              0 COMRAM     2     2      0
;! ---------------------------------------------------------------------------------
;! (10) _KolProc                                            16    16      0    1797
;!                                              0 COMRAM    16    16      0
;! ---------------------------------------------------------------------------------
;! Estimated maximum stack depth 11
;! ---------------------------------------------------------------------------------
;!
;! Call Graph Graphs:
;!
;! _main (ROOT)
;!   _InitWsw
;!     _SetStatus
;!   _InitAC
;!   _Read_b_eep
;!   _InitI2C
;!   _InitOsc
;!   _InitGlobal
;!   _InitTimer1
;!   _InitPort
;!     _RefStan
;!     _FrsStan
;!   _InitPWM
;!   _InitDataPmr
;!   _ClearData
;!   _TestScr
;!     _SetStatus
;!     _SetData
;!   _PwrOnDelay
;!     _StartRTdS
;!     _RTdS
;!   _EndTestScr
;!     _SetStatus
;!     _SetData
;!   _ClsScr
;!     _WswOff
;!   _EndClsScr
;!     _WswOn
;!     _AllKolToFirstPoz
;!   _EnKonf
;!     _StartRTS
;!   _RdEEParam
;!     _Read_b_eep
;!     _ModParam
;!       _Read_b_eep (ARG)
;!     _MocStart
;!       ___awdiv
;!         ___wmul (ARG)
;!       ___lwdiv
;!         ___wmul (ARG)
;!       ___wmul
;!     _MocMaksCW
;!       ___awdiv
;!         ___wmul (ARG)
;!       ___lwdiv
;!         ___wmul (ARG)
;!       ___wmul
;!     _SetTpKtParam
;!   _PrintErr
;!     _SetStatus
;!     _SetData
;!     _SetPoz
;!   _ErrPTG
;!     _PomiarPCW
;!       _ReturnACfromNTC
;!         _Read_b_eep
;!       _RdPrt
;!       _StartRTdS
;!       _RTdS
;!       _SetModPCW
;!       _ReadDataXONLI
;!         _RdPrt (ARG)
;!         _ExPresKey2 (ARG)
;!           _StartRTdS
;!           _RTdS
;!         ___lbdiv (ARG)
;!       _ReadDataXONLD
;!         _RdPrt (ARG)
;!         _ExPresKey2B (ARG)
;!           _StartRTdS
;!           _RTdS
;!         ___lbdiv (ARG)
;!       _RNst
;!         _SetData
;!     _PomiarCW
;!       _ReadAC
;!       _ReadTabNTC
;!         _Read_b_eep
;!     _VWybieg
;!       _StartRTS
;!       _RTS
;!     _EndErr
;!       _ResetKol
;!     _WritePWM
;!     _GrzejOFF
;!     _KeyRes
;!       _RdPrt
;!       _StartRTS
;!       _RTS
;!     _VZPauza
;!       _StartRTS
;!       _RTS
;!     _Busy_eep
;!     _Write_b_eep
;!     _PrintPR
;!       _SetStatus
;!       _SetData
;!       _SetPoz
;!     _ToReset
;!       _Busy_eep
;!       _Write_b_eep
;!   _PomiarPCW
;!     _ReturnACfromNTC
;!       _Read_b_eep
;!     _RdPrt
;!     _StartRTdS
;!     _RTdS
;!     _SetModPCW
;!     _ReadDataXONLI
;!       _RdPrt (ARG)
;!       _ExPresKey2 (ARG)
;!         _StartRTdS
;!         _RTdS
;!       ___lbdiv (ARG)
;!     _ReadDataXONLD
;!       _RdPrt (ARG)
;!       _ExPresKey2B (ARG)
;!         _StartRTdS
;!         _RTdS
;!       ___lbdiv (ARG)
;!     _RNst
;!       _SetData
;!   _RestartFltPrt
;!     _SetPrt
;!   _StartRTS
;!   _MKonfiguracja
;!     _RdPrt
;!     _SetBufKey1
;!     _PresKey1
;!     _SetBufKey2
;!     _PresKey2
;!     _StartRTS
;!     _RTS
;!     _StartRTM
;!     _RTM
;!     _Busy_eep
;!     _Write_b_eep
;!     _PrintPR
;!       _SetStatus
;!       _SetData
;!       _SetPoz
;!     _PrintWPR
;!       _SetStatus
;!       _SetData
;!       _SetPoz
;!     _ModParam
;!       _Read_b_eep (ARG)
;!     _MocStart
;!       ___awdiv
;!         ___wmul (ARG)
;!       ___lwdiv
;!         ___wmul (ARG)
;!       ___wmul
;!     _MocMaksCW
;!       ___awdiv
;!         ___wmul (ARG)
;!       ___lwdiv
;!         ___wmul (ARG)
;!       ___wmul
;!     _ReadDataONL
;!       _RdPrt (ARG)
;!       _PresKey1 (ARG)
;!       _ExPresKey (ARG)
;!         _StartRTdS
;!         _RTdS
;!     _ReadDataXONL
;!       _RdPrt (ARG)
;!       _PresKey1 (ARG)
;!       _ExPresKey2 (ARG)
;!         _StartRTdS
;!         _RTdS
;!       ___lbdiv (ARG)
;!     _ExitKonf
;!       _RdEEParam
;!         _Read_b_eep
;!         _ModParam
;!           _Read_b_eep (ARG)
;!         _MocStart
;!           ___awdiv
;!             ___wmul (ARG)
;!           ___lwdiv
;!             ___wmul (ARG)
;!           ___wmul
;!         _MocMaksCW
;!           ___awdiv
;!             ___wmul (ARG)
;!           ___lwdiv
;!             ___wmul (ARG)
;!           ___wmul
;!         _SetTpKtParam
;!       _PomiarPCW
;!         _ReturnACfromNTC
;!           _Read_b_eep
;!         _RdPrt
;!         _StartRTdS
;!         _RTdS
;!         _SetModPCW
;!         _ReadDataXONLI
;!           _RdPrt (ARG)
;!           _ExPresKey2 (ARG)
;!             _StartRTdS
;!             _RTdS
;!           ___lbdiv (ARG)
;!         _ReadDataXONLD
;!           _RdPrt (ARG)
;!           _ExPresKey2B (ARG)
;!             _StartRTdS
;!             _RTdS
;!           ___lbdiv (ARG)
;!         _RNst
;!           _SetData
;!       _EndPR
;!         _ResetKol
;!   _PomiarCW
;!     _ReadAC
;!     _ReadTabNTC
;!       _Read_b_eep
;!   _WritePCW
;!     _StartRTdS
;!     _RTdS
;!     _WriteEEPCW
;!       _Busy_eep
;!       _Write_b_eep
;!   _FiltrPomiarowyCW
;!     _StartTim1
;!     _PmrTim1
;!     _StartTim2
;!     _PmrTim2
;!     _GoldenEye
;!       ___wmul
;!     _FltParMod
;!       _PredkoscZmianCW
;!   _DecWSW
;!     _PrintOFF
;!       _SetStatus
;!       _SetData
;!     _PrintCW
;!       _SetStatus
;!       _SetData
;!     _EndOFF
;!       _SetStatus
;!     _PrintNstCW
;!       _SetStatus
;!       _SetData
;!       _RestartKol
;!   _DecERR
;!     _RdPrt
;!     _PrintErr
;!       _SetStatus
;!       _SetData
;!       _SetPoz
;!     _ErrPTG
;!       _PomiarPCW
;!         _ReturnACfromNTC
;!           _Read_b_eep
;!         _RdPrt
;!         _StartRTdS
;!         _RTdS
;!         _SetModPCW
;!         _ReadDataXONLI
;!           _RdPrt (ARG)
;!           _ExPresKey2 (ARG)
;!             _StartRTdS
;!             _RTdS
;!           ___lbdiv (ARG)
;!         _ReadDataXONLD
;!           _RdPrt (ARG)
;!           _ExPresKey2B (ARG)
;!             _StartRTdS
;!             _RTdS
;!           ___lbdiv (ARG)
;!         _RNst
;!           _SetData
;!       _PomiarCW
;!         _ReadAC
;!         _ReadTabNTC
;!           _Read_b_eep
;!       _VWybieg
;!         _StartRTS
;!         _RTS
;!       _EndErr
;!         _ResetKol
;!       _WritePWM
;!       _GrzejOFF
;!       _KeyRes
;!         _RdPrt
;!         _StartRTS
;!         _RTS
;!       _VZPauza
;!         _StartRTS
;!         _RTS
;!       _Busy_eep
;!       _Write_b_eep
;!       _PrintPR
;!         _SetStatus
;!         _SetData
;!         _SetPoz
;!       _ToReset
;!         _Busy_eep
;!         _Write_b_eep
;!     _StartRTS
;!     _EndErr
;!       _ResetKol
;!   _DecSTR
;!     _RdPrt
;!     _RTS
;!     _RestartMod
;!     _WritePWM
;!   _DecRozruch
;!     _SetRozruch
;!   _DecWylacz
;!     _SetWylacz
;!       _GrzejOFF
;!   _FunkcjaSerwisowa
;!     _RdPrt
;!     _StartRTS
;!     _PrintNstCW
;!       _SetStatus
;!       _SetData
;!       _RestartKol
;!     _RTS
;!     _StartRTM
;!     _RTM
;!   _KolejkaPobudzen
;!     _RdPrt
;!   _Rozruch
;!     _RdPrt
;!     _PrintErr
;!       _SetStatus
;!       _SetData
;!       _SetPoz
;!     _ErrPTG
;!       _PomiarPCW
;!         _ReturnACfromNTC
;!           _Read_b_eep
;!         _RdPrt
;!         _StartRTdS
;!         _RTdS
;!         _SetModPCW
;!         _ReadDataXONLI
;!           _RdPrt (ARG)
;!           _ExPresKey2 (ARG)
;!             _StartRTdS
;!             _RTdS
;!           ___lbdiv (ARG)
;!         _ReadDataXONLD
;!           _RdPrt (ARG)
;!           _ExPresKey2B (ARG)
;!             _StartRTdS
;!             _RTdS
;!           ___lbdiv (ARG)
;!         _RNst
;!           _SetData
;!       _PomiarCW
;!         _ReadAC
;!         _ReadTabNTC
;!           _Read_b_eep
;!       _VWybieg
;!         _StartRTS
;!         _RTS
;!       _EndErr
;!         _ResetKol
;!       _WritePWM
;!       _GrzejOFF
;!       _KeyRes
;!         _RdPrt
;!         _StartRTS
;!         _RTS
;!       _VZPauza
;!         _StartRTS
;!         _RTS
;!       _Busy_eep
;!       _Write_b_eep
;!       _PrintPR
;!         _SetStatus
;!         _SetData
;!         _SetPoz
;!       _ToReset
;!         _Busy_eep
;!         _Write_b_eep
;!     _StartRTS
;!     _PrintNstCW
;!       _SetStatus
;!       _SetData
;!       _RestartKol
;!     _RTS
;!     _WritePWM
;!     _GrzejON
;!     _DecyzjaPLM
;!       _PrintErr
;!         _SetStatus
;!         _SetData
;!         _SetPoz
;!       _ErrPTG
;!         _PomiarPCW
;!           _ReturnACfromNTC
;!             _Read_b_eep
;!           _RdPrt
;!           _StartRTdS
;!           _RTdS
;!           _SetModPCW
;!           _ReadDataXONLI
;!             _RdPrt (ARG)
;!             _ExPresKey2 (ARG)
;!               _StartRTdS
;!               _RTdS
;!             ___lbdiv (ARG)
;!           _ReadDataXONLD
;!             _RdPrt (ARG)
;!             _ExPresKey2B (ARG)
;!               _StartRTdS
;!               _RTdS
;!             ___lbdiv (ARG)
;!           _RNst
;!             _SetData
;!         _PomiarCW
;!           _ReadAC
;!           _ReadTabNTC
;!             _Read_b_eep
;!         _VWybieg
;!           _StartRTS
;!           _RTS
;!         _EndErr
;!           _ResetKol
;!         _WritePWM
;!         _GrzejOFF
;!         _KeyRes
;!           _RdPrt
;!           _StartRTS
;!           _RTS
;!         _VZPauza
;!           _StartRTS
;!           _RTS
;!         _Busy_eep
;!         _Write_b_eep
;!         _PrintPR
;!           _SetStatus
;!           _SetData
;!           _SetPoz
;!         _ToReset
;!           _Busy_eep
;!           _Write_b_eep
;!     _DecyzjaPLM2
;!       _RdPrt
;!       _PrintErr
;!         _SetStatus
;!         _SetData
;!         _SetPoz
;!       _ErrPTG
;!         _PomiarPCW
;!           _ReturnACfromNTC
;!             _Read_b_eep
;!           _RdPrt
;!           _StartRTdS
;!           _RTdS
;!           _SetModPCW
;!           _ReadDataXONLI
;!             _RdPrt (ARG)
;!             _ExPresKey2 (ARG)
;!               _StartRTdS
;!               _RTdS
;!             ___lbdiv (ARG)
;!           _ReadDataXONLD
;!             _RdPrt (ARG)
;!             _ExPresKey2B (ARG)
;!               _StartRTdS
;!               _RTdS
;!             ___lbdiv (ARG)
;!           _RNst
;!             _SetData
;!         _PomiarCW
;!           _ReadAC
;!           _ReadTabNTC
;!             _Read_b_eep
;!         _VWybieg
;!           _StartRTS
;!           _RTS
;!         _EndErr
;!           _ResetKol
;!         _WritePWM
;!         _GrzejOFF
;!         _KeyRes
;!           _RdPrt
;!           _StartRTS
;!           _RTS
;!         _VZPauza
;!           _StartRTS
;!           _RTS
;!         _Busy_eep
;!         _Write_b_eep
;!         _PrintPR
;!           _SetStatus
;!           _SetData
;!           _SetPoz
;!         _ToReset
;!           _Busy_eep
;!           _Write_b_eep
;!     _FirstPCW4
;!       ___aldiv
;!       ___lmul
;!       ___wmul
;!   _VWybieg
;!     _StartRTS
;!     _RTS
;!   _ReloadPlomien
;!     _RTdS
;!   _RuszPlomien
;!     _StartRTdS
;!     _StartRTS
;!     _RTS
;!   _ReloadCiag
;!     _RTS
;!   _RuszCiag
;!     _RdPrt
;!     _PrintErr
;!       _SetStatus
;!       _SetData
;!       _SetPoz
;!     _ErrPTG
;!       _PomiarPCW
;!         _ReturnACfromNTC
;!           _Read_b_eep
;!         _RdPrt
;!         _StartRTdS
;!         _RTdS
;!         _SetModPCW
;!         _ReadDataXONLI
;!           _RdPrt (ARG)
;!           _ExPresKey2 (ARG)
;!             _StartRTdS
;!             _RTdS
;!           ___lbdiv (ARG)
;!         _ReadDataXONLD
;!           _RdPrt (ARG)
;!           _ExPresKey2B (ARG)
;!             _StartRTdS
;!             _RTdS
;!           ___lbdiv (ARG)
;!         _RNst
;!           _SetData
;!       _PomiarCW
;!         _ReadAC
;!         _ReadTabNTC
;!           _Read_b_eep
;!       _VWybieg
;!         _StartRTS
;!         _RTS
;!       _EndErr
;!         _ResetKol
;!       _WritePWM
;!       _GrzejOFF
;!       _KeyRes
;!         _RdPrt
;!         _StartRTS
;!         _RTS
;!       _VZPauza
;!         _StartRTS
;!         _RTS
;!       _Busy_eep
;!       _Write_b_eep
;!       _PrintPR
;!         _SetStatus
;!         _SetData
;!         _SetPoz
;!       _ToReset
;!         _Busy_eep
;!         _Write_b_eep
;!     _StartRTS
;!     _RTS
;!     _StartRTM
;!     _RTM
;!   _Moduluj
;!     _StartRTdS
;!     _RTdS
;!     _StartMCW4
;!       _StartRTdS
;!       _FirstPCW4
;!         ___aldiv
;!         ___lmul
;!         ___wmul
;!     _ReadDataCW4
;!     _ModToCW4
;!     _ModZgCW4
;!       _Tnizsza
;!       ___aldiv
;!       ___lmul
;!       ___wmul
;!     _ModDkCW4
;!       ___wmul
;!     _IncConstCW4
;!       _Tstoi
;!     _IncMaxCW4
;!       _Trosnie
;!     _ModPruCW4
;!       _Tstoi
;!       _Tnizsza
;!       _Twyzsza
;!       _Trosnie
;!       _Tmaleje
;!     _ModPrzCW4
;!       _Tnizsza
;!       _Twyzsza
;!       _Tmaleje
;!       ___awdiv
;!         ___wmul (ARG)
;!     _SetPWM_CW4
;!       _WriteOPWM
;!         ___lwdiv
;!           ___wmul (ARG)
;!         ___wmul
;!
;! _ISR (ROOT)
;!   _RefreshWSW
;!     _KolProc
;!     _SetPrWswData
;!     _FormatWswData
;!       ___lbmod
;!       i2___lbdiv
;!     _PrintWswData
;!   _I2CSlaveTR
;!     _SetTData
;!     _LiczCHK
;!     _SetRData
;!     _ReceptData
;!       _LiczCHK
;!       _ToWork
;!     _TransmitData
;!   _FormatDataIMY
;!     _BitSet
;!       i2_RdPrt (ARG)
;!     i2_RdPrt
;!   _ReloadTimer1
;!   _IncRTimer
;!   _IncPmrTimer
;!   _SetResMux
;!   _StabPort
;!     i2_RefStan
;!   _IntPWM
;!

;! Address spaces:

;!Name               Size   Autos  Total    Cost      Usage
;!BIGRAM             F7F      0       0      37        0.0%
;!EEDATA             400      0       0       0        0.0%
;!BITBANK14          100      0       0      32        0.0%
;!BANK14             100      0       0      33        0.0%
;!BITBANK13          100      0       0      30        0.0%
;!BANK13             100      0       0      31        0.0%
;!BITBANK12          100      0       0      28        0.0%
;!BANK12             100      0       0      29        0.0%
;!BITBANK11          100      0       0      26        0.0%
;!BANK11             100      0       0      27        0.0%
;!BITBANK10          100      0       0      24        0.0%
;!BANK10             100      0       0      25        0.0%
;!BITBANK9           100      0       0      22        0.0%
;!BANK9              100      0       0      23        0.0%
;!BITBANK8           100      0       0      20        0.0%
;!BANK8              100      0       0      21        0.0%
;!BITBANK7           100      0       0      18        0.0%
;!BANK7              100      0       0      19        0.0%
;!BITBANK6           100      0       0      16        0.0%
;!BANK6              100      0       0      17        0.0%
;!BITBANK5           100      0       0      14        0.0%
;!BANK5              100      0       0      15        0.0%
;!BITBANK4           100      0       0      12        0.0%
;!BANK4              100      0       0      13        0.0%
;!BITBANK3           100      0       0      10        0.0%
;!BANK3              100      0       0      11        0.0%
;!BITBANK2           100      0       0       8        0.0%
;!BANK2              100      0       0       9        0.0%
;!BITBANK1           100      0       0       6        0.0%
;!BANK1              100     1A      C0       7       75.0%
;!BITBANK15           80      0       0      35        0.0%
;!BANK15              80      0       0      36        0.0%
;!BITBANK0            80      0       0       4        0.0%
;!BANK0               80      1      80       5      100.0%
;!BITCOMRAM           7F      0       1       0        0.8%
;!COMRAM              7F     1A      67       1       81.1%
;!BITSFR               0      0       0      40        0.0%
;!SFR                  0      0       0      40        0.0%
;!STACK                0      0       F       2        0.0%
;!NULL                 0      0       0       0        0.0%
;!ABS                  0      0     1A7      34        0.0%
;!DATA                 0      0     1B6       3        0.0%
;!CODE                 0      0       0       0        0.0%

	global	_main

;; *************** function _main *****************
;; Defined at:
;;		line 48 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels required when called:   11
;; This function calls:
;;		_InitWsw
;;		_InitAC
;;		_Read_b_eep
;;		_InitI2C
;;		_InitOsc
;;		_InitGlobal
;;		_InitTimer1
;;		_InitPort
;;		_InitPWM
;;		_InitDataPmr
;;		_ClearData
;;		_TestScr
;;		_PwrOnDelay
;;		_EndTestScr
;;		_ClsScr
;;		_EndClsScr
;;		_EnKonf
;;		_RdEEParam
;;		_PrintErr
;;		_ErrPTG
;;		_PomiarPCW
;;		_RestartFltPrt
;;		_StartRTS
;;		_MKonfiguracja
;;		_PomiarCW
;;		_WritePCW
;;		_FiltrPomiarowyCW
;;		_DecWSW
;;		_DecERR
;;		_DecSTR
;;		_DecRozruch
;;		_DecWylacz
;;		_FunkcjaSerwisowa
;;		_KolejkaPobudzen
;;		_Rozruch
;;		_VWybieg
;;		_ReloadPlomien
;;		_RuszPlomien
;;		_ReloadCiag
;;		_RuszCiag
;;		_Moduluj
;; This function is called by:
;;		Startup code after reset
;; This function uses a non-reentrant model
;;
psect	text0,class=CODE,space=0,reloc=2
global __ptext0
__ptext0:
psect	text0
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	48
	global	__size_of_main
	__size_of_main	equ	__end_of_main-_main
	
_main:
;incstack = 0
	opt	stack 20
;incstack = 0
	line	51
	
l12424:
;main.c: 51: InitOsc();
	call	_InitOsc	;wreg free
	line	52
;main.c: 52: InitGlobal();
	call	_InitGlobal	;wreg free
	line	53
	
l12426:
;main.c: 53: InitTimer1();
	call	_InitTimer1	;wreg free
	line	54
	
l12428:
;main.c: 54: InitPort();
	call	_InitPort	;wreg free
	line	55
	
l12430:
;main.c: 55: InitAC();
	call	_InitAC	;wreg free
	line	56
	
l12432:
;main.c: 56: InitWsw();
	call	_InitWsw	;wreg free
	line	57
	
l12434:
;main.c: 57: InitPWM();
	call	_InitPWM	;wreg free
	line	58
	
l12436:
;main.c: 58: InitI2C();
	call	_InitI2C	;wreg free
	line	59
	
l12438:; BSR set to: 0

;main.c: 59: InitDataPmr();
	call	_InitDataPmr	;wreg free
	line	60
	
l12440:; BSR set to: 0

;main.c: 60: ClearData();
	call	_ClearData	;wreg free
	line	64
	
l12442:; BSR set to: 0

;main.c: 64: if (!POR||!BOR)
	btfss	c:(32385/8),(32385)&7	;volatile
	goto	u15921
	goto	u15920
u15921:
	goto	l712
u15920:
	
l12444:; BSR set to: 0

	btfsc	c:(32384/8),(32384)&7	;volatile
	goto	u15931
	goto	u15930
u15931:
	goto	l710
u15930:
	
l712:; BSR set to: 0

	line	66
;main.c: 65: {
;main.c: 66: M._PW_START=1;
	bsf	(0+(_M+018h))&0ffh,7
	line	67
	
l12446:; BSR set to: 0

;main.c: 67: TestScr();
	call	_TestScr	;wreg free
	line	68
	
l12448:; BSR set to: 1

;main.c: 68: PwrOnDelay();
	call	_PwrOnDelay	;wreg free
	line	69
	
l12450:; BSR set to: 1

;main.c: 69: EndTestScr();
	call	_EndTestScr	;wreg free
	line	70
;main.c: 70: }
	goto	l12458
	line	71
	
l710:; BSR set to: 0

	line	73
;main.c: 71: else
;main.c: 72: {
;main.c: 73: M._RS_START=1;
	bsf	(0+(_M+018h))&0ffh,6
	line	74
	
l12452:; BSR set to: 0

;main.c: 74: ClsScr();
	call	_ClsScr	;wreg free
	line	75
	
l12454:; BSR set to: 0

;main.c: 75: PwrOnDelay();
	call	_PwrOnDelay	;wreg free
	line	76
	
l12456:; BSR set to: 1

;main.c: 76: EndClsScr();
	call	_EndClsScr	;wreg free
	line	79
	
l12458:
;main.c: 77: }
;main.c: 79: if (!POR||!BOR)
	btfss	c:(32385/8),(32385)&7	;volatile
	goto	u15941
	goto	u15940
u15941:
	goto	l716
u15940:
	
l12460:
	btfsc	c:(32384/8),(32384)&7	;volatile
	goto	u15951
	goto	u15950
u15951:
	goto	l12464
u15950:
	
l716:
	line	81
;main.c: 80: {
;main.c: 81: POR=1;
	bsf	c:(32385/8),(32385)&7	;volatile
	line	82
;main.c: 82: BOR=1;
	bsf	c:(32384/8),(32384)&7	;volatile
	line	83
	
l12462:
;main.c: 83: EnKonf();
	call	_EnKonf	;wreg free
	line	86
	
l12464:
;main.c: 84: }
;main.c: 86: RdEEParam();
	call	_RdEEParam	;wreg free
	line	89
	
l12466:; BSR set to: 0

;main.c: 89: if(M.ERR_BTY=Read_b_eep(0x00C0))
	movlw	high(0C0h)
	movlb	1	; () banked
	movwf	((?_Read_b_eep+1))&0ffh
	movlw	low(0C0h)
	movwf	((?_Read_b_eep))&0ffh
	call	_Read_b_eep	;wreg free
	movlb	0	; () banked
	movwf	(0+(_M+01Ch))&0ffh
	movlb	0	; () banked
	movf	(0+(_M+01Ch))&0ffh,w
	btfsc	status,2
	goto	u15961
	goto	u15960
u15961:
	goto	l12486
u15960:
	line	91
	
l12468:; BSR set to: 0

;main.c: 90: {
;main.c: 91: if((M.ERR_BTY>=1)&&(M.ERR_BTY<=3))
	movf	(0+(_M+01Ch))&0ffh,w
	btfsc	status,2
	goto	u15971
	goto	u15970
u15971:
	goto	l718
u15970:
	
l12470:; BSR set to: 0

	movlw	(04h)&0ffh
	cpfslt	(0+(_M+01Ch))&0ffh
	goto	u15981
	goto	u15980
u15981:
	goto	l718
u15980:
	goto	l12482
	line	96
	
l12474:; BSR set to: 0

;main.c: 96: PrintErr(0xE1,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(0E1h)&0ffh
	
	call	_PrintErr
	line	97
;main.c: 97: break;
	goto	l12484
	line	99
	
l12476:; BSR set to: 0

;main.c: 99: PrintErr(0xE2,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(0E2h)&0ffh
	
	call	_PrintErr
	line	100
;main.c: 100: break;
	goto	l12484
	line	102
	
l12478:; BSR set to: 0

;main.c: 102: PrintErr(0xE3,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(0E3h)&0ffh
	
	call	_PrintErr
	line	103
;main.c: 103: break;
	goto	l12484
	line	93
	
l12482:; BSR set to: 0

	movf	(0+(_M+01Ch))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 3, Range of values is 1 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           10     6 (average)
;	Chosen strategy is simple_byte

	xorlw	1^0	; case 1
	skipnz
	goto	l12474
	xorlw	2^1	; case 2
	skipnz
	goto	l12476
	xorlw	3^2	; case 3
	skipnz
	goto	l12478
	goto	l12484

	line	105
	
l12484:; BSR set to: 0

;main.c: 105: ErrPTG();
	call	_ErrPTG	;wreg free
	line	106
;main.c: 106: }
	goto	l12486
	line	107
	
l718:; BSR set to: 0

;main.c: 107: else M.ERR_BTY=0;
	clrf	(0+(_M+01Ch))&0ffh
	line	111
	
l12486:
;main.c: 108: }
;main.c: 111: PomiarPCW();
	call	_PomiarPCW	;wreg free
	line	112
	
l12488:; BSR set to: 1

;main.c: 112: DtCW._newPCW=0;
	bcf	(0+((c:_DtCW)+01h)),c,0
	line	113
	
l12490:; BSR set to: 1

;main.c: 113: DtCW._wrtPCW=0;
	bcf	(0+((c:_DtCW)+01h)),c,1
	line	116
	
l12492:; BSR set to: 1

;main.c: 116: RB0=0;
	bcf	c:(31752/8),(31752)&7	;volatile
	line	117
	
l12494:; BSR set to: 1

;main.c: 117: RB1=0;
	bcf	c:(31753/8),(31753)&7	;volatile
	line	121
	
l12496:; BSR set to: 1

;main.c: 121: M._TURBO=1;
	movlb	0	; () banked
	bsf	(0+(_M+019h))&0ffh,0
	line	122
	
l12498:; BSR set to: 0

;main.c: 122: RestartFltPrt();
	call	_RestartFltPrt	;wreg free
	line	123
	
l12500:; BSR set to: 1

;main.c: 123: StartRTS(10);
	movlw	(0Ah)&0ffh
	
	call	_StartRTS
	line	127
;main.c: 127: while(1)
	
l725:
	line	129
# 129 "C:\praca\PICC\backup\GRZ01V5\main.c"
clrwdt ;# 
psect	text0
	line	130
	
l12502:
;main.c: 130: M._PRACA=M._ROZRUCH||RB1;
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((_main$1349))&0ffh
	
l12504:; BSR set to: 1

	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u15991
	goto	u15990
u15991:
	goto	l727
u15990:
	
l12506:; BSR set to: 0

	btfsc	c:(31753/8),(31753)&7	;volatile
	goto	u16001
	goto	u16000
u16001:
	goto	l727
u16000:
	
l12508:; BSR set to: 0

	movlb	1	; () banked
	clrf	((_main$1349))&0ffh
	
l727:
	movlb	1	; () banked
	btfsc	(_main$1349)&0ffh,0
	bra	u16015
	movlb	0	; () banked
	bcf	(0+(_M+019h))&0ffh,1
	bra	u16016
	u16015:
	movlb	0	; () banked
	bsf	(0+(_M+019h))&0ffh,1
	u16016:

	line	132
	
l12510:; BSR set to: 0

;main.c: 132: MKonfiguracja();
	call	_MKonfiguracja	;wreg free
	line	134
;main.c: 134: PomiarPCW();
	call	_PomiarPCW	;wreg free
	line	135
	
l12512:; BSR set to: 1

;main.c: 135: PomiarCW();
	call	_PomiarCW	;wreg free
	line	136
	
l12514:; BSR set to: 1

;main.c: 136: WritePCW();
	call	_WritePCW	;wreg free
	line	137
	
l12516:
;main.c: 137: FiltrPomiarowyCW();
	call	_FiltrPomiarowyCW	;wreg free
	line	139
	
l12518:; BSR set to: 0

;main.c: 139: DecWSW();
	call	_DecWSW	;wreg free
	line	140
	
l12520:
;main.c: 140: DecERR();
	call	_DecERR	;wreg free
	line	142
	
l12522:; BSR set to: 0

;main.c: 142: DecSTR();
	call	_DecSTR	;wreg free
	line	143
	
l12524:; BSR set to: 0

;main.c: 143: DecRozruch();
	call	_DecRozruch	;wreg free
	line	144
	
l12526:; BSR set to: 0

;main.c: 144: DecWylacz();
	call	_DecWylacz	;wreg free
	line	146
	
l12528:; BSR set to: 0

;main.c: 146: FunkcjaSerwisowa();
	call	_FunkcjaSerwisowa	;wreg free
	line	148
	
l12530:
;main.c: 148: KolejkaPobudzen();
	call	_KolejkaPobudzen	;wreg free
	line	150
	
l12532:; BSR set to: 0

;main.c: 150: if(M._ROZRUCH) Rozruch();
	
	btfss	(0+(_M+010h))&0ffh,2
	goto	u16021
	goto	u16020
u16021:
	goto	l12536
u16020:
	
l12534:; BSR set to: 0

	call	_Rozruch	;wreg free
	line	151
	
l12536:
;main.c: 151: if(M._VWYBIEG) VWybieg();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,5
	goto	u16031
	goto	u16030
u16031:
	goto	l729
u16030:
	
l12538:; BSR set to: 0

	call	_VWybieg	;wreg free
	
l729:
	line	152
;main.c: 152: ReloadPlomien();
	call	_ReloadPlomien	;wreg free
	line	153
	
l12540:
;main.c: 153: if(M._RUSZ_PLOMIEN) RuszPlomien();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,7
	goto	u16041
	goto	u16040
u16041:
	goto	l730
u16040:
	
l12542:; BSR set to: 0

	call	_RuszPlomien	;wreg free
	
l730:
	line	154
;main.c: 154: ReloadCiag();
	call	_ReloadCiag	;wreg free
	line	155
	
l12544:
;main.c: 155: if(M._RUSZ_CIAG) RuszCiag();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,6
	goto	u16051
	goto	u16050
u16051:
	goto	l12548
u16050:
	
l12546:; BSR set to: 0

	call	_RuszCiag	;wreg free
	line	156
	
l12548:
;main.c: 156: if(M._MODULUJ) Moduluj();
	movlb	0	; () banked
	
	btfss	(0+(_M+011h))&0ffh,4
	goto	u16061
	goto	u16060
u16061:
	goto	l725
u16060:
	
l12550:; BSR set to: 0

	call	_Moduluj	;wreg free
	goto	l725
	global	start
	goto	start
	opt stack 0
	line	158
GLOBAL	__end_of_main
	__end_of_main:
	signat	_main,88
	global	_Moduluj

;; *************** function _Moduluj *****************
;; Defined at:
;;		line 47 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  wpw             2    0        unsigned int 
;;  wpp             1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    7
;; This function calls:
;;		_StartRTdS
;;		_RTdS
;;		_StartMCW4
;;		_ReadDataCW4
;;		_ModToCW4
;;		_ModZgCW4
;;		_ModDkCW4
;;		_IncConstCW4
;;		_IncMaxCW4
;;		_ModPruCW4
;;		_ModPrzCW4
;;		_SetPWM_CW4
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text1,class=CODE,space=0,reloc=2
global __ptext1
__ptext1:
psect	text1
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	47
	global	__size_of_Moduluj
	__size_of_Moduluj	equ	__end_of_Moduluj-_Moduluj
	
_Moduluj:; BSR set to: 1

;incstack = 0
	opt	stack 23
;incstack = 0
	line	51
	
l13560:; BSR set to: 0

;rgl.c: 48: unsigned int wpw;
;rgl.c: 49: unsigned char wpp;
;rgl.c: 51: StartMCW4();
	call	_StartMCW4	;wreg free
	line	52
	
l13562:; BSR set to: 0

;rgl.c: 52: ReadDataCW4();
	call	_ReadDataCW4	;wreg free
	line	53
	
l13564:; BSR set to: 0

;rgl.c: 53: ModToCW4();
	call	_ModToCW4	;wreg free
	line	54
	
l13566:; BSR set to: 0

;rgl.c: 54: ModZgCW4();
	call	_ModZgCW4	;wreg free
	line	55
	
l13568:
;rgl.c: 55: ModDkCW4();
	call	_ModDkCW4	;wreg free
	line	56
;rgl.c: 56: if(RTdS(3)>10)
	movlw	(03h)&0ffh
	
	call	_RTdS
	movwf	(??_Moduluj+0+0)&0ffh
	movlw	(0Bh)&0ffh
	subwf	((??_Moduluj+0+0))&0ffh,w
	btfss	status,0
	goto	u18391
	goto	u18390
u18391:
	goto	l13586
u18390:
	line	58
	
l13570:; BSR set to: 1

;rgl.c: 57: {
;rgl.c: 58: StartRTdS(3);
	movlw	(03h)&0ffh
	
	call	_StartRTdS
	line	59
	
l13572:; BSR set to: 1

;rgl.c: 59: if(tmr<0xff) tmr++;
	incf	((c:_tmr)),c,w

	btfsc	status,2
	goto	u18401
	goto	u18400
u18401:
	goto	l13576
u18400:
	
l13574:; BSR set to: 1

	incf	((c:_tmr)),c
	line	60
	
l13576:; BSR set to: 1

;rgl.c: 60: if(tmr2<0xff) tmr2++;
	movlb	0	; () banked
	incf	((_tmr2))&0ffh,w

	btfsc	status,2
	goto	u18411
	goto	u18410
u18411:
	goto	l13580
u18410:
	
l13578:; BSR set to: 0

	incf	((_tmr2))&0ffh
	line	61
	
l13580:; BSR set to: 0

;rgl.c: 61: IncConstCW4();
	call	_IncConstCW4	;wreg free
	line	62
	
l13582:; BSR set to: 0

;rgl.c: 62: IncMaxCW4();
	call	_IncMaxCW4	;wreg free
	line	63
	
l13584:
;rgl.c: 63: ModPruCW4();
	call	_ModPruCW4	;wreg free
	line	65
	
l13586:
;rgl.c: 64: }
;rgl.c: 65: ModPrzCW4();
	call	_ModPrzCW4	;wreg free
	line	66
	
l13588:
;rgl.c: 66: SetPWM_CW4();
	call	_SetPWM_CW4	;wreg free
	line	67
	
l1567:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_Moduluj
	__end_of_Moduluj:
	signat	_Moduluj,88
	global	_SetPWM_CW4

;; *************** function _SetPWM_CW4 *****************
;; Defined at:
;;		line 1073 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_WriteOPWM
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text2,class=CODE,space=0,reloc=2
global __ptext2
__ptext2:
psect	text2
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	1073
	global	__size_of_SetPWM_CW4
	__size_of_SetPWM_CW4	equ	__end_of_SetPWM_CW4-_SetPWM_CW4
	
_SetPWM_CW4:; BSR set to: 1

;incstack = 0
	opt	stack 23
;incstack = 0
	line	1074
	
l14668:
;rgl.c: 1074: if(!rgl.nmod)
	
	btfsc	((c:_rgl)),c,5
	goto	u20601
	goto	u20600
u20601:
	goto	l14672
u20600:
	line	1076
	
l14670:
;rgl.c: 1075: {
;rgl.c: 1076: WriteOPWM(rgl.tmp_pwm);
	movf	(0+((c:_rgl)+09h)),c,w
	
	call	_WriteOPWM
	line	1077
;rgl.c: 1077: }
	goto	l1927
	line	1078
	
l14672:
;rgl.c: 1078: else WriteOPWM(PWM.MDMOD);
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	
	call	_WriteOPWM
	line	1079
	
l1927:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_SetPWM_CW4
	__end_of_SetPWM_CW4:
	signat	_SetPWM_CW4,88
	global	_WriteOPWM

;; *************** function _WriteOPWM *****************
;; Defined at:
;;		line 99 in file "C:\praca\PICC\backup\GRZ01V5\pwm.c"
;; Parameters:    Size  Location     Type
;;  tpwm            1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  tpwm            1   21[BANK1 ] unsigned char 
;;  tmp             2   19[BANK1 ] unsigned int 
;;  aosc            1   18[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        9 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___lwdiv
;;		___wmul
;; This function is called by:
;;		_SetPWM_CW4
;; This function uses a non-reentrant model
;;
psect	text3,class=CODE,space=0,reloc=2
global __ptext3
__ptext3:
psect	text3
	file	"C:\praca\PICC\backup\GRZ01V5\pwm.c"
	line	99
	global	__size_of_WriteOPWM
	__size_of_WriteOPWM	equ	__end_of_WriteOPWM-_WriteOPWM
	
_WriteOPWM:; BSR set to: 1

;incstack = 0
	opt	stack 23
;incstack = 0
;WriteOPWM@tpwm stored from wreg
	line	110
	movff	wreg,(WriteOPWM@tpwm)
	
l14234:
;pwm.c: 100: unsigned char aosc;
;pwm.c: 101: unsigned int tmp;
;pwm.c: 110: if(tpwm<PWM.MDMOD) tpwm=PWM.MDMOD;
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	movlb	1	; () banked
	cpfslt	((WriteOPWM@tpwm))&0ffh
	goto	u19641
	goto	u19640
u19641:
	goto	l14238
u19640:
	
l14236:; BSR set to: 1

	movff	0+((c:_PWM)+05h),(WriteOPWM@tpwm)	;volatile
	line	112
	
l14238:; BSR set to: 1

;pwm.c: 112: if(tpwm>0xF0) tpwm=0xF0;
	movlw	(0F1h-1)
	cpfsgt	((WriteOPWM@tpwm))&0ffh
	goto	u19651
	goto	u19650
u19651:
	goto	l14242
u19650:
	
l14240:; BSR set to: 1

	movlw	low(0F0h)
	movwf	((WriteOPWM@tpwm))&0ffh
	line	113
	
l14242:; BSR set to: 1

;pwm.c: 113: if(PWM._ENOSC)
	
	btfss	((c:_PWM)),c,1	;volatile
	goto	u19661
	goto	u19660
u19661:
	goto	l14266
u19660:
	line	116
	
l14244:; BSR set to: 1

;pwm.c: 114: {
;pwm.c: 116: if(tpwm>=PWM.MGMOD) aosc=PWM.MINOSC;
	movf	(0+((c:_PWM)+06h)),c,w	;volatile
	subwf	((WriteOPWM@tpwm))&0ffh,w
	btfss	status,0
	goto	u19671
	goto	u19670
u19671:
	goto	l14248
u19670:
	
l14246:; BSR set to: 1

	movff	0+((c:_PWM)+08h),(WriteOPWM@aosc)	;volatile
	goto	l1457
	line	119
	
l14248:; BSR set to: 1

;pwm.c: 117: else
;pwm.c: 118: {
;pwm.c: 119: tmp=(tpwm-PWM.MDMOD)*100;
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	subwf	((WriteOPWM@tpwm))&0ffh,w
	
	movwf	((?___wmul))&0ffh
	clrf	1+((?___wmul))&0ffh
	btfss	status,0
	decf	1+((?___wmul))&0ffh
	
	movlw	high(064h)
	movwf	(1+(?___wmul+02h))&0ffh
	movlw	low(064h)
	movwf	(0+(?___wmul+02h))&0ffh
	call	___wmul	;wreg free
	movff	0+?___wmul,(WriteOPWM@tmp)
	movff	1+?___wmul,(WriteOPWM@tmp+1)
	line	120
	
l14250:; BSR set to: 1

;pwm.c: 120: tmp/=(PWM.MGMOD-PWM.MDMOD);
	movff	(WriteOPWM@tmp),(?___lwdiv)
	movff	(WriteOPWM@tmp+1),(?___lwdiv+1)
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	subwf	(0+((c:_PWM)+06h)),c,w	;volatile
	
	movwf	(0+(?___lwdiv+02h))&0ffh
	clrf	1+(0+(?___lwdiv+02h))&0ffh
	btfss	status,0
	decf	1+(0+(?___lwdiv+02h))&0ffh
	
	call	___lwdiv	;wreg free
	movff	0+?___lwdiv,(WriteOPWM@tmp)
	movff	1+?___lwdiv,(WriteOPWM@tmp+1)
	line	121
	
l14252:; BSR set to: 1

;pwm.c: 121: tmp*=(PWM.MAXOSC-PWM.MINOSC);
	movff	(WriteOPWM@tmp),(?___wmul)
	movff	(WriteOPWM@tmp+1),(?___wmul+1)
	movf	(0+((c:_PWM)+08h)),c,w	;volatile
	subwf	(0+((c:_PWM)+07h)),c,w	;volatile
	
	movwf	(0+(?___wmul+02h))&0ffh
	clrf	1+(0+(?___wmul+02h))&0ffh
	btfss	status,0
	decf	1+(0+(?___wmul+02h))&0ffh
	
	call	___wmul	;wreg free
	movff	0+?___wmul,(WriteOPWM@tmp)
	movff	1+?___wmul,(WriteOPWM@tmp+1)
	line	122
;pwm.c: 122: tmp/=100;
	movff	(WriteOPWM@tmp),(?___lwdiv)
	movff	(WriteOPWM@tmp+1),(?___lwdiv+1)
	movlw	high(064h)
	movwf	(1+(?___lwdiv+02h))&0ffh
	movlw	low(064h)
	movwf	(0+(?___lwdiv+02h))&0ffh
	call	___lwdiv	;wreg free
	movff	0+?___lwdiv,(WriteOPWM@tmp)
	movff	1+?___lwdiv,(WriteOPWM@tmp+1)
	line	123
	
l14254:; BSR set to: 1

;pwm.c: 123: if(tmp>PWM.MAXOSC) aosc=PWM.MINOSC;
	movf	(0+((c:_PWM)+07h)),c,w	;volatile
	movwf	(??_WriteOPWM+0+0)&0ffh
	clrf	(??_WriteOPWM+0+0+1)&0ffh

	movf	((WriteOPWM@tmp))&0ffh,w
	subwf	(??_WriteOPWM+0+0)&0ffh,w
	movf	((WriteOPWM@tmp+1))&0ffh,w
	subwfb	(??_WriteOPWM+0+1)&0ffh,w
	btfsc	status,0
	goto	u19681
	goto	u19680
u19681:
	goto	l14258
u19680:
	goto	l14246
	line	124
	
l14258:; BSR set to: 1

;pwm.c: 124: else aosc=PWM.MAXOSC-(unsigned char)tmp;
	movf	((WriteOPWM@tmp))&0ffh,w
	subwf	(0+((c:_PWM)+07h)),c,w	;volatile
	movwf	((WriteOPWM@aosc))&0ffh
	line	125
	
l1457:; BSR set to: 1

	line	127
;pwm.c: 125: }
;pwm.c: 127: if(aosc>(PWM.MAG_MOD-tpwm)) aosc=PWM.MAG_MOD-tpwm;
	movf	((WriteOPWM@aosc))&0ffh,w
	movwf	(??_WriteOPWM+0+0)&0ffh
	clrf	(??_WriteOPWM+0+0+1)&0ffh

	movf	((WriteOPWM@tpwm))&0ffh,w
	movff	0+((c:_PWM)+0Ah),??_WriteOPWM+2+0	;volatile
	clrf	(??_WriteOPWM+2+0+1)&0ffh
	subwf	(??_WriteOPWM+2+0)&0ffh
	movlw	0
	subwfb	(??_WriteOPWM+2+1)&0ffh
	movf	(??_WriteOPWM+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_WriteOPWM+4+0)&0ffh
	movf	(??_WriteOPWM+0+0)&0ffh,w
	subwf	(??_WriteOPWM+2+0)&0ffh,w
	movf	(??_WriteOPWM+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_WriteOPWM+4+0)&0ffh,w
	btfsc	status,0
	goto	u19691
	goto	u19690
u19691:
	goto	l14262
u19690:
	
l14260:; BSR set to: 1

	movf	((WriteOPWM@tpwm))&0ffh,w
	subwf	(0+((c:_PWM)+0Ah)),c,w	;volatile
	movwf	((WriteOPWM@aosc))&0ffh
	goto	l14266
	line	129
	
l14262:; BSR set to: 1

;pwm.c: 128: else
;pwm.c: 129: if(aosc>(tpwm-PWM.MAD_MOD)) aosc=tpwm-PWM.MAD_MOD;
	movf	((WriteOPWM@aosc))&0ffh,w
	movwf	(??_WriteOPWM+0+0)&0ffh
	clrf	(??_WriteOPWM+0+0+1)&0ffh

	movf	(0+((c:_PWM)+09h)),c,w	;volatile
	movff	(WriteOPWM@tpwm),??_WriteOPWM+2+0
	clrf	(??_WriteOPWM+2+0+1)&0ffh
	subwf	(??_WriteOPWM+2+0)&0ffh
	movlw	0
	subwfb	(??_WriteOPWM+2+1)&0ffh
	movf	(??_WriteOPWM+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_WriteOPWM+4+0)&0ffh
	movf	(??_WriteOPWM+0+0)&0ffh,w
	subwf	(??_WriteOPWM+2+0)&0ffh,w
	movf	(??_WriteOPWM+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_WriteOPWM+4+0)&0ffh,w
	btfsc	status,0
	goto	u19701
	goto	u19700
u19701:
	goto	l14266
u19700:
	
l14264:; BSR set to: 1

	movf	(0+((c:_PWM)+09h)),c,w	;volatile
	subwf	((WriteOPWM@tpwm))&0ffh,w
	movwf	((WriteOPWM@aosc))&0ffh
	line	133
	
l14266:; BSR set to: 1

;pwm.c: 130: }
;pwm.c: 133: PWM._ENPWM=0;
	bcf	((c:_PWM)),c,0	;volatile
	line	134
	
l14268:; BSR set to: 1

;pwm.c: 134: PWM.BufPWM=tpwm;
	movff	(WriteOPWM@tpwm),0+((c:_PWM)+01h)	;volatile
	line	135
	
l14270:; BSR set to: 1

;pwm.c: 135: if(PWM._ENOSC) PWM.BufOSC=aosc;
	
	btfss	((c:_PWM)),c,1	;volatile
	goto	u19711
	goto	u19710
u19711:
	goto	l1463
u19710:
	
l14272:; BSR set to: 1

	movff	(WriteOPWM@aosc),0+((c:_PWM)+02h)	;volatile
	goto	l1464
	line	136
	
l1463:; BSR set to: 1

;pwm.c: 136: else PWM.BufOSC=0;
	clrf	(0+((c:_PWM)+02h)),c	;volatile
	
l1464:; BSR set to: 1

	line	137
;pwm.c: 137: PWM._ENPWM=1;
	bsf	((c:_PWM)),c,0	;volatile
	line	138
	
l1465:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_WriteOPWM
	__end_of_WriteOPWM:
	signat	_WriteOPWM,4216
	global	_ModPrzCW4

;; *************** function _ModPrzCW4 *****************
;; Defined at:
;;		line 891 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  r               2   20[BANK1 ] int 
;;  q               2    0        int 
;;  p               1   22[BANK1 ] unsigned char 
;;  maxmod          1   19[BANK1 ] unsigned char 
;;  mdmod           1    0        unsigned char 
;;  m               1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        9 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tnizsza
;;		_Twyzsza
;;		_Tmaleje
;;		___awdiv
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text4,class=CODE,space=0,reloc=2
global __ptext4
__ptext4:
psect	text4
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	891
	global	__size_of_ModPrzCW4
	__size_of_ModPrzCW4	equ	__end_of_ModPrzCW4-_ModPrzCW4
	
_ModPrzCW4:; BSR set to: 1

;incstack = 0
	opt	stack 24
;incstack = 0
	line	957
	
l14594:
;rgl.c: 892: unsigned char p,m,maxmod,mdmod;
;rgl.c: 893: signed int r,q;
;rgl.c: 894: static unsigned char timer1;
;rgl.c: 957: if(Tnizsza(10))
	movlw	(0Ah)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u20391
	goto	u20390
u20391:
	goto	l1893
u20390:
	line	959
	
l14596:; BSR set to: 0

;rgl.c: 958: {
;rgl.c: 959: if(PWM.MMAXCW<PWM.MGMOD) maxmod=PWM.MMAXCW;
	movf	(0+((c:_PWM)+06h)),c,w	;volatile
	cpfslt	(0+((c:_PWM)+01Ah)),c	;volatile
	goto	u20401
	goto	u20400
u20401:
	goto	l1894
u20400:
	
l14598:; BSR set to: 0

	movff	0+((c:_PWM)+01Ah),(ModPrzCW4@maxmod)	;volatile
	goto	l14600
	line	960
	
l1894:; BSR set to: 0

;rgl.c: 960: else maxmod=PWM.MGMOD;
	movff	0+((c:_PWM)+06h),(ModPrzCW4@maxmod)	;volatile
	line	961
	
l14600:; BSR set to: 0

;rgl.c: 961: if(rgl.xmod<=maxmod) p=rgl.xmod;
	movf	(0+((c:_rgl)+08h)),c,w
	movlb	1	; () banked
	subwf	((ModPrzCW4@maxmod))&0ffh,w
	btfss	status,0
	goto	u20411
	goto	u20410
u20411:
	goto	l1896
u20410:
	
l14602:; BSR set to: 1

	movff	0+((c:_rgl)+08h),(ModPrzCW4@p)
	goto	l14604
	line	962
	
l1896:; BSR set to: 1

	line	964
;rgl.c: 962: else
;rgl.c: 963: {
;rgl.c: 964: p=maxmod;
	movff	(ModPrzCW4@maxmod),(ModPrzCW4@p)
	line	965
;rgl.c: 965: rgl.xmod=maxmod;
	movff	(ModPrzCW4@maxmod),0+((c:_rgl)+08h)
	line	967
	
l14604:; BSR set to: 1

;rgl.c: 966: }
;rgl.c: 967: if((DtCW.ddDCW>6)&&(tmr>1))
	movf	(0+((c:_DtCW)+09h)),c,w
	xorlw	80h
	addlw	-((07h)^80h)
	btfss	status,0
	goto	u20421
	goto	u20420
u20421:
	goto	l14616
u20420:
	
l14606:; BSR set to: 1

	movlw	(02h-1)
	cpfsgt	((c:_tmr)),c
	goto	u20431
	goto	u20430
u20431:
	goto	l14616
u20430:
	line	969
	
l14608:; BSR set to: 1

;rgl.c: 968: {
;rgl.c: 969: tmr=0;
	clrf	((c:_tmr)),c
	line	970
	
l14610:; BSR set to: 1

;rgl.c: 970: r=p-PWM.MDMOD;
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	subwf	((ModPrzCW4@p))&0ffh,w
	
	movwf	((ModPrzCW4@r))&0ffh
	clrf	1+((ModPrzCW4@r))&0ffh
	btfss	status,0
	decf	1+((ModPrzCW4@r))&0ffh
	
	line	971
	
l14612:; BSR set to: 1

;rgl.c: 971: if((p-(r/4))>PWM.MDMOD) p-=r/4;
	movff	(ModPrzCW4@r),(?___awdiv)
	movff	(ModPrzCW4@r+1),(?___awdiv+1)
	movlw	high(04h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(04h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	subwf	((ModPrzCW4@p))&0ffh,w
	movwf	(??_ModPrzCW4+0+0)&0ffh
	movf	(1+?___awdiv)&0ffh,w
	btfss	status,0
	incf	(1+?___awdiv)&0ffh,w
	clrf	1+(??_ModPrzCW4+0+0)&0ffh
	subwf	1+(??_ModPrzCW4+0+0)&0ffh
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	movwf	(??_ModPrzCW4+2+0)&0ffh
	clrf	(??_ModPrzCW4+2+0+1)&0ffh

	movf	(??_ModPrzCW4+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPrzCW4+4+0)&0ffh
	movf	(??_ModPrzCW4+0+0)&0ffh,w
	subwf	(??_ModPrzCW4+2+0)&0ffh,w
	movf	(??_ModPrzCW4+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPrzCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u20441
	goto	u20440
u20441:
	goto	l1899
u20440:
	
l14614:; BSR set to: 1

	movff	(ModPrzCW4@r),(?___awdiv)
	movff	(ModPrzCW4@r+1),(?___awdiv+1)
	movlw	high(04h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(04h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	subwf	((ModPrzCW4@p))&0ffh
	goto	l1900
	line	972
	
l1899:; BSR set to: 1

;rgl.c: 972: else p=PWM.MDMOD;
	movff	0+((c:_PWM)+05h),(ModPrzCW4@p)	;volatile
	
l1900:; BSR set to: 1

	line	973
;rgl.c: 973: rgl.xmod=p;
	movff	(ModPrzCW4@p),0+((c:_rgl)+08h)
	line	974
;rgl.c: 974: }
	goto	l1893
	line	976
	
l14616:; BSR set to: 1

;rgl.c: 975: else
;rgl.c: 976: if((DtCW.ddDCW>4)&&(tmr>1))
	movf	(0+((c:_DtCW)+09h)),c,w
	xorlw	80h
	addlw	-((05h)^80h)
	btfss	status,0
	goto	u20451
	goto	u20450
u20451:
	goto	l14628
u20450:
	
l14618:; BSR set to: 1

	movlw	(02h-1)
	cpfsgt	((c:_tmr)),c
	goto	u20461
	goto	u20460
u20461:
	goto	l14628
u20460:
	line	978
	
l14620:; BSR set to: 1

;rgl.c: 977: {
;rgl.c: 978: tmr=0;
	clrf	((c:_tmr)),c
	line	979
	
l14622:; BSR set to: 1

;rgl.c: 979: r=p-PWM.MDMOD;
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	subwf	((ModPrzCW4@p))&0ffh,w
	
	movwf	((ModPrzCW4@r))&0ffh
	clrf	1+((ModPrzCW4@r))&0ffh
	btfss	status,0
	decf	1+((ModPrzCW4@r))&0ffh
	
	line	980
	
l14624:; BSR set to: 1

;rgl.c: 980: if((p-(r/8))>PWM.MDMOD) p-=r/8;
	movff	(ModPrzCW4@r),(?___awdiv)
	movff	(ModPrzCW4@r+1),(?___awdiv+1)
	movlw	high(08h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(08h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	subwf	((ModPrzCW4@p))&0ffh,w
	movwf	(??_ModPrzCW4+0+0)&0ffh
	movf	(1+?___awdiv)&0ffh,w
	btfss	status,0
	incf	(1+?___awdiv)&0ffh,w
	clrf	1+(??_ModPrzCW4+0+0)&0ffh
	subwf	1+(??_ModPrzCW4+0+0)&0ffh
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	movwf	(??_ModPrzCW4+2+0)&0ffh
	clrf	(??_ModPrzCW4+2+0+1)&0ffh

	movf	(??_ModPrzCW4+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPrzCW4+4+0)&0ffh
	movf	(??_ModPrzCW4+0+0)&0ffh,w
	subwf	(??_ModPrzCW4+2+0)&0ffh,w
	movf	(??_ModPrzCW4+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPrzCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u20471
	goto	u20470
u20471:
	goto	l1899
u20470:
	
l14626:; BSR set to: 1

	movff	(ModPrzCW4@r),(?___awdiv)
	movff	(ModPrzCW4@r+1),(?___awdiv+1)
	movlw	high(08h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(08h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	subwf	((ModPrzCW4@p))&0ffh
	goto	l1900
	line	985
	
l14628:; BSR set to: 1

;rgl.c: 984: else
;rgl.c: 985: if((DtCW.ddDCW>3)&&(tmr>0))
	movf	(0+((c:_DtCW)+09h)),c,w
	xorlw	80h
	addlw	-((04h)^80h)
	btfss	status,0
	goto	u20481
	goto	u20480
u20481:
	goto	l14640
u20480:
	
l14630:; BSR set to: 1

	movf	((c:_tmr)),c,w
	btfsc	status,2
	goto	u20491
	goto	u20490
u20491:
	goto	l14640
u20490:
	line	987
	
l14632:; BSR set to: 1

;rgl.c: 986: {
;rgl.c: 987: tmr=0;
	clrf	((c:_tmr)),c
	line	988
	
l14634:; BSR set to: 1

;rgl.c: 988: r=p-PWM.MDMOD;
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	subwf	((ModPrzCW4@p))&0ffh,w
	
	movwf	((ModPrzCW4@r))&0ffh
	clrf	1+((ModPrzCW4@r))&0ffh
	btfss	status,0
	decf	1+((ModPrzCW4@r))&0ffh
	
	line	989
	
l14636:; BSR set to: 1

;rgl.c: 989: if((p-(r/16))>PWM.MDMOD) p-=r/16;
	movff	(ModPrzCW4@r),(?___awdiv)
	movff	(ModPrzCW4@r+1),(?___awdiv+1)
	movlw	high(010h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(010h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	subwf	((ModPrzCW4@p))&0ffh,w
	movwf	(??_ModPrzCW4+0+0)&0ffh
	movf	(1+?___awdiv)&0ffh,w
	btfss	status,0
	incf	(1+?___awdiv)&0ffh,w
	clrf	1+(??_ModPrzCW4+0+0)&0ffh
	subwf	1+(??_ModPrzCW4+0+0)&0ffh
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	movwf	(??_ModPrzCW4+2+0)&0ffh
	clrf	(??_ModPrzCW4+2+0+1)&0ffh

	movf	(??_ModPrzCW4+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPrzCW4+4+0)&0ffh
	movf	(??_ModPrzCW4+0+0)&0ffh,w
	subwf	(??_ModPrzCW4+2+0)&0ffh,w
	movf	(??_ModPrzCW4+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPrzCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u20501
	goto	u20500
u20501:
	goto	l1899
u20500:
	
l14638:; BSR set to: 1

	movff	(ModPrzCW4@r),(?___awdiv)
	movff	(ModPrzCW4@r+1),(?___awdiv+1)
	movlw	high(010h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(010h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	subwf	((ModPrzCW4@p))&0ffh
	goto	l1900
	line	994
	
l14640:; BSR set to: 1

;rgl.c: 993: else
;rgl.c: 994: if((DtCW.ddDCW<=0)&&(tmr2>1))
	movf	(0+((c:_DtCW)+09h)),c,w
	xorlw	80h
	addlw	-((01h)^80h)
	btfsc	status,0
	goto	u20511
	goto	u20510
u20511:
	goto	l1905
u20510:
	
l14642:; BSR set to: 1

	movlw	(02h-1)
	movlb	0	; () banked
	cpfsgt	((_tmr2))&0ffh
	goto	u20521
	goto	u20520
u20521:
	goto	l1905
u20520:
	line	996
	
l14644:; BSR set to: 0

;rgl.c: 995: {
;rgl.c: 996: tmr2=0;
	clrf	((_tmr2))&0ffh
	line	997
	
l14646:; BSR set to: 0

;rgl.c: 997: r=p-PWM.MDMOD;
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	movlb	1	; () banked
	subwf	((ModPrzCW4@p))&0ffh,w
	
	movwf	((ModPrzCW4@r))&0ffh
	clrf	1+((ModPrzCW4@r))&0ffh
	btfss	status,0
	decf	1+((ModPrzCW4@r))&0ffh
	
	line	998
	
l14648:; BSR set to: 1

;rgl.c: 998: if((p+(r/16))<maxmod) p+=r/16;
	movf	((ModPrzCW4@maxmod))&0ffh,w
	movwf	(??_ModPrzCW4+0+0)&0ffh
	clrf	(??_ModPrzCW4+0+0+1)&0ffh

	movff	(ModPrzCW4@r),(?___awdiv)
	movff	(ModPrzCW4@r+1),(?___awdiv+1)
	movlw	high(010h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(010h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	((ModPrzCW4@p))&0ffh,w
	addwf	(0+?___awdiv)&0ffh,w
	movwf	(??_ModPrzCW4+2+0)&0ffh
	movlw	0
	addwfc	(1+?___awdiv)&0ffh,w
	movwf	1+(??_ModPrzCW4+2+0)&0ffh
	movf	(??_ModPrzCW4+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPrzCW4+4+0)&0ffh
	movf	(??_ModPrzCW4+0+0)&0ffh,w
	subwf	(??_ModPrzCW4+2+0)&0ffh,w
	movf	(??_ModPrzCW4+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPrzCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u20531
	goto	u20530
u20531:
	goto	l1911
u20530:
	
l14650:; BSR set to: 1

	movff	(ModPrzCW4@r),(?___awdiv)
	movff	(ModPrzCW4@r+1),(?___awdiv+1)
	movlw	high(010h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(010h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	addwf	((ModPrzCW4@p))&0ffh
	goto	l1900
	line	999
	
l1911:; BSR set to: 1

;rgl.c: 999: else p=maxmod;
	movff	(ModPrzCW4@maxmod),(ModPrzCW4@p)
	goto	l1900
	line	1042
	
l1905:
	
l1893:
	line	1045
;rgl.c: 1001: }
;rgl.c: 1042: }
;rgl.c: 1045: if(!rgl.nmod)
	
	btfsc	((c:_rgl)),c,5
	goto	u20541
	goto	u20540
u20541:
	goto	l14662
u20540:
	line	1047
	
l14652:
;rgl.c: 1046: {
;rgl.c: 1047: if(rgl.fz)
	
	btfss	((c:_rgl)),c,2
	goto	u20551
	goto	u20550
u20551:
	goto	l1917
u20550:
	line	1049
	
l14654:
;rgl.c: 1048: {
;rgl.c: 1049: if(!Tmaleje(0))
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfsc	status,0
	goto	u20561
	goto	u20560
u20561:
	goto	l1917
u20560:
	line	1051
	
l14656:; BSR set to: 1

;rgl.c: 1050: {
;rgl.c: 1051: if(Twyzsza(9))
	movlw	(09h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u20571
	goto	u20570
u20571:
	goto	l1917
u20570:
	line	1053
	
l14658:; BSR set to: 1

;rgl.c: 1052: {
;rgl.c: 1053: rgl.nmod=1;
	bsf	((c:_rgl)),c,5
	line	1054
;rgl.c: 1054: return;
	goto	l1917
	line	1064
	
l14662:
;rgl.c: 1062: else
;rgl.c: 1063: {
;rgl.c: 1064: if(Tmaleje(0)&&!Twyzsza(9))
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfss	status,0
	goto	u20581
	goto	u20580
u20581:
	goto	l1917
u20580:
	
l14664:; BSR set to: 1

	movlw	(09h)&0ffh
	
	call	_Twyzsza
	btfsc	status,0
	goto	u20591
	goto	u20590
u20591:
	goto	l1917
u20590:
	line	1065
	
l14666:; BSR set to: 1

;rgl.c: 1065: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	1068
	
l1917:
	return
	opt stack 0
GLOBAL	__end_of_ModPrzCW4
	__end_of_ModPrzCW4:
	signat	_ModPrzCW4,88
	global	_ModPruCW4

;; *************** function _ModPruCW4 *****************
;; Defined at:
;;		line 718 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  k               1    9[BANK1 ] char 
;;  tmp             1    8[BANK1 ] unsigned char 
;;  ada             1    0        char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tstoi
;;		_Tnizsza
;;		_Twyzsza
;;		_Trosnie
;;		_Tmaleje
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text5,class=CODE,space=0,reloc=2
global __ptext5
__ptext5:
psect	text5
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	718
	global	__size_of_ModPruCW4
	__size_of_ModPruCW4	equ	__end_of_ModPruCW4-_ModPruCW4
	
_ModPruCW4:
;incstack = 0
	opt	stack 24
;incstack = 0
	line	722
	
l14428:
;rgl.c: 719: static unsigned char l,m,o,p,q,r,s;
;rgl.c: 720: unsigned char tmp;
;rgl.c: 721: signed char ada,k;
;rgl.c: 722: if(!rgl.fz)
	
	btfsc	((c:_rgl)),c,2
	goto	u20001
	goto	u20000
u20001:
	goto	l1823
u20000:
	line	724
	
l14430:
;rgl.c: 723: {
;rgl.c: 724: l=0;
	movlb	0	; () banked
	clrf	((ModPruCW4@l))&0ffh
	line	725
;rgl.c: 725: m=0;
	clrf	((c:ModPruCW4@m)),c
	line	726
;rgl.c: 726: o=0;
	clrf	((ModPruCW4@o))&0ffh
	line	727
;rgl.c: 727: p=0;
	clrf	((ModPruCW4@p))&0ffh
	line	728
	
l14432:; BSR set to: 0

;rgl.c: 728: if(q<255) q++;
	incf	((ModPruCW4@q))&0ffh,w

	btfsc	status,2
	goto	u20011
	goto	u20010
u20011:
	goto	l14436
u20010:
	
l14434:; BSR set to: 0

	incf	((ModPruCW4@q))&0ffh
	line	729
	
l14436:; BSR set to: 0

;rgl.c: 729: if(s<255) s++;
	incf	((c:ModPruCW4@s)),c,w

	btfsc	status,2
	goto	u20021
	goto	u20020
u20021:
	goto	l14440
u20020:
	
l14438:; BSR set to: 0

	incf	((c:ModPruCW4@s)),c
	line	730
	
l14440:; BSR set to: 0

;rgl.c: 730: if(DtCW._newPCW) s=0;
	
	btfss	(0+((c:_DtCW)+01h)),c,0
	goto	u20031
	goto	u20030
u20031:
	goto	l14444
u20030:
	
l14442:; BSR set to: 0

	clrf	((c:ModPruCW4@s)),c
	line	731
	
l14444:; BSR set to: 0

;rgl.c: 731: if(Tnizsza(0))
	movlw	(0)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u20041
	goto	u20040
u20041:
	goto	l1835
u20040:
	line	733
	
l14446:; BSR set to: 0

;rgl.c: 732: {
;rgl.c: 733: if(!Tnizsza(10))
	movlw	(0Ah)&0ffh
	
	call	_Tnizsza
	btfsc	status,0
	goto	u20051
	goto	u20050
u20051:
	goto	l1835
u20050:
	line	735
	
l14448:; BSR set to: 0

;rgl.c: 734: {
;rgl.c: 735: k=0;
	movlb	1	; () banked
	clrf	((ModPruCW4@k))&0ffh
	line	736
	
l14450:; BSR set to: 1

;rgl.c: 736: if(Tstoi()&&s>2)
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u20061
	goto	u20060
u20061:
	goto	l14462
u20060:
	
l14452:; BSR set to: 1

	movlw	(03h-1)
	cpfsgt	((c:ModPruCW4@s)),c
	goto	u20071
	goto	u20070
u20071:
	goto	l14462
u20070:
	line	738
	
l14454:; BSR set to: 1

;rgl.c: 737: {
;rgl.c: 738: s=0;
	clrf	((c:ModPruCW4@s)),c
	line	739
	
l14456:; BSR set to: 1

;rgl.c: 739: if(Tnizsza(3)) k=15;
	movlw	(03h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u20081
	goto	u20080
u20081:
	goto	l14460
u20080:
	
l14458:; BSR set to: 0

	movlw	low(0Fh)
	movlb	1	; () banked
	movwf	((ModPruCW4@k))&0ffh
	goto	l14462
	line	740
	
l14460:; BSR set to: 0

;rgl.c: 740: else k=10;
	movlw	low(0Ah)
	movlb	1	; () banked
	movwf	((ModPruCW4@k))&0ffh
	line	742
	
l14462:; BSR set to: 1

;rgl.c: 741: }
;rgl.c: 742: if(Trosnie(1)&&s>=1)
	movlw	(01h)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u20091
	goto	u20090
u20091:
	goto	l14474
u20090:
	
l14464:; BSR set to: 0

	movf	((c:ModPruCW4@s)),c,w
	btfsc	status,2
	goto	u20101
	goto	u20100
u20101:
	goto	l14474
u20100:
	line	744
	
l14466:; BSR set to: 0

;rgl.c: 743: {
;rgl.c: 744: s=0;
	clrf	((c:ModPruCW4@s)),c
	line	745
	
l14468:; BSR set to: 0

;rgl.c: 745: k=15;
	movlw	low(0Fh)
	movlb	1	; () banked
	movwf	((ModPruCW4@k))&0ffh
	line	746
	
l14470:; BSR set to: 1

;rgl.c: 746: if(Trosnie(2)) k=8;
	movlw	(02h)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u20111
	goto	u20110
u20111:
	goto	l14474
u20110:
	
l14472:; BSR set to: 0

	movlw	low(08h)
	movlb	1	; () banked
	movwf	((ModPruCW4@k))&0ffh
	line	748
	
l14474:
;rgl.c: 747: }
;rgl.c: 748: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	749
;rgl.c: 749: if(PWM.BufPWM>rgl.xmod) return;
	movf	(0+((c:_PWM)+01h)),c,w	;volatile
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u20121
	goto	u20120
u20121:
	goto	l14478
u20120:
	goto	l1835
	line	750
	
l14478:
;rgl.c: 750: tmp=rgl.xmod-PWM.BufPWM;
	movf	(0+((c:_PWM)+01h)),c,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	movlb	1	; () banked
	movwf	((ModPruCW4@tmp))&0ffh
	line	751
;rgl.c: 751: if(k>tmp) k=tmp;
	movf	((ModPruCW4@tmp))&0ffh,w
	bsf	status,0
	bsf	status,2
	btfss	((ModPruCW4@k))&0ffh,7
	subwf	((ModPruCW4@k))&0ffh,w
	btfss	status,0
	bsf	status,2
	btfsc	status,2
	goto	u20131
	goto	u20130
u20131:
	goto	l14482
u20130:
	
l14480:; BSR set to: 1

	movff	(ModPruCW4@tmp),(ModPruCW4@k)
	line	752
	
l14482:; BSR set to: 1

;rgl.c: 752: if(PWM.MMAXCW>PWM.MGMOD)
	movf	(0+((c:_PWM)+01Ah)),c,w	;volatile
	cpfslt	(0+((c:_PWM)+06h)),c	;volatile
	goto	u20141
	goto	u20140
u20141:
	goto	l14490
u20140:
	line	754
	
l14484:; BSR set to: 1

;rgl.c: 753: {
;rgl.c: 754: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW4@k))&0ffh,w
	movwf	(??_ModPruCW4+0+0)&0ffh
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW4@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW4+0+0)&0ffh
	
	movf	(0+((c:_PWM)+06h)),c,w	;volatile
	movwf	(??_ModPruCW4+2+0)&0ffh
	clrf	(??_ModPruCW4+2+0+1)&0ffh

	movf	(??_ModPruCW4+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPruCW4+4+0)&0ffh
	movf	(??_ModPruCW4+0+0)&0ffh,w
	subwf	(??_ModPruCW4+2+0)&0ffh,w
	movf	(??_ModPruCW4+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPruCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u20151
	goto	u20150
u20151:
	goto	l14488
u20150:
	
l14486:; BSR set to: 1

	movff	0+((c:_PWM)+06h),0+((c:_rgl)+07h)	;volatile
	goto	l1835
	line	755
	
l14488:; BSR set to: 1

;rgl.c: 755: else rgl.srp+=k;
	movf	((ModPruCW4@k))&0ffh,w
	addwf	(0+((c:_rgl)+07h)),c
	goto	l1835
	line	759
	
l14490:; BSR set to: 1

;rgl.c: 757: else
;rgl.c: 758: {
;rgl.c: 759: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW4@k))&0ffh,w
	movwf	(??_ModPruCW4+0+0)&0ffh
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW4@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW4+0+0)&0ffh
	
	movf	(0+((c:_PWM)+01Ah)),c,w	;volatile
	movwf	(??_ModPruCW4+2+0)&0ffh
	clrf	(??_ModPruCW4+2+0+1)&0ffh

	movf	(??_ModPruCW4+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPruCW4+4+0)&0ffh
	movf	(??_ModPruCW4+0+0)&0ffh,w
	subwf	(??_ModPruCW4+2+0)&0ffh,w
	movf	(??_ModPruCW4+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPruCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u20161
	goto	u20160
u20161:
	goto	l14488
u20160:
	
l14492:; BSR set to: 1

	movff	0+((c:_PWM)+01Ah),0+((c:_rgl)+07h)	;volatile
	goto	l1835
	line	769
;rgl.c: 769: else
;rgl.c: 770: {
;rgl.c: 771: x=0;
	
l1823:
	line	772
;rgl.c: 773: r=0;
	movlb	0	; () banked
	clrf	((ModPruCW4@q))&0ffh
	line	774
;rgl.c: 774: s=0;
	clrf	((c:ModPruCW4@s)),c
	line	775
	
l14500:; BSR set to: 0

;rgl.c: 775: if(m<255) m++;
	incf	((c:ModPruCW4@m)),c,w

	btfsc	status,2
	goto	u20171
	goto	u20170
u20171:
	goto	l14504
u20170:
	
l14502:; BSR set to: 0

	incf	((c:ModPruCW4@m)),c
	line	776
	
l14504:; BSR set to: 0

;rgl.c: 776: if(p<255) p++;
	incf	((ModPruCW4@p))&0ffh,w

	btfsc	status,2
	goto	u20181
	goto	u20180
u20181:
	goto	l14508
u20180:
	
l14506:; BSR set to: 0

	incf	((ModPruCW4@p))&0ffh
	line	777
	
l14508:; BSR set to: 0

;rgl.c: 777: if(o<255) o++;
	incf	((ModPruCW4@o))&0ffh,w

	btfsc	status,2
	goto	u20191
	goto	u20190
u20191:
	goto	l14512
u20190:
	
l14510:; BSR set to: 0

	incf	((ModPruCW4@o))&0ffh
	line	778
	
l14512:; BSR set to: 0

;rgl.c: 778: if(DtCW.DAD_CW>DtCW.AC_CW)
	movf	(0+((c:_DtCW)+0Eh)),c,w
	cpfslt	(0+((c:_DtCW)+0Ch)),c
	goto	u20201
	goto	u20200
u20201:
	goto	l1849
u20200:
	line	780
	
l14514:; BSR set to: 0

;rgl.c: 779: {
;rgl.c: 780: k=0;
	movlb	1	; () banked
	clrf	((ModPruCW4@k))&0ffh
	line	781
	
l14516:; BSR set to: 1

;rgl.c: 781: if(Trosnie(0)&&m>=2)
	movlw	(0)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u20211
	goto	u20210
u20211:
	goto	l14524
u20210:
	
l14518:; BSR set to: 0

	movlw	(02h-1)
	cpfsgt	((c:ModPruCW4@m)),c
	goto	u20221
	goto	u20220
u20221:
	goto	l14524
u20220:
	line	783
	
l14520:; BSR set to: 0

;rgl.c: 782: {
;rgl.c: 783: p=0;
	clrf	((ModPruCW4@p))&0ffh
	line	784
;rgl.c: 784: o=0;
	clrf	((ModPruCW4@o))&0ffh
	line	785
;rgl.c: 785: l=0;
	clrf	((ModPruCW4@l))&0ffh
	line	786
;rgl.c: 786: m=0;
	clrf	((c:ModPruCW4@m)),c
	line	787
	
l14522:; BSR set to: 0

;rgl.c: 787: k=3;
	movlw	low(03h)
	movlb	1	; () banked
	movwf	((ModPruCW4@k))&0ffh
	line	788
;rgl.c: 788: }
	goto	l14540
	line	790
	
l14524:; BSR set to: 0

;rgl.c: 789: else
;rgl.c: 790: if(Twyzsza(1))
	movlw	(01h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u20231
	goto	u20230
u20231:
	goto	l14536
u20230:
	line	792
	
l14526:; BSR set to: 1

;rgl.c: 791: {
;rgl.c: 792: if(Tstoi())
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u20241
	goto	u20240
u20241:
	goto	l14540
u20240:
	line	794
	
l14528:; BSR set to: 1

;rgl.c: 793: {
;rgl.c: 794: if(l>=2)
	movlw	(02h-1)
	movlb	0	; () banked
	cpfsgt	((ModPruCW4@l))&0ffh
	goto	u20251
	goto	u20250
u20251:
	goto	l1854
u20250:
	line	796
	
l14530:; BSR set to: 0

;rgl.c: 795: {
;rgl.c: 796: k=2;
	movlw	low(02h)
	movlb	1	; () banked
	movwf	((ModPruCW4@k))&0ffh
	line	797
	
l14532:; BSR set to: 1

;rgl.c: 797: if(Twyzsza(3)) k=3;
	movlw	(03h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u20261
	goto	u20260
u20261:
	goto	l14536
u20260:
	
l14534:; BSR set to: 1

	movlw	low(03h)
	movwf	((ModPruCW4@k))&0ffh
	line	798
	
l14536:; BSR set to: 1

;rgl.c: 798: l=0;
	movlb	0	; () banked
	clrf	((ModPruCW4@l))&0ffh
	line	799
;rgl.c: 799: }
	goto	l14540
	line	800
	
l1854:; BSR set to: 0

	line	802
;rgl.c: 800: else
;rgl.c: 801: {
;rgl.c: 802: k=0;
	movlb	1	; () banked
	clrf	((ModPruCW4@k))&0ffh
	line	803
	
l14538:; BSR set to: 1

;rgl.c: 803: l++;
	movlb	0	; () banked
	incf	((ModPruCW4@l))&0ffh
	line	807
	
l14540:
;rgl.c: 807: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PWM.MDMOD;
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	movlb	1	; () banked
	movwf	(??_ModPruCW4+0+0)&0ffh
	clrf	(??_ModPruCW4+0+0+1)&0ffh

	movf	((ModPruCW4@k))&0ffh,w
	subwf	(0+((c:_rgl)+07h)),c,w
	movwf	(??_ModPruCW4+2+0)&0ffh
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfss	((ModPruCW4@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW4+2+0)&0ffh
	
	movf	(??_ModPruCW4+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPruCW4+4+0)&0ffh
	movf	(??_ModPruCW4+0+0)&0ffh,w
	subwf	(??_ModPruCW4+2+0)&0ffh,w
	movf	(??_ModPruCW4+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPruCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u20271
	goto	u20270
u20271:
	goto	l14544
u20270:
	
l14542:; BSR set to: 1

	movff	0+((c:_PWM)+05h),0+((c:_rgl)+07h)	;volatile
	goto	l14546
	line	808
	
l14544:; BSR set to: 1

	movf	((ModPruCW4@k))&0ffh,w
	subwf	(0+((c:_rgl)+07h)),c
	line	809
	
l14546:; BSR set to: 1

;rgl.c: 809: if(rgl.srp>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+((c:_PWM)+01Ah)),c	;volatile
	goto	u20281
	goto	u20280
u20281:
	goto	l14550
u20280:
	
l14548:; BSR set to: 1

	movff	0+((c:_PWM)+01Ah),0+((c:_rgl)+07h)	;volatile
	line	810
	
l14550:; BSR set to: 1

;rgl.c: 810: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u20291
	goto	u20290
u20291:
	goto	l1835
u20290:
	
l14552:; BSR set to: 1

	movff	0+((c:_rgl)+07h),0+((c:_rgl)+08h)
	goto	l1835
	line	814
	
l1849:; BSR set to: 0

	line	816
;rgl.c: 814: else
;rgl.c: 815: {
;rgl.c: 816: k=0;
	movlb	1	; () banked
	clrf	((ModPruCW4@k))&0ffh
	line	817
	
l14556:; BSR set to: 1

;rgl.c: 817: if(Tmaleje(0)&&m>=2)
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfss	status,0
	goto	u20301
	goto	u20300
u20301:
	goto	l14564
u20300:
	
l14558:; BSR set to: 1

	movlw	(02h-1)
	cpfsgt	((c:ModPruCW4@m)),c
	goto	u20311
	goto	u20310
u20311:
	goto	l14564
u20310:
	line	819
	
l14560:; BSR set to: 1

;rgl.c: 818: {
;rgl.c: 819: p=0;
	movlb	0	; () banked
	clrf	((ModPruCW4@p))&0ffh
	line	820
;rgl.c: 820: o=0;
	clrf	((ModPruCW4@o))&0ffh
	line	821
;rgl.c: 821: l=0;
	clrf	((ModPruCW4@l))&0ffh
	line	822
;rgl.c: 822: m=0;
	clrf	((c:ModPruCW4@m)),c
	line	823
	
l14562:; BSR set to: 0

;rgl.c: 823: k=1;
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((ModPruCW4@k))&0ffh
	line	824
;rgl.c: 824: }
	goto	l14576
	line	826
	
l14564:; BSR set to: 1

;rgl.c: 825: else
;rgl.c: 826: if(Tnizsza(1))
	movlw	(01h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u20321
	goto	u20320
u20321:
	goto	l14572
u20320:
	line	828
	
l14566:; BSR set to: 0

;rgl.c: 827: {
;rgl.c: 828: if(Tstoi())
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u20331
	goto	u20330
u20331:
	goto	l14576
u20330:
	line	830
	
l14568:; BSR set to: 0

;rgl.c: 829: {
;rgl.c: 830: if(l>=3)
	movlw	(03h-1)
	cpfsgt	((ModPruCW4@l))&0ffh
	goto	u20341
	goto	u20340
u20341:
	goto	l1867
u20340:
	line	832
	
l14570:; BSR set to: 0

;rgl.c: 831: {
;rgl.c: 832: k=2;
	movlw	low(02h)
	movlb	1	; () banked
	movwf	((ModPruCW4@k))&0ffh
	line	833
	
l14572:
;rgl.c: 833: l=0;
	movlb	0	; () banked
	clrf	((ModPruCW4@l))&0ffh
	line	834
;rgl.c: 834: }
	goto	l14576
	line	835
	
l1867:; BSR set to: 0

	line	837
;rgl.c: 835: else
;rgl.c: 836: {
;rgl.c: 837: k=0;
	movlb	1	; () banked
	clrf	((ModPruCW4@k))&0ffh
	line	838
	
l14574:; BSR set to: 1

;rgl.c: 838: l++;
	movlb	0	; () banked
	incf	((ModPruCW4@l))&0ffh
	line	842
	
l14576:
;rgl.c: 842: if(PWM.MMAXCW>PWM.MGMOD)
	movf	(0+((c:_PWM)+01Ah)),c,w	;volatile
	cpfslt	(0+((c:_PWM)+06h)),c	;volatile
	goto	u20351
	goto	u20350
u20351:
	goto	l14584
u20350:
	line	844
	
l14578:
;rgl.c: 843: {
;rgl.c: 844: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
	movf	(0+((c:_rgl)+07h)),c,w
	movlb	1	; () banked
	addwf	((ModPruCW4@k))&0ffh,w
	movwf	(??_ModPruCW4+0+0)&0ffh
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW4@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW4+0+0)&0ffh
	
	movf	(0+((c:_PWM)+06h)),c,w	;volatile
	movwf	(??_ModPruCW4+2+0)&0ffh
	clrf	(??_ModPruCW4+2+0+1)&0ffh

	movf	(??_ModPruCW4+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPruCW4+4+0)&0ffh
	movf	(??_ModPruCW4+0+0)&0ffh,w
	subwf	(??_ModPruCW4+2+0)&0ffh,w
	movf	(??_ModPruCW4+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPruCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u20361
	goto	u20360
u20361:
	goto	l14582
u20360:
	
l14580:; BSR set to: 1

	movff	0+((c:_PWM)+06h),0+((c:_rgl)+07h)	;volatile
	goto	l14590
	line	845
	
l14582:; BSR set to: 1

;rgl.c: 845: else rgl.srp+=k;
	movf	((ModPruCW4@k))&0ffh,w
	addwf	(0+((c:_rgl)+07h)),c
	goto	l14590
	line	850
	
l14584:
;rgl.c: 848: else
;rgl.c: 849: {
;rgl.c: 850: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	movlb	1	; () banked
	addwf	((ModPruCW4@k))&0ffh,w
	movwf	(??_ModPruCW4+0+0)&0ffh
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW4@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW4+0+0)&0ffh
	
	movf	(0+((c:_PWM)+01Ah)),c,w	;volatile
	movwf	(??_ModPruCW4+2+0)&0ffh
	clrf	(??_ModPruCW4+2+0+1)&0ffh

	movf	(??_ModPruCW4+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPruCW4+4+0)&0ffh
	movf	(??_ModPruCW4+0+0)&0ffh,w
	subwf	(??_ModPruCW4+2+0)&0ffh,w
	movf	(??_ModPruCW4+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPruCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u20371
	goto	u20370
u20371:
	goto	l14582
u20370:
	
l14586:; BSR set to: 1

	movff	0+((c:_PWM)+01Ah),0+((c:_rgl)+07h)	;volatile
	line	854
	
l14590:; BSR set to: 1

;rgl.c: 853: }
;rgl.c: 854: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u20381
	goto	u20380
u20381:
	goto	l1835
u20380:
	goto	l14552
	line	858
	
l1835:
	return
	opt stack 0
GLOBAL	__end_of_ModPruCW4
	__end_of_ModPruCW4:
	signat	_ModPruCW4,88
	global	_Tmaleje

;; *************** function _Tmaleje *****************
;; Defined at:
;;		line 2073 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;  t               1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  t               1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModPruCW4
;;		_ModPrzCW4
;; This function uses a non-reentrant model
;;
psect	text6,class=CODE,space=0,reloc=2
global __ptext6
__ptext6:
psect	text6
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	2073
	global	__size_of_Tmaleje
	__size_of_Tmaleje	equ	__end_of_Tmaleje-_Tmaleje
	
_Tmaleje:
;incstack = 0
	opt	stack 24
;incstack = 0
;Tmaleje@t stored from wreg
	movff	wreg,(Tmaleje@t)
	line	2074
	
l14706:
;rgl.c: 2074: return (rgl.x_dt<(-1*t));
	movlb	0	; () banked
	movf	((Tmaleje@t))&0ffh,w
	mullw	01h
	comf	(prodl),c
	comf	(prodh),c
	infsnz	(prodl),c
	incf	(prodh),c
	movff	0+((c:_rgl)+04h),??_Tmaleje+0+0
	movlb	1	; () banked
	clrf	(??_Tmaleje+0+0+1)&0ffh
	btfsc	(??_Tmaleje+0+0)&0ffh,7
	decf	(??_Tmaleje+0+0+1)&0ffh
	movf	(??_Tmaleje+0+1)&0ffh,w
	xorlw	80h
	movwf	(??_Tmaleje+2+0)&0ffh
	movf	(prodl),c,w
	subwf	(??_Tmaleje+0+0)&0ffh,w
	movf	(prodh),c,w
	xorlw	80h
	subwfb	(??_Tmaleje+2+0)&0ffh,w
	btfss	status,0
	goto	u20651
	goto	u20650
u20651:
	goto	l14710
u20650:
	
l14708:; BSR set to: 1

	bcf	status,0
	goto	l2307
	
l14710:; BSR set to: 1

	bsf	status,0
	line	2075
	
l2307:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_Tmaleje
	__end_of_Tmaleje:
	signat	_Tmaleje,4216
	global	_Twyzsza

;; *************** function _Twyzsza *****************
;; Defined at:
;;		line 2099 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;  t               1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  t               1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModPruCW4
;;		_ModPrzCW4
;; This function uses a non-reentrant model
;;
psect	text7,class=CODE,space=0,reloc=2
global __ptext7
__ptext7:
psect	text7
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	2099
	global	__size_of_Twyzsza
	__size_of_Twyzsza	equ	__end_of_Twyzsza-_Twyzsza
	
_Twyzsza:; BSR set to: 1

;incstack = 0
	opt	stack 24
;incstack = 0
;Twyzsza@t stored from wreg
	movff	wreg,(Twyzsza@t)
	line	2100
	
l14690:
;rgl.c: 2100: return (rgl.x_t<(-1*t));
	movlb	0	; () banked
	movf	((Twyzsza@t))&0ffh,w
	mullw	01h
	comf	(prodl),c
	comf	(prodh),c
	infsnz	(prodl),c
	incf	(prodh),c
	movff	0+((c:_rgl)+02h),??_Twyzsza+0+0
	movlb	1	; () banked
	clrf	(??_Twyzsza+0+0+1)&0ffh
	btfsc	(??_Twyzsza+0+0)&0ffh,7
	decf	(??_Twyzsza+0+0+1)&0ffh
	movf	(??_Twyzsza+0+1)&0ffh,w
	xorlw	80h
	movwf	(??_Twyzsza+2+0)&0ffh
	movf	(prodl),c,w
	subwf	(??_Twyzsza+0+0)&0ffh,w
	movf	(prodh),c,w
	xorlw	80h
	subwfb	(??_Twyzsza+2+0)&0ffh,w
	btfss	status,0
	goto	u20631
	goto	u20630
u20631:
	goto	l14694
u20630:
	
l14692:; BSR set to: 1

	bcf	status,0
	goto	l2316
	
l14694:; BSR set to: 1

	bsf	status,0
	line	2101
	
l2316:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_Twyzsza
	__end_of_Twyzsza:
	signat	_Twyzsza,4216
	global	_IncMaxCW4

;; *************** function _IncMaxCW4 *****************
;; Defined at:
;;		line 863 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  k               1    0        unsigned char 
;;  d               1    0        unsigned char 
;;  w               1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Trosnie
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text8,class=CODE,space=0,reloc=2
global __ptext8
__ptext8:
psect	text8
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	863
	global	__size_of_IncMaxCW4
	__size_of_IncMaxCW4	equ	__end_of_IncMaxCW4-_IncMaxCW4
	
_IncMaxCW4:; BSR set to: 1

;incstack = 0
	opt	stack 24
;incstack = 0
	line	867
	
l14402:; BSR set to: 0

;rgl.c: 864: unsigned char k,w,d;
;rgl.c: 867: if(rgl.fz)
	
	btfss	((c:_rgl)),c,2
	goto	u19931
	goto	u19930
u19931:
	goto	l14414
u19930:
	line	869
	
l14404:; BSR set to: 0

;rgl.c: 868: {
;rgl.c: 869: if(PWM.MMAXCW>PWM.MGMOD)
	movf	(0+((c:_PWM)+01Ah)),c,w	;volatile
	cpfslt	(0+((c:_PWM)+06h)),c	;volatile
	goto	u19941
	goto	u19940
u19941:
	goto	l14410
u19940:
	line	871
	
l14406:; BSR set to: 0

;rgl.c: 870: {
;rgl.c: 871: if(rgl.xmod>PWM.MGMOD) rgl.xmod=PWM.MGMOD;
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+((c:_PWM)+06h)),c	;volatile
	goto	u19951
	goto	u19950
u19951:
	goto	l1884
u19950:
	
l14408:; BSR set to: 0

	movff	0+((c:_PWM)+06h),0+((c:_rgl)+08h)	;volatile
	goto	l1884
	line	875
	
l14410:; BSR set to: 0

;rgl.c: 873: else
;rgl.c: 874: {
;rgl.c: 875: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PWM.MMAXCW;
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+((c:_PWM)+01Ah)),c	;volatile
	goto	u19961
	goto	u19960
u19961:
	goto	l1884
u19960:
	
l14412:
	movff	0+((c:_PWM)+01Ah),0+((c:_rgl)+08h)	;volatile
	goto	l1884
	line	879
	
l14414:; BSR set to: 0

;rgl.c: 878: }
;rgl.c: 879: if(!Trosnie(1))
	movlw	(01h)&0ffh
	
	call	_Trosnie
	btfsc	status,0
	goto	u19971
	goto	u19970
u19971:
	goto	l1884
u19970:
	line	881
	
l14416:; BSR set to: 0

	line	882
	
l14418:; BSR set to: 0

;rgl.c: 882: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
	movf	(0+((c:_rgl)+08h)),c,w
	movlb	1	; () banked
	movwf	(??_IncMaxCW4+0+0)&0ffh
	clrf	(??_IncMaxCW4+0+0+1)&0ffh

	movlw	05h
	addwf	(??_IncMaxCW4+0+0)&0ffh
	movlw	0
	addwfc	(??_IncMaxCW4+0+1)&0ffh
	movf	(??_IncMaxCW4+0+1)&0ffh,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	0F1h
	btfsc	status,2
	subwf	(??_IncMaxCW4+0+0)&0ffh,w
	btfss	status,0
	goto	u19981
	goto	u19980
u19981:
	goto	l14422
u19980:
	
l14420:; BSR set to: 1

	movlw	low(0F0h)
	movwf	(0+((c:_rgl)+08h)),c
	goto	l14424
	line	883
	
l14422:; BSR set to: 1

;rgl.c: 883: else rgl.xmod+=k;
	movlw	(05h)&0ffh
	addwf	(0+((c:_rgl)+08h)),c
	line	884
	
l14424:; BSR set to: 1

;rgl.c: 884: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PWM.MMAXCW;
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+((c:_PWM)+01Ah)),c	;volatile
	goto	u19991
	goto	u19990
u19991:
	goto	l1884
u19990:
	goto	l14412
	line	887
	
l1884:
	return
	opt stack 0
GLOBAL	__end_of_IncMaxCW4
	__end_of_IncMaxCW4:
	signat	_IncMaxCW4,88
	global	_Trosnie

;; *************** function _Trosnie *****************
;; Defined at:
;;		line 2064 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;  t               1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  t               1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModPruCW4
;;		_IncMaxCW4
;; This function uses a non-reentrant model
;;
psect	text9,class=CODE,space=0,reloc=2
global __ptext9
__ptext9:
psect	text9
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	2064
	global	__size_of_Trosnie
	__size_of_Trosnie	equ	__end_of_Trosnie-_Trosnie
	
_Trosnie:
;incstack = 0
	opt	stack 24
;incstack = 0
;Trosnie@t stored from wreg
	movff	wreg,(Trosnie@t)
	line	2065
	
l14698:
;rgl.c: 2065: return (rgl.x_dt>t);
	movlb	0	; () banked
	movf	((Trosnie@t))&0ffh,w
	btfsc	(0+((c:_rgl)+04h)),c,7
	goto	u20640
	xorlw	0ffh
	addwf	(0+((c:_rgl)+04h)),c,w
	btfsc	status,0
	goto	u20641
	goto	u20640
u20641:
	goto	l14702
u20640:
	
l14700:; BSR set to: 0

	bcf	status,0
	goto	l2304
	
l14702:; BSR set to: 0

	bsf	status,0
	line	2066
	
l2304:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_Trosnie
	__end_of_Trosnie:
	signat	_Trosnie,4216
	global	_IncConstCW4

;; *************** function _IncConstCW4 *****************
;; Defined at:
;;		line 608 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tstoi
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text10,class=CODE,space=0,reloc=2
global __ptext10
__ptext10:
psect	text10
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	608
	global	__size_of_IncConstCW4
	__size_of_IncConstCW4	equ	__end_of_IncConstCW4-_IncConstCW4
	
_IncConstCW4:; BSR set to: 0

;incstack = 0
	opt	stack 24
;incstack = 0
	line	609
	
l14398:; BSR set to: 0

;rgl.c: 609: if(Tstoi()) rgl.ytmp++;
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u19921
	goto	u19920
u19921:
	goto	l1771
u19920:
	
l14400:; BSR set to: 0

	incf	(0+((c:_rgl)+06h)),c
	goto	l1773
	line	610
	
l1771:; BSR set to: 0

;rgl.c: 610: else rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	611
	
l1773:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_IncConstCW4
	__end_of_IncConstCW4:
	signat	_IncConstCW4,88
	global	_Tstoi

;; *************** function _Tstoi *****************
;; Defined at:
;;		line 2080 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/1
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_IncConstCW4
;;		_ModPruCW4
;; This function uses a non-reentrant model
;;
psect	text11,class=CODE,space=0,reloc=2
global __ptext11
__ptext11:
psect	text11
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	2080
	global	__size_of_Tstoi
	__size_of_Tstoi	equ	__end_of_Tstoi-_Tstoi
	
_Tstoi:; BSR set to: 0

;incstack = 0
	opt	stack 24
;incstack = 0
	line	2081
	
l14674:
;rgl.c: 2081: return !rgl.x_dt;
	movf	(0+((c:_rgl)+04h)),c,w
	btfsc	status,2
	goto	u20611
	goto	u20610
u20611:
	goto	l14678
u20610:
	
l14676:
	bcf	status,0
	goto	l2310
	
l14678:
	bsf	status,0
	line	2082
	
l2310:
	return
	opt stack 0
GLOBAL	__end_of_Tstoi
	__end_of_Tstoi:
	signat	_Tstoi,88
	global	_ModDkCW4

;; *************** function _ModDkCW4 *****************
;; Defined at:
;;		line 696 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  m               4   14[BANK1 ] long 
;;  ada             1   13[BANK1 ] char 
;;  p               1   12[BANK1 ] unsigned char 
;;  k               1   11[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       12 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___wmul
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text12,class=CODE,space=0,reloc=2
global __ptext12
__ptext12:
psect	text12
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	696
	global	__size_of_ModDkCW4
	__size_of_ModDkCW4	equ	__end_of_ModDkCW4-_ModDkCW4
	
_ModDkCW4:
;incstack = 0
	opt	stack 24
;incstack = 0
	line	701
	
l14376:
;rgl.c: 697: signed long m;
;rgl.c: 698: signed char ada;
;rgl.c: 699: unsigned char k,p;
;rgl.c: 701: if(!rgl.fz) return;
	
	btfsc	((c:_rgl)),c,2
	goto	u19881
	goto	u19880
u19881:
	goto	l14380
u19880:
	goto	l1801
	line	702
	
l14380:
;rgl.c: 702: ada=DtCW.AC_CW-DtCW.DAD_CW;
	movf	(0+((c:_DtCW)+0Eh)),c,w
	subwf	(0+((c:_DtCW)+0Ch)),c,w
	movlb	1	; () banked
	movwf	((ModDkCW4@ada))&0ffh
	line	703
	
l14382:; BSR set to: 1

;rgl.c: 703: k=3;
	movlw	low(03h)
	movwf	((ModDkCW4@k))&0ffh
	line	704
	
l14384:; BSR set to: 1

;rgl.c: 704: if(ada<0) k=2;
	btfss	((ModDkCW4@ada))&0ffh,7
	goto	u19891
	goto	u19890
u19891:
	goto	l14388
u19890:
	
l14386:; BSR set to: 1

	movlw	low(02h)
	movwf	((ModDkCW4@k))&0ffh
	line	705
	
l14388:; BSR set to: 1

;rgl.c: 705: m=rgl.srp+k*ada;
	movff	(ModDkCW4@k),(?___wmul)
	clrf	((?___wmul+1))&0ffh
	movf	((ModDkCW4@ada))&0ffh,w
	movwf	(0+(?___wmul+02h))&0ffh
	clrf	(1+(?___wmul+02h))&0ffh
	btfsc	(0+(?___wmul+02h))&0ffh,7
	decf	(1+(?___wmul+02h))&0ffh
	call	___wmul	;wreg free
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	(0+?___wmul)&0ffh,w
	movwf	(??_ModDkCW4+0+0)&0ffh
	movlw	0
	addwfc	(1+?___wmul)&0ffh,w
	movwf	1+(??_ModDkCW4+0+0)&0ffh
	movff	??_ModDkCW4+0+0,(ModDkCW4@m)
	movff	??_ModDkCW4+0+1,(ModDkCW4@m+1)
	movlw	0
	btfsc	((ModDkCW4@m+1))&0ffh,7
	movlw	-1
	movwf	((ModDkCW4@m+2))&0ffh
	movwf	((ModDkCW4@m+3))&0ffh
	line	706
	
l14390:; BSR set to: 1

;rgl.c: 706: if(m>rgl.xmod) p=rgl.xmod;
	movff	0+((c:_rgl)+08h),??_ModDkCW4+0+0
	clrf	(??_ModDkCW4+0+0+1)&0ffh
	clrf	(??_ModDkCW4+0+0+2)&0ffh
	clrf	(??_ModDkCW4+0+0+3)&0ffh
	movf	(??_ModDkCW4+0+3)&0ffh,w
	xorlw	80h
	movwf	(??_ModDkCW4+4+0)&0ffh
	movf	((ModDkCW4@m))&0ffh,w
	subwf	(??_ModDkCW4+0+0)&0ffh,w
	movf	((ModDkCW4@m+1))&0ffh,w
	subwfb	(??_ModDkCW4+0+1)&0ffh,w
	movf	((ModDkCW4@m+2))&0ffh,w
	subwfb	(??_ModDkCW4+0+2)&0ffh,w
	movf	((ModDkCW4@m+3))&0ffh,w
	xorlw	80h
	subwfb	(??_ModDkCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u19901
	goto	u19900
u19901:
	goto	l14394
u19900:
	
l14392:; BSR set to: 1

	movff	0+((c:_rgl)+08h),(ModDkCW4@p)
	goto	l1804
	line	708
	
l14394:; BSR set to: 1

;rgl.c: 707: else
;rgl.c: 708: if(m<PWM.MDMOD) p=PWM.MDMOD;
	movff	0+((c:_PWM)+05h),??_ModDkCW4+0+0	;volatile
	clrf	(??_ModDkCW4+0+0+1)&0ffh
	clrf	(??_ModDkCW4+0+0+2)&0ffh
	clrf	(??_ModDkCW4+0+0+3)&0ffh
	movf	((ModDkCW4@m+3))&0ffh,w
	xorlw	80h
	movwf	(??_ModDkCW4+4+0)&0ffh
	movf	(??_ModDkCW4+0+0)&0ffh,w
	subwf	((ModDkCW4@m))&0ffh,w
	movf	(??_ModDkCW4+0+1)&0ffh,w
	subwfb	((ModDkCW4@m+1))&0ffh,w
	movf	(??_ModDkCW4+0+2)&0ffh,w
	subwfb	((ModDkCW4@m+2))&0ffh,w
	movf	(??_ModDkCW4+0+3)&0ffh,w
	xorlw	80h
	subwfb	(??_ModDkCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u19911
	goto	u19910
u19911:
	goto	l1805
u19910:
	
l14396:; BSR set to: 1

	movff	0+((c:_PWM)+05h),(ModDkCW4@p)	;volatile
	goto	l1804
	line	709
	
l1805:; BSR set to: 1

;rgl.c: 709: else p=m;
	movff	(ModDkCW4@m),(ModDkCW4@p)
	
l1804:; BSR set to: 1

	line	711
;rgl.c: 711: rgl.tmp_pwm=p;
	movff	(ModDkCW4@p),0+((c:_rgl)+09h)
	line	712
	
l1801:
	return
	opt stack 0
GLOBAL	__end_of_ModDkCW4
	__end_of_ModDkCW4:
	signat	_ModDkCW4,88
	global	_ModZgCW4

;; *************** function _ModZgCW4 *****************
;; Defined at:
;;		line 624 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  m               4   20[BANK1 ] long 
;;  p               1   19[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       10 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tnizsza
;;		___aldiv
;;		___lmul
;;		___wmul
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text13,class=CODE,space=0,reloc=2
global __ptext13
__ptext13:
psect	text13
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	624
	global	__size_of_ModZgCW4
	__size_of_ModZgCW4	equ	__end_of_ModZgCW4-_ModZgCW4
	
_ModZgCW4:
;incstack = 0
	opt	stack 24
;incstack = 0
	line	629
	
l14328:; BSR set to: 0

;rgl.c: 625: signed long m;
;rgl.c: 626: unsigned char p;
;rgl.c: 627: static unsigned char pop;
;rgl.c: 629: if(Tnizsza(10))
	movlw	(0Ah)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u19751
	goto	u19750
u19751:
	goto	l1781
u19750:
	line	631
	
l14330:; BSR set to: 0

;rgl.c: 630: {
;rgl.c: 631: pop=0;
	clrf	((ModZgCW4@pop))&0ffh
	line	632
	
l1781:; BSR set to: 0

	line	633
;rgl.c: 632: }
;rgl.c: 633: if(rgl.fz)
	
	btfss	((c:_rgl)),c,2
	goto	u19761
	goto	u19760
u19761:
	goto	l14336
u19760:
	line	635
	
l14332:; BSR set to: 0

;rgl.c: 634: {
;rgl.c: 635: if(Tnizsza(2))
	movlw	(02h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u19771
	goto	u19770
u19771:
	goto	l1785
u19770:
	line	637
	
l14334:; BSR set to: 0

;rgl.c: 636: {
;rgl.c: 637: rgl.xmod=PWM.BufPWM;
	movff	0+((c:_PWM)+01h),0+((c:_rgl)+08h)	;volatile
	line	638
;rgl.c: 638: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	639
;rgl.c: 639: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	640
;rgl.c: 640: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	641
;rgl.c: 641: pop=0;
	clrf	((ModZgCW4@pop))&0ffh
	line	645
;rgl.c: 642: }
	
l14336:; BSR set to: 0

;rgl.c: 644: }
;rgl.c: 645: if(!Tnizsza(1))
	movlw	(01h)&0ffh
	
	call	_Tnizsza
	btfsc	status,0
	goto	u19781
	goto	u19780
u19781:
	goto	l14354
u19780:
	line	647
	
l14338:; BSR set to: 0

;rgl.c: 649: stoi=0;
	bsf	((c:_rgl)),c,2
	line	650
;rgl.c: 650: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	651
;rgl.c: 651: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	652
	
l14340:; BSR set to: 0

;rgl.c: 652: rgl.srp=PWM.BufPWM+pop;
	movf	(0+((c:_PWM)+01h)),c,w	;volatile
	addwf	((ModZgCW4@pop))&0ffh,w
	movwf	(0+((c:_rgl)+07h)),c
	line	653
;rgl.c: 653: rgl.xmod=PWM.BufPWM+pop;
	movf	(0+((c:_PWM)+01h)),c,w	;volatile
	addwf	((ModZgCW4@pop))&0ffh,w
	movwf	(0+((c:_rgl)+08h)),c
	line	654
	
l14342:; BSR set to: 0

;rgl.c: 654: pop=0;
	clrf	((ModZgCW4@pop))&0ffh
	line	655
	
l14344:; BSR set to: 0

;rgl.c: 655: if(PWM.MMAXCW>PWM.MGMOD)
	movf	(0+((c:_PWM)+01Ah)),c,w	;volatile
	cpfslt	(0+((c:_PWM)+06h)),c	;volatile
	goto	u19791
	goto	u19790
u19791:
	goto	l14350
u19790:
	line	657
	
l14346:; BSR set to: 0

;rgl.c: 656: {
;rgl.c: 657: if(rgl.xmod>PWM.MGMOD)
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+((c:_PWM)+06h)),c	;volatile
	goto	u19801
	goto	u19800
u19801:
	goto	l1785
u19800:
	line	659
	
l14348:; BSR set to: 0

;rgl.c: 658: {
;rgl.c: 659: rgl.srp=PWM.MGMOD;
	movff	0+((c:_PWM)+06h),0+((c:_rgl)+07h)	;volatile
	line	660
;rgl.c: 660: rgl.xmod=PWM.MGMOD;
	movff	0+((c:_PWM)+06h),0+((c:_rgl)+08h)	;volatile
	goto	l1785
	line	665
	
l14350:; BSR set to: 0

;rgl.c: 663: else
;rgl.c: 664: {
;rgl.c: 665: if(rgl.xmod>PWM.MMAXCW)
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+((c:_PWM)+01Ah)),c	;volatile
	goto	u19811
	goto	u19810
u19811:
	goto	l1785
u19810:
	line	667
	
l14352:; BSR set to: 0

;rgl.c: 666: {
;rgl.c: 667: rgl.srp=PWM.MMAXCW;
	movff	0+((c:_PWM)+01Ah),0+((c:_rgl)+07h)	;volatile
	line	668
;rgl.c: 668: rgl.xmod=PWM.MMAXCW;
	movff	0+((c:_PWM)+01Ah),0+((c:_rgl)+08h)	;volatile
	goto	l1785
	line	673
	
l14354:; BSR set to: 0

;rgl.c: 672: }
;rgl.c: 673: if(rgl.xmod>=PWM.MDMOD) m=(rgl.xmod-PWM.MDMOD)*10;
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	btfss	status,0
	goto	u19821
	goto	u19820
u19821:
	goto	l1791
u19820:
	
l14356:; BSR set to: 0

	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	movlb	1	; () banked
	
	movwf	((?___wmul))&0ffh
	clrf	1+((?___wmul))&0ffh
	btfss	status,0
	decf	1+((?___wmul))&0ffh
	
	movlw	high(0Ah)
	movwf	(1+(?___wmul+02h))&0ffh
	movlw	low(0Ah)
	movwf	(0+(?___wmul+02h))&0ffh
	call	___wmul	;wreg free
	movff	0+?___wmul,(ModZgCW4@m)
	movff	1+?___wmul,(ModZgCW4@m+1)
	movlw	0
	btfsc	((ModZgCW4@m+1))&0ffh,7
	movlw	-1
	movwf	((ModZgCW4@m+2))&0ffh
	movwf	((ModZgCW4@m+3))&0ffh
	goto	l14358
	line	674
	
l1791:; BSR set to: 0

;rgl.c: 674: else m=0;
	movlb	1	; () banked
	clrf	((ModZgCW4@m))&0ffh
	clrf	((ModZgCW4@m+1))&0ffh
	clrf	((ModZgCW4@m+2))&0ffh
	clrf	((ModZgCW4@m+3))&0ffh

	line	675
	
l14358:; BSR set to: 1

;rgl.c: 675: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
	movff	(ModZgCW4@m),(?___aldiv)
	movff	(ModZgCW4@m+1),(?___aldiv+1)
	movff	(ModZgCW4@m+2),(?___aldiv+2)
	movff	(ModZgCW4@m+3),(?___aldiv+3)
	movf	(0+((c:_DtCW)+0Eh)),c,w
	movff	0+((c:_DtCW)+0Dh),??_ModZgCW4+0+0
	clrf	(??_ModZgCW4+0+0+1)&0ffh
	subwf	(??_ModZgCW4+0+0)&0ffh
	movlw	0
	subwfb	(??_ModZgCW4+0+1)&0ffh
	movff	??_ModZgCW4+0+0,0+(?___aldiv+04h)
	movff	??_ModZgCW4+0+1,1+(?___aldiv+04h)
	movlw	0
	btfsc	(1+(?___aldiv+04h))&0ffh,7
	movlw	-1
	movwf	(2+(?___aldiv+04h))&0ffh
	movwf	(3+(?___aldiv+04h))&0ffh
	call	___aldiv	;wreg free
	
	movff	3+?___aldiv,(ModZgCW4@m+3)
	movff	2+?___aldiv,(ModZgCW4@m+2)
	movff	1+?___aldiv,(ModZgCW4@m+1)
	movff	0+?___aldiv,(ModZgCW4@m)
	
	line	676
;rgl.c: 676: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
	movff	(ModZgCW4@m),(?___lmul)
	movff	(ModZgCW4@m+1),(?___lmul+1)
	movff	(ModZgCW4@m+2),(?___lmul+2)
	movff	(ModZgCW4@m+3),(?___lmul+3)
	movf	(0+((c:_DtCW)+0Eh)),c,w
	movff	0+((c:_DtCW)+0Ch),??_ModZgCW4+0+0
	clrf	(??_ModZgCW4+0+0+1)&0ffh
	subwf	(??_ModZgCW4+0+0)&0ffh
	movlw	0
	subwfb	(??_ModZgCW4+0+1)&0ffh
	movff	??_ModZgCW4+0+0,0+(?___lmul+04h)
	movff	??_ModZgCW4+0+1,1+(?___lmul+04h)
	movlw	0
	btfsc	(1+(?___lmul+04h))&0ffh,7
	movlw	-1
	movwf	(2+(?___lmul+04h))&0ffh
	movwf	(3+(?___lmul+04h))&0ffh
	call	___lmul	;wreg free
	
	movff	3+?___lmul,(ModZgCW4@m+3)
	movff	2+?___lmul,(ModZgCW4@m+2)
	movff	1+?___lmul,(ModZgCW4@m+1)
	movff	0+?___lmul,(ModZgCW4@m)
	
	line	677
	
l14360:; BSR set to: 1

;rgl.c: 677: if(m<0) m=0;
	btfss	((ModZgCW4@m+3))&0ffh,7
	goto	u19831
	goto	u19830
u19831:
	goto	l14364
u19830:
	
l14362:; BSR set to: 1

	clrf	((ModZgCW4@m))&0ffh
	clrf	((ModZgCW4@m+1))&0ffh
	clrf	((ModZgCW4@m+2))&0ffh
	clrf	((ModZgCW4@m+3))&0ffh

	line	678
	
l14364:; BSR set to: 1

;rgl.c: 678: m=m/10+PWM.MDMOD;
	movff	(ModZgCW4@m),(?___aldiv)
	movff	(ModZgCW4@m+1),(?___aldiv+1)
	movff	(ModZgCW4@m+2),(?___aldiv+2)
	movff	(ModZgCW4@m+3),(?___aldiv+3)
	movlw	low(0Ah)
	movwf	(0+(?___aldiv+04h))&0ffh
	movlw	high(0Ah)
	movwf	(1+(?___aldiv+04h))&0ffh
	movlw	low highword(0Ah)
	movwf	(2+(?___aldiv+04h))&0ffh
	movlw	high highword(0Ah)
	movwf	(3+(?___aldiv+04h))&0ffh
	call	___aldiv	;wreg free
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	addwf	(0+?___aldiv)&0ffh,w
	movwf	((ModZgCW4@m))&0ffh
	movlw	0
	addwfc	(1+?___aldiv)&0ffh,w
	movwf	1+((ModZgCW4@m))&0ffh
	movlw	0
	addwfc	(2+?___aldiv)&0ffh,w
	movwf	2+((ModZgCW4@m))&0ffh
	movlw	0
	addwfc	(3+?___aldiv)&0ffh,w
	movwf	3+((ModZgCW4@m))&0ffh
	line	679
	
l14366:; BSR set to: 1

;rgl.c: 679: if(m>0xff)
	movf	((ModZgCW4@m+3))&0ffh,w
	xorlw	80h
	addlw	-(0)^80h
	
	bnz	u19845
	movlw	0
	subwf	((ModZgCW4@m+2))&0ffh,w
	bnz	u19845
	movlw	01h
	subwf	((ModZgCW4@m+1))&0ffh,w
	bnz	u19845
	movlw	0
	subwf	((ModZgCW4@m))&0ffh,w
u19845:

	btfss	status,0
	goto	u19841
	goto	u19840
u19841:
	goto	l1794
u19840:
	line	681
	
l14368:; BSR set to: 1

;rgl.c: 680: {
;rgl.c: 681: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	682
;rgl.c: 682: rgl.tmp_pwm=rgl.xmod;
	movff	0+((c:_rgl)+08h),0+((c:_rgl)+09h)
	line	683
;rgl.c: 683: return;
	goto	l1785
	line	684
	
l1794:; BSR set to: 1

	line	685
;rgl.c: 684: }
;rgl.c: 685: if(rgl.fz&&(rgl.xmod>m))
	
	btfss	((c:_rgl)),c,2
	goto	u19851
	goto	u19850
u19851:
	goto	l1795
u19850:
	
l14370:; BSR set to: 1

	movff	0+((c:_rgl)+08h),??_ModZgCW4+0+0
	clrf	(??_ModZgCW4+0+0+1)&0ffh
	clrf	(??_ModZgCW4+0+0+2)&0ffh
	clrf	(??_ModZgCW4+0+0+3)&0ffh
	movf	((ModZgCW4@m+3))&0ffh,w
	xorlw	80h
	movwf	(??_ModZgCW4+4+0)&0ffh
	movf	(??_ModZgCW4+0+0)&0ffh,w
	subwf	((ModZgCW4@m))&0ffh,w
	movf	(??_ModZgCW4+0+1)&0ffh,w
	subwfb	((ModZgCW4@m+1))&0ffh,w
	movf	(??_ModZgCW4+0+2)&0ffh,w
	subwfb	((ModZgCW4@m+2))&0ffh,w
	movf	(??_ModZgCW4+0+3)&0ffh,w
	xorlw	80h
	subwfb	(??_ModZgCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u19861
	goto	u19860
u19861:
	goto	l1795
u19860:
	line	686
	
l14372:; BSR set to: 1

;rgl.c: 686: rgl.srp=(rgl.xmod-m);
	movf	((ModZgCW4@m))&0ffh,w
	subwf	(0+((c:_rgl)+08h)),c,w
	movwf	(0+((c:_rgl)+07h)),c
	
l1795:; BSR set to: 1

	line	687
;rgl.c: 687: m+=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModZgCW4@m))&0ffh
	movlw	0
	addwfc	((ModZgCW4@m+1))&0ffh
	addwfc	((ModZgCW4@m+2))&0ffh
	addwfc	((ModZgCW4@m+3))&0ffh
	line	688
;rgl.c: 688: if(m>rgl.xmod) p=rgl.xmod;
	movff	0+((c:_rgl)+08h),??_ModZgCW4+0+0
	clrf	(??_ModZgCW4+0+0+1)&0ffh
	clrf	(??_ModZgCW4+0+0+2)&0ffh
	clrf	(??_ModZgCW4+0+0+3)&0ffh
	movf	(??_ModZgCW4+0+3)&0ffh,w
	xorlw	80h
	movwf	(??_ModZgCW4+4+0)&0ffh
	movf	((ModZgCW4@m))&0ffh,w
	subwf	(??_ModZgCW4+0+0)&0ffh,w
	movf	((ModZgCW4@m+1))&0ffh,w
	subwfb	(??_ModZgCW4+0+1)&0ffh,w
	movf	((ModZgCW4@m+2))&0ffh,w
	subwfb	(??_ModZgCW4+0+2)&0ffh,w
	movf	((ModZgCW4@m+3))&0ffh,w
	xorlw	80h
	subwfb	(??_ModZgCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u19871
	goto	u19870
u19871:
	goto	l1796
u19870:
	
l14374:; BSR set to: 1

	movff	0+((c:_rgl)+08h),(ModZgCW4@p)
	goto	l1797
	line	689
	
l1796:; BSR set to: 1

;rgl.c: 689: else p=m;
	movff	(ModZgCW4@m),(ModZgCW4@p)
	
l1797:; BSR set to: 1

	line	690
;rgl.c: 690: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	691
;rgl.c: 691: rgl.tmp_pwm=p;
	movff	(ModZgCW4@p),0+((c:_rgl)+09h)
	line	692
	
l1785:
	return
	opt stack 0
GLOBAL	__end_of_ModZgCW4
	__end_of_ModZgCW4:
	signat	_ModZgCW4,88
	global	_Tnizsza

;; *************** function _Tnizsza *****************
;; Defined at:
;;		line 2090 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;  t               1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  t               1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModZgCW4
;;		_ModPruCW4
;;		_ModPrzCW4
;; This function uses a non-reentrant model
;;
psect	text14,class=CODE,space=0,reloc=2
global __ptext14
__ptext14:
psect	text14
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	2090
	global	__size_of_Tnizsza
	__size_of_Tnizsza	equ	__end_of_Tnizsza-_Tnizsza
	
_Tnizsza:
;incstack = 0
	opt	stack 24
;incstack = 0
;Tnizsza@t stored from wreg
	movff	wreg,(Tnizsza@t)
	line	2091
	
l14682:
;rgl.c: 2091: return (rgl.x_t>t);
	movlb	0	; () banked
	movf	((Tnizsza@t))&0ffh,w
	btfsc	(0+((c:_rgl)+02h)),c,7
	goto	u20620
	xorlw	0ffh
	addwf	(0+((c:_rgl)+02h)),c,w
	btfsc	status,0
	goto	u20621
	goto	u20620
u20621:
	goto	l14686
u20620:
	
l14684:; BSR set to: 0

	bcf	status,0
	goto	l2313
	
l14686:; BSR set to: 0

	bsf	status,0
	line	2092
	
l2313:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_Tnizsza
	__end_of_Tnizsza:
	signat	_Tnizsza,4216
	global	_ModToCW4

;; *************** function _ModToCW4 *****************
;; Defined at:
;;		line 602 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text15,class=CODE,space=0,reloc=2
global __ptext15
__ptext15:
psect	text15
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	602
	global	__size_of_ModToCW4
	__size_of_ModToCW4	equ	__end_of_ModToCW4-_ModToCW4
	
_ModToCW4:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	603
	
l14326:; BSR set to: 0

;rgl.c: 603: rgl.btcw=1;
	bsf	((c:_rgl)),c,1
	line	604
	
l1768:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ModToCW4
	__end_of_ModToCW4:
	signat	_ModToCW4,88
	global	_ReadDataCW4

;; *************** function _ReadDataCW4 *****************
;; Defined at:
;;		line 615 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text16,class=CODE,space=0,reloc=2
global __ptext16
__ptext16:
psect	text16
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	615
	global	__size_of_ReadDataCW4
	__size_of_ReadDataCW4	equ	__end_of_ReadDataCW4-_ReadDataCW4
	
_ReadDataCW4:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	616
	
l14324:; BSR set to: 0

;rgl.c: 616: rgl.x_t=DtCW.DCW;
	movff	0+((c:_DtCW)+07h),0+((c:_rgl)+02h)
	line	617
;rgl.c: 617: rgl.x_f=DtCO.DCO;
	movff	0+(_DtCO+08h),0+((c:_rgl)+03h)
	line	618
;rgl.c: 618: rgl.x_dt=DtCW.ddDCW;
	movff	0+((c:_DtCW)+09h),0+((c:_rgl)+04h)
	line	619
;rgl.c: 619: rgl.x_df=DtCO.dDCO;
	movff	0+(_DtCO+09h),0+((c:_rgl)+05h)
	line	620
	
l1776:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ReadDataCW4
	__end_of_ReadDataCW4:
	signat	_ReadDataCW4,88
	global	_StartMCW4

;; *************** function _StartMCW4 *****************
;; Defined at:
;;		line 504 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_StartRTdS
;;		_FirstPCW4
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text17,class=CODE,space=0,reloc=2
global __ptext17
__ptext17:
psect	text17
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	504
	global	__size_of_StartMCW4
	__size_of_StartMCW4	equ	__end_of_StartMCW4-_StartMCW4
	
_StartMCW4:; BSR set to: 0

;incstack = 0
	opt	stack 23
;incstack = 0
	line	505
	
l14290:; BSR set to: 0

;rgl.c: 505: if(rgl.btcw) return;
	
	btfss	((c:_rgl)),c,1
	goto	u19741
	goto	u19740
u19741:
	goto	l14294
u19740:
	goto	l1738
	line	506
	
l14294:; BSR set to: 0

;rgl.c: 506: StartRTdS(3);
	movlw	(03h)&0ffh
	
	call	_StartRTdS
	line	507
	
l14296:; BSR set to: 1

;rgl.c: 507: DtCO.dDCO=0;
	clrf	(0+(_DtCO+09h))&0ffh
	line	508
	
l14298:; BSR set to: 1

;rgl.c: 508: DtCW.dDCW=0;
	clrf	(0+((c:_DtCW)+08h)),c
	line	509
	
l14300:; BSR set to: 1

;rgl.c: 509: DtCO.indCO=0;
	clrf	(0+(_DtCO+0Ah))&0ffh
	line	510
	
l14302:; BSR set to: 1

;rgl.c: 510: DtCW.indCW=0;
	clrf	(0+((c:_DtCW)+0Ah)),c
	line	511
	
l14304:; BSR set to: 1

;rgl.c: 511: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	512
	
l14306:; BSR set to: 1

;rgl.c: 512: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	513
	
l14308:; BSR set to: 1

;rgl.c: 513: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	514
	
l14310:; BSR set to: 1

;rgl.c: 514: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	515
	
l14312:; BSR set to: 1

;rgl.c: 515: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	516
	
l14314:; BSR set to: 1

;rgl.c: 516: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	517
	
l14316:; BSR set to: 1

;rgl.c: 517: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	518
	
l14318:; BSR set to: 1

;rgl.c: 518: rgl.inv_mod=0;
	bcf	(0+((c:_rgl)+01h)),c,0
	line	519
;rgl.c: 519: rgl.xmod=FirstPCW4();
	call	_FirstPCW4	;wreg free
	movwf	(0+((c:_rgl)+08h)),c
	line	520
	
l14320:; BSR set to: 1

;rgl.c: 520: tmr=1;
	movlw	low(01h)
	movwf	((c:_tmr)),c
	line	521
	
l14322:; BSR set to: 1

;rgl.c: 521: tmr2=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	((_tmr2))&0ffh
	line	522
	
l1738:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_StartMCW4
	__end_of_StartMCW4:
	signat	_StartMCW4,88
	global	_RuszCiag

;; *************** function _RuszCiag *****************
;; Defined at:
;;		line 950 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    9
;; This function calls:
;;		_RdPrt
;;		_PrintErr
;;		_ErrPTG
;;		_StartRTS
;;		_RTS
;;		_StartRTM
;;		_RTM
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text18,class=CODE,space=0,reloc=2
global __ptext18
__ptext18:
psect	text18
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	950
	global	__size_of_RuszCiag
	__size_of_RuszCiag	equ	__end_of_RuszCiag-_RuszCiag
	
_RuszCiag:; BSR set to: 0

;incstack = 0
	opt	stack 21
;incstack = 0
	line	951
	
l13472:; BSR set to: 0

;main.c: 951: if(!M._TURBO)
	
	btfsc	(0+(_M+019h))&0ffh,0
	goto	u18271
	goto	u18270
u18271:
	goto	l13558
u18270:
	goto	l13502
	line	957
	
l13476:; BSR set to: 0

;main.c: 956: {
;main.c: 957: M.RCI=1;
	movlw	low(01h)
	movwf	(0+(_M+024h))&0ffh
	line	958
	
l13478:; BSR set to: 0

;main.c: 958: M._prb_CIG=0;
	bcf	(0+(_M+019h))&0ffh,7
	line	959
	
l13480:; BSR set to: 0

;main.c: 959: StartRTS(4);
	movlw	(04h)&0ffh
	
	call	_StartRTS
	line	960
	
l13482:; BSR set to: 1

;main.c: 960: StartRTM(3);
	movlw	(03h)&0ffh
	
	call	_StartRTM
	line	964
	
l13484:; BSR set to: 0

;main.c: 963: {
;main.c: 964: if(RTS(4)>1) M._prb_CIG=1;
	movlw	(04h)&0ffh
	
	call	_RTS
	movwf	(??_RuszCiag+0+0)&0ffh
	movlw	(02h)&0ffh
	subwf	((??_RuszCiag+0+0))&0ffh,w
	btfss	status,0
	goto	u18281
	goto	u18280
u18281:
	goto	l13488
u18280:
	
l13486:; BSR set to: 1

	movlb	0	; () banked
	bsf	(0+(_M+019h))&0ffh,7
	line	966
	
l13488:
;main.c: 966: if(RdPrt(2))
	movlw	(02h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u18291
	goto	u18290
u18291:
	goto	l13492
u18290:
	line	968
	
l13490:; BSR set to: 0

;main.c: 967: {
;main.c: 968: M.RCI=0;
	clrf	(0+(_M+024h))&0ffh
	line	969
;main.c: 969: M._RUSZ_CIAG=0;
	bcf	(0+(_M+010h))&0ffh,6
	line	970
;main.c: 970: M._prb_CIG=0;
	bcf	(0+(_M+019h))&0ffh,7
	line	971
;main.c: 971: return;
	goto	l986
	line	973
	
l13492:; BSR set to: 0

;main.c: 972: }
;main.c: 973: if(RTM(3)<15) return;
	movlw	(03h)&0ffh
	
	call	_RTM
	movlb	1	; () banked
	movwf	(??_RuszCiag+0+0)&0ffh
	movlw	(0Fh)&0ffh
	subwf	((??_RuszCiag+0+0))&0ffh,w
	btfsc	status,0
	goto	u18301
	goto	u18300
u18301:
	goto	l13496
u18300:
	goto	l986
	line	974
	
l13496:; BSR set to: 1

;main.c: 974: M.ERR_BTY=0x03;
	movlw	low(03h)
	movlb	0	; () banked
	movwf	(0+(_M+01Ch))&0ffh
	line	975
	
l13498:; BSR set to: 0

;main.c: 975: PrintErr(0xE3,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(0E3h)&0ffh
	
	call	_PrintErr
	line	976
	
l13500:; BSR set to: 0

;main.c: 976: ErrPTG();
	call	_ErrPTG	;wreg free
	line	978
;main.c: 977: }
;main.c: 978: }
	goto	l986
	line	953
	
l13502:; BSR set to: 0

	movf	(0+(_M+024h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l13476
	xorlw	1^0	; case 1
	skipnz
	goto	l13484
	goto	l986

	line	984
;main.c: 983: {
;main.c: 984: case 0:
	
l991:; BSR set to: 0

	line	986
;main.c: 985: {
;main.c: 986: M._prb_CIG=0;
	bcf	(0+(_M+019h))&0ffh,7
	line	987
	
l13504:; BSR set to: 0

;main.c: 987: StartRTS(4);
	movlw	(04h)&0ffh
	
	call	_StartRTS
	line	988
	
l13506:; BSR set to: 1

;main.c: 988: if(RB0)
	btfss	c:(31752/8),(31752)&7	;volatile
	goto	u18311
	goto	u18310
u18311:
	goto	l13512
u18310:
	line	990
	
l13508:; BSR set to: 1

;main.c: 989: {
;main.c: 990: M._VWYBIEG=1;
	movlb	0	; () banked
	bsf	(0+(_M+010h))&0ffh,5
	line	991
;main.c: 991: M.VWB=0;
	clrf	(0+(_M+027h))&0ffh
	line	992
	
l13510:; BSR set to: 0

;main.c: 992: M.RCI=1;
	movlw	low(01h)
	movwf	(0+(_M+024h))&0ffh
	line	993
;main.c: 993: }
	goto	l986
	line	994
	
l13512:; BSR set to: 1

;main.c: 994: else M.RCI=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	(0+(_M+024h))&0ffh
	goto	l986
	line	999
	
l13514:; BSR set to: 0

;main.c: 998: {
;main.c: 999: if(RTS(4)>1) M._prb_CIG=1;
	movlw	(04h)&0ffh
	
	call	_RTS
	movwf	(??_RuszCiag+0+0)&0ffh
	movlw	(02h)&0ffh
	subwf	((??_RuszCiag+0+0))&0ffh,w
	btfss	status,0
	goto	u18321
	goto	u18320
u18321:
	goto	l13518
u18320:
	
l13516:; BSR set to: 1

	movlb	0	; () banked
	bsf	(0+(_M+019h))&0ffh,7
	line	1001
	
l13518:
;main.c: 1001: if(RdPrt(3))
	movlw	(03h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u18331
	goto	u18330
u18331:
	goto	l13524
u18330:
	line	1003
	
l13520:; BSR set to: 0

;main.c: 1002: {
;main.c: 1003: M.RCI=3;
	movlw	low(03h)
	movwf	(0+(_M+024h))&0ffh
	line	1004
	
l13522:; BSR set to: 0

;main.c: 1004: StartRTS(4);
	movlw	(04h)&0ffh
	
	call	_StartRTS
	line	1005
;main.c: 1005: break;
	goto	l986
	line	1007
	
l13524:; BSR set to: 0

;main.c: 1006: }
;main.c: 1007: if(RTS(4)<15-1) return;
	movlw	(04h)&0ffh
	
	call	_RTS
	movwf	(??_RuszCiag+0+0)&0ffh
	movlw	(0Eh)&0ffh
	subwf	((??_RuszCiag+0+0))&0ffh,w
	btfsc	status,0
	goto	u18341
	goto	u18340
u18341:
	goto	l13528
u18340:
	goto	l986
	line	1008
	
l13528:; BSR set to: 1

;main.c: 1008: M.ERR_BTY=0x03;
	movlw	low(03h)
	movlb	0	; () banked
	movwf	(0+(_M+01Ch))&0ffh
	line	1009
	
l13530:; BSR set to: 0

;main.c: 1009: PrintErr(0xE3,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(0E3h)&0ffh
	
	call	_PrintErr
	line	1010
	
l13532:; BSR set to: 0

;main.c: 1010: ErrPTG();
	call	_ErrPTG	;wreg free
	line	1014
	
l13534:
;main.c: 1013: {
;main.c: 1014: if(RTS(4)>1) M._prb_CIG=1;
	movlw	(04h)&0ffh
	
	call	_RTS
	movwf	(??_RuszCiag+0+0)&0ffh
	movlw	(02h)&0ffh
	subwf	((??_RuszCiag+0+0))&0ffh,w
	btfss	status,0
	goto	u18351
	goto	u18350
u18351:
	goto	l13538
u18350:
	
l13536:; BSR set to: 1

	movlb	0	; () banked
	bsf	(0+(_M+019h))&0ffh,7
	line	1016
	
l13538:
;main.c: 1016: if(!RdPrt(3))
	movlw	(03h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u18361
	goto	u18360
u18361:
	goto	l13544
u18360:
	line	1018
	
l13540:; BSR set to: 0

;main.c: 1017: {
;main.c: 1018: M.RCI=3;
	movlw	low(03h)
	movwf	(0+(_M+024h))&0ffh
	line	1019
	
l13542:; BSR set to: 0

;main.c: 1019: StartRTS(4);
	movlw	(04h)&0ffh
	
	call	_StartRTS
	line	1020
;main.c: 1020: break;
	goto	l986
	line	1022
	
l13544:; BSR set to: 0

;main.c: 1021: }
;main.c: 1022: if(RTS(4)<15-1) return;
	movlw	(04h)&0ffh
	
	call	_RTS
	movwf	(??_RuszCiag+0+0)&0ffh
	movlw	(0Eh)&0ffh
	subwf	((??_RuszCiag+0+0))&0ffh,w
	btfsc	status,0
	goto	u18371
	goto	u18370
u18371:
	goto	l13548
u18370:
	goto	l986
	line	1023
	
l13548:; BSR set to: 1

;main.c: 1023: M.ERR_BTY=0x03;
	movlw	low(03h)
	movlb	0	; () banked
	movwf	(0+(_M+01Ch))&0ffh
	line	1024
	
l13550:; BSR set to: 0

;main.c: 1024: PrintErr(0xE3,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(0E3h)&0ffh
	
	call	_PrintErr
	line	1025
	
l13552:; BSR set to: 0

;main.c: 1025: ErrPTG();
	call	_ErrPTG	;wreg free
	line	1029
	
l13554:
;main.c: 1028: {
;main.c: 1029: if(RTS(4)<1) return;
	movlw	(04h)&0ffh
	
	call	_RTS
	iorlw	0
	btfss	status,2
	goto	u18381
	goto	u18380
u18381:
	goto	l1004
u18380:
	goto	l986
	
l1004:; BSR set to: 1

	line	1030
;main.c: 1030: M._prb_CIG=0;
	movlb	0	; () banked
	bcf	(0+(_M+019h))&0ffh,7
	line	1031
;main.c: 1031: M._RUSZ_CIAG=0;
	bcf	(0+(_M+010h))&0ffh,6
	line	1032
;main.c: 1032: M.RCI=0;
	clrf	(0+(_M+024h))&0ffh
	line	1034
;main.c: 1033: }
;main.c: 1034: }
	goto	l986
	line	982
	
l13558:; BSR set to: 0

	movf	(0+(_M+024h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l991
	xorlw	1^0	; case 1
	skipnz
	goto	l13514
	xorlw	2^1	; case 2
	skipnz
	goto	l13534
	xorlw	3^2	; case 3
	skipnz
	goto	l13554
	goto	l986

	line	1036
	
l986:
	return
	opt stack 0
GLOBAL	__end_of_RuszCiag
	__end_of_RuszCiag:
	signat	_RuszCiag,88
	global	_ReloadCiag

;; *************** function _ReloadCiag *****************
;; Defined at:
;;		line 1041 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RTS
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text19,class=CODE,space=0,reloc=2
global __ptext19
__ptext19:
psect	text19
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	1041
	global	__size_of_ReloadCiag
	__size_of_ReloadCiag	equ	__end_of_ReloadCiag-_ReloadCiag
	
_ReloadCiag:
;incstack = 0
	opt	stack 25
;incstack = 0
	line	1042
	
l13468:
;main.c: 1042: if(RTS(11)>60)
	movlw	(0Bh)&0ffh
	
	call	_RTS
	movwf	(??_ReloadCiag+0+0)&0ffh
	movlw	(03Dh)&0ffh
	subwf	((??_ReloadCiag+0+0))&0ffh,w
	btfss	status,0
	goto	u18261
	goto	u18260
u18261:
	goto	l1008
u18260:
	line	1044
	
l13470:; BSR set to: 1

;main.c: 1043: {
;main.c: 1044: M.LICZNIK_CIG=0;
	movlb	0	; () banked
	clrf	(0+(_M+01Bh))&0ffh
	line	1046
	
l1008:
	return
	opt stack 0
GLOBAL	__end_of_ReloadCiag
	__end_of_ReloadCiag:
	signat	_ReloadCiag,88
	global	_RuszPlomien

;; *************** function _RuszPlomien *****************
;; Defined at:
;;		line 880 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;;		_StartRTS
;;		_RTS
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text20,class=CODE,space=0,reloc=2
global __ptext20
__ptext20:
psect	text20
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	880
	global	__size_of_RuszPlomien
	__size_of_RuszPlomien	equ	__end_of_RuszPlomien-_RuszPlomien
	
_RuszPlomien:
;incstack = 0
	opt	stack 25
;incstack = 0
	line	881
	
l13428:; BSR set to: 0

;main.c: 881: switch(M.RPL)
	goto	l13466
	line	885
	
l13430:; BSR set to: 0

;main.c: 884: {
;main.c: 885: M.RPL=1;
	movlw	low(01h)
	movwf	(0+(_M+023h))&0ffh
	line	886
	
l13432:; BSR set to: 0

;main.c: 886: StartRTS(3);
	movlw	(03h)&0ffh
	
	call	_StartRTS
	line	890
	
l13434:
;main.c: 889: {
;main.c: 890: if(RTS(3)<30) return;
	movlw	(03h)&0ffh
	
	call	_RTS
	movwf	(??_RuszPlomien+0+0)&0ffh
	movlw	(01Eh)&0ffh
	subwf	((??_RuszPlomien+0+0))&0ffh,w
	btfsc	status,0
	goto	u18181
	goto	u18180
u18181:
	goto	l13438
u18180:
	goto	l962
	line	891
	
l13438:; BSR set to: 1

;main.c: 891: M.LICZNIK_PL++;
	movlb	0	; () banked
	incf	(0+(_M+01Ah))&0ffh
	line	892
	
l13440:; BSR set to: 0

;main.c: 892: if(M._RUSZ_RPLM)
	
	btfss	(0+(_M+011h))&0ffh,0
	goto	u18191
	goto	u18190
u18191:
	goto	l963
u18190:
	line	894
	
l13442:; BSR set to: 0

;main.c: 893: {
;main.c: 894: if(!PWM.tpGZ)
	
	btfsc	((c:_PWM)),c,2	;volatile
	goto	u18201
	goto	u18200
u18201:
	goto	l13448
u18200:
	line	896
	
l13444:; BSR set to: 0

;main.c: 895: {
;main.c: 896: if(M.LICZNIK_PL>=3-1)
	lfsr	2,_M+01Ah
	movlw	(02h-1)
	cpfsgt	indf2
	goto	u18211
	goto	u18210
u18211:
	goto	l13460
u18210:
	line	898
	
l13446:; BSR set to: 0

;main.c: 897: {
;main.c: 898: M._OST_PL=1;
	bsf	(0+(_M+019h))&0ffh,2
	line	899
;main.c: 899: M._RUSZ_RPLM=0;
	bcf	(0+(_M+011h))&0ffh,0
	goto	l13460
	line	904
	
l13448:; BSR set to: 0

;main.c: 902: else
;main.c: 903: {
;main.c: 904: if(M.LICZNIK_PL>=2-1)
	movf	(0+(_M+01Ah))&0ffh,w
	btfsc	status,2
	goto	u18221
	goto	u18220
u18221:
	goto	l13460
u18220:
	goto	l13446
	line	911
	
l963:; BSR set to: 0

	line	913
;main.c: 911: else
;main.c: 912: {
;main.c: 913: if(!PWM.tpGZ)
	
	btfsc	((c:_PWM)),c,2	;volatile
	goto	u18231
	goto	u18230
u18231:
	goto	l13456
u18230:
	line	915
	
l13452:; BSR set to: 0

;main.c: 914: {
;main.c: 915: if(M.LICZNIK_PL>=3)
	lfsr	2,_M+01Ah
	movlw	(03h-1)
	cpfsgt	indf2
	goto	u18241
	goto	u18240
u18241:
	goto	l13460
u18240:
	goto	l13446
	line	923
	
l13456:; BSR set to: 0

;main.c: 921: else
;main.c: 922: {
;main.c: 923: if(M.LICZNIK_PL>=2)
	lfsr	2,_M+01Ah
	movlw	(02h-1)
	cpfsgt	indf2
	goto	u18251
	goto	u18250
u18251:
	goto	l13460
u18250:
	goto	l13446
	line	930
	
l13460:; BSR set to: 0

;main.c: 927: }
;main.c: 928: }
;main.c: 929: }
;main.c: 930: StartRTdS(5);
	movlw	(05h)&0ffh
	
	call	_StartRTdS
	line	931
	
l13462:; BSR set to: 1

;main.c: 931: M._RUSZ_PLOMIEN=0;
	movlb	0	; () banked
	bcf	(0+(_M+010h))&0ffh,7
	line	932
	
l13464:; BSR set to: 0

;main.c: 932: M.RPL=0;
	clrf	(0+(_M+023h))&0ffh
	line	934
;main.c: 933: }
;main.c: 934: }
	goto	l962
	line	881
	
l13466:; BSR set to: 0

	movf	(0+(_M+023h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l13430
	xorlw	1^0	; case 1
	skipnz
	goto	l13434
	goto	l962

	line	935
	
l962:
	return
	opt stack 0
GLOBAL	__end_of_RuszPlomien
	__end_of_RuszPlomien:
	signat	_RuszPlomien,88
	global	_ReloadPlomien

;; *************** function _ReloadPlomien *****************
;; Defined at:
;;		line 938 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RTdS
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text21,class=CODE,space=0,reloc=2
global __ptext21
__ptext21:
psect	text21
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	938
	global	__size_of_ReloadPlomien
	__size_of_ReloadPlomien	equ	__end_of_ReloadPlomien-_ReloadPlomien
	
_ReloadPlomien:
;incstack = 0
	opt	stack 25
;incstack = 0
	line	939
	
l13418:
;main.c: 939: if(!M._RUSZ_PLOMIEN&&!M._ZMKCOCW&&!M._ROZRUCH&&(RTdS(5)>9))
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u18141
	goto	u18140
u18141:
	goto	l977
u18140:
	
l13420:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u18151
	goto	u18150
u18151:
	goto	l977
u18150:
	
l13422:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u18161
	goto	u18160
u18161:
	goto	l977
u18160:
	
l13424:; BSR set to: 0

	movlw	(05h)&0ffh
	
	call	_RTdS
	movwf	(??_ReloadPlomien+0+0)&0ffh
	movlw	(0Ah)&0ffh
	subwf	((??_ReloadPlomien+0+0))&0ffh,w
	btfss	status,0
	goto	u18171
	goto	u18170
u18171:
	goto	l977
u18170:
	line	941
	
l13426:; BSR set to: 1

;main.c: 940: {
;main.c: 941: M._RUSZ_RPLM=0;
	movlb	0	; () banked
	bcf	(0+(_M+011h))&0ffh,0
	line	942
;main.c: 942: M._OST_PL=0;
	bcf	(0+(_M+019h))&0ffh,2
	line	943
;main.c: 943: M.LICZNIK_PL=0;
	clrf	(0+(_M+01Ah))&0ffh
	line	945
	
l977:
	return
	opt stack 0
GLOBAL	__end_of_ReloadPlomien
	__end_of_ReloadPlomien:
	signat	_ReloadPlomien,88
	global	_Rozruch

;; *************** function _Rozruch *****************
;; Defined at:
;;		line 639 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:   10
;; This function calls:
;;		_RdPrt
;;		_PrintErr
;;		_ErrPTG
;;		_StartRTS
;;		_PrintNstCW
;;		_RTS
;;		_WritePWM
;;		_GrzejON
;;		_DecyzjaPLM
;;		_DecyzjaPLM2
;;		_FirstPCW4
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text22,class=CODE,space=0,reloc=2
global __ptext22
__ptext22:
psect	text22
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	639
	global	__size_of_Rozruch
	__size_of_Rozruch	equ	__end_of_Rozruch-_Rozruch
	
_Rozruch:
;incstack = 0
	opt	stack 20
;incstack = 0
	line	640
	
l13278:; BSR set to: 0

;main.c: 640: switch(M.ROZ)
	goto	l13392
	line	645
	
l13280:; BSR set to: 0

;main.c: 643: {
;main.c: 645: WritePWM(PWM.MDMOD);
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	
	call	_WritePWM
	line	646
	
l13282:; BSR set to: 0

;main.c: 646: M.ROZ=1;
	movlw	low(01h)
	movwf	(0+(_M+01Dh))&0ffh
	line	647
	
l13284:; BSR set to: 0

;main.c: 647: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	line	652
	
l13286:
;main.c: 651: {
;main.c: 652: if(M._TURBO)
	movlb	0	; () banked
	
	btfss	(0+(_M+019h))&0ffh,0
	goto	u17861
	goto	u17860
u17861:
	goto	l13296
u17860:
	line	654
	
l13288:; BSR set to: 0

;main.c: 653: {
;main.c: 654: if(RdPrt(3)&&!RB0)
	movlw	(03h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17871
	goto	u17870
u17871:
	goto	l894
u17870:
	
l13290:; BSR set to: 0

	btfsc	c:(31752/8),(31752)&7	;volatile
	goto	u17881
	goto	u17880
u17881:
	goto	l894
u17880:
	line	656
	
l13292:; BSR set to: 0

;main.c: 655: {
;main.c: 656: if(RTS(2)<5) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	movwf	(??_Rozruch+0+0)&0ffh
	movlw	(05h)&0ffh
	subwf	((??_Rozruch+0+0))&0ffh,w
	btfsc	status,0
	goto	u17891
	goto	u17890
u17891:
	goto	l895
u17890:
	goto	l896
	
l895:
	line	657
;main.c: 657: M.RCI=0;
	movlb	0	; () banked
	clrf	(0+(_M+024h))&0ffh
	line	658
;main.c: 658: M._RUSZ_CIAG=1;
	bsf	(0+(_M+010h))&0ffh,6
	line	659
;main.c: 659: return;
	goto	l896
	line	660
	
l894:; BSR set to: 0

	line	661
;main.c: 660: }
;main.c: 661: RB0=1;
	bsf	c:(31752/8),(31752)&7	;volatile
	line	663
	
l13296:; BSR set to: 0

;main.c: 662: }
;main.c: 663: M.ROZ=2;
	movlw	low(02h)
	movwf	(0+(_M+01Dh))&0ffh
	line	664
	
l13298:; BSR set to: 0

;main.c: 664: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	line	669
	
l13300:
;main.c: 668: {
;main.c: 669: if(M._TURBO)
	movlb	0	; () banked
	
	btfss	(0+(_M+019h))&0ffh,0
	goto	u17901
	goto	u17900
u17901:
	goto	l13310
u17900:
	line	671
	
l13302:; BSR set to: 0

;main.c: 670: {
;main.c: 671: if(!RdPrt(9)&&RB0)
	movlw	(09h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u17911
	goto	u17910
u17911:
	goto	l13310
u17910:
	
l13304:; BSR set to: 0

	btfss	c:(31752/8),(31752)&7	;volatile
	goto	u17921
	goto	u17920
u17921:
	goto	l13310
u17920:
	line	673
	
l13306:; BSR set to: 0

;main.c: 672: {
;main.c: 673: if(RTS(2)<5-1) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	movwf	(??_Rozruch+0+0)&0ffh
	movlw	(04h)&0ffh
	subwf	((??_Rozruch+0+0))&0ffh,w
	btfsc	status,0
	goto	u17931
	goto	u17930
u17931:
	goto	l895
u17930:
	goto	l896
	line	679
	
l13310:; BSR set to: 0

;main.c: 677: }
;main.c: 678: }
;main.c: 679: M.ROZ=3;
	movlw	low(03h)
	movwf	(0+(_M+01Dh))&0ffh
	line	680
	
l13312:; BSR set to: 0

;main.c: 680: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	line	685
	
l13314:
;main.c: 684: {
;main.c: 685: if(M._TURBO&&!RdPrt(9))
	movlb	0	; () banked
	
	btfss	(0+(_M+019h))&0ffh,0
	goto	u17941
	goto	u17940
u17941:
	goto	l13320
u17940:
	
l13316:; BSR set to: 0

	movlw	(09h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u17951
	goto	u17950
u17951:
	goto	l13320
u17950:
	goto	l895
	line	691
	
l13320:; BSR set to: 0

;main.c: 690: }
;main.c: 691: if(RdPrt(5)&&!RB1)
	movlw	(05h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17961
	goto	u17960
u17961:
	goto	l13334
u17960:
	
l13322:; BSR set to: 0

	btfsc	c:(31753/8),(31753)&7	;volatile
	goto	u17971
	goto	u17970
u17971:
	goto	l13334
u17970:
	line	693
	
l13324:; BSR set to: 0

;main.c: 692: {
;main.c: 693: if(RTS(2)<5) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	movwf	(??_Rozruch+0+0)&0ffh
	movlw	(05h)&0ffh
	subwf	((??_Rozruch+0+0))&0ffh,w
	btfsc	status,0
	goto	u17981
	goto	u17980
u17981:
	goto	l13328
u17980:
	goto	l896
	line	694
	
l13328:; BSR set to: 1

;main.c: 694: M.ERR_BTY=0x06;
	movlw	low(06h)
	movlb	0	; () banked
	movwf	(0+(_M+01Ch))&0ffh
	line	695
	
l13330:; BSR set to: 0

;main.c: 695: PrintErr(0xE6,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(0E6h)&0ffh
	
	call	_PrintErr
	line	696
	
l13332:; BSR set to: 0

;main.c: 696: ErrPTG();
	call	_ErrPTG	;wreg free
	line	698
	
l13334:
;main.c: 697: }
;main.c: 698: PrintNstCW(DtCW.PCW,0);
	movlw	low(0)
	movlb	1	; () banked
	movwf	((?_PrintNstCW))&0ffh
	movf	(0+((c:_DtCW)+03h)),c,w
	
	call	_PrintNstCW
	line	699
	
l13336:; BSR set to: 0

;main.c: 699: GrzejON();
	call	_GrzejON	;wreg free
	line	700
	
l13338:
;main.c: 700: M.ROZ=4;
	movlw	low(04h)
	movlb	0	; () banked
	movwf	(0+(_M+01Dh))&0ffh
	line	701
	
l13340:; BSR set to: 0

;main.c: 701: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	line	706
	
l13342:
;main.c: 705: {
;main.c: 706: if(M._TURBO&&!RdPrt(9))
	movlb	0	; () banked
	
	btfss	(0+(_M+019h))&0ffh,0
	goto	u17991
	goto	u17990
u17991:
	goto	l13348
u17990:
	
l13344:; BSR set to: 0

	movlw	(09h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u18001
	goto	u18000
u18001:
	goto	l13348
u18000:
	goto	l895
	line	712
	
l13348:; BSR set to: 0

;main.c: 711: }
;main.c: 712: if(RdPrt(8)) WritePWM(PWM.MSTART);
	movlw	(08h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u18011
	goto	u18010
u18011:
	goto	l13352
u18010:
	
l13350:; BSR set to: 0

	movf	(0+((c:_PWM)+018h)),c,w	;volatile
	
	call	_WritePWM
	goto	l13354
	line	713
	
l13352:; BSR set to: 0

;main.c: 713: else WritePWM(PWM.MDMOD);
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	
	call	_WritePWM
	line	714
	
l13354:; BSR set to: 0

;main.c: 714: if(RTS(2)<2) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	movwf	(??_Rozruch+0+0)&0ffh
	movlw	(02h)&0ffh
	subwf	((??_Rozruch+0+0))&0ffh,w
	btfsc	status,0
	goto	u18021
	goto	u18020
u18021:
	goto	l13358
u18020:
	goto	l896
	line	716
	
l13358:; BSR set to: 1

;main.c: 716: if(RTS(2)<7)
	movlw	(02h)&0ffh
	
	call	_RTS
	movwf	(??_Rozruch+0+0)&0ffh
	movlw	(07h)&0ffh
	subwf	((??_Rozruch+0+0))&0ffh,w
	btfsc	status,0
	goto	u18031
	goto	u18030
u18031:
	goto	l13370
u18030:
	line	718
	
l13360:; BSR set to: 1

;main.c: 717: {
;main.c: 718: if(RdPrt(5))
	movlw	(05h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u18041
	goto	u18040
u18041:
	goto	l896
u18040:
	line	720
	
l13362:; BSR set to: 0

;main.c: 719: {
;main.c: 720: M.ROZ=5;
	movlw	low(05h)
	movwf	(0+(_M+01Dh))&0ffh
	line	721
	
l13364:; BSR set to: 0

;main.c: 721: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	goto	l896
	line	727
	
l13370:; BSR set to: 1

;main.c: 725: else
;main.c: 726: {
;main.c: 727: DecyzjaPLM();
	call	_DecyzjaPLM	;wreg free
	goto	l896
	line	732
;main.c: 729: }
;main.c: 730: }
;main.c: 732: case 5:
	
l913:; BSR set to: 0

	line	734
;main.c: 733: {
;main.c: 734: if(M._RPM_CW)
	
	btfss	(0+(_M+019h))&0ffh,6
	goto	u18051
	goto	u18050
u18051:
	goto	l914
u18050:
	line	736
	
l13374:
;main.c: 735: {
;main.c: 736: M._ROZRUCH=0;
	movlb	0	; () banked
	bcf	(0+(_M+010h))&0ffh,2
	line	737
;main.c: 737: M.ROZ=0;
	clrf	(0+(_M+01Dh))&0ffh
	line	738
;main.c: 738: return;
	goto	l896
	line	739
	
l914:; BSR set to: 0

	line	740
;main.c: 739: }
;main.c: 740: if(M._TURBO&&!RdPrt(9))
	
	btfss	(0+(_M+019h))&0ffh,0
	goto	u18061
	goto	u18060
u18061:
	goto	l13380
u18060:
	
l13376:; BSR set to: 0

	movlw	(09h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u18071
	goto	u18070
u18071:
	goto	l13380
u18070:
	goto	l895
	line	746
	
l13380:; BSR set to: 0

;main.c: 745: }
;main.c: 746: if(!RdPrt(5))
	movlw	(05h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u18081
	goto	u18080
u18081:
	goto	l13386
u18080:
	line	748
	
l13382:; BSR set to: 0

;main.c: 747: {
;main.c: 748: DecyzjaPLM2();
	call	_DecyzjaPLM2	;wreg free
	goto	l896
	line	751
	
l13386:; BSR set to: 0

;main.c: 750: }
;main.c: 751: if(!M._AKTYWNE_KNF)
	movf	(1+(_M+016h))&0ffh,w
	iorwf (0+(_M+016h))&0ffh,w

	btfss	status,2
	goto	u18091
	goto	u18090
u18091:
	goto	l917
u18090:
	line	753
	
l13388:; BSR set to: 0

;main.c: 752: {
;main.c: 753: WritePWM(FirstPCW4());
	call	_FirstPCW4	;wreg free
	
	call	_WritePWM
	line	754
	
l917:
	line	755
;main.c: 754: }
;main.c: 755: if(RTS(2)<2) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	movwf	(??_Rozruch+0+0)&0ffh
	movlw	(02h)&0ffh
	subwf	((??_Rozruch+0+0))&0ffh,w
	btfsc	status,0
	goto	u18101
	goto	u18100
u18101:
	goto	l13374
u18100:
	goto	l896
	line	640
	
l13392:; BSR set to: 0

	movf	(0+(_M+01Dh))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 6, Range of values is 0 to 5
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           19    10 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l13280
	xorlw	1^0	; case 1
	skipnz
	goto	l13286
	xorlw	2^1	; case 2
	skipnz
	goto	l13300
	xorlw	3^2	; case 3
	skipnz
	goto	l13314
	xorlw	4^3	; case 4
	skipnz
	goto	l13342
	xorlw	5^4	; case 5
	skipnz
	goto	l913
	goto	l896

	line	760
	
l896:
	return
	opt stack 0
GLOBAL	__end_of_Rozruch
	__end_of_Rozruch:
	signat	_Rozruch,88
	global	_FirstPCW4

;; *************** function _FirstPCW4 *****************
;; Defined at:
;;		line 526 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  m               4   19[BANK1 ] long 
;;  maxmod          1   18[BANK1 ] unsigned char 
;;  p2              1   17[BANK1 ] unsigned char 
;;  p               1   16[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        9 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___aldiv
;;		___lmul
;;		___wmul
;; This function is called by:
;;		_Rozruch
;;		_StartMCW4
;; This function uses a non-reentrant model
;;
psect	text23,class=CODE,space=0,reloc=2
global __ptext23
__ptext23:
psect	text23
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	526
	global	__size_of_FirstPCW4
	__size_of_FirstPCW4	equ	__end_of_FirstPCW4-_FirstPCW4
	
_FirstPCW4:
;incstack = 0
	opt	stack 23
;incstack = 0
	line	531
	
l13718:
;rgl.c: 527: signed long m;
;rgl.c: 528: unsigned char maxmod,p,p2;
;rgl.c: 531: if(PWM.MMAXCW<PWM.FIRSTPB) maxmod=PWM.MMAXCW;
	movf	(0+((c:_PWM)+014h)),c,w	;volatile
	cpfslt	(0+((c:_PWM)+01Ah)),c	;volatile
	goto	u18661
	goto	u18660
u18661:
	goto	l1741
u18660:
	
l13720:
	movff	0+((c:_PWM)+01Ah),(FirstPCW4@maxmod)	;volatile
	goto	l13722
	line	532
	
l1741:
;rgl.c: 532: else maxmod=PWM.FIRSTPB;
	movff	0+((c:_PWM)+014h),(FirstPCW4@maxmod)	;volatile
	line	535
	
l13722:
;rgl.c: 535: if(DtCW.CW>=20&&DtCW.CW<=60)
	lfsr	2,(c:_DtCW)+02h
	movlw	(014h-1)
	cpfsgt	indf2
	goto	u18671
	goto	u18670
u18671:
	goto	l13742
u18670:
	
l13724:
	movlw	(03Dh)&0ffh
	cpfslt	(0+((c:_DtCW)+02h)),c
	goto	u18681
	goto	u18680
u18681:
	goto	l13742
u18680:
	line	537
	
l13726:
;rgl.c: 536: {
;rgl.c: 537: m=(60-DtCW.CW)*10;
	movf	(0+((c:_DtCW)+02h)),c,w
	sublw	low(03Ch)
	movlb	1	; () banked
	
	movwf	((?___wmul))&0ffh
	movlw	0
	btfss	status,0
	incf	wreg
	sublw	high(03Ch)
	
	movwf	1+((?___wmul))&0ffh
	movlw	high(0Ah)
	movwf	(1+(?___wmul+02h))&0ffh
	movlw	low(0Ah)
	movwf	(0+(?___wmul+02h))&0ffh
	call	___wmul	;wreg free
	movff	0+?___wmul,(FirstPCW4@m)
	movff	1+?___wmul,(FirstPCW4@m+1)
	movlw	0
	btfsc	((FirstPCW4@m+1))&0ffh,7
	movlw	-1
	movwf	((FirstPCW4@m+2))&0ffh
	movwf	((FirstPCW4@m+3))&0ffh
	line	538
	
l13728:; BSR set to: 1

;rgl.c: 538: m=m/(60-20);
	movff	(FirstPCW4@m),(?___aldiv)
	movff	(FirstPCW4@m+1),(?___aldiv+1)
	movff	(FirstPCW4@m+2),(?___aldiv+2)
	movff	(FirstPCW4@m+3),(?___aldiv+3)
	movlw	low(028h)
	movwf	(0+(?___aldiv+04h))&0ffh
	movlw	high(028h)
	movwf	(1+(?___aldiv+04h))&0ffh
	movlw	low highword(028h)
	movwf	(2+(?___aldiv+04h))&0ffh
	movlw	high highword(028h)
	movwf	(3+(?___aldiv+04h))&0ffh
	call	___aldiv	;wreg free
	
	movff	3+?___aldiv,(FirstPCW4@m+3)
	movff	2+?___aldiv,(FirstPCW4@m+2)
	movff	1+?___aldiv,(FirstPCW4@m+1)
	movff	0+?___aldiv,(FirstPCW4@m)
	
	line	539
	
l13730:; BSR set to: 1

;rgl.c: 539: m=m*(maxmod-PWM.MDMOD);
	movff	(FirstPCW4@m),(?___lmul)
	movff	(FirstPCW4@m+1),(?___lmul+1)
	movff	(FirstPCW4@m+2),(?___lmul+2)
	movff	(FirstPCW4@m+3),(?___lmul+3)
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	movff	(FirstPCW4@maxmod),??_FirstPCW4+0+0
	clrf	(??_FirstPCW4+0+0+1)&0ffh
	subwf	(??_FirstPCW4+0+0)&0ffh
	movlw	0
	subwfb	(??_FirstPCW4+0+1)&0ffh
	movff	??_FirstPCW4+0+0,0+(?___lmul+04h)
	movff	??_FirstPCW4+0+1,1+(?___lmul+04h)
	movlw	0
	btfsc	(1+(?___lmul+04h))&0ffh,7
	movlw	-1
	movwf	(2+(?___lmul+04h))&0ffh
	movwf	(3+(?___lmul+04h))&0ffh
	call	___lmul	;wreg free
	
	movff	3+?___lmul,(FirstPCW4@m+3)
	movff	2+?___lmul,(FirstPCW4@m+2)
	movff	1+?___lmul,(FirstPCW4@m+1)
	movff	0+?___lmul,(FirstPCW4@m)
	
	line	540
	
l13732:; BSR set to: 1

;rgl.c: 540: if(m<0) m=0;
	btfss	((FirstPCW4@m+3))&0ffh,7
	goto	u18691
	goto	u18690
u18691:
	goto	l13736
u18690:
	
l13734:; BSR set to: 1

	clrf	((FirstPCW4@m))&0ffh
	clrf	((FirstPCW4@m+1))&0ffh
	clrf	((FirstPCW4@m+2))&0ffh
	clrf	((FirstPCW4@m+3))&0ffh

	line	541
	
l13736:; BSR set to: 1

;rgl.c: 541: m=m/10+PWM.MDMOD;
	movff	(FirstPCW4@m),(?___aldiv)
	movff	(FirstPCW4@m+1),(?___aldiv+1)
	movff	(FirstPCW4@m+2),(?___aldiv+2)
	movff	(FirstPCW4@m+3),(?___aldiv+3)
	movlw	low(0Ah)
	movwf	(0+(?___aldiv+04h))&0ffh
	movlw	high(0Ah)
	movwf	(1+(?___aldiv+04h))&0ffh
	movlw	low highword(0Ah)
	movwf	(2+(?___aldiv+04h))&0ffh
	movlw	high highword(0Ah)
	movwf	(3+(?___aldiv+04h))&0ffh
	call	___aldiv	;wreg free
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	addwf	(0+?___aldiv)&0ffh,w
	movwf	((FirstPCW4@m))&0ffh
	movlw	0
	addwfc	(1+?___aldiv)&0ffh,w
	movwf	1+((FirstPCW4@m))&0ffh
	movlw	0
	addwfc	(2+?___aldiv)&0ffh,w
	movwf	2+((FirstPCW4@m))&0ffh
	movlw	0
	addwfc	(3+?___aldiv)&0ffh,w
	movwf	3+((FirstPCW4@m))&0ffh
	line	542
	
l13738:; BSR set to: 1

;rgl.c: 542: if(m>0xff) p=maxmod;
	movf	((FirstPCW4@m+3))&0ffh,w
	xorlw	80h
	addlw	-(0)^80h
	
	bnz	u18705
	movlw	0
	subwf	((FirstPCW4@m+2))&0ffh,w
	bnz	u18705
	movlw	01h
	subwf	((FirstPCW4@m+1))&0ffh,w
	bnz	u18705
	movlw	0
	subwf	((FirstPCW4@m))&0ffh,w
u18705:

	btfss	status,0
	goto	u18701
	goto	u18700
u18701:
	goto	l1745
u18700:
	
l13740:; BSR set to: 1

	movff	(FirstPCW4@maxmod),(FirstPCW4@p)
	goto	l13750
	line	543
	
l1745:; BSR set to: 1

;rgl.c: 543: else p=m;
	movff	(FirstPCW4@m),(FirstPCW4@p)
	goto	l13750
	line	547
	
l13742:
;rgl.c: 545: else
;rgl.c: 546: {
;rgl.c: 547: if(DtCW.CW<20) p=maxmod;
	movlw	(014h)&0ffh
	cpfslt	(0+((c:_DtCW)+02h)),c
	goto	u18711
	goto	u18710
u18711:
	goto	l13746
u18710:
	
l13744:
	movff	(FirstPCW4@maxmod),(FirstPCW4@p)
	line	548
	
l13746:
;rgl.c: 548: if(DtCW.CW>60) p=PWM.MDMOD;
	lfsr	2,(c:_DtCW)+02h
	movlw	(03Dh-1)
	cpfsgt	indf2
	goto	u18721
	goto	u18720
u18721:
	goto	l13750
u18720:
	
l13748:
	movff	0+((c:_PWM)+05h),(FirstPCW4@p)	;volatile
	line	552
	
l13750:
;rgl.c: 549: }
;rgl.c: 552: m=(DtCW.PCW-35)*10;
	movlw	low(-35)
	addwf	(0+((c:_DtCW)+03h)),c,w
	movlb	1	; () banked
	
	movwf	((?___wmul))&0ffh
	clrf	1+((?___wmul))&0ffh
	movlw	high(-35)
	addwfc	1+((?___wmul))&0ffh
	movlw	high(0Ah)
	movwf	(1+(?___wmul+02h))&0ffh
	movlw	low(0Ah)
	movwf	(0+(?___wmul+02h))&0ffh
	call	___wmul	;wreg free
	movff	0+?___wmul,(FirstPCW4@m)
	movff	1+?___wmul,(FirstPCW4@m+1)
	movlw	0
	btfsc	((FirstPCW4@m+1))&0ffh,7
	movlw	-1
	movwf	((FirstPCW4@m+2))&0ffh
	movwf	((FirstPCW4@m+3))&0ffh
	line	553
	
l13752:; BSR set to: 1

;rgl.c: 553: m=m/(60-35);
	movff	(FirstPCW4@m),(?___aldiv)
	movff	(FirstPCW4@m+1),(?___aldiv+1)
	movff	(FirstPCW4@m+2),(?___aldiv+2)
	movff	(FirstPCW4@m+3),(?___aldiv+3)
	movlw	low(019h)
	movwf	(0+(?___aldiv+04h))&0ffh
	movlw	high(019h)
	movwf	(1+(?___aldiv+04h))&0ffh
	movlw	low highword(019h)
	movwf	(2+(?___aldiv+04h))&0ffh
	movlw	high highword(019h)
	movwf	(3+(?___aldiv+04h))&0ffh
	call	___aldiv	;wreg free
	
	movff	3+?___aldiv,(FirstPCW4@m+3)
	movff	2+?___aldiv,(FirstPCW4@m+2)
	movff	1+?___aldiv,(FirstPCW4@m+1)
	movff	0+?___aldiv,(FirstPCW4@m)
	
	line	554
	
l13754:; BSR set to: 1

;rgl.c: 554: m=m*(maxmod-PWM.MDMOD);
	movff	(FirstPCW4@m),(?___lmul)
	movff	(FirstPCW4@m+1),(?___lmul+1)
	movff	(FirstPCW4@m+2),(?___lmul+2)
	movff	(FirstPCW4@m+3),(?___lmul+3)
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	movff	(FirstPCW4@maxmod),??_FirstPCW4+0+0
	clrf	(??_FirstPCW4+0+0+1)&0ffh
	subwf	(??_FirstPCW4+0+0)&0ffh
	movlw	0
	subwfb	(??_FirstPCW4+0+1)&0ffh
	movff	??_FirstPCW4+0+0,0+(?___lmul+04h)
	movff	??_FirstPCW4+0+1,1+(?___lmul+04h)
	movlw	0
	btfsc	(1+(?___lmul+04h))&0ffh,7
	movlw	-1
	movwf	(2+(?___lmul+04h))&0ffh
	movwf	(3+(?___lmul+04h))&0ffh
	call	___lmul	;wreg free
	
	movff	3+?___lmul,(FirstPCW4@m+3)
	movff	2+?___lmul,(FirstPCW4@m+2)
	movff	1+?___lmul,(FirstPCW4@m+1)
	movff	0+?___lmul,(FirstPCW4@m)
	
	line	555
	
l13756:; BSR set to: 1

;rgl.c: 555: if(m<0) m=0;
	btfss	((FirstPCW4@m+3))&0ffh,7
	goto	u18731
	goto	u18730
u18731:
	goto	l13760
u18730:
	
l13758:; BSR set to: 1

	clrf	((FirstPCW4@m))&0ffh
	clrf	((FirstPCW4@m+1))&0ffh
	clrf	((FirstPCW4@m+2))&0ffh
	clrf	((FirstPCW4@m+3))&0ffh

	line	556
	
l13760:; BSR set to: 1

;rgl.c: 556: m=m/10+PWM.MDMOD;
	movff	(FirstPCW4@m),(?___aldiv)
	movff	(FirstPCW4@m+1),(?___aldiv+1)
	movff	(FirstPCW4@m+2),(?___aldiv+2)
	movff	(FirstPCW4@m+3),(?___aldiv+3)
	movlw	low(0Ah)
	movwf	(0+(?___aldiv+04h))&0ffh
	movlw	high(0Ah)
	movwf	(1+(?___aldiv+04h))&0ffh
	movlw	low highword(0Ah)
	movwf	(2+(?___aldiv+04h))&0ffh
	movlw	high highword(0Ah)
	movwf	(3+(?___aldiv+04h))&0ffh
	call	___aldiv	;wreg free
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	addwf	(0+?___aldiv)&0ffh,w
	movwf	((FirstPCW4@m))&0ffh
	movlw	0
	addwfc	(1+?___aldiv)&0ffh,w
	movwf	1+((FirstPCW4@m))&0ffh
	movlw	0
	addwfc	(2+?___aldiv)&0ffh,w
	movwf	2+((FirstPCW4@m))&0ffh
	movlw	0
	addwfc	(3+?___aldiv)&0ffh,w
	movwf	3+((FirstPCW4@m))&0ffh
	line	557
	
l13762:; BSR set to: 1

;rgl.c: 557: if(m>0xff) p2=maxmod;
	movf	((FirstPCW4@m+3))&0ffh,w
	xorlw	80h
	addlw	-(0)^80h
	
	bnz	u18745
	movlw	0
	subwf	((FirstPCW4@m+2))&0ffh,w
	bnz	u18745
	movlw	01h
	subwf	((FirstPCW4@m+1))&0ffh,w
	bnz	u18745
	movlw	0
	subwf	((FirstPCW4@m))&0ffh,w
u18745:

	btfss	status,0
	goto	u18741
	goto	u18740
u18741:
	goto	l1751
u18740:
	
l13764:; BSR set to: 1

	movff	(FirstPCW4@maxmod),(FirstPCW4@p2)
	goto	l13766
	line	558
	
l1751:; BSR set to: 1

;rgl.c: 558: else p2=m;
	movff	(FirstPCW4@m),(FirstPCW4@p2)
	line	561
	
l13766:; BSR set to: 1

;rgl.c: 561: if(p>p2) p=p2;
	movf	((FirstPCW4@p))&0ffh,w
	cpfslt	((FirstPCW4@p2))&0ffh
	goto	u18751
	goto	u18750
u18751:
	goto	l1753
u18750:
	
l13768:; BSR set to: 1

	movff	(FirstPCW4@p2),(FirstPCW4@p)
	
l1753:; BSR set to: 1

	line	564
;rgl.c: 564: if(DtCW.DCW>=0&&DtCW.DCW<=40)
	btfsc	(0+((c:_DtCW)+07h)),c,7
	goto	u18761
	goto	u18760
u18761:
	goto	l13788
u18760:
	
l13770:; BSR set to: 1

	movf	(0+((c:_DtCW)+07h)),c,w
	xorlw	80h
	addlw	-((029h)^80h)
	btfsc	status,0
	goto	u18771
	goto	u18770
u18771:
	goto	l13788
u18770:
	line	566
	
l13772:; BSR set to: 1

;rgl.c: 565: {
;rgl.c: 566: m=DtCW.DCW*10;
	movf	(0+((c:_DtCW)+07h)),c,w
	movwf	((?___wmul))&0ffh
	clrf	((?___wmul+1))&0ffh
	btfsc	((?___wmul))&0ffh,7
	decf	((?___wmul+1))&0ffh
	movlw	high(0Ah)
	movwf	(1+(?___wmul+02h))&0ffh
	movlw	low(0Ah)
	movwf	(0+(?___wmul+02h))&0ffh
	call	___wmul	;wreg free
	movff	0+?___wmul,(FirstPCW4@m)
	movff	1+?___wmul,(FirstPCW4@m+1)
	movlw	0
	btfsc	((FirstPCW4@m+1))&0ffh,7
	movlw	-1
	movwf	((FirstPCW4@m+2))&0ffh
	movwf	((FirstPCW4@m+3))&0ffh
	line	567
	
l13774:; BSR set to: 1

;rgl.c: 567: m=m/(40-0);
	movff	(FirstPCW4@m),(?___aldiv)
	movff	(FirstPCW4@m+1),(?___aldiv+1)
	movff	(FirstPCW4@m+2),(?___aldiv+2)
	movff	(FirstPCW4@m+3),(?___aldiv+3)
	movlw	low(028h)
	movwf	(0+(?___aldiv+04h))&0ffh
	movlw	high(028h)
	movwf	(1+(?___aldiv+04h))&0ffh
	movlw	low highword(028h)
	movwf	(2+(?___aldiv+04h))&0ffh
	movlw	high highword(028h)
	movwf	(3+(?___aldiv+04h))&0ffh
	call	___aldiv	;wreg free
	
	movff	3+?___aldiv,(FirstPCW4@m+3)
	movff	2+?___aldiv,(FirstPCW4@m+2)
	movff	1+?___aldiv,(FirstPCW4@m+1)
	movff	0+?___aldiv,(FirstPCW4@m)
	
	line	568
	
l13776:; BSR set to: 1

;rgl.c: 568: m=m*(maxmod-PWM.MDMOD);
	movff	(FirstPCW4@m),(?___lmul)
	movff	(FirstPCW4@m+1),(?___lmul+1)
	movff	(FirstPCW4@m+2),(?___lmul+2)
	movff	(FirstPCW4@m+3),(?___lmul+3)
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	movff	(FirstPCW4@maxmod),??_FirstPCW4+0+0
	clrf	(??_FirstPCW4+0+0+1)&0ffh
	subwf	(??_FirstPCW4+0+0)&0ffh
	movlw	0
	subwfb	(??_FirstPCW4+0+1)&0ffh
	movff	??_FirstPCW4+0+0,0+(?___lmul+04h)
	movff	??_FirstPCW4+0+1,1+(?___lmul+04h)
	movlw	0
	btfsc	(1+(?___lmul+04h))&0ffh,7
	movlw	-1
	movwf	(2+(?___lmul+04h))&0ffh
	movwf	(3+(?___lmul+04h))&0ffh
	call	___lmul	;wreg free
	
	movff	3+?___lmul,(FirstPCW4@m+3)
	movff	2+?___lmul,(FirstPCW4@m+2)
	movff	1+?___lmul,(FirstPCW4@m+1)
	movff	0+?___lmul,(FirstPCW4@m)
	
	line	569
	
l13778:; BSR set to: 1

;rgl.c: 569: if(m<0) m=0;
	btfss	((FirstPCW4@m+3))&0ffh,7
	goto	u18781
	goto	u18780
u18781:
	goto	l13782
u18780:
	
l13780:; BSR set to: 1

	clrf	((FirstPCW4@m))&0ffh
	clrf	((FirstPCW4@m+1))&0ffh
	clrf	((FirstPCW4@m+2))&0ffh
	clrf	((FirstPCW4@m+3))&0ffh

	line	570
	
l13782:; BSR set to: 1

;rgl.c: 570: m=m/10+PWM.MDMOD;
	movff	(FirstPCW4@m),(?___aldiv)
	movff	(FirstPCW4@m+1),(?___aldiv+1)
	movff	(FirstPCW4@m+2),(?___aldiv+2)
	movff	(FirstPCW4@m+3),(?___aldiv+3)
	movlw	low(0Ah)
	movwf	(0+(?___aldiv+04h))&0ffh
	movlw	high(0Ah)
	movwf	(1+(?___aldiv+04h))&0ffh
	movlw	low highword(0Ah)
	movwf	(2+(?___aldiv+04h))&0ffh
	movlw	high highword(0Ah)
	movwf	(3+(?___aldiv+04h))&0ffh
	call	___aldiv	;wreg free
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	addwf	(0+?___aldiv)&0ffh,w
	movwf	((FirstPCW4@m))&0ffh
	movlw	0
	addwfc	(1+?___aldiv)&0ffh,w
	movwf	1+((FirstPCW4@m))&0ffh
	movlw	0
	addwfc	(2+?___aldiv)&0ffh,w
	movwf	2+((FirstPCW4@m))&0ffh
	movlw	0
	addwfc	(3+?___aldiv)&0ffh,w
	movwf	3+((FirstPCW4@m))&0ffh
	line	571
	
l13784:; BSR set to: 1

;rgl.c: 571: if(m>0xff) p2=maxmod;
	movf	((FirstPCW4@m+3))&0ffh,w
	xorlw	80h
	addlw	-(0)^80h
	
	bnz	u18795
	movlw	0
	subwf	((FirstPCW4@m+2))&0ffh,w
	bnz	u18795
	movlw	01h
	subwf	((FirstPCW4@m+1))&0ffh,w
	bnz	u18795
	movlw	0
	subwf	((FirstPCW4@m))&0ffh,w
u18795:

	btfss	status,0
	goto	u18791
	goto	u18790
u18791:
	goto	l1756
u18790:
	
l13786:; BSR set to: 1

	movff	(FirstPCW4@maxmod),(FirstPCW4@p2)
	goto	l13794
	line	572
	
l1756:; BSR set to: 1

;rgl.c: 572: else p2=m;
	movff	(FirstPCW4@m),(FirstPCW4@p2)
	goto	l13794
	line	576
	
l13788:; BSR set to: 1

;rgl.c: 574: else
;rgl.c: 575: {
;rgl.c: 576: if(DtCW.DCW>40) p2=maxmod;
	movf	(0+((c:_DtCW)+07h)),c,w
	xorlw	80h
	addlw	-((029h)^80h)
	btfss	status,0
	goto	u18801
	goto	u18800
u18801:
	goto	l1759
u18800:
	
l13790:; BSR set to: 1

	movff	(FirstPCW4@maxmod),(FirstPCW4@p2)
	
l1759:; BSR set to: 1

	line	577
;rgl.c: 577: if(DtCW.DCW<0) p2=PWM.MDMOD;
	btfss	(0+((c:_DtCW)+07h)),c,7
	goto	u18811
	goto	u18810
u18811:
	goto	l13794
u18810:
	
l13792:; BSR set to: 1

	movff	0+((c:_PWM)+05h),(FirstPCW4@p2)	;volatile
	line	581
	
l13794:; BSR set to: 1

;rgl.c: 578: }
;rgl.c: 581: if(p>p2) p=p2;
	movf	((FirstPCW4@p))&0ffh,w
	cpfslt	((FirstPCW4@p2))&0ffh
	goto	u18821
	goto	u18820
u18821:
	goto	l13798
u18820:
	
l13796:; BSR set to: 1

	movff	(FirstPCW4@p2),(FirstPCW4@p)
	line	583
	
l13798:; BSR set to: 1

;rgl.c: 583: return p;
	movf	((FirstPCW4@p))&0ffh,w
	line	584
	
l1762:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_FirstPCW4
	__end_of_FirstPCW4:
	signat	_FirstPCW4,89
	global	___lmul

;; *************** function ___lmul *****************
;; Defined at:
;;		line 3 in file "C:\Program Files\Microchip\xc8\v1.20\sources\common\lmul.c"
;; Parameters:    Size  Location     Type
;;  multiplier      4    0[BANK1 ] unsigned long 
;;  multiplicand    4    4[BANK1 ] unsigned long 
;; Auto vars:     Size  Location     Type
;;  product         4    8[BANK1 ] unsigned long 
;; Return value:  Size  Location     Type
;;                  4    0[BANK1 ] unsigned long 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       12 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FirstPCW4
;;		_ModZgCW4
;; This function uses a non-reentrant model
;;
psect	text24,class=CODE,space=0,reloc=2
global __ptext24
__ptext24:
psect	text24
	file	"C:\Program Files\Microchip\xc8\v1.20\sources\common\lmul.c"
	line	3
	global	__size_of___lmul
	__size_of___lmul	equ	__end_of___lmul-___lmul
	
___lmul:; BSR set to: 1

;incstack = 0
	opt	stack 24
;incstack = 0
	line	4
	
l14864:; BSR set to: 1

	clrf	((___lmul@product))&0ffh
	clrf	((___lmul@product+1))&0ffh
	clrf	((___lmul@product+2))&0ffh
	clrf	((___lmul@product+3))&0ffh

	line	6
	
l3134:; BSR set to: 1

	line	7
	
	btfss	((___lmul@multiplier))&0ffh,(0)&7
	goto	u20901
	goto	u20900
u20901:
	goto	l14868
u20900:
	line	8
	
l14866:; BSR set to: 1

	movf	((___lmul@multiplicand))&0ffh,w
	addwf	((___lmul@product))&0ffh
	movf	((___lmul@multiplicand+1))&0ffh,w
	addwfc	((___lmul@product+1))&0ffh
	movf	((___lmul@multiplicand+2))&0ffh,w
	addwfc	((___lmul@product+2))&0ffh
	movf	((___lmul@multiplicand+3))&0ffh,w
	addwfc	((___lmul@product+3))&0ffh
	line	9
	
l14868:; BSR set to: 1

	bcf	status,0
	rlcf	((___lmul@multiplicand))&0ffh
	rlcf	((___lmul@multiplicand+1))&0ffh
	rlcf	((___lmul@multiplicand+2))&0ffh
	rlcf	((___lmul@multiplicand+3))&0ffh
	line	10
	
l14870:; BSR set to: 1

	bcf	status,0
	rrcf	((___lmul@multiplier+3))&0ffh
	rrcf	((___lmul@multiplier+2))&0ffh
	rrcf	((___lmul@multiplier+1))&0ffh
	rrcf	((___lmul@multiplier))&0ffh
	line	11
	movf	((___lmul@multiplier+3))&0ffh,w
	iorwf ((___lmul@multiplier))&0ffh,w
	iorwf ((___lmul@multiplier+1))&0ffh,w
	iorwf ((___lmul@multiplier+2))&0ffh,w

	btfss	status,2
	goto	u20911
	goto	u20910
u20911:
	goto	l3134
u20910:
	
l3136:; BSR set to: 1

	line	12
	movff	(___lmul@product),(?___lmul)
	movff	(___lmul@product+1),(?___lmul+1)
	movff	(___lmul@product+2),(?___lmul+2)
	movff	(___lmul@product+3),(?___lmul+3)
	line	13
	
l3137:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of___lmul
	__end_of___lmul:
	signat	___lmul,8316
	global	___aldiv

;; *************** function ___aldiv *****************
;; Defined at:
;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.20\sources\common\aldiv.c"
;; Parameters:    Size  Location     Type
;;  dividend        4    0[BANK1 ] long 
;;  divisor         4    4[BANK1 ] long 
;; Auto vars:     Size  Location     Type
;;  quotient        4   10[BANK1 ] long 
;;  sign            1    9[BANK1 ] unsigned char 
;;  counter         1    8[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  4    0[BANK1 ] long 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       14 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FirstPCW4
;;		_ModZgCW4
;; This function uses a non-reentrant model
;;
psect	text25,class=CODE,space=0,reloc=2
global __ptext25
__ptext25:
psect	text25
	file	"C:\Program Files\Microchip\xc8\v1.20\sources\common\aldiv.c"
	line	10
	global	__size_of___aldiv
	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
	
___aldiv:; BSR set to: 1

;incstack = 0
	opt	stack 24
;incstack = 0
	line	14
	
l14822:; BSR set to: 1

	clrf	((___aldiv@sign))&0ffh
	line	15
	btfss	((___aldiv@divisor+3))&0ffh,7
	goto	u20841
	goto	u20840
u20841:
	goto	l14828
u20840:
	line	16
	
l14824:; BSR set to: 1

	comf	((___aldiv@divisor+3))&0ffh
	comf	((___aldiv@divisor+2))&0ffh
	comf	((___aldiv@divisor+1))&0ffh
	negf	((___aldiv@divisor))&0ffh
	movlw	0
	addwfc	((___aldiv@divisor+1))&0ffh
	addwfc	((___aldiv@divisor+2))&0ffh
	addwfc	((___aldiv@divisor+3))&0ffh
	line	17
	
l14826:; BSR set to: 1

	movlw	low(01h)
	movwf	((___aldiv@sign))&0ffh
	line	19
	
l14828:; BSR set to: 1

	btfss	((___aldiv@dividend+3))&0ffh,7
	goto	u20851
	goto	u20850
u20851:
	goto	l14834
u20850:
	line	20
	
l14830:; BSR set to: 1

	comf	((___aldiv@dividend+3))&0ffh
	comf	((___aldiv@dividend+2))&0ffh
	comf	((___aldiv@dividend+1))&0ffh
	negf	((___aldiv@dividend))&0ffh
	movlw	0
	addwfc	((___aldiv@dividend+1))&0ffh
	addwfc	((___aldiv@dividend+2))&0ffh
	addwfc	((___aldiv@dividend+3))&0ffh
	line	21
	
l14832:; BSR set to: 1

	movlw	(01h)&0ffh
	xorwf	((___aldiv@sign))&0ffh
	line	23
	
l14834:; BSR set to: 1

	clrf	((___aldiv@quotient))&0ffh
	clrf	((___aldiv@quotient+1))&0ffh
	clrf	((___aldiv@quotient+2))&0ffh
	clrf	((___aldiv@quotient+3))&0ffh

	line	24
	
l14836:; BSR set to: 1

	movf	((___aldiv@divisor+3))&0ffh,w
	iorwf ((___aldiv@divisor))&0ffh,w
	iorwf ((___aldiv@divisor+1))&0ffh,w
	iorwf ((___aldiv@divisor+2))&0ffh,w

	btfsc	status,2
	goto	u20861
	goto	u20860
u20861:
	goto	l14856
u20860:
	line	25
	
l14838:; BSR set to: 1

	movlw	low(01h)
	movwf	((___aldiv@counter))&0ffh
	line	26
	goto	l14842
	line	27
	
l14840:; BSR set to: 1

	bcf	status,0
	rlcf	((___aldiv@divisor))&0ffh
	rlcf	((___aldiv@divisor+1))&0ffh
	rlcf	((___aldiv@divisor+2))&0ffh
	rlcf	((___aldiv@divisor+3))&0ffh
	line	28
	incf	((___aldiv@counter))&0ffh
	line	26
	
l14842:; BSR set to: 1

	
	btfss	((___aldiv@divisor+3))&0ffh,(31)&7
	goto	u20871
	goto	u20870
u20871:
	goto	l14840
u20870:
	line	31
	
l14844:; BSR set to: 1

	bcf	status,0
	rlcf	((___aldiv@quotient))&0ffh
	rlcf	((___aldiv@quotient+1))&0ffh
	rlcf	((___aldiv@quotient+2))&0ffh
	rlcf	((___aldiv@quotient+3))&0ffh
	line	32
	
l14846:; BSR set to: 1

	movf	((___aldiv@divisor))&0ffh,w
	subwf	((___aldiv@dividend))&0ffh,w
	movf	((___aldiv@divisor+1))&0ffh,w
	subwfb	((___aldiv@dividend+1))&0ffh,w
	movf	((___aldiv@divisor+2))&0ffh,w
	subwfb	((___aldiv@dividend+2))&0ffh,w
	movf	((___aldiv@divisor+3))&0ffh,w
	subwfb	((___aldiv@dividend+3))&0ffh,w
	btfss	status,0
	goto	u20881
	goto	u20880
u20881:
	goto	l14852
u20880:
	line	33
	
l14848:; BSR set to: 1

	movf	((___aldiv@divisor))&0ffh,w
	subwf	((___aldiv@dividend))&0ffh
	movf	((___aldiv@divisor+1))&0ffh,w
	subwfb	((___aldiv@dividend+1))&0ffh
	movf	((___aldiv@divisor+2))&0ffh,w
	subwfb	((___aldiv@dividend+2))&0ffh
	movf	((___aldiv@divisor+3))&0ffh,w
	subwfb	((___aldiv@dividend+3))&0ffh
	line	34
	
l14850:; BSR set to: 1

	bsf	(0+(0/8)+(___aldiv@quotient))&0ffh,(0)&7
	line	36
	
l14852:; BSR set to: 1

	bcf	status,0
	rrcf	((___aldiv@divisor+3))&0ffh
	rrcf	((___aldiv@divisor+2))&0ffh
	rrcf	((___aldiv@divisor+1))&0ffh
	rrcf	((___aldiv@divisor))&0ffh
	line	37
	
l14854:; BSR set to: 1

	decfsz	((___aldiv@counter))&0ffh
	
	goto	l14844
	line	39
	
l14856:; BSR set to: 1

	movf	((___aldiv@sign))&0ffh,w
	btfsc	status,2
	goto	u20891
	goto	u20890
u20891:
	goto	l14860
u20890:
	line	40
	
l14858:; BSR set to: 1

	comf	((___aldiv@quotient+3))&0ffh
	comf	((___aldiv@quotient+2))&0ffh
	comf	((___aldiv@quotient+1))&0ffh
	negf	((___aldiv@quotient))&0ffh
	movlw	0
	addwfc	((___aldiv@quotient+1))&0ffh
	addwfc	((___aldiv@quotient+2))&0ffh
	addwfc	((___aldiv@quotient+3))&0ffh
	line	41
	
l14860:; BSR set to: 1

	movff	(___aldiv@quotient),(?___aldiv)
	movff	(___aldiv@quotient+1),(?___aldiv+1)
	movff	(___aldiv@quotient+2),(?___aldiv+2)
	movff	(___aldiv@quotient+3),(?___aldiv+3)
	line	42
	
l2715:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of___aldiv
	__end_of___aldiv:
	signat	___aldiv,8316
	global	_DecyzjaPLM2

;; *************** function _DecyzjaPLM2 *****************
;; Defined at:
;;		line 778 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    9
;; This function calls:
;;		_RdPrt
;;		_PrintErr
;;		_ErrPTG
;; This function is called by:
;;		_Rozruch
;; This function uses a non-reentrant model
;;
psect	text26,class=CODE,space=0,reloc=2
global __ptext26
__ptext26:
psect	text26
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	778
	global	__size_of_DecyzjaPLM2
	__size_of_DecyzjaPLM2	equ	__end_of_DecyzjaPLM2-_DecyzjaPLM2
	
_DecyzjaPLM2:; BSR set to: 1

;incstack = 0
	opt	stack 20
;incstack = 0
	line	779
	
l13676:; BSR set to: 0

;main.c: 779: if(M._TURBO)
	
	btfss	(0+(_M+019h))&0ffh,0
	goto	u18531
	goto	u18530
u18531:
	goto	l928
u18530:
	line	781
	
l13678:; BSR set to: 0

;main.c: 780: {
;main.c: 781: if(RB0)
	btfss	c:(31752/8),(31752)&7	;volatile
	goto	u18541
	goto	u18540
u18541:
	goto	l13694
u18540:
	line	784
	
l13680:; BSR set to: 0

;main.c: 782: {
;main.c: 784: if(RA6&&RA7)
	btfss	c:(31750/8),(31750)&7	;volatile
	goto	u18551
	goto	u18550
u18551:
	goto	l944
u18550:
	
l13682:; BSR set to: 0

	btfss	c:(31751/8),(31751)&7	;volatile
	goto	u18561
	goto	u18560
u18561:
	goto	l944
u18560:
	line	786
	
l13684:; BSR set to: 0

;main.c: 785: {
;main.c: 786: if(M._OST_PL)
	
	btfss	(0+(_M+019h))&0ffh,2
	goto	u18571
	goto	u18570
u18571:
	goto	l931
u18570:
	line	788
	
l13686:; BSR set to: 0

;main.c: 787: {
;main.c: 788: M.ERR_BTY=0x01;
	movlw	low(01h)
	movwf	(0+(_M+01Ch))&0ffh
	line	789
	
l13688:; BSR set to: 0

;main.c: 789: PrintErr(0x01,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(01h)&0ffh
	
	call	_PrintErr
	line	790
	
l13690:; BSR set to: 0

;main.c: 790: ErrPTG();
	call	_ErrPTG	;wreg free
	line	791
;main.c: 791: }
	goto	l944
	line	792
	
l931:; BSR set to: 0

	line	794
;main.c: 792: else
;main.c: 793: {
;main.c: 794: M.RPL=0;
	clrf	(0+(_M+023h))&0ffh
	line	795
;main.c: 795: M._RUSZ_PLOMIEN=1;
	bsf	(0+(_M+010h))&0ffh,7
	line	796
;main.c: 796: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
	tstfsz	(0+(_M+01Ah))&0ffh
	goto	u18581
	goto	u18580
u18581:
	goto	l933
u18580:
	
l13692:; BSR set to: 0

	bsf	(0+(_M+011h))&0ffh,0
	
l933:; BSR set to: 0

	line	797
;main.c: 797: M._ROZRUCH=0;
	bcf	(0+(_M+010h))&0ffh,2
	line	798
;main.c: 798: M.ROZ=0;
	clrf	(0+(_M+01Dh))&0ffh
	goto	l944
	line	804
	
l13694:; BSR set to: 0

;main.c: 802: else
;main.c: 803: {
;main.c: 804: if(RdPrt(4))
	movlw	(04h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u18591
	goto	u18590
u18591:
	goto	l944
u18590:
	line	806
	
l13696:; BSR set to: 0

;main.c: 805: {
;main.c: 806: if(M._OST_PL)
	
	btfss	(0+(_M+019h))&0ffh,2
	goto	u18601
	goto	u18600
u18601:
	goto	l936
u18600:
	line	808
	
l13698:; BSR set to: 0

;main.c: 807: {
;main.c: 808: M.ERR_BTY=0x01;
	movlw	low(01h)
	movwf	(0+(_M+01Ch))&0ffh
	line	809
	
l13700:; BSR set to: 0

;main.c: 809: PrintErr(0x01,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(01h)&0ffh
	
	call	_PrintErr
	goto	l13690
	line	812
	
l936:; BSR set to: 0

	line	814
;main.c: 812: else
;main.c: 813: {
;main.c: 814: M.RPL=0;
	clrf	(0+(_M+023h))&0ffh
	line	815
;main.c: 815: M._RUSZ_PLOMIEN=1;
	bsf	(0+(_M+010h))&0ffh,7
	line	816
;main.c: 816: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
	tstfsz	(0+(_M+01Ah))&0ffh
	goto	u18611
	goto	u18610
u18611:
	goto	l933
u18610:
	goto	l13692
	line	823
	
l928:; BSR set to: 0

	line	826
;main.c: 823: else
;main.c: 824: {
;main.c: 826: if(RC0&&RA7)
	btfss	c:(31760/8),(31760)&7	;volatile
	goto	u18621
	goto	u18620
u18621:
	goto	l944
u18620:
	
l13706:; BSR set to: 0

	btfss	c:(31751/8),(31751)&7	;volatile
	goto	u18631
	goto	u18630
u18631:
	goto	l944
u18630:
	line	828
	
l13708:; BSR set to: 0

;main.c: 827: {
;main.c: 828: if(M._OST_PL)
	
	btfss	(0+(_M+019h))&0ffh,2
	goto	u18641
	goto	u18640
u18641:
	goto	l941
u18640:
	line	830
	
l13710:; BSR set to: 0

;main.c: 829: {
;main.c: 830: M.ERR_BTY=0x01;
	movlw	low(01h)
	movwf	(0+(_M+01Ch))&0ffh
	line	831
	
l13712:; BSR set to: 0

;main.c: 831: PrintErr(0x01,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(01h)&0ffh
	
	call	_PrintErr
	goto	l13690
	line	834
	
l941:; BSR set to: 0

	line	836
;main.c: 834: else
;main.c: 835: {
;main.c: 836: M.RPL=0;
	clrf	(0+(_M+023h))&0ffh
	line	837
;main.c: 837: M._RUSZ_PLOMIEN=1;
	bsf	(0+(_M+010h))&0ffh,7
	line	838
;main.c: 838: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
	tstfsz	(0+(_M+01Ah))&0ffh
	goto	u18651
	goto	u18650
u18651:
	goto	l933
u18650:
	goto	l13692
	line	844
	
l944:
	return
	opt stack 0
GLOBAL	__end_of_DecyzjaPLM2
	__end_of_DecyzjaPLM2:
	signat	_DecyzjaPLM2,88
	global	_DecyzjaPLM

;; *************** function _DecyzjaPLM *****************
;; Defined at:
;;		line 762 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    9
;; This function calls:
;;		_PrintErr
;;		_ErrPTG
;; This function is called by:
;;		_Rozruch
;; This function uses a non-reentrant model
;;
psect	text27,class=CODE,space=0,reloc=2
global __ptext27
__ptext27:
psect	text27
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	762
	global	__size_of_DecyzjaPLM
	__size_of_DecyzjaPLM	equ	__end_of_DecyzjaPLM-_DecyzjaPLM
	
_DecyzjaPLM:
;incstack = 0
	opt	stack 20
;incstack = 0
	line	763
	
l13666:; BSR set to: 1

;main.c: 763: if(M._OST_PL)
	movlb	0	; () banked
	
	btfss	(0+(_M+019h))&0ffh,2
	goto	u18511
	goto	u18510
u18511:
	goto	l922
u18510:
	line	765
	
l13668:; BSR set to: 0

;main.c: 764: {
;main.c: 765: M.ERR_BTY=0x01;
	movlw	low(01h)
	movwf	(0+(_M+01Ch))&0ffh
	line	766
	
l13670:; BSR set to: 0

;main.c: 766: PrintErr(0xE1,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(0E1h)&0ffh
	
	call	_PrintErr
	line	767
	
l13672:; BSR set to: 0

;main.c: 767: ErrPTG();
	call	_ErrPTG	;wreg free
	line	768
;main.c: 768: }
	goto	l925
	line	769
	
l922:; BSR set to: 0

	line	771
;main.c: 769: else
;main.c: 770: {
;main.c: 771: M._RUSZ_PLOMIEN=1;
	bsf	(0+(_M+010h))&0ffh,7
	line	772
;main.c: 772: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
	tstfsz	(0+(_M+01Ah))&0ffh
	goto	u18521
	goto	u18520
u18521:
	goto	l924
u18520:
	
l13674:; BSR set to: 0

	bsf	(0+(_M+011h))&0ffh,0
	
l924:; BSR set to: 0

	line	773
;main.c: 773: M._ROZRUCH=0;
	bcf	(0+(_M+010h))&0ffh,2
	line	774
;main.c: 774: M.ROZ=0;
	clrf	(0+(_M+01Dh))&0ffh
	line	776
	
l925:
	return
	opt stack 0
GLOBAL	__end_of_DecyzjaPLM
	__end_of_DecyzjaPLM:
	signat	_DecyzjaPLM,88
	global	_GrzejON

;; *************** function _GrzejON *****************
;; Defined at:
;;		line 600 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Rozruch
;; This function uses a non-reentrant model
;;
psect	text28,class=CODE,space=0,reloc=2
global __ptext28
__ptext28:
psect	text28
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	600
	global	__size_of_GrzejON
	__size_of_GrzejON	equ	__end_of_GrzejON-_GrzejON
	
_GrzejON:
;incstack = 0
	opt	stack 25
;incstack = 0
	line	601
	
l13664:; BSR set to: 0

;main.c: 601: RB1=1;
	bsf	c:(31753/8),(31753)&7	;volatile
	line	602
# 602 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	603
# 603 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	604
# 604 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	605
# 605 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	606
# 606 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	607
# 607 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	608
# 608 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	609
# 609 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
psect	text28
	line	610
;main.c: 610: RB0=1;
	bsf	c:(31752/8),(31752)&7	;volatile
	line	611
	
l882:
	return
	opt stack 0
GLOBAL	__end_of_GrzejON
	__end_of_GrzejON:
	signat	_GrzejON,88
	global	_KolejkaPobudzen

;; *************** function _KolejkaPobudzen *****************
;; Defined at:
;;		line 215 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  wr              1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RdPrt
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text29,class=CODE,space=0,reloc=2
global __ptext29
__ptext29:
psect	text29
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	215
	global	__size_of_KolejkaPobudzen
	__size_of_KolejkaPobudzen	equ	__end_of_KolejkaPobudzen-_KolejkaPobudzen
	
_KolejkaPobudzen:
;incstack = 0
	opt	stack 25
;incstack = 0
	line	219
	
l13268:
;main.c: 219: if(M._AKTYWNE_KNF)
	movlb	0	; () banked
	movf	(1+(_M+016h))&0ffh,w
	iorwf (0+(_M+016h))&0ffh,w

	btfsc	status,2
	goto	u17831
	goto	u17830
u17831:
	goto	l744
u17830:
	line	221
	
l13270:; BSR set to: 0

;main.c: 220: {
;main.c: 221: M._pob_CW=0;
	clrf	(0+(_M+08h))&0ffh
	clrf	(1+(_M+08h))&0ffh
	line	222
;main.c: 222: if(DtKNF.wymCW) M._pob_KCW=1;
	
	btfss	((_DtKNF))&0ffh,2
	goto	u17841
	goto	u17840
u17841:
	goto	l745
u17840:
	
l13272:; BSR set to: 0

	movlw	high(01h)
	movwf	(1+(_M+02h))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+02h))&0ffh
	goto	l750
	line	223
	
l745:; BSR set to: 0

;main.c: 223: else M._pob_KCW=0;
	clrf	(0+(_M+02h))&0ffh
	clrf	(1+(_M+02h))&0ffh
	goto	l750
	line	225
	
l744:; BSR set to: 0

	line	228
;main.c: 225: else
;main.c: 226: {
;main.c: 228: M._pob_KCW=0;
	clrf	(0+(_M+02h))&0ffh
	clrf	(1+(_M+02h))&0ffh
	line	229
	
l13274:; BSR set to: 0

;main.c: 229: if(RdPrt(6))
	movlw	(06h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17851
	goto	u17850
u17851:
	goto	l748
u17850:
	line	231
	
l13276:; BSR set to: 0

;main.c: 230: {
;main.c: 231: M._pob_CW=1;
	movlw	high(01h)
	movwf	(1+(_M+08h))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+08h))&0ffh
	line	232
;main.c: 232: }
	goto	l750
	line	233
	
l748:; BSR set to: 0

;main.c: 233: else M._pob_CW=0;
	clrf	(0+(_M+08h))&0ffh
	clrf	(1+(_M+08h))&0ffh
	line	235
	
l750:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_KolejkaPobudzen
	__end_of_KolejkaPobudzen:
	signat	_KolejkaPobudzen,88
	global	_FunkcjaSerwisowa

;; *************** function _FunkcjaSerwisowa *****************
;; Defined at:
;;		line 534 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_RdPrt
;;		_StartRTS
;;		_PrintNstCW
;;		_RTS
;;		_StartRTM
;;		_RTM
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text30,class=CODE,space=0,reloc=2
global __ptext30
__ptext30:
psect	text30
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	534
	global	__size_of_FunkcjaSerwisowa
	__size_of_FunkcjaSerwisowa	equ	__end_of_FunkcjaSerwisowa-_FunkcjaSerwisowa
	
_FunkcjaSerwisowa:; BSR set to: 0

;incstack = 0
	opt	stack 24
;incstack = 0
	line	536
	
l13214:; BSR set to: 0

;main.c: 536: if(M._AKTYWNE_KNF||!M._PRACA)
	movf	(1+(_M+016h))&0ffh,w
	iorwf (0+(_M+016h))&0ffh,w

	btfss	status,2
	goto	u17701
	goto	u17700
u17701:
	goto	l863
u17700:
	
l13216:; BSR set to: 0

	
	btfsc	(0+(_M+019h))&0ffh,1
	goto	u17711
	goto	u17710
u17711:
	goto	l13218
u17710:
	
l863:
	line	538
;main.c: 537: {
;main.c: 538: M.SRV=0;
	movlb	0	; () banked
	clrf	(0+(_M+028h))&0ffh
	line	539
;main.c: 539: M._AKTYWNE_SRW=0;
	clrf	(0+(_M+012h))&0ffh
	clrf	(1+(_M+012h))&0ffh
	line	540
;main.c: 540: return;
	goto	l864
	line	542
	
l13218:; BSR set to: 0

;main.c: 541: }
;main.c: 542: if(M._AKTYWNE_SRW&&RdPrt(0)) M.SRV=3;
	movf	(1+(_M+012h))&0ffh,w
	iorwf (0+(_M+012h))&0ffh,w

	btfsc	status,2
	goto	u17721
	goto	u17720
u17721:
	goto	l13266
u17720:
	
l13220:; BSR set to: 0

	movlw	(0)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17731
	goto	u17730
u17731:
	goto	l13266
u17730:
	
l13222:; BSR set to: 0

	movlw	low(03h)
	movwf	(0+(_M+028h))&0ffh
	goto	l13266
	line	547
	
l13224:; BSR set to: 0

;main.c: 546: {
;main.c: 547: if(RdPrt(1)&&(DtCW.PCW==60))
	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17741
	goto	u17740
u17741:
	goto	l864
u17740:
	
l13226:; BSR set to: 0

	movf	(0+((c:_DtCW)+03h)),c,w
	xorlw	60

	btfss	status,2
	goto	u17751
	goto	u17750
u17751:
	goto	l864
u17750:
	line	549
	
l13228:; BSR set to: 0

;main.c: 548: {
;main.c: 549: M.SRV=1;
	movlw	low(01h)
	movwf	(0+(_M+028h))&0ffh
	line	550
	
l13230:; BSR set to: 0

;main.c: 550: StartRTS(8);
	movlw	(08h)&0ffh
	
	call	_StartRTS
	goto	l864
	line	556
	
l13232:; BSR set to: 0

;main.c: 555: {
;main.c: 556: if(RdPrt(1)&&(DtCW.PCW==60))
	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17761
	goto	u17760
u17761:
	goto	l871
u17760:
	
l13234:; BSR set to: 0

	movf	(0+((c:_DtCW)+03h)),c,w
	xorlw	60

	btfss	status,2
	goto	u17771
	goto	u17770
u17771:
	goto	l871
u17770:
	line	558
	
l13236:; BSR set to: 0

;main.c: 557: {
;main.c: 558: if(RTS(8)<5) return;
	movlw	(08h)&0ffh
	
	call	_RTS
	movwf	(??_FunkcjaSerwisowa+0+0)&0ffh
	movlw	(05h)&0ffh
	subwf	((??_FunkcjaSerwisowa+0+0))&0ffh,w
	btfsc	status,0
	goto	u17781
	goto	u17780
u17781:
	goto	l13240
u17780:
	goto	l864
	line	559
	
l13240:; BSR set to: 1

;main.c: 559: M.SRV=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	(0+(_M+028h))&0ffh
	line	560
;main.c: 560: M._AKTYWNE_SRW=1;
	movlw	high(01h)
	movwf	(1+(_M+012h))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+012h))&0ffh
	line	561
	
l13242:; BSR set to: 0

;main.c: 561: StartRTM(1);
	movlw	(01h)&0ffh
	
	call	_StartRTM
	line	562
	
l13244:; BSR set to: 0

;main.c: 562: StartRTS(8);
	movlw	(08h)&0ffh
	
	call	_StartRTS
	line	563
	
l13246:; BSR set to: 1

;main.c: 563: PrintNstCW(DtCW.PCW,1);
	movlw	low(01h)
	movwf	((?_PrintNstCW))&0ffh
	movf	(0+((c:_DtCW)+03h)),c,w
	
	call	_PrintNstCW
	line	564
;main.c: 564: }
	goto	l864
	line	565
	
l871:; BSR set to: 0

	line	567
;main.c: 565: else
;main.c: 566: {
;main.c: 567: M.SRV=0;
	clrf	(0+(_M+028h))&0ffh
	goto	l864
	line	573
	
l13248:; BSR set to: 0

;main.c: 572: {
;main.c: 573: if(RTM(1)<15)
	movlw	(01h)&0ffh
	
	call	_RTM
	movlb	1	; () banked
	movwf	(??_FunkcjaSerwisowa+0+0)&0ffh
	movlw	(0Fh)&0ffh
	subwf	((??_FunkcjaSerwisowa+0+0))&0ffh,w
	btfsc	status,0
	goto	u17791
	goto	u17790
u17791:
	goto	l863
u17790:
	line	575
	
l13250:; BSR set to: 1

;main.c: 574: {
;main.c: 575: if((RTS(8)>=5)&&RdPrt(1)) PrintNstCW(DtCW.PCW,1);
	movlw	(08h)&0ffh
	
	call	_RTS
	movwf	(??_FunkcjaSerwisowa+0+0)&0ffh
	movlw	(05h)&0ffh
	subwf	((??_FunkcjaSerwisowa+0+0))&0ffh,w
	btfss	status,0
	goto	u17801
	goto	u17800
u17801:
	goto	l864
u17800:
	
l13252:; BSR set to: 1

	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17811
	goto	u17810
u17811:
	goto	l864
u17810:
	
l13254:; BSR set to: 0

	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintNstCW))&0ffh
	movf	(0+((c:_DtCW)+03h)),c,w
	
	call	_PrintNstCW
	goto	l864
	line	587
	
l13260:; BSR set to: 0

;main.c: 586: {
;main.c: 587: if(!RdPrt(0))
	movlw	(0)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u17821
	goto	u17820
u17821:
	goto	l864
u17820:
	goto	l863
	line	543
	
l13266:; BSR set to: 0

	movf	(0+(_M+028h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l13224
	xorlw	1^0	; case 1
	skipnz
	goto	l13232
	xorlw	2^1	; case 2
	skipnz
	goto	l13248
	xorlw	3^2	; case 3
	skipnz
	goto	l13260
	goto	l864

	line	595
	
l864:
	return
	opt stack 0
GLOBAL	__end_of_FunkcjaSerwisowa
	__end_of_FunkcjaSerwisowa:
	signat	_FunkcjaSerwisowa,88
	global	_DecWylacz

;; *************** function _DecWylacz *****************
;; Defined at:
;;		line 501 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_SetWylacz
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text31,class=CODE,space=0,reloc=2
global __ptext31
__ptext31:
psect	text31
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	501
	global	__size_of_DecWylacz
	__size_of_DecWylacz	equ	__end_of_DecWylacz-_DecWylacz
	
_DecWylacz:
;incstack = 0
	opt	stack 24
;incstack = 0
	line	502
	
l13182:; BSR set to: 0

;main.c: 502: if(!M._WYLACZ)
	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u17571
	goto	u17570
u17571:
	goto	l854
u17570:
	line	503
	
l13184:; BSR set to: 0

;main.c: 503: if(M._ROZRUCH||RB1)
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u17581
	goto	u17580
u17581:
	goto	l13188
u17580:
	
l13186:; BSR set to: 0

	btfss	c:(31753/8),(31753)&7	;volatile
	goto	u17591
	goto	u17590
u17591:
	goto	l854
u17590:
	line	505
	
l13188:; BSR set to: 0

;main.c: 504: {
;main.c: 505: if(!M._pob_KCW&&!M._pob_CW) SetWylacz();
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfss	status,2
	goto	u17601
	goto	u17600
u17601:
	goto	l843
u17600:
	
l13190:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfss	status,2
	goto	u17611
	goto	u17610
u17611:
	goto	l843
u17610:
	
l13192:; BSR set to: 0

	call	_SetWylacz	;wreg free
	goto	l854
	line	506
	
l843:; BSR set to: 0

	line	507
;main.c: 506: else
;main.c: 507: if(M._RUSZ_PLOMIEN||M._RUSZ_CIAG||M._RUSZ_STB||M._RUSZ_NTC_CW) SetWylacz();
	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u17621
	goto	u17620
u17621:
	goto	l13192
u17620:
	
l13194:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,6
	goto	u17631
	goto	u17630
u17631:
	goto	l13192
u17630:
	
l13196:; BSR set to: 0

	
	btfsc	(0+(_M+018h))&0ffh,2
	goto	u17641
	goto	u17640
u17641:
	goto	l13192
u17640:
	
l13198:; BSR set to: 0

	
	btfss	(0+(_M+018h))&0ffh,1
	goto	u17651
	goto	u17650
u17651:
	goto	l13202
u17650:
	goto	l13192
	line	509
	
l13202:; BSR set to: 0

;main.c: 508: else
;main.c: 509: if(M._pob_KCW)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfsc	status,2
	goto	u17661
	goto	u17660
u17661:
	goto	l13208
u17660:
	line	511
	
l13204:; BSR set to: 0

;main.c: 510: {
;main.c: 511: if(DtCW._ad_CW) SetWylacz();
	
	btfss	((c:_DtCW)),c,2
	goto	u17671
	goto	u17670
u17671:
	goto	l854
u17670:
	goto	l13192
	line	514
	
l13208:; BSR set to: 0

;main.c: 513: else
;main.c: 514: if(M._pob_CW)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u17681
	goto	u17680
u17681:
	goto	l848
u17680:
	line	516
	
l13210:; BSR set to: 0

;main.c: 515: {
;main.c: 516: if(DtCW._ad_CW) SetWylacz();
	
	btfss	((c:_DtCW)),c,2
	goto	u17691
	goto	u17690
u17691:
	goto	l848
u17690:
	goto	l13192
	line	518
	
l848:; BSR set to: 0

	line	519
	
l854:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_DecWylacz
	__end_of_DecWylacz:
	signat	_DecWylacz,88
	global	_SetWylacz

;; *************** function _SetWylacz *****************
;; Defined at:
;;		line 522 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_GrzejOFF
;; This function is called by:
;;		_DecWylacz
;; This function uses a non-reentrant model
;;
psect	text32,class=CODE,space=0,reloc=2
global __ptext32
__ptext32:
psect	text32
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	522
	global	__size_of_SetWylacz
	__size_of_SetWylacz	equ	__end_of_SetWylacz-_SetWylacz
	
_SetWylacz:; BSR set to: 0

;incstack = 0
	opt	stack 24
;incstack = 0
	line	523
	
l13638:; BSR set to: 0

;main.c: 523: GrzejOFF();
	call	_GrzejOFF	;wreg free
	line	524
	
l13640:
;main.c: 524: if(M._TURBO&&RB0) M._VWYBIEG=1;
	movlb	0	; () banked
	
	btfss	(0+(_M+019h))&0ffh,0
	goto	u18461
	goto	u18460
u18461:
	goto	l857
u18460:
	
l13642:; BSR set to: 0

	btfss	c:(31752/8),(31752)&7	;volatile
	goto	u18471
	goto	u18470
u18471:
	goto	l857
u18470:
	
l13644:; BSR set to: 0

	bsf	(0+(_M+010h))&0ffh,5
	
l857:; BSR set to: 0

	line	525
;main.c: 525: M.ROZ=0;
	clrf	(0+(_M+01Dh))&0ffh
	line	526
;main.c: 526: M.MNM=0;
	clrf	(0+(_M+025h))&0ffh
	line	527
;main.c: 527: M._ROZRUCH=0;
	bcf	(0+(_M+010h))&0ffh,2
	line	528
;main.c: 528: M._RUN_MNMOD=0;
	bcf	(0+(_M+019h))&0ffh,3
	line	529
;main.c: 529: M._AKTYWNE_SRW=0;
	clrf	(0+(_M+012h))&0ffh
	clrf	(1+(_M+012h))&0ffh
	line	530
	
l858:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_SetWylacz
	__end_of_SetWylacz:
	signat	_SetWylacz,88
	global	_DecRozruch

;; *************** function _DecRozruch *****************
;; Defined at:
;;		line 466 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetRozruch
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text33,class=CODE,space=0,reloc=2
global __ptext33
__ptext33:
psect	text33
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	466
	global	__size_of_DecRozruch
	__size_of_DecRozruch	equ	__end_of_DecRozruch-_DecRozruch
	
_DecRozruch:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	467
	
l13158:; BSR set to: 0

;main.c: 467: if(!M._ROZRUCH&&!RB1)
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u17471
	goto	u17470
u17471:
	goto	l833
u17470:
	
l13160:; BSR set to: 0

	btfsc	c:(31753/8),(31753)&7	;volatile
	goto	u17481
	goto	u17480
u17481:
	goto	l833
u17480:
	line	468
	
l13162:; BSR set to: 0

;main.c: 468: if(!M._RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_STB&&!M._RUSZ_NTC_CW)
	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u17491
	goto	u17490
u17491:
	goto	l833
u17490:
	
l13164:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,6
	goto	u17501
	goto	u17500
u17501:
	goto	l833
u17500:
	
l13166:; BSR set to: 0

	
	btfsc	(0+(_M+018h))&0ffh,2
	goto	u17511
	goto	u17510
u17511:
	goto	l833
u17510:
	
l13168:; BSR set to: 0

	
	btfsc	(0+(_M+018h))&0ffh,1
	goto	u17521
	goto	u17520
u17521:
	goto	l833
u17520:
	line	470
	
l13170:; BSR set to: 0

;main.c: 469: {
;main.c: 470: if(M._pob_KCW)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfsc	status,2
	goto	u17531
	goto	u17530
u17531:
	goto	l13176
u17530:
	line	472
	
l13172:; BSR set to: 0

;main.c: 471: {
;main.c: 472: if(DtCW._su_CW)
	
	btfss	((c:_DtCW)),c,1
	goto	u17541
	goto	u17540
u17541:
	goto	l833
u17540:
	line	474
	
l13174:; BSR set to: 0

;main.c: 473: {
;main.c: 474: SetRozruch();
	call	_SetRozruch	;wreg free
	goto	l833
	line	478
	
l13176:; BSR set to: 0

;main.c: 477: else
;main.c: 478: if(M._pob_CW)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u17551
	goto	u17550
u17551:
	goto	l827
u17550:
	line	480
	
l13178:; BSR set to: 0

;main.c: 479: {
;main.c: 480: if(DtCW._su_CW)
	
	btfss	((c:_DtCW)),c,1
	goto	u17561
	goto	u17560
u17561:
	goto	l827
u17560:
	goto	l13174
	line	485
	
l827:; BSR set to: 0

	line	486
	
l833:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_DecRozruch
	__end_of_DecRozruch:
	signat	_DecRozruch,88
	global	_SetRozruch

;; *************** function _SetRozruch *****************
;; Defined at:
;;		line 489 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecRozruch
;; This function uses a non-reentrant model
;;
psect	text34,class=CODE,space=0,reloc=2
global __ptext34
__ptext34:
psect	text34
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	489
	global	__size_of_SetRozruch
	__size_of_SetRozruch	equ	__end_of_SetRozruch-_SetRozruch
	
_SetRozruch:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	490
	
l13636:; BSR set to: 0

;main.c: 490: M._VWYBIEG=0;
	bcf	(0+(_M+010h))&0ffh,5
	line	491
;main.c: 491: M._DE_VNT=0;
	bcf	(0+(_M+019h))&0ffh,5
	line	492
;main.c: 492: M.VWB=0;
	clrf	(0+(_M+027h))&0ffh
	line	494
;main.c: 494: M._ROZRUCH=1;
	bsf	(0+(_M+010h))&0ffh,2
	line	495
;main.c: 495: M.ROZ=0;
	clrf	(0+(_M+01Dh))&0ffh
	line	496
	
l836:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_SetRozruch
	__end_of_SetRozruch:
	signat	_SetRozruch,88
	global	_DecSTR

;; *************** function _DecSTR *****************
;; Defined at:
;;		line 408 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RdPrt
;;		_RTS
;;		_RestartMod
;;		_WritePWM
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text35,class=CODE,space=0,reloc=2
global __ptext35
__ptext35:
psect	text35
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	408
	global	__size_of_DecSTR
	__size_of_DecSTR	equ	__end_of_DecSTR-_DecSTR
	
_DecSTR:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	410
	
l13114:; BSR set to: 0

;main.c: 410: if(RTS(10)>=3)
	movlw	(0Ah)&0ffh
	
	call	_RTS
	movwf	(??_DecSTR+0+0)&0ffh
	movlw	(03h)&0ffh
	subwf	((??_DecSTR+0+0))&0ffh,w
	btfss	status,0
	goto	u17301
	goto	u17300
u17301:
	goto	l13118
u17300:
	line	412
	
l13116:; BSR set to: 1

;main.c: 411: {
;main.c: 412: M._PW_START=0;
	movlb	0	; () banked
	bcf	(0+(_M+018h))&0ffh,7
	line	413
;main.c: 413: M._RS_START=0;
	bcf	(0+(_M+018h))&0ffh,6
	line	423
	
l13118:
;main.c: 414: }
;main.c: 423: if(M._pob_CW)
	movlb	0	; () banked
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u17311
	goto	u17310
u17311:
	goto	l13122
u17310:
	line	425
	
l13120:; BSR set to: 0

;main.c: 424: {
;main.c: 425: if(M._AKTYWNE_SRW) M._MODULUJ=0;
	movf	(1+(_M+012h))&0ffh,w
	iorwf (0+(_M+012h))&0ffh,w

	btfsc	status,2
	goto	u17321
	goto	u17320
u17321:
	goto	l805
u17320:
	
l13122:; BSR set to: 0

	bcf	(0+(_M+011h))&0ffh,4
	goto	l810
	line	426
	
l805:; BSR set to: 0

	line	427
;main.c: 426: else
;main.c: 427: if(!M._ROZRUCH&&RB1)
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u17331
	goto	u17330
u17331:
	goto	l13122
u17330:
	
l13124:; BSR set to: 0

	btfss	c:(31753/8),(31753)&7	;volatile
	goto	u17341
	goto	u17340
u17341:
	goto	l13122
u17340:
	line	429
	
l13126:; BSR set to: 0

;main.c: 428: {
;main.c: 429: if(!M._MODULUJ)
	
	btfsc	(0+(_M+011h))&0ffh,4
	goto	u17351
	goto	u17350
u17351:
	goto	l810
u17350:
	line	431
	
l13128:; BSR set to: 0

;main.c: 430: {
;main.c: 431: M._MODULUJ=1;
	bsf	(0+(_M+011h))&0ffh,4
	line	432
	
l13130:; BSR set to: 0

;main.c: 432: RestartMod();
	call	_RestartMod	;wreg free
	line	438
	
l810:; BSR set to: 0

	line	440
;main.c: 440: if(!M._PRACA||!RdPrt(8)||M._RUN_MNMOD)
	
	btfss	(0+(_M+019h))&0ffh,1
	goto	u17361
	goto	u17360
u17361:
	goto	l813
u17360:
	
l13132:; BSR set to: 0

	movlw	(08h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17371
	goto	u17370
u17371:
	goto	l813
u17370:
	
l13134:; BSR set to: 0

	
	btfss	(0+(_M+019h))&0ffh,3
	goto	u17381
	goto	u17380
u17381:
	goto	l13142
u17380:
	
l813:; BSR set to: 0

	line	442
;main.c: 441: {
;main.c: 442: M._MODULUJ=0;
	bcf	(0+(_M+011h))&0ffh,4
	line	443
;main.c: 443: if(!M._PRACA||!RdPrt(8)) WritePWM(0);
	
	btfss	(0+(_M+019h))&0ffh,1
	goto	u17391
	goto	u17390
u17391:
	goto	l13138
u17390:
	
l13136:; BSR set to: 0

	movlw	(08h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u17401
	goto	u17400
u17401:
	goto	l13140
u17400:
	
l13138:; BSR set to: 0

	movlw	(0)&0ffh
	
	call	_WritePWM
	goto	l13142
	line	444
	
l13140:; BSR set to: 0

;main.c: 444: else WritePWM(PWM.MDMOD);
	movf	(0+((c:_PWM)+05h)),c,w	;volatile
	
	call	_WritePWM
	line	448
	
l13142:; BSR set to: 0

;main.c: 445: }
;main.c: 448: if(M._pob_KCW&&!M._ROZRUCH&&RB1) WritePWM(PWM.MMAXCW);
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfsc	status,2
	goto	u17411
	goto	u17410
u17411:
	goto	l13150
u17410:
	
l13144:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u17421
	goto	u17420
u17421:
	goto	l13150
u17420:
	
l13146:; BSR set to: 0

	btfss	c:(31753/8),(31753)&7	;volatile
	goto	u17431
	goto	u17430
u17431:
	goto	l13150
u17430:
	
l13148:; BSR set to: 0

	movf	(0+((c:_PWM)+01Ah)),c,w	;volatile
	
	call	_WritePWM
	line	453
	
l13150:; BSR set to: 0

;main.c: 453: if(M._AKTYWNE_SRW&&!M._ROZRUCH&&RB1) WritePWM(0xF0);
	movf	(1+(_M+012h))&0ffh,w
	iorwf (0+(_M+012h))&0ffh,w

	btfsc	status,2
	goto	u17441
	goto	u17440
u17441:
	goto	l820
u17440:
	
l13152:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u17451
	goto	u17450
u17451:
	goto	l820
u17450:
	
l13154:; BSR set to: 0

	btfss	c:(31753/8),(31753)&7	;volatile
	goto	u17461
	goto	u17460
u17461:
	goto	l820
u17460:
	
l13156:; BSR set to: 0

	movlw	(0F0h)&0ffh
	
	call	_WritePWM
	line	455
	
l820:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_DecSTR
	__end_of_DecSTR:
	signat	_DecSTR,88
	global	_RestartMod

;; *************** function _RestartMod *****************
;; Defined at:
;;		line 2137 in file "C:\praca\PICC\backup\GRZ01V5\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecSTR
;; This function uses a non-reentrant model
;;
psect	text36,class=CODE,space=0,reloc=2
global __ptext36
__ptext36:
psect	text36
	file	"C:\praca\PICC\backup\GRZ01V5\rgl.c"
	line	2137
	global	__size_of_RestartMod
	__size_of_RestartMod	equ	__end_of_RestartMod-_RestartMod
	
_RestartMod:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	2138
	
l13626:; BSR set to: 0

;rgl.c: 2138: rgl.btco=0;
	bcf	((c:_rgl)),c,0
	line	2139
;rgl.c: 2139: rgl.btcw=0;
	bcf	((c:_rgl)),c,1
	line	2140
;rgl.c: 2140: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	2141
;rgl.c: 2141: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	2142
;rgl.c: 2142: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	2143
;rgl.c: 2143: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	2144
;rgl.c: 2144: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	2145
;rgl.c: 2145: rgl.deln1=0;
	bcf	((c:_rgl)),c,7
	line	2146
;rgl.c: 2148: stoi=0;
	bcf	(0+((c:_rgl)+01h)),c,0
	line	2149
	
l2331:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_RestartMod
	__end_of_RestartMod:
	signat	_RestartMod,88
	global	_DecERR

;; *************** function _DecERR *****************
;; Defined at:
;;		line 263 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  KnfDisErr       1   18[BANK1 ] unsigned char 
;;  w               1   16[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    9
;; This function calls:
;;		_RdPrt
;;		_PrintErr
;;		_ErrPTG
;;		_StartRTS
;;		_EndErr
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text37,class=CODE,space=0,reloc=2
global __ptext37
__ptext37:
psect	text37
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	263
	global	__size_of_DecERR
	__size_of_DecERR	equ	__end_of_DecERR-_DecERR
	
_DecERR:; BSR set to: 0

;incstack = 0
	opt	stack 21
;incstack = 0
	line	264
	
l12958:
	line	268
;main.c: 265: unsigned char w;
;main.c: 268: KnfDisErr=(M._AKTYWNE_KNF&&(DtKNF.KRK==1||(DtKNF.KRK==2&&DtKNF.PRM==3)))?1:0;
	movlb	1	; () banked
	clrf	((_DecERR$1358))&0ffh
	
l12960:; BSR set to: 1

	movlb	0	; () banked
	movf	(1+(_M+016h))&0ffh,w
	iorwf (0+(_M+016h))&0ffh,w

	btfsc	status,2
	goto	u16861
	goto	u16860
u16861:
	goto	l12970
u16860:
	
l12962:; BSR set to: 0

	decf	(0+(_DtKNF+02h))&0ffh,w

	btfsc	status,2
	goto	u16871
	goto	u16870
u16871:
	goto	l12968
u16870:
	
l12964:; BSR set to: 0

	movf	(0+(_DtKNF+02h))&0ffh,w
	xorlw	2

	btfss	status,2
	goto	u16881
	goto	u16880
u16881:
	goto	l12970
u16880:
	
l12966:; BSR set to: 0

	movf	(0+(_DtKNF+01h))&0ffh,w
	xorlw	3

	btfss	status,2
	goto	u16891
	goto	u16890
u16891:
	goto	l12970
u16890:
	
l12968:; BSR set to: 0

	movlw	low(01h)
	movlb	1	; () banked
	movwf	((_DecERR$1358))&0ffh
	
l12970:
	movff	(_DecERR$1358),(DecERR@KnfDisErr)
	line	272
	
l12972:
;main.c: 272: if(!RdPrt(4))
	movlw	(04h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16901
	goto	u16900
u16901:
	goto	l12980
u16900:
	line	274
	
l12974:; BSR set to: 0

;main.c: 273: {
;main.c: 274: M.ERR_BTY=0x02;
	movlw	low(02h)
	movwf	(0+(_M+01Ch))&0ffh
	line	275
	
l12976:; BSR set to: 0

;main.c: 275: PrintErr(0xE2,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(0E2h)&0ffh
	
	call	_PrintErr
	line	276
	
l12978:; BSR set to: 0

;main.c: 276: ErrPTG();
	call	_ErrPTG	;wreg free
	line	279
	
l12980:
;main.c: 277: }
;main.c: 279: if(M._RUSZ_PLOMIEN)
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,7
	goto	u16911
	goto	u16910
u16911:
	goto	l762
u16910:
	line	281
	
l12982:; BSR set to: 0

;main.c: 280: {
;main.c: 281: M.ERR_BTY=0;
	clrf	(0+(_M+01Ch))&0ffh
	line	282
	
l12984:; BSR set to: 0

;main.c: 282: if(KnfDisErr) EndErr();
	movlb	1	; () banked
	movf	((DecERR@KnfDisErr))&0ffh,w
	btfsc	status,2
	goto	u16921
	goto	u16920
u16921:
	goto	l12988
u16920:
	
l12986:; BSR set to: 1

	call	_EndErr	;wreg free
	goto	l12990
	line	283
	
l12988:; BSR set to: 1

;main.c: 283: else PrintErr(0xE1,0);
	movlw	low(0)
	movwf	((?_PrintErr))&0ffh
	movlw	(0E1h)&0ffh
	
	call	_PrintErr
	line	284
	
l12990:; BSR set to: 0

;main.c: 284: M._RUSZ_NTC_CW=0;
	bcf	(0+(_M+018h))&0ffh,1
	line	285
;main.c: 285: }
	goto	l765
	line	286
	
l762:; BSR set to: 0

	line	287
;main.c: 286: else
;main.c: 287: if(M._RUSZ_CIAG)
	
	btfss	(0+(_M+010h))&0ffh,6
	goto	u16931
	goto	u16930
u16931:
	goto	l13004
u16930:
	line	289
	
l12992:; BSR set to: 0

;main.c: 288: {
;main.c: 289: M.ERR_BTY=0;
	clrf	(0+(_M+01Ch))&0ffh
	line	290
	
l12994:; BSR set to: 0

;main.c: 290: if(KnfDisErr) EndErr();
	movlb	1	; () banked
	movf	((DecERR@KnfDisErr))&0ffh,w
	btfsc	status,2
	goto	u16941
	goto	u16940
u16941:
	goto	l767
u16940:
	
l12996:; BSR set to: 1

	call	_EndErr	;wreg free
	goto	l13000
	line	291
	
l767:; BSR set to: 1

	line	293
;main.c: 291: else
;main.c: 292: {
;main.c: 293: if(M._prb_CIG) PrintErr(0xE3,0);
	movlb	0	; () banked
	
	btfss	(0+(_M+019h))&0ffh,7
	goto	u16951
	goto	u16950
u16951:
	goto	l13000
u16950:
	
l12998:; BSR set to: 0

	movlw	low(0)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(0E3h)&0ffh
	
	call	_PrintErr
	line	295
	
l13000:; BSR set to: 0

;main.c: 294: }
;main.c: 295: M._RUSZ_NTC_CW=0;
	bcf	(0+(_M+018h))&0ffh,1
	line	296
	
l13002:; BSR set to: 0

;main.c: 296: M._RUSZ_MOD=0;
	bcf	(0+(_M+018h))&0ffh,3
	line	297
;main.c: 297: }
	goto	l765
	line	300
	
l13004:; BSR set to: 0

;main.c: 298: else
;main.c: 299: {
;main.c: 300: w=DtCW._err_CW;
	movlw	0
	btfsc	((c:_DtCW)),c,0
	movlw	1
	movlb	1	; () banked
	movwf	((DecERR@w))&0ffh
	line	302
	
l13006:; BSR set to: 1

;main.c: 302: if(w)
	movf	((DecERR@w))&0ffh,w
	btfsc	status,2
	goto	u16961
	goto	u16960
u16961:
	goto	l771
u16960:
	line	304
	
l13008:; BSR set to: 1

;main.c: 303: {
;main.c: 304: M.ERR_BTY=0x04;
	movlw	low(04h)
	movlb	0	; () banked
	movwf	(0+(_M+01Ch))&0ffh
	line	305
;main.c: 305: if(KnfDisErr) EndErr();
	movlb	1	; () banked
	movf	((DecERR@KnfDisErr))&0ffh,w
	btfsc	status,2
	goto	u16971
	goto	u16970
u16971:
	goto	l13012
u16970:
	
l13010:; BSR set to: 1

	call	_EndErr	;wreg free
	goto	l13014
	line	306
	
l13012:; BSR set to: 1

;main.c: 306: else PrintErr(0xE4,0);
	movlw	low(0)
	movwf	((?_PrintErr))&0ffh
	movlw	(0E4h)&0ffh
	
	call	_PrintErr
	line	307
	
l13014:; BSR set to: 0

;main.c: 307: M._RUSZ_NTC_CW=1;
	bsf	(0+(_M+018h))&0ffh,1
	goto	l13002
	line	310
	
l771:; BSR set to: 1

	line	312
;main.c: 310: else
;main.c: 311: {
;main.c: 312: M._RUSZ_NTC_CW=0;
	movlb	0	; () banked
	bcf	(0+(_M+018h))&0ffh,1
	line	314
	
l13018:; BSR set to: 0

;main.c: 314: if(!RdPrt(8))
	movlw	(08h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16981
	goto	u16980
u16981:
	goto	l13002
u16980:
	line	316
	
l13020:; BSR set to: 0

;main.c: 315: {
;main.c: 316: M.ERR_BTY=0x07;
	movlw	low(07h)
	movwf	(0+(_M+01Ch))&0ffh
	line	317
;main.c: 317: if(KnfDisErr) EndErr();
	movlb	1	; () banked
	movf	((DecERR@KnfDisErr))&0ffh,w
	btfsc	status,2
	goto	u16991
	goto	u16990
u16991:
	goto	l13024
u16990:
	
l13022:; BSR set to: 1

	call	_EndErr	;wreg free
	goto	l13026
	line	318
	
l13024:; BSR set to: 1

;main.c: 318: else PrintErr(0xE7,0);
	movlw	low(0)
	movwf	((?_PrintErr))&0ffh
	movlw	(0E7h)&0ffh
	
	call	_PrintErr
	line	319
	
l13026:; BSR set to: 0

;main.c: 319: M._RUSZ_MOD=1;
	bsf	(0+(_M+018h))&0ffh,3
	line	326
;main.c: 320: }
	
l765:; BSR set to: 0

	line	330
;main.c: 324: }
;main.c: 325: }
;main.c: 326: }
;main.c: 330: if(!M._RUSZ_PLOMIEN&&!RdPrt(5)&&!M._ROZRUCH&&RB1)
	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u17001
	goto	u17000
u17001:
	goto	l779
u17000:
	
l13028:; BSR set to: 0

	movlw	(05h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u17011
	goto	u17010
u17011:
	goto	l779
u17010:
	
l13030:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u17021
	goto	u17020
u17021:
	goto	l779
u17020:
	
l13032:; BSR set to: 0

	btfss	c:(31753/8),(31753)&7	;volatile
	goto	u17031
	goto	u17030
u17031:
	goto	l779
u17030:
	line	332
	
l13034:; BSR set to: 0

;main.c: 331: {
;main.c: 332: if(M._TURBO)
	
	btfss	(0+(_M+019h))&0ffh,0
	goto	u17041
	goto	u17040
u17041:
	goto	l13048
u17040:
	line	334
	
l13036:; BSR set to: 0

;main.c: 333: {
;main.c: 334: if(RB0)
	btfss	c:(31752/8),(31752)&7	;volatile
	goto	u17051
	goto	u17050
u17051:
	goto	l13044
u17050:
	line	336
	
l13038:; BSR set to: 0

;main.c: 335: {
;main.c: 336: if(RdPrt(3)&&RdPrt(4))
	movlw	(03h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17061
	goto	u17060
u17061:
	goto	l779
u17060:
	
l13040:; BSR set to: 0

	movlw	(04h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17071
	goto	u17070
u17071:
	goto	l779
u17070:
	line	338
	
l13042:; BSR set to: 0

;main.c: 337: {
;main.c: 338: M.RPL=0;
	clrf	(0+(_M+023h))&0ffh
	line	339
;main.c: 339: M._RUSZ_PLOMIEN=1;
	bsf	(0+(_M+010h))&0ffh,7
	goto	l779
	line	344
	
l13044:; BSR set to: 0

;main.c: 342: else
;main.c: 343: {
;main.c: 344: if(RdPrt(4))
	movlw	(04h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17081
	goto	u17080
u17081:
	goto	l779
u17080:
	goto	l13042
	line	353
	
l13048:; BSR set to: 0

;main.c: 351: else
;main.c: 352: {
;main.c: 353: if(RdPrt(2)&&RdPrt(4))
	movlw	(02h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17091
	goto	u17090
u17091:
	goto	l779
u17090:
	
l13050:; BSR set to: 0

	movlw	(04h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17101
	goto	u17100
u17101:
	goto	l779
u17100:
	goto	l13042
	line	359
	
l779:; BSR set to: 0

	line	361
;main.c: 357: }
;main.c: 358: }
;main.c: 359: }
;main.c: 361: if(!M._TURBO)
	
	btfsc	(0+(_M+019h))&0ffh,0
	goto	u17111
	goto	u17110
u17111:
	goto	l787
u17110:
	line	363
	
l13054:; BSR set to: 0

;main.c: 362: {
;main.c: 363: if(!M._RUSZ_CIAG&&!RdPrt(2)&&M._PRACA)
	
	btfsc	(0+(_M+010h))&0ffh,6
	goto	u17121
	goto	u17120
u17121:
	goto	l13102
u17120:
	
l13056:; BSR set to: 0

	movlw	(02h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u17131
	goto	u17130
u17131:
	goto	l13102
u17130:
	
l13058:; BSR set to: 0

	
	btfss	(0+(_M+019h))&0ffh,1
	goto	u17141
	goto	u17140
u17141:
	goto	l13102
u17140:
	line	365
	
l13060:; BSR set to: 0

;main.c: 364: {
;main.c: 365: M.RCI=0;
	clrf	(0+(_M+024h))&0ffh
	line	366
;main.c: 366: M._RUSZ_CIAG=1;
	bsf	(0+(_M+010h))&0ffh,6
	line	367
;main.c: 367: if(!M.LICZNIK_CIG) StartRTS(11);
	tstfsz	(0+(_M+01Bh))&0ffh
	goto	u17151
	goto	u17150
u17151:
	goto	l13064
u17150:
	
l13062:; BSR set to: 0

	movlw	(0Bh)&0ffh
	
	call	_StartRTS
	line	368
	
l13064:
;main.c: 368: M.LICZNIK_CIG++;
	movlb	0	; () banked
	incf	(0+(_M+01Bh))&0ffh
	line	369
	
l13066:; BSR set to: 0

;main.c: 369: if(M.LICZNIK_CIG>=5)
	lfsr	2,_M+01Bh
	movlw	(05h-1)
	cpfsgt	indf2
	goto	u17161
	goto	u17160
u17161:
	goto	l13102
u17160:
	line	371
	
l13068:; BSR set to: 0

;main.c: 370: {
;main.c: 371: M.LICZNIK_CIG=0;
	clrf	(0+(_M+01Bh))&0ffh
	line	372
	
l13070:; BSR set to: 0

;main.c: 372: M.ERR_BTY=0x03;
	movlw	low(03h)
	movwf	(0+(_M+01Ch))&0ffh
	line	373
	
l13072:; BSR set to: 0

;main.c: 373: PrintErr(0xE3,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(0E3h)&0ffh
	
	call	_PrintErr
	line	374
	
l13074:; BSR set to: 0

;main.c: 374: ErrPTG();
	call	_ErrPTG	;wreg free
	goto	l13102
	line	378
	
l787:; BSR set to: 0

	line	380
;main.c: 378: else
;main.c: 379: {
;main.c: 380: if(!M._RUSZ_CIAG&&!M._ROZRUCH&&!M._DE_VNT&&((!RdPrt(3)&&RB0)||(RdPrt(3)&&!RB0)))
	
	btfsc	(0+(_M+010h))&0ffh,6
	goto	u17171
	goto	u17170
u17171:
	goto	l13102
u17170:
	
l13076:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u17181
	goto	u17180
u17181:
	goto	l13102
u17180:
	
l13078:; BSR set to: 0

	
	btfsc	(0+(_M+019h))&0ffh,5
	goto	u17191
	goto	u17190
u17191:
	goto	l13102
u17190:
	
l13080:; BSR set to: 0

	movlw	(03h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u17201
	goto	u17200
u17201:
	goto	l13084
u17200:
	
l13082:; BSR set to: 0

	btfsc	c:(31752/8),(31752)&7	;volatile
	goto	u17211
	goto	u17210
u17211:
	goto	l794
u17210:
	
l13084:; BSR set to: 0

	movlw	(03h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u17221
	goto	u17220
u17221:
	goto	l13102
u17220:
	
l13086:; BSR set to: 0

	btfsc	c:(31752/8),(31752)&7	;volatile
	goto	u17231
	goto	u17230
u17231:
	goto	l13102
u17230:
	
l794:; BSR set to: 0

	line	382
;main.c: 381: {
;main.c: 382: M.RCI=0;
	clrf	(0+(_M+024h))&0ffh
	line	383
;main.c: 383: M._RUSZ_CIAG=1;
	bsf	(0+(_M+010h))&0ffh,6
	line	384
;main.c: 384: if(!M.LICZNIK_CIG) StartRTS(11);
	tstfsz	(0+(_M+01Bh))&0ffh
	goto	u17241
	goto	u17240
u17241:
	goto	l13090
u17240:
	
l13088:; BSR set to: 0

	movlw	(0Bh)&0ffh
	
	call	_StartRTS
	line	385
	
l13090:
;main.c: 385: M.LICZNIK_CIG++;
	movlb	0	; () banked
	incf	(0+(_M+01Bh))&0ffh
	line	386
	
l13092:; BSR set to: 0

;main.c: 386: if(M.LICZNIK_CIG>=5)
	lfsr	2,_M+01Bh
	movlw	(05h-1)
	cpfsgt	indf2
	goto	u17251
	goto	u17250
u17251:
	goto	l13102
u17250:
	line	388
	
l13094:; BSR set to: 0

;main.c: 387: {
;main.c: 388: M.LICZNIK_CIG=0;
	clrf	(0+(_M+01Bh))&0ffh
	line	389
	
l13096:; BSR set to: 0

;main.c: 389: M.ERR_BTY=0x03;
	movlw	low(03h)
	movwf	(0+(_M+01Ch))&0ffh
	line	390
	
l13098:; BSR set to: 0

;main.c: 390: PrintErr(0xE3,1);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((?_PrintErr))&0ffh
	movlw	(0E3h)&0ffh
	
	call	_PrintErr
	goto	l13074
	line	398
	
l13102:
;main.c: 392: }
;main.c: 393: }
;main.c: 394: }
;main.c: 398: if(!M._RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_NTC_CW&&!M._RUSZ_MOD)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u17261
	goto	u17260
u17261:
	goto	l800
u17260:
	
l13104:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,6
	goto	u17271
	goto	u17270
u17271:
	goto	l800
u17270:
	
l13106:; BSR set to: 0

	
	btfsc	(0+(_M+018h))&0ffh,1
	goto	u17281
	goto	u17280
u17281:
	goto	l800
u17280:
	
l13108:; BSR set to: 0

	
	btfsc	(0+(_M+018h))&0ffh,3
	goto	u17291
	goto	u17290
u17291:
	goto	l800
u17290:
	line	400
	
l13110:; BSR set to: 0

;main.c: 399: {
;main.c: 400: M.ERR_BTY=0x00;
	clrf	(0+(_M+01Ch))&0ffh
	line	401
	
l13112:; BSR set to: 0

;main.c: 401: EndErr();
	call	_EndErr	;wreg free
	line	403
	
l800:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_DecERR
	__end_of_DecERR:
	signat	_DecERR,88
	global	_ErrPTG

;; *************** function _ErrPTG *****************
;; Defined at:
;;		line 1215 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  k               1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    8
;; This function calls:
;;		_PomiarPCW
;;		_PomiarCW
;;		_VWybieg
;;		_EndErr
;;		_WritePWM
;;		_GrzejOFF
;;		_KeyRes
;;		_VZPauza
;;		_Busy_eep
;;		_Write_b_eep
;;		_PrintPR
;;		_ToReset
;; This function is called by:
;;		_main
;;		_DecERR
;;		_Rozruch
;;		_DecyzjaPLM
;;		_DecyzjaPLM2
;;		_RuszCiag
;; This function uses a non-reentrant model
;;
psect	text38,class=CODE,space=0,reloc=2
global __ptext38
__ptext38:
psect	text38
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	1215
	global	__size_of_ErrPTG
	__size_of_ErrPTG	equ	__end_of_ErrPTG-_ErrPTG
	
_ErrPTG:; BSR set to: 0

;incstack = 0
	opt	stack 21
;incstack = 0
	line	1218
	
l12654:
;main.c: 1218: GrzejOFF();
	call	_GrzejOFF	;wreg free
	line	1219
	
l12656:
;main.c: 1219: VZPauza();
	call	_VZPauza	;wreg free
	line	1220
	
l12658:; BSR set to: 1

;main.c: 1220: if((M.ERR_BTY>=1)&&(M.ERR_BTY<=3)) (Busy_eep(), Write_b_eep(0x00C0,M.ERR_BTY));
	movlb	0	; () banked
	movf	(0+(_M+01Ch))&0ffh,w
	btfsc	status,2
	goto	u16091
	goto	u16090
u16091:
	goto	l12666
u16090:
	
l12660:; BSR set to: 0

	movlw	(04h)&0ffh
	cpfslt	(0+(_M+01Ch))&0ffh
	goto	u16101
	goto	u16100
u16101:
	goto	l12666
u16100:
	
l12662:; BSR set to: 0

	call	_Busy_eep	;wreg free
	
l12664:; BSR set to: 0

	movlw	high(0C0h)
	movlb	1	; () banked
	movwf	((?_Write_b_eep+1))&0ffh
	movlw	low(0C0h)
	movwf	((?_Write_b_eep))&0ffh
	movff	0+(_M+01Ch),0+(?_Write_b_eep+02h)
	call	_Write_b_eep	;wreg free
	line	1221
	
l12666:
;main.c: 1221: M._ROZRUCH=0;
	movlb	0	; () banked
	bcf	(0+(_M+010h))&0ffh,2
	line	1222
	
l12668:; BSR set to: 0

;main.c: 1222: M._MODULUJ=0;
	bcf	(0+(_M+011h))&0ffh,4
	line	1223
	
l12670:; BSR set to: 0

;main.c: 1223: WritePWM(0);
	movlw	(0)&0ffh
	
	call	_WritePWM
	line	1224
	
l12672:; BSR set to: 0

;main.c: 1224: if(M._TURBO&&RB0) M._VWYBIEG=1;
	
	btfss	(0+(_M+019h))&0ffh,0
	goto	u16111
	goto	u16110
u16111:
	goto	l1043
u16110:
	
l12674:; BSR set to: 0

	btfss	c:(31752/8),(31752)&7	;volatile
	goto	u16121
	goto	u16120
u16121:
	goto	l1043
u16120:
	
l12676:; BSR set to: 0

	bsf	(0+(_M+010h))&0ffh,5
	
l1043:; BSR set to: 0

	line	1225
;main.c: 1225: M.KRS=0;
	clrf	(0+(_M+029h))&0ffh
	line	1228
;main.c: 1228: while(1)
	
l1044:
	line	1230
# 1230 "C:\praca\PICC\backup\GRZ01V5\main.c"
clrwdt ;# 
psect	text38
	line	1232
	
l12678:
;main.c: 1232: PomiarPCW();
	call	_PomiarPCW	;wreg free
	line	1233
	
l12680:; BSR set to: 1

;main.c: 1233: PomiarCW();
	call	_PomiarCW	;wreg free
	line	1235
	
l12682:; BSR set to: 1

;main.c: 1235: if(M._VWYBIEG) VWybieg();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,5
	goto	u16131
	goto	u16130
u16131:
	goto	l1045
u16130:
	
l12684:; BSR set to: 0

	call	_VWybieg	;wreg free
	
l1045:
	line	1237
;main.c: 1237: if(KeyRes())
	call	_KeyRes	;wreg free
	btfss	status,0
	goto	u16141
	goto	u16140
u16141:
	goto	l1044
u16140:
	line	1239
	
l12686:
;main.c: 1238: {
;main.c: 1239: RB0=0;
	bcf	c:(31752/8),(31752)&7	;volatile
	line	1240
	
l12688:
;main.c: 1240: PrintPR(0b11111111,0b11111111,1);
	movlw	low(0FFh)
	movlb	1	; () banked
	movwf	((?_PrintPR))&0ffh
	movlw	low(01h)
	movwf	(0+(?_PrintPR+01h))&0ffh
	movlw	(0FFh)&0ffh
	
	call	_PrintPR
	line	1241
	
l12690:; BSR set to: 0

;main.c: 1241: EndErr();
	call	_EndErr	;wreg free
	line	1242
	
l12692:; BSR set to: 0

;main.c: 1242: ToReset();
	call	_ToReset	;wreg free
	goto	l1044
	return
	opt stack 0
	line	1245
GLOBAL	__end_of_ErrPTG
	__end_of_ErrPTG:
	signat	_ErrPTG,88
	global	_ToReset

;; *************** function _ToReset *****************
;; Defined at:
;;		line 1248 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Busy_eep
;;		_Write_b_eep
;; This function is called by:
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text39,class=CODE,space=0,reloc=2
global __ptext39
__ptext39:
psect	text39
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	1248
	global	__size_of_ToReset
	__size_of_ToReset	equ	__end_of_ToReset-_ToReset
	
_ToReset:
;incstack = 0
	opt	stack 23
;incstack = 0
	line	1249
	
l13918:; BSR set to: 0

;main.c: 1249: RB0=0;
	bcf	c:(31752/8),(31752)&7	;volatile
	line	1250
	
l13920:; BSR set to: 0

;main.c: 1250: (Busy_eep(), Write_b_eep(0x00C0,0x00));
	call	_Busy_eep	;wreg free
	
l13922:; BSR set to: 0

	movlw	high(0C0h)
	movlb	1	; () banked
	movwf	((?_Write_b_eep+1))&0ffh
	movlw	low(0C0h)
	movwf	((?_Write_b_eep))&0ffh
	movlw	low(0)
	movwf	(0+(?_Write_b_eep+02h))&0ffh
	call	_Write_b_eep	;wreg free
	line	1251
;main.c: 1251: while(1);
	
l1052:
	
l1053:
	goto	l1052
	return
	opt stack 0
	line	1252
GLOBAL	__end_of_ToReset
	__end_of_ToReset:
	signat	_ToReset,88
	global	_VZPauza

;; *************** function _VZPauza *****************
;; Defined at:
;;		line 1203 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTS
;;		_RTS
;; This function is called by:
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text40,class=CODE,space=0,reloc=2
global __ptext40
__ptext40:
psect	text40
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	1203
	global	__size_of_VZPauza
	__size_of_VZPauza	equ	__end_of_VZPauza-_VZPauza
	
_VZPauza:
;incstack = 0
	opt	stack 23
;incstack = 0
	line	1204
	
l13870:
;main.c: 1204: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	line	1205
;main.c: 1205: while(1)
	
l1035:; BSR set to: 1

	line	1207
# 1207 "C:\praca\PICC\backup\GRZ01V5\main.c"
clrwdt ;# 
psect	text40
	line	1208
;main.c: 1208: if(RTS(2)>=1) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	iorlw	0
	btfsc	status,2
	goto	u18921
	goto	u18920
u18921:
	goto	l1035
u18920:
	line	1210
	
l1037:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_VZPauza
	__end_of_VZPauza:
	signat	_VZPauza,88
	global	_KeyRes

;; *************** function _KeyRes *****************
;; Defined at:
;;		line 1118 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RdPrt
;;		_StartRTS
;;		_RTS
;; This function is called by:
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text41,class=CODE,space=0,reloc=2
global __ptext41
__ptext41:
psect	text41
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	1118
	global	__size_of_KeyRes
	__size_of_KeyRes	equ	__end_of_KeyRes-_KeyRes
	
_KeyRes:; BSR set to: 1

;incstack = 0
	opt	stack 23
;incstack = 0
	line	1119
	
l13802:
;main.c: 1119: switch(M.KRS)
	goto	l13864
	line	1123
	
l13804:; BSR set to: 0

;main.c: 1122: {
;main.c: 1123: if(RdPrt(6))
	movlw	(06h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u18831
	goto	u18830
u18831:
	goto	l13808
u18830:
	line	1125
	
l13806:; BSR set to: 0

;main.c: 1124: {
;main.c: 1125: M.KRS=1;
	movlw	low(01h)
	movwf	(0+(_M+029h))&0ffh
	line	1126
;main.c: 1126: }
	goto	l13824
	line	1129
	
l13808:; BSR set to: 0

;main.c: 1127: else
;main.c: 1128: {
;main.c: 1129: M.KRS=4;
	movlw	low(04h)
	movwf	(0+(_M+029h))&0ffh
	goto	l13824
	line	1136
	
l13810:; BSR set to: 0

;main.c: 1135: {
;main.c: 1136: if(!RdPrt(6))
	movlw	(06h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u18841
	goto	u18840
u18841:
	goto	l13824
u18840:
	line	1138
	
l13812:; BSR set to: 0

;main.c: 1137: {
;main.c: 1138: M.KRS=2;
	movlw	low(02h)
	movwf	(0+(_M+029h))&0ffh
	goto	l13824
	line	1145
	
l13814:; BSR set to: 0

;main.c: 1144: {
;main.c: 1145: if(RdPrt(6))
	movlw	(06h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u18851
	goto	u18850
u18851:
	goto	l13824
u18850:
	line	1147
	
l13816:; BSR set to: 0

;main.c: 1146: {
;main.c: 1147: M.KRS=3;
	movlw	low(03h)
	movwf	(0+(_M+029h))&0ffh
	line	1148
	
l13818:; BSR set to: 0

;main.c: 1148: StartRTS(8);
	movlw	(08h)&0ffh
	
	call	_StartRTS
	goto	l13824
	line	1154
	
l13820:; BSR set to: 0

;main.c: 1153: {
;main.c: 1154: if(RdPrt(6))
	movlw	(06h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u18861
	goto	u18860
u18861:
	goto	l13806
u18860:
	line	1156
	
l13822:; BSR set to: 0

;main.c: 1155: {
;main.c: 1156: if(RTS(8)<1) return 0;
	movlw	(08h)&0ffh
	
	call	_RTS
	iorlw	0
	btfss	status,2
	goto	u18871
	goto	u18870
u18871:
	goto	l13828
u18870:
	
l13824:
	bcf	status,0
	goto	l1023
	line	1157
	
l13828:; BSR set to: 1

;main.c: 1157: return 1;
	bsf	status,0
	goto	l1023
	line	1168
	
l13836:; BSR set to: 0

;main.c: 1167: {
;main.c: 1168: if(RdPrt(6))
	movlw	(06h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u18881
	goto	u18880
u18881:
	goto	l13824
u18880:
	line	1170
	
l13838:; BSR set to: 0

;main.c: 1169: {
;main.c: 1170: M.KRS=5;
	movlw	low(05h)
	movwf	(0+(_M+029h))&0ffh
	goto	l13824
	line	1176
	
l13840:; BSR set to: 0

;main.c: 1175: {
;main.c: 1176: if(!RdPrt(6))
	movlw	(06h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u18891
	goto	u18890
u18891:
	goto	l13824
u18890:
	line	1178
	
l13842:; BSR set to: 0

;main.c: 1177: {
;main.c: 1178: M.KRS=6;
	movlw	low(06h)
	movwf	(0+(_M+029h))&0ffh
	line	1179
	
l13844:; BSR set to: 0

;main.c: 1179: StartRTS(8);
	movlw	(08h)&0ffh
	
	call	_StartRTS
	goto	l13824
	line	1185
	
l13846:; BSR set to: 0

;main.c: 1184: {
;main.c: 1185: if(!RdPrt(6))
	movlw	(06h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u18901
	goto	u18900
u18901:
	goto	l13808
u18900:
	line	1187
	
l13848:; BSR set to: 0

;main.c: 1186: {
;main.c: 1187: if(RTS(8)<1) return 0;
	movlw	(08h)&0ffh
	
	call	_RTS
	iorlw	0
	btfss	status,2
	goto	u18911
	goto	u18910
u18911:
	goto	l13828
u18910:
	goto	l13824
	line	1119
	
l13864:
	movlb	0	; () banked
	movf	(0+(_M+029h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 7, Range of values is 0 to 6
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           22    12 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l13804
	xorlw	1^0	; case 1
	skipnz
	goto	l13810
	xorlw	2^1	; case 2
	skipnz
	goto	l13814
	xorlw	3^2	; case 3
	skipnz
	goto	l13820
	xorlw	4^3	; case 4
	skipnz
	goto	l13836
	xorlw	5^4	; case 5
	skipnz
	goto	l13840
	xorlw	6^5	; case 6
	skipnz
	goto	l13846
	goto	l13824

	line	1198
	
l1023:
	return
	opt stack 0
GLOBAL	__end_of_KeyRes
	__end_of_KeyRes:
	signat	_KeyRes,88
	global	_GrzejOFF

;; *************** function _GrzejOFF *****************
;; Defined at:
;;		line 616 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_SetWylacz
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text42,class=CODE,space=0,reloc=2
global __ptext42
__ptext42:
psect	text42
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	616
	global	__size_of_GrzejOFF
	__size_of_GrzejOFF	equ	__end_of_GrzejOFF-_GrzejOFF
	
_GrzejOFF:
;incstack = 0
	opt	stack 24
;incstack = 0
	line	617
	
l13646:
;main.c: 617: if(!M._TURBO)
	movlb	0	; () banked
	
	btfsc	(0+(_M+019h))&0ffh,0
	goto	u18481
	goto	u18480
u18481:
	goto	l885
u18480:
	line	619
	
l13648:; BSR set to: 0

;main.c: 618: {
;main.c: 619: RB0=0;
	bcf	c:(31752/8),(31752)&7	;volatile
	line	620
# 620 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	621
# 621 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	622
# 622 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	623
# 623 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	624
# 624 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	625
# 625 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	626
# 626 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
	line	627
# 627 "C:\praca\PICC\backup\GRZ01V5\main.c"
nop ;# 
psect	text42
	line	628
;main.c: 628: RB1=0;
	bcf	c:(31753/8),(31753)&7	;volatile
	line	629
;main.c: 629: }
	goto	l887
	line	630
	
l885:; BSR set to: 0

	line	632
;main.c: 630: else
;main.c: 631: {
;main.c: 632: RB1=0;
	bcf	c:(31753/8),(31753)&7	;volatile
	line	634
	
l887:
	return
	opt stack 0
GLOBAL	__end_of_GrzejOFF
	__end_of_GrzejOFF:
	signat	_GrzejOFF,88
	global	_WritePWM

;; *************** function _WritePWM *****************
;; Defined at:
;;		line 89 in file "C:\praca\PICC\backup\GRZ01V5\pwm.c"
;; Parameters:    Size  Location     Type
;;  tpwm            1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  tpwm            1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecSTR
;;		_Rozruch
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text43,class=CODE,space=0,reloc=2
global __ptext43
__ptext43:
psect	text43
	file	"C:\praca\PICC\backup\GRZ01V5\pwm.c"
	line	89
	global	__size_of_WritePWM
	__size_of_WritePWM	equ	__end_of_WritePWM-_WritePWM
	
_WritePWM:
;incstack = 0
	opt	stack 24
;incstack = 0
;WritePWM@tpwm stored from wreg
	movff	wreg,(WritePWM@tpwm)
	line	90
	
l13628:
;pwm.c: 90: PWM._ENPWM=0;
	bcf	((c:_PWM)),c,0	;volatile
	line	91
	
l13630:
;pwm.c: 91: PWM.BufPWM=tpwm;
	movff	(WritePWM@tpwm),0+((c:_PWM)+01h)	;volatile
	line	92
	
l13632:
;pwm.c: 92: PWM.BufOSC=0;
	clrf	(0+((c:_PWM)+02h)),c	;volatile
	line	93
	
l13634:
;pwm.c: 93: PWM._ENPWM=1;
	bsf	((c:_PWM)),c,0	;volatile
	line	94
	
l1450:
	return
	opt stack 0
GLOBAL	__end_of_WritePWM
	__end_of_WritePWM:
	signat	_WritePWM,4216
	global	_EndErr

;; *************** function _EndErr *****************
;; Defined at:
;;		line 65 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_ResetKol
;; This function is called by:
;;		_DecERR
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text44,class=CODE,space=0,reloc=2
global __ptext44
__ptext44:
psect	text44
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	65
	global	__size_of_EndErr
	__size_of_EndErr	equ	__end_of_EndErr-_EndErr
	
_EndErr:
;incstack = 0
	opt	stack 23
;incstack = 0
	line	66
	
l13616:
;print.c: 66: ResetKol(0);
	movlw	(0)&0ffh
	
	call	_ResetKol
	line	67
	
l1369:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_EndErr
	__end_of_EndErr:
	signat	_EndErr,88
	global	_VWybieg

;; *************** function _VWybieg *****************
;; Defined at:
;;		line 849 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTS
;;		_RTS
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text45,class=CODE,space=0,reloc=2
global __ptext45
__ptext45:
psect	text45
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	849
	global	__size_of_VWybieg
	__size_of_VWybieg	equ	__end_of_VWybieg-_VWybieg
	
_VWybieg:; BSR set to: 0

;incstack = 0
	opt	stack 23
;incstack = 0
	line	850
	
l13394:; BSR set to: 0

;main.c: 850: switch(M.VWB)
	goto	l13416
	line	854
	
l13396:; BSR set to: 0

;main.c: 853: {
;main.c: 854: M.VWB=1;
	movlw	low(01h)
	movwf	(0+(_M+027h))&0ffh
	line	855
	
l13398:; BSR set to: 0

;main.c: 855: M._DE_VNT=1;
	bsf	(0+(_M+019h))&0ffh,5
	line	856
	
l13400:; BSR set to: 0

;main.c: 856: StartRTS(6);
	movlw	(06h)&0ffh
	
	call	_StartRTS
	line	860
	
l13402:
;main.c: 859: {
;main.c: 860: if(RTS(6)>=2) M._DE_VNT=0;
	movlw	(06h)&0ffh
	
	call	_RTS
	movwf	(??_VWybieg+0+0)&0ffh
	movlw	(02h)&0ffh
	subwf	((??_VWybieg+0+0))&0ffh,w
	btfss	status,0
	goto	u18111
	goto	u18110
u18111:
	goto	l13406
u18110:
	
l13404:; BSR set to: 1

	movlb	0	; () banked
	bcf	(0+(_M+019h))&0ffh,5
	line	861
	
l13406:
;main.c: 861: if(RTS(6)<15) return;
	movlw	(06h)&0ffh
	
	call	_RTS
	movwf	(??_VWybieg+0+0)&0ffh
	movlw	(0Fh)&0ffh
	subwf	((??_VWybieg+0+0))&0ffh,w
	btfsc	status,0
	goto	u18121
	goto	u18120
u18121:
	goto	l951
u18120:
	goto	l952
	
l951:; BSR set to: 1

	line	863
;main.c: 863: RB0=0;
	bcf	c:(31752/8),(31752)&7	;volatile
	line	864
;main.c: 864: M._DE_VNT=1;
	movlb	0	; () banked
	bsf	(0+(_M+019h))&0ffh,5
	line	865
	
l13410:; BSR set to: 0

;main.c: 865: M.VWB=2;
	movlw	low(02h)
	movwf	(0+(_M+027h))&0ffh
	line	869
	
l13412:; BSR set to: 0

;main.c: 868: {
;main.c: 869: if(RTS(6)<15+2) return;
	movlw	(06h)&0ffh
	
	call	_RTS
	movwf	(??_VWybieg+0+0)&0ffh
	movlw	(011h)&0ffh
	subwf	((??_VWybieg+0+0))&0ffh,w
	btfsc	status,0
	goto	u18131
	goto	u18130
u18131:
	goto	l954
u18130:
	goto	l952
	
l954:; BSR set to: 1

	line	870
;main.c: 870: M._DE_VNT=0;
	movlb	0	; () banked
	bcf	(0+(_M+019h))&0ffh,5
	line	871
;main.c: 871: M._VWYBIEG=0;
	bcf	(0+(_M+010h))&0ffh,5
	line	872
;main.c: 872: M.VWB=0;
	clrf	(0+(_M+027h))&0ffh
	line	874
;main.c: 873: }
;main.c: 874: }
	goto	l952
	line	850
	
l13416:; BSR set to: 0

	movf	(0+(_M+027h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 3, Range of values is 0 to 2
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           10     6 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l13396
	xorlw	1^0	; case 1
	skipnz
	goto	l13402
	xorlw	2^1	; case 2
	skipnz
	goto	l13412
	goto	l952

	line	875
	
l952:
	return
	opt stack 0
GLOBAL	__end_of_VWybieg
	__end_of_VWybieg:
	signat	_VWybieg,88
	global	_PomiarCW

;; *************** function _PomiarCW *****************
;; Defined at:
;;		line 208 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_ReadAC
;;		_ReadTabNTC
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text46,class=CODE,space=0,reloc=2
global __ptext46
__ptext46:
psect	text46
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	208
	global	__size_of_PomiarCW
	__size_of_PomiarCW	equ	__end_of_PomiarCW-_PomiarCW
	
_PomiarCW:
;incstack = 0
	opt	stack 22
;incstack = 0
	line	209
	
l12896:; BSR set to: 1

;pomiar.c: 209: DtCW.AC_CW=ReadAC(1);
	movlw	(01h)&0ffh
	
	call	_ReadAC
	movwf	(0+((c:_DtCW)+0Ch)),c
	line	210
;pomiar.c: 210: DtCW.CW=ReadTabNTC(DtCW.AC_CW);
	movf	(0+((c:_DtCW)+0Ch)),c,w
	
	call	_ReadTabNTC
	movwf	(0+((c:_DtCW)+02h)),c
	line	212
	
l12898:; BSR set to: 1

;pomiar.c: 212: if(DtCW.AC_CW<=0x28||DtCW.AC_CW>=0xF5)
	lfsr	2,(c:_DtCW)+0Ch
	movlw	(029h-1)
	cpfsgt	indf2
	goto	u16701
	goto	u16700
u16701:
	goto	l1203
u16700:
	
l12900:; BSR set to: 1

	lfsr	2,(c:_DtCW)+0Ch
	movlw	(0F5h-1)
	cpfsgt	indf2
	goto	u16711
	goto	u16710
u16711:
	goto	l1201
u16710:
	
l1203:; BSR set to: 1

	line	214
;pomiar.c: 213: {
;pomiar.c: 214: DtCW._err_CW=1;
	bsf	((c:_DtCW)),c,0
	line	215
;pomiar.c: 215: DtCW._su_CW=0;
	bcf	((c:_DtCW)),c,1
	line	216
;pomiar.c: 216: DtCW._ad_CW=0;
	bcf	((c:_DtCW)),c,2
	line	217
;pomiar.c: 217: return;
	goto	l1204
	line	219
	
l1201:; BSR set to: 1

;pomiar.c: 219: else DtCW._err_CW=0;
	bcf	((c:_DtCW)),c,0
	line	220
	
l12904:; BSR set to: 1

;pomiar.c: 220: if(DtCW.PCW<55)
	movlw	(037h)&0ffh
	cpfslt	(0+((c:_DtCW)+03h)),c
	goto	u16721
	goto	u16720
u16721:
	goto	l12914
u16720:
	line	222
	
l12906:; BSR set to: 1

;pomiar.c: 221: {
;pomiar.c: 222: if(DtCW.CW>65) DtCW._ad_CW=1;
	lfsr	2,(c:_DtCW)+02h
	movlw	(042h-1)
	cpfsgt	indf2
	goto	u16731
	goto	u16730
u16731:
	goto	l1207
u16730:
	
l12908:; BSR set to: 1

	bsf	((c:_DtCW)),c,2
	goto	l12910
	line	223
	
l1207:; BSR set to: 1

;pomiar.c: 223: else DtCW._ad_CW=0;
	bcf	((c:_DtCW)),c,2
	line	224
	
l12910:; BSR set to: 1

;pomiar.c: 224: if(DtCW.CW<=65-2) DtCW._su_CW=1;
	movlw	(040h)&0ffh
	cpfslt	(0+((c:_DtCW)+02h)),c
	goto	u16741
	goto	u16740
u16741:
	goto	l1209
u16740:
	
l12912:; BSR set to: 1

	bsf	((c:_DtCW)),c,1
	goto	l1204
	line	225
	
l1209:; BSR set to: 1

;pomiar.c: 225: else DtCW._su_CW=0;
	bcf	((c:_DtCW)),c,1
	goto	l1204
	line	229
	
l12914:; BSR set to: 1

;pomiar.c: 227: else
;pomiar.c: 228: {
;pomiar.c: 229: if(DtCW.CW>70) DtCW._ad_CW=1;
	lfsr	2,(c:_DtCW)+02h
	movlw	(047h-1)
	cpfsgt	indf2
	goto	u16751
	goto	u16750
u16751:
	goto	l1212
u16750:
	
l12916:; BSR set to: 1

	bsf	((c:_DtCW)),c,2
	goto	l12918
	line	230
	
l1212:; BSR set to: 1

;pomiar.c: 230: else DtCW._ad_CW=0;
	bcf	((c:_DtCW)),c,2
	line	231
	
l12918:; BSR set to: 1

;pomiar.c: 231: if(DtCW.CW<=70-2) DtCW._su_CW=1;
	movlw	(045h)&0ffh
	cpfslt	(0+((c:_DtCW)+02h)),c
	goto	u16761
	goto	u16760
u16761:
	goto	l1209
u16760:
	goto	l12912
	line	234
	
l1204:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PomiarCW
	__end_of_PomiarCW:
	signat	_PomiarCW,88
	global	_ReadTabNTC

;; *************** function _ReadTabNTC *****************
;; Defined at:
;;		line 112 in file "C:\praca\PICC\backup\GRZ01V5\ac.c"
;; Parameters:    Size  Location     Type
;;  zrAC            1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  zrAC            1    2[BANK1 ] unsigned char 
;;  i               2    4[BANK1 ] unsigned int 
;;  data            1    3[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Read_b_eep
;; This function is called by:
;;		_PomiarCW
;; This function uses a non-reentrant model
;;
psect	text47,class=CODE,space=0,reloc=2
global __ptext47
__ptext47:
psect	text47
	file	"C:\praca\PICC\backup\GRZ01V5\ac.c"
	line	112
	global	__size_of_ReadTabNTC
	__size_of_ReadTabNTC	equ	__end_of_ReadTabNTC-_ReadTabNTC
	
_ReadTabNTC:; BSR set to: 1

;incstack = 0
	opt	stack 22
;incstack = 0
;ReadTabNTC@zrAC stored from wreg
	line	115
	movff	wreg,(ReadTabNTC@zrAC)
	
l12112:
;ac.c: 113: unsigned int i;
;ac.c: 114: unsigned char data;
;ac.c: 115: i=zrAC;
	movlb	1	; () banked
	movff	(ReadTabNTC@zrAC),(ReadTabNTC@i)
	clrf	((ReadTabNTC@i+1))&0ffh
	line	117
	
l12114:; BSR set to: 1

;ac.c: 117: if(i<0x34) i=0x34;
	movlw	034h
	subwf	((ReadTabNTC@i))&0ffh,w
	movlw	0
	subwfb	((ReadTabNTC@i+1))&0ffh,w
	btfsc	status,0
	goto	u15301
	goto	u15300
u15301:
	goto	l12118
u15300:
	
l12116:; BSR set to: 1

	movlw	high(034h)
	movwf	((ReadTabNTC@i+1))&0ffh
	movlw	low(034h)
	movwf	((ReadTabNTC@i))&0ffh
	line	118
	
l12118:; BSR set to: 1

;ac.c: 118: if(i>0xED) i=0xED;
	movlw	0EEh
	subwf	((ReadTabNTC@i))&0ffh,w
	movlw	0
	subwfb	((ReadTabNTC@i+1))&0ffh,w
	btfss	status,0
	goto	u15311
	goto	u15310
u15311:
	goto	l12122
u15310:
	
l12120:; BSR set to: 1

	movlw	high(0EDh)
	movwf	((ReadTabNTC@i+1))&0ffh
	movlw	low(0EDh)
	movwf	((ReadTabNTC@i))&0ffh
	line	119
	
l12122:; BSR set to: 1

;ac.c: 119: i-=0x34;
	movlw	034h
	subwf	((ReadTabNTC@i))&0ffh
	movlw	0
	subwfb	((ReadTabNTC@i+1))&0ffh
	line	120
	
l12124:; BSR set to: 1

;ac.c: 120: if(i>192) i=192;
	movlw	0C1h
	subwf	((ReadTabNTC@i))&0ffh,w
	movlw	0
	subwfb	((ReadTabNTC@i+1))&0ffh,w
	btfss	status,0
	goto	u15321
	goto	u15320
u15321:
	goto	l12128
u15320:
	
l12126:; BSR set to: 1

	movlw	high(0C0h)
	movwf	((ReadTabNTC@i+1))&0ffh
	movlw	low(0C0h)
	movwf	((ReadTabNTC@i))&0ffh
	line	123
	
l12128:; BSR set to: 1

;ac.c: 123: data=Read_b_eep(i);
	movff	(ReadTabNTC@i),(?_Read_b_eep)
	movff	(ReadTabNTC@i+1),(?_Read_b_eep+1)
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	((ReadTabNTC@data))&0ffh
	line	124
	
l12130:; BSR set to: 1

;ac.c: 124: return data;
	movf	((ReadTabNTC@data))&0ffh,w
	line	125
	
l272:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_ReadTabNTC
	__end_of_ReadTabNTC:
	signat	_ReadTabNTC,4217
	global	_ReadAC

;; *************** function _ReadAC *****************
;; Defined at:
;;		line 97 in file "C:\praca\PICC\backup\GRZ01V5\ac.c"
;; Parameters:    Size  Location     Type
;;  chanel          1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  chanel          1    0[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PomiarCW
;; This function uses a non-reentrant model
;;
psect	text48,class=CODE,space=0,reloc=2
global __ptext48
__ptext48:
psect	text48
	file	"C:\praca\PICC\backup\GRZ01V5\ac.c"
	line	97
	global	__size_of_ReadAC
	__size_of_ReadAC	equ	__end_of_ReadAC-_ReadAC
	
_ReadAC:; BSR set to: 1

;incstack = 0
	opt	stack 23
;incstack = 0
;ReadAC@chanel stored from wreg
	line	101
	movff	wreg,(ReadAC@chanel)
	
l12098:; BSR set to: 1

;ac.c: 101: CHS0=(chanel&0b00000001);
	btfss	((ReadAC@chanel))&0ffh,0
	bra	u15255
	bsf	c:(32274/8),(32274)&7	;volatile
	u15255:
	btfsc	((ReadAC@chanel))&0ffh,0
	bra	u15256
	bcf	c:(32274/8),(32274)&7	;volatile
	u15256:
	line	102
	
l12100:; BSR set to: 1

;ac.c: 102: CHS1=((chanel&0b00000010)>>1);
	movff	(ReadAC@chanel),??_ReadAC+0+0
	movlb	0	; () banked
	bcf	status,0
	rrcf	(??_ReadAC+0+0)&0ffh

	rrcf	(??_ReadAC+0+0)&0ffh,w
	btfss	status,0
	bra	u15265
	bsf	c:(32275/8),(32275)&7	;volatile
	u15265:
	btfsc	status,0
	bra	u15266
	bcf	c:(32275/8),(32275)&7	;volatile
	u15266:
	line	103
	
l12102:; BSR set to: 0

;ac.c: 103: CHS2=((chanel&0b00000100)>>2);
	movff	(ReadAC@chanel),??_ReadAC+0+0
	bcf	status,0
	rrcf	(??_ReadAC+0+0)&0ffh
	bcf	status,0
	rrcf	(??_ReadAC+0+0)&0ffh

	rrcf	(??_ReadAC+0+0)&0ffh,w
	btfss	status,0
	bra	u15275
	bsf	c:(32276/8),(32276)&7	;volatile
	u15275:
	btfsc	status,0
	bra	u15276
	bcf	c:(32276/8),(32276)&7	;volatile
	u15276:
	line	104
	
l12104:; BSR set to: 0

;ac.c: 104: CHS3=((chanel&0b00001000)>>3);
	movff	(ReadAC@chanel),??_ReadAC+0+0
	bcf	status,0
	rrcf	(??_ReadAC+0+0)&0ffh
	bcf	status,0
	rrcf	(??_ReadAC+0+0)&0ffh
	bcf	status,0
	rrcf	(??_ReadAC+0+0)&0ffh

	rrcf	(??_ReadAC+0+0)&0ffh,w
	btfss	status,0
	bra	u15285
	bsf	c:(32277/8),(32277)&7	;volatile
	u15285:
	btfsc	status,0
	bra	u15286
	bcf	c:(32277/8),(32277)&7	;volatile
	u15286:
	line	105
	
l12106:; BSR set to: 0

;ac.c: 105: GODONE=1;
	bsf	c:(32273/8),(32273)&7	;volatile
	line	106
;ac.c: 106: while(GODONE)continue;
	
l263:
	btfsc	c:(32273/8),(32273)&7	;volatile
	goto	u15291
	goto	u15290
u15291:
	goto	l263
u15290:
	line	107
	
l12108:
;ac.c: 107: return ADRESH;
	movf	((c:4036)),c,w	;volatile
	line	108
	
l266:
	return
	opt stack 0
GLOBAL	__end_of_ReadAC
	__end_of_ReadAC:
	signat	_ReadAC,4217
	global	_PrintErr

;; *************** function _PrintErr *****************
;; Defined at:
;;		line 45 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;  kod             1    wreg     const unsigned char 
;;  pls             1    6[BANK1 ] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  kod             1    7[BANK1 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;;		_SetData
;;		_SetPoz
;; This function is called by:
;;		_main
;;		_DecERR
;;		_Rozruch
;;		_DecyzjaPLM
;;		_DecyzjaPLM2
;;		_RuszCiag
;; This function uses a non-reentrant model
;;
psect	text49,class=CODE,space=0,reloc=2
global __ptext49
__ptext49:
psect	text49
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	45
	global	__size_of_PrintErr
	__size_of_PrintErr	equ	__end_of_PrintErr-_PrintErr
	
_PrintErr:
;incstack = 0
	opt	stack 24
;incstack = 0
;PrintErr@kod stored from wreg
	movff	wreg,(PrintErr@kod)
	line	46
	
l12644:; BSR set to: 1

;print.c: 46: if(pls)
	movf	((PrintErr@pls))&0ffh,w
	btfsc	status,2
	goto	u16081
	goto	u16080
u16081:
	goto	l12648
u16080:
	line	48
	
l12646:; BSR set to: 1

;print.c: 47: {
;print.c: 48: SetData(&DWD[0],0,kod);
	movlw	high(_DWD)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_DWD)
	movwf	((?_SetData))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetData+02h))&0ffh
	movff	(PrintErr@kod),0+(?_SetData+03h)
	call	_SetData	;wreg free
	line	49
;print.c: 49: SetData(&DWD[1],0b11111111,0b11111111);
	movlw	high(_DWD+04h)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_DWD+04h)
	movwf	((?_SetData))&0ffh
	movlw	low(0FFh)
	movwf	(0+(?_SetData+02h))&0ffh
	movlw	low(0FFh)
	movwf	(0+(?_SetData+03h))&0ffh
	call	_SetData	;wreg free
	line	50
;print.c: 50: SetStatus(&DWD[0],0b0010000000000000,0b1111111111111111);
	movlw	high(_DWD)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_DWD)
	movwf	((?_SetStatus))&0ffh
	movlw	high(02000h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(02000h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	line	51
;print.c: 51: SetStatus(&DWD[1],0b0000000000000000,0b1111111111111111);
	movlb	1	; () banked
	movlw	high(_DWD+04h)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_DWD+04h)
	movwf	((?_SetStatus))&0ffh
	movlw	high(0)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	line	52
;print.c: 52: }
	goto	l12650
	line	55
	
l12648:; BSR set to: 1

;print.c: 53: else
;print.c: 54: {
;print.c: 55: SetData(&DWD[0],0,kod);
	movlw	high(_DWD)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_DWD)
	movwf	((?_SetData))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetData+02h))&0ffh
	movff	(PrintErr@kod),0+(?_SetData+03h)
	call	_SetData	;wreg free
	line	56
;print.c: 56: SetData(&DWD[1],0,kod);
	movlw	high(_DWD+04h)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_DWD+04h)
	movwf	((?_SetData))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetData+02h))&0ffh
	movff	(PrintErr@kod),0+(?_SetData+03h)
	call	_SetData	;wreg free
	line	57
;print.c: 57: SetStatus(&DWD[0],0b0010000000000000,0b1111111111111111);
	movlw	high(_DWD)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_DWD)
	movwf	((?_SetStatus))&0ffh
	movlw	high(02000h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(02000h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	line	58
;print.c: 58: SetStatus(&DWD[1],0b0010000000000000,0b1111111111111111);
	movlb	1	; () banked
	movlw	high(_DWD+04h)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_DWD+04h)
	movwf	((?_SetStatus))&0ffh
	movlw	high(02000h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(02000h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	line	60
	
l12650:
;print.c: 59: }
;print.c: 60: SetPoz(0,0);
	movlw	low(0)
	movlb	0	; () banked
	movwf	((?_SetPoz))&0ffh
	movlw	(0)&0ffh
	
	call	_SetPoz
	line	61
	
l12652:; BSR set to: 0

;print.c: 61: SetPoz(0,1);
	movlw	low(01h)
	movwf	((?_SetPoz))&0ffh
	movlw	(0)&0ffh
	
	call	_SetPoz
	line	62
	
l1366:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PrintErr
	__end_of_PrintErr:
	signat	_PrintErr,8312
	global	_DecWSW

;; *************** function _DecWSW *****************
;; Defined at:
;;		line 240 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_PrintOFF
;;		_PrintCW
;;		_EndOFF
;;		_PrintNstCW
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text50,class=CODE,space=0,reloc=2
global __ptext50
__ptext50:
psect	text50
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	240
	global	__size_of_DecWSW
	__size_of_DecWSW	equ	__end_of_DecWSW-_DecWSW
	
_DecWSW:; BSR set to: 0

;incstack = 0
	opt	stack 24
;incstack = 0
	line	250
	
l12948:; BSR set to: 0

;main.c: 250: if(!RB1) PrintOFF();
	btfsc	c:(31753/8),(31753)&7	;volatile
	goto	u16821
	goto	u16820
u16821:
	goto	l12952
u16820:
	
l12950:; BSR set to: 0

	call	_PrintOFF	;wreg free
	goto	l12954
	line	253
	
l12952:; BSR set to: 0

;main.c: 251: else
;main.c: 252: {
;main.c: 253: PrintCW(DtCW.SCW,(M._AKTYWNE_SRW)?1:0);
	movf	(1+(_M+012h))&0ffh,w
	iorwf (0+(_M+012h))&0ffh,w

	btfss	status,2
	goto	u16831
	goto	u16830
u16831:
	movlw	1
	goto	u16836
u16830:
	movlw	0
u16836:
	movlb	1	; () banked
	movwf	((?_PrintCW))&0ffh
	movf	(0+((c:_DtCW)+0Bh)),c,w
	
	call	_PrintCW
	line	254
;main.c: 254: EndOFF();
	call	_EndOFF	;wreg free
	line	257
	
l12954:
;main.c: 255: }
;main.c: 257: if(DtCW._newPCW) PrintNstCW(DtCW.PCW,(M._AKTYWNE_SRW)?1:0);
	
	btfss	(0+((c:_DtCW)+01h)),c,0
	goto	u16841
	goto	u16840
u16841:
	goto	l756
u16840:
	
l12956:
	movlb	0	; () banked
	movf	(1+(_M+012h))&0ffh,w
	iorwf (0+(_M+012h))&0ffh,w

	btfss	status,2
	goto	u16851
	goto	u16850
u16851:
	movlw	1
	goto	u16856
u16850:
	movlw	0
u16856:
	movlb	1	; () banked
	movwf	((?_PrintNstCW))&0ffh
	movf	(0+((c:_DtCW)+03h)),c,w
	
	call	_PrintNstCW
	line	258
	
l756:
	return
	opt stack 0
GLOBAL	__end_of_DecWSW
	__end_of_DecWSW:
	signat	_DecWSW,88
	global	_PrintNstCW

;; *************** function _PrintNstCW *****************
;; Defined at:
;;		line 109 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;  nst             1    wreg     const unsigned char 
;;  krp             1    6[BANK1 ] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  nst             1    7[BANK1 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;;		_SetData
;;		_RestartKol
;; This function is called by:
;;		_DecWSW
;;		_FunkcjaSerwisowa
;;		_Rozruch
;; This function uses a non-reentrant model
;;
psect	text51,class=CODE,space=0,reloc=2
global __ptext51
__ptext51:
psect	text51
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	109
	global	__size_of_PrintNstCW
	__size_of_PrintNstCW	equ	__end_of_PrintNstCW-_PrintNstCW
	
_PrintNstCW:
;incstack = 0
	opt	stack 24
;incstack = 0
;PrintNstCW@nst stored from wreg
	movff	wreg,(PrintNstCW@nst)
	line	110
	
l13608:; BSR set to: 1

;print.c: 110: SetData(&DWD[3],0,nst);
	movlw	high(_DWD+0Ch)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_DWD+0Ch)
	movwf	((?_SetData))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetData+02h))&0ffh
	movff	(PrintNstCW@nst),0+(?_SetData+03h)
	call	_SetData	;wreg free
	line	111
;print.c: 111: SetData(&DWD[4],0b11111111,0b11111111);
	movlw	high(_DWD+010h)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_DWD+010h)
	movwf	((?_SetData))&0ffh
	movlw	low(0FFh)
	movwf	(0+(?_SetData+02h))&0ffh
	movlw	low(0FFh)
	movwf	(0+(?_SetData+03h))&0ffh
	call	_SetData	;wreg free
	line	112
	
l13610:; BSR set to: 1

;print.c: 112: if(!krp) SetStatus(&DWD[3],0b0100000000000000,0b1111111111111111);
	tstfsz	((PrintNstCW@krp))&0ffh
	goto	u18441
	goto	u18440
u18441:
	goto	l13614
u18440:
	
l13612:; BSR set to: 1

	movlw	high(_DWD+0Ch)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_DWD+0Ch)
	movwf	((?_SetStatus))&0ffh
	movlw	high(04000h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(04000h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	goto	l1390
	line	113
	
l13614:; BSR set to: 1

;print.c: 113: else SetStatus(&DWD[3],0b0100000000000000|0b0000100000000000,0b1111111111111111);
	movlw	high(_DWD+0Ch)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_DWD+0Ch)
	movwf	((?_SetStatus))&0ffh
	movlw	high(04800h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(04800h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	
l1390:
	line	114
;print.c: 114: SetStatus(&DWD[4],0b0000000000000000,0b1111111111111111);
	movlb	1	; () banked
	movlw	high(_DWD+010h)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_DWD+010h)
	movwf	((?_SetStatus))&0ffh
	movlw	high(0)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	line	115
;print.c: 115: RestartKol(2);
	movlw	(02h)&0ffh
	
	call	_RestartKol
	line	116
	
l1391:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PrintNstCW
	__end_of_PrintNstCW:
	signat	_PrintNstCW,8312
	global	_RestartKol

;; *************** function _RestartKol *****************
;; Defined at:
;;		line 695 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;  nrkol           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  nrkol           1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PrintNstCW
;; This function uses a non-reentrant model
;;
psect	text52,class=CODE,space=0,reloc=2
global __ptext52
__ptext52:
psect	text52
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	695
	global	__size_of_RestartKol
	__size_of_RestartKol	equ	__end_of_RestartKol-_RestartKol
	
_RestartKol:; BSR set to: 0

;incstack = 0
	opt	stack 24
;incstack = 0
;RestartKol@nrkol stored from wreg
	movff	wreg,(RestartKol@nrkol)
	line	696
	
l12074:
;wsw.c: 696: if (nrkol>=4) asm("RESET");
	movlw	(04h-1)
	movlb	0	; () banked
	cpfsgt	((RestartKol@nrkol))&0ffh
	goto	u15231
	goto	u15230
u15231:
	goto	l12078
u15230:
	
l12076:; BSR set to: 0

# 696 "C:\praca\PICC\backup\GRZ01V5\wsw.c"
RESET ;# 
psect	text52
	line	697
	
l12078:
;wsw.c: 697: KInd[nrkol].restart=1;
	movlb	0	; () banked
	movf	((RestartKol@nrkol))&0ffh,w
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	movlw	(01h & ((1<<1)-1))<<0
	iorwf	(indf2)&0ffh
	line	698
	
l208:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_RestartKol
	__end_of_RestartKol:
	signat	_RestartKol,4216
	global	_EndOFF

;; *************** function _EndOFF *****************
;; Defined at:
;;		line 132 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text53,class=CODE,space=0,reloc=2
global __ptext53
__ptext53:
psect	text53
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	132
	global	__size_of_EndOFF
	__size_of_EndOFF	equ	__end_of_EndOFF-_EndOFF
	
_EndOFF:; BSR set to: 0

;incstack = 0
	opt	stack 24
;incstack = 0
	line	133
	
l13606:; BSR set to: 1

;print.c: 133: SetStatus(&PWD[4],0b0000000001000000|0b0000000010000000,0b1111111111111111);
	movlw	high(_PWD+010h)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_PWD+010h)
	movwf	((?_SetStatus))&0ffh
	movlw	high(0C0h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(0C0h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	line	134
	
l1400:
	return
	opt stack 0
GLOBAL	__end_of_EndOFF
	__end_of_EndOFF:
	signat	_EndOFF,88
	global	_PrintCW

;; *************** function _PrintCW *****************
;; Defined at:
;;		line 140 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;  tm              1    wreg     const unsigned char 
;;  krp             1    6[BANK1 ] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  tm              1    7[BANK1 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;;		_SetData
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text54,class=CODE,space=0,reloc=2
global __ptext54
__ptext54:
psect	text54
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	140
	global	__size_of_PrintCW
	__size_of_PrintCW	equ	__end_of_PrintCW-_PrintCW
	
_PrintCW:
;incstack = 0
	opt	stack 24
;incstack = 0
;PrintCW@tm stored from wreg
	movff	wreg,(PrintCW@tm)
	line	141
	
l13600:; BSR set to: 1

;print.c: 141: if(!krp) SetStatus(&PWD[5],0b0100000000000000|0b1000000000000000,0b1111111111111111);
	tstfsz	((PrintCW@krp))&0ffh
	goto	u18431
	goto	u18430
u18431:
	goto	l13604
u18430:
	
l13602:; BSR set to: 1

	movlw	high(_PWD+014h)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_PWD+014h)
	movwf	((?_SetStatus))&0ffh
	movlw	high(0C000h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(0C000h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	goto	l1404
	line	142
	
l13604:; BSR set to: 1

;print.c: 142: else SetStatus(&PWD[5],0b0100000000000000|0b0000100000000000|0b1000000000000000,0b1111111111111111);
	movlw	high(_PWD+014h)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_PWD+014h)
	movwf	((?_SetStatus))&0ffh
	movlw	high(0C800h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(0C800h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	
l1404:
	line	143
;print.c: 143: SetData(&PWD[5],0,tm);
	movlb	1	; () banked
	movlw	high(_PWD+014h)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_PWD+014h)
	movwf	((?_SetData))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetData+02h))&0ffh
	movff	(PrintCW@tm),0+(?_SetData+03h)
	call	_SetData	;wreg free
	line	144
	
l1405:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PrintCW
	__end_of_PrintCW:
	signat	_PrintCW,8312
	global	_PrintOFF

;; *************** function _PrintOFF *****************
;; Defined at:
;;		line 126 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;;		_SetData
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text55,class=CODE,space=0,reloc=2
global __ptext55
__ptext55:
psect	text55
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	126
	global	__size_of_PrintOFF
	__size_of_PrintOFF	equ	__end_of_PrintOFF-_PrintOFF
	
_PrintOFF:; BSR set to: 1

;incstack = 0
	opt	stack 24
;incstack = 0
	line	127
	
l13598:; BSR set to: 0

;print.c: 127: SetStatus(&PWD[4],0b0000000001000000|0b0000000010000000|0b1000000000000000,0b1111111111111111);
	movlb	1	; () banked
	movlw	high(_PWD+010h)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_PWD+010h)
	movwf	((?_SetStatus))&0ffh
	movlw	high(080C0h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(080C0h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	line	128
;print.c: 128: SetData(&PWD[4],0b11111111,0b11111111);
	movlb	1	; () banked
	movlw	high(_PWD+010h)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_PWD+010h)
	movwf	((?_SetData))&0ffh
	movlw	low(0FFh)
	movwf	(0+(?_SetData+02h))&0ffh
	movlw	low(0FFh)
	movwf	(0+(?_SetData+03h))&0ffh
	call	_SetData	;wreg free
	line	129
	
l1397:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PrintOFF
	__end_of_PrintOFF:
	signat	_PrintOFF,88
	global	_FiltrPomiarowyCW

;; *************** function _FiltrPomiarowyCW *****************
;; Defined at:
;;		line 188 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : 0/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_StartTim1
;;		_PmrTim1
;;		_StartTim2
;;		_PmrTim2
;;		_GoldenEye
;;		_FltParMod
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text56,class=CODE,space=0,reloc=2
global __ptext56
__ptext56:
psect	text56
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	188
	global	__size_of_FiltrPomiarowyCW
	__size_of_FiltrPomiarowyCW	equ	__end_of_FiltrPomiarowyCW-_FiltrPomiarowyCW
	
_FiltrPomiarowyCW:; BSR set to: 1

;incstack = 0
	opt	stack 24
;incstack = 0
	line	191
	
l12934:
;pomiar.c: 191: if(PmrTim1(20))
	movlw	(014h)&0ffh
	
	call	_PmrTim1
	btfss	status,0
	goto	u16801
	goto	u16800
u16801:
	goto	l12940
u16800:
	line	193
	
l12936:; BSR set to: 0

;pomiar.c: 192: {
;pomiar.c: 193: StartTim1();
	call	_StartTim1	;wreg free
	line	194
	
l12938:; BSR set to: 0

;pomiar.c: 194: GoldenEye();
	call	_GoldenEye	;wreg free
	line	198
	
l12940:
;pomiar.c: 195: }
;pomiar.c: 198: DtCW.DCW=(DtCW.PPCW-(3-1))-DtCW.CW;
	movf	(0+((c:_DtCW)+02h)),c,w
	subwf	(0+((c:_DtCW)+04h)),c,w
	addlw	low(-2)
	movwf	(0+((c:_DtCW)+07h)),c
	line	199
	
l12942:
;pomiar.c: 199: if(PmrTim2(10))
	movlw	(0Ah)&0ffh
	
	call	_PmrTim2
	btfss	status,0
	goto	u16811
	goto	u16810
u16811:
	goto	l1198
u16810:
	line	201
	
l12944:; BSR set to: 0

;pomiar.c: 200: {
;pomiar.c: 201: StartTim2();
	call	_StartTim2	;wreg free
	line	202
	
l12946:; BSR set to: 0

;pomiar.c: 202: FltParMod();
	call	_FltParMod	;wreg free
	line	204
	
l1198:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_FiltrPomiarowyCW
	__end_of_FiltrPomiarowyCW:
	signat	_FiltrPomiarowyCW,88
	global	_FltParMod

;; *************** function _FltParMod *****************
;; Defined at:
;;		line 149 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  wr              1    0[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_PredkoscZmianCW
;; This function is called by:
;;		_FiltrPomiarowyCW
;; This function uses a non-reentrant model
;;
psect	text57,class=CODE,space=0,reloc=2
global __ptext57
__ptext57:
psect	text57
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	149
	global	__size_of_FltParMod
	__size_of_FltParMod	equ	__end_of_FltParMod-_FltParMod
	
_FltParMod:; BSR set to: 0

;incstack = 0
	opt	stack 24
;incstack = 0
	line	156
	
l14032:; BSR set to: 0

;pomiar.c: 150: static unsigned char indtm,fcw;
;pomiar.c: 151: unsigned char wr;
;pomiar.c: 156: if(DtCW.CW>fcw) wr=DtCW.CW-fcw;
	movf	(0+((c:_DtCW)+02h)),c,w
	cpfslt	((c:FltParMod@fcw)),c
	goto	u19181
	goto	u19180
u19181:
	goto	l14036
u19180:
	
l14034:; BSR set to: 0

	movf	((c:FltParMod@fcw)),c,w
	subwf	(0+((c:_DtCW)+02h)),c,w
	movwf	((FltParMod@wr))&0ffh
	goto	l14038
	line	157
	
l14036:; BSR set to: 0

;pomiar.c: 157: else wr=fcw-DtCW.CW;
	movf	(0+((c:_DtCW)+02h)),c,w
	subwf	((c:FltParMod@fcw)),c,w
	movwf	((FltParMod@wr))&0ffh
	line	158
	
l14038:; BSR set to: 0

;pomiar.c: 158: if(wr) DtCW.indCW++;
	movf	((FltParMod@wr))&0ffh,w
	btfsc	status,2
	goto	u19191
	goto	u19190
u19191:
	goto	l14042
u19190:
	
l14040:; BSR set to: 0

	incf	(0+((c:_DtCW)+0Ah)),c
	line	159
	
l14042:; BSR set to: 0

;pomiar.c: 159: if(wr>=2) DtCW.indCW=10;
	movlw	(02h-1)
	cpfsgt	((FltParMod@wr))&0ffh
	goto	u19201
	goto	u19200
u19201:
	goto	l14046
u19200:
	
l14044:; BSR set to: 0

	movlw	low(0Ah)
	movwf	(0+((c:_DtCW)+0Ah)),c
	line	161
	
l14046:; BSR set to: 0

;pomiar.c: 161: PredkoscZmianCW();
	call	_PredkoscZmianCW	;wreg free
	line	164
	
l14048:; BSR set to: 1

;pomiar.c: 164: indtm++;
	movlb	0	; () banked
	incf	((FltParMod@indtm))&0ffh
	line	165
	
l14050:; BSR set to: 0

;pomiar.c: 165: if(indtm>9)
	movlw	(0Ah-1)
	cpfsgt	((FltParMod@indtm))&0ffh
	goto	u19211
	goto	u19210
u19211:
	goto	l1193
u19210:
	line	167
	
l14052:; BSR set to: 0

;pomiar.c: 166: {
;pomiar.c: 167: indtm=0;
	clrf	((FltParMod@indtm))&0ffh
	line	170
	
l14054:; BSR set to: 0

;pomiar.c: 170: if(DtCW.indCW<=7)
	movlw	(08h)&0ffh
	cpfslt	(0+((c:_DtCW)+0Ah)),c
	goto	u19221
	goto	u19220
u19221:
	goto	l14058
u19220:
	line	172
	
l14056:; BSR set to: 0

;pomiar.c: 171: {
;pomiar.c: 172: DtCW.dDCW=0;
	clrf	(0+((c:_DtCW)+08h)),c
	line	173
;pomiar.c: 173: DtCW._fpCW=1;
	bsf	(0+((c:_DtCW)+01h)),c,2
	line	174
;pomiar.c: 174: }
	goto	l14064
	line	177
	
l14058:; BSR set to: 0

;pomiar.c: 175: else
;pomiar.c: 176: {
;pomiar.c: 177: DtCW.dDCW=DtCW.CW-fcw;
	movf	((c:FltParMod@fcw)),c,w
	subwf	(0+((c:_DtCW)+02h)),c,w
	movwf	(0+((c:_DtCW)+08h)),c
	line	178
	
l14060:; BSR set to: 0

;pomiar.c: 178: DtCW._fpCW=1;
	bsf	(0+((c:_DtCW)+01h)),c,2
	line	179
	
l14062:; BSR set to: 0

;pomiar.c: 179: fcw=DtCW.CW;
	movff	0+((c:_DtCW)+02h),(c:FltParMod@fcw)
	line	181
	
l14064:; BSR set to: 0

;pomiar.c: 180: }
;pomiar.c: 181: DtCW.indCW=0;
	clrf	(0+((c:_DtCW)+0Ah)),c
	line	183
	
l1193:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_FltParMod
	__end_of_FltParMod:
	signat	_FltParMod,88
	global	_PredkoscZmianCW

;; *************** function _PredkoscZmianCW *****************
;; Defined at:
;;		line 118 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  i               1    1[BANK1 ] unsigned char 
;;  w               1    0[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FltParMod
;; This function uses a non-reentrant model
;;
psect	text58,class=CODE,space=0,reloc=2
global __ptext58
__ptext58:
psect	text58
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	118
	global	__size_of_PredkoscZmianCW
	__size_of_PredkoscZmianCW	equ	__end_of_PredkoscZmianCW-_PredkoscZmianCW
	
_PredkoscZmianCW:; BSR set to: 0

;incstack = 0
	opt	stack 24
;incstack = 0
	line	122
	
l13980:; BSR set to: 0

;pomiar.c: 119: static unsigned char ffcw,indff;
;pomiar.c: 120: unsigned char i,w;
;pomiar.c: 122: if(!M._PRACA)
	
	btfsc	(0+(_M+019h))&0ffh,1
	goto	u19121
	goto	u19120
u19121:
	goto	l1169
u19120:
	line	124
	
l13982:; BSR set to: 0

;pomiar.c: 123: {
;pomiar.c: 124: ffcw=0;
	clrf	((PredkoscZmianCW@ffcw))&0ffh
	line	125
;pomiar.c: 125: indff=0;
	clrf	((c:PredkoscZmianCW@indff)),c
	line	126
;pomiar.c: 126: }
	goto	l14016
	line	127
	
l1169:; BSR set to: 0

	line	129
;pomiar.c: 127: else
;pomiar.c: 128: {
;pomiar.c: 129: if(!indff)
	tstfsz	((c:PredkoscZmianCW@indff)),c
	goto	u19131
	goto	u19130
u19131:
	goto	l13996
u19130:
	line	131
	
l13984:; BSR set to: 0

;pomiar.c: 130: {
;pomiar.c: 131: for(i=0;i<10;i++) wff[i]=0;
	movlb	1	; () banked
	clrf	((PredkoscZmianCW@i))&0ffh
	
l13990:; BSR set to: 1

	movlw	low(_wff)
	addwf	((PredkoscZmianCW@i))&0ffh,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_wff)
	addwfc	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	
l13992:; BSR set to: 1

	incf	((PredkoscZmianCW@i))&0ffh
	
l13994:; BSR set to: 1

	movlw	(0Ah-1)
	cpfsgt	((PredkoscZmianCW@i))&0ffh
	goto	u19141
	goto	u19140
u19141:
	goto	l13990
u19140:
	line	133
	
l13996:
;pomiar.c: 132: }
;pomiar.c: 133: indff++;
	incf	((c:PredkoscZmianCW@indff)),c
	line	134
	
l13998:
;pomiar.c: 134: if(indff>=9)
	movlw	(09h-1)
	cpfsgt	((c:PredkoscZmianCW@indff)),c
	goto	u19151
	goto	u19150
u19151:
	goto	l14014
u19150:
	line	136
	
l14000:
;pomiar.c: 135: {
;pomiar.c: 136: indff=9;
	movlw	low(09h)
	movwf	((c:PredkoscZmianCW@indff)),c
	line	137
	
l14002:
;pomiar.c: 137: for(i=0;i<9;i++) wff[i]=wff[i+1];
	movlb	1	; () banked
	clrf	((PredkoscZmianCW@i))&0ffh
	
l14008:; BSR set to: 1

	movlw	low(_wff+01h)
	addwf	((PredkoscZmianCW@i))&0ffh,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_wff+01h)
	addwfc	1+c:fsr2l
	movlw	low(_wff)
	addwf	((PredkoscZmianCW@i))&0ffh,w
	movwf	c:fsr1l
	clrf	1+c:fsr1l
	movlw	high(_wff)
	addwfc	1+c:fsr1l
	movff	indf2,indf1
	
l14010:; BSR set to: 1

	incf	((PredkoscZmianCW@i))&0ffh
	
l14012:; BSR set to: 1

	movlw	(09h-1)
	cpfsgt	((PredkoscZmianCW@i))&0ffh
	goto	u19161
	goto	u19160
u19161:
	goto	l14008
u19160:
	line	139
	
l14014:
;pomiar.c: 138: }
;pomiar.c: 139: wff[indff]=DtCW.CW-ffcw;
	movlb	1	; () banked
	movlw	low(_wff)
	addwf	((c:PredkoscZmianCW@indff)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_wff)
	addwfc	1+c:fsr2l
	movlb	0	; () banked
	movf	((PredkoscZmianCW@ffcw))&0ffh,w
	subwf	(0+((c:_DtCW)+02h)),c,w
	movwf	indf2

	line	141
	
l14016:; BSR set to: 0

;pomiar.c: 140: }
;pomiar.c: 141: ffcw=DtCW.CW;
	movff	0+((c:_DtCW)+02h),(PredkoscZmianCW@ffcw)
	line	142
	
l14018:; BSR set to: 0

;pomiar.c: 142: w=0;
	movlb	1	; () banked
	clrf	((PredkoscZmianCW@w))&0ffh
	line	143
	
l14020:; BSR set to: 1

;pomiar.c: 143: for(i=0;i<10;i++) w+=wff[i];
	clrf	((PredkoscZmianCW@i))&0ffh
	
l14026:; BSR set to: 1

	movlw	low(_wff)
	addwf	((PredkoscZmianCW@i))&0ffh,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_wff)
	addwfc	1+c:fsr2l
	movf	indf2,w
	addwf	((PredkoscZmianCW@w))&0ffh
	
l14028:; BSR set to: 1

	incf	((PredkoscZmianCW@i))&0ffh
	
l14030:; BSR set to: 1

	movlw	(0Ah-1)
	cpfsgt	((PredkoscZmianCW@i))&0ffh
	goto	u19171
	goto	u19170
u19171:
	goto	l14026
u19170:
	
l1178:; BSR set to: 1

	line	144
;pomiar.c: 144: DtCW.ddDCW=w;
	movff	(PredkoscZmianCW@w),0+((c:_DtCW)+09h)
	line	145
	
l1179:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PredkoscZmianCW
	__end_of_PredkoscZmianCW:
	signat	_PredkoscZmianCW,88
	global	_GoldenEye

;; *************** function _GoldenEye *****************
;; Defined at:
;;		line 86 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  dt              1   12[BANK1 ] char 
;;  pop             1   11[BANK1 ] char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___wmul
;; This function is called by:
;;		_FiltrPomiarowyCW
;; This function uses a non-reentrant model
;;
psect	text59,class=CODE,space=0,reloc=2
global __ptext59
__ptext59:
psect	text59
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	86
	global	__size_of_GoldenEye
	__size_of_GoldenEye	equ	__end_of_GoldenEye-_GoldenEye
	
_GoldenEye:; BSR set to: 1

;incstack = 0
	opt	stack 24
;incstack = 0
	line	91
	
l13948:; BSR set to: 0

;pomiar.c: 87: signed char dt;
;pomiar.c: 88: signed char pop;
;pomiar.c: 91: dt=DtCW.PPCW-DtCW.CW;
	movf	(0+((c:_DtCW)+02h)),c,w
	subwf	(0+((c:_DtCW)+04h)),c,w
	movlb	1	; () banked
	movwf	((GoldenEye@dt))&0ffh
	line	92
;pomiar.c: 92: if((DtCW.CW>=(DtCW.PPCW+11))||(DtCW.CW<=(DtCW.PPCW-11))) DtCW.SCW=DtCW.CW;
	movf	(0+((c:_DtCW)+04h)),c,w
	movwf	(??_GoldenEye+0+0)&0ffh
	clrf	(??_GoldenEye+0+0+1)&0ffh

	movlw	0Bh
	addwf	(??_GoldenEye+0+0)&0ffh
	movlw	0
	addwfc	(??_GoldenEye+0+1)&0ffh
	movf	(0+((c:_DtCW)+02h)),c,w
	movwf	(??_GoldenEye+2+0)&0ffh
	clrf	(??_GoldenEye+2+0+1)&0ffh

	movf	(??_GoldenEye+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_GoldenEye+4+0)&0ffh
	movf	(??_GoldenEye+0+0)&0ffh,w
	subwf	(??_GoldenEye+2+0)&0ffh,w
	movf	(??_GoldenEye+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_GoldenEye+4+0)&0ffh,w
	btfsc	status,0
	goto	u19011
	goto	u19010
u19011:
	goto	l1148
u19010:
	
l13950:; BSR set to: 1

	movf	(0+((c:_DtCW)+02h)),c,w
	movwf	(??_GoldenEye+0+0)&0ffh
	clrf	(??_GoldenEye+0+0+1)&0ffh

	movlw	low(-11)
	addwf	(0+((c:_DtCW)+04h)),c,w
	movwf	(??_GoldenEye+2+0)&0ffh
	clrf	1+(??_GoldenEye+2+0)&0ffh
	movlw	high(-11)
	addwfc	1+(??_GoldenEye+2+0)&0ffh
	movf	(??_GoldenEye+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_GoldenEye+4+0)&0ffh
	movf	(??_GoldenEye+0+0)&0ffh,w
	subwf	(??_GoldenEye+2+0)&0ffh,w
	movf	(??_GoldenEye+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_GoldenEye+4+0)&0ffh,w
	btfss	status,0
	goto	u19021
	goto	u19020
u19021:
	goto	l1146
u19020:
	
l1148:; BSR set to: 1

	movff	0+((c:_DtCW)+02h),0+((c:_DtCW)+0Bh)
	goto	l1162
	line	93
	
l1146:; BSR set to: 1

	line	95
;pomiar.c: 93: else
;pomiar.c: 94: {
;pomiar.c: 95: if(dt>=0)
	btfsc	((GoldenEye@dt))&0ffh,7
	goto	u19031
	goto	u19030
u19031:
	goto	l13966
u19030:
	line	97
	
l13952:; BSR set to: 1

;pomiar.c: 96: {
;pomiar.c: 97: if(dt<3) pop=dt;
	movf	((GoldenEye@dt))&0ffh,w
	xorlw	80h
	addlw	-((03h)^80h)
	btfsc	status,0
	goto	u19041
	goto	u19040
u19041:
	goto	l13956
u19040:
	
l13954:; BSR set to: 1

	movff	(GoldenEye@dt),(GoldenEye@pop)
	goto	l1152
	line	99
	
l13956:; BSR set to: 1

;pomiar.c: 98: else
;pomiar.c: 99: if((dt>=3)&&(dt<=(11-3))) pop=3;
	movf	((GoldenEye@dt))&0ffh,w
	xorlw	80h
	addlw	-((03h)^80h)
	btfss	status,0
	goto	u19051
	goto	u19050
u19051:
	goto	l13962
u19050:
	
l13958:; BSR set to: 1

	movf	((GoldenEye@dt))&0ffh,w
	xorlw	80h
	addlw	-((09h)^80h)
	btfsc	status,0
	goto	u19061
	goto	u19060
u19061:
	goto	l13962
u19060:
	
l13960:; BSR set to: 1

	movlw	low(03h)
	movwf	((GoldenEye@pop))&0ffh
	goto	l1152
	line	101
	
l13962:; BSR set to: 1

;pomiar.c: 100: else
;pomiar.c: 101: if(dt>(11-3)) pop=11-dt;
	movf	((GoldenEye@dt))&0ffh,w
	xorlw	80h
	addlw	-((09h)^80h)
	btfss	status,0
	goto	u19071
	goto	u19070
u19071:
	goto	l1152
u19070:
	
l13964:; BSR set to: 1

	movf	((GoldenEye@dt))&0ffh,w
	sublw	low(0Bh)
	movwf	((GoldenEye@pop))&0ffh
	line	102
	
l1152:; BSR set to: 1

;pomiar.c: 102: DtCW.SCW=DtCW.CW+pop;
	movf	(0+((c:_DtCW)+02h)),c,w
	addwf	((GoldenEye@pop))&0ffh,w
	movwf	(0+((c:_DtCW)+0Bh)),c
	line	103
;pomiar.c: 103: }
	goto	l1162
	line	106
	
l13966:; BSR set to: 1

;pomiar.c: 104: else
;pomiar.c: 105: {
;pomiar.c: 106: if((-1*dt)<3) pop=(-1*dt);
	movf	((GoldenEye@dt))&0ffh,w
	movwf	((?___wmul))&0ffh
	clrf	((?___wmul+1))&0ffh
	btfsc	((?___wmul))&0ffh,7
	decf	((?___wmul+1))&0ffh
	movlw	high(01h)
	movwf	(1+(?___wmul+02h))&0ffh
	movlw	low(01h)
	movwf	(0+(?___wmul+02h))&0ffh
	call	___wmul	;wreg free
	comf	(0+?___wmul)&0ffh
	comf	(1+?___wmul)&0ffh
	infsnz	(0+?___wmul)&0ffh
	incf	(1+?___wmul)&0ffh
	movf	(1+?___wmul)&0ffh,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	03h
	btfsc	status,2
	subwf	(0+?___wmul)&0ffh,w
	btfsc	status,0
	goto	u19081
	goto	u19080
u19081:
	goto	l13970
u19080:
	
l13968:; BSR set to: 1

	movf	((GoldenEye@dt))&0ffh,w
	mullw	01h
	movf	(prodl),c,w
	sublw	0
	movwf	((GoldenEye@pop))&0ffh
	goto	l1158
	line	108
	
l13970:; BSR set to: 1

;pomiar.c: 107: else
;pomiar.c: 108: if(((-1*dt)>=3)&&((-1*dt)<=(11-3))) pop=3;
	movf	((GoldenEye@dt))&0ffh,w
	movwf	((?___wmul))&0ffh
	clrf	((?___wmul+1))&0ffh
	btfsc	((?___wmul))&0ffh,7
	decf	((?___wmul+1))&0ffh
	movlw	high(01h)
	movwf	(1+(?___wmul+02h))&0ffh
	movlw	low(01h)
	movwf	(0+(?___wmul+02h))&0ffh
	call	___wmul	;wreg free
	comf	(0+?___wmul)&0ffh
	comf	(1+?___wmul)&0ffh
	infsnz	(0+?___wmul)&0ffh
	incf	(1+?___wmul)&0ffh
	movf	(1+?___wmul)&0ffh,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	03h
	btfsc	status,2
	subwf	(0+?___wmul)&0ffh,w
	btfss	status,0
	goto	u19091
	goto	u19090
u19091:
	goto	l13976
u19090:
	
l13972:; BSR set to: 1

	movf	((GoldenEye@dt))&0ffh,w
	movwf	((?___wmul))&0ffh
	clrf	((?___wmul+1))&0ffh
	btfsc	((?___wmul))&0ffh,7
	decf	((?___wmul+1))&0ffh
	movlw	high(01h)
	movwf	(1+(?___wmul+02h))&0ffh
	movlw	low(01h)
	movwf	(0+(?___wmul+02h))&0ffh
	call	___wmul	;wreg free
	comf	(0+?___wmul)&0ffh
	comf	(1+?___wmul)&0ffh
	infsnz	(0+?___wmul)&0ffh
	incf	(1+?___wmul)&0ffh
	movf	(1+?___wmul)&0ffh,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	09h
	btfsc	status,2
	subwf	(0+?___wmul)&0ffh,w
	btfsc	status,0
	goto	u19101
	goto	u19100
u19101:
	goto	l13976
u19100:
	
l13974:; BSR set to: 1

	movlw	low(03h)
	movwf	((GoldenEye@pop))&0ffh
	goto	l1158
	line	110
	
l13976:; BSR set to: 1

;pomiar.c: 109: else
;pomiar.c: 110: if((-1*dt)>(11-3)) pop=11+dt;
	movf	((GoldenEye@dt))&0ffh,w
	movwf	((?___wmul))&0ffh
	clrf	((?___wmul+1))&0ffh
	btfsc	((?___wmul))&0ffh,7
	decf	((?___wmul+1))&0ffh
	movlw	high(01h)
	movwf	(1+(?___wmul+02h))&0ffh
	movlw	low(01h)
	movwf	(0+(?___wmul+02h))&0ffh
	call	___wmul	;wreg free
	comf	(0+?___wmul)&0ffh
	comf	(1+?___wmul)&0ffh
	infsnz	(0+?___wmul)&0ffh
	incf	(1+?___wmul)&0ffh
	movf	(1+?___wmul)&0ffh,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	09h
	btfsc	status,2
	subwf	(0+?___wmul)&0ffh,w
	btfss	status,0
	goto	u19111
	goto	u19110
u19111:
	goto	l1158
u19110:
	
l13978:; BSR set to: 1

	movf	((GoldenEye@dt))&0ffh,w
	addlw	low(0Bh)
	movwf	((GoldenEye@pop))&0ffh
	line	111
	
l1158:; BSR set to: 1

;pomiar.c: 111: DtCW.SCW=DtCW.CW-pop;
	movf	((GoldenEye@pop))&0ffh,w
	subwf	(0+((c:_DtCW)+02h)),c,w
	movwf	(0+((c:_DtCW)+0Bh)),c
	line	114
	
l1162:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_GoldenEye
	__end_of_GoldenEye:
	signat	_GoldenEye,88
	global	_PmrTim2

;; *************** function _PmrTim2 *****************
;; Defined at:
;;		line 68 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;  tm              1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  tm              1    0[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FiltrPomiarowyCW
;; This function uses a non-reentrant model
;;
psect	text60,class=CODE,space=0,reloc=2
global __ptext60
__ptext60:
psect	text60
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	68
	global	__size_of_PmrTim2
	__size_of_PmrTim2	equ	__end_of_PmrTim2-_PmrTim2
	
_PmrTim2:; BSR set to: 1

;incstack = 0
	opt	stack 25
;incstack = 0
;PmrTim2@tm stored from wreg
	movff	wreg,(PmrTim2@tm)
	line	69
	
l13938:
;pomiar.c: 69: if(PmrtimFlt2<tm) return 0;
	movlb	0	; () banked
	movf	((PmrTim2@tm))&0ffh,w
	cpfslt	((_PmrtimFlt2))&0ffh
	goto	u19001
	goto	u19000
u19001:
	goto	l13944
u19000:
	
l13940:; BSR set to: 0

	bcf	status,0
	goto	l1136
	line	70
	
l13944:; BSR set to: 0

;pomiar.c: 70: return 1;
	bsf	status,0
	line	71
	
l1136:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PmrTim2
	__end_of_PmrTim2:
	signat	_PmrTim2,4216
	global	_StartTim2

;; *************** function _StartTim2 *****************
;; Defined at:
;;		line 64 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FiltrPomiarowyCW
;; This function uses a non-reentrant model
;;
psect	text61,class=CODE,space=0,reloc=2
global __ptext61
__ptext61:
psect	text61
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	64
	global	__size_of_StartTim2
	__size_of_StartTim2	equ	__end_of_StartTim2-_StartTim2
	
_StartTim2:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	65
	
l13936:; BSR set to: 0

;pomiar.c: 65: PmrtimFlt2=0;
	clrf	((_PmrtimFlt2))&0ffh
	line	66
	
l1132:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_StartTim2
	__end_of_StartTim2:
	signat	_StartTim2,88
	global	_PmrTim1

;; *************** function _PmrTim1 *****************
;; Defined at:
;;		line 57 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;  tm              1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  tm              1    0[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 0/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FiltrPomiarowyCW
;; This function uses a non-reentrant model
;;
psect	text62,class=CODE,space=0,reloc=2
global __ptext62
__ptext62:
psect	text62
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	57
	global	__size_of_PmrTim1
	__size_of_PmrTim1	equ	__end_of_PmrTim1-_PmrTim1
	
_PmrTim1:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
;PmrTim1@tm stored from wreg
	movff	wreg,(PmrTim1@tm)
	line	58
	
l13926:
;pomiar.c: 58: if(PmrtimFlt1<tm) return 0;
	movlb	0	; () banked
	movf	((PmrTim1@tm))&0ffh,w
	cpfslt	((_PmrtimFlt1))&0ffh
	goto	u18991
	goto	u18990
u18991:
	goto	l13932
u18990:
	
l13928:; BSR set to: 0

	bcf	status,0
	goto	l1129
	line	59
	
l13932:; BSR set to: 0

;pomiar.c: 59: return 1;
	bsf	status,0
	line	60
	
l1129:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PmrTim1
	__end_of_PmrTim1:
	signat	_PmrTim1,4216
	global	_StartTim1

;; *************** function _StartTim1 *****************
;; Defined at:
;;		line 53 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FiltrPomiarowyCW
;; This function uses a non-reentrant model
;;
psect	text63,class=CODE,space=0,reloc=2
global __ptext63
__ptext63:
psect	text63
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	53
	global	__size_of_StartTim1
	__size_of_StartTim1	equ	__end_of_StartTim1-_StartTim1
	
_StartTim1:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	54
	
l13924:; BSR set to: 0

;pomiar.c: 54: PmrtimFlt1=0;
	clrf	((_PmrtimFlt1))&0ffh
	line	55
	
l1125:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_StartTim1
	__end_of_StartTim1:
	signat	_StartTim1,88
	global	_WritePCW

;; *************** function _WritePCW *****************
;; Defined at:
;;		line 247 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_StartRTdS
;;		_RTdS
;;		_WriteEEPCW
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text64,class=CODE,space=0,reloc=2
global __ptext64
__ptext64:
psect	text64
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	247
	global	__size_of_WritePCW
	__size_of_WritePCW	equ	__end_of_WritePCW-_WritePCW
	
_WritePCW:; BSR set to: 0

;incstack = 0
	opt	stack 24
;incstack = 0
	line	248
	
l12922:; BSR set to: 1

;pomiar.c: 248: if(!M._AKTYWNE_KNF)
	movlb	0	; () banked
	movf	(1+(_M+016h))&0ffh,w
	iorwf (0+(_M+016h))&0ffh,w

	btfss	status,2
	goto	u16771
	goto	u16770
u16771:
	goto	l1225
u16770:
	line	250
	
l12924:; BSR set to: 0

;pomiar.c: 249: {
;pomiar.c: 250: if(DtCW._wrtPCW&&RTdS(6)>=20)
	
	btfss	(0+((c:_DtCW)+01h)),c,1
	goto	u16781
	goto	u16780
u16781:
	goto	l1225
u16780:
	
l12926:; BSR set to: 0

	movlw	(06h)&0ffh
	
	call	_RTdS
	movwf	(??_WritePCW+0+0)&0ffh
	movlw	(014h)&0ffh
	subwf	((??_WritePCW+0+0))&0ffh,w
	btfss	status,0
	goto	u16791
	goto	u16790
u16791:
	goto	l1225
u16790:
	line	252
	
l12928:; BSR set to: 1

;pomiar.c: 251: {
;pomiar.c: 252: DtCW._wrtPCW=0;
	bcf	(0+((c:_DtCW)+01h)),c,1
	line	253
	
l12930:; BSR set to: 1

;pomiar.c: 253: StartRTdS(6);
	movlw	(06h)&0ffh
	
	call	_StartRTdS
	line	254
	
l12932:; BSR set to: 1

;pomiar.c: 254: WriteEEPCW();
	call	_WriteEEPCW	;wreg free
	line	257
	
l1225:
	return
	opt stack 0
GLOBAL	__end_of_WritePCW
	__end_of_WritePCW:
	signat	_WritePCW,88
	global	_WriteEEPCW

;; *************** function _WriteEEPCW *****************
;; Defined at:
;;		line 220 in file "C:\praca\PICC\backup\GRZ01V5\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Busy_eep
;;		_Write_b_eep
;; This function is called by:
;;		_WritePCW
;; This function uses a non-reentrant model
;;
psect	text65,class=CODE,space=0,reloc=2
global __ptext65
__ptext65:
psect	text65
	file	"C:\praca\PICC\backup\GRZ01V5\konfig.c"
	line	220
	global	__size_of_WriteEEPCW
	__size_of_WriteEEPCW	equ	__end_of_WriteEEPCW-_WriteEEPCW
	
_WriteEEPCW:
;incstack = 0
	opt	stack 24
;incstack = 0
	line	221
	
l14070:; BSR set to: 1

;konfig.c: 221: (Busy_eep(), Write_b_eep(0x00C3,DtCW.PCW));
	call	_Busy_eep	;wreg free
	
l14072:; BSR set to: 1

	movlw	high(0C3h)
	movwf	((?_Write_b_eep+1))&0ffh
	movlw	low(0C3h)
	movwf	((?_Write_b_eep))&0ffh
	movff	0+((c:_DtCW)+03h),0+(?_Write_b_eep+02h)
	call	_Write_b_eep	;wreg free
	line	222
	
l2620:
	return
	opt stack 0
GLOBAL	__end_of_WriteEEPCW
	__end_of_WriteEEPCW:
	signat	_WriteEEPCW,88
	global	_MKonfiguracja

;; *************** function _MKonfiguracja *****************
;; Defined at:
;;		line 48 in file "C:\praca\PICC\backup\GRZ01V5\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  mxcw            1    0        unsigned char 
;;  mxco            1    0        unsigned char 
;;  mstr            1    0        unsigned char 
;;  rgz             1    0        unsigned char 
;;  prm             1    0        unsigned char 
;;  key             1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    9
;; This function calls:
;;		_RdPrt
;;		_SetBufKey1
;;		_PresKey1
;;		_SetBufKey2
;;		_PresKey2
;;		_StartRTS
;;		_RTS
;;		_StartRTM
;;		_RTM
;;		_Busy_eep
;;		_Write_b_eep
;;		_PrintPR
;;		_PrintWPR
;;		_ModParam
;;		_MocStart
;;		_MocMaksCW
;;		_ReadDataONL
;;		_ReadDataXONL
;;		_ExitKonf
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text66,class=CODE,space=0,reloc=2
global __ptext66
__ptext66:
psect	text66
	file	"C:\praca\PICC\backup\GRZ01V5\konfig.c"
	line	48
	global	__size_of_MKonfiguracja
	__size_of_MKonfiguracja	equ	__end_of_MKonfiguracja-_MKonfiguracja
	
_MKonfiguracja:
;incstack = 0
	opt	stack 21
;incstack = 0
	line	52
	
l12760:; BSR set to: 0

;konfig.c: 50: static unsigned char zustr;
;konfig.c: 52: if(!DtKNF.enknf) return;
	
	btfsc	((_DtKNF))&0ffh,0
	goto	u16371
	goto	u16370
u16371:
	goto	l12764
u16370:
	goto	l2574
	line	53
	
l12764:; BSR set to: 0

;konfig.c: 53: if(DtKNF.KRK&&(RTM(0)>=10))
	movf	(0+(_DtKNF+02h))&0ffh,w
	btfsc	status,2
	goto	u16381
	goto	u16380
u16381:
	goto	l12894
u16380:
	
l12766:; BSR set to: 0

	movlw	(0)&0ffh
	
	call	_RTM
	movlb	1	; () banked
	movwf	(??_MKonfiguracja+0+0)&0ffh
	movlw	(0Ah)&0ffh
	subwf	((??_MKonfiguracja+0+0))&0ffh,w
	btfss	status,0
	goto	u16391
	goto	u16390
u16391:
	goto	l12894
u16390:
	line	55
	
l12768:
;konfig.c: 54: {
;konfig.c: 55: ExitKonf();
	call	_ExitKonf	;wreg free
	goto	l2574
	line	64
	
l12772:; BSR set to: 0

;konfig.c: 62: {
;konfig.c: 64: if((RTS(0)>=20))
	movlw	(0)&0ffh
	
	call	_RTS
	movwf	(??_MKonfiguracja+0+0)&0ffh
	movlw	(014h)&0ffh
	subwf	((??_MKonfiguracja+0+0))&0ffh,w
	btfss	status,0
	goto	u16401
	goto	u16400
u16401:
	goto	l2578
u16400:
	line	66
	
l12774:; BSR set to: 1

;konfig.c: 65: {
;konfig.c: 66: bfrs=0;
	movlb	0	; () banked
	clrf	((_bfrs))&0ffh
	line	67
;konfig.c: 67: DtKNF.enknf=0;
	bcf	((_DtKNF))&0ffh,0
	line	68
;konfig.c: 68: M._AKTYWNE_KNF=0;
	clrf	(0+(_M+016h))&0ffh
	clrf	(1+(_M+016h))&0ffh
	line	69
;konfig.c: 69: return;
	goto	l2574
	line	70
	
l2578:; BSR set to: 1

	line	72
;konfig.c: 70: }
;konfig.c: 72: if(!bfrs&&RdPrt(1)&&RdPrt(0))
	movlb	0	; () banked
	tstfsz	((_bfrs))&0ffh
	goto	u16411
	goto	u16410
u16411:
	goto	l12784
u16410:
	
l12776:; BSR set to: 0

	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u16421
	goto	u16420
u16421:
	goto	l12784
u16420:
	
l12778:; BSR set to: 0

	movlw	(0)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u16431
	goto	u16430
u16431:
	goto	l12784
u16430:
	line	74
	
l12780:; BSR set to: 0

;konfig.c: 73: {
;konfig.c: 74: bfrs=1;
	movlw	low(01h)
	movwf	((_bfrs))&0ffh
	line	75
	
l12782:; BSR set to: 0

;konfig.c: 75: StartRTS(1);
	movlw	(01h)&0ffh
	
	call	_StartRTS
	line	78
	
l12784:
;konfig.c: 76: }
;konfig.c: 78: if(bfrs&&RdPrt(1)&&RdPrt(0))
	movlb	0	; () banked
	movf	((_bfrs))&0ffh,w
	btfsc	status,2
	goto	u16441
	goto	u16440
u16441:
	goto	l12800
u16440:
	
l12786:; BSR set to: 0

	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u16451
	goto	u16450
u16451:
	goto	l12800
u16450:
	
l12788:; BSR set to: 0

	movlw	(0)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u16461
	goto	u16460
u16461:
	goto	l12800
u16460:
	line	80
	
l12790:; BSR set to: 0

;konfig.c: 79: {
;konfig.c: 80: if(RTS(1)>=5)
	movlw	(01h)&0ffh
	
	call	_RTS
	movwf	(??_MKonfiguracja+0+0)&0ffh
	movlw	(05h)&0ffh
	subwf	((??_MKonfiguracja+0+0))&0ffh,w
	btfss	status,0
	goto	u16471
	goto	u16470
u16471:
	goto	l2574
u16470:
	line	83
	
l12792:; BSR set to: 1

;konfig.c: 81: {
;konfig.c: 83: M._AKTYWNE_KNF=1;
	movlw	high(01h)
	movlb	0	; () banked
	movwf	(1+(_M+016h))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+016h))&0ffh
	line	84
;konfig.c: 84: DtKNF.PRM=1;
	movlw	low(01h)
	movwf	(0+(_DtKNF+01h))&0ffh
	line	85
;konfig.c: 85: DtKNF.KRK=1;
	movlw	low(01h)
	movwf	(0+(_DtKNF+02h))&0ffh
	line	86
	
l12794:; BSR set to: 0

;konfig.c: 86: StartRTM(0);
	movlw	(0)&0ffh
	
	call	_StartRTM
	line	87
	
l12796:; BSR set to: 0

;konfig.c: 87: SetBufKey1();
	call	_SetBufKey1	;wreg free
	line	88
	
l12798:; BSR set to: 0

;konfig.c: 88: SetBufKey2();
	call	_SetBufKey2	;wreg free
	goto	l2574
	line	93
	
l12800:; BSR set to: 0

;konfig.c: 91: else
;konfig.c: 92: {
;konfig.c: 93: DtKNF.PRM=1;
	movlw	low(01h)
	movwf	(0+(_DtKNF+01h))&0ffh
	line	94
	
l12802:; BSR set to: 0

;konfig.c: 94: DtKNF.KRK=0;
	clrf	(0+(_DtKNF+02h))&0ffh
	line	95
	
l12804:; BSR set to: 0

;konfig.c: 95: bfrs=0;
	clrf	((_bfrs))&0ffh
	goto	l2574
	line	103
	
l12808:; BSR set to: 0

;konfig.c: 102: {
;konfig.c: 103: if(PresKey2(RdPrt(1)))
	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16481
	goto	u16480
u16481:
	movlw	1
	goto	u16486
u16480:
	movlw	0
u16486:
	
	call	_PresKey2
	iorlw	0
	btfsc	status,2
	goto	u16491
	goto	u16490
u16491:
	goto	l12816
u16490:
	line	105
	
l12810:; BSR set to: 0

;konfig.c: 104: {
;konfig.c: 105: DtKNF.PRM++;
	incf	(0+(_DtKNF+01h))&0ffh
	line	106
	
l12812:; BSR set to: 0

;konfig.c: 106: if(DtKNF.PRM>4) DtKNF.PRM=1;
	lfsr	2,_DtKNF+01h
	movlw	(05h-1)
	cpfsgt	indf2
	goto	u16501
	goto	u16500
u16501:
	goto	l12816
u16500:
	
l12814:; BSR set to: 0

	movlw	low(01h)
	movwf	(0+(_DtKNF+01h))&0ffh
	line	108
	
l12816:; BSR set to: 0

;konfig.c: 107: }
;konfig.c: 108: if(DtKNF.PRM<4) PrintPR(0b11110101,DtKNF.PRM,0);
	movlw	(04h)&0ffh
	cpfslt	(0+(_DtKNF+01h))&0ffh
	goto	u16511
	goto	u16510
u16511:
	goto	l12820
u16510:
	
l12818:; BSR set to: 0

	movff	0+(_DtKNF+01h),(?_PrintPR)
	movlw	low(0)
	movlb	1	; () banked
	movwf	(0+(?_PrintPR+01h))&0ffh
	movlw	(0F5h)&0ffh
	
	call	_PrintPR
	goto	l12822
	line	109
	
l12820:; BSR set to: 0

;konfig.c: 109: else PrintPR(0b01100001,0b11010101,1);
	movlw	low(0D5h)
	movlb	1	; () banked
	movwf	((?_PrintPR))&0ffh
	movlw	low(01h)
	movwf	(0+(?_PrintPR+01h))&0ffh
	movlw	(061h)&0ffh
	
	call	_PrintPR
	line	110
	
l12822:; BSR set to: 0

;konfig.c: 110: if(DtKNF.PRM==4)
	movf	(0+(_DtKNF+01h))&0ffh,w
	xorlw	4

	btfss	status,2
	goto	u16521
	goto	u16520
u16521:
	goto	l12830
u16520:
	line	112
	
l12824:; BSR set to: 0

;konfig.c: 111: {
;konfig.c: 112: if(PresKey1(RdPrt(0)))
	movlw	(0)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16531
	goto	u16530
u16531:
	movlw	1
	goto	u16536
u16530:
	movlw	0
u16536:
	
	call	_PresKey1
	iorlw	0
	btfsc	status,2
	goto	u16541
	goto	u16540
u16541:
	goto	l2574
u16540:
	line	114
	
l12826:; BSR set to: 0

;konfig.c: 113: {
;konfig.c: 114: DtKNF.KRK=2;
	movlw	low(02h)
	movwf	(0+(_DtKNF+02h))&0ffh
	line	115
	
l12828:; BSR set to: 0

;konfig.c: 115: DtKNF.PRM=0;
	clrf	(0+(_DtKNF+01h))&0ffh
	goto	l2574
	line	119
	
l12830:; BSR set to: 0

;konfig.c: 118: else
;konfig.c: 119: if(DtKNF.PRM!=4)
	movf	(0+(_DtKNF+01h))&0ffh,w
	xorlw	4

	btfsc	status,2
	goto	u16551
	goto	u16550
u16551:
	goto	l2574
u16550:
	line	121
	
l12832:; BSR set to: 0

;konfig.c: 120: {
;konfig.c: 121: if(PresKey1(RdPrt(0)))
	movlw	(0)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16561
	goto	u16560
u16561:
	movlw	1
	goto	u16566
u16560:
	movlw	0
u16566:
	
	call	_PresKey1
	iorlw	0
	btfsc	status,2
	goto	u16571
	goto	u16570
u16571:
	goto	l2574
u16570:
	line	123
	
l12834:; BSR set to: 0

;konfig.c: 122: {
;konfig.c: 123: SetBufKey1();
	call	_SetBufKey1	;wreg free
	line	124
	
l12836:; BSR set to: 0

;konfig.c: 124: DtKNF.KRK=2;
	movlw	low(02h)
	movwf	(0+(_DtKNF+02h))&0ffh
	goto	l2574
	line	137
	
l12838:; BSR set to: 0

;konfig.c: 136: {
;konfig.c: 137: if(!RdPrt(0))
	movlw	(0)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16581
	goto	u16580
u16581:
	goto	l2574
u16580:
	goto	l12768
	line	147
	
l12844:; BSR set to: 0

;konfig.c: 146: {
;konfig.c: 147: if(!ReadDataXONL(RdPrt(1),&DtKNF.mstr,0,99,1,1,PresKey1(RdPrt(0))))
	movlw	low(_DtKNF+03h)
	movlb	1	; () banked
	movwf	((?_ReadDataXONL))&0ffh
	movlw	low(0)
	movwf	(0+(?_ReadDataXONL+01h))&0ffh
	movlw	low(063h)
	movwf	(0+(?_ReadDataXONL+02h))&0ffh
	movlw	low(01h)
	movwf	(0+(?_ReadDataXONL+03h))&0ffh
	movlw	low(01h)
	movwf	(0+(?_ReadDataXONL+04h))&0ffh
	movlw	(0)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16591
	goto	u16590
u16591:
	movlw	1
	goto	u16596
u16590:
	movlw	0
u16596:
	
	call	_PresKey1
	movlb	1	; () banked
	movwf	(0+(?_ReadDataXONL+05h))&0ffh
	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16601
	goto	u16600
u16601:
	movlw	1
	goto	u16606
u16600:
	movlw	0
u16606:
	
	call	_ReadDataXONL
	iorlw	0
	btfss	status,2
	goto	u16611
	goto	u16610
u16611:
	goto	l2600
u16610:
	line	149
	
l12846:
;konfig.c: 148: {
;konfig.c: 149: PrintWPR(DtKNF.mstr);
	movlb	0	; () banked
	movf	(0+(_DtKNF+03h))&0ffh,w
	
	call	_PrintWPR
	line	150
	
l12848:; BSR set to: 0

;konfig.c: 150: MocStart(DtKNF.mstr);
	movf	(0+(_DtKNF+03h))&0ffh,w
	
	call	_MocStart
	line	151
	
l12850:; BSR set to: 1

;konfig.c: 151: if(RdPrt(6)) DtKNF.wymCW=1;
	movlw	(06h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u16621
	goto	u16620
u16621:
	goto	l2601
u16620:
	
l12852:; BSR set to: 0

	bsf	((_DtKNF))&0ffh,2
	goto	l2574
	line	152
	
l2601:; BSR set to: 0

;konfig.c: 152: else DtKNF.wymCW=0;
	bcf	((_DtKNF))&0ffh,2
	goto	l2574
	line	154
	
l2600:
	line	156
;konfig.c: 154: else
;konfig.c: 155: {
;konfig.c: 156: DtKNF.wymCW=0;
	movlb	0	; () banked
	bcf	((_DtKNF))&0ffh,2
	line	157
	
l12854:; BSR set to: 0

;konfig.c: 157: (Busy_eep(), Write_b_eep(0x00C1,DtKNF.mstr));
	call	_Busy_eep	;wreg free
	
l12856:; BSR set to: 0

	movlw	high(0C1h)
	movlb	1	; () banked
	movwf	((?_Write_b_eep+1))&0ffh
	movlw	low(0C1h)
	movwf	((?_Write_b_eep))&0ffh
	movff	0+(_DtKNF+03h),0+(?_Write_b_eep+02h)
	call	_Write_b_eep	;wreg free
	line	158
	
l12858:
;konfig.c: 158: DtKNF.KRK=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	(0+(_DtKNF+02h))&0ffh
	goto	l2574
	line	165
	
l12860:; BSR set to: 0

;konfig.c: 164: {
;konfig.c: 165: if(!ReadDataXONL(RdPrt(1),&DtKNF.mxcw,0,99,1,1,PresKey1(RdPrt(0))))
	movlw	low(_DtKNF+04h)
	movlb	1	; () banked
	movwf	((?_ReadDataXONL))&0ffh
	movlw	low(0)
	movwf	(0+(?_ReadDataXONL+01h))&0ffh
	movlw	low(063h)
	movwf	(0+(?_ReadDataXONL+02h))&0ffh
	movlw	low(01h)
	movwf	(0+(?_ReadDataXONL+03h))&0ffh
	movlw	low(01h)
	movwf	(0+(?_ReadDataXONL+04h))&0ffh
	movlw	(0)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16631
	goto	u16630
u16631:
	movlw	1
	goto	u16636
u16630:
	movlw	0
u16636:
	
	call	_PresKey1
	movlb	1	; () banked
	movwf	(0+(?_ReadDataXONL+05h))&0ffh
	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16641
	goto	u16640
u16641:
	movlw	1
	goto	u16646
u16640:
	movlw	0
u16646:
	
	call	_ReadDataXONL
	iorlw	0
	btfss	status,2
	goto	u16651
	goto	u16650
u16651:
	goto	l2605
u16650:
	line	167
	
l12862:
;konfig.c: 166: {
;konfig.c: 167: PrintWPR(DtKNF.mxcw);
	movlb	0	; () banked
	movf	(0+(_DtKNF+04h))&0ffh,w
	
	call	_PrintWPR
	line	168
	
l12864:; BSR set to: 0

;konfig.c: 168: MocMaksCW(DtKNF.mxcw);
	movf	(0+(_DtKNF+04h))&0ffh,w
	
	call	_MocMaksCW
	line	169
	
l12866:; BSR set to: 1

;konfig.c: 169: if(RdPrt(6)) DtKNF.wymCW=1;
	movlw	(06h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u16661
	goto	u16660
u16661:
	goto	l2601
u16660:
	goto	l12852
	line	172
	
l2605:
	line	174
;konfig.c: 172: else
;konfig.c: 173: {
;konfig.c: 174: DtKNF.wymCW=0;
	movlb	0	; () banked
	bcf	((_DtKNF))&0ffh,2
	line	175
	
l12870:; BSR set to: 0

;konfig.c: 175: (Busy_eep(), Write_b_eep(0x00C2,DtKNF.mxcw));
	call	_Busy_eep	;wreg free
	
l12872:; BSR set to: 0

	movlw	high(0C2h)
	movlb	1	; () banked
	movwf	((?_Write_b_eep+1))&0ffh
	movlw	low(0C2h)
	movwf	((?_Write_b_eep))&0ffh
	movff	0+(_DtKNF+04h),0+(?_Write_b_eep+02h)
	call	_Write_b_eep	;wreg free
	goto	l12858
	line	183
	
l12876:; BSR set to: 0

;konfig.c: 182: {
;konfig.c: 183: if(!ReadDataONL(RdPrt(1),&DtKNF.rdgz,0,1,1,PresKey1(RdPrt(0))))
	movlw	low(_DtKNF+08h)
	movlb	1	; () banked
	movwf	((?_ReadDataONL))&0ffh
	movlw	low(0)
	movwf	(0+(?_ReadDataONL+01h))&0ffh
	movlw	low(01h)
	movwf	(0+(?_ReadDataONL+02h))&0ffh
	movlw	low(01h)
	movwf	(0+(?_ReadDataONL+03h))&0ffh
	movlw	(0)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16671
	goto	u16670
u16671:
	movlw	1
	goto	u16676
u16670:
	movlw	0
u16676:
	
	call	_PresKey1
	movlb	1	; () banked
	movwf	(0+(?_ReadDataONL+04h))&0ffh
	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16681
	goto	u16680
u16681:
	movlw	1
	goto	u16686
u16680:
	movlw	0
u16686:
	
	call	_ReadDataONL
	iorlw	0
	btfss	status,2
	goto	u16691
	goto	u16690
u16691:
	goto	l12880
u16690:
	line	184
	
l12878:; BSR set to: 1

;konfig.c: 184: PrintWPR(DtKNF.rdgz);
	movlb	0	; () banked
	movf	(0+(_DtKNF+08h))&0ffh,w
	
	call	_PrintWPR
	goto	l2574
	line	187
	
l12880:; BSR set to: 1

;konfig.c: 185: else
;konfig.c: 186: {
;konfig.c: 187: (Busy_eep(), Write_b_eep(0x00C4,DtKNF.rdgz));
	call	_Busy_eep	;wreg free
	
l12882:; BSR set to: 1

	movlw	high(0C4h)
	movwf	((?_Write_b_eep+1))&0ffh
	movlw	low(0C4h)
	movwf	((?_Write_b_eep))&0ffh
	movff	0+(_DtKNF+08h),0+(?_Write_b_eep+02h)
	call	_Write_b_eep	;wreg free
	line	188
	
l12884:
;konfig.c: 188: ModParam(DtKNF.tpkt,DtKNF.rdgz);
	movff	0+(_DtKNF+08h),(?_ModParam)
	movlb	0	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	
	call	_ModParam
	goto	l12858
	line	132
	
l12890:; BSR set to: 0

	movf	(0+(_DtKNF+01h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l12838
	xorlw	1^0	; case 1
	skipnz
	goto	l12844
	xorlw	2^1	; case 2
	skipnz
	goto	l12860
	xorlw	3^2	; case 3
	skipnz
	goto	l12876
	goto	l2574

	line	58
	
l12894:
	movlb	0	; () banked
	movf	(0+(_DtKNF+02h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 3, Range of values is 0 to 2
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           10     6 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l12772
	xorlw	1^0	; case 1
	skipnz
	goto	l12808
	xorlw	2^1	; case 2
	skipnz
	goto	l12890
	goto	l2574

	line	197
	
l2574:
	return
	opt stack 0
GLOBAL	__end_of_MKonfiguracja
	__end_of_MKonfiguracja:
	signat	_MKonfiguracja,88
	global	_ExitKonf

;; *************** function _ExitKonf *****************
;; Defined at:
;;		line 33 in file "C:\praca\PICC\backup\GRZ01V5\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    8
;; This function calls:
;;		_RdEEParam
;;		_PomiarPCW
;;		_EndPR
;; This function is called by:
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text67,class=CODE,space=0,reloc=2
global __ptext67
__ptext67:
psect	text67
	file	"C:\praca\PICC\backup\GRZ01V5\konfig.c"
	line	33
	global	__size_of_ExitKonf
	__size_of_ExitKonf	equ	__end_of_ExitKonf-_ExitKonf
	
_ExitKonf:
;incstack = 0
	opt	stack 21
;incstack = 0
	line	34
	
l14800:
;konfig.c: 34: M._AKTYWNE_KNF=0;
	movlb	0	; () banked
	clrf	(0+(_M+016h))&0ffh
	clrf	(1+(_M+016h))&0ffh
	line	35
;konfig.c: 35: DtKNF.wymCW=0;
	bcf	((_DtKNF))&0ffh,2
	line	36
	
l14802:; BSR set to: 0

;konfig.c: 36: EndPR();
	call	_EndPR	;wreg free
	line	37
	
l14804:; BSR set to: 0

;konfig.c: 37: DtKNF.enknf=0;
	bcf	((_DtKNF))&0ffh,0
	line	38
	
l14806:; BSR set to: 0

;konfig.c: 38: DtKNF.PRM=1;
	movlw	low(01h)
	movwf	(0+(_DtKNF+01h))&0ffh
	line	39
	
l14808:; BSR set to: 0

;konfig.c: 39: DtKNF.KRK=0;
	clrf	(0+(_DtKNF+02h))&0ffh
	line	40
	
l14810:; BSR set to: 0

;konfig.c: 40: bfrs=0;
	clrf	((_bfrs))&0ffh
	line	41
	
l14812:; BSR set to: 0

;konfig.c: 41: RdEEParam();
	call	_RdEEParam	;wreg free
	line	42
	
l14814:; BSR set to: 0

;konfig.c: 42: PomiarPCW();
	call	_PomiarPCW	;wreg free
	line	43
	
l14816:; BSR set to: 1

;konfig.c: 43: DtCW._newPCW=0;
	bcf	(0+((c:_DtCW)+01h)),c,0
	line	44
	
l14818:; BSR set to: 1

;konfig.c: 44: DtCW._wrtPCW=0;
	bcf	(0+((c:_DtCW)+01h)),c,1
	line	45
	
l2568:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_ExitKonf
	__end_of_ExitKonf:
	signat	_ExitKonf,88
	global	_EndPR

;; *************** function _EndPR *****************
;; Defined at:
;;		line 96 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_ResetKol
;; This function is called by:
;;		_ExitKonf
;; This function uses a non-reentrant model
;;
psect	text68,class=CODE,space=0,reloc=2
global __ptext68
__ptext68:
psect	text68
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	96
	global	__size_of_EndPR
	__size_of_EndPR	equ	__end_of_EndPR-_EndPR
	
_EndPR:; BSR set to: 1

;incstack = 0
	opt	stack 23
;incstack = 0
	line	97
	
l14222:; BSR set to: 0

;print.c: 97: ResetKol(1);
	movlw	(01h)&0ffh
	
	call	_ResetKol
	line	98
	
l1383:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_EndPR
	__end_of_EndPR:
	signat	_EndPR,88
	global	_ResetKol

;; *************** function _ResetKol *****************
;; Defined at:
;;		line 688 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;  nrkol           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  nrkol           1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_EndErr
;;		_EndPR
;; This function uses a non-reentrant model
;;
psect	text69,class=CODE,space=0,reloc=2
global __ptext69
__ptext69:
psect	text69
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	688
	global	__size_of_ResetKol
	__size_of_ResetKol	equ	__end_of_ResetKol-_ResetKol
	
_ResetKol:; BSR set to: 0

;incstack = 0
	opt	stack 23
;incstack = 0
;ResetKol@nrkol stored from wreg
	movff	wreg,(ResetKol@nrkol)
	line	689
	
l12068:
;wsw.c: 689: if (nrkol>=4) asm("RESET");
	movlw	(04h-1)
	movlb	0	; () banked
	cpfsgt	((ResetKol@nrkol))&0ffh
	goto	u15221
	goto	u15220
u15221:
	goto	l12072
u15220:
	
l12070:; BSR set to: 0

# 689 "C:\praca\PICC\backup\GRZ01V5\wsw.c"
RESET ;# 
psect	text69
	line	690
	
l12072:
;wsw.c: 690: KInd[nrkol].reset=1;
	movlb	0	; () banked
	movf	((ResetKol@nrkol))&0ffh,w
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	movlw	(01h & ((1<<1)-1))<<1
	iorwf	(indf2)&0ffh
	line	691
	
l204:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ResetKol
	__end_of_ResetKol:
	signat	_ResetKol,4216
	global	_PomiarPCW

;; *************** function _PomiarPCW *****************
;; Defined at:
;;		line 260 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    7
;; This function calls:
;;		_ReturnACfromNTC
;;		_RdPrt
;;		_StartRTdS
;;		_RTdS
;;		_SetModPCW
;;		_ReadDataXONLI
;;		_ReadDataXONLD
;;		_RNst
;; This function is called by:
;;		_main
;;		_ErrPTG
;;		_ExitKonf
;; This function uses a non-reentrant model
;;
psect	text70,class=CODE,space=0,reloc=2
global __ptext70
__ptext70:
psect	text70
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	260
	global	__size_of_PomiarPCW
	__size_of_PomiarPCW	equ	__end_of_PomiarPCW-_PomiarPCW
	
_PomiarPCW:; BSR set to: 0

;incstack = 0
	opt	stack 21
;incstack = 0
	line	263
	
l12694:
;pomiar.c: 261: static unsigned char pnst;
;pomiar.c: 263: DtCW.minPCW=35;
	movlw	low(023h)
	movwf	(0+((c:_DtCW)+05h)),c
	line	264
;pomiar.c: 264: DtCW.maxPCW=60;
	movlw	low(03Ch)
	movwf	(0+((c:_DtCW)+06h)),c
	line	287
	
l12696:
;pomiar.c: 287: if(!(RdPrt(0)&&RdPrt(1)))
	movlw	(0)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u16151
	goto	u16150
u16151:
	goto	l1232
u16150:
	
l12698:; BSR set to: 0

	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16161
	goto	u16160
u16161:
	goto	l1234
u16160:
	
l1232:; BSR set to: 0

	line	289
;pomiar.c: 288: {
;pomiar.c: 289: if(!M._RUSZ_PLOMIEN&&!M._RUSZ_STB&&!M._RUSZ_CIAG&&!M._RUSZ_NTC_CW)
	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u16171
	goto	u16170
u16171:
	goto	l1234
u16170:
	
l12700:; BSR set to: 0

	
	btfsc	(0+(_M+018h))&0ffh,2
	goto	u16181
	goto	u16180
u16181:
	goto	l1234
u16180:
	
l12702:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,6
	goto	u16191
	goto	u16190
u16191:
	goto	l1234
u16190:
	
l12704:; BSR set to: 0

	
	btfsc	(0+(_M+018h))&0ffh,1
	goto	u16201
	goto	u16200
u16201:
	goto	l1234
u16200:
	line	291
	
l12706:; BSR set to: 0

;pomiar.c: 290: {
;pomiar.c: 291: if(!M._AKTYWNE_KNF&&!M._AKTYWNE_SRW)
	movf	(1+(_M+016h))&0ffh,w
	iorwf (0+(_M+016h))&0ffh,w

	btfss	status,2
	goto	u16211
	goto	u16210
u16211:
	goto	l1234
u16210:
	
l12708:; BSR set to: 0

	movf	(1+(_M+012h))&0ffh,w
	iorwf (0+(_M+012h))&0ffh,w

	btfss	status,2
	goto	u16221
	goto	u16220
u16221:
	goto	l1234
u16220:
	line	293
	
l12710:; BSR set to: 0

;pomiar.c: 292: {
;pomiar.c: 293: if(!RdPrt(0))
	movlw	(0)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16231
	goto	u16230
u16231:
	goto	l12720
u16230:
	line	295
	
l12712:; BSR set to: 0

;pomiar.c: 294: {
;pomiar.c: 295: ReadDataXONLI(RdPrt(1),&DtCW.PCW,DtCW.maxPCW,1,1);
	movlw	low((c:_DtCW)+03h)
	movlb	1	; () banked
	movwf	((?_ReadDataXONLI))&0ffh
	movff	0+((c:_DtCW)+06h),0+(?_ReadDataXONLI+01h)
	movlw	low(01h)
	movwf	(0+(?_ReadDataXONLI+02h))&0ffh
	movlw	low(01h)
	movwf	(0+(?_ReadDataXONLI+03h))&0ffh
	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16241
	goto	u16240
u16241:
	movlw	1
	goto	u16246
u16240:
	movlw	0
u16246:
	
	call	_ReadDataXONLI
	line	296
	
l12714:
;pomiar.c: 296: if(RdPrt(1)&&(DtCW.PCW==DtCW.maxPCW)) DtCW._newPCW=1;
	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u16251
	goto	u16250
u16251:
	goto	l12720
u16250:
	
l12716:; BSR set to: 0

	movf	(0+((c:_DtCW)+06h)),c,w
	lfsr	2,(c:_DtCW)+03h
	cpfseq	indf2
	goto	u16261
	goto	u16260
u16261:
	goto	l12720
u16260:
	
l12718:; BSR set to: 0

	bsf	(0+((c:_DtCW)+01h)),c,0
	line	298
	
l12720:; BSR set to: 0

;pomiar.c: 297: }
;pomiar.c: 298: if(!RdPrt(1))
	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16271
	goto	u16270
u16271:
	goto	l12730
u16270:
	line	300
	
l12722:; BSR set to: 0

;pomiar.c: 299: {
;pomiar.c: 300: ReadDataXONLD(RdPrt(0),&DtCW.PCW,DtCW.minPCW,1,1);
	movlw	low((c:_DtCW)+03h)
	movlb	1	; () banked
	movwf	((?_ReadDataXONLD))&0ffh
	movff	0+((c:_DtCW)+05h),0+(?_ReadDataXONLD+01h)
	movlw	low(01h)
	movwf	(0+(?_ReadDataXONLD+02h))&0ffh
	movlw	low(01h)
	movwf	(0+(?_ReadDataXONLD+03h))&0ffh
	movlw	(0)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16281
	goto	u16280
u16281:
	movlw	1
	goto	u16286
u16280:
	movlw	0
u16286:
	
	call	_ReadDataXONLD
	line	301
	
l12724:
;pomiar.c: 301: if(RdPrt(0)&&(DtCW.PCW==DtCW.minPCW)) DtCW._newPCW=1;
	movlw	(0)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u16291
	goto	u16290
u16291:
	goto	l12730
u16290:
	
l12726:; BSR set to: 0

	movf	(0+((c:_DtCW)+05h)),c,w
	lfsr	2,(c:_DtCW)+03h
	cpfseq	indf2
	goto	u16301
	goto	u16300
u16301:
	goto	l12730
u16300:
	
l12728:; BSR set to: 0

	bsf	(0+((c:_DtCW)+01h)),c,0
	line	303
	
l12730:; BSR set to: 0

;pomiar.c: 302: }
;pomiar.c: 303: if(!RdPrt(0)&&!RdPrt(1))
	movlw	(0)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16311
	goto	u16310
u16311:
	goto	l12740
u16310:
	
l12732:; BSR set to: 0

	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u16321
	goto	u16320
u16321:
	goto	l12740
u16320:
	line	305
	
l12734:; BSR set to: 0

;pomiar.c: 304: {
;pomiar.c: 305: if(DtCW._wrtPCW)
	
	btfss	(0+((c:_DtCW)+01h)),c,1
	goto	u16331
	goto	u16330
u16331:
	goto	l12738
u16330:
	line	307
	
l12736:; BSR set to: 0

;pomiar.c: 306: {
;pomiar.c: 307: if(RTdS(6)>5) DtCW._newPCW=0;
	movlw	(06h)&0ffh
	
	call	_RTdS
	movwf	(??_PomiarPCW+0+0)&0ffh
	movlw	(06h)&0ffh
	subwf	((??_PomiarPCW+0+0))&0ffh,w
	btfss	status,0
	goto	u16341
	goto	u16340
u16341:
	goto	l12740
u16340:
	
l12738:
	bcf	(0+((c:_DtCW)+01h)),c,0
	line	311
	
l12740:
;pomiar.c: 310: }
;pomiar.c: 311: if(DtCW.PCW!=pnst)
	movf	(0+((c:_DtCW)+03h)),c,w
	movlb	0	; () banked
	xorwf	((PomiarPCW@pnst))&0ffh,w
	btfsc	status,2
	goto	u16351
	goto	u16350
u16351:
	goto	l1245
u16350:
	line	313
	
l12742:; BSR set to: 0

;pomiar.c: 312: {
;pomiar.c: 313: pnst=DtCW.PCW;
	movff	0+((c:_DtCW)+03h),(PomiarPCW@pnst)
	line	315
;pomiar.c: 315: DtCW._newPCW=1;
	bsf	(0+((c:_DtCW)+01h)),c,0
	line	316
	
l12744:; BSR set to: 0

;pomiar.c: 316: RNst(DtCW.PCW);
	movf	(0+((c:_DtCW)+03h)),c,w
	
	call	_RNst
	line	318
	
l12746:; BSR set to: 1

;pomiar.c: 318: DtCW._wrtPCW=1;
	bsf	(0+((c:_DtCW)+01h)),c,1
	line	319
	
l12748:; BSR set to: 1

;pomiar.c: 319: StartRTdS(6);
	movlw	(06h)&0ffh
	
	call	_StartRTdS
	goto	l12750
	line	321
	
l1234:; BSR set to: 0

	bcf	(0+((c:_DtCW)+01h)),c,0
	goto	l12750
	line	322
	
l1245:; BSR set to: 0

	line	325
;pomiar.c: 323: }else DtCW._newPCW=0;
	
l12750:
;pomiar.c: 325: SetModPCW();
	call	_SetModPCW	;wreg free
	line	326
;pomiar.c: 326: DtCW.DAD_CW=ReturnACfromNTC(DtCW.PPCW-(3-1));
	movf	(0+((c:_DtCW)+04h)),c,w
	addlw	low(0FEh)
	
	call	_ReturnACfromNTC
	movwf	(0+((c:_DtCW)+0Eh)),c
	line	327
;pomiar.c: 327: DtCW.MAD_CW=ReturnACfromNTC(DtCW.PPCW-(3-1)-9);
	movf	(0+((c:_DtCW)+04h)),c,w
	addlw	low(0F5h)
	
	call	_ReturnACfromNTC
	movwf	(0+((c:_DtCW)+0Dh)),c
	line	328
	
l1247:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PomiarPCW
	__end_of_PomiarPCW:
	signat	_PomiarPCW,88
	global	_RNst

;; *************** function _RNst *****************
;; Defined at:
;;		line 103 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;  nst             1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  nst             1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetData
;; This function is called by:
;;		_PomiarPCW
;; This function uses a non-reentrant model
;;
psect	text71,class=CODE,space=0,reloc=2
global __ptext71
__ptext71:
psect	text71
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	103
	global	__size_of_RNst
	__size_of_RNst	equ	__end_of_RNst-_RNst
	
_RNst:; BSR set to: 1

;incstack = 0
	opt	stack 22
;incstack = 0
;RNst@nst stored from wreg
	movff	wreg,(RNst@nst)
	line	104
	
l14158:; BSR set to: 0

;print.c: 104: SetData(&DWD[3],0,nst);
	movlb	1	; () banked
	movlw	high(_DWD+0Ch)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_DWD+0Ch)
	movwf	((?_SetData))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetData+02h))&0ffh
	movff	(RNst@nst),0+(?_SetData+03h)
	call	_SetData	;wreg free
	line	105
;print.c: 105: SetData(&DWD[4],0b11111111,0b11111111);
	movlw	high(_DWD+010h)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_DWD+010h)
	movwf	((?_SetData))&0ffh
	movlw	low(0FFh)
	movwf	(0+(?_SetData+02h))&0ffh
	movlw	low(0FFh)
	movwf	(0+(?_SetData+03h))&0ffh
	call	_SetData	;wreg free
	line	106
	
l1386:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RNst
	__end_of_RNst:
	signat	_RNst,4216
	global	_ReadDataXONLD

;; *************** function _ReadDataXONLD *****************
;; Defined at:
;;		line 240 in file "C:\praca\PICC\backup\GRZ01V5\readdtal.c"
;; Parameters:    Size  Location     Type
;;  k               1    wreg     unsigned char 
;;  dt              1    4[BANK1 ] PTR unsigned char 
;;		 -> DtCW(15), 
;;  min             1    5[BANK1 ] unsigned char 
;;  step            1    6[BANK1 ] const unsigned char 
;;  step2           1    7[BANK1 ] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  k               1   13[BANK1 ] unsigned char 
;;  key             1   14[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       11 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_ExPresKey2B
;;		___lbdiv
;; This function is called by:
;;		_PomiarPCW
;; This function uses a non-reentrant model
;;
psect	text72,class=CODE,space=0,reloc=2
global __ptext72
__ptext72:
psect	text72
	file	"C:\praca\PICC\backup\GRZ01V5\readdtal.c"
	line	240
	global	__size_of_ReadDataXONLD
	__size_of_ReadDataXONLD	equ	__end_of_ReadDataXONLD-_ReadDataXONLD
	
_ReadDataXONLD:; BSR set to: 1

;incstack = 0
	opt	stack 21
;incstack = 0
;ReadDataXONLD@k stored from wreg
	line	245
	movff	wreg,(ReadDataXONLD@k)
	line	243
	
l14114:; BSR set to: 0

	line	245
;readdtal.c: 245: if(!dtmo)
	movlb	(ReadDataXONLD@dtmo/8) >> 8
	btfsc	(ReadDataXONLD@dtmo/8),c,(ReadDataXONLD@dtmo)&7
	goto	u19311
	goto	u19310
u19311:
	goto	l14118
u19310:
	line	247
	
l14116:
;readdtal.c: 246: {
;readdtal.c: 247: dtmo=1;
	movlb	(ReadDataXONLD@dtmo/8) >> 8
	bsf	(ReadDataXONLD@dtmo/8),c,(ReadDataXONLD@dtmo)&7
	line	248
;readdtal.c: 248: ktu=0;
	movlb	0	; () banked
	clrf	((ReadDataXONLD@ktu))&0ffh
	line	249
;readdtal.c: 249: iu=0;
	clrf	((ReadDataXONLD@iu))&0ffh
	line	252
	
l14118:
;readdtal.c: 250: }
;readdtal.c: 252: if(key=ExPresKey2B(k,5,ktu))
	movlw	low(05h)
	movlb	1	; () banked
	movwf	((?_ExPresKey2B))&0ffh
	movff	(ReadDataXONLD@ktu),0+(?_ExPresKey2B+01h)
	movf	((ReadDataXONLD@k))&0ffh,w
	
	call	_ExPresKey2B
	movwf	((ReadDataXONLD@key))&0ffh
	movlb	1	; () banked
	movf	((ReadDataXONLD@key))&0ffh,w
	btfsc	status,2
	goto	u19321
	goto	u19320
u19321:
	goto	l2496
u19320:
	line	254
	
l14120:; BSR set to: 1

;readdtal.c: 253: {
;readdtal.c: 254: if(key==1)
	decf	((ReadDataXONLD@key))&0ffh,w

	btfss	status,2
	goto	u19331
	goto	u19330
u19331:
	goto	l14132
u19330:
	line	256
	
l14122:; BSR set to: 1

;readdtal.c: 255: {
;readdtal.c: 256: iu=0;
	movlb	0	; () banked
	clrf	((ReadDataXONLD@iu))&0ffh
	line	257
	
l14124:; BSR set to: 0

;readdtal.c: 257: ktu=5;
	movlw	low(05h)
	movwf	((ReadDataXONLD@ktu))&0ffh
	line	258
	
l14126:; BSR set to: 0

;readdtal.c: 258: if(*dt-step>min) *dt=*dt-step;
	movlb	1	; () banked
	movf	((ReadDataXONLD@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_ReadDataXONLD+0+0)&0ffh
	clrf	(??_ReadDataXONLD+0+0+1)&0ffh

	movf	((ReadDataXONLD@step))&0ffh,w
	subwf	(??_ReadDataXONLD+0+0)&0ffh
	movlw	0
	subwfb	(??_ReadDataXONLD+0+1)&0ffh
	movf	((ReadDataXONLD@min))&0ffh,w
	movwf	(??_ReadDataXONLD+2+0)&0ffh
	clrf	(??_ReadDataXONLD+2+0+1)&0ffh

	movf	(??_ReadDataXONLD+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ReadDataXONLD+4+0)&0ffh
	movf	(??_ReadDataXONLD+0+0)&0ffh,w
	subwf	(??_ReadDataXONLD+2+0)&0ffh,w
	movf	(??_ReadDataXONLD+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ReadDataXONLD+4+0)&0ffh,w
	btfsc	status,0
	goto	u19341
	goto	u19340
u19341:
	goto	l14130
u19340:
	
l14128:; BSR set to: 1

	movf	((ReadDataXONLD@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	((ReadDataXONLD@dt))&0ffh,w
	movwf	fsr1l
	clrf	fsr1h
	movf	indf1,w
	movwf	(??_ReadDataXONLD+0+0)&0ffh
	movf	((ReadDataXONLD@step))&0ffh,w
	subwf	((??_ReadDataXONLD+0+0))&0ffh,w
	movwf	indf2

	goto	l14132
	line	259
	
l14130:; BSR set to: 1

;readdtal.c: 259: else *dt=min;
	movf	((ReadDataXONLD@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movff	(ReadDataXONLD@min),indf2

	line	261
	
l14132:; BSR set to: 1

;readdtal.c: 260: }
;readdtal.c: 261: if(key==2)
	movf	((ReadDataXONLD@key))&0ffh,w
	xorlw	2

	btfss	status,2
	goto	u19351
	goto	u19350
u19351:
	goto	l14146
u19350:
	line	263
	
l14134:; BSR set to: 1

;readdtal.c: 262: {
;readdtal.c: 263: if (iu<=(5-1)*3) iu++;
	movlw	(0Dh)&0ffh
	movlb	0	; () banked
	cpfslt	((ReadDataXONLD@iu))&0ffh
	goto	u19361
	goto	u19360
u19361:
	goto	l14138
u19360:
	
l14136:; BSR set to: 0

	incf	((ReadDataXONLD@iu))&0ffh
	line	264
	
l14138:; BSR set to: 0

;readdtal.c: 264: ktu=5-iu/3;
	movlw	low(03h)
	movwf	((?___lbdiv))&0ffh
	movf	((ReadDataXONLD@iu))&0ffh,w
	
	call	___lbdiv
	movwf	(??_ReadDataXONLD+0+0)&0ffh
	movf	((??_ReadDataXONLD+0+0))&0ffh,w
	sublw	low(05h)
	movlb	0	; () banked
	movwf	((ReadDataXONLD@ktu))&0ffh
	line	265
	
l14140:; BSR set to: 0

;readdtal.c: 265: if(*dt-step2>min) *dt=*dt-step2;
	movlb	1	; () banked
	movf	((ReadDataXONLD@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_ReadDataXONLD+0+0)&0ffh
	clrf	(??_ReadDataXONLD+0+0+1)&0ffh

	movf	((ReadDataXONLD@step2))&0ffh,w
	subwf	(??_ReadDataXONLD+0+0)&0ffh
	movlw	0
	subwfb	(??_ReadDataXONLD+0+1)&0ffh
	movf	((ReadDataXONLD@min))&0ffh,w
	movwf	(??_ReadDataXONLD+2+0)&0ffh
	clrf	(??_ReadDataXONLD+2+0+1)&0ffh

	movf	(??_ReadDataXONLD+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ReadDataXONLD+4+0)&0ffh
	movf	(??_ReadDataXONLD+0+0)&0ffh,w
	subwf	(??_ReadDataXONLD+2+0)&0ffh,w
	movf	(??_ReadDataXONLD+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ReadDataXONLD+4+0)&0ffh,w
	btfsc	status,0
	goto	u19371
	goto	u19370
u19371:
	goto	l14144
u19370:
	
l14142:; BSR set to: 1

	movf	((ReadDataXONLD@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	((ReadDataXONLD@dt))&0ffh,w
	movwf	fsr1l
	clrf	fsr1h
	movf	indf1,w
	movwf	(??_ReadDataXONLD+0+0)&0ffh
	movf	((ReadDataXONLD@step2))&0ffh,w
	subwf	((??_ReadDataXONLD+0+0))&0ffh,w
	movwf	indf2

	goto	l14146
	line	266
	
l14144:; BSR set to: 1

;readdtal.c: 266: else *dt=min;
	movf	((ReadDataXONLD@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movff	(ReadDataXONLD@min),indf2

	line	268
	
l14146:; BSR set to: 1

;readdtal.c: 267: }
;readdtal.c: 268: if(*dt<min) *dt=min;
	movf	((ReadDataXONLD@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_ReadDataXONLD+0+0)&0ffh
	movf	((ReadDataXONLD@min))&0ffh,w
	subwf	((??_ReadDataXONLD+0+0))&0ffh,w
	btfsc	status,0
	goto	u19381
	goto	u19380
u19381:
	goto	l2505
u19380:
	
l14148:; BSR set to: 1

	movf	((ReadDataXONLD@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movff	(ReadDataXONLD@min),indf2

	goto	l2505
	line	271
	
l2496:; BSR set to: 1

	line	273
;readdtal.c: 271: else
;readdtal.c: 272: {
;readdtal.c: 273: iu=0;
	movlb	0	; () banked
	clrf	((ReadDataXONLD@iu))&0ffh
	line	274
	
l14154:; BSR set to: 0

;readdtal.c: 274: ktu=5;
	movlw	low(05h)
	movwf	((ReadDataXONLD@ktu))&0ffh
	line	277
	
l2505:
	return
	opt stack 0
GLOBAL	__end_of_ReadDataXONLD
	__end_of_ReadDataXONLD:
	signat	_ReadDataXONLD,20601
	global	_ExPresKey2B

;; *************** function _ExPresKey2B *****************
;; Defined at:
;;		line 198 in file "C:\praca\PICC\backup\GRZ01V5\keypad.c"
;; Parameters:    Size  Location     Type
;;  k               1    wreg     unsigned char 
;;  dTim            1    0[BANK1 ] unsigned char 
;;  pTim            1    1[BANK1 ] unsigned char 
;; Auto vars:     Size  Location     Type
;;  k               1    3[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;;		_RTdS
;; This function is called by:
;;		_ReadDataXONLD
;; This function uses a non-reentrant model
;;
psect	text73,class=CODE,space=0,reloc=2
global __ptext73
__ptext73:
psect	text73
	file	"C:\praca\PICC\backup\GRZ01V5\keypad.c"
	line	198
	global	__size_of_ExPresKey2B
	__size_of_ExPresKey2B	equ	__end_of_ExPresKey2B-_ExPresKey2B
	
_ExPresKey2B:
;incstack = 0
	opt	stack 21
;incstack = 0
;ExPresKey2B@k stored from wreg
	movff	wreg,(ExPresKey2B@k)
	line	199
	
l12364:; BSR set to: 1

;keypad.c: 199: sp2.bk=(k)?1:0;
	movlw	(0)&0ffh
	clrf	prodl
	cpfseq	((ExPresKey2B@k))&0ffh
	incf	prodl
	movff	prodl,??_ExPresKey2B+0+0
	movf	((c:_sp2)),c,w
	xorwf	(??_ExPresKey2B+0+0)&0ffh,w
	andlw	not ((1<<1)-1)
	xorwf	(??_ExPresKey2B+0+0)&0ffh,w
	movwf	((c:_sp2)),c
	line	201
	
l12366:; BSR set to: 1

;keypad.c: 201: if(sp2.fl&&sp2.sbk&&!sp2.bk)
	
	btfss	((c:_sp2)),c,4
	goto	u15741
	goto	u15740
u15741:
	goto	l12376
u15740:
	
l12368:; BSR set to: 1

	
	btfss	((c:_sp2)),c,1
	goto	u15751
	goto	u15750
u15751:
	goto	l12376
u15750:
	
l12370:; BSR set to: 1

	
	btfsc	((c:_sp2)),c,0
	goto	u15761
	goto	u15760
u15761:
	goto	l12376
u15760:
	line	203
	
l12372:; BSR set to: 1

;keypad.c: 202: {
;keypad.c: 203: sp2.fl=0;
	bcf	((c:_sp2)),c,4
	line	204
	
l12374:; BSR set to: 1

;keypad.c: 204: sp2.sbk=(sp2.bk)?1:0;
	
	btfsc	((c:_sp2)),c,0
	goto	u15771
	goto	u15770
u15771:
	movlw	1
	goto	u15776
u15770:
	movlw	0
u15776:
	movwf	(??_ExPresKey2B+0+0)&0ffh
	rlncf	((??_ExPresKey2B+0+0))&0ffh
	movf	((c:_sp2)),c,w
	xorwf	((??_ExPresKey2B+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ExPresKey2B+0+0))&0ffh,w
	movwf	((c:_sp2)),c
	line	206
	
l12376:; BSR set to: 1

;keypad.c: 205: }
;keypad.c: 206: if (!sp2.sbk&&sp2.bk) StartRTdS(2);
	
	btfsc	((c:_sp2)),c,1
	goto	u15781
	goto	u15780
u15781:
	goto	l12382
u15780:
	
l12378:; BSR set to: 1

	
	btfss	((c:_sp2)),c,0
	goto	u15791
	goto	u15790
u15791:
	goto	l12382
u15790:
	
l12380:; BSR set to: 1

	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	208
	
l12382:; BSR set to: 1

;keypad.c: 208: if (!sp2.fl&&sp2.sbk&&!sp2.bk)
	
	btfsc	((c:_sp2)),c,4
	goto	u15801
	goto	u15800
u15801:
	goto	l535
u15800:
	
l12384:; BSR set to: 1

	
	btfss	((c:_sp2)),c,1
	goto	u15811
	goto	u15810
u15811:
	goto	l535
u15810:
	
l12386:; BSR set to: 1

	
	btfsc	((c:_sp2)),c,0
	goto	u15821
	goto	u15820
u15821:
	goto	l535
u15820:
	line	210
	
l12388:; BSR set to: 1

;keypad.c: 209: {
;keypad.c: 210: sp2.sbk=(sp2.bk)?1:0;
	
	btfsc	((c:_sp2)),c,0
	goto	u15831
	goto	u15830
u15831:
	movlw	1
	goto	u15836
u15830:
	movlw	0
u15836:
	movwf	(??_ExPresKey2B+0+0)&0ffh
	rlncf	((??_ExPresKey2B+0+0))&0ffh
	movf	((c:_sp2)),c,w
	xorwf	((??_ExPresKey2B+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ExPresKey2B+0+0))&0ffh,w
	movwf	((c:_sp2)),c
	line	211
	
l12390:; BSR set to: 1

;keypad.c: 211: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	212
	
l12392:; BSR set to: 1

;keypad.c: 212: return 1;
	movlw	(01h)&0ffh
	goto	l536
	line	213
	
l535:; BSR set to: 1

	line	214
;keypad.c: 213: }
;keypad.c: 214: if(sp2.sbk&&sp2.bk)
	
	btfss	((c:_sp2)),c,1
	goto	u15841
	goto	u15840
u15841:
	goto	l537
u15840:
	
l12396:; BSR set to: 1

	
	btfss	((c:_sp2)),c,0
	goto	u15851
	goto	u15850
u15851:
	goto	l537
u15850:
	line	217
	
l12398:; BSR set to: 1

;keypad.c: 215: {
;keypad.c: 217: if(!sp2.ap&&RTdS(2)>=dTim)
	
	btfsc	((c:_sp2)),c,2
	goto	u15861
	goto	u15860
u15861:
	goto	l538
u15860:
	
l12400:; BSR set to: 1

	movlw	(02h)&0ffh
	
	call	_RTdS
	movwf	(??_ExPresKey2B+0+0)&0ffh
	movf	((ExPresKey2B@dTim))&0ffh,w
	subwf	((??_ExPresKey2B+0+0))&0ffh,w
	btfss	status,0
	goto	u15871
	goto	u15870
u15871:
	goto	l538
u15870:
	line	219
	
l12402:; BSR set to: 1

;keypad.c: 218: {
;keypad.c: 219: sp2.fl=1;
	bsf	((c:_sp2)),c,4
	line	220
;keypad.c: 220: sp2.ap=1;
	bsf	((c:_sp2)),c,2
	line	221
	
l538:; BSR set to: 1

	line	222
;keypad.c: 221: }
;keypad.c: 222: if(sp2.ap&&RTdS(2)>=pTim)
	
	btfss	((c:_sp2)),c,2
	goto	u15881
	goto	u15880
u15881:
	goto	l12412
u15880:
	
l12404:; BSR set to: 1

	movlw	(02h)&0ffh
	
	call	_RTdS
	movwf	(??_ExPresKey2B+0+0)&0ffh
	movf	((ExPresKey2B@pTim))&0ffh,w
	subwf	((??_ExPresKey2B+0+0))&0ffh,w
	btfss	status,0
	goto	u15891
	goto	u15890
u15891:
	goto	l12412
u15890:
	line	224
	
l12406:; BSR set to: 1

;keypad.c: 223: {
;keypad.c: 224: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	225
	
l12408:; BSR set to: 1

;keypad.c: 225: return 2;
	movlw	(02h)&0ffh
	goto	l536
	line	227
	
l537:; BSR set to: 1

	bcf	((c:_sp2)),c,2
	line	228
	
l12412:; BSR set to: 1

;keypad.c: 228: sp2.sbk=(sp2.bk)?1:0;
	
	btfsc	((c:_sp2)),c,0
	goto	u15901
	goto	u15900
u15901:
	movlw	1
	goto	u15906
u15900:
	movlw	0
u15906:
	movwf	(??_ExPresKey2B+0+0)&0ffh
	rlncf	((??_ExPresKey2B+0+0))&0ffh
	movf	((c:_sp2)),c,w
	xorwf	((??_ExPresKey2B+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ExPresKey2B+0+0))&0ffh,w
	movwf	((c:_sp2)),c
	line	229
	
l12414:; BSR set to: 1

;keypad.c: 229: if (sp2.ap) return 3;
	
	btfss	((c:_sp2)),c,2
	goto	u15911
	goto	u15910
u15911:
	goto	l12420
u15910:
	
l12416:; BSR set to: 1

	movlw	(03h)&0ffh
	goto	l536
	line	230
	
l12420:; BSR set to: 1

;keypad.c: 230: return 0;
	movlw	(0)&0ffh
	line	231
	
l536:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_ExPresKey2B
	__end_of_ExPresKey2B:
	signat	_ExPresKey2B,12409
	global	_ReadDataXONLI

;; *************** function _ReadDataXONLI *****************
;; Defined at:
;;		line 201 in file "C:\praca\PICC\backup\GRZ01V5\readdtal.c"
;; Parameters:    Size  Location     Type
;;  k               1    wreg     unsigned char 
;;  dt              1    4[BANK1 ] PTR unsigned char 
;;		 -> DtCW(15), 
;;  max             1    5[BANK1 ] unsigned char 
;;  step            1    6[BANK1 ] const unsigned char 
;;  step2           1    7[BANK1 ] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  k               1   13[BANK1 ] unsigned char 
;;  key             1   14[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       11 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_ExPresKey2
;;		___lbdiv
;; This function is called by:
;;		_PomiarPCW
;; This function uses a non-reentrant model
;;
psect	text74,class=CODE,space=0,reloc=2
global __ptext74
__ptext74:
psect	text74
	file	"C:\praca\PICC\backup\GRZ01V5\readdtal.c"
	line	201
	global	__size_of_ReadDataXONLI
	__size_of_ReadDataXONLI	equ	__end_of_ReadDataXONLI-_ReadDataXONLI
	
_ReadDataXONLI:; BSR set to: 1

;incstack = 0
	opt	stack 21
;incstack = 0
;ReadDataXONLI@k stored from wreg
	line	206
	movff	wreg,(ReadDataXONLI@k)
	line	204
	
l14074:; BSR set to: 0

	line	206
;readdtal.c: 206: if(!dtmo)
	movlb	(ReadDataXONLI@dtmo/8) >> 8
	btfsc	(ReadDataXONLI@dtmo/8),c,(ReadDataXONLI@dtmo)&7
	goto	u19241
	goto	u19240
u19241:
	goto	l14078
u19240:
	line	208
	
l14076:
;readdtal.c: 207: {
;readdtal.c: 208: dtmo=1;
	movlb	(ReadDataXONLI@dtmo/8) >> 8
	bsf	(ReadDataXONLI@dtmo/8),c,(ReadDataXONLI@dtmo)&7
	line	209
;readdtal.c: 209: ktu=0;
	movlb	0	; () banked
	clrf	((ReadDataXONLI@ktu))&0ffh
	line	210
;readdtal.c: 210: iu=0;
	clrf	((ReadDataXONLI@iu))&0ffh
	line	213
	
l14078:
;readdtal.c: 211: }
;readdtal.c: 213: if(key=ExPresKey2(k,5,ktu))
	movlw	low(05h)
	movlb	1	; () banked
	movwf	((?_ExPresKey2))&0ffh
	movff	(ReadDataXONLI@ktu),0+(?_ExPresKey2+01h)
	movf	((ReadDataXONLI@k))&0ffh,w
	
	call	_ExPresKey2
	movwf	((ReadDataXONLI@key))&0ffh
	movlb	1	; () banked
	movf	((ReadDataXONLI@key))&0ffh,w
	btfsc	status,2
	goto	u19251
	goto	u19250
u19251:
	goto	l2477
u19250:
	line	215
	
l14080:; BSR set to: 1

;readdtal.c: 214: {
;readdtal.c: 215: if(key==1)
	decf	((ReadDataXONLI@key))&0ffh,w

	btfss	status,2
	goto	u19261
	goto	u19260
u19261:
	goto	l14092
u19260:
	line	217
	
l14082:; BSR set to: 1

;readdtal.c: 216: {
;readdtal.c: 217: iu=0;
	movlb	0	; () banked
	clrf	((ReadDataXONLI@iu))&0ffh
	line	218
	
l14084:; BSR set to: 0

;readdtal.c: 218: ktu=5;
	movlw	low(05h)
	movwf	((ReadDataXONLI@ktu))&0ffh
	line	219
	
l14086:; BSR set to: 0

;readdtal.c: 219: if(*dt+step<=max) *dt=*dt+step;
	movlb	1	; () banked
	movf	((ReadDataXONLI@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_ReadDataXONLI+0+0)&0ffh
	clrf	(??_ReadDataXONLI+0+0+1)&0ffh

	movf	((ReadDataXONLI@step))&0ffh,w
	addwf	(??_ReadDataXONLI+0+0)&0ffh
	movlw	0
	addwfc	(??_ReadDataXONLI+0+1)&0ffh
	movf	((ReadDataXONLI@max))&0ffh,w
	movwf	(??_ReadDataXONLI+2+0)&0ffh
	clrf	(??_ReadDataXONLI+2+0+1)&0ffh

	movf	(??_ReadDataXONLI+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ReadDataXONLI+4+0)&0ffh
	movf	(??_ReadDataXONLI+0+0)&0ffh,w
	subwf	(??_ReadDataXONLI+2+0)&0ffh,w
	movf	(??_ReadDataXONLI+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ReadDataXONLI+4+0)&0ffh,w
	btfss	status,0
	goto	u19271
	goto	u19270
u19271:
	goto	l14090
u19270:
	
l14088:; BSR set to: 1

	movf	((ReadDataXONLI@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	((ReadDataXONLI@dt))&0ffh,w
	movwf	fsr1l
	clrf	fsr1h
	movf	indf1,w
	addwf	((ReadDataXONLI@step))&0ffh,w
	movwf	indf2

	goto	l14092
	line	220
	
l14090:; BSR set to: 1

;readdtal.c: 220: else *dt=max;
	movf	((ReadDataXONLI@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movff	(ReadDataXONLI@max),indf2

	line	222
	
l14092:; BSR set to: 1

;readdtal.c: 221: }
;readdtal.c: 222: if(key==2)
	movf	((ReadDataXONLI@key))&0ffh,w
	xorlw	2

	btfss	status,2
	goto	u19281
	goto	u19280
u19281:
	goto	l2485
u19280:
	line	224
	
l14094:; BSR set to: 1

;readdtal.c: 223: {
;readdtal.c: 224: if (iu<=(5-1)*3) iu++;
	movlw	(0Dh)&0ffh
	movlb	0	; () banked
	cpfslt	((ReadDataXONLI@iu))&0ffh
	goto	u19291
	goto	u19290
u19291:
	goto	l14098
u19290:
	
l14096:; BSR set to: 0

	incf	((ReadDataXONLI@iu))&0ffh
	line	225
	
l14098:; BSR set to: 0

;readdtal.c: 225: ktu=5-iu/3;
	movlw	low(03h)
	movwf	((?___lbdiv))&0ffh
	movf	((ReadDataXONLI@iu))&0ffh,w
	
	call	___lbdiv
	movwf	(??_ReadDataXONLI+0+0)&0ffh
	movf	((??_ReadDataXONLI+0+0))&0ffh,w
	sublw	low(05h)
	movlb	0	; () banked
	movwf	((ReadDataXONLI@ktu))&0ffh
	line	226
	
l14100:; BSR set to: 0

;readdtal.c: 226: if(*dt+step2<=max) *dt=*dt+step2;
	movlb	1	; () banked
	movf	((ReadDataXONLI@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_ReadDataXONLI+0+0)&0ffh
	clrf	(??_ReadDataXONLI+0+0+1)&0ffh

	movf	((ReadDataXONLI@step2))&0ffh,w
	addwf	(??_ReadDataXONLI+0+0)&0ffh
	movlw	0
	addwfc	(??_ReadDataXONLI+0+1)&0ffh
	movf	((ReadDataXONLI@max))&0ffh,w
	movwf	(??_ReadDataXONLI+2+0)&0ffh
	clrf	(??_ReadDataXONLI+2+0+1)&0ffh

	movf	(??_ReadDataXONLI+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ReadDataXONLI+4+0)&0ffh
	movf	(??_ReadDataXONLI+0+0)&0ffh,w
	subwf	(??_ReadDataXONLI+2+0)&0ffh,w
	movf	(??_ReadDataXONLI+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ReadDataXONLI+4+0)&0ffh,w
	btfss	status,0
	goto	u19301
	goto	u19300
u19301:
	goto	l14104
u19300:
	
l14102:; BSR set to: 1

	movf	((ReadDataXONLI@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	((ReadDataXONLI@dt))&0ffh,w
	movwf	fsr1l
	clrf	fsr1h
	movf	indf1,w
	addwf	((ReadDataXONLI@step2))&0ffh,w
	movwf	indf2

	goto	l2485
	line	227
	
l14104:; BSR set to: 1

;readdtal.c: 227: else *dt=max;
	movf	((ReadDataXONLI@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movff	(ReadDataXONLI@max),indf2

	goto	l2485
	line	231
	
l2477:; BSR set to: 1

	line	233
;readdtal.c: 231: else
;readdtal.c: 232: {
;readdtal.c: 233: iu=0;
	movlb	0	; () banked
	clrf	((ReadDataXONLI@iu))&0ffh
	line	234
	
l14110:; BSR set to: 0

;readdtal.c: 234: ktu=5;
	movlw	low(05h)
	movwf	((ReadDataXONLI@ktu))&0ffh
	line	237
	
l2485:
	return
	opt stack 0
GLOBAL	__end_of_ReadDataXONLI
	__end_of_ReadDataXONLI:
	signat	_ReadDataXONLI,20601
	global	_SetModPCW

;; *************** function _SetModPCW *****************
;; Defined at:
;;		line 238 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PomiarPCW
;; This function uses a non-reentrant model
;;
psect	text75,class=CODE,space=0,reloc=2
global __ptext75
__ptext75:
psect	text75
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	238
	global	__size_of_SetModPCW
	__size_of_SetModPCW	equ	__end_of_SetModPCW-_SetModPCW
	
_SetModPCW:
;incstack = 0
	opt	stack 23
;incstack = 0
	line	239
	
l14066:
;pomiar.c: 239: if(M._AKTYWNE_KNF)
	movlb	0	; () banked
	movf	(1+(_M+016h))&0ffh,w
	iorwf (0+(_M+016h))&0ffh,w

	btfsc	status,2
	goto	u19231
	goto	u19230
u19231:
	goto	l1218
u19230:
	line	241
	
l14068:; BSR set to: 0

;pomiar.c: 240: {
;pomiar.c: 241: DtCW.PPCW=60;
	movlw	low(03Ch)
	movwf	(0+((c:_DtCW)+04h)),c
	line	242
;pomiar.c: 242: }
	goto	l1220
	line	243
	
l1218:; BSR set to: 0

;pomiar.c: 243: else DtCW.PPCW=DtCW.PCW;
	movff	0+((c:_DtCW)+03h),0+((c:_DtCW)+04h)
	line	244
	
l1220:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_SetModPCW
	__end_of_SetModPCW:
	signat	_SetModPCW,88
	global	_RdPrt

;; *************** function _RdPrt *****************
;; Defined at:
;;		line 193 in file "C:\praca\PICC\backup\GRZ01V5\port.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1    0[BANK1 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : 0/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_KolejkaPobudzen
;;		_DecERR
;;		_DecSTR
;;		_FunkcjaSerwisowa
;;		_Rozruch
;;		_DecyzjaPLM2
;;		_RuszCiag
;;		_KeyRes
;;		_PomiarPCW
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text76,class=CODE,space=0,reloc=2
global __ptext76
__ptext76:
psect	text76
	file	"C:\praca\PICC\backup\GRZ01V5\port.c"
	line	193
	global	__size_of_RdPrt
	__size_of_RdPrt	equ	__end_of_RdPrt-_RdPrt
	
_RdPrt:; BSR set to: 0

;incstack = 0
	opt	stack 23
;incstack = 0
;RdPrt@Index stored from wreg
	movff	wreg,(RdPrt@Index)
	line	194
	
l12200:
;port.c: 194: if (Index>10-1) asm("RESET");
	movlw	(0Ah-1)
	movlb	1	; () banked
	cpfsgt	((RdPrt@Index))&0ffh
	goto	u15351
	goto	u15350
u15351:
	goto	l12204
u15350:
	
l12202:; BSR set to: 1

# 194 "C:\praca\PICC\backup\GRZ01V5\port.c"
RESET ;# 
psect	text76
	line	195
	
l12204:
;port.c: 195: return SPort[Index].Output;
	movlb	1	; () banked
	movf	((RdPrt@Index))&0ffh,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2),c,w
	andlw	(1<<1)-1
	movlb	0	; () banked
	movwf	(??_RdPrt+0+0)&0ffh
	rrcf	((??_RdPrt+0+0))&0ffh,w
	line	196
	
l1325:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_RdPrt
	__end_of_RdPrt:
	signat	_RdPrt,4216
	global	_ReturnACfromNTC

;; *************** function _ReturnACfromNTC *****************
;; Defined at:
;;		line 129 in file "C:\praca\PICC\backup\GRZ01V5\ac.c"
;; Parameters:    Size  Location     Type
;;  data            1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  data            1    2[BANK1 ] unsigned char 
;;  i               2    4[BANK1 ] unsigned int 
;;  bdta            1    3[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Read_b_eep
;; This function is called by:
;;		_PomiarPCW
;; This function uses a non-reentrant model
;;
psect	text77,class=CODE,space=0,reloc=2
global __ptext77
__ptext77:
psect	text77
	file	"C:\praca\PICC\backup\GRZ01V5\ac.c"
	line	129
	global	__size_of_ReturnACfromNTC
	__size_of_ReturnACfromNTC	equ	__end_of_ReturnACfromNTC-_ReturnACfromNTC
	
_ReturnACfromNTC:; BSR set to: 0

;incstack = 0
	opt	stack 22
;incstack = 0
;ReturnACfromNTC@data stored from wreg
	line	132
	movff	wreg,(ReturnACfromNTC@data)
	
l12148:
;ac.c: 130: unsigned int i;
;ac.c: 131: unsigned char bdta;
;ac.c: 132: for(i=0x0000;i<0x0000+192;i++)
	movlb	1	; () banked
	clrf	((ReturnACfromNTC@i))&0ffh
	clrf	((ReturnACfromNTC@i+1))&0ffh
	line	134
	
l12154:; BSR set to: 1

;ac.c: 133: {
;ac.c: 134: bdta=Read_b_eep(i);
	movff	(ReturnACfromNTC@i),(?_Read_b_eep)
	movff	(ReturnACfromNTC@i+1),(?_Read_b_eep+1)
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	((ReturnACfromNTC@bdta))&0ffh
	line	135
	
l12156:; BSR set to: 1

;ac.c: 135: if(bdta<data) return ((i-0x0000)+0x34)-1;
	movf	((ReturnACfromNTC@data))&0ffh,w
	cpfslt	((ReturnACfromNTC@bdta))&0ffh
	goto	u15331
	goto	u15330
u15331:
	goto	l12162
u15330:
	
l12158:; BSR set to: 1

	movf	((ReturnACfromNTC@i))&0ffh,w
	addlw	low(033h)
	goto	l278
	line	132
	
l12162:; BSR set to: 1

	infsnz	((ReturnACfromNTC@i))&0ffh
	incf	((ReturnACfromNTC@i+1))&0ffh
	
l12164:; BSR set to: 1

	movlw	0C0h
	subwf	((ReturnACfromNTC@i))&0ffh,w
	movlw	0
	subwfb	((ReturnACfromNTC@i+1))&0ffh,w
	btfss	status,0
	goto	u15341
	goto	u15340
u15341:
	goto	l12154
u15340:
	line	137
	
l12166:; BSR set to: 1

;ac.c: 136: }
;ac.c: 137: return (i-0x0000)+0x34;
	movf	((ReturnACfromNTC@i))&0ffh,w
	addlw	low(034h)
	line	138
	
l278:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_ReturnACfromNTC
	__end_of_ReturnACfromNTC:
	signat	_ReturnACfromNTC,4217
	global	_RdEEParam

;; *************** function _RdEEParam *****************
;; Defined at:
;;		line 201 in file "C:\praca\PICC\backup\GRZ01V5\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_Read_b_eep
;;		_ModParam
;;		_MocStart
;;		_MocMaksCW
;;		_SetTpKtParam
;; This function is called by:
;;		_main
;;		_ExitKonf
;; This function uses a non-reentrant model
;;
psect	text78,class=CODE,space=0,reloc=2
global __ptext78
__ptext78:
psect	text78
	file	"C:\praca\PICC\backup\GRZ01V5\konfig.c"
	line	201
	global	__size_of_RdEEParam
	__size_of_RdEEParam	equ	__end_of_RdEEParam-_RdEEParam
	
_RdEEParam:; BSR set to: 1

;incstack = 0
	opt	stack 22
;incstack = 0
	line	202
	
l12630:
;konfig.c: 202: DtKNF.tpkt=Read_b_eep(0x00C5);
	movlw	high(0C5h)
	movlb	1	; () banked
	movwf	((?_Read_b_eep+1))&0ffh
	movlw	low(0C5h)
	movwf	((?_Read_b_eep))&0ffh
	call	_Read_b_eep	;wreg free
	movlb	0	; () banked
	movwf	(0+(_DtKNF+07h))&0ffh
	line	203
	
l12632:; BSR set to: 0

;konfig.c: 203: SetTpKtParam();
	call	_SetTpKtParam	;wreg free
	line	204
	
l12634:; BSR set to: 0

;konfig.c: 204: ModParam(DtKNF.tpkt,DtKNF.rdgz=Read_b_eep(0x00C4));
	movlw	high(0C4h)
	movlb	1	; () banked
	movwf	((?_Read_b_eep+1))&0ffh
	movlw	low(0C4h)
	movwf	((?_Read_b_eep))&0ffh
	call	_Read_b_eep	;wreg free
	movlb	0	; () banked
	movwf	(0+(_DtKNF+08h))&0ffh
	movff	0+(_DtKNF+08h),(?_ModParam)
	movf	(0+(_DtKNF+07h))&0ffh,w
	
	call	_ModParam
	line	205
	
l12636:; BSR set to: 1

;konfig.c: 205: MocStart(DtKNF.mstr=Read_b_eep(0x00C1));
	movlw	high(0C1h)
	movwf	((?_Read_b_eep+1))&0ffh
	movlw	low(0C1h)
	movwf	((?_Read_b_eep))&0ffh
	call	_Read_b_eep	;wreg free
	movlb	0	; () banked
	movwf	(0+(_DtKNF+03h))&0ffh
	movlb	0	; () banked
	movf	(0+(_DtKNF+03h))&0ffh,w
	
	call	_MocStart
	line	206
	
l12638:; BSR set to: 1

;konfig.c: 206: MocMaksCW(DtKNF.mxcw=Read_b_eep(0x00C2));
	movlw	high(0C2h)
	movwf	((?_Read_b_eep+1))&0ffh
	movlw	low(0C2h)
	movwf	((?_Read_b_eep))&0ffh
	call	_Read_b_eep	;wreg free
	movlb	0	; () banked
	movwf	(0+(_DtKNF+04h))&0ffh
	movlb	0	; () banked
	movf	(0+(_DtKNF+04h))&0ffh,w
	
	call	_MocMaksCW
	line	207
	
l12640:; BSR set to: 1

;konfig.c: 207: DtCW.PCW=Read_b_eep(0x00C3);
	movlw	high(0C3h)
	movwf	((?_Read_b_eep+1))&0ffh
	movlw	low(0C3h)
	movwf	((?_Read_b_eep))&0ffh
	call	_Read_b_eep	;wreg free
	movwf	(0+((c:_DtCW)+03h)),c
	line	208
	
l12642:
;konfig.c: 208: DtKNF.wymCW=0;
	movlb	0	; () banked
	bcf	((_DtKNF))&0ffh,2
	line	209
	
l2614:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_RdEEParam
	__end_of_RdEEParam:
	signat	_RdEEParam,88
	global	_SetTpKtParam

;; *************** function _SetTpKtParam *****************
;; Defined at:
;;		line 213 in file "C:\praca\PICC\backup\GRZ01V5\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RdEEParam
;; This function uses a non-reentrant model
;;
psect	text79,class=CODE,space=0,reloc=2
global __ptext79
__ptext79:
psect	text79
	file	"C:\praca\PICC\backup\GRZ01V5\konfig.c"
	line	213
	global	__size_of_SetTpKtParam
	__size_of_SetTpKtParam	equ	__end_of_SetTpKtParam-_SetTpKtParam
	
_SetTpKtParam:; BSR set to: 0

;incstack = 0
	opt	stack 23
;incstack = 0
	line	214
	
l14820:; BSR set to: 0

;konfig.c: 214: DtKNF.czpr=0;
	clrf	(0+(_DtKNF+06h))&0ffh
	line	215
;konfig.c: 215: DtKNF.rdpm=0;
	clrf	(0+(_DtKNF+09h))&0ffh
	line	216
;konfig.c: 216: DtKNF.tpwm=0;
	clrf	(0+(_DtKNF+0Ah))&0ffh
	line	217
	
l2617:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_SetTpKtParam
	__end_of_SetTpKtParam:
	signat	_SetTpKtParam,88
	global	_MocMaksCW

;; *************** function _MocMaksCW *****************
;; Defined at:
;;		line 157 in file "C:\praca\PICC\backup\GRZ01V5\pwm.c"
;; Parameters:    Size  Location     Type
;;  nst             1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  nst             1   16[BANK1 ] unsigned char 
;;  tmp             2   14[BANK1 ] unsigned int 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___awdiv
;;		___lwdiv
;;		___wmul
;; This function is called by:
;;		_MKonfiguracja
;;		_RdEEParam
;; This function uses a non-reentrant model
;;
psect	text80,class=CODE,space=0,reloc=2
global __ptext80
__ptext80:
psect	text80
	file	"C:\praca\PICC\backup\GRZ01V5\pwm.c"
	line	157
	global	__size_of_MocMaksCW
	__size_of_MocMaksCW	equ	__end_of_MocMaksCW-_MocMaksCW
	
_MocMaksCW:; BSR set to: 0

;incstack = 0
	opt	stack 22
;incstack = 0
;MocMaksCW@nst stored from wreg
	line	160
	movff	wreg,(MocMaksCW@nst)
	
l14282:; BSR set to: 0

;pwm.c: 158: unsigned int tmp;
;pwm.c: 160: if(nst>PWM.GWMMAXCW) nst=PWM.GWMMAXCW;
	movlb	1	; () banked
	movf	((MocMaksCW@nst))&0ffh,w
	cpfslt	(0+((c:_PWM)+011h)),c	;volatile
	goto	u19731
	goto	u19730
u19731:
	goto	l14286
u19730:
	
l14284:; BSR set to: 1

	movff	0+((c:_PWM)+011h),(MocMaksCW@nst)	;volatile
	line	161
	
l14286:; BSR set to: 1

;pwm.c: 161: tmp=((PWM.MGMAXCW-PWM.MDMAXCW)*10)/PWM.GWMMAXCW;
	movlw	high(0Ah)
	movwf	(1+(?___wmul+02h))&0ffh
	movlw	low(0Ah)
	movwf	(0+(?___wmul+02h))&0ffh
	movf	(0+((c:_PWM)+012h)),c,w	;volatile
	subwf	(0+((c:_PWM)+013h)),c,w	;volatile
	
	movwf	((?___wmul))&0ffh
	clrf	1+((?___wmul))&0ffh
	btfss	status,0
	decf	1+((?___wmul))&0ffh
	
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___awdiv)
	movff	1+?___wmul,(?___awdiv+1)
	movff	0+((c:_PWM)+011h),0+(?___awdiv+02h)	;volatile
	clrf	(1+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movff	0+?___awdiv,(MocMaksCW@tmp)
	movff	1+?___awdiv,(MocMaksCW@tmp+1)
	line	162
	
l14288:; BSR set to: 1

;pwm.c: 162: PWM.MMAXCW=PWM.MDMAXCW+(unsigned char)((nst*tmp)/10);
	movff	(MocMaksCW@tmp),0+(?___wmul+02h)
	movff	(MocMaksCW@tmp+1),1+(?___wmul+02h)
	movff	(MocMaksCW@nst),(?___wmul)
	clrf	((?___wmul+1))&0ffh
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___lwdiv)
	movff	1+?___wmul,(?___lwdiv+1)
	movlw	high(0Ah)
	movwf	(1+(?___lwdiv+02h))&0ffh
	movlw	low(0Ah)
	movwf	(0+(?___lwdiv+02h))&0ffh
	call	___lwdiv	;wreg free
	movf	(0+?___lwdiv)&0ffh,w
	addwf	(0+((c:_PWM)+012h)),c,w	;volatile
	movwf	(0+((c:_PWM)+01Ah)),c	;volatile
	line	163
	
l1473:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_MocMaksCW
	__end_of_MocMaksCW:
	signat	_MocMaksCW,4216
	global	_MocStart

;; *************** function _MocStart *****************
;; Defined at:
;;		line 145 in file "C:\praca\PICC\backup\GRZ01V5\pwm.c"
;; Parameters:    Size  Location     Type
;;  nst             1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  nst             1   16[BANK1 ] unsigned char 
;;  tmp             2   14[BANK1 ] unsigned int 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___awdiv
;;		___lwdiv
;;		___wmul
;; This function is called by:
;;		_MKonfiguracja
;;		_RdEEParam
;; This function uses a non-reentrant model
;;
psect	text81,class=CODE,space=0,reloc=2
global __ptext81
__ptext81:
psect	text81
	file	"C:\praca\PICC\backup\GRZ01V5\pwm.c"
	line	145
	global	__size_of_MocStart
	__size_of_MocStart	equ	__end_of_MocStart-_MocStart
	
_MocStart:; BSR set to: 1

;incstack = 0
	opt	stack 22
;incstack = 0
;MocStart@nst stored from wreg
	line	148
	movff	wreg,(MocStart@nst)
	
l14274:; BSR set to: 0

;pwm.c: 146: unsigned int tmp;
;pwm.c: 148: if(nst>PWM.GWMSTART) nst=PWM.GWMSTART;
	movlb	1	; () banked
	movf	((MocStart@nst))&0ffh,w
	cpfslt	(0+((c:_PWM)+0Bh)),c	;volatile
	goto	u19721
	goto	u19720
u19721:
	goto	l14278
u19720:
	
l14276:; BSR set to: 1

	movff	0+((c:_PWM)+0Bh),(MocStart@nst)	;volatile
	line	149
	
l14278:; BSR set to: 1

;pwm.c: 149: tmp=((PWM.MGSTART-PWM.MDSTART)*10)/PWM.GWMSTART;
	movlw	high(0Ah)
	movwf	(1+(?___wmul+02h))&0ffh
	movlw	low(0Ah)
	movwf	(0+(?___wmul+02h))&0ffh
	movf	(0+((c:_PWM)+0Ch)),c,w	;volatile
	subwf	(0+((c:_PWM)+0Dh)),c,w	;volatile
	
	movwf	((?___wmul))&0ffh
	clrf	1+((?___wmul))&0ffh
	btfss	status,0
	decf	1+((?___wmul))&0ffh
	
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___awdiv)
	movff	1+?___wmul,(?___awdiv+1)
	movff	0+((c:_PWM)+0Bh),0+(?___awdiv+02h)	;volatile
	clrf	(1+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movff	0+?___awdiv,(MocStart@tmp)
	movff	1+?___awdiv,(MocStart@tmp+1)
	line	150
	
l14280:; BSR set to: 1

;pwm.c: 150: PWM.MSTART=PWM.MDSTART+(unsigned char)((nst*tmp)/10);
	movff	(MocStart@tmp),0+(?___wmul+02h)
	movff	(MocStart@tmp+1),1+(?___wmul+02h)
	movff	(MocStart@nst),(?___wmul)
	clrf	((?___wmul+1))&0ffh
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___lwdiv)
	movff	1+?___wmul,(?___lwdiv+1)
	movlw	high(0Ah)
	movwf	(1+(?___lwdiv+02h))&0ffh
	movlw	low(0Ah)
	movwf	(0+(?___lwdiv+02h))&0ffh
	call	___lwdiv	;wreg free
	movf	(0+?___lwdiv)&0ffh,w
	addwf	(0+((c:_PWM)+0Ch)),c,w	;volatile
	movwf	(0+((c:_PWM)+018h)),c	;volatile
	line	151
	
l1469:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_MocStart
	__end_of_MocStart:
	signat	_MocStart,4216
	global	___wmul

;; *************** function ___wmul *****************
;; Defined at:
;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.20\sources\common\wmul.c"
;; Parameters:    Size  Location     Type
;;  multiplier      2    0[BANK1 ] unsigned int 
;;  multiplicand    2    2[BANK1 ] unsigned int 
;; Auto vars:     Size  Location     Type
;;  product         2    4[BANK1 ] unsigned int 
;; Return value:  Size  Location     Type
;;                  2    0[BANK1 ] unsigned int 
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_GoldenEye
;;		_WriteOPWM
;;		_MocStart
;;		_MocMaksCW
;;		_FirstPCW4
;;		_ModZgCW4
;;		_ModDkCW4
;; This function uses a non-reentrant model
;;
psect	text82,class=CODE,space=0,reloc=2
global __ptext82
__ptext82:
psect	text82
	file	"C:\Program Files\Microchip\xc8\v1.20\sources\common\wmul.c"
	line	5
	global	__size_of___wmul
	__size_of___wmul	equ	__end_of___wmul-___wmul
	
___wmul:; BSR set to: 1

;incstack = 0
	opt	stack 23
;incstack = 0
	line	14
	
l14962:; BSR set to: 1

	movf	((___wmul@multiplier))&0ffh,w
	mulwf	((___wmul@multiplicand))&0ffh
	movff	prodl,(___wmul@product)
	movff	prodh,(___wmul@product+1)
	line	15
	movf	((___wmul@multiplier))&0ffh,w
	mulwf	(0+(___wmul@multiplicand+01h))&0ffh
	movff	prodl,prodh
	clrf	(prodl),c
	movf	(prodl),c,w
	addwf	((___wmul@product))&0ffh
	movf	(prodh),c,w
	addwfc	((___wmul@product+1))&0ffh

	line	16
	movf	(0+(___wmul@multiplier+01h))&0ffh,w
	mulwf	((___wmul@multiplicand))&0ffh
	movff	prodl,prodh
	clrf	(prodl),c
	movf	(prodl),c,w
	addwf	((___wmul@product))&0ffh
	movf	(prodh),c,w
	addwfc	((___wmul@product+1))&0ffh

	line	30
	
l14964:; BSR set to: 1

	movff	(___wmul@product),(?___wmul)
	movff	(___wmul@product+1),(?___wmul+1)
	line	31
	
l3206:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of___wmul
	__end_of___wmul:
	signat	___wmul,8314
	global	___lwdiv

;; *************** function ___lwdiv *****************
;; Defined at:
;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.20\sources\common\lwdiv.c"
;; Parameters:    Size  Location     Type
;;  dividend        2    6[BANK1 ] unsigned int 
;;  divisor         2    8[BANK1 ] unsigned int 
;; Auto vars:     Size  Location     Type
;;  quotient        2   11[BANK1 ] unsigned int 
;;  counter         1   10[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  2    6[BANK1 ] unsigned int 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_WriteOPWM
;;		_MocStart
;;		_MocMaksCW
;; This function uses a non-reentrant model
;;
psect	text83,class=CODE,space=0,reloc=2
global __ptext83
__ptext83:
psect	text83
	file	"C:\Program Files\Microchip\xc8\v1.20\sources\common\lwdiv.c"
	line	10
	global	__size_of___lwdiv
	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
	
___lwdiv:; BSR set to: 1

;incstack = 0
	opt	stack 23
;incstack = 0
	line	14
	
l14940:; BSR set to: 1

	clrf	((___lwdiv@quotient))&0ffh
	clrf	((___lwdiv@quotient+1))&0ffh
	line	15
	
l14942:; BSR set to: 1

	movf	((___lwdiv@divisor+1))&0ffh,w
	iorwf ((___lwdiv@divisor))&0ffh,w

	btfsc	status,2
	goto	u21011
	goto	u21010
u21011:
	goto	l3170
u21010:
	line	16
	
l14944:; BSR set to: 1

	movlw	low(01h)
	movwf	((___lwdiv@counter))&0ffh
	line	17
	goto	l14948
	line	18
	
l14946:; BSR set to: 1

	bcf	status,0
	rlcf	((___lwdiv@divisor))&0ffh
	rlcf	((___lwdiv@divisor+1))&0ffh
	line	19
	incf	((___lwdiv@counter))&0ffh
	line	17
	
l14948:; BSR set to: 1

	
	btfss	((___lwdiv@divisor+1))&0ffh,(15)&7
	goto	u21021
	goto	u21020
u21021:
	goto	l14946
u21020:
	line	22
	
l14950:; BSR set to: 1

	bcf	status,0
	rlcf	((___lwdiv@quotient))&0ffh
	rlcf	((___lwdiv@quotient+1))&0ffh
	line	23
	
l14952:; BSR set to: 1

	movf	((___lwdiv@divisor))&0ffh,w
	subwf	((___lwdiv@dividend))&0ffh,w
	movf	((___lwdiv@divisor+1))&0ffh,w
	subwfb	((___lwdiv@dividend+1))&0ffh,w
	btfss	status,0
	goto	u21031
	goto	u21030
u21031:
	goto	l14958
u21030:
	line	24
	
l14954:; BSR set to: 1

	movf	((___lwdiv@divisor))&0ffh,w
	subwf	((___lwdiv@dividend))&0ffh
	movf	((___lwdiv@divisor+1))&0ffh,w
	subwfb	((___lwdiv@dividend+1))&0ffh

	line	25
	
l14956:; BSR set to: 1

	bsf	(0+(0/8)+(___lwdiv@quotient))&0ffh,(0)&7
	line	27
	
l14958:; BSR set to: 1

	bcf	status,0
	rrcf	((___lwdiv@divisor+1))&0ffh
	rrcf	((___lwdiv@divisor))&0ffh
	line	28
	
l14960:; BSR set to: 1

	decfsz	((___lwdiv@counter))&0ffh
	
	goto	l14950
	line	29
	
l3170:; BSR set to: 1

	line	30
	movff	(___lwdiv@quotient),(?___lwdiv)
	movff	(___lwdiv@quotient+1),(?___lwdiv+1)
	line	31
	
l3177:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of___lwdiv
	__end_of___lwdiv:
	signat	___lwdiv,8314
	global	___awdiv

;; *************** function ___awdiv *****************
;; Defined at:
;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.20\sources\common\awdiv.c"
;; Parameters:    Size  Location     Type
;;  dividend        2    6[BANK1 ] int 
;;  divisor         2    8[BANK1 ] int 
;; Auto vars:     Size  Location     Type
;;  quotient        2   12[BANK1 ] int 
;;  sign            1   11[BANK1 ] unsigned char 
;;  counter         1   10[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  2    6[BANK1 ] int 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        8 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_MocStart
;;		_MocMaksCW
;;		_ModPrzCW4
;; This function uses a non-reentrant model
;;
psect	text84,class=CODE,space=0,reloc=2
global __ptext84
__ptext84:
psect	text84
	file	"C:\Program Files\Microchip\xc8\v1.20\sources\common\awdiv.c"
	line	10
	global	__size_of___awdiv
	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
	
___awdiv:; BSR set to: 1

;incstack = 0
	opt	stack 24
;incstack = 0
	line	14
	
l14872:; BSR set to: 1

	clrf	((___awdiv@sign))&0ffh
	line	15
	btfss	((___awdiv@divisor+1))&0ffh,7
	goto	u20921
	goto	u20920
u20921:
	goto	l14878
u20920:
	line	16
	
l14874:; BSR set to: 1

	negf	((___awdiv@divisor))&0ffh
	comf	((___awdiv@divisor+1))&0ffh
	btfsc	status,0
	incf	((___awdiv@divisor+1))&0ffh
	line	17
	
l14876:; BSR set to: 1

	movlw	low(01h)
	movwf	((___awdiv@sign))&0ffh
	line	19
	
l14878:; BSR set to: 1

	btfss	((___awdiv@dividend+1))&0ffh,7
	goto	u20931
	goto	u20930
u20931:
	goto	l14884
u20930:
	line	20
	
l14880:; BSR set to: 1

	negf	((___awdiv@dividend))&0ffh
	comf	((___awdiv@dividend+1))&0ffh
	btfsc	status,0
	incf	((___awdiv@dividend+1))&0ffh
	line	21
	
l14882:; BSR set to: 1

	movlw	(01h)&0ffh
	xorwf	((___awdiv@sign))&0ffh
	line	23
	
l14884:; BSR set to: 1

	clrf	((___awdiv@quotient))&0ffh
	clrf	((___awdiv@quotient+1))&0ffh
	line	24
	
l14886:; BSR set to: 1

	movf	((___awdiv@divisor+1))&0ffh,w
	iorwf ((___awdiv@divisor))&0ffh,w

	btfsc	status,2
	goto	u20941
	goto	u20940
u20941:
	goto	l14906
u20940:
	line	25
	
l14888:; BSR set to: 1

	movlw	low(01h)
	movwf	((___awdiv@counter))&0ffh
	line	26
	goto	l14892
	line	27
	
l14890:; BSR set to: 1

	bcf	status,0
	rlcf	((___awdiv@divisor))&0ffh
	rlcf	((___awdiv@divisor+1))&0ffh
	line	28
	incf	((___awdiv@counter))&0ffh
	line	26
	
l14892:; BSR set to: 1

	
	btfss	((___awdiv@divisor+1))&0ffh,(15)&7
	goto	u20951
	goto	u20950
u20951:
	goto	l14890
u20950:
	line	31
	
l14894:; BSR set to: 1

	bcf	status,0
	rlcf	((___awdiv@quotient))&0ffh
	rlcf	((___awdiv@quotient+1))&0ffh
	line	32
	
l14896:; BSR set to: 1

	movf	((___awdiv@divisor))&0ffh,w
	subwf	((___awdiv@dividend))&0ffh,w
	movf	((___awdiv@divisor+1))&0ffh,w
	subwfb	((___awdiv@dividend+1))&0ffh,w
	btfss	status,0
	goto	u20961
	goto	u20960
u20961:
	goto	l14902
u20960:
	line	33
	
l14898:; BSR set to: 1

	movf	((___awdiv@divisor))&0ffh,w
	subwf	((___awdiv@dividend))&0ffh
	movf	((___awdiv@divisor+1))&0ffh,w
	subwfb	((___awdiv@dividend+1))&0ffh

	line	34
	
l14900:; BSR set to: 1

	bsf	(0+(0/8)+(___awdiv@quotient))&0ffh,(0)&7
	line	36
	
l14902:; BSR set to: 1

	bcf	status,0
	rrcf	((___awdiv@divisor+1))&0ffh
	rrcf	((___awdiv@divisor))&0ffh
	line	37
	
l14904:; BSR set to: 1

	decfsz	((___awdiv@counter))&0ffh
	
	goto	l14894
	line	39
	
l14906:; BSR set to: 1

	movf	((___awdiv@sign))&0ffh,w
	btfsc	status,2
	goto	u20971
	goto	u20970
u20971:
	goto	l14910
u20970:
	line	40
	
l14908:; BSR set to: 1

	negf	((___awdiv@quotient))&0ffh
	comf	((___awdiv@quotient+1))&0ffh
	btfsc	status,0
	incf	((___awdiv@quotient+1))&0ffh
	line	41
	
l14910:; BSR set to: 1

	movff	(___awdiv@quotient),(?___awdiv)
	movff	(___awdiv@quotient+1),(?___awdiv+1)
	line	42
	
l2839:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of___awdiv
	__end_of___awdiv:
	signat	___awdiv,8314
	global	_ModParam

;; *************** function _ModParam *****************
;; Defined at:
;;		line 34 in file "C:\praca\PICC\backup\GRZ01V5\pwm.c"
;; Parameters:    Size  Location     Type
;;  tpk             1    wreg     const unsigned char 
;;  tpg             1    0[BANK0 ] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  tpk             1    0[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_MKonfiguracja
;;		_RdEEParam
;; This function uses a non-reentrant model
;;
psect	text85,class=CODE,space=0,reloc=2
global __ptext85
__ptext85:
psect	text85
	file	"C:\praca\PICC\backup\GRZ01V5\pwm.c"
	line	34
	global	__size_of_ModParam
	__size_of_ModParam	equ	__end_of_ModParam-_ModParam
	
_ModParam:; BSR set to: 1

;incstack = 0
	opt	stack 23
;incstack = 0
	line	35
	
l14224:; BSR set to: 0

;pwm.c: 35: PWM.tpGZ=(tpg!=0);
	movlw	(0)&0ffh
	clrf	prodl
	cpfseq	((ModParam@tpg))&0ffh
	incf	prodl
	movff	prodl,??_ModParam+0+0
	movlb	1	; () banked
	rlncf	(??_ModParam+0+0)&0ffh
	rlncf	(??_ModParam+0+0)&0ffh
	movf	((c:_PWM)),c,w	;volatile
	xorwf	(??_ModParam+0+0)&0ffh,w
	andlw	not (((1<<1)-1)<<2)
	xorwf	(??_ModParam+0+0)&0ffh,w
	movwf	((c:_PWM)),c	;volatile
	line	38
	
l14226:; BSR set to: 1

;pwm.c: 38: if(!PWM.tpGZ)
	
	btfsc	((c:_PWM)),c,2	;volatile
	goto	u19631
	goto	u19630
u19631:
	goto	l1445
u19630:
	line	40
	
l14228:; BSR set to: 1

;pwm.c: 39: {
;pwm.c: 40: PWM._ENOSC=(1!=0);
	bsf	((c:_PWM)),c,1	;volatile
	line	41
	
l14230:; BSR set to: 1

;pwm.c: 41: PWM.MDMOD=0x20;
	movlw	low(020h)
	movwf	(0+((c:_PWM)+05h)),c	;volatile
	line	42
;pwm.c: 42: PWM.MGMOD=0xC0;
	movlw	low(0C0h)
	movwf	(0+((c:_PWM)+06h)),c	;volatile
	line	43
;pwm.c: 43: PWM.MAXOSC=20;
	movlw	low(014h)
	movwf	(0+((c:_PWM)+07h)),c	;volatile
	line	44
;pwm.c: 44: PWM.MINOSC=5;
	movlw	low(05h)
	movwf	(0+((c:_PWM)+08h)),c	;volatile
	line	45
;pwm.c: 45: PWM.MAD_MOD=0x14;
	movlw	low(014h)
	movwf	(0+((c:_PWM)+09h)),c	;volatile
	line	46
;pwm.c: 46: PWM.MAG_MOD=0xF7;
	movlw	low(0F7h)
	movwf	(0+((c:_PWM)+0Ah)),c	;volatile
	line	47
;pwm.c: 47: PWM.GWMSTART=99;
	movlw	low(063h)
	movwf	(0+((c:_PWM)+0Bh)),c	;volatile
	line	48
;pwm.c: 48: PWM.MDSTART=0x20;
	movlw	low(020h)
	movwf	(0+((c:_PWM)+0Ch)),c	;volatile
	line	49
;pwm.c: 49: PWM.MGSTART=0xC0+10;
	movlw	low(0CAh)
	movwf	(0+((c:_PWM)+0Dh)),c	;volatile
	line	50
;pwm.c: 50: PWM.GWMMAXCO=99;
	movlw	low(063h)
	movwf	(0+((c:_PWM)+0Eh)),c	;volatile
	line	51
;pwm.c: 51: PWM.MDMAXCO=0x20;
	movlw	low(020h)
	movwf	(0+((c:_PWM)+0Fh)),c	;volatile
	line	52
;pwm.c: 52: PWM.MGMAXCO=0xC0+10;
	movlw	low(0CAh)
	movwf	(0+((c:_PWM)+010h)),c	;volatile
	line	53
;pwm.c: 53: PWM.GWMMAXCW=99;
	movlw	low(063h)
	movwf	(0+((c:_PWM)+011h)),c	;volatile
	line	54
;pwm.c: 54: PWM.MDMAXCW=0x20;
	movlw	low(020h)
	movwf	(0+((c:_PWM)+012h)),c	;volatile
	line	55
;pwm.c: 55: PWM.MGMAXCW=0xC0+10;
	movlw	low(0CAh)
	movwf	(0+((c:_PWM)+013h)),c	;volatile
	line	56
;pwm.c: 56: PWM.FIRSTPB=0xA5;
	movlw	low(0A5h)
	movwf	(0+((c:_PWM)+014h)),c	;volatile
	line	57
;pwm.c: 57: PWM.PROP1=0xC0-1*((0xC0-0x20)/7);
	movlw	low(0AAh)
	movwf	(0+((c:_PWM)+015h)),c	;volatile
	line	58
;pwm.c: 58: PWM.PROP2=0xC0-2*((0xC0-0x20)/7);
	movlw	low(094h)
	movwf	(0+((c:_PWM)+016h)),c	;volatile
	line	59
;pwm.c: 59: PWM.PROP3=0xC0-3*((0xC0-0x20)/7);
	movlw	low(07Eh)
	movwf	(0+((c:_PWM)+017h)),c	;volatile
	line	60
;pwm.c: 60: }
	goto	l1447
	line	61
	
l1445:; BSR set to: 1

	line	63
;pwm.c: 61: else
;pwm.c: 62: {
;pwm.c: 63: PWM._ENOSC=(1!=0);
	bsf	((c:_PWM)),c,1	;volatile
	line	64
	
l14232:; BSR set to: 1

;pwm.c: 64: PWM.MDMOD=0x40;
	movlw	low(040h)
	movwf	(0+((c:_PWM)+05h)),c	;volatile
	line	65
;pwm.c: 65: PWM.MGMOD=0xE0;
	movlw	low(0E0h)
	movwf	(0+((c:_PWM)+06h)),c	;volatile
	line	66
;pwm.c: 66: PWM.MAXOSC=20;
	movlw	low(014h)
	movwf	(0+((c:_PWM)+07h)),c	;volatile
	line	67
;pwm.c: 67: PWM.MINOSC=5;
	movlw	low(05h)
	movwf	(0+((c:_PWM)+08h)),c	;volatile
	line	68
;pwm.c: 68: PWM.MAD_MOD=0x14;
	movlw	low(014h)
	movwf	(0+((c:_PWM)+09h)),c	;volatile
	line	69
;pwm.c: 69: PWM.MAG_MOD=0xF7;
	movlw	low(0F7h)
	movwf	(0+((c:_PWM)+0Ah)),c	;volatile
	line	70
;pwm.c: 70: PWM.GWMSTART=99;
	movlw	low(063h)
	movwf	(0+((c:_PWM)+0Bh)),c	;volatile
	line	71
;pwm.c: 71: PWM.MDSTART=0x40;
	movlw	low(040h)
	movwf	(0+((c:_PWM)+0Ch)),c	;volatile
	line	72
;pwm.c: 72: PWM.MGSTART=0xE0+10;
	movlw	low(0EAh)
	movwf	(0+((c:_PWM)+0Dh)),c	;volatile
	line	73
;pwm.c: 73: PWM.GWMMAXCO=99;
	movlw	low(063h)
	movwf	(0+((c:_PWM)+0Eh)),c	;volatile
	line	74
;pwm.c: 74: PWM.MDMAXCO=0x40;
	movlw	low(040h)
	movwf	(0+((c:_PWM)+0Fh)),c	;volatile
	line	75
;pwm.c: 75: PWM.MGMAXCO=0xE0+10;
	movlw	low(0EAh)
	movwf	(0+((c:_PWM)+010h)),c	;volatile
	line	76
;pwm.c: 76: PWM.GWMMAXCW=99;
	movlw	low(063h)
	movwf	(0+((c:_PWM)+011h)),c	;volatile
	line	77
;pwm.c: 77: PWM.MDMAXCW=0x40;
	movlw	low(040h)
	movwf	(0+((c:_PWM)+012h)),c	;volatile
	line	78
;pwm.c: 78: PWM.MGMAXCW=0xE0+10;
	movlw	low(0EAh)
	movwf	(0+((c:_PWM)+013h)),c	;volatile
	line	79
;pwm.c: 79: PWM.FIRSTPB=0xA3;
	movlw	low(0A3h)
	movwf	(0+((c:_PWM)+014h)),c	;volatile
	line	80
;pwm.c: 80: PWM.PROP1=0xE0-1*((0xE0-0x40)/7);
	movlw	low(0CAh)
	movwf	(0+((c:_PWM)+015h)),c	;volatile
	line	81
;pwm.c: 81: PWM.PROP2=0xE0-2*((0xE0-0x40)/7);
	movlw	low(0B4h)
	movwf	(0+((c:_PWM)+016h)),c	;volatile
	line	82
;pwm.c: 82: PWM.PROP3=0xE0-3*((0xE0-0x40)/7);
	movlw	low(09Eh)
	movwf	(0+((c:_PWM)+017h)),c	;volatile
	line	84
	
l1447:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_ModParam
	__end_of_ModParam:
	signat	_ModParam,8312
	global	_Read_b_eep

;; *************** function _Read_b_eep *****************
;; Defined at:
;;		line 36 in file "C:\Program Files\Microchip\xc8\v1.20\sources\pic18\plib\EEP\read_B.c"
;; Parameters:    Size  Location     Type
;;  badd            2    0[BANK1 ] unsigned int 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ReadTabNTC
;;		_ReturnACfromNTC
;;		_main
;;		_RdEEParam
;; This function uses a non-reentrant model
;;
psect	text86,class=CODE,space=0,reloc=2
global __ptext86
__ptext86:
psect	text86
	file	"C:\Program Files\Microchip\xc8\v1.20\sources\pic18\plib\EEP\read_B.c"
	line	36
	global	__size_of_Read_b_eep
	__size_of_Read_b_eep	equ	__end_of_Read_b_eep-_Read_b_eep
	
_Read_b_eep:; BSR set to: 1

;incstack = 0
	opt	stack 22
;incstack = 0
	line	37
	
l12134:
	movlb	1	; () banked
	movf	((Read_b_eep@badd+1))&0ffh,w
	andlw	low(03h)
	movwf	((c:4010)),c	;volatile
	line	38
	
l12136:; BSR set to: 1

	movff	(Read_b_eep@badd),(c:4009)	;volatile
	line	39
	
l12138:; BSR set to: 1

	bcf	((c:4006)),c,6	;volatile
	line	40
	
l12140:; BSR set to: 1

	bcf	((c:4006)),c,7	;volatile
	line	41
	
l12142:; BSR set to: 1

	bsf	((c:4006)),c,0	;volatile
	line	42
# 42 "C:\Program Files\Microchip\xc8\v1.20\sources\pic18\plib\EEP\read_B.c"
nop ;# 
	line	43
# 43 "C:\Program Files\Microchip\xc8\v1.20\sources\pic18\plib\EEP\read_B.c"
nop ;# 
psect	text86
	line	44
	
l12144:
	movf	((c:4008)),c,w	;volatile
	line	45
	
l2646:
	return
	opt stack 0
GLOBAL	__end_of_Read_b_eep
	__end_of_Read_b_eep:
	signat	_Read_b_eep,4217
	global	_ReadDataXONL

;; *************** function _ReadDataXONL *****************
;; Defined at:
;;		line 145 in file "C:\praca\PICC\backup\GRZ01V5\readdtal.c"
;; Parameters:    Size  Location     Type
;;  k               1    wreg     unsigned char 
;;  dt              1    4[BANK1 ] PTR unsigned char 
;;		 -> DtKNF(12), 
;;  min             1    5[BANK1 ] unsigned char 
;;  max             1    6[BANK1 ] unsigned char 
;;  step            1    7[BANK1 ] const unsigned char 
;;  step2           1    8[BANK1 ] const unsigned char 
;;  wrn             1    9[BANK1 ] unsigned char 
;; Auto vars:     Size  Location     Type
;;  k               1   15[BANK1 ] unsigned char 
;;  key             1   16[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       13 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_ExPresKey2
;;		___lbdiv
;; This function is called by:
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text87,class=CODE,space=0,reloc=2
global __ptext87
__ptext87:
psect	text87
	file	"C:\praca\PICC\backup\GRZ01V5\readdtal.c"
	line	145
	global	__size_of_ReadDataXONL
	__size_of_ReadDataXONL	equ	__end_of_ReadDataXONL-_ReadDataXONL
	
_ReadDataXONL:
;incstack = 0
	opt	stack 23
;incstack = 0
;ReadDataXONL@k stored from wreg
	line	150
	movff	wreg,(ReadDataXONL@k)
	line	148
	
l14742:; BSR set to: 0

	line	150
;readdtal.c: 150: if(!dtmo)
	movlb	(ReadDataXONL@dtmo/8) >> 8
	btfsc	(ReadDataXONL@dtmo/8),c,(ReadDataXONL@dtmo)&7
	goto	u20721
	goto	u20720
u20721:
	goto	l14746
u20720:
	line	152
	
l14744:
;readdtal.c: 151: {
;readdtal.c: 152: dtmo=1;
	movlb	(ReadDataXONL@dtmo/8) >> 8
	bsf	(ReadDataXONL@dtmo/8),c,(ReadDataXONL@dtmo)&7
	line	153
;readdtal.c: 153: ktu=0;
	movlb	0	; () banked
	clrf	((ReadDataXONL@ktu))&0ffh
	line	154
;readdtal.c: 154: iu=0;
	clrf	((ReadDataXONL@iu))&0ffh
	line	156
	
l14746:
;readdtal.c: 155: }
;readdtal.c: 156: if(*dt<min) *dt=min;
	movlb	1	; () banked
	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_ReadDataXONL+0+0)&0ffh
	movf	((ReadDataXONL@min))&0ffh,w
	subwf	((??_ReadDataXONL+0+0))&0ffh,w
	btfsc	status,0
	goto	u20731
	goto	u20730
u20731:
	goto	l14750
u20730:
	
l14748:; BSR set to: 1

	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movff	(ReadDataXONL@min),indf2

	line	157
	
l14750:; BSR set to: 1

;readdtal.c: 157: if(key=ExPresKey2(k,5,ktu))
	movlw	low(05h)
	movwf	((?_ExPresKey2))&0ffh
	movff	(ReadDataXONL@ktu),0+(?_ExPresKey2+01h)
	movf	((ReadDataXONL@k))&0ffh,w
	
	call	_ExPresKey2
	movwf	((ReadDataXONL@key))&0ffh
	movlb	1	; () banked
	movf	((ReadDataXONL@key))&0ffh,w
	btfsc	status,2
	goto	u20741
	goto	u20740
u20741:
	goto	l2454
u20740:
	line	159
	
l14752:; BSR set to: 1

;readdtal.c: 158: {
;readdtal.c: 159: if(key==1)
	decf	((ReadDataXONL@key))&0ffh,w

	btfss	status,2
	goto	u20751
	goto	u20750
u20751:
	goto	l14766
u20750:
	line	161
	
l14754:; BSR set to: 1

;readdtal.c: 160: {
;readdtal.c: 161: iu=0;
	movlb	0	; () banked
	clrf	((ReadDataXONL@iu))&0ffh
	line	162
	
l14756:; BSR set to: 0

;readdtal.c: 162: ktu=5;
	movlw	low(05h)
	movwf	((ReadDataXONL@ktu))&0ffh
	line	163
	
l14758:; BSR set to: 0

;readdtal.c: 163: if(*dt>=max) *dt=min;
	movlb	1	; () banked
	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_ReadDataXONL+0+0)&0ffh
	movf	((ReadDataXONL@max))&0ffh,w
	subwf	((??_ReadDataXONL+0+0))&0ffh,w
	btfss	status,0
	goto	u20761
	goto	u20760
u20761:
	goto	l14762
u20760:
	
l14760:; BSR set to: 1

	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movff	(ReadDataXONL@min),indf2

	goto	l14766
	line	165
	
l14762:; BSR set to: 1

;readdtal.c: 164: else
;readdtal.c: 165: if(*dt+step<=max) *dt=*dt+step;
	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_ReadDataXONL+0+0)&0ffh
	clrf	(??_ReadDataXONL+0+0+1)&0ffh

	movf	((ReadDataXONL@step))&0ffh,w
	addwf	(??_ReadDataXONL+0+0)&0ffh
	movlw	0
	addwfc	(??_ReadDataXONL+0+1)&0ffh
	movf	((ReadDataXONL@max))&0ffh,w
	movwf	(??_ReadDataXONL+2+0)&0ffh
	clrf	(??_ReadDataXONL+2+0+1)&0ffh

	movf	(??_ReadDataXONL+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ReadDataXONL+4+0)&0ffh
	movf	(??_ReadDataXONL+0+0)&0ffh,w
	subwf	(??_ReadDataXONL+2+0)&0ffh,w
	movf	(??_ReadDataXONL+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ReadDataXONL+4+0)&0ffh,w
	btfss	status,0
	goto	u20771
	goto	u20770
u20771:
	goto	l14766
u20770:
	
l14764:; BSR set to: 1

	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr1l
	clrf	fsr1h
	movf	indf1,w
	addwf	((ReadDataXONL@step))&0ffh,w
	movwf	indf2

	line	167
	
l14766:; BSR set to: 1

;readdtal.c: 166: }
;readdtal.c: 167: if(key==2)
	movf	((ReadDataXONL@key))&0ffh,w
	xorlw	2

	btfss	status,2
	goto	u20781
	goto	u20780
u20781:
	goto	l14784
u20780:
	line	169
	
l14768:; BSR set to: 1

;readdtal.c: 168: {
;readdtal.c: 169: if (iu<=(5-1)*3) iu++;
	movlw	(0Dh)&0ffh
	movlb	0	; () banked
	cpfslt	((ReadDataXONL@iu))&0ffh
	goto	u20791
	goto	u20790
u20791:
	goto	l14772
u20790:
	
l14770:; BSR set to: 0

	incf	((ReadDataXONL@iu))&0ffh
	line	170
	
l14772:; BSR set to: 0

;readdtal.c: 170: ktu=5-iu/3;
	movlw	low(03h)
	movwf	((?___lbdiv))&0ffh
	movf	((ReadDataXONL@iu))&0ffh,w
	
	call	___lbdiv
	movwf	(??_ReadDataXONL+0+0)&0ffh
	movf	((??_ReadDataXONL+0+0))&0ffh,w
	sublw	low(05h)
	movlb	0	; () banked
	movwf	((ReadDataXONL@ktu))&0ffh
	line	171
	
l14774:; BSR set to: 0

;readdtal.c: 171: if(*dt>=max) *dt=min;
	movlb	1	; () banked
	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_ReadDataXONL+0+0)&0ffh
	movf	((ReadDataXONL@max))&0ffh,w
	subwf	((??_ReadDataXONL+0+0))&0ffh,w
	btfss	status,0
	goto	u20801
	goto	u20800
u20801:
	goto	l14778
u20800:
	
l14776:; BSR set to: 1

	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movff	(ReadDataXONL@min),indf2

	goto	l14784
	line	173
	
l14778:; BSR set to: 1

;readdtal.c: 172: else
;readdtal.c: 173: if(*dt+step2<=max) *dt=*dt+step2;
	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_ReadDataXONL+0+0)&0ffh
	clrf	(??_ReadDataXONL+0+0+1)&0ffh

	movf	((ReadDataXONL@step2))&0ffh,w
	addwf	(??_ReadDataXONL+0+0)&0ffh
	movlw	0
	addwfc	(??_ReadDataXONL+0+1)&0ffh
	movf	((ReadDataXONL@max))&0ffh,w
	movwf	(??_ReadDataXONL+2+0)&0ffh
	clrf	(??_ReadDataXONL+2+0+1)&0ffh

	movf	(??_ReadDataXONL+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ReadDataXONL+4+0)&0ffh
	movf	(??_ReadDataXONL+0+0)&0ffh,w
	subwf	(??_ReadDataXONL+2+0)&0ffh,w
	movf	(??_ReadDataXONL+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ReadDataXONL+4+0)&0ffh,w
	btfss	status,0
	goto	u20811
	goto	u20810
u20811:
	goto	l2459
u20810:
	
l14780:; BSR set to: 1

	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr1l
	clrf	fsr1h
	movf	indf1,w
	addwf	((ReadDataXONL@step2))&0ffh,w
	movwf	indf2

	goto	l14784
	line	174
	
l2459:; BSR set to: 1

	line	175
;readdtal.c: 174: }
;readdtal.c: 175: }
	goto	l14784
	line	176
	
l2454:; BSR set to: 1

	line	178
;readdtal.c: 176: else
;readdtal.c: 177: {
;readdtal.c: 178: iu=0;
	movlb	0	; () banked
	clrf	((ReadDataXONL@iu))&0ffh
	line	179
	
l14782:; BSR set to: 0

;readdtal.c: 179: ktu=5;
	movlw	low(05h)
	movwf	((ReadDataXONL@ktu))&0ffh
	line	181
	
l14784:
;readdtal.c: 180: }
;readdtal.c: 181: if(*dt>max) *dt=min;
	movlb	1	; () banked
	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	cpfslt	((ReadDataXONL@max))&0ffh
	goto	u20821
	goto	u20820
u20821:
	goto	l14788
u20820:
	
l14786:; BSR set to: 1

	movf	((ReadDataXONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movff	(ReadDataXONL@min),indf2

	line	182
	
l14788:; BSR set to: 1

;readdtal.c: 182: if(wrn)
	movf	((ReadDataXONL@wrn))&0ffh,w
	btfsc	status,2
	goto	u20831
	goto	u20830
u20831:
	goto	l14796
u20830:
	line	184
	
l14790:; BSR set to: 1

;readdtal.c: 183: {
;readdtal.c: 184: dtmo=0;
	movlb	(ReadDataXONL@dtmo/8) >> 8
	bcf	(ReadDataXONL@dtmo/8),c,(ReadDataXONL@dtmo)&7
	line	185
	
l14792:
;readdtal.c: 185: return 1;
	movlw	(01h)&0ffh
	goto	l2467
	line	187
	
l14796:; BSR set to: 1

;readdtal.c: 186: }
;readdtal.c: 187: return 0x00;
	movlw	(0)&0ffh
	line	188
	
l2467:
	return
	opt stack 0
GLOBAL	__end_of_ReadDataXONL
	__end_of_ReadDataXONL:
	signat	_ReadDataXONL,28793
	global	___lbdiv

;; *************** function ___lbdiv *****************
;; Defined at:
;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.20\sources\common\lbdiv.c"
;; Parameters:    Size  Location     Type
;;  dividend        1    wreg     unsigned char 
;;  divisor         1    0[BANK0 ] unsigned char 
;; Auto vars:     Size  Location     Type
;;  dividend        1    0[BANK1 ] unsigned char 
;;  quotient        1    2[BANK1 ] unsigned char 
;;  counter         1    1[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ReadDataXONL
;;		_ReadDataXONLI
;;		_ReadDataXONLD
;; This function uses a non-reentrant model
;;
psect	text88,class=CODE,space=0,reloc=2
global __ptext88
__ptext88:
psect	text88
	file	"C:\Program Files\Microchip\xc8\v1.20\sources\common\lbdiv.c"
	line	5
	global	__size_of___lbdiv
	__size_of___lbdiv	equ	__end_of___lbdiv-___lbdiv
	
___lbdiv:
;incstack = 0
	opt	stack 22
;incstack = 0
;___lbdiv@dividend stored from wreg
	line	9
	movff	wreg,(___lbdiv@dividend)
	
l14914:; BSR set to: 0

	movlb	1	; () banked
	clrf	((___lbdiv@quotient))&0ffh
	line	10
	
l14916:; BSR set to: 1

	movlb	0	; () banked
	movf	((___lbdiv@divisor))&0ffh,w
	btfsc	status,2
	goto	u20981
	goto	u20980
u20981:
	goto	l14936
u20980:
	line	11
	
l14918:; BSR set to: 0

	movlw	low(01h)
	movlb	1	; () banked
	movwf	((___lbdiv@counter))&0ffh
	line	12
	goto	l14924
	line	13
	
l14920:; BSR set to: 0

	bcf status,0
	rlcf	((___lbdiv@divisor))&0ffh

	line	14
	
l14922:; BSR set to: 0

	movlb	1	; () banked
	incf	((___lbdiv@counter))&0ffh
	line	12
	
l14924:; BSR set to: 1

	movlb	0	; () banked
	
	btfss	((___lbdiv@divisor))&0ffh,(7)&7
	goto	u20991
	goto	u20990
u20991:
	goto	l14920
u20990:
	line	17
	
l14926:
	movlb	1	; () banked
	bcf status,0
	rlcf	((___lbdiv@quotient))&0ffh

	line	18
	movlb	0	; () banked
	movf	((___lbdiv@divisor))&0ffh,w
	movlb	1	; () banked
	subwf	((___lbdiv@dividend))&0ffh,w
	btfss	status,0
	goto	u21001
	goto	u21000
u21001:
	goto	l14932
u21000:
	line	19
	
l14928:; BSR set to: 1

	movlb	0	; () banked
	movf	((___lbdiv@divisor))&0ffh,w
	movlb	1	; () banked
	subwf	((___lbdiv@dividend))&0ffh
	line	20
	
l14930:; BSR set to: 1

	bsf	(0+(0/8)+(___lbdiv@quotient))&0ffh,(0)&7
	line	22
	
l14932:; BSR set to: 1

	movlb	0	; () banked
	bcf status,0
	rrcf	((___lbdiv@divisor))&0ffh

	line	23
	
l14934:; BSR set to: 0

	movlb	1	; () banked
	decfsz	((___lbdiv@counter))&0ffh
	
	goto	l14926
	line	25
	
l14936:
	movlb	1	; () banked
	movf	((___lbdiv@quotient))&0ffh,w
	line	26
	
l3082:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of___lbdiv
	__end_of___lbdiv:
	signat	___lbdiv,8313
	global	_ExPresKey2

;; *************** function _ExPresKey2 *****************
;; Defined at:
;;		line 151 in file "C:\praca\PICC\backup\GRZ01V5\keypad.c"
;; Parameters:    Size  Location     Type
;;  k               1    wreg     unsigned char 
;;  dTim            1    0[BANK1 ] unsigned char 
;;  pTim            1    1[BANK1 ] unsigned char 
;; Auto vars:     Size  Location     Type
;;  k               1    3[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;;		_RTdS
;; This function is called by:
;;		_ReadDataXONL
;;		_ReadDataXONLI
;; This function uses a non-reentrant model
;;
psect	text89,class=CODE,space=0,reloc=2
global __ptext89
__ptext89:
psect	text89
	file	"C:\praca\PICC\backup\GRZ01V5\keypad.c"
	line	151
	global	__size_of_ExPresKey2
	__size_of_ExPresKey2	equ	__end_of_ExPresKey2-_ExPresKey2
	
_ExPresKey2:; BSR set to: 1

;incstack = 0
	opt	stack 21
;incstack = 0
;ExPresKey2@k stored from wreg
	movff	wreg,(ExPresKey2@k)
	line	152
	
l12304:; BSR set to: 1

;keypad.c: 152: sp.bk=(k)?1:0;
	movlw	(0)&0ffh
	clrf	prodl
	cpfseq	((ExPresKey2@k))&0ffh
	incf	prodl
	movff	prodl,??_ExPresKey2+0+0
	movf	((c:_sp)),c,w
	xorwf	(??_ExPresKey2+0+0)&0ffh,w
	andlw	not ((1<<1)-1)
	xorwf	(??_ExPresKey2+0+0)&0ffh,w
	movwf	((c:_sp)),c
	line	154
	
l12306:; BSR set to: 1

;keypad.c: 154: if(sp.fl&&sp.sbk&&!sp.bk)
	
	btfss	((c:_sp)),c,4
	goto	u15561
	goto	u15560
u15561:
	goto	l12316
u15560:
	
l12308:; BSR set to: 1

	
	btfss	((c:_sp)),c,1
	goto	u15571
	goto	u15570
u15571:
	goto	l12316
u15570:
	
l12310:; BSR set to: 1

	
	btfsc	((c:_sp)),c,0
	goto	u15581
	goto	u15580
u15581:
	goto	l12316
u15580:
	line	156
	
l12312:; BSR set to: 1

;keypad.c: 155: {
;keypad.c: 156: sp.fl=0;
	bcf	((c:_sp)),c,4
	line	157
	
l12314:; BSR set to: 1

;keypad.c: 157: sp.sbk=(sp.bk)?1:0;
	
	btfsc	((c:_sp)),c,0
	goto	u15591
	goto	u15590
u15591:
	movlw	1
	goto	u15596
u15590:
	movlw	0
u15596:
	movwf	(??_ExPresKey2+0+0)&0ffh
	rlncf	((??_ExPresKey2+0+0))&0ffh
	movf	((c:_sp)),c,w
	xorwf	((??_ExPresKey2+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ExPresKey2+0+0))&0ffh,w
	movwf	((c:_sp)),c
	line	159
	
l12316:; BSR set to: 1

;keypad.c: 158: }
;keypad.c: 159: if (!sp.sbk&&sp.bk) StartRTdS(1);
	
	btfsc	((c:_sp)),c,1
	goto	u15601
	goto	u15600
u15601:
	goto	l12322
u15600:
	
l12318:; BSR set to: 1

	
	btfss	((c:_sp)),c,0
	goto	u15611
	goto	u15610
u15611:
	goto	l12322
u15610:
	
l12320:; BSR set to: 1

	movlw	(01h)&0ffh
	
	call	_StartRTdS
	line	161
	
l12322:; BSR set to: 1

;keypad.c: 161: if (!sp.fl&&sp.sbk&&!sp.bk)
	
	btfsc	((c:_sp)),c,4
	goto	u15621
	goto	u15620
u15621:
	goto	l524
u15620:
	
l12324:; BSR set to: 1

	
	btfss	((c:_sp)),c,1
	goto	u15631
	goto	u15630
u15631:
	goto	l524
u15630:
	
l12326:; BSR set to: 1

	
	btfsc	((c:_sp)),c,0
	goto	u15641
	goto	u15640
u15641:
	goto	l524
u15640:
	line	163
	
l12328:; BSR set to: 1

;keypad.c: 162: {
;keypad.c: 163: sp.sbk=(sp.bk)?1:0;
	
	btfsc	((c:_sp)),c,0
	goto	u15651
	goto	u15650
u15651:
	movlw	1
	goto	u15656
u15650:
	movlw	0
u15656:
	movwf	(??_ExPresKey2+0+0)&0ffh
	rlncf	((??_ExPresKey2+0+0))&0ffh
	movf	((c:_sp)),c,w
	xorwf	((??_ExPresKey2+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ExPresKey2+0+0))&0ffh,w
	movwf	((c:_sp)),c
	line	164
	
l12330:; BSR set to: 1

;keypad.c: 164: StartRTdS(1);
	movlw	(01h)&0ffh
	
	call	_StartRTdS
	line	165
	
l12332:; BSR set to: 1

;keypad.c: 165: return 1;
	movlw	(01h)&0ffh
	goto	l525
	line	166
	
l524:; BSR set to: 1

	line	167
;keypad.c: 166: }
;keypad.c: 167: if(sp.sbk&&sp.bk)
	
	btfss	((c:_sp)),c,1
	goto	u15661
	goto	u15660
u15661:
	goto	l526
u15660:
	
l12336:; BSR set to: 1

	
	btfss	((c:_sp)),c,0
	goto	u15671
	goto	u15670
u15671:
	goto	l526
u15670:
	line	170
	
l12338:; BSR set to: 1

;keypad.c: 168: {
;keypad.c: 170: if(!sp.ap&&RTdS(1)>=dTim)
	
	btfsc	((c:_sp)),c,2
	goto	u15681
	goto	u15680
u15681:
	goto	l527
u15680:
	
l12340:; BSR set to: 1

	movlw	(01h)&0ffh
	
	call	_RTdS
	movwf	(??_ExPresKey2+0+0)&0ffh
	movf	((ExPresKey2@dTim))&0ffh,w
	subwf	((??_ExPresKey2+0+0))&0ffh,w
	btfss	status,0
	goto	u15691
	goto	u15690
u15691:
	goto	l527
u15690:
	line	172
	
l12342:; BSR set to: 1

;keypad.c: 171: {
;keypad.c: 172: sp.fl=1;
	bsf	((c:_sp)),c,4
	line	173
;keypad.c: 173: sp.ap=1;
	bsf	((c:_sp)),c,2
	line	174
	
l527:; BSR set to: 1

	line	175
;keypad.c: 174: }
;keypad.c: 175: if(sp.ap&&RTdS(1)>=pTim)
	
	btfss	((c:_sp)),c,2
	goto	u15701
	goto	u15700
u15701:
	goto	l12352
u15700:
	
l12344:; BSR set to: 1

	movlw	(01h)&0ffh
	
	call	_RTdS
	movwf	(??_ExPresKey2+0+0)&0ffh
	movf	((ExPresKey2@pTim))&0ffh,w
	subwf	((??_ExPresKey2+0+0))&0ffh,w
	btfss	status,0
	goto	u15711
	goto	u15710
u15711:
	goto	l12352
u15710:
	line	177
	
l12346:; BSR set to: 1

;keypad.c: 176: {
;keypad.c: 177: StartRTdS(1);
	movlw	(01h)&0ffh
	
	call	_StartRTdS
	line	178
	
l12348:; BSR set to: 1

;keypad.c: 178: return 2;
	movlw	(02h)&0ffh
	goto	l525
	line	180
	
l526:; BSR set to: 1

	bcf	((c:_sp)),c,2
	line	181
	
l12352:; BSR set to: 1

;keypad.c: 181: sp.sbk=(sp.bk)?1:0;
	
	btfsc	((c:_sp)),c,0
	goto	u15721
	goto	u15720
u15721:
	movlw	1
	goto	u15726
u15720:
	movlw	0
u15726:
	movwf	(??_ExPresKey2+0+0)&0ffh
	rlncf	((??_ExPresKey2+0+0))&0ffh
	movf	((c:_sp)),c,w
	xorwf	((??_ExPresKey2+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ExPresKey2+0+0))&0ffh,w
	movwf	((c:_sp)),c
	line	182
	
l12354:; BSR set to: 1

;keypad.c: 182: if (sp.ap) return 3;
	
	btfss	((c:_sp)),c,2
	goto	u15731
	goto	u15730
u15731:
	goto	l12360
u15730:
	
l12356:; BSR set to: 1

	movlw	(03h)&0ffh
	goto	l525
	line	183
	
l12360:; BSR set to: 1

;keypad.c: 183: return 0;
	movlw	(0)&0ffh
	line	184
	
l525:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_ExPresKey2
	__end_of_ExPresKey2:
	signat	_ExPresKey2,12409
	global	_ReadDataONL

;; *************** function _ReadDataONL *****************
;; Defined at:
;;		line 122 in file "C:\praca\PICC\backup\GRZ01V5\readdtal.c"
;; Parameters:    Size  Location     Type
;;  k               1    wreg     unsigned char 
;;  dt              1    4[BANK1 ] PTR unsigned char 
;;		 -> DtKNF(12), 
;;  min             1    5[BANK1 ] unsigned char 
;;  max             1    6[BANK1 ] unsigned char 
;;  step            1    7[BANK1 ] const unsigned char 
;;  wrn             1    8[BANK1 ] unsigned char 
;; Auto vars:     Size  Location     Type
;;  k               1   14[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       11 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_ExPresKey
;; This function is called by:
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text90,class=CODE,space=0,reloc=2
global __ptext90
__ptext90:
psect	text90
	file	"C:\praca\PICC\backup\GRZ01V5\readdtal.c"
	line	122
	global	__size_of_ReadDataONL
	__size_of_ReadDataONL	equ	__end_of_ReadDataONL-_ReadDataONL
	
_ReadDataONL:; BSR set to: 1

;incstack = 0
	opt	stack 23
;incstack = 0
;ReadDataONL@k stored from wreg
	movff	wreg,(ReadDataONL@k)
	line	123
	
l14714:; BSR set to: 0

;readdtal.c: 123: if(*dt<min) *dt=min;
	movlb	1	; () banked
	movf	((ReadDataONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_ReadDataONL+0+0)&0ffh
	movf	((ReadDataONL@min))&0ffh,w
	subwf	((??_ReadDataONL+0+0))&0ffh,w
	btfsc	status,0
	goto	u20661
	goto	u20660
u20661:
	goto	l14718
u20660:
	
l14716:; BSR set to: 1

	movf	((ReadDataONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movff	(ReadDataONL@min),indf2

	line	124
	
l14718:; BSR set to: 1

;readdtal.c: 124: if(ExPresKey(k,10,6))
	movlw	low(0Ah)
	movwf	((?_ExPresKey))&0ffh
	movlw	low(06h)
	movwf	(0+(?_ExPresKey+01h))&0ffh
	movf	((ReadDataONL@k))&0ffh,w
	
	call	_ExPresKey
	iorlw	0
	btfsc	status,2
	goto	u20671
	goto	u20670
u20671:
	goto	l14728
u20670:
	line	126
	
l14720:; BSR set to: 1

;readdtal.c: 125: {
;readdtal.c: 126: if(*dt>=max) *dt=min;
	movf	((ReadDataONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_ReadDataONL+0+0)&0ffh
	movf	((ReadDataONL@max))&0ffh,w
	subwf	((??_ReadDataONL+0+0))&0ffh,w
	btfss	status,0
	goto	u20681
	goto	u20680
u20681:
	goto	l14724
u20680:
	
l14722:; BSR set to: 1

	movf	((ReadDataONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movff	(ReadDataONL@min),indf2

	goto	l14728
	line	128
	
l14724:; BSR set to: 1

;readdtal.c: 127: else
;readdtal.c: 128: if(*dt+step<=max) *dt=*dt+step;
	movf	((ReadDataONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_ReadDataONL+0+0)&0ffh
	clrf	(??_ReadDataONL+0+0+1)&0ffh

	movf	((ReadDataONL@step))&0ffh,w
	addwf	(??_ReadDataONL+0+0)&0ffh
	movlw	0
	addwfc	(??_ReadDataONL+0+1)&0ffh
	movf	((ReadDataONL@max))&0ffh,w
	movwf	(??_ReadDataONL+2+0)&0ffh
	clrf	(??_ReadDataONL+2+0+1)&0ffh

	movf	(??_ReadDataONL+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ReadDataONL+4+0)&0ffh
	movf	(??_ReadDataONL+0+0)&0ffh,w
	subwf	(??_ReadDataONL+2+0)&0ffh,w
	movf	(??_ReadDataONL+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ReadDataONL+4+0)&0ffh,w
	btfss	status,0
	goto	u20691
	goto	u20690
u20691:
	goto	l14728
u20690:
	
l14726:; BSR set to: 1

	movf	((ReadDataONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	((ReadDataONL@dt))&0ffh,w
	movwf	fsr1l
	clrf	fsr1h
	movf	indf1,w
	addwf	((ReadDataONL@step))&0ffh,w
	movwf	indf2

	line	130
	
l14728:; BSR set to: 1

;readdtal.c: 129: }
;readdtal.c: 130: if(*dt>max) *dt=min;
	movf	((ReadDataONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	cpfslt	((ReadDataONL@max))&0ffh
	goto	u20701
	goto	u20700
u20701:
	goto	l14732
u20700:
	
l14730:; BSR set to: 1

	movf	((ReadDataONL@dt))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movff	(ReadDataONL@min),indf2

	line	131
	
l14732:; BSR set to: 1

;readdtal.c: 131: if(wrn) return 1;
	movf	((ReadDataONL@wrn))&0ffh,w
	btfsc	status,2
	goto	u20711
	goto	u20710
u20711:
	goto	l14738
u20710:
	
l14734:; BSR set to: 1

	movlw	(01h)&0ffh
	goto	l2443
	line	132
	
l14738:; BSR set to: 1

;readdtal.c: 132: return 0x00;
	movlw	(0)&0ffh
	line	133
	
l2443:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_ReadDataONL
	__end_of_ReadDataONL:
	signat	_ReadDataONL,24697
	global	_ExPresKey

;; *************** function _ExPresKey *****************
;; Defined at:
;;		line 113 in file "C:\praca\PICC\backup\GRZ01V5\keypad.c"
;; Parameters:    Size  Location     Type
;;  k               1    wreg     unsigned char 
;;  dTim            1    0[BANK1 ] unsigned char 
;;  pTim            1    1[BANK1 ] unsigned char 
;; Auto vars:     Size  Location     Type
;;  k               1    3[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;;		_RTdS
;; This function is called by:
;;		_ReadDataONL
;; This function uses a non-reentrant model
;;
psect	text91,class=CODE,space=0,reloc=2
global __ptext91
__ptext91:
psect	text91
	file	"C:\praca\PICC\backup\GRZ01V5\keypad.c"
	line	113
	global	__size_of_ExPresKey
	__size_of_ExPresKey	equ	__end_of_ExPresKey-_ExPresKey
	
_ExPresKey:; BSR set to: 1

;incstack = 0
	opt	stack 23
;incstack = 0
;ExPresKey@k stored from wreg
	movff	wreg,(ExPresKey@k)
	line	114
	
l12248:; BSR set to: 1

;keypad.c: 114: sp.bk=(k)?1:0;
	movlw	(0)&0ffh
	clrf	prodl
	cpfseq	((ExPresKey@k))&0ffh
	incf	prodl
	movff	prodl,??_ExPresKey+0+0
	movf	((c:_sp)),c,w
	xorwf	(??_ExPresKey+0+0)&0ffh,w
	andlw	not ((1<<1)-1)
	xorwf	(??_ExPresKey+0+0)&0ffh,w
	movwf	((c:_sp)),c
	line	116
	
l12250:; BSR set to: 1

;keypad.c: 116: if (!sp.sbk&&sp.bk)
	
	btfsc	((c:_sp)),c,1
	goto	u15441
	goto	u15440
u15441:
	goto	l12262
u15440:
	
l12252:; BSR set to: 1

	
	btfss	((c:_sp)),c,0
	goto	u15451
	goto	u15450
u15451:
	goto	l12262
u15450:
	line	118
	
l12254:; BSR set to: 1

;keypad.c: 117: {
;keypad.c: 118: sp.sbk=(sp.bk)?1:0;
	
	btfsc	((c:_sp)),c,0
	goto	u15461
	goto	u15460
u15461:
	movlw	1
	goto	u15466
u15460:
	movlw	0
u15466:
	movwf	(??_ExPresKey+0+0)&0ffh
	rlncf	((??_ExPresKey+0+0))&0ffh
	movf	((c:_sp)),c,w
	xorwf	((??_ExPresKey+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ExPresKey+0+0))&0ffh,w
	movwf	((c:_sp)),c
	line	119
	
l12256:; BSR set to: 1

;keypad.c: 119: StartRTdS(1);
	movlw	(01h)&0ffh
	
	call	_StartRTdS
	line	120
	
l12258:; BSR set to: 1

;keypad.c: 120: return 1;
	movlw	(01h)&0ffh
	goto	l515
	line	122
	
l12262:; BSR set to: 1

;keypad.c: 121: }
;keypad.c: 122: sp.sbk=(sp.bk)?1:0;
	
	btfsc	((c:_sp)),c,0
	goto	u15471
	goto	u15470
u15471:
	movlw	1
	goto	u15476
u15470:
	movlw	0
u15476:
	movwf	(??_ExPresKey+0+0)&0ffh
	rlncf	((??_ExPresKey+0+0))&0ffh
	movf	((c:_sp)),c,w
	xorwf	((??_ExPresKey+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ExPresKey+0+0))&0ffh,w
	movwf	((c:_sp)),c
	line	123
	
l12264:; BSR set to: 1

;keypad.c: 123: if(sp.sbk&&sp.bk)
	
	btfss	((c:_sp)),c,1
	goto	u15481
	goto	u15480
u15481:
	goto	l516
u15480:
	
l12266:; BSR set to: 1

	
	btfss	((c:_sp)),c,0
	goto	u15491
	goto	u15490
u15491:
	goto	l516
u15490:
	line	125
	
l12268:; BSR set to: 1

;keypad.c: 124: {
;keypad.c: 125: if(!sp.ap&&RTdS(1)>=dTim)
	
	btfsc	((c:_sp)),c,2
	goto	u15501
	goto	u15500
u15501:
	goto	l12276
u15500:
	
l12270:; BSR set to: 1

	movlw	(01h)&0ffh
	
	call	_RTdS
	movwf	(??_ExPresKey+0+0)&0ffh
	movf	((ExPresKey@dTim))&0ffh,w
	subwf	((??_ExPresKey+0+0))&0ffh,w
	btfss	status,0
	goto	u15511
	goto	u15510
u15511:
	goto	l12276
u15510:
	line	127
	
l12272:; BSR set to: 1

;keypad.c: 126: {
;keypad.c: 127: sp.ap=1;
	bsf	((c:_sp)),c,2
	line	128
	
l12274:; BSR set to: 1

;keypad.c: 128: StartRTdS(1);
	movlw	(01h)&0ffh
	
	call	_StartRTdS
	line	130
	
l12276:; BSR set to: 1

;keypad.c: 129: }
;keypad.c: 130: if(sp.ap&&RTdS(1)>=pTim)
	
	btfss	((c:_sp)),c,2
	goto	u15521
	goto	u15520
u15521:
	goto	l12286
u15520:
	
l12278:; BSR set to: 1

	movlw	(01h)&0ffh
	
	call	_RTdS
	movwf	(??_ExPresKey+0+0)&0ffh
	movf	((ExPresKey@pTim))&0ffh,w
	subwf	((??_ExPresKey+0+0))&0ffh,w
	btfss	status,0
	goto	u15531
	goto	u15530
u15531:
	goto	l12286
u15530:
	line	132
	
l12280:; BSR set to: 1

;keypad.c: 131: {
;keypad.c: 132: StartRTdS(1);
	movlw	(01h)&0ffh
	
	call	_StartRTdS
	line	133
	
l12282:; BSR set to: 1

;keypad.c: 133: return 2;
	movlw	(02h)&0ffh
	goto	l515
	line	135
	
l516:; BSR set to: 1

	bcf	((c:_sp)),c,2
	line	136
	
l12286:; BSR set to: 1

;keypad.c: 136: return 0;
	movlw	(0)&0ffh
	line	137
	
l515:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_ExPresKey
	__end_of_ExPresKey:
	signat	_ExPresKey,12409
	global	_PrintWPR

;; *************** function _PrintWPR *****************
;; Defined at:
;;		line 87 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;  wr              1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  wr              1    6[BANK1 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;;		_SetData
;;		_SetPoz
;; This function is called by:
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text92,class=CODE,space=0,reloc=2
global __ptext92
__ptext92:
psect	text92
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	87
	global	__size_of_PrintWPR
	__size_of_PrintWPR	equ	__end_of_PrintWPR-_PrintWPR
	
_PrintWPR:; BSR set to: 1

;incstack = 0
	opt	stack 24
;incstack = 0
;PrintWPR@wr stored from wreg
	movff	wreg,(PrintWPR@wr)
	line	88
	
l14216:; BSR set to: 0

;print.c: 88: SetData(&DWD[2],0,wr);
	movlb	1	; () banked
	movlw	high(_DWD+08h)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_DWD+08h)
	movwf	((?_SetData))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetData+02h))&0ffh
	movff	(PrintWPR@wr),0+(?_SetData+03h)
	call	_SetData	;wreg free
	line	89
;print.c: 89: SetStatus(&DWD[2],0b0100000000000000,0b1111111111111111);
	movlw	high(_DWD+08h)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_DWD+08h)
	movwf	((?_SetStatus))&0ffh
	movlw	high(04000h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(04000h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	line	90
	
l14218:
;print.c: 90: SetPoz(1,0);
	movlw	low(0)
	movlb	0	; () banked
	movwf	((?_SetPoz))&0ffh
	movlw	(01h)&0ffh
	
	call	_SetPoz
	line	91
	
l14220:; BSR set to: 0

;print.c: 91: SetPoz(1,1);
	movlw	low(01h)
	movwf	((?_SetPoz))&0ffh
	movlw	(01h)&0ffh
	
	call	_SetPoz
	line	92
	
l1380:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PrintWPR
	__end_of_PrintWPR:
	signat	_PrintWPR,4216
	global	_PrintPR

;; *************** function _PrintPR *****************
;; Defined at:
;;		line 77 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;  lkod            1    wreg     const unsigned char 
;;  nkod            1    6[BANK1 ] unsigned char 
;;  tryb            1    7[BANK1 ] unsigned char 
;; Auto vars:     Size  Location     Type
;;  lkod            1    9[BANK1 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;;		_SetData
;;		_SetPoz
;; This function is called by:
;;		_ErrPTG
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text93,class=CODE,space=0,reloc=2
global __ptext93
__ptext93:
psect	text93
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	77
	global	__size_of_PrintPR
	__size_of_PrintPR	equ	__end_of_PrintPR-_PrintPR
	
_PrintPR:; BSR set to: 0

;incstack = 0
	opt	stack 23
;incstack = 0
;PrintPR@lkod stored from wreg
	movff	wreg,(PrintPR@lkod)
	line	78
	
l13900:; BSR set to: 1

;print.c: 78: if((nkod>0xf)&&!tryb) nkod=0xf;
	movlw	(010h-1)
	cpfsgt	((PrintPR@nkod))&0ffh
	goto	u18961
	goto	u18960
u18961:
	goto	l1372
u18960:
	
l13902:; BSR set to: 1

	tstfsz	((PrintPR@tryb))&0ffh
	goto	u18971
	goto	u18970
u18971:
	goto	l1372
u18970:
	
l13904:; BSR set to: 1

	movlw	low(0Fh)
	movwf	((PrintPR@nkod))&0ffh
	
l1372:; BSR set to: 1

	line	79
;print.c: 79: SetData(&DWD[2],lkod,(!tryb)?Znak[nkod]:nkod);
	movf	((PrintPR@tryb))&0ffh,w
	btfsc	status,2
	goto	u18981
	goto	u18980
u18981:
	goto	l13908
u18980:
	
l13906:; BSR set to: 1

	movff	(PrintPR@nkod),(_PrintPR$1754)
	clrf	((_PrintPR$1754+1))&0ffh
	goto	l13910
	
l13908:; BSR set to: 1

	movf	((PrintPR@nkod))&0ffh,w
	addlw	low(_Znak)
	movwf	(??_PrintPR+0+0)&0ffh
	movff	(??_PrintPR+0+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	movwf	((_PrintPR$1754))&0ffh
	clrf	((_PrintPR$1754+1))&0ffh
	
l13910:; BSR set to: 1

	movlw	high(_DWD+08h)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_DWD+08h)
	movwf	((?_SetData))&0ffh
	movff	(PrintPR@lkod),0+(?_SetData+02h)
	movff	(_PrintPR$1754),0+(?_SetData+03h)
	call	_SetData	;wreg free
	line	80
	
l13912:; BSR set to: 1

;print.c: 80: SetStatus(&DWD[2],0b0000000000000000,0b1111111111111111);
	movlw	high(_DWD+08h)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_DWD+08h)
	movwf	((?_SetStatus))&0ffh
	movlw	high(0)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	line	81
	
l13914:
;print.c: 81: SetPoz(1,0);
	movlw	low(0)
	movlb	0	; () banked
	movwf	((?_SetPoz))&0ffh
	movlw	(01h)&0ffh
	
	call	_SetPoz
	line	82
	
l13916:; BSR set to: 0

;print.c: 82: SetPoz(1,1);
	movlw	low(01h)
	movwf	((?_SetPoz))&0ffh
	movlw	(01h)&0ffh
	
	call	_SetPoz
	line	83
	
l1377:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PrintPR
	__end_of_PrintPR:
	signat	_PrintPR,12408
	global	_SetPoz

;; *************** function _SetPoz *****************
;; Defined at:
;;		line 675 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;  nrkol           1    wreg     const unsigned char 
;;  nrpoz           1    0[BANK0 ] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  nrkol           1    4[BANK1 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PrintErr
;;		_PrintPR
;;		_PrintWPR
;; This function uses a non-reentrant model
;;
psect	text94,class=CODE,space=0,reloc=2
global __ptext94
__ptext94:
psect	text94
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	675
	global	__size_of_SetPoz
	__size_of_SetPoz	equ	__end_of_SetPoz-_SetPoz
	
_SetPoz:; BSR set to: 0

;incstack = 0
	opt	stack 23
;incstack = 0
;SetPoz@nrkol stored from wreg
	movff	wreg,(SetPoz@nrkol)
	line	676
	
l12060:; BSR set to: 0

;wsw.c: 676: if ((nrkol>=4)||(nrpoz>=Klj[nrkol].nPzc)) asm("RESET");
	movlw	(04h)&0ffh
	movlb	1	; () banked
	cpfslt	((SetPoz@nrkol))&0ffh
	goto	u15201
	goto	u15200
u15201:
	goto	l193
u15200:
	
l12062:; BSR set to: 1

	movf	((SetPoz@nrkol))&0ffh,w
	mullw	02h
	movff	prodl,??_SetPoz+0+0
	movlw	01h
	addwf	(??_SetPoz+0+0)&0ffh
	movf	(??_SetPoz+0+0)&0ffh,w
	addlw	low(_Klj)
	movwf	(??_SetPoz+1+0)&0ffh
	movff	(??_SetPoz+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	movlb	0	; () banked
	subwf	((SetPoz@nrpoz))&0ffh,w
	btfss	status,0
	goto	u15211
	goto	u15210
u15211:
	goto	l12064
u15210:
	
l193:
# 676 "C:\praca\PICC\backup\GRZ01V5\wsw.c"
RESET ;# 
psect	text94
	line	677
	
l12064:
;wsw.c: 677: (*Klj[nrkol].KL).KFc[nrpoz].focus=1;
	movlb	1	; () banked
	movf	((SetPoz@nrkol))&0ffh,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_SetPoz+0+0)&0ffh
	movff	(??_SetPoz+0+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_SetPoz+1+0
	movlw	03h
	addwf	(??_SetPoz+1+0)&0ffh
	movff	??_SetPoz+1+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_SetPoz+2+0
	tblrd	*+
	
	movff	tablat,??_SetPoz+2+0+1
	movlb	0	; () banked
	movf	((SetPoz@nrpoz))&0ffh,w
	movlb	1	; () banked
	addwf	(??_SetPoz+2+0)&0ffh,w
	movwf	c:fsr2l
	movlb	0	; () banked
	movlw	0
	movlb	1	; () banked
	addwfc	(??_SetPoz+2+1)&0ffh,w
	movwf	1+c:fsr2l
	movlw	(01h & ((1<<1)-1))<<0
	iorwf	(indf2)&0ffh
	line	678
	
l12066:
;wsw.c: 678: KInd[nrkol].reset=0;
	movlb	1	; () banked
	movf	((SetPoz@nrkol))&0ffh,w
	movlb	0	; () banked
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<1)-1))<<1)|not (((1<<1)-1)<<1)
	andwf	(indf2)&0ffh
	line	679
	
l194:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_SetPoz
	__end_of_SetPoz:
	signat	_SetPoz,8312
	global	_Write_b_eep

;; *************** function _Write_b_eep *****************
;; Defined at:
;;		line 50 in file "C:\Program Files\Microchip\xc8\v1.20\sources\pic18\plib\EEP\write_B.c"
;; Parameters:    Size  Location     Type
;;  badd            2    0[BANK1 ] unsigned int 
;;  bdat            1    2[BANK1 ] unsigned char 
;; Auto vars:     Size  Location     Type
;;  GIE_BIT_VAL     1    0[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ErrPTG
;;		_ToReset
;;		_MKonfiguracja
;;		_WriteEEPCW
;; This function uses a non-reentrant model
;;
psect	text95,class=CODE,space=0,reloc=2
global __ptext95
__ptext95:
psect	text95
	file	"C:\Program Files\Microchip\xc8\v1.20\sources\pic18\plib\EEP\write_B.c"
	line	50
	global	__size_of_Write_b_eep
	__size_of_Write_b_eep	equ	__end_of_Write_b_eep-_Write_b_eep
	
_Write_b_eep:; BSR set to: 0

;incstack = 0
	opt	stack 23
;incstack = 0
	line	51
	
l13876:; BSR set to: 1

	line	52
	
l13878:; BSR set to: 1

	movf	((Write_b_eep@badd+1))&0ffh,w
	andlw	low(03h)
	movwf	((c:4010)),c	;volatile
	line	53
	
l13880:; BSR set to: 1

	movff	(Write_b_eep@badd),(c:4009)	;volatile
	line	54
	
l13882:; BSR set to: 1

	movff	(Write_b_eep@bdat),(c:4008)	;volatile
	line	55
	
l13884:; BSR set to: 1

	bcf	((c:4006)),c,7	;volatile
	line	56
	
l13886:; BSR set to: 1

	bcf	((c:4006)),c,6	;volatile
	line	57
	
l13888:; BSR set to: 1

	bsf	((c:4006)),c,2	;volatile
	line	58
	
l13890:; BSR set to: 1

	movlw	0
	btfsc	((c:4082)),c,7	;volatile
	movlw	1
	movlb	0	; () banked
	movwf	((Write_b_eep@GIE_BIT_VAL))&0ffh
	line	59
	
l13892:; BSR set to: 0

	bcf	((c:4082)),c,7	;volatile
	line	60
	
l13894:; BSR set to: 0

	movlw	low(055h)
	movwf	((c:4007)),c	;volatile
	line	61
	
l13896:; BSR set to: 0

	movlw	low(0AAh)
	movwf	((c:4007)),c	;volatile
	line	62
	
l13898:; BSR set to: 0

	bsf	((c:4006)),c,1	;volatile
	line	63
	
l2661:
	
	btfsc	((c:4006)),c,1	;volatile
	goto	u18941
	goto	u18940
u18941:
	goto	l2661
u18940:
	
l2663:
	line	64
	movlb	0	; () banked
	btfsc	(Write_b_eep@GIE_BIT_VAL)&0ffh,0
	bra	u18955
	bcf	((c:4082)),c,7	;volatile
	bra	u18956
	u18955:
	bsf	((c:4082)),c,7	;volatile
	u18956:

	line	65
	bcf	((c:4006)),c,2	;volatile
	line	66
	
l2664:
	return
	opt stack 0
GLOBAL	__end_of_Write_b_eep
	__end_of_Write_b_eep:
	signat	_Write_b_eep,8312
	global	_Busy_eep

;; *************** function _Busy_eep *****************
;; Defined at:
;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.20\sources\pic18\plib\EEP\busy_eep.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ErrPTG
;;		_ToReset
;;		_MKonfiguracja
;;		_WriteEEPCW
;; This function uses a non-reentrant model
;;
psect	text96,class=CODE,space=0,reloc=2
global __ptext96
__ptext96:
psect	text96
	file	"C:\Program Files\Microchip\xc8\v1.20\sources\pic18\plib\EEP\busy_eep.c"
	line	13
	global	__size_of_Busy_eep
	__size_of_Busy_eep	equ	__end_of_Busy_eep-_Busy_eep
	
_Busy_eep:
;incstack = 0
	opt	stack 23
;incstack = 0
	line	14
	
l13874:
	
l2632:
	
	btfsc	((c:4006)),c,1	;volatile
	goto	u18931
	goto	u18930
u18931:
	goto	l2632
u18930:
	line	15
	
l2635:
	return
	opt stack 0
GLOBAL	__end_of_Busy_eep
	__end_of_Busy_eep:
	signat	_Busy_eep,88
	global	_RTM

;; *************** function _RTM *****************
;; Defined at:
;;		line 91 in file "C:\praca\PICC\backup\GRZ01V5\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FunkcjaSerwisowa
;;		_RuszCiag
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text97,class=CODE,space=0,reloc=2
global __ptext97
__ptext97:
psect	text97
	file	"C:\praca\PICC\backup\GRZ01V5\rtimer.c"
	line	91
	global	__size_of_RTM
	__size_of_RTM	equ	__end_of_RTM-_RTM
	
_RTM:
;incstack = 0
	opt	stack 25
;incstack = 0
;RTM@Index stored from wreg
	movff	wreg,(RTM@Index)
	line	92
	
l13656:; BSR set to: 0

;rtimer.c: 92: if (Index>5-1) asm("RESET");
	movlw	(05h-1)
	cpfsgt	((RTM@Index))&0ffh
	goto	u18501
	goto	u18500
u18501:
	goto	l13660
u18500:
	
l13658:; BSR set to: 0

# 92 "C:\praca\PICC\backup\GRZ01V5\rtimer.c"
RESET ;# 
psect	text97
	line	93
	
l13660:
;rtimer.c: 93: return Mn[Index].M;
	movlb	0	; () banked
	movf	((RTM@Index))&0ffh,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Mn+01h)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	line	94
	
l2365:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_RTM
	__end_of_RTM:
	signat	_RTM,4217
	global	_StartRTM

;; *************** function _StartRTM *****************
;; Defined at:
;;		line 85 in file "C:\praca\PICC\backup\GRZ01V5\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FunkcjaSerwisowa
;;		_RuszCiag
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text98,class=CODE,space=0,reloc=2
global __ptext98
__ptext98:
psect	text98
	file	"C:\praca\PICC\backup\GRZ01V5\rtimer.c"
	line	85
	global	__size_of_StartRTM
	__size_of_StartRTM	equ	__end_of_StartRTM-_StartRTM
	
_StartRTM:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
;StartRTM@Index stored from wreg
	movff	wreg,(StartRTM@Index)
	line	86
	
l13650:
;rtimer.c: 86: if (Index>5-1) asm("RESET");
	movlw	(05h-1)
	movlb	0	; () banked
	cpfsgt	((StartRTM@Index))&0ffh
	goto	u18491
	goto	u18490
u18491:
	goto	l13654
u18490:
	
l13652:; BSR set to: 0

# 86 "C:\praca\PICC\backup\GRZ01V5\rtimer.c"
RESET ;# 
psect	text98
	line	87
	
l13654:
;rtimer.c: 87: Mn[Index].S=0;
	movlb	0	; () banked
	movf	((StartRTM@Index))&0ffh,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Mn)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movlw	low(0)
	movwf	indf2
	line	88
;rtimer.c: 88: Mn[Index].M=0;
	movf	((StartRTM@Index))&0ffh,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Mn+01h)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movlw	low(0)
	movwf	indf2
	line	89
	
l2361:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_StartRTM
	__end_of_StartRTM:
	signat	_StartRTM,4216
	global	_RTS

;; *************** function _RTS *****************
;; Defined at:
;;		line 76 in file "C:\praca\PICC\backup\GRZ01V5\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecSTR
;;		_FunkcjaSerwisowa
;;		_Rozruch
;;		_VWybieg
;;		_RuszPlomien
;;		_RuszCiag
;;		_ReloadCiag
;;		_KeyRes
;;		_VZPauza
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text99,class=CODE,space=0,reloc=2
global __ptext99
__ptext99:
psect	text99
	file	"C:\praca\PICC\backup\GRZ01V5\rtimer.c"
	line	76
	global	__size_of_RTS
	__size_of_RTS	equ	__end_of_RTS-_RTS
	
_RTS:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
;RTS@Index stored from wreg
	movff	wreg,(RTS@Index)
	line	77
	
l13618:
;rtimer.c: 77: if (Index>14-1) asm("RESET");
	movlw	(0Eh-1)
	movlb	0	; () banked
	cpfsgt	((RTS@Index))&0ffh
	goto	u18451
	goto	u18450
u18451:
	goto	l13622
u18450:
	
l13620:; BSR set to: 0

# 77 "C:\praca\PICC\backup\GRZ01V5\rtimer.c"
RESET ;# 
psect	text99
	line	78
	
l13622:
;rtimer.c: 78: return Sk[Index].S;
	movlb	0	; () banked
	movf	((RTS@Index))&0ffh,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_Sk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	line	79
	
l2357:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RTS
	__end_of_RTS:
	signat	_RTS,4217
	global	_PresKey2

;; *************** function _PresKey2 *****************
;; Defined at:
;;		line 63 in file "C:\praca\PICC\backup\GRZ01V5\keypad.c"
;; Parameters:    Size  Location     Type
;;  k               1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  k               1    0[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, prodl
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text100,class=CODE,space=0,reloc=2
global __ptext100
__ptext100:
psect	text100
	file	"C:\praca\PICC\backup\GRZ01V5\keypad.c"
	line	63
	global	__size_of_PresKey2
	__size_of_PresKey2	equ	__end_of_PresKey2-_PresKey2
	
_PresKey2:; BSR set to: 1

;incstack = 0
	opt	stack 25
;incstack = 0
;PresKey2@k stored from wreg
	movff	wreg,(PresKey2@k)
	line	64
	
l12230:; BSR set to: 0

;keypad.c: 64: ky2.bk=(k)?1:0;
	movlw	(0)&0ffh
	clrf	prodl
	movlb	1	; () banked
	cpfseq	((PresKey2@k))&0ffh
	incf	prodl
	movff	prodl,??_PresKey2+0+0
	movf	((c:_ky2)),c,w
	movlb	0	; () banked
	xorwf	(??_PresKey2+0+0)&0ffh,w
	andlw	not ((1<<1)-1)
	xorwf	(??_PresKey2+0+0)&0ffh,w
	movwf	((c:_ky2)),c
	line	65
	
l12232:; BSR set to: 0

;keypad.c: 65: if (!ky2.sbk&&ky2.bk)
	
	btfsc	((c:_ky2)),c,1
	goto	u15401
	goto	u15400
u15401:
	goto	l12242
u15400:
	
l12234:; BSR set to: 0

	
	btfss	((c:_ky2)),c,0
	goto	u15411
	goto	u15410
u15411:
	goto	l12242
u15410:
	line	67
	
l12236:; BSR set to: 0

;keypad.c: 66: {
;keypad.c: 67: ky2.sbk=(ky2.bk)?1:0;
	
	btfsc	((c:_ky2)),c,0
	goto	u15421
	goto	u15420
u15421:
	movlw	1
	goto	u15426
u15420:
	movlw	0
u15426:
	movwf	(??_PresKey2+0+0)&0ffh
	rlncf	((??_PresKey2+0+0))&0ffh
	movf	((c:_ky2)),c,w
	xorwf	((??_PresKey2+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_PresKey2+0+0))&0ffh,w
	movwf	((c:_ky2)),c
	line	68
	
l12238:; BSR set to: 0

;keypad.c: 68: return 1;
	movlw	(01h)&0ffh
	goto	l511
	line	70
	
l12242:; BSR set to: 0

;keypad.c: 69: }
;keypad.c: 70: ky2.sbk=(ky2.bk)?1:0;
	
	btfsc	((c:_ky2)),c,0
	goto	u15431
	goto	u15430
u15431:
	movlw	1
	goto	u15436
u15430:
	movlw	0
u15436:
	movwf	(??_PresKey2+0+0)&0ffh
	rlncf	((??_PresKey2+0+0))&0ffh
	movf	((c:_ky2)),c,w
	xorwf	((??_PresKey2+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_PresKey2+0+0))&0ffh,w
	movwf	((c:_ky2)),c
	line	71
	
l12244:; BSR set to: 0

;keypad.c: 71: return 0;
	movlw	(0)&0ffh
	line	72
	
l511:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PresKey2
	__end_of_PresKey2:
	signat	_PresKey2,4217
	global	_SetBufKey2

;; *************** function _SetBufKey2 *****************
;; Defined at:
;;		line 55 in file "C:\praca\PICC\backup\GRZ01V5\keypad.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text101,class=CODE,space=0,reloc=2
global __ptext101
__ptext101:
psect	text101
	file	"C:\praca\PICC\backup\GRZ01V5\keypad.c"
	line	55
	global	__size_of_SetBufKey2
	__size_of_SetBufKey2	equ	__end_of_SetBufKey2-_SetBufKey2
	
_SetBufKey2:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	56
	
l12228:; BSR set to: 0

;keypad.c: 56: ky2.sbk=1;
	bsf	((c:_ky2)),c,1
	line	57
	
l504:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_SetBufKey2
	__end_of_SetBufKey2:
	signat	_SetBufKey2,88
	global	_PresKey1

;; *************** function _PresKey1 *****************
;; Defined at:
;;		line 40 in file "C:\praca\PICC\backup\GRZ01V5\keypad.c"
;; Parameters:    Size  Location     Type
;;  k               1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  k               1    0[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, prodl
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text102,class=CODE,space=0,reloc=2
global __ptext102
__ptext102:
psect	text102
	file	"C:\praca\PICC\backup\GRZ01V5\keypad.c"
	line	40
	global	__size_of_PresKey1
	__size_of_PresKey1	equ	__end_of_PresKey1-_PresKey1
	
_PresKey1:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
;PresKey1@k stored from wreg
	movff	wreg,(PresKey1@k)
	line	41
	
l12210:; BSR set to: 0

;keypad.c: 41: ky1.bk=(k)?1:0;
	movlw	(0)&0ffh
	clrf	prodl
	movlb	1	; () banked
	cpfseq	((PresKey1@k))&0ffh
	incf	prodl
	movff	prodl,??_PresKey1+0+0
	movf	((c:_ky1)),c,w
	movlb	0	; () banked
	xorwf	(??_PresKey1+0+0)&0ffh,w
	andlw	not ((1<<1)-1)
	xorwf	(??_PresKey1+0+0)&0ffh,w
	movwf	((c:_ky1)),c
	line	42
	
l12212:; BSR set to: 0

;keypad.c: 42: if (!ky1.sbk&&ky1.bk)
	
	btfsc	((c:_ky1)),c,1
	goto	u15361
	goto	u15360
u15361:
	goto	l12222
u15360:
	
l12214:; BSR set to: 0

	
	btfss	((c:_ky1)),c,0
	goto	u15371
	goto	u15370
u15371:
	goto	l12222
u15370:
	line	44
	
l12216:; BSR set to: 0

;keypad.c: 43: {
;keypad.c: 44: ky1.sbk=(ky1.bk)?1:0;
	
	btfsc	((c:_ky1)),c,0
	goto	u15381
	goto	u15380
u15381:
	movlw	1
	goto	u15386
u15380:
	movlw	0
u15386:
	movwf	(??_PresKey1+0+0)&0ffh
	rlncf	((??_PresKey1+0+0))&0ffh
	movf	((c:_ky1)),c,w
	xorwf	((??_PresKey1+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_PresKey1+0+0))&0ffh,w
	movwf	((c:_ky1)),c
	line	45
	
l12218:; BSR set to: 0

;keypad.c: 45: return 1;
	movlw	(01h)&0ffh
	goto	l501
	line	47
	
l12222:; BSR set to: 0

;keypad.c: 46: }
;keypad.c: 47: ky1.sbk=(ky1.bk)?1:0;
	
	btfsc	((c:_ky1)),c,0
	goto	u15391
	goto	u15390
u15391:
	movlw	1
	goto	u15396
u15390:
	movlw	0
u15396:
	movwf	(??_PresKey1+0+0)&0ffh
	rlncf	((??_PresKey1+0+0))&0ffh
	movf	((c:_ky1)),c,w
	xorwf	((??_PresKey1+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_PresKey1+0+0))&0ffh,w
	movwf	((c:_ky1)),c
	line	48
	
l12224:; BSR set to: 0

;keypad.c: 48: return 0;
	movlw	(0)&0ffh
	line	49
	
l501:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PresKey1
	__end_of_PresKey1:
	signat	_PresKey1,4217
	global	_SetBufKey1

;; *************** function _SetBufKey1 *****************
;; Defined at:
;;		line 32 in file "C:\praca\PICC\backup\GRZ01V5\keypad.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text103,class=CODE,space=0,reloc=2
global __ptext103
__ptext103:
psect	text103
	file	"C:\praca\PICC\backup\GRZ01V5\keypad.c"
	line	32
	global	__size_of_SetBufKey1
	__size_of_SetBufKey1	equ	__end_of_SetBufKey1-_SetBufKey1
	
_SetBufKey1:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	33
	
l12208:; BSR set to: 0

;keypad.c: 33: ky1.sbk=1;
	bsf	((c:_ky1)),c,1
	line	34
	
l494:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_SetBufKey1
	__end_of_SetBufKey1:
	signat	_SetBufKey1,88
	global	_RestartFltPrt

;; *************** function _RestartFltPrt *****************
;; Defined at:
;;		line 208 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetPrt
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text104,class=CODE,space=0,reloc=2
global __ptext104
__ptext104:
psect	text104
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	208
	global	__size_of_RestartFltPrt
	__size_of_RestartFltPrt	equ	__end_of_RestartFltPrt-_RestartFltPrt
	
_RestartFltPrt:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	209
	
l12752:; BSR set to: 0

;main.c: 209: SetPrt(6,0);
	movlw	low(0)
	movwf	((?_SetPrt))&0ffh
	movlw	(06h)&0ffh
	
	call	_SetPrt
	line	210
	
l741:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RestartFltPrt
	__end_of_RestartFltPrt:
	signat	_RestartFltPrt,88
	global	_SetPrt

;; *************** function _SetPrt *****************
;; Defined at:
;;		line 200 in file "C:\praca\PICC\backup\GRZ01V5\port.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;;  nw              1    0[BANK0 ] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1    1[BANK1 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RestartFltPrt
;; This function uses a non-reentrant model
;;
psect	text105,class=CODE,space=0,reloc=2
global __ptext105
__ptext105:
psect	text105
	file	"C:\praca\PICC\backup\GRZ01V5\port.c"
	line	200
	global	__size_of_SetPrt
	__size_of_SetPrt	equ	__end_of_SetPrt-_SetPrt
	
_SetPrt:; BSR set to: 1

;incstack = 0
	opt	stack 25
;incstack = 0
;SetPrt@Index stored from wreg
	movff	wreg,(SetPrt@Index)
	line	201
	
l13590:; BSR set to: 0

;port.c: 201: if (Index>10-1) asm("RESET");
	movlw	(0Ah-1)
	movlb	1	; () banked
	cpfsgt	((SetPrt@Index))&0ffh
	goto	u18421
	goto	u18420
u18421:
	goto	l13594
u18420:
	
l13592:; BSR set to: 1

# 201 "C:\praca\PICC\backup\GRZ01V5\port.c"
RESET ;# 
psect	text105
	line	202
	
l13594:
;port.c: 202: SPort[Index].Output=((!nw)?0:1);
	movlw	(0)&0ffh
	clrf	prodl
	movlb	0	; () banked
	cpfseq	((SetPrt@nw))&0ffh
	incf	prodl
	movff	prodl,??_SetPrt+0+0
	movlb	1	; () banked
	movf	((SetPrt@Index))&0ffh,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rlncf	(??_SetPrt+0+0)&0ffh
	movf	(indf2),c,w
	xorwf	(??_SetPrt+0+0)&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	(??_SetPrt+0+0)&0ffh,w
	movwf	(indf2),c
	line	203
	
l13596:; BSR set to: 1

;port.c: 203: SPort[Index].Timer=0;
	movf	((SetPrt@Index))&0ffh,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2),c
	line	204
	
l1329:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_SetPrt
	__end_of_SetPrt:
	signat	_SetPrt,8312
	global	_EnKonf

;; *************** function _EnKonf *****************
;; Defined at:
;;		line 25 in file "C:\praca\PICC\backup\GRZ01V5\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTS
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text106,class=CODE,space=0,reloc=2
global __ptext106
__ptext106:
psect	text106
	file	"C:\praca\PICC\backup\GRZ01V5\konfig.c"
	line	25
	global	__size_of_EnKonf
	__size_of_EnKonf	equ	__end_of_EnKonf-_EnKonf
	
_EnKonf:; BSR set to: 1

;incstack = 0
	opt	stack 25
;incstack = 0
	line	26
	
l12624:
;konfig.c: 26: bfrs=0;
	movlb	0	; () banked
	clrf	((_bfrs))&0ffh
	line	27
;konfig.c: 27: DtKNF.KRK=0;
	clrf	(0+(_DtKNF+02h))&0ffh
	line	28
	
l12626:; BSR set to: 0

;konfig.c: 28: StartRTS(0);
	movlw	(0)&0ffh
	
	call	_StartRTS
	line	29
	
l12628:; BSR set to: 1

;konfig.c: 29: DtKNF.enknf=1;
	movlb	0	; () banked
	bsf	((_DtKNF))&0ffh,0
	line	30
	
l2565:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_EnKonf
	__end_of_EnKonf:
	signat	_EnKonf,88
	global	_StartRTS

;; *************** function _StartRTS *****************
;; Defined at:
;;		line 70 in file "C:\praca\PICC\backup\GRZ01V5\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : 0/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;;		_DecERR
;;		_FunkcjaSerwisowa
;;		_Rozruch
;;		_VWybieg
;;		_RuszPlomien
;;		_RuszCiag
;;		_KeyRes
;;		_VZPauza
;;		_EnKonf
;;		_MKonfiguracja
;; This function uses a non-reentrant model
;;
psect	text107,class=CODE,space=0,reloc=2
global __ptext107
__ptext107:
psect	text107
	file	"C:\praca\PICC\backup\GRZ01V5\rtimer.c"
	line	70
	global	__size_of_StartRTS
	__size_of_StartRTS	equ	__end_of_StartRTS-_StartRTS
	
_StartRTS:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
;StartRTS@Index stored from wreg
	movff	wreg,(StartRTS@Index)
	line	71
	
l12754:
;rtimer.c: 71: if (Index>14-1) asm("RESET");
	movlw	(0Eh-1)
	movlb	0	; () banked
	cpfsgt	((StartRTS@Index))&0ffh
	goto	u16361
	goto	u16360
u16361:
	goto	l12758
u16360:
	
l12756:; BSR set to: 0

# 71 "C:\praca\PICC\backup\GRZ01V5\rtimer.c"
RESET ;# 
psect	text107
	line	72
	
l12758:
;rtimer.c: 72: Sk[Index].dS=0;
	movlb	0	; () banked
	movf	((StartRTS@Index))&0ffh,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_Sk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	73
;rtimer.c: 73: Sk[Index].S=0;
	movlb	0	; () banked
	movf	((StartRTS@Index))&0ffh,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_Sk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	74
	
l2353:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_StartRTS
	__end_of_StartRTS:
	signat	_StartRTS,4216
	global	_EndClsScr

;; *************** function _EndClsScr *****************
;; Defined at:
;;		line 35 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_WswOn
;;		_AllKolToFirstPoz
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text108,class=CODE,space=0,reloc=2
global __ptext108
__ptext108:
psect	text108
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	35
	global	__size_of_EndClsScr
	__size_of_EndClsScr	equ	__end_of_EndClsScr-_EndClsScr
	
_EndClsScr:; BSR set to: 1

;incstack = 0
	opt	stack 25
;incstack = 0
	line	36
	
l12620:; BSR set to: 1

;print.c: 36: AllKolToFirstPoz();
	call	_AllKolToFirstPoz	;wreg free
	line	37
	
l12622:; BSR set to: 0

;print.c: 37: WswOn();
	call	_WswOn	;wreg free
	line	38
	
l1361:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_EndClsScr
	__end_of_EndClsScr:
	signat	_EndClsScr,88
	global	_AllKolToFirstPoz

;; *************** function _AllKolToFirstPoz *****************
;; Defined at:
;;		line 701 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  j               1    0[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_EndClsScr
;; This function uses a non-reentrant model
;;
psect	text109,class=CODE,space=0,reloc=2
global __ptext109
__ptext109:
psect	text109
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	701
	global	__size_of_AllKolToFirstPoz
	__size_of_AllKolToFirstPoz	equ	__end_of_AllKolToFirstPoz-_AllKolToFirstPoz
	
_AllKolToFirstPoz:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	703
	
l12080:; BSR set to: 1

;wsw.c: 702: unsigned char j;
;wsw.c: 703: for(j=0;j<4;j++)
	movlb	0	; () banked
	clrf	((AllKolToFirstPoz@j))&0ffh
	line	705
	
l12086:; BSR set to: 0

;wsw.c: 704: {
;wsw.c: 705: KInd[j].indeks=0;
	movf	((AllKolToFirstPoz@j))&0ffh,w
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2)&0ffh
	line	706
	
l12088:; BSR set to: 0

;wsw.c: 706: KTim[j].ncS=0;
	movf	((AllKolToFirstPoz@j))&0ffh,w
	mullw	03h
	movlb	1	; () banked
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	707
	
l12090:; BSR set to: 1

;wsw.c: 707: KTim[j].ndS=0;
	movlb	0	; () banked
	movf	((AllKolToFirstPoz@j))&0ffh,w
	mullw	03h
	movlb	1	; () banked
	movlw	low(_KTim+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	703
	
l12092:; BSR set to: 1

	movlb	0	; () banked
	incf	((AllKolToFirstPoz@j))&0ffh
	
l12094:; BSR set to: 0

	movlw	(04h-1)
	cpfsgt	((AllKolToFirstPoz@j))&0ffh
	goto	u15241
	goto	u15240
u15241:
	goto	l12086
u15240:
	line	709
	
l213:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_AllKolToFirstPoz
	__end_of_AllKolToFirstPoz:
	signat	_AllKolToFirstPoz,88
	global	_WswOn

;; *************** function _WswOn *****************
;; Defined at:
;;		line 627 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_EndClsScr
;; This function uses a non-reentrant model
;;
psect	text110,class=CODE,space=0,reloc=2
global __ptext110
__ptext110:
psect	text110
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	627
	global	__size_of_WswOn
	__size_of_WswOn	equ	__end_of_WswOn-_WswOn
	
_WswOn:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	628
	
l12056:; BSR set to: 0

;wsw.c: 628: LedData.setOff=0;
	bcf	((_LedData))&0ffh,0
	line	629
	
l160:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_WswOn
	__end_of_WswOn:
	signat	_WswOn,88
	global	_ClsScr

;; *************** function _ClsScr *****************
;; Defined at:
;;		line 30 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_WswOff
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text111,class=CODE,space=0,reloc=2
global __ptext111
__ptext111:
psect	text111
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	30
	global	__size_of_ClsScr
	__size_of_ClsScr	equ	__end_of_ClsScr-_ClsScr
	
_ClsScr:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	31
	
l12618:; BSR set to: 0

;print.c: 31: WswOff();
	call	_WswOff	;wreg free
	line	32
	
l1358:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ClsScr
	__end_of_ClsScr:
	signat	_ClsScr,88
	global	_WswOff

;; *************** function _WswOff *****************
;; Defined at:
;;		line 622 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ClsScr
;; This function uses a non-reentrant model
;;
psect	text112,class=CODE,space=0,reloc=2
global __ptext112
__ptext112:
psect	text112
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	622
	global	__size_of_WswOff
	__size_of_WswOff	equ	__end_of_WswOff-_WswOff
	
_WswOff:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	623
	
l12054:; BSR set to: 0

;wsw.c: 623: LedData.setOff=1;
	bsf	((_LedData))&0ffh,0
	line	624
	
l157:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_WswOff
	__end_of_WswOff:
	signat	_WswOff,88
	global	_EndTestScr

;; *************** function _EndTestScr *****************
;; Defined at:
;;		line 171 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;;		_SetData
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text113,class=CODE,space=0,reloc=2
global __ptext113
__ptext113:
psect	text113
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	171
	global	__size_of_EndTestScr
	__size_of_EndTestScr	equ	__end_of_EndTestScr-_EndTestScr
	
_EndTestScr:; BSR set to: 0

;incstack = 0
	opt	stack 25
;incstack = 0
	line	172
	
l12616:; BSR set to: 1

;print.c: 172: SetStatus(&PWD[5],0b0100000000000000,0b1111111111111111);
	movlw	high(_PWD+014h)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_PWD+014h)
	movwf	((?_SetStatus))&0ffh
	movlw	high(04000h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(04000h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	line	173
;print.c: 173: SetData(&PWD[5],0,0);
	movlb	1	; () banked
	movlw	high(_PWD+014h)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_PWD+014h)
	movwf	((?_SetData))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetData+02h))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetData+03h))&0ffh
	call	_SetData	;wreg free
	line	177
	
l1417:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_EndTestScr
	__end_of_EndTestScr:
	signat	_EndTestScr,88
	global	_PwrOnDelay

;; *************** function _PwrOnDelay *****************
;; Defined at:
;;		line 8 in file "C:\praca\PICC\backup\GRZ01V5\pwron.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;;		_RTdS
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text114,class=CODE,space=0,reloc=2
global __ptext114
__ptext114:
psect	text114
	file	"C:\praca\PICC\backup\GRZ01V5\pwron.c"
	line	8
	global	__size_of_PwrOnDelay
	__size_of_PwrOnDelay	equ	__end_of_PwrOnDelay-_PwrOnDelay
	
_PwrOnDelay:; BSR set to: 1

;incstack = 0
	opt	stack 25
;incstack = 0
	line	9
	
l12612:
;pwron.c: 9: StartRTdS(0);
	movlw	(0)&0ffh
	
	call	_StartRTdS
	line	10
;pwron.c: 10: while(RTdS(0)<15)
	goto	l12614
	
l1491:; BSR set to: 1

	line	12
# 12 "C:\praca\PICC\backup\GRZ01V5\pwron.c"
clrwdt ;# 
psect	text114
	line	10
	
l12614:
	movlw	(0)&0ffh
	
	call	_RTdS
	movwf	(??_PwrOnDelay+0+0)&0ffh
	movlw	(0Fh)&0ffh
	subwf	((??_PwrOnDelay+0+0))&0ffh,w
	btfss	status,0
	goto	u16071
	goto	u16070
u16071:
	goto	l1491
u16070:
	line	15
	
l1493:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PwrOnDelay
	__end_of_PwrOnDelay:
	signat	_PwrOnDelay,88
	global	_RTdS

;; *************** function _RTdS *****************
;; Defined at:
;;		line 61 in file "C:\praca\PICC\backup\GRZ01V5\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ExPresKey
;;		_ExPresKey2
;;		_ExPresKey2B
;;		_ReloadPlomien
;;		_WritePCW
;;		_PomiarPCW
;;		_PwrOnDelay
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text115,class=CODE,space=0,reloc=2
global __ptext115
__ptext115:
psect	text115
	file	"C:\praca\PICC\backup\GRZ01V5\rtimer.c"
	line	61
	global	__size_of_RTdS
	__size_of_RTdS	equ	__end_of_RTdS-_RTdS
	
_RTdS:; BSR set to: 1

;incstack = 0
	opt	stack 25
;incstack = 0
;RTdS@Index stored from wreg
	movff	wreg,(RTdS@Index)
	line	62
	
l12296:
;rtimer.c: 62: if (Index>8-1) asm("RESET");
	movlw	(08h-1)
	movlb	0	; () banked
	cpfsgt	((RTdS@Index))&0ffh
	goto	u15551
	goto	u15550
u15551:
	goto	l12300
u15550:
	
l12298:; BSR set to: 0

# 62 "C:\praca\PICC\backup\GRZ01V5\rtimer.c"
RESET ;# 
psect	text115
	line	63
	
l12300:
;rtimer.c: 63: return dSk[Index].dS;
	movlb	0	; () banked
	movf	((RTdS@Index))&0ffh,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_dSk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	line	64
	
l2349:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RTdS
	__end_of_RTdS:
	signat	_RTdS,4217
	global	_StartRTdS

;; *************** function _StartRTdS *****************
;; Defined at:
;;		line 55 in file "C:\praca\PICC\backup\GRZ01V5\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ExPresKey
;;		_ExPresKey2
;;		_ExPresKey2B
;;		_RuszPlomien
;;		_WritePCW
;;		_PomiarPCW
;;		_PwrOnDelay
;;		_Moduluj
;;		_StartMCW4
;; This function uses a non-reentrant model
;;
psect	text116,class=CODE,space=0,reloc=2
global __ptext116
__ptext116:
psect	text116
	file	"C:\praca\PICC\backup\GRZ01V5\rtimer.c"
	line	55
	global	__size_of_StartRTdS
	__size_of_StartRTdS	equ	__end_of_StartRTdS-_StartRTdS
	
_StartRTdS:; BSR set to: 1

;incstack = 0
	opt	stack 24
;incstack = 0
;StartRTdS@Index stored from wreg
	movff	wreg,(StartRTdS@Index)
	line	56
	
l12290:
;rtimer.c: 56: if (Index>8-1) asm("RESET");
	movlw	(08h-1)
	movlb	0	; () banked
	cpfsgt	((StartRTdS@Index))&0ffh
	goto	u15541
	goto	u15540
u15541:
	goto	l12294
u15540:
	
l12292:; BSR set to: 0

# 56 "C:\praca\PICC\backup\GRZ01V5\rtimer.c"
RESET ;# 
psect	text116
	line	57
	
l12294:
;rtimer.c: 57: dSk[Index].cS=0;
	movlb	0	; () banked
	movf	((StartRTdS@Index))&0ffh,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_dSk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	58
;rtimer.c: 58: dSk[Index].dS=0;
	movlb	0	; () banked
	movf	((StartRTdS@Index))&0ffh,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_dSk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	59
	
l2345:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_StartRTdS
	__end_of_StartRTdS:
	signat	_StartRTdS,4216
	global	_TestScr

;; *************** function _TestScr *****************
;; Defined at:
;;		line 163 in file "C:\praca\PICC\backup\GRZ01V5\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;;		_SetData
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text117,class=CODE,space=0,reloc=2
global __ptext117
__ptext117:
psect	text117
	file	"C:\praca\PICC\backup\GRZ01V5\print.c"
	line	163
	global	__size_of_TestScr
	__size_of_TestScr	equ	__end_of_TestScr-_TestScr
	
_TestScr:; BSR set to: 1

;incstack = 0
	opt	stack 25
;incstack = 0
	line	164
	
l12610:; BSR set to: 0

;print.c: 164: SetStatus(&PWD[5],0b0000000000000000|0b0000010000000000|0b0000100000000000,0b1111111111111111);
	movlb	1	; () banked
	movlw	high(_PWD+014h)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_PWD+014h)
	movwf	((?_SetStatus))&0ffh
	movlw	high(0C00h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(0C00h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	line	165
;print.c: 165: SetData(&PWD[5],0b00000000,0b00000000);
	movlb	1	; () banked
	movlw	high(_PWD+014h)
	movwf	((?_SetData+1))&0ffh
	movlw	low(_PWD+014h)
	movwf	((?_SetData))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetData+02h))&0ffh
	movlw	low(0)
	movwf	(0+(?_SetData+03h))&0ffh
	call	_SetData	;wreg free
	line	169
	
l1414:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_TestScr
	__end_of_TestScr:
	signat	_TestScr,88
	global	_SetData

;; *************** function _SetData *****************
;; Defined at:
;;		line 635 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;  wData           2    0[BANK1 ] PTR struct .
;;		 -> DWD(28), PWD(24), 
;;  wdt1            1    2[BANK1 ] const unsigned char 
;;  wdt0            1    3[BANK1 ] const unsigned char 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PrintErr
;;		_PrintPR
;;		_PrintWPR
;;		_RNst
;;		_PrintNstCW
;;		_PrintOFF
;;		_PrintCW
;;		_TestScr
;;		_EndTestScr
;; This function uses a non-reentrant model
;;
psect	text118,class=CODE,space=0,reloc=2
global __ptext118
__ptext118:
psect	text118
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	635
	global	__size_of_SetData
	__size_of_SetData	equ	__end_of_SetData-_SetData
	
_SetData:; BSR set to: 1

;incstack = 0
	opt	stack 23
;incstack = 0
	line	636
	
l12058:; BSR set to: 1

;wsw.c: 636: (*wData).Dt.Data1=wdt1;
	lfsr	2,02h
	movf	((SetData@wData))&0ffh,w
	addwf	fsr2l
	movf	((SetData@wData+1))&0ffh,w
	addwfc	fsr2h
	movff	(SetData@wdt1),indf2

	line	637
;wsw.c: 637: (*wData).Dt.Data0=wdt0;
	lfsr	2,03h
	movf	((SetData@wData))&0ffh,w
	addwf	fsr2l
	movf	((SetData@wData+1))&0ffh,w
	addwfc	fsr2h
	movff	(SetData@wdt0),indf2

	line	638
	
l163:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_SetData
	__end_of_SetData:
	signat	_SetData,12408
	global	_ClearData

;; *************** function _ClearData *****************
;; Defined at:
;;		line 164 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text119,class=CODE,space=0,reloc=2
global __ptext119
__ptext119:
psect	text119
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	164
	global	__size_of_ClearData
	__size_of_ClearData	equ	__end_of_ClearData-_ClearData
	
_ClearData:; BSR set to: 1

;incstack = 0
	opt	stack 26
;incstack = 0
	line	165
	
l12608:; BSR set to: 0

;main.c: 165: DtKNF.enknf=0;
	bcf	((_DtKNF))&0ffh,0
	line	166
;main.c: 166: M._pob_KCW=0;
	clrf	(0+(_M+02h))&0ffh
	clrf	(1+(_M+02h))&0ffh
	line	167
;main.c: 167: M._pob_SRW=0;
	clrf	(0+(_M+06h))&0ffh
	clrf	(1+(_M+06h))&0ffh
	line	168
;main.c: 168: M._pob_CW=0;
	clrf	(0+(_M+08h))&0ffh
	clrf	(1+(_M+08h))&0ffh
	line	170
;main.c: 170: M._WYLACZ=0;
	bcf	(0+(_M+010h))&0ffh,0
	line	171
;main.c: 171: M._ROZRUCH=0;
	bcf	(0+(_M+010h))&0ffh,2
	line	172
;main.c: 172: M._VWYBIEG=0;
	bcf	(0+(_M+010h))&0ffh,5
	line	173
;main.c: 173: M._MODULUJ=0;
	bcf	(0+(_M+011h))&0ffh,4
	line	174
;main.c: 174: M._RUSZ_CIAG=0;
	bcf	(0+(_M+010h))&0ffh,6
	line	175
;main.c: 175: M._RUSZ_PLOMIEN=0;
	bcf	(0+(_M+010h))&0ffh,7
	line	176
;main.c: 176: M._RUSZ_RPLM=0;
	bcf	(0+(_M+011h))&0ffh,0
	line	177
;main.c: 177: M._MODULUJ=0;
	bcf	(0+(_M+011h))&0ffh,4
	line	179
;main.c: 179: M._AKTYWNE_KNF=0;
	clrf	(0+(_M+016h))&0ffh
	clrf	(1+(_M+016h))&0ffh
	line	180
;main.c: 180: M._AKTYWNE_SRW=0;
	clrf	(0+(_M+012h))&0ffh
	clrf	(1+(_M+012h))&0ffh
	line	181
;main.c: 181: M._RUSZ_NTC_CW=0;
	bcf	(0+(_M+018h))&0ffh,1
	line	182
;main.c: 182: M._RUSZ_STB=0;
	bcf	(0+(_M+018h))&0ffh,2
	line	183
;main.c: 183: M._RUSZ_MOD=0;
	bcf	(0+(_M+018h))&0ffh,3
	line	185
;main.c: 185: M._PW_START=0;
	bcf	(0+(_M+018h))&0ffh,7
	line	186
;main.c: 186: M._RS_START=0;
	bcf	(0+(_M+018h))&0ffh,6
	line	187
;main.c: 187: M._TURBO=0;
	bcf	(0+(_M+019h))&0ffh,0
	line	188
;main.c: 188: M._PRACA=0;
	bcf	(0+(_M+019h))&0ffh,1
	line	189
;main.c: 189: M._OST_PL=0;
	bcf	(0+(_M+019h))&0ffh,2
	line	190
;main.c: 190: M._RUN_MNMOD=0;
	bcf	(0+(_M+019h))&0ffh,3
	line	191
;main.c: 191: M._DE_VNT=0;
	bcf	(0+(_M+019h))&0ffh,5
	line	193
;main.c: 193: M.ERR_BTY=0;
	clrf	(0+(_M+01Ch))&0ffh
	line	194
;main.c: 194: M.ROZ=0;
	clrf	(0+(_M+01Dh))&0ffh
	line	195
;main.c: 195: M.WYL=0;
	clrf	(0+(_M+021h))&0ffh
	line	196
;main.c: 196: M.RPL=0;
	clrf	(0+(_M+023h))&0ffh
	line	197
;main.c: 197: M.RCI=0;
	clrf	(0+(_M+024h))&0ffh
	line	198
;main.c: 198: M.MNM=0;
	clrf	(0+(_M+025h))&0ffh
	line	199
;main.c: 199: M.VWB=0;
	clrf	(0+(_M+027h))&0ffh
	line	200
;main.c: 200: M.KRS=0;
	clrf	(0+(_M+029h))&0ffh
	line	201
;main.c: 201: M.LICZNIK_PL=0;
	clrf	(0+(_M+01Ah))&0ffh
	line	202
;main.c: 202: M.LICZNIK_CIG=0;
	clrf	(0+(_M+01Bh))&0ffh
	line	204
;main.c: 204: RB0=0;
	bcf	c:(31752/8),(31752)&7	;volatile
	line	205
;main.c: 205: RB1=0;
	bcf	c:(31753/8),(31753)&7	;volatile
	line	206
	
l738:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ClearData
	__end_of_ClearData:
	signat	_ClearData,88
	global	_InitDataPmr

;; *************** function _InitDataPmr *****************
;; Defined at:
;;		line 36 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text120,class=CODE,space=0,reloc=2
global __ptext120
__ptext120:
psect	text120
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	36
	global	__size_of_InitDataPmr
	__size_of_InitDataPmr	equ	__end_of_InitDataPmr-_InitDataPmr
	
_InitDataPmr:; BSR set to: 0

;incstack = 0
	opt	stack 26
;incstack = 0
	line	37
	
l12606:; BSR set to: 0

;pomiar.c: 37: DtCW._err_CW=0;
	bcf	((c:_DtCW)),c,0
	line	38
;pomiar.c: 38: DtCW._su_CW=0;
	bcf	((c:_DtCW)),c,1
	line	39
;pomiar.c: 39: DtCW._ad_CW=0;
	bcf	((c:_DtCW)),c,2
	line	40
;pomiar.c: 40: DtCW.indCW=0;
	clrf	(0+((c:_DtCW)+0Ah)),c
	line	41
	
l1116:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_InitDataPmr
	__end_of_InitDataPmr:
	signat	_InitDataPmr,88
	global	_InitPWM

;; *************** function _InitPWM *****************
;; Defined at:
;;		line 12 in file "C:\praca\PICC\backup\GRZ01V5\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text121,class=CODE,space=0,reloc=2
global __ptext121
__ptext121:
psect	text121
	file	"C:\praca\PICC\backup\GRZ01V5\pwm.c"
	line	12
	global	__size_of_InitPWM
	__size_of_InitPWM	equ	__end_of_InitPWM-_InitPWM
	
_InitPWM:; BSR set to: 0

;incstack = 0
	opt	stack 26
;incstack = 0
	line	13
	
l12590:
;pwm.c: 13: CCP1CON=0;
	clrf	((c:4029)),c	;volatile
	line	14
;pwm.c: 14: CCPR1L=0;
	clrf	((c:4030)),c	;volatile
	line	15
;pwm.c: 15: CCPR1H=0;
	clrf	((c:4031)),c	;volatile
	line	16
;pwm.c: 16: TMR2=0;
	clrf	((c:4044)),c	;volatile
	line	17
	
l12592:
;pwm.c: 17: T2CON=0b00000010;
	movlw	low(02h)
	movwf	((c:4042)),c	;volatile
	line	18
;pwm.c: 18: PR2=0x7C;
	movlw	low(07Ch)
	movwf	((c:4043)),c	;volatile
	line	19
	
l12594:
;pwm.c: 19: TMR2IE=1;
	bsf	c:(31977/8),(31977)&7	;volatile
	line	20
;pwm.c: 20: CCP1CON=0b00001100;
	movlw	low(0Ch)
	movwf	((c:4029)),c	;volatile
	line	21
	
l12596:
;pwm.c: 21: TMR2ON=1;
	bsf	c:(32338/8),(32338)&7	;volatile
	line	23
	
l12598:
;pwm.c: 23: PWM.BufPWM=0;
	clrf	(0+((c:_PWM)+01h)),c	;volatile
	line	24
	
l12600:
;pwm.c: 24: PWM.NewPWM=0;
	clrf	(0+((c:_PWM)+04h)),c	;volatile
	line	25
	
l12602:
;pwm.c: 25: PWM.BufOSC=0;
	clrf	(0+((c:_PWM)+02h)),c	;volatile
	line	26
	
l12604:
;pwm.c: 26: PWM.NewOSC=0;
	clrf	(0+((c:_PWM)+03h)),c	;volatile
	line	27
	
l1442:
	return
	opt stack 0
GLOBAL	__end_of_InitPWM
	__end_of_InitPWM:
	signat	_InitPWM,88
	global	_InitPort

;; *************** function _InitPort *****************
;; Defined at:
;;		line 119 in file "C:\praca\PICC\backup\GRZ01V5\port.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RefStan
;;		_FrsStan
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text122,class=CODE,space=0,reloc=2
global __ptext122
__ptext122:
psect	text122
	file	"C:\praca\PICC\backup\GRZ01V5\port.c"
	line	119
	global	__size_of_InitPort
	__size_of_InitPort	equ	__end_of_InitPort-_InitPort
	
_InitPort:
;incstack = 0
	opt	stack 25
;incstack = 0
	line	132
	
l12574:
;port.c: 132: PORTA=0b00000000;
	clrf	((c:3968)),c	;volatile
	line	133
;port.c: 133: TRISA=0b11111111;
	setf	((c:3986)),c	;volatile
	line	134
;port.c: 134: PORTB=0b00000000;
	clrf	((c:3969)),c	;volatile
	line	135
	
l12576:
;port.c: 135: TRISB=0b11110000;
	movlw	low(0F0h)
	movwf	((c:3987)),c	;volatile
	line	136
	
l12578:
;port.c: 136: PORTC=0b00000000;
	clrf	((c:3970)),c	;volatile
	line	137
;port.c: 137: TRISC=0b10011011;
	movlw	low(09Bh)
	movwf	((c:3988)),c	;volatile
	line	138
	
l12580:
;port.c: 138: PORTD=0b00000000;
	clrf	((c:3971)),c	;volatile
	line	139
	
l12582:
;port.c: 139: TRISD=0b00000000;
	clrf	((c:3989)),c	;volatile
	line	140
	
l12584:
;port.c: 140: PORTE=0b00000000;
	clrf	((c:3972)),c	;volatile
	line	141
	
l12586:
;port.c: 141: TRISE=(TRISE&0b11111000)|(0b11111111&0b00000111);
	movf	((c:3990)),c,w	;volatile
	andlw	low(0F8h)
	iorlw	low(07h)
	movwf	((c:3990)),c	;volatile
	line	144
	
l12588:
;port.c: 144: RefStan();
	call	_RefStan	;wreg free
	line	145
;port.c: 145: FrsStan();
	call	_FrsStan	;wreg free
	line	147
	
l1302:
	return
	opt stack 0
GLOBAL	__end_of_InitPort
	__end_of_InitPort:
	signat	_InitPort,88
	global	_FrsStan

;; *************** function _FrsStan *****************
;; Defined at:
;;		line 72 in file "C:\praca\PICC\backup\GRZ01V5\port.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_InitPort
;; This function uses a non-reentrant model
;;
psect	text123,class=CODE,space=0,reloc=2
global __ptext123
__ptext123:
psect	text123
	file	"C:\praca\PICC\backup\GRZ01V5\port.c"
	line	72
	global	__size_of_FrsStan
	__size_of_FrsStan	equ	__end_of_FrsStan-_FrsStan
	
_FrsStan:
;incstack = 0
	opt	stack 25
;incstack = 0
	line	74
	
l14194:
;port.c: 74: SPort[0].Output=SPort[0].Input;
	btfss	((c:_SPort)),c,0	;volatile
	bra	u19535
	bsf	((c:_SPort)),c,1	;volatile
	bra	u19537
	u19535:	
	bcf	((c:_SPort)),c,1	;volatile
	u19537:
	line	75
	
l14196:
;port.c: 75: SPort[0].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	((c:_SPort)),c	;volatile
	line	78
	
l14198:
;port.c: 78: SPort[1].Output=SPort[1].Input;
	btfss	(0+((c:_SPort)+01h)),c,0	;volatile
	bra	u19545
	bsf	(0+((c:_SPort)+01h)),c,1	;volatile
	bra	u19547
	u19545:	
	bcf	(0+((c:_SPort)+01h)),c,1	;volatile
	u19547:
	line	79
;port.c: 79: SPort[1].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+((c:_SPort)+01h)),c	;volatile
	line	82
	
l14200:
;port.c: 82: SPort[2].Output=SPort[2].Input;
	btfss	(0+((c:_SPort)+02h)),c,0	;volatile
	bra	u19555
	bsf	(0+((c:_SPort)+02h)),c,1	;volatile
	bra	u19557
	u19555:	
	bcf	(0+((c:_SPort)+02h)),c,1	;volatile
	u19557:
	line	83
;port.c: 83: SPort[2].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+((c:_SPort)+02h)),c	;volatile
	line	86
	
l14202:
;port.c: 86: SPort[3].Output=SPort[3].Input;
	btfss	(0+((c:_SPort)+03h)),c,0	;volatile
	bra	u19565
	bsf	(0+((c:_SPort)+03h)),c,1	;volatile
	bra	u19567
	u19565:	
	bcf	(0+((c:_SPort)+03h)),c,1	;volatile
	u19567:
	line	87
;port.c: 87: SPort[3].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+((c:_SPort)+03h)),c	;volatile
	line	90
	
l14204:
;port.c: 90: SPort[4].Output=SPort[4].Input;
	btfss	(0+((c:_SPort)+04h)),c,0	;volatile
	bra	u19575
	bsf	(0+((c:_SPort)+04h)),c,1	;volatile
	bra	u19577
	u19575:	
	bcf	(0+((c:_SPort)+04h)),c,1	;volatile
	u19577:
	line	91
;port.c: 91: SPort[4].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+((c:_SPort)+04h)),c	;volatile
	line	94
	
l14206:
;port.c: 94: SPort[5].Output=SPort[5].Input;
	btfss	(0+((c:_SPort)+05h)),c,0	;volatile
	bra	u19585
	bsf	(0+((c:_SPort)+05h)),c,1	;volatile
	bra	u19587
	u19585:	
	bcf	(0+((c:_SPort)+05h)),c,1	;volatile
	u19587:
	line	95
;port.c: 95: SPort[5].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+((c:_SPort)+05h)),c	;volatile
	line	98
	
l14208:
;port.c: 98: SPort[6].Output=SPort[6].Input;
	btfss	(0+((c:_SPort)+06h)),c,0	;volatile
	bra	u19595
	bsf	(0+((c:_SPort)+06h)),c,1	;volatile
	bra	u19597
	u19595:	
	bcf	(0+((c:_SPort)+06h)),c,1	;volatile
	u19597:
	line	99
;port.c: 99: SPort[6].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+((c:_SPort)+06h)),c	;volatile
	line	102
	
l14210:
;port.c: 102: SPort[7].Output=SPort[7].Input;
	btfss	(0+((c:_SPort)+07h)),c,0	;volatile
	bra	u19605
	bsf	(0+((c:_SPort)+07h)),c,1	;volatile
	bra	u19607
	u19605:	
	bcf	(0+((c:_SPort)+07h)),c,1	;volatile
	u19607:
	line	103
;port.c: 103: SPort[7].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+((c:_SPort)+07h)),c	;volatile
	line	106
	
l14212:
;port.c: 106: SPort[8].Output=SPort[8].Input;
	btfss	(0+((c:_SPort)+08h)),c,0	;volatile
	bra	u19615
	bsf	(0+((c:_SPort)+08h)),c,1	;volatile
	bra	u19617
	u19615:	
	bcf	(0+((c:_SPort)+08h)),c,1	;volatile
	u19617:
	line	107
;port.c: 107: SPort[8].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+((c:_SPort)+08h)),c	;volatile
	line	110
	
l14214:
;port.c: 110: SPort[9].Output=SPort[9].Input;
	btfss	(0+((c:_SPort)+09h)),c,0	;volatile
	bra	u19625
	bsf	(0+((c:_SPort)+09h)),c,1	;volatile
	bra	u19627
	u19625:	
	bcf	(0+((c:_SPort)+09h)),c,1	;volatile
	u19627:
	line	111
;port.c: 111: SPort[9].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+((c:_SPort)+09h)),c	;volatile
	line	113
	
l1299:
	return
	opt stack 0
GLOBAL	__end_of_FrsStan
	__end_of_FrsStan:
	signat	_FrsStan,88
	global	_RefStan

;; *************** function _RefStan *****************
;; Defined at:
;;		line 45 in file "C:\praca\PICC\backup\GRZ01V5\port.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_InitPort
;; This function uses a non-reentrant model
;;
psect	text124,class=CODE,space=0,reloc=2
global __ptext124
__ptext124:
psect	text124
	file	"C:\praca\PICC\backup\GRZ01V5\port.c"
	line	45
	global	__size_of_RefStan
	__size_of_RefStan	equ	__end_of_RefStan-_RefStan
	
_RefStan:
;incstack = 0
	opt	stack 25
;incstack = 0
	line	47
	
l14160:
;port.c: 47: SPort[0].Input=(RE0)?0:1;
	btfss	c:(31776/8),(31776)&7	;volatile
	goto	u19391
	goto	u19390
u19391:
	movlw	1
	goto	u19396
u19390:
	movlw	0
u19396:
	movlb	0	; () banked
	movwf	(??_RefStan+0+0)&0ffh
	movf	((c:_SPort)),c,w	;volatile
	xorwf	((??_RefStan+0+0))&0ffh,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0))&0ffh,w
	movwf	((c:_SPort)),c	;volatile
	line	49
;port.c: 49: SPort[1].Input=(RA5)?0:1;
	btfss	c:(31749/8),(31749)&7	;volatile
	goto	u19401
	goto	u19400
u19401:
	movlw	1
	goto	u19406
u19400:
	movlw	0
u19406:
	movwf	(??_RefStan+0+0)&0ffh
	movf	(0+((c:_SPort)+01h)),c,w	;volatile
	xorwf	((??_RefStan+0+0))&0ffh,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0))&0ffh,w
	movwf	(0+((c:_SPort)+01h)),c	;volatile
	line	51
	
l14162:; BSR set to: 0

;port.c: 51: SPort[2].Input=RC0&&RA7;
	movlb	1	; () banked
	clrf	((_RefStan$1698))&0ffh
	
l14164:; BSR set to: 1

	btfss	c:(31760/8),(31760)&7	;volatile
	goto	u19411
	goto	u19410
u19411:
	goto	l14170
u19410:
	
l14166:; BSR set to: 1

	btfss	c:(31751/8),(31751)&7	;volatile
	goto	u19421
	goto	u19420
u19421:
	goto	l14170
u19420:
	
l14168:; BSR set to: 1

	movlw	low(01h)
	movwf	((_RefStan$1698))&0ffh
	
l14170:; BSR set to: 1

	btfsc	(_RefStan$1698)&0ffh,0
	bra	u19435
	bcf	(0+((c:_SPort)+02h)),c,0	;volatile
	bra	u19436
	u19435:
	bsf	(0+((c:_SPort)+02h)),c,0	;volatile
	u19436:

	line	53
	
l14172:
;port.c: 53: SPort[3].Input=RA6&&RA7;
	movlb	1	; () banked
	clrf	((_RefStan$1699))&0ffh
	
l14174:; BSR set to: 1

	btfss	c:(31750/8),(31750)&7	;volatile
	goto	u19441
	goto	u19440
u19441:
	goto	l14180
u19440:
	
l14176:; BSR set to: 1

	btfss	c:(31751/8),(31751)&7	;volatile
	goto	u19451
	goto	u19450
u19451:
	goto	l14180
u19450:
	
l14178:; BSR set to: 1

	movlw	low(01h)
	movwf	((_RefStan$1699))&0ffh
	
l14180:; BSR set to: 1

	btfsc	(_RefStan$1699)&0ffh,0
	bra	u19465
	bcf	(0+((c:_SPort)+03h)),c,0	;volatile
	bra	u19466
	u19465:
	bsf	(0+((c:_SPort)+03h)),c,0	;volatile
	u19466:

	line	55
	
l14182:
;port.c: 55: SPort[4].Input=RA7;
	btfss	c:(31751/8),(31751)&7	;volatile
	bra	u19475
	bsf	(0+((c:_SPort)+04h)),c,0	;volatile
	bra	u19477
	u19475:	
	bcf	(0+((c:_SPort)+04h)),c,0	;volatile
	u19477:
	line	57
	
l14184:
;port.c: 57: SPort[5].Input=!RB4;
	btfss	c:(31756/8),(31756)&7	;volatile
	goto	u19481
	goto	u19480
u19481:
	movlw	1
	goto	u19486
u19480:
	movlw	0
u19486:
	movlb	0	; () banked
	movwf	(??_RefStan+0+0)&0ffh
	movf	(0+((c:_SPort)+05h)),c,w	;volatile
	xorwf	((??_RefStan+0+0))&0ffh,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0))&0ffh,w
	movwf	(0+((c:_SPort)+05h)),c	;volatile
	line	59
	
l14186:; BSR set to: 0

;port.c: 59: SPort[6].Input=!RA4;
	btfss	c:(31748/8),(31748)&7	;volatile
	goto	u19491
	goto	u19490
u19491:
	movlw	1
	goto	u19496
u19490:
	movlw	0
u19496:
	movwf	(??_RefStan+0+0)&0ffh
	movf	(0+((c:_SPort)+06h)),c,w	;volatile
	xorwf	((??_RefStan+0+0))&0ffh,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0))&0ffh,w
	movwf	(0+((c:_SPort)+06h)),c	;volatile
	line	61
	
l14188:; BSR set to: 0

;port.c: 61: SPort[7].Input=(DtCW._err_CW)?1:0;
	
	btfsc	((c:_DtCW)),c,0
	goto	u19501
	goto	u19500
u19501:
	movlw	1
	goto	u19506
u19500:
	movlw	0
u19506:
	movwf	(??_RefStan+0+0)&0ffh
	movf	(0+((c:_SPort)+07h)),c,w	;volatile
	xorwf	((??_RefStan+0+0))&0ffh,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0))&0ffh,w
	movwf	(0+((c:_SPort)+07h)),c	;volatile
	line	63
	
l14190:; BSR set to: 0

;port.c: 63: SPort[8].Input=!RC1;
	btfss	c:(31761/8),(31761)&7	;volatile
	goto	u19511
	goto	u19510
u19511:
	movlw	1
	goto	u19516
u19510:
	movlw	0
u19516:
	movwf	(??_RefStan+0+0)&0ffh
	movf	(0+((c:_SPort)+08h)),c,w	;volatile
	xorwf	((??_RefStan+0+0))&0ffh,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0))&0ffh,w
	movwf	(0+((c:_SPort)+08h)),c	;volatile
	line	65
	
l14192:; BSR set to: 0

;port.c: 65: SPort[9].Input=RA6;
	btfss	c:(31750/8),(31750)&7	;volatile
	bra	u19525
	bsf	(0+((c:_SPort)+09h)),c,0	;volatile
	bra	u19527
	u19525:	
	bcf	(0+((c:_SPort)+09h)),c,0	;volatile
	u19527:
	line	67
	
l1296:
	return
	opt stack 0
GLOBAL	__end_of_RefStan
	__end_of_RefStan:
	signat	_RefStan,88
	global	_InitTimer1

;; *************** function _InitTimer1 *****************
;; Defined at:
;;		line 17 in file "C:\praca\PICC\backup\GRZ01V5\timer1.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFFF/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text125,class=CODE,space=0,reloc=2
global __ptext125
__ptext125:
psect	text125
	file	"C:\praca\PICC\backup\GRZ01V5\timer1.c"
	line	17
	global	__size_of_InitTimer1
	__size_of_InitTimer1	equ	__end_of_InitTimer1-_InitTimer1
	
_InitTimer1:
;incstack = 0
	opt	stack 26
;incstack = 0
	line	20
	
l12556:
;timer1.c: 20: TMR1H=(unsigned char)(RldT1>>8);
	movlw	low(063h)
	movwf	((c:4047)),c	;volatile
	line	21
;timer1.c: 21: TMR1L=(unsigned char)(RldT1&0xFF);
	movlw	low(0BFh)
	movwf	((c:4046)),c	;volatile
	line	24
	
l12558:
;timer1.c: 24: TMR1IF=0;
	bcf	c:(31984/8),(31984)&7	;volatile
	line	25
	
l12560:
;timer1.c: 25: TMR1IE=1;
	bsf	c:(31976/8),(31976)&7	;volatile
	line	26
	
l12562:
;timer1.c: 26: TMR1IP=1;
	bsf	c:(31992/8),(31992)&7	;volatile
	line	29
	
l12564:
;timer1.c: 29: T1RD16=1;
	bsf	c:(32367/8),(32367)&7	;volatile
	line	37
	
l12566:
;timer1.c: 37: T1CKPS1=0;
	bcf	c:(32365/8),(32365)&7	;volatile
	line	38
	
l12568:
;timer1.c: 38: T1CKPS0=1;
	bsf	c:(32364/8),(32364)&7	;volatile
	line	48
	
l12570:
;timer1.c: 48: TMR1CS=0;
	bcf	c:(32361/8),(32361)&7	;volatile
	line	49
	
l12572:
;timer1.c: 49: TMR1ON=1;
	bsf	c:(32360/8),(32360)&7	;volatile
	line	51
	
l2424:
	return
	opt stack 0
GLOBAL	__end_of_InitTimer1
	__end_of_InitTimer1:
	signat	_InitTimer1,88
	global	_InitGlobal

;; *************** function _InitGlobal *****************
;; Defined at:
;;		line 1256 in file "C:\praca\PICC\backup\GRZ01V5\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFFF/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text126,class=CODE,space=0,reloc=2
global __ptext126
__ptext126:
psect	text126
	file	"C:\praca\PICC\backup\GRZ01V5\main.c"
	line	1256
	global	__size_of_InitGlobal
	__size_of_InitGlobal	equ	__end_of_InitGlobal-_InitGlobal
	
_InitGlobal:
;incstack = 0
	opt	stack 26
;incstack = 0
	line	1258
	
l12554:
;main.c: 1258: IPEN=1;
	bsf	c:(32391/8),(32391)&7	;volatile
	line	1260
;main.c: 1260: GIEH=1;
	bsf	c:(32663/8),(32663)&7	;volatile
	line	1261
;main.c: 1261: GIEL=1;
	bsf	c:(32662/8),(32662)&7	;volatile
	line	1262
	
l1058:
	return
	opt stack 0
GLOBAL	__end_of_InitGlobal
	__end_of_InitGlobal:
	signat	_InitGlobal,88
	global	_InitOsc

;; *************** function _InitOsc *****************
;; Defined at:
;;		line 27 in file "C:\praca\PICC\backup\GRZ01V5\osc.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFFF/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text127,class=CODE,space=0,reloc=2
global __ptext127
__ptext127:
psect	text127
	file	"C:\praca\PICC\backup\GRZ01V5\osc.c"
	line	27
	global	__size_of_InitOsc
	__size_of_InitOsc	equ	__end_of_InitOsc-_InitOsc
	
_InitOsc:
;incstack = 0
	opt	stack 26
;incstack = 0
	line	28
	
l12552:
;osc.c: 28: IRCF0=1;
	bsf	c:(32412/8),(32412)&7	;volatile
	line	29
;osc.c: 29: IRCF1=1;
	bsf	c:(32413/8),(32413)&7	;volatile
	line	30
;osc.c: 30: IRCF2=1;
	bsf	c:(32414/8),(32414)&7	;volatile
	line	32
;osc.c: 32: PLLEN=1;
	bsf	c:(31966/8),(31966)&7	;volatile
	line	36
	
l1069:
	return
	opt stack 0
GLOBAL	__end_of_InitOsc
	__end_of_InitOsc:
	signat	_InitOsc,88
	global	_InitI2C

;; *************** function _InitI2C *****************
;; Defined at:
;;		line 33 in file "C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text128,class=CODE,space=0,reloc=2
global __ptext128
__ptext128:
psect	text128
	file	"C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
	line	33
	global	__size_of_InitI2C
	__size_of_InitI2C	equ	__end_of_InitI2C-_InitI2C
	
_InitI2C:
;incstack = 0
	opt	stack 26
;incstack = 0
	line	35
	
l12170:
;i2c_s.c: 35: TRISC3=1;
	bsf	c:(31907/8),(31907)&7	;volatile
	line	36
;i2c_s.c: 36: TRISC4=1;
	bsf	c:(31908/8),(31908)&7	;volatile
	line	39
	
l12172:
;i2c_s.c: 39: SSPADD=0b11001100;
	movlw	low(0CCh)
	movwf	((c:4040)),c	;volatile
	line	42
	
l12174:
;i2c_s.c: 42: SSPM0=0;
	bcf	c:(32304/8),(32304)&7	;volatile
	line	43
	
l12176:
;i2c_s.c: 43: SSPM1=1;
	bsf	c:(32305/8),(32305)&7	;volatile
	line	44
	
l12178:
;i2c_s.c: 44: SSPM2=1;
	bsf	c:(32306/8),(32306)&7	;volatile
	line	45
	
l12180:
;i2c_s.c: 45: SSPM3=0;
	bcf	c:(32307/8),(32307)&7	;volatile
	line	46
	
l12182:
;i2c_s.c: 46: SSPEN=1;
	bsf	c:(32309/8),(32309)&7	;volatile
	line	47
	
l12184:
;i2c_s.c: 47: CKP=1;
	bsf	c:(32308/8),(32308)&7	;volatile
	line	50
	
l12186:
;i2c_s.c: 50: SMP=1;
	bsf	c:(32319/8),(32319)&7	;volatile
	line	51
	
l12188:
;i2c_s.c: 51: CKE=0;
	bcf	c:(32318/8),(32318)&7	;volatile
	line	54
	
l12190:
;i2c_s.c: 54: SSPIE=1;
	bsf	c:(31979/8),(31979)&7	;volatile
	line	59
	
l12192:
;i2c_s.c: 59: SSPIP=1;
	bsf	c:(31995/8),(31995)&7	;volatile
	line	61
	
l12194:
;i2c_s.c: 61: BufI2C.indeks=0;
	movlb	1	; () banked
	clrf	((_BufI2C))&0ffh
	line	62
	
l12196:; BSR set to: 1

;i2c_s.c: 62: DtI2C.error=0;
	movlb	0	; () banked
	clrf	(0+(_DtI2C+01h))&0ffh
	line	63
	
l12198:; BSR set to: 0

;i2c_s.c: 63: DtI2C.krok=0;
	bcf	((_DtI2C))&0ffh,0
	line	64
	
l368:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_InitI2C
	__end_of_InitI2C:
	signat	_InitI2C,88
	global	_InitAC

;; *************** function _InitAC *****************
;; Defined at:
;;		line 49 in file "C:\praca\PICC\backup\GRZ01V5\ac.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFFF/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text129,class=CODE,space=0,reloc=2
global __ptext129
__ptext129:
psect	text129
	file	"C:\praca\PICC\backup\GRZ01V5\ac.c"
	line	49
	global	__size_of_InitAC
	__size_of_InitAC	equ	__end_of_InitAC-_InitAC
	
_InitAC:; BSR set to: 0

;incstack = 0
	opt	stack 26
;incstack = 0
	line	50
	
l12096:
;ac.c: 50: ADIE=0;
	bcf	c:(31982/8),(31982)&7	;volatile
	line	57
;ac.c: 57: ACQT0=0;
	bcf	c:(32259/8),(32259)&7	;volatile
	line	58
;ac.c: 58: ACQT1=0;
	bcf	c:(32260/8),(32260)&7	;volatile
	line	59
;ac.c: 59: ACQT2=0;
	bcf	c:(32261/8),(32261)&7	;volatile
	line	62
;ac.c: 62: ADCS0=0;
	bcf	c:(32256/8),(32256)&7	;volatile
	line	63
;ac.c: 63: ADCS1=1;
	bsf	c:(32257/8),(32257)&7	;volatile
	line	64
;ac.c: 64: ADCS2=0;
	bcf	c:(32258/8),(32258)&7	;volatile
	line	66
;ac.c: 66: VCFG0=0;
	bcf	c:(32268/8),(32268)&7	;volatile
	line	67
;ac.c: 67: VCFG1=0;
	bcf	c:(32269/8),(32269)&7	;volatile
	line	69
;ac.c: 69: PCFG0=0;
	bcf	c:(32264/8),(32264)&7	;volatile
	line	70
;ac.c: 70: PCFG1=1;
	bsf	c:(32265/8),(32265)&7	;volatile
	line	71
;ac.c: 71: PCFG2=1;
	bsf	c:(32266/8),(32266)&7	;volatile
	line	72
;ac.c: 72: PCFG3=1;
	bsf	c:(32267/8),(32267)&7	;volatile
	line	74
;ac.c: 74: ADFM=0;
	bcf	c:(32263/8),(32263)&7	;volatile
	line	75
;ac.c: 75: ADON=1;
	bsf	c:(32272/8),(32272)&7	;volatile
	line	76
;ac.c: 76: CHS0=0;
	bcf	c:(32274/8),(32274)&7	;volatile
	line	77
;ac.c: 77: CHS1=0;
	bcf	c:(32275/8),(32275)&7	;volatile
	line	78
;ac.c: 78: CHS2=0;
	bcf	c:(32276/8),(32276)&7	;volatile
	line	79
;ac.c: 79: CHS3=0;
	bcf	c:(32277/8),(32277)&7	;volatile
	line	80
	
l260:
	return
	opt stack 0
GLOBAL	__end_of_InitAC
	__end_of_InitAC:
	signat	_InitAC,88
	global	_InitWsw

;; *************** function _InitWsw *****************
;; Defined at:
;;		line 50 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  i               1    6[BANK1 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text130,class=CODE,space=0,reloc=2
global __ptext130
__ptext130:
psect	text130
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	50
	global	__size_of_InitWsw
	__size_of_InitWsw	equ	__end_of_InitWsw-_InitWsw
	
_InitWsw:
;incstack = 0
	opt	stack 25
;incstack = 0
	line	69
	
l11982:
;wsw.c: 51: unsigned char i;
;wsw.c: 69: for(i=0;i<6-1;i++) PWD[i].St.focus=0;
	movlb	1	; () banked
	clrf	((InitWsw@i))&0ffh
	
l11988:; BSR set to: 1

	movf	((InitWsw@i))&0ffh,w
	mullw	04h
	movlw	low(_PWD)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_PWD)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	((0 & ((1<<1)-1))<<0)|not (((1<<1)-1)<<0)
	andwf	(indf2)&0ffh
	
l11990:; BSR set to: 1

	incf	((InitWsw@i))&0ffh
	
l11992:; BSR set to: 1

	movlw	(05h-1)
	cpfsgt	((InitWsw@i))&0ffh
	goto	u14911
	goto	u14910
u14911:
	goto	l11988
u14910:
	line	76
	
l11994:; BSR set to: 1

;wsw.c: 76: SetStatus(&PWD[4],0b0010000000000000,0b1111111111111111);
	movlw	high(_PWD+010h)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_PWD+010h)
	movwf	((?_SetStatus))&0ffh
	movlw	high(02000h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(02000h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	line	77
;wsw.c: 77: SetStatus(&PWD[5],0b0100000000000000,0b1111111111111111);
	movlb	1	; () banked
	movlw	high(_PWD+014h)
	movwf	((?_SetStatus+1))&0ffh
	movlw	low(_PWD+014h)
	movwf	((?_SetStatus))&0ffh
	movlw	high(04000h)
	movwf	(1+(?_SetStatus+02h))&0ffh
	movlw	low(04000h)
	movwf	(0+(?_SetStatus+02h))&0ffh
	movlw	high(0FFFFh)
	movwf	(1+(?_SetStatus+04h))&0ffh
	movlw	low(0FFFFh)
	movwf	(0+(?_SetStatus+04h))&0ffh
	call	_SetStatus	;wreg free
	line	83
	
l27:
	return
	opt stack 0
GLOBAL	__end_of_InitWsw
	__end_of_InitWsw:
	signat	_InitWsw,88
	global	_SetStatus

;; *************** function _SetStatus *****************
;; Defined at:
;;		line 644 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;  wData           2    0[BANK1 ] PTR struct .
;;		 -> DWD(28), PWD(24), 
;;  wst             2    2[BANK1 ] const unsigned int 
;;  mask            2    4[BANK1 ] const unsigned int 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_InitWsw
;;		_PrintErr
;;		_PrintPR
;;		_PrintWPR
;;		_PrintNstCW
;;		_PrintOFF
;;		_EndOFF
;;		_PrintCW
;;		_TestScr
;;		_EndTestScr
;; This function uses a non-reentrant model
;;
psect	text131,class=CODE,space=0,reloc=2
global __ptext131
__ptext131:
psect	text131
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	644
	global	__size_of_SetStatus
	__size_of_SetStatus	equ	__end_of_SetStatus-_SetStatus
	
_SetStatus:
;incstack = 0
	opt	stack 23
;incstack = 0
	line	645
	
l11996:; BSR set to: 1

;wsw.c: 645: if (mask&0b1000000000000000)(*wData).St.focus=(wst&0b1000000000000000)?1:0;
	
	btfss	((SetStatus@mask+1))&0ffh,(15)&7
	goto	u14921
	goto	u14920
u14921:
	goto	l12000
u14920:
	
l11998:; BSR set to: 1

	
	btfsc	((SetStatus@wst+1))&0ffh,(15)&7
	goto	u14931
	goto	u14930
u14931:
	movlw	1
	goto	u14936
u14930:
	movlw	0
u14936:
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	movff	(SetStatus@wData),fsr2l
	movff	(SetStatus@wData+1),fsr2h
	movlb	1	; () banked
	movf	(indf2)&0ffh,w
	movlb	0	; () banked
	xorwf	((??_SetStatus+0+0))&0ffh,w
	andlw	not ((1<<1)-1)
	xorwf	((??_SetStatus+0+0))&0ffh,w
	movlb	1	; () banked
	movwf	(indf2)&0ffh
	line	646
	
l12000:; BSR set to: 1

;wsw.c: 646: if (mask&0b0100000000000000)(*wData).St.dec=(wst&0b0100000000000000)?1:0;
	
	btfss	((SetStatus@mask+1))&0ffh,(14)&7
	goto	u14941
	goto	u14940
u14941:
	goto	l12004
u14940:
	
l12002:; BSR set to: 1

	
	btfsc	((SetStatus@wst+1))&0ffh,(14)&7
	goto	u14951
	goto	u14950
u14951:
	movlw	1
	goto	u14956
u14950:
	movlw	0
u14956:
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	movff	(SetStatus@wData),fsr2l
	movff	(SetStatus@wData+1),fsr2h
	rlncf	((??_SetStatus+0+0))&0ffh
	movlb	1	; () banked
	movf	(indf2)&0ffh,w
	movlb	0	; () banked
	xorwf	((??_SetStatus+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_SetStatus+0+0))&0ffh,w
	movlb	1	; () banked
	movwf	(indf2)&0ffh
	line	647
	
l12004:; BSR set to: 1

;wsw.c: 647: if (mask&0b0010000000000000)(*wData).St.hex=(wst&0b0010000000000000)?1:0;
	
	btfss	((SetStatus@mask+1))&0ffh,(13)&7
	goto	u14961
	goto	u14960
u14961:
	goto	l12008
u14960:
	
l12006:; BSR set to: 1

	
	btfsc	((SetStatus@wst+1))&0ffh,(13)&7
	goto	u14971
	goto	u14970
u14971:
	movlw	1
	goto	u14976
u14970:
	movlw	0
u14976:
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	movff	(SetStatus@wData),fsr2l
	movff	(SetStatus@wData+1),fsr2h
	rlncf	((??_SetStatus+0+0))&0ffh
	rlncf	((??_SetStatus+0+0))&0ffh
	movlb	1	; () banked
	movf	(indf2)&0ffh,w
	movlb	0	; () banked
	xorwf	((??_SetStatus+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<2)
	xorwf	((??_SetStatus+0+0))&0ffh,w
	movlb	1	; () banked
	movwf	(indf2)&0ffh
	line	648
	
l12008:; BSR set to: 1

;wsw.c: 648: if (mask&0b0001000000000000)(*wData).St.autoOFF=(wst&0b0001000000000000)?1:0;
	
	btfss	((SetStatus@mask+1))&0ffh,(12)&7
	goto	u14981
	goto	u14980
u14981:
	goto	l12012
u14980:
	
l12010:; BSR set to: 1

	
	btfsc	((SetStatus@wst+1))&0ffh,(12)&7
	goto	u14991
	goto	u14990
u14991:
	movlw	1
	goto	u14996
u14990:
	movlw	0
u14996:
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	movff	(SetStatus@wData),fsr2l
	movff	(SetStatus@wData+1),fsr2h
	rlncf	((??_SetStatus+0+0))&0ffh
	rlncf	((??_SetStatus+0+0))&0ffh
	rlncf	((??_SetStatus+0+0))&0ffh
	movlb	1	; () banked
	movf	(indf2)&0ffh,w
	movlb	0	; () banked
	xorwf	((??_SetStatus+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<3)
	xorwf	((??_SetStatus+0+0))&0ffh,w
	movlb	1	; () banked
	movwf	(indf2)&0ffh
	line	649
	
l12012:; BSR set to: 1

;wsw.c: 649: if (mask&0b0000100000000000)(*wData).St.kropka0=(wst&0b0000100000000000)?1:0;
	
	btfss	((SetStatus@mask+1))&0ffh,(11)&7
	goto	u15001
	goto	u15000
u15001:
	goto	l12016
u15000:
	
l12014:; BSR set to: 1

	
	btfsc	((SetStatus@wst+1))&0ffh,(11)&7
	goto	u15011
	goto	u15010
u15011:
	movlw	1
	goto	u15016
u15010:
	movlw	0
u15016:
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	movff	(SetStatus@wData),fsr2l
	movff	(SetStatus@wData+1),fsr2h
	swapf	((??_SetStatus+0+0))&0ffh
	movlb	1	; () banked
	movf	(indf2)&0ffh,w
	movlb	0	; () banked
	xorwf	((??_SetStatus+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<4)
	xorwf	((??_SetStatus+0+0))&0ffh,w
	movlb	1	; () banked
	movwf	(indf2)&0ffh
	line	650
	
l12016:; BSR set to: 1

;wsw.c: 650: if (mask&0b0000010000000000)(*wData).St.kropka1=(wst&0b0000010000000000)?1:0;
	
	btfss	((SetStatus@mask+1))&0ffh,(10)&7
	goto	u15021
	goto	u15020
u15021:
	goto	l12020
u15020:
	
l12018:; BSR set to: 1

	
	btfsc	((SetStatus@wst+1))&0ffh,(10)&7
	goto	u15031
	goto	u15030
u15031:
	movlw	1
	goto	u15036
u15030:
	movlw	0
u15036:
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	movff	(SetStatus@wData),fsr2l
	movff	(SetStatus@wData+1),fsr2h
	swapf	((??_SetStatus+0+0))&0ffh
	rlncf	((??_SetStatus+0+0))&0ffh
	movlb	1	; () banked
	movf	(indf2)&0ffh,w
	movlb	0	; () banked
	xorwf	((??_SetStatus+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<5)
	xorwf	((??_SetStatus+0+0))&0ffh,w
	movlb	1	; () banked
	movwf	(indf2)&0ffh
	line	651
	
l12020:; BSR set to: 1

;wsw.c: 651: if (mask&0b0000001000000000)(*wData).St.wygas0=(wst&0b0000001000000000)?1:0;
	
	btfss	((SetStatus@mask+1))&0ffh,(9)&7
	goto	u15041
	goto	u15040
u15041:
	goto	l12024
u15040:
	
l12022:; BSR set to: 1

	
	btfsc	((SetStatus@wst+1))&0ffh,(9)&7
	goto	u15051
	goto	u15050
u15051:
	movlw	1
	goto	u15056
u15050:
	movlw	0
u15056:
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	movff	(SetStatus@wData),fsr2l
	movff	(SetStatus@wData+1),fsr2h
	swapf	((??_SetStatus+0+0))&0ffh
	rlncf	((??_SetStatus+0+0))&0ffh
	rlncf	((??_SetStatus+0+0))&0ffh
	movlb	1	; () banked
	movf	(indf2)&0ffh,w
	xorwf	((??_SetStatus+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<6)
	xorwf	((??_SetStatus+0+0))&0ffh,w
	movwf	(indf2)&0ffh
	line	652
	
l12024:; BSR set to: 1

;wsw.c: 652: if (mask&0b0000000100000000)(*wData).St.wygas1=(wst&0b0000000100000000)?1:0;
	
	btfss	((SetStatus@mask+1))&0ffh,(8)&7
	goto	u15061
	goto	u15060
u15061:
	goto	l12028
u15060:
	
l12026:; BSR set to: 1

	
	btfsc	((SetStatus@wst+1))&0ffh,(8)&7
	goto	u15071
	goto	u15070
u15071:
	movlw	1
	goto	u15076
u15070:
	movlw	0
u15076:
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	movff	(SetStatus@wData),fsr2l
	movff	(SetStatus@wData+1),fsr2h
	rrcf	((??_SetStatus+0+0))&0ffh
	rrcf	((??_SetStatus+0+0))&0ffh
	movlb	1	; () banked
	movf	(indf2)&0ffh,w
	movlb	0	; () banked
	xorwf	((??_SetStatus+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<7)
	xorwf	((??_SetStatus+0+0))&0ffh,w
	movlb	1	; () banked
	movwf	(indf2)&0ffh
	line	653
	
l12028:; BSR set to: 1

;wsw.c: 653: if (mask&0b0000000010000000)(*wData).St.led0=(wst&0b0000000010000000)?1:0;
	
	btfss	((SetStatus@mask))&0ffh,(7)&7
	goto	u15081
	goto	u15080
u15081:
	goto	l12032
u15080:
	
l12030:; BSR set to: 1

	
	btfsc	((SetStatus@wst))&0ffh,(7)&7
	goto	u15091
	goto	u15090
u15091:
	movlw	1
	goto	u15096
u15090:
	movlw	0
u15096:
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	movlb	1	; () banked
	lfsr	2,01h
	movf	((SetStatus@wData))&0ffh,w
	addwf	fsr2l
	movf	((SetStatus@wData+1))&0ffh,w
	addwfc	fsr2h
	movf	(indf2)&0ffh,w
	movlb	0	; () banked
	xorwf	((??_SetStatus+0+0))&0ffh,w
	andlw	not ((1<<1)-1)
	xorwf	((??_SetStatus+0+0))&0ffh,w
	movlb	1	; () banked
	movwf	(indf2)&0ffh
	line	654
	
l12032:; BSR set to: 1

;wsw.c: 654: if (mask&0b0000000001000000)(*wData).St.led1=(wst&0b0000000001000000)?1:0;
	
	btfss	((SetStatus@mask))&0ffh,(6)&7
	goto	u15101
	goto	u15100
u15101:
	goto	l12036
u15100:
	
l12034:; BSR set to: 1

	
	btfsc	((SetStatus@wst))&0ffh,(6)&7
	goto	u15111
	goto	u15110
u15111:
	movlw	1
	goto	u15116
u15110:
	movlw	0
u15116:
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	movlb	1	; () banked
	lfsr	2,01h
	movf	((SetStatus@wData))&0ffh,w
	addwf	fsr2l
	movf	((SetStatus@wData+1))&0ffh,w
	addwfc	fsr2h
	movlb	0	; () banked
	rlncf	((??_SetStatus+0+0))&0ffh
	movlb	1	; () banked
	movf	(indf2)&0ffh,w
	movlb	0	; () banked
	xorwf	((??_SetStatus+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_SetStatus+0+0))&0ffh,w
	movlb	1	; () banked
	movwf	(indf2)&0ffh
	line	655
	
l12036:; BSR set to: 1

;wsw.c: 655: if (mask&0b0000000000100000)(*wData).St.sdiode=(wst&0b0000000000100000)?1:0;
	
	btfss	((SetStatus@mask))&0ffh,(5)&7
	goto	u15121
	goto	u15120
u15121:
	goto	l12040
u15120:
	
l12038:; BSR set to: 1

	
	btfsc	((SetStatus@wst))&0ffh,(5)&7
	goto	u15131
	goto	u15130
u15131:
	movlw	1
	goto	u15136
u15130:
	movlw	0
u15136:
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	movlb	1	; () banked
	lfsr	2,01h
	movf	((SetStatus@wData))&0ffh,w
	addwf	fsr2l
	movf	((SetStatus@wData+1))&0ffh,w
	addwfc	fsr2h
	movlb	0	; () banked
	rlncf	((??_SetStatus+0+0))&0ffh
	rlncf	((??_SetStatus+0+0))&0ffh
	movlb	1	; () banked
	movf	(indf2)&0ffh,w
	movlb	0	; () banked
	xorwf	((??_SetStatus+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<2)
	xorwf	((??_SetStatus+0+0))&0ffh,w
	movlb	1	; () banked
	movwf	(indf2)&0ffh
	line	656
	
l12040:; BSR set to: 1

;wsw.c: 656: if (mask&0b0000000000010000)(*wData).St.rdiode=(wst&0b0000000000010000)?1:0;
	
	btfss	((SetStatus@mask))&0ffh,(4)&7
	goto	u15141
	goto	u15140
u15141:
	goto	l12044
u15140:
	
l12042:; BSR set to: 1

	
	btfsc	((SetStatus@wst))&0ffh,(4)&7
	goto	u15151
	goto	u15150
u15151:
	movlw	1
	goto	u15156
u15150:
	movlw	0
u15156:
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	movlb	1	; () banked
	lfsr	2,01h
	movf	((SetStatus@wData))&0ffh,w
	addwf	fsr2l
	movf	((SetStatus@wData+1))&0ffh,w
	addwfc	fsr2h
	movlb	0	; () banked
	rlncf	((??_SetStatus+0+0))&0ffh
	rlncf	((??_SetStatus+0+0))&0ffh
	rlncf	((??_SetStatus+0+0))&0ffh
	movlb	1	; () banked
	movf	(indf2)&0ffh,w
	movlb	0	; () banked
	xorwf	((??_SetStatus+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<3)
	xorwf	((??_SetStatus+0+0))&0ffh,w
	movlb	1	; () banked
	movwf	(indf2)&0ffh
	line	658
	
l12044:; BSR set to: 1

;wsw.c: 658: if (mask&0b0000000000001111)
	movf	((SetStatus@mask))&0ffh,w
	andlw	low(0Fh)
	btfsc	status,2
	goto	u15161
	goto	u15160
u15161:
	goto	l182
u15160:
	line	659
	
l12046:; BSR set to: 1

;wsw.c: 659: if(((*wData).St.sdiode||(*wData).St.rdiode)&&(wst&0b0000000000001111))
	lfsr	2,01h
	movf	((SetStatus@wData))&0ffh,w
	addwf	fsr2l
	movf	((SetStatus@wData+1))&0ffh,w
	addwfc	fsr2h
	movf	indf2,w
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	
	btfsc	((??_SetStatus+0+0))&0ffh,2
	goto	u15171
	goto	u15170
u15171:
	goto	l12050
u15170:
	
l12048:; BSR set to: 0

	movlb	1	; () banked
	lfsr	2,01h
	movf	((SetStatus@wData))&0ffh,w
	addwf	fsr2l
	movf	((SetStatus@wData+1))&0ffh,w
	addwfc	fsr2h
	movf	indf2,w
	movlb	0	; () banked
	movwf	(??_SetStatus+0+0)&0ffh
	
	btfss	((??_SetStatus+0+0))&0ffh,3
	goto	u15181
	goto	u15180
u15181:
	goto	l182
u15180:
	
l12050:; BSR set to: 0

	movlb	1	; () banked
	movf	((SetStatus@wst))&0ffh,w
	andlw	low(0Fh)
	btfsc	status,2
	goto	u15191
	goto	u15190
u15191:
	goto	l182
u15190:
	line	661
	
l12052:; BSR set to: 1

;wsw.c: 660: {
;wsw.c: 661: (*wData).St.wbdid=(wst&0b0000000000001111);
	movff	(SetStatus@wst),??_SetStatus+0+0
	movlw	0Fh
	movlb	0	; () banked
	andwf	(??_SetStatus+0+0)&0ffh
	movlb	1	; () banked
	lfsr	2,01h
	movf	((SetStatus@wData))&0ffh,w
	addwf	fsr2l
	movf	((SetStatus@wData+1))&0ffh,w
	addwfc	fsr2h
	movlb	0	; () banked
	swapf	(??_SetStatus+0+0)&0ffh
	movlb	1	; () banked
	movf	(indf2)&0ffh,w
	movlb	0	; () banked
	xorwf	(??_SetStatus+0+0)&0ffh,w
	andlw	not (((1<<4)-1)<<4)
	xorwf	(??_SetStatus+0+0)&0ffh,w
	movlb	1	; () banked
	movwf	(indf2)&0ffh
	line	663
	
l182:
	return
	opt stack 0
GLOBAL	__end_of_SetStatus
	__end_of_SetStatus:
	signat	_SetStatus,12408
	global	_ISR

;; *************** function _ISR *****************
;; Defined at:
;;		line 10 in file "C:\praca\PICC\backup\GRZ01V5\isr.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       10 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    3
;; This function calls:
;;		_RefreshWSW
;;		_I2CSlaveTR
;;		_FormatDataIMY
;;		_ReloadTimer1
;;		_IncRTimer
;;		_IncPmrTimer
;;		_SetResMux
;;		_StabPort
;;		_IntPWM
;; This function is called by:
;;		Interrupt level 2
;; This function uses a non-reentrant model
;;
psect	intcode,class=CODE,space=0,reloc=2
global __pintcode
__pintcode:
psect	intcode
	file	"C:\praca\PICC\backup\GRZ01V5\isr.c"
	line	10
	global	__size_of_ISR
	__size_of_ISR	equ	__end_of_ISR-_ISR
	
_ISR:
;incstack = 0
	opt	stack 20
	movff	fsr1l+0,??_ISR+0
	movff	fsr1h+0,??_ISR+1
	movff	fsr2l+0,??_ISR+2
	global	int_func
	call	int_func,f	;refresh shadow registers
psect	intcode_body,class=CODE,space=0,reloc=2
global __pintcode_body
__pintcode_body:
int_func:

	pop	; remove dummy address from shadow register refresh
	movff	fsr2h+0,??_ISR+3
	movff	prodl+0,??_ISR+4
	movff	prodh+0,??_ISR+5
	movff	tblptrl+0,??_ISR+6
	movff	tblptrh+0,??_ISR+7
	movff	tblptru+0,??_ISR+8
	movff	tablat+0,??_ISR+9
;incstack = 0
	line	11
	
i2l11832:
;isr.c: 11: if((TMR1IF)&&(TMR1IE))
	btfss	c:(31984/8),(31984)&7	;volatile
	goto	i2u1483_41
	goto	i2u1483_40
i2u1483_41:
	goto	i2l11852
i2u1483_40:
	
i2l11834:
	btfss	c:(31976/8),(31976)&7	;volatile
	goto	i2u1484_41
	goto	i2u1484_40
i2u1484_41:
	goto	i2l11852
i2u1484_40:
	line	13
	
i2l11836:
;isr.c: 12: {
;isr.c: 13: TMR1IF=0;
	bcf	c:(31984/8),(31984)&7	;volatile
	line	14
	
i2l11838:
;isr.c: 14: ReloadTimer1();
	call	_ReloadTimer1	;wreg free
	line	15
	
i2l11840:
;isr.c: 15: IncRTimer();
	call	_IncRTimer	;wreg free
	line	16
	
i2l11842:
;isr.c: 16: IncPmrTimer();
	call	_IncPmrTimer	;wreg free
	line	18
	
i2l11844:; BSR set to: 0

;isr.c: 18: SetResMux();
	call	_SetResMux	;wreg free
	line	19
	
i2l11846:; BSR set to: 0

;isr.c: 19: RefreshWSW();
	call	_RefreshWSW	;wreg free
	line	21
	
i2l11848:; BSR set to: 0

;isr.c: 21: StabPort();
	call	_StabPort	;wreg free
	line	22
	
i2l11850:
;isr.c: 22: FormatDataIMY();
	call	_FormatDataIMY	;wreg free
	line	24
	
i2l11852:
;isr.c: 23: }
;isr.c: 24: if((TMR0IF)&&(TMR0IE))
	btfss	c:(32658/8),(32658)&7	;volatile
	goto	i2u1485_41
	goto	i2u1485_40
i2u1485_41:
	goto	i2l470
i2u1485_40:
	
i2l11854:
	btfss	c:(32661/8),(32661)&7	;volatile
	goto	i2u1486_41
	goto	i2u1486_40
i2u1486_41:
	goto	i2l470
i2u1486_40:
	line	26
	
i2l11856:
;isr.c: 25: {
;isr.c: 26: TMR0IF=0;
	bcf	c:(32658/8),(32658)&7	;volatile
	line	27
	
i2l470:
	line	28
;isr.c: 27: }
;isr.c: 28: if((TMR2IF)&&(TMR2IE))
	btfss	c:(31985/8),(31985)&7	;volatile
	goto	i2u1487_41
	goto	i2u1487_40
i2u1487_41:
	goto	i2l11864
i2u1487_40:
	
i2l11858:
	btfss	c:(31977/8),(31977)&7	;volatile
	goto	i2u1488_41
	goto	i2u1488_40
i2u1488_41:
	goto	i2l11864
i2u1488_40:
	line	30
	
i2l11860:
;isr.c: 29: {
;isr.c: 30: TMR2IF=0;
	bcf	c:(31985/8),(31985)&7	;volatile
	line	31
	
i2l11862:
;isr.c: 31: IntPWM();
	call	_IntPWM	;wreg free
	line	33
	
i2l11864:
;isr.c: 32: }
;isr.c: 33: if((SSPIF)&&(SSPIE))
	btfss	c:(31987/8),(31987)&7	;volatile
	goto	i2u1489_41
	goto	i2u1489_40
i2u1489_41:
	goto	i2l473
i2u1489_40:
	
i2l11866:
	btfss	c:(31979/8),(31979)&7	;volatile
	goto	i2u1490_41
	goto	i2u1490_40
i2u1490_41:
	goto	i2l473
i2u1490_40:
	line	35
	
i2l11868:
;isr.c: 34: {
;isr.c: 35: SSPIF=0;
	bcf	c:(31987/8),(31987)&7	;volatile
	line	36
	
i2l11870:
;isr.c: 36: I2CSlaveTR();
	call	_I2CSlaveTR	;wreg free
	line	38
	
i2l473:
	movff	??_ISR+9,tablat+0
	movff	??_ISR+8,tblptru+0
	movff	??_ISR+7,tblptrh+0
	movff	??_ISR+6,tblptrl+0
	movff	??_ISR+5,prodh+0
	movff	??_ISR+4,prodl+0
	movff	??_ISR+3,fsr2h+0
	movff	??_ISR+2,fsr2l+0
	movff	??_ISR+1,fsr1h+0
	movff	??_ISR+0,fsr1l+0
	retfie f
	opt stack 0
GLOBAL	__end_of_ISR
	__end_of_ISR:
	signat	_ISR,88
	global	_IntPWM

;; *************** function _IntPWM *****************
;; Defined at:
;;		line 175 in file "C:\praca\PICC\backup\GRZ01V5\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text133,class=CODE,space=0,reloc=2
global __ptext133
__ptext133:
psect	text133
	file	"C:\praca\PICC\backup\GRZ01V5\pwm.c"
	line	175
	global	__size_of_IntPWM
	__size_of_IntPWM	equ	__end_of_IntPWM-_IntPWM
	
_IntPWM:
;incstack = 0
	opt	stack 22
;incstack = 0
	line	178
	
i2l5068:
;pwm.c: 176: static bit btOsc=0;
;pwm.c: 178: if(PWM._ENPWM)
	
	btfss	((c:_PWM)),c,0	;volatile
	goto	i2u94_41
	goto	i2u94_40
i2u94_41:
	goto	i2l1478
i2u94_40:
	line	180
	
i2l5070:
;pwm.c: 179: {
;pwm.c: 180: PWM.NewPWM=PWM.BufPWM;
	movff	0+((c:_PWM)+01h),0+((c:_PWM)+04h)	;volatile
	line	181
;pwm.c: 181: PWM.NewOSC=PWM.BufOSC;
	movff	0+((c:_PWM)+02h),0+((c:_PWM)+03h)	;volatile
	line	182
	
i2l1478:
	line	183
;pwm.c: 182: }
;pwm.c: 183: if(PWM._ENOSC)
	
	btfss	((c:_PWM)),c,1	;volatile
	goto	i2u95_41
	goto	i2u95_40
i2u95_41:
	goto	i2l5080
i2u95_40:
	line	186
	
i2l5072:
;pwm.c: 184: {
;pwm.c: 186: if(!btOsc)
	movlb	(IntPWM@btOsc/8) >> 8
	btfsc	(IntPWM@btOsc/8),c,(IntPWM@btOsc)&7
	goto	i2u96_41
	goto	i2u96_40
i2u96_41:
	goto	i2l1480
i2u96_40:
	line	188
	
i2l5074:
;pwm.c: 187: {
;pwm.c: 188: btOsc=1;
	movlb	(IntPWM@btOsc/8) >> 8
	bsf	(IntPWM@btOsc/8),c,(IntPWM@btOsc)&7
	line	189
	
i2l5076:
;pwm.c: 189: PWM.NewPWM-=PWM.NewOSC;
	movf	(0+((c:_PWM)+03h)),c,w	;volatile
	subwf	(0+((c:_PWM)+04h)),c	;volatile
	line	190
;pwm.c: 190: }
	goto	i2l5080
	line	191
	
i2l1480:
	line	193
;pwm.c: 191: else
;pwm.c: 192: {
;pwm.c: 193: btOsc=0;
	movlb	(IntPWM@btOsc/8) >> 8
	bcf	(IntPWM@btOsc/8),c,(IntPWM@btOsc)&7
	line	194
	
i2l5078:
;pwm.c: 194: PWM.NewPWM+=PWM.NewOSC;
	movf	(0+((c:_PWM)+03h)),c,w	;volatile
	addwf	(0+((c:_PWM)+04h)),c	;volatile
	line	198
	
i2l5080:
;pwm.c: 195: }
;pwm.c: 196: }
;pwm.c: 198: if(PWM.NewPWM>(0x7C+1)<<1) PWM.NewPWM=(0x7C+1)<<1;
	lfsr	2,(c:_PWM)+04h	;volatile
	movlw	(0FBh-1)
	cpfsgt	indf2
	goto	i2u97_41
	goto	i2u97_40
i2u97_41:
	goto	i2l5084
i2u97_40:
	
i2l5082:
	movlw	low(0FAh)
	movwf	(0+((c:_PWM)+04h)),c	;volatile
	line	206
	
i2l5084:
;pwm.c: 206: DC1B1=((PWM.NewPWM&0b00000001)>0)?1:0;
	
	btfsc	(0+((c:_PWM)+04h)),c,(0)&7	;volatile
	goto	i2u98_41
	goto	i2u98_40
i2u98_41:
	bsf	c:(32237/8),(32237)&7	;volatile
	goto	i2u99_45
i2u98_40:
	bcf	c:(32237/8),(32237)&7	;volatile
i2u99_45:
	line	207
	
i2l5086:
;pwm.c: 207: DC1B0=0;
	bcf	c:(32236/8),(32236)&7	;volatile
	line	208
	
i2l5088:
;pwm.c: 208: CCPR1L=PWM.NewPWM>>1;
	bcf	status,0
	rrcf	(0+((c:_PWM)+04h)),c,w	;volatile
	movwf	((c:4030)),c	;volatile
	line	215
	
i2l1483:
	return
	opt stack 0
GLOBAL	__end_of_IntPWM
	__end_of_IntPWM:
	signat	_IntPWM,88
	global	_StabPort

;; *************** function _StabPort *****************
;; Defined at:
;;		line 151 in file "C:\praca\PICC\backup\GRZ01V5\port.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  i               1    6[COMRAM] unsigned char 
;;  delay           1    5[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    1
;; This function calls:
;;		i2_RefStan
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text134,class=CODE,space=0,reloc=2
global __ptext134
__ptext134:
psect	text134
	file	"C:\praca\PICC\backup\GRZ01V5\port.c"
	line	151
	global	__size_of_StabPort
	__size_of_StabPort	equ	__end_of_StabPort-_StabPort
	
_StabPort:
;incstack = 0
	opt	stack 21
;incstack = 0
	line	156
	
i2l11666:; BSR set to: 0

;port.c: 152: static unsigned char tim=0;
;port.c: 153: unsigned char i,delay;
;port.c: 156: if(tim++<5) return;
	movlw	(06h)&0ffh
	incf	((StabPort@tim))&0ffh
	movlb	0	; () banked
	cpfslt	((StabPort@tim))&0ffh
	goto	i2u1455_41
	goto	i2u1455_40
i2u1455_41:
	goto	i2l1307
i2u1455_40:
	goto	i2l1308
	
i2l1307:; BSR set to: 0

	line	157
;port.c: 157: tim=0;
	clrf	((StabPort@tim))&0ffh
	line	160
	
i2l11670:; BSR set to: 0

;port.c: 160: RefStan();
	call	i2_RefStan	;wreg free
	line	163
	
i2l11672:
;port.c: 163: for(i=0;i<10;i++)
	clrf	((c:StabPort@i)),c
	line	165
	
i2l11678:
;port.c: 164: {
;port.c: 165: if(!SPort[i].Timer)
	movf	((c:StabPort@i)),c,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2),c,w
	rrcf	wreg,f
	andlw	(1<<6)-1
	iorlw	0
	btfss	status,2
	goto	i2u1456_41
	goto	i2u1456_40
i2u1456_41:
	goto	i2l11688
i2u1456_40:
	line	167
	
i2l11680:
;port.c: 166: {
;port.c: 167: if(SPort[i].Output==SPort[i].Input)
	movf	((c:StabPort@i)),c,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movf	(indf2),c,w
	andlw	(1<<1)-1
	movwf	(??_StabPort+0+0)&0ffh,c
	movf	((c:StabPort@i)),c,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2),c,w
	andlw	(1<<1)-1
	xorwf	((??_StabPort+0+0)),c,w
	btfss	status,2
	goto	i2u1457_41
	goto	i2u1457_40
i2u1457_41:
	goto	i2l11686
i2u1457_40:
	goto	i2l11704
	line	169
	
i2l11686:
;port.c: 169: else SPort[i].Timer++;
	movf	((c:StabPort@i)),c,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2),c,w
	movwf	(??_StabPort+0+0)&0ffh,c
	rrcf	(??_StabPort+0+0)&0ffh,c,w
	andlw	(1<<6)-1
	movwf	(??_StabPort+0+0)&0ffh,c
	incf	(??_StabPort+0+0),c
	rlcf	(??_StabPort+0+0)&0ffh,c
	rlcf	(??_StabPort+0+0)&0ffh,c
	movf	(indf2),c,w
	xorwf	(??_StabPort+0+0)&0ffh,c,w
	andlw	not (((1<<6)-1)<<2)
	xorwf	(??_StabPort+0+0)&0ffh,c,w
	movwf	(indf2),c
	goto	i2l11704
	line	173
	
i2l11688:
;port.c: 171: else
;port.c: 172: {
;port.c: 173: if(!SPort[i].Output) delay=Nastawa[i].Delay1;
	movf	((c:StabPort@i)),c,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_StabPort+0+0)&0ffh,c
	
	btfsc	((??_StabPort+0+0)),c,1
	goto	i2u1458_41
	goto	i2u1458_40
i2u1458_41:
	goto	i2l11692
i2u1458_40:
	
i2l11690:
	movf	((c:StabPort@i)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Nastawa)
	movwf	(??_StabPort+0+0)&0ffh,c
	movff	(??_StabPort+0+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,(c:StabPort@delay)
	goto	i2l11694
	line	174
	
i2l11692:
;port.c: 174: else delay=Nastawa[i].Delay2;
	movf	((c:StabPort@i)),c,w
	mullw	02h
	movff	prodl,??_StabPort+0+0
	movlw	01h
	addwf	(??_StabPort+0+0),c
	movf	(??_StabPort+0+0),c,w
	addlw	low(_Nastawa)
	movwf	(??_StabPort+1+0)&0ffh,c
	movff	(??_StabPort+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,(c:StabPort@delay)
	line	176
	
i2l11694:
;port.c: 176: if(SPort[i].Timer>=delay)
	movf	((c:StabPort@i)),c,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2),c,w
	rrcf	wreg,f
	andlw	(1<<6)-1
	movwf	(??_StabPort+0+0)&0ffh,c
	movf	((c:StabPort@delay)),c,w
	subwf	((??_StabPort+0+0)),c,w
	btfss	status,0
	goto	i2u1459_41
	goto	i2u1459_40
i2u1459_41:
	goto	i2l11698
i2u1459_40:
	line	178
	
i2l11696:
;port.c: 177: {
;port.c: 178: SPort[i].Timer=0;
	movf	((c:StabPort@i)),c,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2),c
	line	179
;port.c: 179: SPort[i].Output=SPort[i].Input;
	movf	((c:StabPort@i)),c,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movf	(indf2),c,w
	andlw	(1<<1)-1
	movwf	(??_StabPort+0+0)&0ffh,c
	movf	((c:StabPort@i)),c,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rlncf	((??_StabPort+0+0)),c
	movf	(indf2),c,w
	xorwf	((??_StabPort+0+0)),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_StabPort+0+0)),c,w
	movwf	(indf2),c
	line	180
;port.c: 180: }
	goto	i2l11704
	line	183
	
i2l11698:
;port.c: 181: else
;port.c: 182: {
;port.c: 183: if (SPort[i].Output==SPort[i].Input)
	movf	((c:StabPort@i)),c,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movf	(indf2),c,w
	andlw	(1<<1)-1
	movwf	(??_StabPort+0+0)&0ffh,c
	movf	((c:StabPort@i)),c,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2),c,w
	andlw	(1<<1)-1
	xorwf	((??_StabPort+0+0)),c,w
	btfss	status,2
	goto	i2u1460_41
	goto	i2u1460_40
i2u1460_41:
	goto	i2l11686
i2u1460_40:
	line	184
	
i2l11700:
;port.c: 184: SPort[i].Timer=0;
	movf	((c:StabPort@i)),c,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2),c
	line	163
	
i2l11704:
	incf	((c:StabPort@i)),c
	
i2l11706:
	movlw	(0Ah-1)
	cpfsgt	((c:StabPort@i)),c
	goto	i2u1461_41
	goto	i2u1461_40
i2u1461_41:
	goto	i2l11678
i2u1461_40:
	line	189
	
i2l1308:
	return
	opt stack 0
GLOBAL	__end_of_StabPort
	__end_of_StabPort:
	signat	_StabPort,88
	global	i2_RefStan

;; *************** function i2_RefStan *****************
;; Defined at:
;;		line 45 in file "C:\praca\PICC\backup\GRZ01V5\port.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  RefStan         1    2[COMRAM] unsigned char 
;;  RefStan         1    1[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_StabPort
;; This function uses a non-reentrant model
;;
psect	text135,class=CODE,space=0,reloc=2
global __ptext135
__ptext135:
psect	text135
	file	"C:\praca\PICC\backup\GRZ01V5\port.c"
	line	45
	global	__size_ofi2_RefStan
	__size_ofi2_RefStan	equ	__end_ofi2_RefStan-i2_RefStan
	
i2_RefStan:
;incstack = 0
	opt	stack 21
;incstack = 0
	line	47
	
i2l11552:; BSR set to: 0

;port.c: 47: SPort[0].Input=(RE0)?0:1;
	btfss	c:(31776/8),(31776)&7	;volatile
	goto	i2u1420_41
	goto	i2u1420_40
i2u1420_41:
	movlw	1
	goto	i2u1420_46
i2u1420_40:
	movlw	0
i2u1420_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	((c:_SPort)),c,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	((c:_SPort)),c	;volatile
	line	49
;port.c: 49: SPort[1].Input=(RA5)?0:1;
	btfss	c:(31749/8),(31749)&7	;volatile
	goto	i2u1421_41
	goto	i2u1421_40
i2u1421_41:
	movlw	1
	goto	i2u1421_46
i2u1421_40:
	movlw	0
i2u1421_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+((c:_SPort)+01h)),c,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+((c:_SPort)+01h)),c	;volatile
	line	51
	
i2l11554:; BSR set to: 0

;port.c: 51: SPort[2].Input=RC0&&RA7;
	clrf	((c:i2_RefStan$1698)),c
	
i2l11556:; BSR set to: 0

	btfss	c:(31760/8),(31760)&7	;volatile
	goto	i2u1422_41
	goto	i2u1422_40
i2u1422_41:
	goto	i2l11562
i2u1422_40:
	
i2l11558:; BSR set to: 0

	btfss	c:(31751/8),(31751)&7	;volatile
	goto	i2u1423_41
	goto	i2u1423_40
i2u1423_41:
	goto	i2l11562
i2u1423_40:
	
i2l11560:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:i2_RefStan$1698)),c
	
i2l11562:; BSR set to: 0

	btfsc	(c:i2_RefStan$1698),c,0
	bra	i2u1424_45
	bcf	(0+((c:_SPort)+02h)),c,0	;volatile
	bra	i2u1424_46
	i2u1424_45:
	bsf	(0+((c:_SPort)+02h)),c,0	;volatile
	i2u1424_46:

	line	53
	
i2l11564:
;port.c: 53: SPort[3].Input=RA6&&RA7;
	clrf	((c:i2_RefStan$1699)),c
	
i2l11566:
	btfss	c:(31750/8),(31750)&7	;volatile
	goto	i2u1425_41
	goto	i2u1425_40
i2u1425_41:
	goto	i2l11572
i2u1425_40:
	
i2l11568:
	btfss	c:(31751/8),(31751)&7	;volatile
	goto	i2u1426_41
	goto	i2u1426_40
i2u1426_41:
	goto	i2l11572
i2u1426_40:
	
i2l11570:
	movlw	low(01h)
	movwf	((c:i2_RefStan$1699)),c
	
i2l11572:
	btfsc	(c:i2_RefStan$1699),c,0
	bra	i2u1427_45
	bcf	(0+((c:_SPort)+03h)),c,0	;volatile
	bra	i2u1427_46
	i2u1427_45:
	bsf	(0+((c:_SPort)+03h)),c,0	;volatile
	i2u1427_46:

	line	55
	
i2l11574:
;port.c: 55: SPort[4].Input=RA7;
	btfss	c:(31751/8),(31751)&7	;volatile
	bra	i2u1428_45
	bsf	(0+((c:_SPort)+04h)),c,0	;volatile
	bra	i2u1428_47
	i2u1428_45:	
	bcf	(0+((c:_SPort)+04h)),c,0	;volatile
	i2u1428_47:
	line	57
	
i2l11576:
;port.c: 57: SPort[5].Input=!RB4;
	btfss	c:(31756/8),(31756)&7	;volatile
	goto	i2u1429_41
	goto	i2u1429_40
i2u1429_41:
	movlw	1
	goto	i2u1429_46
i2u1429_40:
	movlw	0
i2u1429_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+((c:_SPort)+05h)),c,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+((c:_SPort)+05h)),c	;volatile
	line	59
	
i2l11578:
;port.c: 59: SPort[6].Input=!RA4;
	btfss	c:(31748/8),(31748)&7	;volatile
	goto	i2u1430_41
	goto	i2u1430_40
i2u1430_41:
	movlw	1
	goto	i2u1430_46
i2u1430_40:
	movlw	0
i2u1430_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+((c:_SPort)+06h)),c,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+((c:_SPort)+06h)),c	;volatile
	line	61
	
i2l11580:
;port.c: 61: SPort[7].Input=(DtCW._err_CW)?1:0;
	
	btfsc	((c:_DtCW)),c,0
	goto	i2u1431_41
	goto	i2u1431_40
i2u1431_41:
	movlw	1
	goto	i2u1431_46
i2u1431_40:
	movlw	0
i2u1431_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+((c:_SPort)+07h)),c,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+((c:_SPort)+07h)),c	;volatile
	line	63
	
i2l11582:
;port.c: 63: SPort[8].Input=!RC1;
	btfss	c:(31761/8),(31761)&7	;volatile
	goto	i2u1432_41
	goto	i2u1432_40
i2u1432_41:
	movlw	1
	goto	i2u1432_46
i2u1432_40:
	movlw	0
i2u1432_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+((c:_SPort)+08h)),c,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+((c:_SPort)+08h)),c	;volatile
	line	65
	
i2l11584:
;port.c: 65: SPort[9].Input=RA6;
	btfss	c:(31750/8),(31750)&7	;volatile
	bra	i2u1433_45
	bsf	(0+((c:_SPort)+09h)),c,0	;volatile
	bra	i2u1433_47
	i2u1433_45:	
	bcf	(0+((c:_SPort)+09h)),c,0	;volatile
	i2u1433_47:
	line	67
	
i2l1296:
	return
	opt stack 0
GLOBAL	__end_ofi2_RefStan
	__end_ofi2_RefStan:
	signat	i2_RefStan,88
	global	_SetResMux

;; *************** function _SetResMux *****************
;; Defined at:
;;		line 11 in file "C:\praca\PICC\backup\GRZ01V5\mux.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text136,class=CODE,space=0,reloc=2
global __ptext136
__ptext136:
psect	text136
	file	"C:\praca\PICC\backup\GRZ01V5\mux.c"
	line	11
	global	__size_of_SetResMux
	__size_of_SetResMux	equ	__end_of_SetResMux-_SetResMux
	
_SetResMux:
;incstack = 0
	opt	stack 22
;incstack = 0
	line	13
	
i2l5066:; BSR set to: 0

;mux.c: 13: PORTD=0xFF;
	setf	((c:3971)),c	;volatile
	line	17
;mux.c: 17: RC5=!RC5;
	btg	c:(31765/8),(31765)&7	;volatile
	line	18
	
i2l2627:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_SetResMux
	__end_of_SetResMux:
	signat	_SetResMux,88
	global	_IncPmrTimer

;; *************** function _IncPmrTimer *****************
;; Defined at:
;;		line 45 in file "C:\praca\PICC\backup\GRZ01V5\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text137,class=CODE,space=0,reloc=2
global __ptext137
__ptext137:
psect	text137
	file	"C:\praca\PICC\backup\GRZ01V5\pomiar.c"
	line	45
	global	__size_of_IncPmrTimer
	__size_of_IncPmrTimer	equ	__end_of_IncPmrTimer-_IncPmrTimer
	
_IncPmrTimer:; BSR set to: 0

;incstack = 0
	opt	stack 22
;incstack = 0
	line	46
	
i2l8782:
;pomiar.c: 46: if(PmrtimFlt1<0xff) PmrtimFlt1++;
	movlb	0	; () banked
	incf	((_PmrtimFlt1))&0ffh,w

	btfsc	status,2
	goto	i2u848_41
	goto	i2u848_40
i2u848_41:
	goto	i2l8786
i2u848_40:
	
i2l8784:; BSR set to: 0

	incf	((_PmrtimFlt1))&0ffh
	line	47
	
i2l8786:; BSR set to: 0

;pomiar.c: 47: if(PmrtimFlt2<0xff) PmrtimFlt2++;
	incf	((_PmrtimFlt2))&0ffh,w

	btfsc	status,2
	goto	i2u849_41
	goto	i2u849_40
i2u849_41:
	goto	i2l8790
i2u849_40:
	
i2l8788:; BSR set to: 0

	incf	((_PmrtimFlt2))&0ffh
	line	48
	
i2l8790:; BSR set to: 0

;pomiar.c: 48: if(PmrtimFlt3<0xffff) PmrtimFlt3++;
	incf	((_PmrtimFlt3))&0ffh,w
	btfsc	status,2
	incf ((_PmrtimFlt3+1))&0ffh,w

	btfsc	status,2
	goto	i2u850_41
	goto	i2u850_40
i2u850_41:
	goto	i2l1122
i2u850_40:
	
i2l8792:; BSR set to: 0

	infsnz	((_PmrtimFlt3))&0ffh
	incf	((_PmrtimFlt3+1))&0ffh
	line	49
	
i2l1122:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_IncPmrTimer
	__end_of_IncPmrTimer:
	signat	_IncPmrTimer,88
	global	_IncRTimer

;; *************** function _IncRTimer *****************
;; Defined at:
;;		line 120 in file "C:\praca\PICC\backup\GRZ01V5\rtimer.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  i               1    0[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text138,class=CODE,space=0,reloc=2
global __ptext138
__ptext138:
psect	text138
	file	"C:\praca\PICC\backup\GRZ01V5\rtimer.c"
	line	120
	global	__size_of_IncRTimer
	__size_of_IncRTimer	equ	__end_of_IncRTimer-_IncRTimer
	
_IncRTimer:; BSR set to: 0

;incstack = 0
	opt	stack 22
;incstack = 0
	line	135
	
i2l8702:
;rtimer.c: 122: unsigned char i;
;rtimer.c: 135: for(i=0;i<8;i++)
	clrf	((c:IncRTimer@i)),c
	line	137
	
i2l8708:
;rtimer.c: 136: {
;rtimer.c: 137: dSk[i].cS++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_dSk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	138
;rtimer.c: 138: if(dSk[i].cS>9)
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_dSk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	(0Ah-1)
	cpfsgt	indf2
	goto	i2u833_41
	goto	i2u833_40
i2u833_41:
	goto	i2l8714
i2u833_40:
	line	140
	
i2l8710:; BSR set to: 1

;rtimer.c: 139: {
;rtimer.c: 140: dSk[i].cS=0;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_dSk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	141
;rtimer.c: 141: if(dSk[i].dS<255) dSk[i].dS++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_dSk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	xorlw	0FFh

	btfsc	status,2
	goto	i2u834_41
	goto	i2u834_40
i2u834_41:
	goto	i2l8714
i2u834_40:
	
i2l8712:; BSR set to: 1

	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_dSk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	135
	
i2l8714:; BSR set to: 1

	incf	((c:IncRTimer@i)),c
	
i2l8716:; BSR set to: 1

	movlw	(08h-1)
	cpfsgt	((c:IncRTimer@i)),c
	goto	i2u835_41
	goto	i2u835_40
i2u835_41:
	goto	i2l8708
i2u835_40:
	line	148
	
i2l8718:; BSR set to: 1

;rtimer.c: 142: }
;rtimer.c: 143: }
;rtimer.c: 148: CommRT.cS++;
	incf	((c:_CommRT)),c	;volatile
	line	149
	
i2l8720:; BSR set to: 1

;rtimer.c: 149: if(CommRT.cS>9)
	movlw	(0Ah-1)
	cpfsgt	((c:_CommRT)),c	;volatile
	goto	i2u836_41
	goto	i2u836_40
i2u836_41:
	goto	i2l2399
i2u836_40:
	line	151
	
i2l8722:; BSR set to: 1

;rtimer.c: 150: {
;rtimer.c: 151: CommRT.cS=0;
	clrf	((c:_CommRT)),c	;volatile
	line	152
	
i2l8724:; BSR set to: 1

;rtimer.c: 152: CommRT.dS++;
	incf	(0+((c:_CommRT)+01h)),c	;volatile
	line	157
	
i2l8726:; BSR set to: 1

;rtimer.c: 157: for(i=0;i<14;i++)
	clrf	((c:IncRTimer@i)),c
	line	159
	
i2l8732:; BSR set to: 1

;rtimer.c: 158: {
;rtimer.c: 159: Sk[i].dS++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Sk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	160
;rtimer.c: 160: if(Sk[i].dS>9)
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Sk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	(0Ah-1)
	cpfsgt	indf2
	goto	i2u837_41
	goto	i2u837_40
i2u837_41:
	goto	i2l8738
i2u837_40:
	line	162
	
i2l8734:; BSR set to: 1

;rtimer.c: 161: {
;rtimer.c: 162: Sk[i].dS=0;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Sk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	163
;rtimer.c: 163: if(Sk[i].S<255) Sk[i].S++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Sk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	xorlw	0FFh

	btfsc	status,2
	goto	i2u838_41
	goto	i2u838_40
i2u838_41:
	goto	i2l8738
i2u838_40:
	
i2l8736:; BSR set to: 1

	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Sk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	157
	
i2l8738:; BSR set to: 1

	incf	((c:IncRTimer@i)),c
	
i2l8740:; BSR set to: 1

	movlw	(0Eh-1)
	cpfsgt	((c:IncRTimer@i)),c
	goto	i2u839_41
	goto	i2u839_40
i2u839_41:
	goto	i2l8732
i2u839_40:
	line	168
	
i2l8742:; BSR set to: 1

;rtimer.c: 164: }
;rtimer.c: 165: }
;rtimer.c: 168: if(CommRT.dS>9)
	lfsr	2,(c:_CommRT)+01h	;volatile
	movlw	(0Ah-1)
	cpfsgt	indf2
	goto	i2u840_41
	goto	i2u840_40
i2u840_41:
	goto	i2l2399
i2u840_40:
	line	170
	
i2l8744:; BSR set to: 1

;rtimer.c: 169: {
;rtimer.c: 170: CommRT.dS=0;
	clrf	(0+((c:_CommRT)+01h)),c	;volatile
	line	171
	
i2l8746:; BSR set to: 1

;rtimer.c: 171: CommRT.S++;
	incf	(0+((c:_CommRT)+02h)),c	;volatile
	line	176
	
i2l8748:; BSR set to: 1

;rtimer.c: 176: for(i=0;i<5;i++)
	clrf	((c:IncRTimer@i)),c
	line	178
	
i2l8754:
;rtimer.c: 177: {
;rtimer.c: 178: Mn[i].S++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movf	(prodl),c,w
	movlb	0	; () banked
	addlw	low(_Mn)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	incf	indf2

	line	179
;rtimer.c: 179: if(Mn[i].S>59)
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Mn)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movlw	(03Ch-1)
	cpfsgt	indf2
	goto	i2u841_41
	goto	i2u841_40
i2u841_41:
	goto	i2l8760
i2u841_40:
	line	181
	
i2l8756:; BSR set to: 0

;rtimer.c: 180: {
;rtimer.c: 181: Mn[i].S=0;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Mn)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movlw	low(0)
	movwf	indf2
	line	182
;rtimer.c: 182: if(Mn[i].M<255) Mn[i].M++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Mn+01h)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	xorlw	0FFh

	btfsc	status,2
	goto	i2u842_41
	goto	i2u842_40
i2u842_41:
	goto	i2l8760
i2u842_40:
	
i2l8758:; BSR set to: 0

	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Mn+01h)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	incf	indf2

	line	176
	
i2l8760:; BSR set to: 0

	incf	((c:IncRTimer@i)),c
	
i2l8762:; BSR set to: 0

	movlw	(05h-1)
	cpfsgt	((c:IncRTimer@i)),c
	goto	i2u843_41
	goto	i2u843_40
i2u843_41:
	goto	i2l8754
i2u843_40:
	line	187
	
i2l8764:; BSR set to: 0

;rtimer.c: 183: }
;rtimer.c: 184: }
;rtimer.c: 187: if (CommRT.S>59)
	lfsr	2,(c:_CommRT)+02h	;volatile
	movlw	(03Ch-1)
	cpfsgt	indf2
	goto	i2u844_41
	goto	i2u844_40
i2u844_41:
	goto	i2l2399
i2u844_40:
	line	189
	
i2l8766:; BSR set to: 0

;rtimer.c: 188: {
;rtimer.c: 189: CommRT.S=0;
	clrf	(0+((c:_CommRT)+02h)),c	;volatile
	line	194
;rtimer.c: 194: for(i=0;i<2;i++)
	clrf	((c:IncRTimer@i)),c
	line	196
	
i2l8772:; BSR set to: 0

;rtimer.c: 195: {
;rtimer.c: 196: Gd[i].M++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Gd)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	incf	indf2

	line	197
;rtimer.c: 197: if(Gd[i].M>59)
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Gd)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movlw	(03Ch-1)
	cpfsgt	indf2
	goto	i2u845_41
	goto	i2u845_40
i2u845_41:
	goto	i2l8778
i2u845_40:
	line	199
	
i2l8774:; BSR set to: 0

;rtimer.c: 198: {
;rtimer.c: 199: Gd[i].M=0;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Gd)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movlw	low(0)
	movwf	indf2
	line	200
;rtimer.c: 200: if(Gd[i].G<255) Gd[i].G++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Gd+01h)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	xorlw	0FFh

	btfsc	status,2
	goto	i2u846_41
	goto	i2u846_40
i2u846_41:
	goto	i2l8778
i2u846_40:
	
i2l8776:; BSR set to: 0

	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Gd+01h)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	incf	indf2

	line	194
	
i2l8778:; BSR set to: 0

	incf	((c:IncRTimer@i)),c
	
i2l8780:; BSR set to: 0

	movlw	(02h-1)
	cpfsgt	((c:IncRTimer@i)),c
	goto	i2u847_41
	goto	i2u847_40
i2u847_41:
	goto	i2l8772
i2u847_40:
	line	210
	
i2l2399:
	return
	opt stack 0
GLOBAL	__end_of_IncRTimer
	__end_of_IncRTimer:
	signat	_IncRTimer,88
	global	_ReloadTimer1

;; *************** function _ReloadTimer1 *****************
;; Defined at:
;;		line 55 in file "C:\praca\PICC\backup\GRZ01V5\timer1.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFFF/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text139,class=CODE,space=0,reloc=2
global __ptext139
__ptext139:
psect	text139
	file	"C:\praca\PICC\backup\GRZ01V5\timer1.c"
	line	55
	global	__size_of_ReloadTimer1
	__size_of_ReloadTimer1	equ	__end_of_ReloadTimer1-_ReloadTimer1
	
_ReloadTimer1:
;incstack = 0
	opt	stack 22
;incstack = 0
	line	56
	
i2l4972:
;timer1.c: 56: TMR1H=(unsigned char)(RldT1>>8);
	movlw	low(063h)
	movwf	((c:4047)),c	;volatile
	line	57
;timer1.c: 57: TMR1L=(unsigned char)(RldT1&0xFF);
	movlw	low(0BFh)
	movwf	((c:4046)),c	;volatile
	line	58
	
i2l2427:
	return
	opt stack 0
GLOBAL	__end_of_ReloadTimer1
	__end_of_ReloadTimer1:
	signat	_ReloadTimer1,88
	global	_FormatDataIMY

;; *************** function _FormatDataIMY *****************
;; Defined at:
;;		line 226 in file "C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    1
;; This function calls:
;;		_BitSet
;;		i2_RdPrt
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text140,class=CODE,space=0,reloc=2
global __ptext140
__ptext140:
psect	text140
	file	"C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
	line	226
	global	__size_of_FormatDataIMY
	__size_of_FormatDataIMY	equ	__end_of_FormatDataIMY-_FormatDataIMY
	
_FormatDataIMY:
;incstack = 0
	opt	stack 21
;incstack = 0
	line	228
	
i2l11752:
;i2c_s.c: 228: if(!M._TURBO) DtI2C.kod=0xE0;
	movlb	0	; () banked
	
	btfsc	(0+(_M+019h))&0ffh,0
	goto	i2u1468_41
	goto	i2u1468_40
i2u1468_41:
	goto	i2l11756
i2u1468_40:
	
i2l11754:; BSR set to: 0

	movlw	low(0E0h)
	movwf	(0+(_DtI2C+02h))&0ffh
	goto	i2l11758
	line	229
	
i2l11756:; BSR set to: 0

;i2c_s.c: 229: else DtI2C.kod=0xE1;
	movlw	low(0E1h)
	movwf	(0+(_DtI2C+02h))&0ffh
	line	231
	
i2l11758:; BSR set to: 0

;i2c_s.c: 231: DtI2C.PCO=0;
	clrf	(0+(_DtI2C+03h))&0ffh
	line	233
	
i2l11760:; BSR set to: 0

;i2c_s.c: 233: DtI2C.CO=0;
	clrf	(0+(_DtI2C+04h))&0ffh
	line	235
	
i2l11762:; BSR set to: 0

;i2c_s.c: 235: if(M._AKTYWNE_KNF) DtI2C.PCW=DtCW.PPCW;
	movf	(1+(_M+016h))&0ffh,w
	iorwf (0+(_M+016h))&0ffh,w

	btfsc	status,2
	goto	i2u1469_41
	goto	i2u1469_40
i2u1469_41:
	goto	i2l411
i2u1469_40:
	
i2l11764:; BSR set to: 0

	movff	0+((c:_DtCW)+04h),0+(_DtI2C+05h)
	goto	i2l412
	line	236
	
i2l411:; BSR set to: 0

;i2c_s.c: 236: else DtI2C.PCW=DtCW.PCW;
	movff	0+((c:_DtCW)+03h),0+(_DtI2C+05h)
	
i2l412:; BSR set to: 0

	line	238
;i2c_s.c: 238: DtI2C.CW=DtCW.CW;
	movff	0+((c:_DtCW)+02h),0+(_DtI2C+06h)
	line	240
;i2c_s.c: 240: DtI2C.CS=0;
	clrf	(0+(_DtI2C+07h))&0ffh
	line	242
;i2c_s.c: 242: DtI2C.STR_PWM=PWM.MSTART;
	movff	0+((c:_PWM)+018h),0+(_DtI2C+08h)	;volatile
	line	244
;i2c_s.c: 244: DtI2C.MAX_PWM=PWM.MMAXCO;
	movff	0+((c:_PWM)+019h),0+(_DtI2C+09h)	;volatile
	line	246
;i2c_s.c: 246: DtI2C.BUF_PWM=PWM.BufPWM;
	movff	0+((c:_PWM)+01h),0+(_DtI2C+0Ah)	;volatile
	line	248
	
i2l11766:; BSR set to: 0

;i2c_s.c: 248: BitSet(&DtI2C.ST_AD1,0,0);
	movlw	low(0)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Bh)&0ffh
	
	call	_BitSet
	line	249
;i2c_s.c: 249: BitSet(&DtI2C.ST_AD1,1,DtCW._err_CW);
	movlw	low(01h)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	((c:_DtCW)),c,0
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Bh)&0ffh
	
	call	_BitSet
	line	250
;i2c_s.c: 250: BitSet(&DtI2C.ST_AD1,2,0);
	movlw	low(02h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Bh)&0ffh
	
	call	_BitSet
	line	251
;i2c_s.c: 251: BitSet(&DtI2C.ST_AD1,3,DtCW._newPCW);
	movlw	low(03h)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	(0+((c:_DtCW)+01h)),c,0
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Bh)&0ffh
	
	call	_BitSet
	line	252
;i2c_s.c: 252: BitSet(&DtI2C.ST_AD1,4,0);
	movlw	low(04h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Bh)&0ffh
	
	call	_BitSet
	line	253
;i2c_s.c: 253: BitSet(&DtI2C.ST_AD1,5,0);
	movlw	low(05h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Bh)&0ffh
	
	call	_BitSet
	line	254
;i2c_s.c: 254: BitSet(&DtI2C.ST_AD1,6,0);
	movlw	low(06h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Bh)&0ffh
	
	call	_BitSet
	line	255
;i2c_s.c: 255: BitSet(&DtI2C.ST_AD1,7,1);
	movlw	low(07h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Bh)&0ffh
	
	call	_BitSet
	line	257
;i2c_s.c: 257: BitSet(&DtI2C.ST_AD2,0,0);
	movlw	low(0)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Ch)&0ffh
	
	call	_BitSet
	line	258
;i2c_s.c: 258: BitSet(&DtI2C.ST_AD2,1,0);
	movlw	low(01h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Ch)&0ffh
	
	call	_BitSet
	line	259
;i2c_s.c: 259: BitSet(&DtI2C.ST_AD2,2,0);
	movlw	low(02h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Ch)&0ffh
	
	call	_BitSet
	line	260
;i2c_s.c: 260: BitSet(&DtI2C.ST_AD2,3,0);
	movlw	low(03h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Ch)&0ffh
	
	call	_BitSet
	line	261
;i2c_s.c: 261: BitSet(&DtI2C.ST_AD2,4,DtCW._su_CW);
	movlw	low(04h)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	((c:_DtCW)),c,1
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Ch)&0ffh
	
	call	_BitSet
	line	262
;i2c_s.c: 262: BitSet(&DtI2C.ST_AD2,5,DtCW._ad_CW);
	movlw	low(05h)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	((c:_DtCW)),c,2
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Ch)&0ffh
	
	call	_BitSet
	line	263
;i2c_s.c: 263: BitSet(&DtI2C.ST_AD2,6,0);
	movlw	low(06h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Ch)&0ffh
	
	call	_BitSet
	line	264
;i2c_s.c: 264: BitSet(&DtI2C.ST_AD2,7,0);
	movlw	low(07h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Ch)&0ffh
	
	call	_BitSet
	line	266
;i2c_s.c: 266: BitSet(&DtI2C.ST_AD3,0,0);
	movlw	low(0)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Dh)&0ffh
	
	call	_BitSet
	line	267
;i2c_s.c: 267: BitSet(&DtI2C.ST_AD3,1,0);
	movlw	low(01h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Dh)&0ffh
	
	call	_BitSet
	line	268
;i2c_s.c: 268: BitSet(&DtI2C.ST_AD3,2,0);
	movlw	low(02h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Dh)&0ffh
	
	call	_BitSet
	line	269
;i2c_s.c: 269: BitSet(&DtI2C.ST_AD3,3,0);
	movlw	low(03h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Dh)&0ffh
	
	call	_BitSet
	line	270
;i2c_s.c: 270: BitSet(&DtI2C.ST_AD3,5,0);
	movlw	low(05h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Dh)&0ffh
	
	call	_BitSet
	line	272
;i2c_s.c: 272: BitSet(&DtI2C.PORTC,0,RB4);
	movlw	low(0)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	c:(31756/8),(31756)&7	;volatile
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Eh)&0ffh
	
	call	_BitSet
	line	273
;i2c_s.c: 273: BitSet(&DtI2C.PORTC,1,1);
	movlw	low(01h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Eh)&0ffh
	
	call	_BitSet
	line	274
;i2c_s.c: 274: BitSet(&DtI2C.PORTC,3,RB0);
	movlw	low(03h)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	c:(31752/8),(31752)&7	;volatile
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Eh)&0ffh
	
	call	_BitSet
	line	275
;i2c_s.c: 275: BitSet(&DtI2C.PORTC,5,0);
	movlw	low(05h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Eh)&0ffh
	
	call	_BitSet
	line	276
;i2c_s.c: 276: BitSet(&DtI2C.PORTC,6,RA6);
	movlw	low(06h)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	c:(31750/8),(31750)&7	;volatile
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Eh)&0ffh
	
	call	_BitSet
	line	277
;i2c_s.c: 277: BitSet(&DtI2C.PORTC,7,0);
	movlw	low(07h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Eh)&0ffh
	
	call	_BitSet
	line	279
;i2c_s.c: 279: BitSet(&DtI2C.PORTD,0,0);
	movlw	low(0)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Fh)&0ffh
	
	call	_BitSet
	line	280
;i2c_s.c: 280: BitSet(&DtI2C.PORTD,1,RB1);
	movlw	low(01h)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	c:(31753/8),(31753)&7	;volatile
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Fh)&0ffh
	
	call	_BitSet
	line	281
;i2c_s.c: 281: BitSet(&DtI2C.PORTD,2,0);
	movlw	low(02h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Fh)&0ffh
	
	call	_BitSet
	line	282
;i2c_s.c: 282: BitSet(&DtI2C.PORTD,3,0);
	movlw	low(03h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Fh)&0ffh
	
	call	_BitSet
	line	283
;i2c_s.c: 283: BitSet(&DtI2C.PORTD,4,0);
	movlw	low(04h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Fh)&0ffh
	
	call	_BitSet
	line	284
;i2c_s.c: 284: BitSet(&DtI2C.PORTD,5,1);
	movlw	low(05h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Fh)&0ffh
	
	call	_BitSet
	line	285
;i2c_s.c: 285: BitSet(&DtI2C.PORTD,6,0);
	movlw	low(06h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+0Fh)&0ffh
	
	call	_BitSet
	line	287
;i2c_s.c: 287: BitSet(&DtI2C.ST_GLOBAL0,0,RdPrt(6));
	movlw	low(0)
	movwf	((c:?_BitSet)),c
	movlw	(06h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u1470_41
	goto	i2u1470_40
i2u1470_41:
	movlw	1
	goto	i2u1470_46
i2u1470_40:
	movlw	0
i2u1470_46:
	movwf	(0+((c:?_BitSet)+01h)),c
	movlb	0	; () banked
	movlw	(_DtI2C+010h)&0ffh
	
	call	_BitSet
	line	288
;i2c_s.c: 288: BitSet(&DtI2C.ST_GLOBAL0,1,0);
	movlw	low(01h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+010h)&0ffh
	
	call	_BitSet
	line	289
;i2c_s.c: 289: BitSet(&DtI2C.ST_GLOBAL0,2,1);
	movlw	low(02h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+010h)&0ffh
	
	call	_BitSet
	line	290
;i2c_s.c: 290: BitSet(&DtI2C.ST_GLOBAL0,3,0);
	movlw	low(03h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+010h)&0ffh
	
	call	_BitSet
	line	291
	
i2l11768:; BSR set to: 0

;i2c_s.c: 291: if(!M._TURBO)
	
	btfsc	(0+(_M+019h))&0ffh,0
	goto	i2u1471_41
	goto	i2u1471_40
i2u1471_41:
	goto	i2l11772
i2u1471_40:
	line	292
	
i2l11770:; BSR set to: 0

;i2c_s.c: 292: BitSet(&DtI2C.ST_GLOBAL0,4,!RdPrt(2));
	movlw	low(04h)
	movwf	((c:?_BitSet)),c
	movlw	(02h)&0ffh
	
	call	i2_RdPrt
	btfss	status,0
	goto	i2u1472_41
	goto	i2u1472_40
i2u1472_41:
	movlw	1
	goto	i2u1472_46
i2u1472_40:
	movlw	0
i2u1472_46:
	movwf	(0+((c:?_BitSet)+01h)),c
	movlb	0	; () banked
	movlw	(_DtI2C+010h)&0ffh
	
	call	_BitSet
	goto	i2l414
	line	294
	
i2l11772:; BSR set to: 0

;i2c_s.c: 293: else
;i2c_s.c: 294: BitSet(&DtI2C.ST_GLOBAL0,4,!RdPrt(3));
	movlw	low(04h)
	movwf	((c:?_BitSet)),c
	movlw	(03h)&0ffh
	
	call	i2_RdPrt
	btfss	status,0
	goto	i2u1473_41
	goto	i2u1473_40
i2u1473_41:
	movlw	1
	goto	i2u1473_46
i2u1473_40:
	movlw	0
i2u1473_46:
	movwf	(0+((c:?_BitSet)+01h)),c
	movlb	0	; () banked
	movlw	(_DtI2C+010h)&0ffh
	
	call	_BitSet
	
i2l414:; BSR set to: 0

	line	295
;i2c_s.c: 295: BitSet(&DtI2C.ST_GLOBAL0,5,0);
	movlw	low(05h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+010h)&0ffh
	
	call	_BitSet
	line	296
;i2c_s.c: 296: BitSet(&DtI2C.ST_GLOBAL0,6,0);
	movlw	low(06h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+010h)&0ffh
	
	call	_BitSet
	line	297
;i2c_s.c: 297: BitSet(&DtI2C.ST_GLOBAL0,7,!RdPrt(5));
	movlw	low(07h)
	movwf	((c:?_BitSet)),c
	movlw	(05h)&0ffh
	
	call	i2_RdPrt
	btfss	status,0
	goto	i2u1474_41
	goto	i2u1474_40
i2u1474_41:
	movlw	1
	goto	i2u1474_46
i2u1474_40:
	movlw	0
i2u1474_46:
	movwf	(0+((c:?_BitSet)+01h)),c
	movlb	0	; () banked
	movlw	(_DtI2C+010h)&0ffh
	
	call	_BitSet
	line	299
;i2c_s.c: 299: BitSet(&DtI2C.ST_GLOBAL2,0,0);
	movlw	low(0)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+011h)&0ffh
	
	call	_BitSet
	line	300
;i2c_s.c: 300: BitSet(&DtI2C.ST_GLOBAL2,1,DtKNF.rdgz);
	movlw	low(01h)
	movwf	((c:?_BitSet)),c
	movff	0+(_DtKNF+08h),0+((c:?_BitSet)+01h)
	movlw	(_DtI2C+011h)&0ffh
	
	call	_BitSet
	line	301
;i2c_s.c: 301: BitSet(&DtI2C.ST_GLOBAL2,2,0);
	movlw	low(02h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+011h)&0ffh
	
	call	_BitSet
	line	302
;i2c_s.c: 302: BitSet(&DtI2C.ST_GLOBAL2,3,0);
	movlw	low(03h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+011h)&0ffh
	
	call	_BitSet
	line	303
;i2c_s.c: 303: BitSet(&DtI2C.ST_GLOBAL2,4,0);
	movlw	low(04h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+011h)&0ffh
	
	call	_BitSet
	line	304
;i2c_s.c: 304: BitSet(&DtI2C.ST_GLOBAL2,5,1);
	movlw	low(05h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+011h)&0ffh
	
	call	_BitSet
	line	305
;i2c_s.c: 305: BitSet(&DtI2C.ST_GLOBAL2,6,1);
	movlw	low(06h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+011h)&0ffh
	
	call	_BitSet
	line	306
;i2c_s.c: 306: BitSet(&DtI2C.ST_GLOBAL2,7,!RdPrt(4));
	movlw	low(07h)
	movwf	((c:?_BitSet)),c
	movlw	(04h)&0ffh
	
	call	i2_RdPrt
	btfss	status,0
	goto	i2u1475_41
	goto	i2u1475_40
i2u1475_41:
	movlw	1
	goto	i2u1475_46
i2u1475_40:
	movlw	0
i2u1475_46:
	movwf	(0+((c:?_BitSet)+01h)),c
	movlb	0	; () banked
	movlw	(_DtI2C+011h)&0ffh
	
	call	_BitSet
	line	308
;i2c_s.c: 308: BitSet(&DtI2C.ST_GLOBAL3,0,M._ROZRUCH);
	movlw	low(0)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	(0+(_M+010h))&0ffh,2
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+012h)&0ffh
	
	call	_BitSet
	line	309
;i2c_s.c: 309: BitSet(&DtI2C.ST_GLOBAL3,1,0);
	movlw	low(01h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+012h)&0ffh
	
	call	_BitSet
	line	310
;i2c_s.c: 310: BitSet(&DtI2C.ST_GLOBAL3,2,M._RUSZ_CIAG);
	movlw	low(02h)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	(0+(_M+010h))&0ffh,6
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+012h)&0ffh
	
	call	_BitSet
	line	311
;i2c_s.c: 311: BitSet(&DtI2C.ST_GLOBAL3,3,0);
	movlw	low(03h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+012h)&0ffh
	
	call	_BitSet
	line	312
;i2c_s.c: 312: BitSet(&DtI2C.ST_GLOBAL3,4,0);
	movlw	low(04h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+012h)&0ffh
	
	call	_BitSet
	line	313
;i2c_s.c: 313: BitSet(&DtI2C.ST_GLOBAL3,5,M._RUSZ_PLOMIEN);
	movlw	low(05h)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	(0+(_M+010h))&0ffh,7
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+012h)&0ffh
	
	call	_BitSet
	line	314
;i2c_s.c: 314: BitSet(&DtI2C.ST_GLOBAL3,6,M._RUSZ_STB);
	movlw	low(06h)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	(0+(_M+018h))&0ffh,2
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+012h)&0ffh
	
	call	_BitSet
	line	315
;i2c_s.c: 315: BitSet(&DtI2C.ST_GLOBAL3,7,0);
	movlw	low(07h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+012h)&0ffh
	
	call	_BitSet
	line	317
;i2c_s.c: 317: BitSet(&DtI2C.ST_GLOBAL4,0,0);
	movlw	low(0)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+013h)&0ffh
	
	call	_BitSet
	line	318
;i2c_s.c: 318: BitSet(&DtI2C.ST_GLOBAL4,1,0);
	movlw	low(01h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+013h)&0ffh
	
	call	_BitSet
	line	319
;i2c_s.c: 319: BitSet(&DtI2C.ST_GLOBAL4,2,M._MODULUJ);
	movlw	low(02h)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	(0+(_M+011h))&0ffh,4
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+013h)&0ffh
	
	call	_BitSet
	line	320
;i2c_s.c: 320: BitSet(&DtI2C.ST_GLOBAL4,3,0);
	movlw	low(03h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+013h)&0ffh
	
	call	_BitSet
	line	321
;i2c_s.c: 321: BitSet(&DtI2C.ST_GLOBAL4,4,M._OST_PL);
	movlw	low(04h)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	(0+(_M+019h))&0ffh,2
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+013h)&0ffh
	
	call	_BitSet
	line	322
;i2c_s.c: 322: BitSet(&DtI2C.ST_GLOBAL4,5,M._VWYBIEG);
	movlw	low(05h)
	movwf	((c:?_BitSet)),c
	movlw	0
	btfsc	(0+(_M+010h))&0ffh,5
	movlw	1
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+013h)&0ffh
	
	call	_BitSet
	line	323
;i2c_s.c: 323: BitSet(&DtI2C.ST_GLOBAL4,6,0);
	movlw	low(06h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+013h)&0ffh
	
	call	_BitSet
	line	324
;i2c_s.c: 324: BitSet(&DtI2C.ST_GLOBAL4,7,0);
	movlw	low(07h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+013h)&0ffh
	
	call	_BitSet
	line	326
	
i2l11774:; BSR set to: 0

;i2c_s.c: 326: DtI2C.TPRZ_CW=0;
	clrf	(0+(_DtI2C+014h))&0ffh
	line	328
	
i2l11776:; BSR set to: 0

;i2c_s.c: 328: DtI2C.ST0_WSW=0;
	clrf	(0+(_DtI2C+015h))&0ffh
	line	329
	
i2l11778:; BSR set to: 0

;i2c_s.c: 329: BitSet(&DtI2C.ST0_WSW,0,!M.ERR_BTY&&M._RUSZ_PLOMIEN);
	clrf	((c:_FormatDataIMY$839)),c
	
i2l11780:; BSR set to: 0

	tstfsz	(0+(_M+01Ch))&0ffh
	goto	i2u1476_41
	goto	i2u1476_40
i2u1476_41:
	goto	i2l11786
i2u1476_40:
	
i2l11782:; BSR set to: 0

	
	btfss	(0+(_M+010h))&0ffh,7
	goto	i2u1477_41
	goto	i2u1477_40
i2u1477_41:
	goto	i2l11786
i2u1477_40:
	
i2l11784:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_FormatDataIMY$839)),c
	
i2l11786:; BSR set to: 0

	movlw	low(0)
	movwf	((c:?_BitSet)),c
	movff	(c:_FormatDataIMY$839),0+((c:?_BitSet)+01h)
	movlw	(_DtI2C+015h)&0ffh
	
	call	_BitSet
	line	330
	
i2l11788:; BSR set to: 0

;i2c_s.c: 330: BitSet(&DtI2C.ST0_WSW,1,!M.ERR_BTY&&M._RUSZ_STB);
	clrf	((c:_FormatDataIMY$840)),c
	
i2l11790:; BSR set to: 0

	tstfsz	(0+(_M+01Ch))&0ffh
	goto	i2u1478_41
	goto	i2u1478_40
i2u1478_41:
	goto	i2l11796
i2u1478_40:
	
i2l11792:; BSR set to: 0

	
	btfss	(0+(_M+018h))&0ffh,2
	goto	i2u1479_41
	goto	i2u1479_40
i2u1479_41:
	goto	i2l11796
i2u1479_40:
	
i2l11794:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_FormatDataIMY$840)),c
	
i2l11796:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:?_BitSet)),c
	movff	(c:_FormatDataIMY$840),0+((c:?_BitSet)+01h)
	movlw	(_DtI2C+015h)&0ffh
	
	call	_BitSet
	line	331
	
i2l11798:; BSR set to: 0

;i2c_s.c: 331: BitSet(&DtI2C.ST0_WSW,2,!M.ERR_BTY&&M._RUSZ_CIAG&&M._prb_CIG);
	clrf	((c:_FormatDataIMY$841)),c
	
i2l11800:; BSR set to: 0

	tstfsz	(0+(_M+01Ch))&0ffh
	goto	i2u1480_41
	goto	i2u1480_40
i2u1480_41:
	goto	i2l11808
i2u1480_40:
	
i2l11802:; BSR set to: 0

	
	btfss	(0+(_M+010h))&0ffh,6
	goto	i2u1481_41
	goto	i2u1481_40
i2u1481_41:
	goto	i2l11808
i2u1481_40:
	
i2l11804:; BSR set to: 0

	
	btfss	(0+(_M+019h))&0ffh,7
	goto	i2u1482_41
	goto	i2u1482_40
i2u1482_41:
	goto	i2l11808
i2u1482_40:
	
i2l11806:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_FormatDataIMY$841)),c
	
i2l11808:; BSR set to: 0

	movlw	low(02h)
	movwf	((c:?_BitSet)),c
	movff	(c:_FormatDataIMY$841),0+((c:?_BitSet)+01h)
	movlw	(_DtI2C+015h)&0ffh
	
	call	_BitSet
	line	332
;i2c_s.c: 332: switch(M.ERR_BTY)
	goto	i2l11830
	line	335
	
i2l11810:; BSR set to: 0

;i2c_s.c: 335: DtI2C.ERR_BTY=1;
	movlw	low(01h)
	movwf	(0+(_DtI2C+016h))&0ffh
	line	336
;i2c_s.c: 336: break;
	goto	i2l432
	line	338
	
i2l11812:; BSR set to: 0

;i2c_s.c: 338: DtI2C.ERR_BTY=2;
	movlw	low(02h)
	movwf	(0+(_DtI2C+016h))&0ffh
	line	339
;i2c_s.c: 339: break;
	goto	i2l432
	line	341
	
i2l11814:; BSR set to: 0

;i2c_s.c: 341: DtI2C.ERR_BTY=3;
	movlw	low(03h)
	movwf	(0+(_DtI2C+016h))&0ffh
	line	342
;i2c_s.c: 342: break;
	goto	i2l432
	line	344
	
i2l11816:; BSR set to: 0

;i2c_s.c: 344: BitSet(&DtI2C.ST0_WSW,3,1);
	movlw	low(03h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+015h)&0ffh
	
	call	_BitSet
	line	345
;i2c_s.c: 345: break;
	goto	i2l432
	line	347
	
i2l11818:; BSR set to: 0

;i2c_s.c: 347: BitSet(&DtI2C.ST0_WSW,4,1);
	movlw	low(04h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+015h)&0ffh
	
	call	_BitSet
	line	348
;i2c_s.c: 348: break;
	goto	i2l432
	line	350
	
i2l11820:; BSR set to: 0

;i2c_s.c: 350: DtI2C.ERR_BTY=6;
	movlw	low(06h)
	movwf	(0+(_DtI2C+016h))&0ffh
	line	351
;i2c_s.c: 351: break;
	goto	i2l432
	line	353
	
i2l11822:; BSR set to: 0

;i2c_s.c: 353: BitSet(&DtI2C.ST0_WSW,5,1);
	movlw	low(05h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+015h)&0ffh
	
	call	_BitSet
	line	354
;i2c_s.c: 354: break;
	goto	i2l432
	line	356
	
i2l11824:; BSR set to: 0

;i2c_s.c: 356: BitSet(&DtI2C.ST0_WSW,6,1);
	movlw	low(06h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+015h)&0ffh
	
	call	_BitSet
	line	357
;i2c_s.c: 357: break;
	goto	i2l432
	line	359
	
i2l11826:; BSR set to: 0

;i2c_s.c: 359: BitSet(&DtI2C.ST0_WSW,7,1);
	movlw	low(07h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+01h)),c
	movlw	(_DtI2C+015h)&0ffh
	
	call	_BitSet
	line	360
;i2c_s.c: 360: break;
	goto	i2l432
	line	332
	
i2l11830:; BSR set to: 0

	movf	(0+(_M+01Ch))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 9, Range of values is 1 to 9
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           28    15 (average)
;	Chosen strategy is simple_byte

	xorlw	1^0	; case 1
	skipnz
	goto	i2l11810
	xorlw	2^1	; case 2
	skipnz
	goto	i2l11812
	xorlw	3^2	; case 3
	skipnz
	goto	i2l11814
	xorlw	4^3	; case 4
	skipnz
	goto	i2l11816
	xorlw	5^4	; case 5
	skipnz
	goto	i2l11818
	xorlw	6^5	; case 6
	skipnz
	goto	i2l11820
	xorlw	7^6	; case 7
	skipnz
	goto	i2l11822
	xorlw	8^7	; case 8
	skipnz
	goto	i2l11824
	xorlw	9^8	; case 9
	skipnz
	goto	i2l11826
	goto	i2l432

	line	362
	
i2l432:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_FormatDataIMY
	__end_of_FormatDataIMY:
	signat	_FormatDataIMY,88
	global	i2_RdPrt

;; *************** function i2_RdPrt *****************
;; Defined at:
;;		line 193 in file "C:\praca\PICC\backup\GRZ01V5\port.c"
;; Parameters:    Size  Location     Type
;;  RdPrt           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  RdPrt           1    1[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FormatDataIMY
;; This function uses a non-reentrant model
;;
psect	text141,class=CODE,space=0,reloc=2
global __ptext141
__ptext141:
psect	text141
	file	"C:\praca\PICC\backup\GRZ01V5\port.c"
	line	193
	global	__size_ofi2_RdPrt
	__size_ofi2_RdPrt	equ	__end_ofi2_RdPrt-i2_RdPrt
	
i2_RdPrt:; BSR set to: 0

;incstack = 0
	opt	stack 21
;incstack = 0
;i2RdPrt@Index stored from wreg
	movff	wreg,(c:i2RdPrt@Index)
	line	194
	
i2l11586:; BSR set to: 0

;port.c: 194: if (Index>10-1) asm("RESET");
	movlw	(0Ah-1)
	cpfsgt	((c:i2RdPrt@Index)),c
	goto	i2u1434_41
	goto	i2u1434_40
i2u1434_41:
	goto	i2l11590
i2u1434_40:
	
i2l11588:; BSR set to: 0

# 194 "C:\praca\PICC\backup\GRZ01V5\port.c"
RESET ;# 
psect	text141
	line	195
	
i2l11590:
;port.c: 195: return SPort[Index].Output;
	movf	((c:i2RdPrt@Index)),c,w
	addlw	low((c:_SPort))	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2),c,w
	andlw	(1<<1)-1
	movwf	(??i2_RdPrt+0+0)&0ffh,c
	rrcf	((??i2_RdPrt+0+0)),c,w
	line	196
	
i2l1325:
	return
	opt stack 0
GLOBAL	__end_ofi2_RdPrt
	__end_ofi2_RdPrt:
	signat	i2_RdPrt,88
	global	_BitSet

;; *************** function _BitSet *****************
;; Defined at:
;;		line 16 in file "C:\praca\PICC\backup\GRZ01V5\bit.c"
;; Parameters:    Size  Location     Type
;;  data            1    wreg     PTR unsigned char 
;;		 -> DtI2C(23), 
;;  nbit            1    2[COMRAM] const unsigned char 
;;  bt              1    3[COMRAM] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  data            1    7[COMRAM] PTR unsigned char 
;;		 -> DtI2C(23), 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FormatDataIMY
;; This function uses a non-reentrant model
;;
psect	text142,class=CODE,space=0,reloc=2
global __ptext142
__ptext142:
psect	text142
	file	"C:\praca\PICC\backup\GRZ01V5\bit.c"
	line	16
	global	__size_of_BitSet
	__size_of_BitSet	equ	__end_of_BitSet-_BitSet
	
_BitSet:
;incstack = 0
	opt	stack 21
;incstack = 0
;BitSet@data stored from wreg
	movff	wreg,(c:BitSet@data)
	line	17
	
i2l11648:; BSR set to: 0

;bit.c: 17: if(bt) *data|=1<<nbit;
	movf	((c:BitSet@bt)),c,w
	btfsc	status,2
	goto	i2u1449_41
	goto	i2u1449_40
i2u1449_41:
	goto	i2l11652
i2u1449_40:
	
i2l11650:; BSR set to: 0

	movff	(c:BitSet@nbit),??_BitSet+0+0
	movlw	(01h)&0ffh
	movwf	(??_BitSet+1+0)&0ffh,c
	incf	(??_BitSet+0+0),c
	goto	i2u1450_44
i2u1450_45:
	bcf	status,0
	rlcf	((??_BitSet+1+0)),c
i2u1450_44:
	decfsz	(??_BitSet+0+0),c
	goto	i2u1450_45
	movf	((c:BitSet@data)),c,w
	movwf	fsr2l
	clrf	fsr2h
	movf	((??_BitSet+1+0)),c,w
	iorwf	indf2
	goto	i2l293
	line	18
	
i2l11652:; BSR set to: 0

;bit.c: 18: else *data&=~(1<<nbit);
	movff	(c:BitSet@nbit),??_BitSet+0+0
	movlw	(01h)&0ffh
	movwf	(??_BitSet+1+0)&0ffh,c
	incf	(??_BitSet+0+0),c
	goto	i2u1451_44
i2u1451_45:
	bcf	status,0
	rlcf	((??_BitSet+1+0)),c
i2u1451_44:
	decfsz	(??_BitSet+0+0),c
	goto	i2u1451_45
	movf	((??_BitSet+1+0)),c,w
	xorlw	0ffh
	movwf	(??_BitSet+2+0)&0ffh,c
	movf	((c:BitSet@data)),c,w
	movwf	fsr2l
	clrf	fsr2h
	movf	((??_BitSet+2+0)),c,w
	andwf	indf2
	line	19
	
i2l293:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_BitSet
	__end_of_BitSet:
	signat	_BitSet,12408
	global	_I2CSlaveTR

;; *************** function _I2CSlaveTR *****************
;; Defined at:
;;		line 71 in file "C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  dt              1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		_SetTData
;;		_LiczCHK
;;		_SetRData
;;		_ReceptData
;;		_TransmitData
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text143,class=CODE,space=0,reloc=2
global __ptext143
__ptext143:
psect	text143
	file	"C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
	line	71
	global	__size_of_I2CSlaveTR
	__size_of_I2CSlaveTR	equ	__end_of_I2CSlaveTR-_I2CSlaveTR
	
_I2CSlaveTR:; BSR set to: 0

;incstack = 0
	opt	stack 20
;incstack = 0
	line	74
	
i2l11716:
;i2c_s.c: 72: unsigned char dt;
;i2c_s.c: 74: if(WCOL)
	btfss	c:(32311/8),(32311)&7	;volatile
	goto	i2u1462_41
	goto	i2u1462_40
i2u1462_41:
	goto	i2l371
i2u1462_40:
	line	76
	
i2l11718:
;i2c_s.c: 75: {
;i2c_s.c: 76: WCOL=0;
	bcf	c:(32311/8),(32311)&7	;volatile
	line	77
	
i2l11720:
;i2c_s.c: 77: DtI2C.error=7;
	movlw	low(07h)
	movlb	0	; () banked
	movwf	(0+(_DtI2C+01h))&0ffh
	line	79
;i2c_s.c: 79: }
	goto	i2l372
	line	80
	
i2l371:
	line	81
;i2c_s.c: 80: else
;i2c_s.c: 81: if(SSPOV)
	btfss	c:(32310/8),(32310)&7	;volatile
	goto	i2u1463_41
	goto	i2u1463_40
i2u1463_41:
	goto	i2l373
i2u1463_40:
	line	83
	
i2l11722:
;i2c_s.c: 82: {
;i2c_s.c: 83: SSPOV=0;
	bcf	c:(32310/8),(32310)&7	;volatile
	line	84
	
i2l11724:
;i2c_s.c: 84: DtI2C.error=8;
	movlw	low(08h)
	movlb	0	; () banked
	movwf	(0+(_DtI2C+01h))&0ffh
	line	85
;i2c_s.c: 85: }
	goto	i2l372
	line	86
	
i2l373:
	line	88
;i2c_s.c: 86: else
;i2c_s.c: 87: {
;i2c_s.c: 88: if(!DA)
	btfsc	c:(32317/8),(32317)&7	;volatile
	goto	i2u1464_41
	goto	i2u1464_40
i2u1464_41:
	goto	i2l375
i2u1464_40:
	line	91
	
i2l11726:
;i2c_s.c: 89: {
;i2c_s.c: 91: if(RW)
	btfss	c:(32314/8),(32314)&7	;volatile
	goto	i2u1465_41
	goto	i2u1465_40
i2u1465_41:
	goto	i2l376
i2u1465_40:
	line	94
	
i2l11728:
;i2c_s.c: 92: {
;i2c_s.c: 94: DtI2C.krok=1;
	movlb	0	; () banked
	bsf	((_DtI2C))&0ffh,0
	line	95
	
i2l11730:; BSR set to: 0

;i2c_s.c: 95: SetTData();
	call	_SetTData	;wreg free
	line	96
	
i2l11732:; BSR set to: 0

;i2c_s.c: 96: BufI2C.Bf[22-1]=LiczCHK(22);
	movlw	(016h)&0ffh
	
	call	_LiczCHK
	movlb	1	; () banked
	movwf	(0+(_BufI2C+016h))&0ffh
	line	97
	
i2l11734:; BSR set to: 1

;i2c_s.c: 97: BufI2C.indeks=0;
	clrf	((_BufI2C))&0ffh
	line	98
	
i2l11736:; BSR set to: 1

;i2c_s.c: 98: dt=SSPBUF;
	movf	((c:4041)),c,w	;volatile
	line	99
;i2c_s.c: 99: }
	goto	i2l375
	line	100
	
i2l376:
	line	103
;i2c_s.c: 100: else
;i2c_s.c: 101: {
;i2c_s.c: 103: DtI2C.krok=0;
	movlb	0	; () banked
	bcf	((_DtI2C))&0ffh,0
	line	104
	
i2l11738:; BSR set to: 0

;i2c_s.c: 104: SetRData();
	call	_SetRData	;wreg free
	line	105
	
i2l11740:; BSR set to: 1

;i2c_s.c: 105: dt=SSPBUF;
	movf	((c:4041)),c,w	;volatile
	goto	i2l378
	line	108
	
i2l375:
	line	111
;i2c_s.c: 107: }
;i2c_s.c: 108: }
;i2c_s.c: 111: if(DtI2C.krok==0)
	movlb	0	; () banked
	
	btfsc	((_DtI2C))&0ffh,0
	goto	i2u1466_41
	goto	i2u1466_40
i2u1466_41:
	goto	i2l379
i2u1466_40:
	line	113
	
i2l11744:; BSR set to: 0

;i2c_s.c: 112: {
;i2c_s.c: 113: ReceptData();
	call	_ReceptData	;wreg free
	goto	i2l378
	line	115
	
i2l379:; BSR set to: 0

	line	117
;i2c_s.c: 115: }
;i2c_s.c: 117: if(DtI2C.krok==1)
	
	btfss	((_DtI2C))&0ffh,0
	goto	i2u1467_41
	goto	i2u1467_40
i2u1467_41:
	goto	i2l372
i2u1467_40:
	line	119
	
i2l11748:; BSR set to: 0

;i2c_s.c: 118: {
;i2c_s.c: 119: TransmitData();
	call	_TransmitData	;wreg free
	goto	i2l378
	line	122
	
i2l372:; BSR set to: 0

	line	124
;i2c_s.c: 121: }
;i2c_s.c: 122: }
;i2c_s.c: 124: CKP=1;
	bsf	c:(32308/8),(32308)&7	;volatile
	line	125
;i2c_s.c: 125: DtI2C.krok=0;
	bcf	((_DtI2C))&0ffh,0
	line	126
;i2c_s.c: 126: BufI2C.indeks=0;
	movlb	1	; () banked
	clrf	((_BufI2C))&0ffh
	line	127
	
i2l378:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_I2CSlaveTR
	__end_of_I2CSlaveTR:
	signat	_I2CSlaveTR,88
	global	_TransmitData

;; *************** function _TransmitData *****************
;; Defined at:
;;		line 142 in file "C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_I2CSlaveTR
;; This function uses a non-reentrant model
;;
psect	text144,class=CODE,space=0,reloc=2
global __ptext144
__ptext144:
psect	text144
	file	"C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
	line	142
	global	__size_of_TransmitData
	__size_of_TransmitData	equ	__end_of_TransmitData-_TransmitData
	
_TransmitData:; BSR set to: 1

;incstack = 0
	opt	stack 21
;incstack = 0
	line	143
	
i2l8684:; BSR set to: 0

;i2c_s.c: 143: if(RW)
	btfss	c:(32314/8),(32314)&7	;volatile
	goto	i2u830_41
	goto	i2u830_40
i2u830_41:
	goto	i2l388
i2u830_40:
	line	145
	
i2l8686:; BSR set to: 0

;i2c_s.c: 144: {
;i2c_s.c: 145: SSPBUF=BufI2C.Bf[BufI2C.indeks];
	movlb	1	; () banked
	movlw	low(_BufI2C+01h)
	addwf	((_BufI2C))&0ffh,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_BufI2C+01h)
	addwfc	1+c:fsr2l
	movf	indf2,w
	movwf	((c:4041)),c	;volatile
	line	146
	
i2l8688:; BSR set to: 1

;i2c_s.c: 146: CKP=1;
	bsf	c:(32308/8),(32308)&7	;volatile
	line	147
	
i2l8690:; BSR set to: 1

;i2c_s.c: 147: if(BufI2C.indeks<22-1) BufI2C.indeks++;
	movlw	(015h)&0ffh
	cpfslt	((_BufI2C))&0ffh
	goto	i2u831_41
	goto	i2u831_40
i2u831_41:
	goto	i2l391
i2u831_40:
	
i2l8692:; BSR set to: 1

	incf	((_BufI2C))&0ffh
	goto	i2l391
	line	149
	
i2l388:; BSR set to: 0

	line	151
;i2c_s.c: 149: else
;i2c_s.c: 150: {
;i2c_s.c: 151: CKP=1;
	bsf	c:(32308/8),(32308)&7	;volatile
	line	152
;i2c_s.c: 152: BufI2C.indeks=0;
	movlb	1	; () banked
	clrf	((_BufI2C))&0ffh
	line	154
	
i2l391:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_TransmitData
	__end_of_TransmitData:
	signat	_TransmitData,88
	global	_ReceptData

;; *************** function _ReceptData *****************
;; Defined at:
;;		line 158 in file "C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    1
;; This function calls:
;;		_LiczCHK
;;		_ToWork
;; This function is called by:
;;		_I2CSlaveTR
;; This function uses a non-reentrant model
;;
psect	text145,class=CODE,space=0,reloc=2
global __ptext145
__ptext145:
psect	text145
	file	"C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
	line	158
	global	__size_of_ReceptData
	__size_of_ReceptData	equ	__end_of_ReceptData-_ReceptData
	
_ReceptData:; BSR set to: 1

;incstack = 0
	opt	stack 20
;incstack = 0
	line	159
	
i2l11654:; BSR set to: 0

;i2c_s.c: 159: if(BufI2C.indeks<3)
	movlw	(03h)&0ffh
	movlb	1	; () banked
	cpfslt	((_BufI2C))&0ffh
	goto	i2u1452_41
	goto	i2u1452_40
i2u1452_41:
	goto	i2l397
i2u1452_40:
	line	161
	
i2l11656:; BSR set to: 1

;i2c_s.c: 160: {
;i2c_s.c: 161: BufI2C.Bf[BufI2C.indeks]=SSPBUF;
	movlw	low(_BufI2C+01h)
	addwf	((_BufI2C))&0ffh,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_BufI2C+01h)
	addwfc	1+c:fsr2l
	movff	(c:4041),indf2	;volatile

	line	162
	
i2l11658:; BSR set to: 1

;i2c_s.c: 162: BufI2C.indeks++;
	incf	((_BufI2C))&0ffh
	line	163
	
i2l11660:; BSR set to: 1

;i2c_s.c: 163: if(BufI2C.indeks==3-1)
	movf	((_BufI2C))&0ffh,w
	xorlw	2

	btfss	status,2
	goto	i2u1453_41
	goto	i2u1453_40
i2u1453_41:
	goto	i2l397
i2u1453_40:
	line	164
	
i2l11662:; BSR set to: 1

;i2c_s.c: 164: if(LiczCHK(3)==BufI2C.Bf[3-1]) ToWork();
	movlw	(03h)&0ffh
	
	call	_LiczCHK
	movlb	1	; () banked
	xorwf	(0+(_BufI2C+03h))&0ffh,w
	btfss	status,2
	goto	i2u1454_41
	goto	i2u1454_40
i2u1454_41:
	goto	i2l397
i2u1454_40:
	
i2l11664:; BSR set to: 1

	call	_ToWork	;wreg free
	line	166
	
i2l397:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_ReceptData
	__end_of_ReceptData:
	signat	_ReceptData,88
	global	_ToWork

;; *************** function _ToWork *****************
;; Defined at:
;;		line 170 in file "C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ReceptData
;; This function uses a non-reentrant model
;;
psect	text146,class=CODE,space=0,reloc=2
global __ptext146
__ptext146:
psect	text146
	file	"C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
	line	170
	global	__size_of_ToWork
	__size_of_ToWork	equ	__end_of_ToWork-_ToWork
	
_ToWork:; BSR set to: 1

;incstack = 0
	opt	stack 20
;incstack = 0
	line	172
	
i2l400:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_ToWork
	__end_of_ToWork:
	signat	_ToWork,88
	global	_LiczCHK

;; *************** function _LiczCHK *****************
;; Defined at:
;;		line 132 in file "C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
;; Parameters:    Size  Location     Type
;;  NBTI2C          1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  NBTI2C          1    6[COMRAM] const unsigned char 
;;  i               1    7[COMRAM] unsigned char 
;;  chk             1    5[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        8 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_I2CSlaveTR
;;		_ReceptData
;; This function uses a non-reentrant model
;;
psect	text147,class=CODE,space=0,reloc=2
global __ptext147
__ptext147:
psect	text147
	file	"C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
	line	132
	global	__size_of_LiczCHK
	__size_of_LiczCHK	equ	__end_of_LiczCHK-_LiczCHK
	
_LiczCHK:; BSR set to: 1

;incstack = 0
	opt	stack 20
;incstack = 0
;LiczCHK@NBTI2C stored from wreg
	line	134
	movff	wreg,(c:LiczCHK@NBTI2C)
	
i2l8666:
;i2c_s.c: 133: unsigned char i;
;i2c_s.c: 134: unsigned char chk=0;
	clrf	((c:LiczCHK@chk)),c
	line	136
;i2c_s.c: 136: for(i=0;i<NBTI2C-1;i++) chk+=(BufI2C.Bf[i]+i)^0xAA;
	clrf	((c:LiczCHK@i)),c
	
i2l8668:
	movlw	low(-1)
	addwf	((c:LiczCHK@NBTI2C)),c,w
	movwf	(??_LiczCHK+0+0)&0ffh,c
	clrf	1+(??_LiczCHK+0+0)&0ffh,c
	movlw	high(-1)
	addwfc	1+(??_LiczCHK+0+0)&0ffh,c
	movf	(??_LiczCHK+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	01h
	btfsc	status,2
	subwf	(??_LiczCHK+0+0),c,w
	btfsc	status,0
	goto	i2u828_41
	goto	i2u828_40
i2u828_41:
	goto	i2l8672
i2u828_40:
	goto	i2l8678
	
i2l8672:
	movlb	1	; () banked
	movlw	low(_BufI2C+01h)
	addwf	((c:LiczCHK@i)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_BufI2C+01h)
	addwfc	1+c:fsr2l
	movf	indf2,w
	addwf	((c:LiczCHK@i)),c,w
	xorlw	low(0AAh)
	addwf	((c:LiczCHK@chk)),c
	
i2l8674:; BSR set to: 1

	incf	((c:LiczCHK@i)),c
	
i2l8676:; BSR set to: 1

	movlw	low(-1)
	addwf	((c:LiczCHK@NBTI2C)),c,w
	movwf	(??_LiczCHK+0+0)&0ffh,c
	clrf	1+(??_LiczCHK+0+0)&0ffh,c
	movlw	high(-1)
	addwfc	1+(??_LiczCHK+0+0)&0ffh,c
	movf	((c:LiczCHK@i)),c,w
	movwf	(??_LiczCHK+2+0)&0ffh,c
	clrf	(??_LiczCHK+2+0+1)&0ffh,c

	movf	(??_LiczCHK+2+1),c,w
	xorlw	80h
	movwf	(??_LiczCHK+4+0)&0ffh,c
	movf	(??_LiczCHK+0+0),c,w
	subwf	(??_LiczCHK+2+0),c,w
	movf	(??_LiczCHK+0+1),c,w
	xorlw	80h
	subwfb	(??_LiczCHK+4+0)&0ffh,c,w
	btfss	status,0
	goto	i2u829_41
	goto	i2u829_40
i2u829_41:
	goto	i2l8672
i2u829_40:
	line	137
	
i2l8678:
;i2c_s.c: 137: return chk;
	movf	((c:LiczCHK@chk)),c,w
	line	138
	
i2l385:
	return
	opt stack 0
GLOBAL	__end_of_LiczCHK
	__end_of_LiczCHK:
	signat	_LiczCHK,4217
	global	_SetRData

;; *************** function _SetRData *****************
;; Defined at:
;;		line 220 in file "C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_I2CSlaveTR
;; This function uses a non-reentrant model
;;
psect	text148,class=CODE,space=0,reloc=2
global __ptext148
__ptext148:
psect	text148
	file	"C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
	line	220
	global	__size_of_SetRData
	__size_of_SetRData	equ	__end_of_SetRData-_SetRData
	
_SetRData:
;incstack = 0
	opt	stack 21
;incstack = 0
	line	221
	
i2l8682:; BSR set to: 0

;i2c_s.c: 221: BufI2C.indeks=0;
	movlb	1	; () banked
	clrf	((_BufI2C))&0ffh
	line	222
	
i2l406:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_SetRData
	__end_of_SetRData:
	signat	_SetRData,88
	global	_SetTData

;; *************** function _SetTData *****************
;; Defined at:
;;		line 177 in file "C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  b               1    0        unsigned char 
;;  a               1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_I2CSlaveTR
;; This function uses a non-reentrant model
;;
psect	text149,class=CODE,space=0,reloc=2
global __ptext149
__ptext149:
psect	text149
	file	"C:\praca\PICC\backup\GRZ01V5\i2c_s.c"
	line	177
	global	__size_of_SetTData
	__size_of_SetTData	equ	__end_of_SetTData-_SetTData
	
_SetTData:; BSR set to: 1

;incstack = 0
	opt	stack 21
;incstack = 0
	line	195
	
i2l8664:; BSR set to: 0

;i2c_s.c: 178: unsigned char a,b;
;i2c_s.c: 195: BufI2C.Bf[0]=DtI2C.kod;
	movff	0+(_DtI2C+02h),0+(_BufI2C+01h)
	line	196
;i2c_s.c: 196: BufI2C.Bf[1]=DtI2C.PCO;
	movff	0+(_DtI2C+03h),0+(_BufI2C+02h)
	line	197
;i2c_s.c: 197: BufI2C.Bf[2]=DtI2C.CO;
	movff	0+(_DtI2C+04h),0+(_BufI2C+03h)
	line	198
;i2c_s.c: 198: BufI2C.Bf[3]=DtI2C.PCW;
	movff	0+(_DtI2C+05h),0+(_BufI2C+04h)
	line	199
;i2c_s.c: 199: BufI2C.Bf[4]=DtI2C.CW;
	movff	0+(_DtI2C+06h),0+(_BufI2C+05h)
	line	200
;i2c_s.c: 200: BufI2C.Bf[5]=DtI2C.CS;
	movff	0+(_DtI2C+07h),0+(_BufI2C+06h)
	line	201
;i2c_s.c: 201: BufI2C.Bf[6]=DtI2C.STR_PWM;
	movff	0+(_DtI2C+08h),0+(_BufI2C+07h)
	line	202
;i2c_s.c: 202: BufI2C.Bf[7]=DtI2C.MAX_PWM;
	movff	0+(_DtI2C+09h),0+(_BufI2C+08h)
	line	203
;i2c_s.c: 203: BufI2C.Bf[8]=DtI2C.BUF_PWM;
	movff	0+(_DtI2C+0Ah),0+(_BufI2C+09h)
	line	204
;i2c_s.c: 204: BufI2C.Bf[9]=DtI2C.ST_AD1;
	movff	0+(_DtI2C+0Bh),0+(_BufI2C+0Ah)
	line	205
;i2c_s.c: 205: BufI2C.Bf[10]=DtI2C.ST_AD2;
	movff	0+(_DtI2C+0Ch),0+(_BufI2C+0Bh)
	line	206
;i2c_s.c: 206: BufI2C.Bf[11]=DtI2C.ST_AD3;
	movff	0+(_DtI2C+0Dh),0+(_BufI2C+0Ch)
	line	207
;i2c_s.c: 207: BufI2C.Bf[12]=DtI2C.PORTC;
	movff	0+(_DtI2C+0Eh),0+(_BufI2C+0Dh)
	line	208
;i2c_s.c: 208: BufI2C.Bf[13]=DtI2C.PORTD;
	movff	0+(_DtI2C+0Fh),0+(_BufI2C+0Eh)
	line	209
;i2c_s.c: 209: BufI2C.Bf[14]=DtI2C.ST_GLOBAL0;
	movff	0+(_DtI2C+010h),0+(_BufI2C+0Fh)
	line	210
;i2c_s.c: 210: BufI2C.Bf[15]=DtI2C.ST_GLOBAL2;
	movff	0+(_DtI2C+011h),0+(_BufI2C+010h)
	line	211
;i2c_s.c: 211: BufI2C.Bf[16]=DtI2C.ST_GLOBAL3;
	movff	0+(_DtI2C+012h),0+(_BufI2C+011h)
	line	212
;i2c_s.c: 212: BufI2C.Bf[17]=DtI2C.ST_GLOBAL4;
	movff	0+(_DtI2C+013h),0+(_BufI2C+012h)
	line	213
;i2c_s.c: 213: BufI2C.Bf[18]=DtI2C.TPRZ_CW;
	movff	0+(_DtI2C+014h),0+(_BufI2C+013h)
	line	214
;i2c_s.c: 214: BufI2C.Bf[19]=DtI2C.ST0_WSW;
	movff	0+(_DtI2C+015h),0+(_BufI2C+014h)
	line	215
;i2c_s.c: 215: BufI2C.Bf[20]=DtI2C.ERR_BTY;
	movff	0+(_DtI2C+016h),0+(_BufI2C+015h)
	line	216
	
i2l403:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_SetTData
	__end_of_SetTData:
	signat	_SetTData,88
	global	_RefreshWSW

;; *************** function _RefreshWSW *****************
;; Defined at:
;;		line 299 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		_KolProc
;;		_SetPrWswData
;;		_FormatWswData
;;		_PrintWswData
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text150,class=CODE,space=0,reloc=2
global __ptext150
__ptext150:
psect	text150
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	299
	global	__size_of_RefreshWSW
	__size_of_RefreshWSW	equ	__end_of_RefreshWSW-_RefreshWSW
	
_RefreshWSW:; BSR set to: 0

;incstack = 0
	opt	stack 20
;incstack = 0
	line	301
	
i2l11708:; BSR set to: 0

;wsw.c: 301: KolProc();
	call	_KolProc	;wreg free
	line	303
	
i2l11710:
;wsw.c: 303: SetPrWswData();
	call	_SetPrWswData	;wreg free
	line	304
	
i2l11712:
;wsw.c: 304: FormatWswData();
	call	_FormatWswData	;wreg free
	line	305
	
i2l11714:; BSR set to: 0

;wsw.c: 305: PrintWswData();
	call	_PrintWswData	;wreg free
	line	306
	
i2l86:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_RefreshWSW
	__end_of_RefreshWSW:
	signat	_RefreshWSW,88
	global	_PrintWswData

;; *************** function _PrintWswData *****************
;; Defined at:
;;		line 501 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RefreshWSW
;; This function uses a non-reentrant model
;;
psect	text151,class=CODE,space=0,reloc=2
global __ptext151
__ptext151:
psect	text151
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	501
	global	__size_of_PrintWswData
	__size_of_PrintWswData	equ	__end_of_PrintWswData-_PrintWswData
	
_PrintWswData:; BSR set to: 0

;incstack = 0
	opt	stack 21
;incstack = 0
	line	517
	
i2l8514:; BSR set to: 0

;wsw.c: 517: if (RC5)
	btfss	c:(31765/8),(31765)&7	;volatile
	goto	i2u812_41
	goto	i2u812_40
i2u812_41:
	goto	i2l152
i2u812_40:
	line	518
	
i2l8516:; BSR set to: 0

;wsw.c: 518: PORTD=LedData.dLed1;
	movff	0+(_LedData+01h),(c:3971)	;volatile
	goto	i2l154
	line	519
	
i2l152:; BSR set to: 0

	line	520
;wsw.c: 519: else
;wsw.c: 520: PORTD=LedData.dLed0;
	movff	0+(_LedData+02h),(c:3971)	;volatile
	line	556
	
i2l154:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PrintWswData
	__end_of_PrintWswData:
	signat	_PrintWswData,88
	global	_FormatWswData

;; *************** function _FormatWswData *****************
;; Defined at:
;;		line 434 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  nrbty           1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    1
;; This function calls:
;;		___lbmod
;;		i2___lbdiv
;; This function is called by:
;;		_RefreshWSW
;; This function uses a non-reentrant model
;;
psect	text152,class=CODE,space=0,reloc=2
global __ptext152
__ptext152:
psect	text152
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	434
	global	__size_of_FormatWswData
	__size_of_FormatWswData	equ	__end_of_FormatWswData-_FormatWswData
	
_FormatWswData:; BSR set to: 0

;incstack = 0
	opt	stack 20
;incstack = 0
	line	437
	
i2l11620:
;wsw.c: 435: unsigned char nrbty;
;wsw.c: 437: if(WswData.St.hex)
	movlb	0	; () banked
	
	btfss	((_WswData))&0ffh,2
	goto	i2u1438_41
	goto	i2u1438_40
i2u1438_41:
	goto	i2l135
i2u1438_40:
	line	439
	
i2l11622:; BSR set to: 0

;wsw.c: 438: {
;wsw.c: 439: LedData.dLed1=Znak[(WswData.Dt.Data0&0xF0)>>4];
	movff	0+(_WswData+03h),??_FormatWswData+0+0
	swapf	(??_FormatWswData+0+0),c
	movlw	(0ffh shr 4) & 0ffh
	andwf	(??_FormatWswData+0+0),c
	movlw	0Fh
	andwf	(??_FormatWswData+0+0),c
	movf	(??_FormatWswData+0+0),c,w
	addlw	low(_Znak)
	movwf	(??_FormatWswData+1+0)&0ffh,c
	movff	(??_FormatWswData+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,0+(_LedData+01h)
	line	440
;wsw.c: 440: LedData.dLed0=Znak[WswData.Dt.Data0&0x0F];
	movff	0+(_WswData+03h),??_FormatWswData+0+0
	movlw	0Fh
	andwf	(??_FormatWswData+0+0),c
	movf	(??_FormatWswData+0+0),c,w
	addlw	low(_Znak)
	movwf	(??_FormatWswData+1+0)&0ffh,c
	movff	(??_FormatWswData+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,0+(_LedData+02h)
	line	441
;wsw.c: 441: }else
	goto	i2l136
	
i2l135:; BSR set to: 0

	line	442
;wsw.c: 442: if(WswData.St.dec)
	
	btfss	((_WswData))&0ffh,1
	goto	i2u1439_41
	goto	i2u1439_40
i2u1439_41:
	goto	i2l137
i2u1439_40:
	line	444
	
i2l11624:; BSR set to: 0

;wsw.c: 443: {
;wsw.c: 444: if(WswData.Dt.Data0>99) WswData.Dt.Data0=99;
	lfsr	2,_WswData+03h
	movlw	(064h-1)
	cpfsgt	indf2
	goto	i2u1440_41
	goto	i2u1440_40
i2u1440_41:
	goto	i2l11628
i2u1440_40:
	
i2l11626:; BSR set to: 0

	movlw	low(063h)
	movwf	(0+(_WswData+03h))&0ffh
	line	445
	
i2l11628:; BSR set to: 0

;wsw.c: 445: LedData.dLed1=Znak[WswData.Dt.Data0/10];
	movlw	low(0Ah)
	movwf	((c:?i2___lbdiv)),c
	movf	(0+(_WswData+03h))&0ffh,w
	
	call	i2___lbdiv
	movwf	(??_FormatWswData+0+0)&0ffh,c
	movf	((??_FormatWswData+0+0)),c,w
	addlw	low(_Znak)
	movwf	(??_FormatWswData+1+0)&0ffh,c
	movff	(??_FormatWswData+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,0+(_LedData+01h)
	line	446
	
i2l11630:; BSR set to: 0

;wsw.c: 446: LedData.dLed0=Znak[WswData.Dt.Data0%10];
	movlw	low(0Ah)
	movwf	((c:?___lbmod)),c
	movf	(0+(_WswData+03h))&0ffh,w
	
	call	___lbmod
	movwf	(??_FormatWswData+0+0)&0ffh,c
	movf	((??_FormatWswData+0+0)),c,w
	addlw	low(_Znak)
	movwf	(??_FormatWswData+1+0)&0ffh,c
	movff	(??_FormatWswData+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movlb	0	; () banked
	movff	tablat,0+(_LedData+02h)
	line	447
;wsw.c: 447: }else
	goto	i2l136
	
i2l137:; BSR set to: 0

	line	449
;wsw.c: 448: {
;wsw.c: 449: LedData.dLed1=WswData.Dt.Data1;
	movff	0+(_WswData+02h),0+(_LedData+01h)
	line	450
;wsw.c: 450: LedData.dLed0=WswData.Dt.Data0;
	movff	0+(_WswData+03h),0+(_LedData+02h)
	line	451
	
i2l136:; BSR set to: 0

	line	452
;wsw.c: 451: }
;wsw.c: 452: if (WswData.St.autoOFF&&(LedData.dLed1==Znak[0]))
	
	btfss	((_WswData))&0ffh,3
	goto	i2u1441_41
	goto	i2u1441_40
i2u1441_41:
	goto	i2l140
i2u1441_40:
	
i2l11632:; BSR set to: 0

	movlw	low((_Znak))
	movwf	tblptrl
	movlw	high((_Znak))
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	lfsr	2,_LedData+01h
	cpfseq	indf2
	goto	i2u1442_41
	goto	i2u1442_40
i2u1442_41:
	goto	i2l140
i2u1442_40:
	line	453
	
i2l11634:; BSR set to: 0

;wsw.c: 453: LedData.dLed1=0b11111111;
	setf	(0+(_LedData+01h))&0ffh
	
i2l140:; BSR set to: 0

	line	454
;wsw.c: 454: if (WswData.St.kropka0)
	
	btfss	((_WswData))&0ffh,4
	goto	i2u1443_41
	goto	i2u1443_40
i2u1443_41:
	goto	i2l11638
i2u1443_40:
	line	455
	
i2l11636:; BSR set to: 0

;wsw.c: 455: LedData.dLed0=LedData.dLed0&0b11111110;
	movf	(0+(_LedData+02h))&0ffh,w
	andlw	low(0FEh)
	movwf	(0+(_LedData+02h))&0ffh
	line	456
	
i2l11638:; BSR set to: 0

;wsw.c: 456: if (WswData.St.kropka1)
	
	btfss	((_WswData))&0ffh,5
	goto	i2u1444_41
	goto	i2u1444_40
i2u1444_41:
	goto	i2l11642
i2u1444_40:
	line	457
	
i2l11640:; BSR set to: 0

;wsw.c: 457: LedData.dLed1=LedData.dLed1&0b11111110;
	movf	(0+(_LedData+01h))&0ffh,w
	andlw	low(0FEh)
	movwf	(0+(_LedData+01h))&0ffh
	line	458
	
i2l11642:; BSR set to: 0

;wsw.c: 458: if (WswData.St.wygas0||LedData.setOff)
	
	btfsc	((_WswData))&0ffh,6
	goto	i2u1445_41
	goto	i2u1445_40
i2u1445_41:
	goto	i2l145
i2u1445_40:
	
i2l11644:; BSR set to: 0

	
	btfss	((_LedData))&0ffh,0
	goto	i2u1446_41
	goto	i2u1446_40
i2u1446_41:
	goto	i2l143
i2u1446_40:
	
i2l145:; BSR set to: 0

	line	459
;wsw.c: 459: LedData.dLed0=0b11111111;
	setf	(0+(_LedData+02h))&0ffh
	
i2l143:; BSR set to: 0

	line	460
;wsw.c: 460: if (WswData.St.wygas1||LedData.setOff)
	
	btfsc	((_WswData))&0ffh,7
	goto	i2u1447_41
	goto	i2u1447_40
i2u1447_41:
	goto	i2l148
i2u1447_40:
	
i2l11646:; BSR set to: 0

	
	btfss	((_LedData))&0ffh,0
	goto	i2u1448_41
	goto	i2u1448_40
i2u1448_41:
	goto	i2l149
i2u1448_40:
	
i2l148:; BSR set to: 0

	line	461
;wsw.c: 461: LedData.dLed1=0b11111111;
	setf	(0+(_LedData+01h))&0ffh
	line	496
	
i2l149:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_FormatWswData
	__end_of_FormatWswData:
	signat	_FormatWswData,88
	global	i2___lbdiv

;; *************** function i2___lbdiv *****************
;; Defined at:
;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.20\sources\common\lbdiv.c"
;; Parameters:    Size  Location     Type
;;  __lbdiv         1    wreg     unsigned char 
;;  __lbdiv         1    0[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  __lbdiv         1    1[COMRAM] unsigned char 
;;  __lbdiv         1    3[COMRAM] unsigned char 
;;  __lbdiv         1    2[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FormatWswData
;; This function uses a non-reentrant model
;;
psect	text153,class=CODE,space=0,reloc=2
global __ptext153
__ptext153:
psect	text153
	file	"C:\Program Files\Microchip\xc8\v1.20\sources\common\lbdiv.c"
	line	5
	global	__size_ofi2___lbdiv
	__size_ofi2___lbdiv	equ	__end_ofi2___lbdiv-i2___lbdiv
	
i2___lbdiv:; BSR set to: 0

;incstack = 0
	opt	stack 20
;incstack = 0
;i2___lbdiv@dividend stored from wreg
	line	9
	movff	wreg,(c:i2___lbdiv@dividend)
	
i2l11594:; BSR set to: 0

	clrf	((c:i2___lbdiv@quotient)),c
	line	10
	
i2l11596:; BSR set to: 0

	movf	((c:i2___lbdiv@divisor)),c,w
	btfsc	status,2
	goto	i2u1435_41
	goto	i2u1435_40
i2u1435_41:
	goto	i2l11616
i2u1435_40:
	line	11
	
i2l11598:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:i2___lbdiv@counter)),c
	line	12
	goto	i2l11604
	line	13
	
i2l11600:; BSR set to: 0

	bcf status,0
	rlcf	((c:i2___lbdiv@divisor)),c

	line	14
	
i2l11602:; BSR set to: 0

	incf	((c:i2___lbdiv@counter)),c
	line	12
	
i2l11604:; BSR set to: 0

	
	btfss	((c:i2___lbdiv@divisor)),c,(7)&7
	goto	i2u1436_41
	goto	i2u1436_40
i2u1436_41:
	goto	i2l11600
i2u1436_40:
	line	17
	
i2l11606:; BSR set to: 0

	bcf status,0
	rlcf	((c:i2___lbdiv@quotient)),c

	line	18
	movf	((c:i2___lbdiv@divisor)),c,w
	subwf	((c:i2___lbdiv@dividend)),c,w
	btfss	status,0
	goto	i2u1437_41
	goto	i2u1437_40
i2u1437_41:
	goto	i2l11612
i2u1437_40:
	line	19
	
i2l11608:; BSR set to: 0

	movf	((c:i2___lbdiv@divisor)),c,w
	subwf	((c:i2___lbdiv@dividend)),c
	line	20
	
i2l11610:; BSR set to: 0

	bsf	(0+(0/8)+(c:i2___lbdiv@quotient)),c,(0)&7
	line	22
	
i2l11612:; BSR set to: 0

	bcf status,0
	rrcf	((c:i2___lbdiv@divisor)),c

	line	23
	
i2l11614:; BSR set to: 0

	decfsz	((c:i2___lbdiv@counter)),c
	
	goto	i2l11606
	line	25
	
i2l11616:; BSR set to: 0

	movf	((c:i2___lbdiv@quotient)),c,w
	line	26
	
i2l3082:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_ofi2___lbdiv
	__end_ofi2___lbdiv:
	signat	i2___lbdiv,89
	global	___lbmod

;; *************** function ___lbmod *****************
;; Defined at:
;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.20\sources\common\lbmod.c"
;; Parameters:    Size  Location     Type
;;  dividend        1    wreg     unsigned char 
;;  divisor         1    0[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  dividend        1    1[COMRAM] unsigned char 
;;  rem             1    3[COMRAM] unsigned char 
;;  counter         1    2[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FormatWswData
;; This function uses a non-reentrant model
;;
psect	text154,class=CODE,space=0,reloc=2
global __ptext154
__ptext154:
psect	text154
	file	"C:\Program Files\Microchip\xc8\v1.20\sources\common\lbmod.c"
	line	5
	global	__size_of___lbmod
	__size_of___lbmod	equ	__end_of___lbmod-___lbmod
	
___lbmod:; BSR set to: 0

;incstack = 0
	opt	stack 20
;incstack = 0
;___lbmod@dividend stored from wreg
	line	9
	movff	wreg,(c:___lbmod@dividend)
	
i2l11506:; BSR set to: 0

	movlw	low(08h)
	movwf	((c:___lbmod@counter)),c
	line	10
	
i2l11508:; BSR set to: 0

	clrf	((c:___lbmod@rem)),c
	line	12
	
i2l11510:
	bcf	status,0
	rlcf	((c:___lbmod@dividend))&0ffh,w
	rlcf	((c:___lbmod@rem))&0ffh,w
	movwf	((c:___lbmod@rem)),c
	line	13
	
i2l11512:
	bcf status,0
	rlcf	((c:___lbmod@dividend)),c

	line	14
	
i2l11514:
	movf	((c:___lbmod@divisor)),c,w
	subwf	((c:___lbmod@rem)),c,w
	btfss	status,0
	goto	i2u1416_41
	goto	i2u1416_40
i2u1416_41:
	goto	i2l11518
i2u1416_40:
	line	15
	
i2l11516:
	movf	((c:___lbmod@divisor)),c,w
	subwf	((c:___lbmod@rem)),c
	line	16
	
i2l11518:
	decfsz	((c:___lbmod@counter)),c
	
	goto	i2l11510
	line	17
	
i2l11520:
	movf	((c:___lbmod@rem)),c,w
	line	18
	
i2l3088:
	return
	opt stack 0
GLOBAL	__end_of___lbmod
	__end_of___lbmod:
	signat	___lbmod,8313
	global	_SetPrWswData

;; *************** function _SetPrWswData *****************
;; Defined at:
;;		line 417 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  i               1    1[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RefreshWSW
;; This function uses a non-reentrant model
;;
psect	text155,class=CODE,space=0,reloc=2
global __ptext155
__ptext155:
psect	text155
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	417
	global	__size_of_SetPrWswData
	__size_of_SetPrWswData	equ	__end_of_SetPrWswData-_SetPrWswData
	
_SetPrWswData:
;incstack = 0
	opt	stack 21
;incstack = 0
	line	419
	
i2l8498:
;wsw.c: 418: unsigned char i;
;wsw.c: 419: for(i=0;i<6-1;i++)
	clrf	((c:SetPrWswData@i)),c
	line	421
	
i2l8504:
;wsw.c: 420: {
;wsw.c: 421: if(PWD[i].St.focus)
	movf	((c:SetPrWswData@i)),c,w
	mullw	04h
	movlb	1	; () banked
	movlw	low(_PWD)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_PWD)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	movwf	(??_SetPrWswData+0+0)&0ffh,c
	
	btfss	((??_SetPrWswData+0+0)),c,0
	goto	i2u810_41
	goto	i2u810_40
i2u810_41:
	goto	i2l8510
i2u810_40:
	line	423
	
i2l8506:; BSR set to: 1

;wsw.c: 422: {
;wsw.c: 423: WswData=PWD[i];
	movf	((c:SetPrWswData@i)),c,w
	mullw	04h
	movlw	low(_PWD)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_PWD)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlb	0	; () banked
	movff	postinc2,(_WswData)
	movff	postinc2,(_WswData+1)
	movff	postinc2,(_WswData+2)
	movff	postinc2,(_WswData+3)
	goto	i2l132
	line	419
	
i2l8510:; BSR set to: 1

;wsw.c: 425: };
	incf	((c:SetPrWswData@i)),c
	
i2l8512:; BSR set to: 1

	movlw	(05h-1)
	cpfsgt	((c:SetPrWswData@i)),c
	goto	i2u811_41
	goto	i2u811_40
i2u811_41:
	goto	i2l8504
i2u811_40:
	
i2l130:; BSR set to: 1

	line	427
;wsw.c: 426: }
;wsw.c: 427: WswData=PWD[6-1];
	movff	0+(_PWD+014h),(_WswData)
	movff	1+(_PWD+014h),(_WswData+1)
	movff	2+(_PWD+014h),(_WswData+2)
	movff	3+(_PWD+014h),(_WswData+3)
	line	428
	
i2l132:
	return
	opt stack 0
GLOBAL	__end_of_SetPrWswData
	__end_of_SetPrWswData:
	signat	_SetPrWswData,88
	global	_KolProc

;; *************** function _KolProc *****************
;; Defined at:
;;		line 312 in file "C:\praca\PICC\backup\GRZ01V5\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  j               1   15[COMRAM] unsigned char 
;;  i               1   14[COMRAM] unsigned char 
;;  k               1   13[COMRAM] unsigned char 
;;  nC              1   12[COMRAM] unsigned char 
;;  l               1   11[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:         11       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       16 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RefreshWSW
;; This function uses a non-reentrant model
;;
psect	text156,class=CODE,space=0,reloc=2
global __ptext156
__ptext156:
psect	text156
	file	"C:\praca\PICC\backup\GRZ01V5\wsw.c"
	line	312
	global	__size_of_KolProc
	__size_of_KolProc	equ	__end_of_KolProc-_KolProc
	
_KolProc:
;incstack = 0
	opt	stack 21
;incstack = 0
	line	315
	
i2l8360:; BSR set to: 0

;wsw.c: 313: unsigned char i,j,k,l,nC;
;wsw.c: 315: for(j=0;j<4;j++)
	clrf	((c:KolProc@j)),c
	line	317
	
i2l8366:
;wsw.c: 316: {
;wsw.c: 317: nC=(*(*Klj[j].KL).KOut).nCykli;
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	05h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movlw	02h
	addwf	(??_KolProc+2+0),c
	movff	??_KolProc+2+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,(c:KolProc@nC)
	line	318
	
i2l8368:
;wsw.c: 318: if((KInd[j].reset)||(nC&&KTim[j].cykl>=nC))
	movf	((c:KolProc@j)),c,w
	movlb	0	; () banked
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_KolProc+0+0)&0ffh,c
	
	btfsc	((??_KolProc+0+0)),c,1
	goto	i2u787_41
	goto	i2u787_40
i2u787_41:
	goto	i2l8374
i2u787_40:
	
i2l8370:; BSR set to: 0

	movf	((c:KolProc@nC)),c,w
	btfsc	status,2
	goto	i2u788_41
	goto	i2u788_40
i2u788_41:
	goto	i2l8386
i2u788_40:
	
i2l8372:; BSR set to: 0

	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlb	1	; () banked
	movlw	low(_KTim+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	movwf	(??_KolProc+0+0)&0ffh,c
	movf	((c:KolProc@nC)),c,w
	subwf	((??_KolProc+0+0)),c,w
	btfss	status,0
	goto	i2u789_41
	goto	i2u789_40
i2u789_41:
	goto	i2l8386
i2u789_40:
	line	320
	
i2l8374:
;wsw.c: 319: {
;wsw.c: 320: KTim[j].cykl=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlb	1	; () banked
	movlw	low(_KTim+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	321
	
i2l8376:; BSR set to: 1

;wsw.c: 321: KInd[j].reset=0;
	movf	((c:KolProc@j)),c,w
	movlb	0	; () banked
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<1)-1))<<1)|not (((1<<1)-1)<<1)
	andwf	(indf2)&0ffh
	line	322
	
i2l8378:; BSR set to: 0

;wsw.c: 322: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j].KL).KFc[i].focus=0;
	clrf	((c:KolProc@i)),c
	goto	i2l8384
	
i2l8380:
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	03h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0+1
	movf	((c:KolProc@i)),c,w
	addwf	(??_KolProc+2+0),c,w
	movwf	c:fsr2l
	movlw	0
	addwfc	(??_KolProc+2+1),c,w
	movwf	1+c:fsr2l
	movlw	((0 & ((1<<1)-1))<<0)|not (((1<<1)-1)<<0)
	andwf	(indf2)&0ffh
	
i2l8382:
	incf	((c:KolProc@i)),c
	
i2l8384:
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movlw	01h
	addwf	(??_KolProc+0+0),c
	movf	(??_KolProc+0+0),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	subwf	((c:KolProc@i)),c,w
	btfss	status,0
	goto	i2u790_41
	goto	i2u790_40
i2u790_41:
	goto	i2l8380
i2u790_40:
	line	324
	
i2l8386:
;wsw.c: 323: }
;wsw.c: 324: if(KInd[j].restart&&nC)
	movf	((c:KolProc@j)),c,w
	movlb	0	; () banked
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_KolProc+0+0)&0ffh,c
	
	btfss	((??_KolProc+0+0)),c,0
	goto	i2u791_41
	goto	i2u791_40
i2u791_41:
	goto	i2l8400
i2u791_40:
	
i2l8388:; BSR set to: 0

	movf	((c:KolProc@nC)),c,w
	btfsc	status,2
	goto	i2u792_41
	goto	i2u792_40
i2u792_41:
	goto	i2l8400
i2u792_40:
	line	326
	
i2l8390:; BSR set to: 0

;wsw.c: 325: {
;wsw.c: 326: KTim[j].cykl=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlb	1	; () banked
	movlw	low(_KTim+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	327
	
i2l8392:; BSR set to: 1

;wsw.c: 327: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j].KL).KFc[i].focus=1;
	clrf	((c:KolProc@i)),c
	goto	i2l8398
	
i2l8394:
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	03h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0+1
	movf	((c:KolProc@i)),c,w
	addwf	(??_KolProc+2+0),c,w
	movwf	c:fsr2l
	movlw	0
	addwfc	(??_KolProc+2+1),c,w
	movwf	1+c:fsr2l
	movlw	(01h & ((1<<1)-1))<<0
	iorwf	(indf2)&0ffh
	
i2l8396:
	incf	((c:KolProc@i)),c
	
i2l8398:
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movlw	01h
	addwf	(??_KolProc+0+0),c
	movf	(??_KolProc+0+0),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	subwf	((c:KolProc@i)),c,w
	btfss	status,0
	goto	i2u793_41
	goto	i2u793_40
i2u793_41:
	goto	i2l8394
i2u793_40:
	line	329
	
i2l8400:
;wsw.c: 328: }
;wsw.c: 329: if(KInd[j].restart||!((*(*(*Klj[j].KL).KOut).CAdr).St.focus))
	movf	((c:KolProc@j)),c,w
	movlb	0	; () banked
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_KolProc+0+0)&0ffh,c
	
	btfsc	((??_KolProc+0+0)),c,0
	goto	i2u794_41
	goto	i2u794_40
i2u794_41:
	goto	i2l8404
i2u794_40:
	
i2l8402:; BSR set to: 0

	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	05h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movff	??_KolProc+2+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0+1
	movff	??_KolProc+3+0,fsr2l
	movff	??_KolProc+3+1,fsr2h
	movf	indf2,w
	movwf	(??_KolProc+5+0)&0ffh,c
	
	btfsc	((??_KolProc+5+0)),c,0
	goto	i2u795_41
	goto	i2u795_40
i2u795_41:
	goto	i2l8410
i2u795_40:
	line	331
	
i2l8404:; BSR set to: 0

;wsw.c: 330: {
;wsw.c: 331: KInd[j].restart=0;
	movf	((c:KolProc@j)),c,w
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<1)-1))<<0)|not (((1<<1)-1)<<0)
	andwf	(indf2)&0ffh
	line	340
;wsw.c: 340: KInd[j].indeks=0;
	movf	((c:KolProc@j)),c,w
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2)&0ffh
	line	341
	
i2l8406:; BSR set to: 0

;wsw.c: 341: KTim[j].ncS=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlb	1	; () banked
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	342
	
i2l8408:; BSR set to: 1

;wsw.c: 342: KTim[j].ndS=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	345
	
i2l8410:
;wsw.c: 344: }
;wsw.c: 345: (*(*(*Klj[j].KL).KOut).CAdr).St.focus=0;
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	05h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movff	??_KolProc+2+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0+1
	movff	??_KolProc+3+0,fsr2l
	movff	??_KolProc+3+1,fsr2h
	movlw	((0 & ((1<<1)-1))<<0)|not (((1<<1)-1)<<0)
	andwf	(indf2)&0ffh
	line	346
	
i2l8412:
;wsw.c: 346: for(i=KInd[j].indeks;i<Klj[j].nPzc;i++)
	movf	((c:KolProc@j)),c,w
	movlb	0	; () banked
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2)&0ffh,w
	rrcf	wreg,f
	andlw	(1<<6)-1
	movwf	((c:KolProc@i)),c
	goto	i2l8492
	line	349
	
i2l8414:
;wsw.c: 347: {
;wsw.c: 349: if (!(*Klj[j].KL).KFc[i].focus)
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	03h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0+1
	movf	((c:KolProc@i)),c,w
	addwf	(??_KolProc+2+0),c,w
	movwf	c:fsr2l
	movlw	0
	addwfc	(??_KolProc+2+1),c,w
	movwf	1+c:fsr2l
	movf	indf2,w
	movwf	(??_KolProc+4+0)&0ffh,c
	
	btfsc	((??_KolProc+4+0)),c,0
	goto	i2u796_41
	goto	i2u796_40
i2u796_41:
	goto	i2l8424
i2u796_40:
	line	351
	
i2l8416:
;wsw.c: 350: {
;wsw.c: 351: if(i>=Klj[j].nPzc-1)
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movlw	01h
	addwf	(??_KolProc+0+0),c
	movf	(??_KolProc+0+0),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movlw	low(-1)
	addwf	(??_KolProc+2+0),c,w
	movwf	(??_KolProc+3+0)&0ffh,c
	clrf	1+(??_KolProc+3+0)&0ffh,c
	movlw	high(-1)
	addwfc	1+(??_KolProc+3+0)&0ffh,c
	movf	((c:KolProc@i)),c,w
	movwf	(??_KolProc+5+0)&0ffh,c
	clrf	(??_KolProc+5+0+1)&0ffh,c

	movf	(??_KolProc+5+1),c,w
	xorlw	80h
	movwf	(??_KolProc+7+0)&0ffh,c
	movf	(??_KolProc+3+0),c,w
	subwf	(??_KolProc+5+0),c,w
	movf	(??_KolProc+3+1),c,w
	xorlw	80h
	subwfb	(??_KolProc+7+0)&0ffh,c,w
	btfss	status,0
	goto	i2u797_41
	goto	i2u797_40
i2u797_41:
	goto	i2l8490
i2u797_40:
	line	353
	
i2l8418:
;wsw.c: 352: {
;wsw.c: 353: KInd[j].indeks=0;
	movf	((c:KolProc@j)),c,w
	movlb	0	; () banked
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2)&0ffh
	line	354
	
i2l8420:; BSR set to: 0

;wsw.c: 354: if(nC) KTim[j].cykl++;
	movf	((c:KolProc@nC)),c,w
	btfsc	status,2
	goto	i2u798_41
	goto	i2u798_40
i2u798_41:
	goto	i2l8490
i2u798_40:
	
i2l8422:; BSR set to: 0

	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlb	1	; () banked
	movlw	low(_KTim+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	goto	i2l8490
	line	359
	
i2l8424:
;wsw.c: 357: }
;wsw.c: 359: KInd[j].indeks=i;
	movff	(c:KolProc@i),??_KolProc+0+0
	movf	((c:KolProc@j)),c,w
	movlb	0	; () banked
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	rlncf	(??_KolProc+0+0),c
	rlncf	(??_KolProc+0+0),c
	movf	(indf2)&0ffh,w
	xorwf	(??_KolProc+0+0),c,w
	andlw	not (((1<<6)-1)<<2)
	xorwf	(??_KolProc+0+0),c,w
	movwf	(indf2)&0ffh
	line	362
	
i2l8426:; BSR set to: 0

;wsw.c: 362: for(k=j+1;k<4;k++)
	incf	((c:KolProc@j)),c,w
	movwf	((c:KolProc@k)),c
	
i2l8428:
	movlw	(04h-1)
	cpfsgt	((c:KolProc@k)),c
	goto	i2u799_41
	goto	i2u799_40
i2u799_41:
	goto	i2l8432
i2u799_40:
	goto	i2l8448
	line	363
	
i2l8432:
;wsw.c: 363: if((*(*Klj[k].KL).KOut).nCykli)
	movf	((c:KolProc@k)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	05h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movlw	02h
	addwf	(??_KolProc+2+0),c
	movff	??_KolProc+2+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	iorlw	0
	btfsc	status,2
	goto	i2u800_41
	goto	i2u800_40
i2u800_41:
	goto	i2l8444
i2u800_40:
	line	365
	
i2l8434:
;wsw.c: 364: {
;wsw.c: 365: for(l=0;l<Klj[k].nPzc;l++) (*Klj[k].KL).KFc[l].focus=0;
	clrf	((c:KolProc@l)),c
	goto	i2l8440
	
i2l8436:
	movf	((c:KolProc@k)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	03h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0+1
	movf	((c:KolProc@l)),c,w
	addwf	(??_KolProc+2+0),c,w
	movwf	c:fsr2l
	movlw	0
	addwfc	(??_KolProc+2+1),c,w
	movwf	1+c:fsr2l
	movlw	((0 & ((1<<1)-1))<<0)|not (((1<<1)-1)<<0)
	andwf	(indf2)&0ffh
	
i2l8438:
	incf	((c:KolProc@l)),c
	
i2l8440:
	movf	((c:KolProc@k)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movlw	01h
	addwf	(??_KolProc+0+0),c
	movf	(??_KolProc+0+0),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	subwf	((c:KolProc@l)),c,w
	btfss	status,0
	goto	i2u801_41
	goto	i2u801_40
i2u801_41:
	goto	i2l8436
i2u801_40:
	line	366
	
i2l8442:
;wsw.c: 366: KTim[k].cykl=0;
	movf	((c:KolProc@k)),c,w
	mullw	03h
	movlb	1	; () banked
	movlw	low(_KTim+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	362
	
i2l8444:
	incf	((c:KolProc@k)),c
	goto	i2l8428
	line	371
	
i2l8448:
;wsw.c: 367: }
;wsw.c: 371: for(k=j+1;k<4;k++)
	incf	((c:KolProc@j)),c,w
	movwf	((c:KolProc@k)),c
	
i2l8450:
	movlw	(04h-1)
	cpfsgt	((c:KolProc@k)),c
	goto	i2u802_41
	goto	i2u802_40
i2u802_41:
	goto	i2l8454
i2u802_40:
	goto	i2l8464
	line	373
	
i2l8454:
;wsw.c: 372: {
;wsw.c: 373: KInd[k].indeks=0;
	movf	((c:KolProc@k)),c,w
	movlb	0	; () banked
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2)&0ffh
	line	374
	
i2l8456:; BSR set to: 0

;wsw.c: 374: KTim[k].ncS=0;
	movf	((c:KolProc@k)),c,w
	mullw	03h
	movlb	1	; () banked
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	375
	
i2l8458:; BSR set to: 1

;wsw.c: 375: KTim[k].ndS=0;
	movf	((c:KolProc@k)),c,w
	mullw	03h
	movlw	low(_KTim+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	371
	
i2l8460:; BSR set to: 1

	incf	((c:KolProc@k)),c
	goto	i2l8450
	line	379
	
i2l8464:
;wsw.c: 376: }
;wsw.c: 379: (*(*(*Klj[j].KL).KOut).CAdr).St.focus=1;
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	05h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movff	??_KolProc+2+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0+1
	movff	??_KolProc+3+0,fsr2l
	movff	??_KolProc+3+1,fsr2h
	movlw	(01h & ((1<<1)-1))<<0
	iorwf	(indf2)&0ffh
	line	383
;wsw.c: 383: if (KTim[j].ndS<(*Klj[j].KL).KWP[i].delay)
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlb	1	; () banked
	movlw	low(_KTim+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	movwf	(??_KolProc+0+0)&0ffh,c
	movf	((c:KolProc@i)),c,w
	mullw	03h
	movff	prodl,??_KolProc+1+0
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+2+0)&0ffh,c
	movff	(??_KolProc+2+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+3+0
	movlw	01h
	addwf	(??_KolProc+3+0),c
	movff	??_KolProc+3+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	addwf	(??_KolProc+1+0),c,w
	movwf	(??_KolProc+4+0)&0ffh,c
	movlw	02h
	addwf	((??_KolProc+4+0)),c
	movff	(??_KolProc+4+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	subwf	((??_KolProc+0+0)),c,w
	btfsc	status,0
	goto	i2u803_41
	goto	i2u803_40
i2u803_41:
	goto	i2l8480
i2u803_40:
	line	385
	
i2l8466:; BSR set to: 1

;wsw.c: 384: {
;wsw.c: 385: KTim[j].ncS++;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	386
;wsw.c: 386: if (KTim[j].ncS>=10)
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	(0Ah-1)
	cpfsgt	indf2
	goto	i2u804_41
	goto	i2u804_40
i2u804_41:
	goto	i2l8470
i2u804_40:
	line	388
	
i2l8468:; BSR set to: 1

;wsw.c: 387: {
;wsw.c: 388: KTim[j].ncS=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	389
;wsw.c: 389: KTim[j].ndS++;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	391
	
i2l8470:; BSR set to: 1

;wsw.c: 390: }
;wsw.c: 391: if((*Klj[j].KL).KAP[i].PAdr==0)
	movf	((c:KolProc@i)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movff	??_KolProc+2+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	addwf	(??_KolProc+0+0),c,w
	movwf	(??_KolProc+3+0)&0ffh,c
	movff	(??_KolProc+3+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0+1
	movf	(??_KolProc+4+1),c,w
	iorwf (??_KolProc+4+0),c,w

	btfss	status,2
	goto	i2u805_41
	goto	i2u805_40
i2u805_41:
	goto	i2l8474
i2u805_40:
	line	393
	
i2l8472:; BSR set to: 1

;wsw.c: 392: {
;wsw.c: 393: (*(*(*Klj[j].KL).KOut).CAdr).St=(*Klj[j].KL).KFP[i].PFrm;
	movf	((c:KolProc@i)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movlw	02h
	addwf	(??_KolProc+2+0),c
	movff	??_KolProc+2+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	addwf	(??_KolProc+0+0),c,w
	movwf	(??_KolProc+3+0)&0ffh,c
	movff	(??_KolProc+3+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0+1
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+6+0)&0ffh,c
	movff	(??_KolProc+6+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+7+0
	movlw	05h
	addwf	(??_KolProc+7+0),c
	movff	??_KolProc+7+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+8+0
	movff	??_KolProc+8+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+9+0
	tblrd	*+
	
	movff	tablat,??_KolProc+9+0+1
	movff	??_KolProc+9+0,fsr2l
	movff	??_KolProc+9+1,fsr2h
	movff	??_KolProc+4+0,postinc2
	movff	??_KolProc+4+1,postdec2

	line	394
;wsw.c: 394: (*(*(*Klj[j].KL).KOut).CAdr).Dt=(*Klj[j].KL).KWP[i].PWrt;
	movf	((c:KolProc@i)),c,w
	mullw	03h
	movff	prodl,??_KolProc+0+0
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movlw	01h
	addwf	(??_KolProc+2+0),c
	movff	??_KolProc+2+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	addwf	(??_KolProc+0+0),c,w
	movwf	(??_KolProc+3+0)&0ffh,c
	movff	(??_KolProc+3+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0+1
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+6+0)&0ffh,c
	movff	(??_KolProc+6+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+7+0
	movlw	05h
	addwf	(??_KolProc+7+0),c
	movff	??_KolProc+7+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+8+0
	movff	??_KolProc+8+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+9+0
	tblrd	*+
	
	movff	tablat,??_KolProc+9+0+1
	movlw	low(02h)
	addwf	(??_KolProc+9+0),c,w
	movwf	c:fsr2l
	movlw	high(02h)
	addwfc	(??_KolProc+9+1),c,w
	movwf	1+c:fsr2l
	movff	??_KolProc+4+0,postinc2
	movff	??_KolProc+4+1,postdec2

	line	395
;wsw.c: 395: }else (*(*(*Klj[j].KL).KOut).CAdr)=*((*Klj[j].KL).KAP[i].PAdr);
	goto	i2l8476
	
i2l8474:; BSR set to: 1

	movf	((c:KolProc@i)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movff	??_KolProc+2+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	addwf	(??_KolProc+0+0),c,w
	movwf	(??_KolProc+3+0)&0ffh,c
	movff	(??_KolProc+3+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0+1
	movff	??_KolProc+4+0,fsr2l
	movff	??_KolProc+4+1,fsr2h
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+6+0)&0ffh,c
	movff	(??_KolProc+6+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+7+0
	movlw	05h
	addwf	(??_KolProc+7+0),c
	movff	??_KolProc+7+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+8+0
	movff	??_KolProc+8+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+9+0
	tblrd	*+
	
	movff	tablat,??_KolProc+9+0+1
	movff	??_KolProc+9+0,fsr1l
	movff	??_KolProc+9+1,fsr1h
	movff	postinc2,postinc1
	movff	postinc2,postinc1
	movff	postinc2,postinc1
	movff	postdec2,postdec1
	movf	postdec1
	movf	postdec1
	line	396
	
i2l8476:; BSR set to: 1

;wsw.c: 396: (*(*(*Klj[j].KL).KOut).CAdr).St.focus=1;
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	05h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movff	??_KolProc+2+0,tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0+1
	movff	??_KolProc+3+0,fsr2l
	movff	??_KolProc+3+1,fsr2h
	movlw	(01h & ((1<<1)-1))<<0
	iorwf	(indf2)&0ffh
	line	397
;wsw.c: 397: break;
	goto	i2l8494
	line	400
	
i2l8480:; BSR set to: 1

;wsw.c: 399: {
;wsw.c: 400: KTim[j].ncS=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	401
;wsw.c: 401: KTim[j].ndS=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	402
	
i2l8482:; BSR set to: 1

;wsw.c: 402: if (KInd[j].indeks>=Klj[j].nPzc-1)
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movlw	01h
	addwf	(??_KolProc+0+0),c
	movf	(??_KolProc+0+0),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movlw	low(-1)
	addwf	(??_KolProc+2+0),c,w
	movwf	(??_KolProc+3+0)&0ffh,c
	clrf	1+(??_KolProc+3+0)&0ffh,c
	movlw	high(-1)
	addwfc	1+(??_KolProc+3+0)&0ffh,c
	movf	((c:KolProc@j)),c,w
	movlb	0	; () banked
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2)&0ffh,w
	rrcf	wreg,f
	andlw	(1<<6)-1
	movwf	(??_KolProc+5+0)&0ffh,c
	clrf	(??_KolProc+5+0+1)&0ffh,c

	movf	(??_KolProc+5+1),c,w
	xorlw	80h
	movwf	(??_KolProc+7+0)&0ffh,c
	movf	(??_KolProc+3+0),c,w
	subwf	(??_KolProc+5+0),c,w
	movf	(??_KolProc+3+1),c,w
	xorlw	80h
	subwfb	(??_KolProc+7+0)&0ffh,c,w
	btfss	status,0
	goto	i2u806_41
	goto	i2u806_40
i2u806_41:
	goto	i2l8490
i2u806_40:
	line	404
	
i2l8484:; BSR set to: 0

;wsw.c: 403: {
;wsw.c: 404: KInd[j].indeks=0;
	movf	((c:KolProc@j)),c,w
	addlw	low(_KInd)
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2)&0ffh
	line	405
	
i2l8486:; BSR set to: 0

;wsw.c: 405: if(nC) KTim[j].cykl++;
	movf	((c:KolProc@nC)),c,w
	btfsc	status,2
	goto	i2u807_41
	goto	i2u807_40
i2u807_41:
	goto	i2l8490
i2u807_40:
	goto	i2l8422
	line	346
	
i2l8490:
	incf	((c:KolProc@i)),c
	
i2l8492:
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movlw	01h
	addwf	(??_KolProc+0+0),c
	movf	(??_KolProc+0+0),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	global __smallconst
movlw	high(__smallconst)
	movwf	tblptrh
	tblrd	*
	
	movf	tablat,w

	subwf	((c:KolProc@i)),c,w
	btfss	status,0
	goto	i2u808_41
	goto	i2u808_40
i2u808_41:
	goto	i2l8414
i2u808_40:
	line	315
	
i2l8494:
	incf	((c:KolProc@j)),c
	
i2l8496:
	movlw	(04h-1)
	cpfsgt	((c:KolProc@j)),c
	goto	i2u809_41
	goto	i2u809_40
i2u809_41:
	goto	i2l8366
i2u809_40:
	line	410
	
i2l126:
	return
	opt stack 0
GLOBAL	__end_of_KolProc
	__end_of_KolProc:
	signat	_KolProc,88
psect	smallconst
	db 0	; dummy byte at the end
	global	__smallconst
	global	__mediumconst
	GLOBAL	__activetblptr
__activetblptr	EQU	2
	psect	intsave_regs,class=BIGRAM,space=1,noexec
	PSECT	rparam,class=COMRAM,space=1,noexec
	GLOBAL	__Lrparam
	FNCONF	rparam,??,?
GLOBAL	__Lparam, __Hparam
GLOBAL	__Lrparam, __Hrparam
__Lparam	EQU	__Lrparam
__Hparam	EQU	__Hrparam
	end
