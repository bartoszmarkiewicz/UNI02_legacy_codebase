

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Wed Jun 11 12:30:09 2014


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     5                           	psect	bss,global,class=RAM,space=1,delta=1
     6                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     7                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97                           
    98                           	psect	text
    99                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   100                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   101                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   102                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   103                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   104                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   105                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   106                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   107                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   108                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   109                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   110                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   111                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   112                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   113                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   114                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   115                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   116                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   117                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   118                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   119                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   120                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   121                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   122                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   123                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   124                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   125                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   126                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   127                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   128                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   129                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   130                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   131                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   132                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   133                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   134                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   135                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   136                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   137                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   138                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   139                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   140                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   141                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   142                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   143                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   144                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   145                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   146                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   147                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   148                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   149                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   150                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   151                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   152                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   153                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   154                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   155                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   156                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   157                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   158                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   159                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   160                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   161                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   162                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   163                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   164                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   165                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   166                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   167                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   168                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   169                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   170                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   171                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   172                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   173                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   174                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   175                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   176                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   177                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   178                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   179                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   180                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   181                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   182                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   183                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   184                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   185                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   186                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   187                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   188                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   189                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   190                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   191                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   192                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   193                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   194                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   195                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   196                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   197                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   198                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   199  0010C4                     _Moduluj:
   200                           ;	_k assigned to ?a_ModPruCW2+0
   201  000000                     _ModPruCW2$k	set	?a_ModPruCW2
   202                           ;	_m assigned to ?a_ModDkCW2+0
   203  000000                     _ModDkCW2$m	set	?a_ModDkCW2
   204                           ;	_m assigned to ?a_ModZgCW2+0
   205  000000                     _ModZgCW2$m	set	?a_ModZgCW2
   206                           ;	_k assigned to ?a_ModPruCW5+1
   207  000000                     _ModPruCW5$k	set	?a_ModPruCW5+1
   208                           ;	_tmp assigned to ?a_ModPruCW5+0
   209  000000                     _ModPruCW5$tmp	set	?a_ModPruCW5
   210                           ;	_m assigned to ?a_ModDkCW5+2
   211  000000                     _ModDkCW5$m	set	?a_ModDkCW5+2
   212                           ;	_k assigned to ?a_ModDkCW5+1
   213  000000                     _ModDkCW5$k	set	?a_ModDkCW5+1
   214                           ;	_ada assigned to ?a_ModDkCW5+0
   215  000000                     _ModDkCW5$ada	set	?a_ModDkCW5
   216                           ;	_m assigned to ?a_ModZgCW5+0
   217  000000                     _ModZgCW5$m	set	?a_ModZgCW5
   218                           ;	_k assigned to ?a_ModPruCW4+0
   219  000000                     _ModPruCW4$k	set	?a_ModPruCW4
   220                           ;	_m assigned to ?a_ModDkCW4+0
   221  000000                     _ModDkCW4$m	set	?a_ModDkCW4
   222                           ;	_m assigned to ?a_ModZgCW4+0
   223  000000                     _ModZgCW4$m	set	?a_ModZgCW4
   224                           ;	_m assigned to ?a_FirstPCW4+1
   225  000000                     _FirstPCW4$m	set	?a_FirstPCW4+1
   226                           ;	_p assigned to ?a_FirstPCW4+0
   227  000000                     _FirstPCW4$p	set	?a_FirstPCW4
   228                           ;	_k assigned to ?a_ModPruCW+0
   229  000000                     _ModPruCW$k	set	?a_ModPruCW
   230                           ;	_m assigned to ?a_ModDkCW+5
   231  000000                     _ModDkCW$m	set	?a_ModDkCW+5
   232                           ;	_k assigned to ?a_ModDkCW+2
   233  000000                     _ModDkCW$k	set	?a_ModDkCW+2
   234                           ;	_i assigned to ?a_ModDkCW+1
   235  000000                     _ModDkCW$i	set	?a_ModDkCW+1
   236                           ;	_ada assigned to ?a_ModDkCW+0
   237  000000                     _ModDkCW$ada	set	?a_ModDkCW
   238                           ;	_m assigned to ?a_ModZgCW+0
   239  000000                     _ModZgCW$m	set	?a_ModZgCW
   240                           ;	_m assigned to ?a_FirstPCW+1
   241  000000                     _FirstPCW$m	set	?a_FirstPCW+1
   242  000000                     
   243                           ;rgl.c: 28: unsigned int wpw;
   244  0010C4  D834               	call	_StartMCW	;wreg free
   245                           ;rgl.c: 32: ReadDataCW();
   246  0010C6  DA31               	call	_ReadDataCW	;wreg free
   247                           ;rgl.c: 33: ModToCW();
   248  0010C8  DA25               	call	_ModToCW	;wreg free
   249                           ;rgl.c: 34: ModZgCW();
   250  0010CA  DA34               	call	_ModZgCW	;wreg free
   251                           ;rgl.c: 35: ModDkCW();
   252  0010CC  DB35               	call	_ModDkCW	;wreg free
   253                           ;rgl.c: 36: if(RTdS(3)>10)
   254  0010CE  0E03               	movlw	3
   255  0010D0  EC28  F045         	call	_RTdS
   256  0010D4  6E00               	movwf	btemp,c
   257  0010D6  0E0B               	movlw	11
   258  0010D8  5C00               	subwf	btemp,w,c
   259  0010DA  E325               	bnc	l11
   260                           ;rgl.c: 37: {
   261  0010DC  0E03               	movlw	3
   262  0010DE  EC16  F045         	call	_StartRTdS
   263                           ;rgl.c: 39: if(tmr<0xff) tmr++;
   264  0010E2  CF31  F000         	movff	_tmr,btemp
   265  0010E6  2800               	incf	btemp,w,c
   266  0010E8  E002               	bz	l12
   267  0010EA  010F               	movlb	_tmr shr (0+8)
   268  0010EC  2B31               	incf	_tmr& (0+255),f,b
   269  0010EE                     l12:
   270                           ;rgl.c: 40: if(tmr2<0xff) tmr2++;
   271  0010EE  CF32  F000         	movff	_tmr2,btemp
   272  0010F2  2800               	incf	btemp,w,c
   273  0010F4  E002               	bz	l13
   274  0010F6  010F               	movlb	_tmr2 shr (0+8)
   275  0010F8  2B32               	incf	_tmr2& (0+255),f,b
   276  0010FA                     l13:
   277                           ;rgl.c: 41: if(tmr3<0xff) tmr3++;
   278  0010FA  CF33  F000         	movff	_tmr3,btemp
   279  0010FE  2800               	incf	btemp,w,c
   280  001100  E002               	bz	l14
   281  001102  010F               	movlb	_tmr3 shr (0+8)
   282  001104  2B33               	incf	_tmr3& (0+255),f,b
   283  001106                     l14:
   284                           ;rgl.c: 42: if(tmr4<0xff) tmr4++;
   285  001106  CF34  F000         	movff	_tmr4,btemp
   286  00110A  2800               	incf	btemp,w,c
   287  00110C  E002               	bz	l15
   288  00110E  010F               	movlb	_tmr4 shr (0+8)
   289  001110  2B34               	incf	_tmr4& (0+255),f,b
   290  001112                     l15:
   291                           ;rgl.c: 43: if(tmee<0xff) tmee++;
   292  001112  CF30  F000         	movff	_tmee,btemp
   293  001116  2800               	incf	btemp,w,c
   294  001118  E002               	bz	l16
   295  00111A  010F               	movlb	_tmee shr (0+8)
   296  00111C  2B30               	incf	_tmee& (0+255),f,b
   297  00111E                     l16:
   298                           ;rgl.c: 44: IncConstCW();
   299  00111E  D9FD               	call	_IncConstCW	;wreg free
   300                           ;rgl.c: 45: IncMaxCW();
   301  001120  ECF6  F00E         	call	_IncMaxCW	;wreg free
   302                           ;rgl.c: 46: ModPruCW();
   303  001124  DBA1               	call	_ModPruCW	;wreg free
   304  001126                     l11:
   305                           ;rgl.c: 47: }
   306  001126  ECB2  F00F         	call	_ModPrzCW	;wreg free
   307                           ;rgl.c: 49: SetPWM_CW();
   308  00112A  EF8C  F017         	goto	_SetPWM_CW4	;wreg free
   309                           ;rgl.c: 50: }
   310  00112E                     __end_of_Moduluj:
   311                           ;rgl.c: 80: void StartMCW(void)
   312                           ;rgl.c: 81: {
   313  00112E                     _StartMCW:
   314  000000                     
   315                           ;rgl.c: 82: if(rgl.btcw) return;
   316  00112E  0100               	movlb	_rgl shr (0+8)
   317  001130  B352               	btfsc	_rgl& (0+255),1,b
   318  001132  0012               	return	
   319                           ;rgl.c: 83: StartRTdS(3);
   320  001134  0E03               	movlw	3
   321  001136  EC16  F045         	call	_StartRTdS
   322                           ;rgl.c: 84: DtCO.dDCO=0;
   323  00113A  0101               	movlb	(_DtCO+9) shr (0+8)
   324  00113C  6B46               	clrf	(_DtCO+9)& (0+255),b
   325                           ;rgl.c: 85: DtCW.dDCW=0;
   326  00113E  0101               	movlb	(_DtCW+8) shr (0+8)
   327  001140  6B54               	clrf	(_DtCW+8)& (0+255),b
   328                           ;rgl.c: 86: DtCO.indCO=0;
   329  001142  0101               	movlb	(_DtCO+10) shr (0+8)
   330  001144  6B47               	clrf	(_DtCO+10)& (0+255),b
   331                           ;rgl.c: 87: DtCW.indCW=0;
   332  001146  0101               	movlb	(_DtCW+10) shr (0+8)
   333  001148  6B56               	clrf	(_DtCW+10)& (0+255),b
   334                           ;rgl.c: 88: rgl.fz=0;
   335  00114A  0100               	movlb	_rgl shr (0+8)
   336  00114C  9552               	bcf	_rgl& (0+255),2,b
   337                           ;rgl.c: 89: rgl.med_up=0;
   338  00114E  9752               	bcf	_rgl& (0+255),3,b
   339                           ;rgl.c: 90: rgl.fast_up=0;
   340  001150  9952               	bcf	_rgl& (0+255),4,b
   341                           ;rgl.c: 91: rgl.srp=0;
   342  001152  6B59               	clrf	(_rgl+7)& (0+255),b
   343                           ;rgl.c: 92: rgl.ytmp=0;
   344  001154  6B58               	clrf	(_rgl+6)& (0+255),b
   345                           ;rgl.c: 93: rgl.nmod=0;
   346  001156  9B52               	bcf	_rgl& (0+255),5,b
   347                           ;rgl.c: 94: rgl.del1s=0;
   348  001158  9D52               	bcf	_rgl& (0+255),6,b
   349                           ;rgl.c: 95: rgl.inv_mod=0;
   350  00115A  9153               	bcf	(_rgl+1)& (0+255),0,b
   351                           ;rgl.c: 96: rgl.xmod=FirstPCW();
   352  00115C  D834               	call	_FirstPCW	;wreg free
   353  00115E  CFE8 F05A          	movff	wreg,_rgl+8
   354                           ;rgl.c: 97: tmr=1;
   355  001162  0E01               	movlw	1
   356  001164  CFE8 FF31          	movff	wreg,_tmr
   357                           ;rgl.c: 98: tmr2=1;
   358  001168  CFE8 FF32          	movff	wreg,_tmr2
   359                           ;rgl.c: 99: tmr3=1;
   360  00116C  CFE8 FF33          	movff	wreg,_tmr3
   361                           ;rgl.c: 100: tmr4=1;
   362  001170  CFE8 FF34          	movff	wreg,_tmr4
   363                           ;rgl.c: 101: tmee=0;
   364  001174  010F               	movlb	_tmee shr (0+8)
   365  001176  6B30               	clrf	_tmee& (0+255),b
   366                           ;rgl.c: 102: pwm_center=PWM.MDMOD+(PWM.MGMOD-PWM
      +                          .MDMOD)/2;
   367  001178  0E02               	movlw	2
   368  00117A  6E02               	movwf	btemp+2,c
   369  00117C  6A03               	clrf	btemp+3,c
   370  00117E  C061  FFE8         	movff	_PWM+5,wreg
   371  001182  C062  F000         	movff	_PWM+6,btemp
   372  001186  6A01               	clrf	btemp+1,c
   373  001188  5E00               	subwf	btemp,f,c
   374  00118A  0E00               	movlw	0
   375  00118C  5A01               	subwfb	btemp+1,f,c
   376  00118E  EC31  F04A         	call	awdiv
   377  001192  C061  F000         	movff	_PWM+5,btemp
   378  001196  5000               	movf	btemp,w,c
   379  001198  2404               	addwf	btemp+4,w,c
   380  00119A  CFE8 FF2C          	movff	wreg,_pwm_center
   381                           ;rgl.c: 103: pwm_kwr=PWM.MDMOD+(PWM.MGMOD-PWM.MD
      +                          MOD)/4;
   382  00119E  0E04               	movlw	4
   383  0011A0  6E02               	movwf	btemp+2,c
   384  0011A2  6A03               	clrf	btemp+3,c
   385  0011A4  C061  FFE8         	movff	_PWM+5,wreg
   386  0011A8  C062  F000         	movff	_PWM+6,btemp
   387  0011AC  6A01               	clrf	btemp+1,c
   388  0011AE  5E00               	subwf	btemp,f,c
   389  0011B0  0E00               	movlw	0
   390  0011B2  5A01               	subwfb	btemp+1,f,c
   391  0011B4  EC31  F04A         	call	awdiv
   392  0011B8  C061  F000         	movff	_PWM+5,btemp
   393  0011BC  5000               	movf	btemp,w,c
   394  0011BE  2404               	addwf	btemp+4,w,c
   395  0011C0  CFE8 FF2D          	movff	wreg,_pwm_kwr
   396                           ;rgl.c: 104: }
   397  0011C4  0012               	return	
   398  0011C6                     __end_of_StartMCW:
   399                           ;rgl.c: 121: unsigned char FirstPCW(void)
   400                           ;rgl.c: 122: {
   401  0011C6                     _FirstPCW:
   402  000000                     
   403                           ;	_p assigned to ?a_FirstPCW+0
   404  000000                     _FirstPCW$p	set	?a_FirstPCW
   405                           ;rgl.c: 123: signed long m;
   406  0011C6  0E04               	movlw	4
   407  0011C8  6E02               	movwf	btemp+2,c
   408  0011CA  6A03               	clrf	btemp+3,c
   409  0011CC  C061  FFE8         	movff	_PWM+5,wreg
   410  0011D0  C070  F000         	movff	_PWM+20,btemp
   411  0011D4  6A01               	clrf	btemp+1,c
   412  0011D6  5E00               	subwf	btemp,f,c
   413  0011D8  0E00               	movlw	0
   414  0011DA  5A01               	subwfb	btemp+1,f,c
   415  0011DC  EC31  F04A         	call	awdiv
   416  0011E0  5004               	movf	btemp+4,w,c
   417  0011E2  6ED9               	movwf	fsr2l,c
   418                           ;rgl.c: 129: if(PWM.MMAXCW>(PWM.FIRSTPB+tmp))
   419  0011E4  C076  F000         	movff	_PWM+26,btemp
   420  0011E8  6A01               	clrf	btemp+1,c
   421  0011EA  50D9               	movf	fsr2l,w,c
   422  0011EC  C070  F002         	movff	_PWM+20,btemp+2
   423  0011F0  6A03               	clrf	btemp+3,c
   424  0011F2  2602               	addwf	btemp+2,f,c
   425  0011F4  0E00               	movlw	0
   426  0011F6  2203               	addwfc	btemp+3,f,c
   427  0011F8  5003               	movf	btemp+3,w,c
   428  0011FA  0A80               	xorlw	128
   429  0011FC  6E04               	movwf	btemp+4,c
   430  0011FE  5001               	movf	btemp+1,w,c
   431  001200  0A80               	xorlw	128
   432  001202  5C04               	subwf	btemp+4,w,c
   433  001204  E102               	bnz	u85
   434  001206  5000               	movf	btemp,w,c
   435  001208  5C02               	subwf	btemp+2,w,c
   436  00120A                     u85:
   437  00120A  E205               	bc	l20
   438                           ;rgl.c: 130: {
   439  00120C  50D9               	movf	fsr2l,w,c
   440  00120E  0100               	movlb	(_PWM+20) shr (0+8)
   441  001210  2570               	addwf	(_PWM+20)& (0+255),w,b
   442  001212  6EE1               	movwf	fsr1l,c
   443                           ;rgl.c: 132: }
   444  001214  D002               	goto	l21
   445  001216                     l20:
   446                           ;rgl.c: 133: else
   447  001216  C076  FFE1         	movff	_PWM+26,fsr1l
   448  00121A                     l21:
   449                           ;rgl.c: 136: }
   450  00121A  0E13               	movlw	19
   451  00121C  0101               	movlb	(_DtCW+2) shr (0+8)
   452  00121E  654E               	cpfsgt	(_DtCW+2)& (0+255),b
   453  001220  D06D               	goto	l22
   454  001222  0E3D               	movlw	61
   455  001224  614E               	cpfslt	(_DtCW+2)& (0+255),b
   456  001226  D06A               	goto	l22
   457                           ;rgl.c: 140: {
   458  001228  0E0A               	movlw	10
   459  00122A  6E02               	movwf	btemp+2,c
   460  00122C  6A03               	clrf	btemp+3,c
   461  00122E  0E3C               	movlw	60
   462  001230  6E00               	movwf	btemp,c
   463  001232  6A01               	clrf	btemp+1,c
   464  001234  C14E  FFE8         	movff	_DtCW+2,wreg
   465  001238  5E00               	subwf	btemp,f,c
   466  00123A  0E00               	movlw	0
   467  00123C  5A01               	subwfb	btemp+1,f,c
   468  00123E  EC78  F04A         	call	awmul
   469  001242  0100               	movlb	__Lparam shr (0+8)
   470  001244  C004  F0F1         	movff	btemp+4,?a_FirstPCW+1
   471  001248  C005  F0F2         	movff	btemp+5,?a_FirstPCW+2
   472  00124C  0E00               	movlw	0
   473  00124E  BFF2               	btfsc	(?a_FirstPCW+2)^(__Lparam& (0+65280)),7,b
   474  001250  0EFF               	movlw	-1
   475  001252  6FF3               	movwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
   476  001254  6FF4               	movwf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
   477                           ;rgl.c: 142: m=m/(60-20);
   478  001256  0E28               	movlw	40
   479  001258  6E04               	movwf	btemp+4,c
   480  00125A  6A05               	clrf	btemp+5,c
   481  00125C  6A06               	clrf	btemp+6,c
   482  00125E  6A07               	clrf	btemp+7,c
   483  001260  0EF1               	movlw	low (?a_FirstPCW+1)
   484  001262  6EE9               	movwf	fsr0l,c
   485  001264  0E00               	movlw	high (?a_FirstPCW+1)
   486  001266  6EEA               	movwf	fsr0h,c
   487  001268  ECB5  F04A         	call	aldiv_f
   488                           ;rgl.c: 143: m=m*(maxmod-PWM.MDMOD);
   489  00126C  C061  FFE8         	movff	_PWM+5,wreg
   490  001270  5CE1               	subwf	fsr1l,w,c
   491  001272  6E04               	movwf	btemp+4,c
   492  001274  6A05               	clrf	btemp+5,c
   493  001276  A0D8               	btfss	status,0,c
   494  001278  0605               	decf	btemp+5,f,c
   495  00127A  6A06               	clrf	btemp+6,c
   496  00127C  BE05               	btfsc	btemp+5,7,c
   497  00127E  0606               	decf	btemp+6,f,c
   498  001280  5006               	movf	btemp+6,w,c
   499  001282  6E07               	movwf	btemp+7,c
   500  001284  0EF1               	movlw	low (?a_FirstPCW+1)
   501  001286  6EE9               	movwf	fsr0l,c
   502  001288  0E00               	movlw	high (?a_FirstPCW+1)
   503  00128A  6EEA               	movwf	fsr0h,c
   504  00128C  ECAB  F04A         	call	almul_f
   505                           ;rgl.c: 144: if(m<0) m=0;
   506  001290  AFF4               	btfss	(?a_FirstPCW+4)^(__Lparam& (0+65280)),7,b
   507  001292  D004               	goto	l23
   508  001294  6BF1               	clrf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),b
   509  001296  6BF2               	clrf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),b
   510  001298  6BF3               	clrf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
   511  00129A  6BF4               	clrf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
   512  00129C                     l23:
   513                           ;rgl.c: 145: m=m/10+PWM.MDMOD;
   514  00129C  0E0A               	movlw	10
   515  00129E  6E04               	movwf	btemp+4,c
   516  0012A0  6A05               	clrf	btemp+5,c
   517  0012A2  6A06               	clrf	btemp+6,c
   518  0012A4  6A07               	clrf	btemp+7,c
   519  0012A6  C0F1  F000         	movff	?a_FirstPCW+1,btemp
   520  0012AA  C0F2  F001         	movff	?a_FirstPCW+2,btemp+1
   521  0012AE  C0F3  F002         	movff	?a_FirstPCW+3,btemp+2
   522  0012B2  C0F4  F003         	movff	?a_FirstPCW+4,btemp+3
   523  0012B6  ECE2  F049         	call	aldiv
   524  0012BA  C061  FFE8         	movff	_PWM+5,wreg
   525  0012BE  2400               	addwf	btemp,w,c
   526  0012C0  0100               	movlb	__Lparam shr (0+8)
   527  0012C2  6FF1               	movwf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),b
   528  0012C4  0E00               	movlw	0
   529  0012C6  2001               	addwfc	btemp+1,w,c
   530  0012C8  6FF2               	movwf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),b
   531  0012CA  0E00               	movlw	0
   532  0012CC  2002               	addwfc	btemp+2,w,c
   533  0012CE  6FF3               	movwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
   534  0012D0  0E00               	movlw	0
   535  0012D2  2003               	addwfc	btemp+3,w,c
   536  0012D4  6FF4               	movwf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
   537                           ;rgl.c: 146: if(m>0xff) p=maxmod;
   538  0012D6  51F4               	movf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),w
   539  0012D8  0A80               	xorlw	128
   540  0012DA  0F80               	addlw	128
   541  0012DC  E108               	bnz	u135
   542  0012DE  0E00               	movlw	0
   543  0012E0  5DF3               	subwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),w
   544  0012E2  E105               	bnz	u135
   545  0012E4  0E01               	movlw	1
   546  0012E6  5DF2               	subwf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),w
   547  0012E8  E102               	bnz	u135
   548  0012EA  0E00               	movlw	0
   549  0012EC  5DF1               	subwf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),w
   550  0012EE                     u135:
   551  0012EE  E303               	bnc	l24
   552  0012F0  50E1               	movf	fsr1l,w,c
   553  0012F2                     L1:
   554  0012F2  6FF0               	movwf	?a_FirstPCW^(__Lparam& (0+65280)),b
   555  0012F4  D010               	goto	l26
   556  0012F6                     l24:
   557                           ;rgl.c: 147: else p=m;
   558  0012F6  0100               	movlb	__Lparam shr (0+8)
   559  0012F8  51F1               	movf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),w
   560  0012FA  D7FB               	goto	L1
   561                           ;rgl.c: 148: }
   562  0012FC                     l22:
   563                           ;rgl.c: 149: else
   564  0012FC  0E14               	movlw	20
   565  0012FE  0101               	movlb	(_DtCW+2) shr (0+8)
   566  001300  614E               	cpfslt	(_DtCW+2)& (0+255),b
   567  001302  D003               	goto	l27
   568  001304  50E1               	movf	fsr1l,w,c
   569  001306  0100               	movlb	__Lparam shr (0+8)
   570  001308  6FF0               	movwf	?a_FirstPCW^(__Lparam& (0+65280)),b
   571  00130A                     l27:
   572                           ;rgl.c: 152: if(DtCW.CW>60) p=PWM.MDMOD;
   573  00130A  0E3C               	movlw	60
   574  00130C  0101               	movlb	(_DtCW+2) shr (0+8)
   575  00130E  654E               	cpfsgt	(_DtCW+2)& (0+255),b
   576  001310  D002               	goto	l26
   577  001312  C061  F0F0         	movff	_PWM+5,?a_FirstPCW
   578  001316                     l26:
   579                           ;rgl.c: 153: }
   580  001316  0E0A               	movlw	10
   581  001318  6E02               	movwf	btemp+2,c
   582  00131A  6A03               	clrf	btemp+3,c
   583  00131C  C14F  F000         	movff	_DtCW+3,btemp
   584  001320  6A01               	clrf	btemp+1,c
   585  001322  0EDD               	movlw	221
   586  001324  2600               	addwf	btemp,f,c
   587  001326  0EFF               	movlw	255
   588  001328  2201               	addwfc	btemp+1,f,c
   589  00132A  EC78  F04A         	call	awmul
   590  00132E  0100               	movlb	__Lparam shr (0+8)
   591  001330  C004  F0F1         	movff	btemp+4,?a_FirstPCW+1
   592  001334  C005  F0F2         	movff	btemp+5,?a_FirstPCW+2
   593  001338  0E00               	movlw	0
   594  00133A  BFF2               	btfsc	(?a_FirstPCW+2)^(__Lparam& (0+65280)),7,b
   595  00133C  0EFF               	movlw	-1
   596  00133E  6FF3               	movwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
   597  001340  6FF4               	movwf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
   598                           ;rgl.c: 157: m=m/(60-35);
   599  001342  0E19               	movlw	25
   600  001344  6E04               	movwf	btemp+4,c
   601  001346  6A05               	clrf	btemp+5,c
   602  001348  6A06               	clrf	btemp+6,c
   603  00134A  6A07               	clrf	btemp+7,c
   604  00134C  0EF1               	movlw	low (?a_FirstPCW+1)
   605  00134E  6EE9               	movwf	fsr0l,c
   606  001350  0E00               	movlw	high (?a_FirstPCW+1)
   607  001352  6EEA               	movwf	fsr0h,c
   608  001354  ECB5  F04A         	call	aldiv_f
   609                           ;rgl.c: 158: m=m*(maxmod-PWM.MDMOD);
   610  001358  C061  FFE8         	movff	_PWM+5,wreg
   611  00135C  5CE1               	subwf	fsr1l,w,c
   612  00135E  6E04               	movwf	btemp+4,c
   613  001360  6A05               	clrf	btemp+5,c
   614  001362  A0D8               	btfss	status,0,c
   615  001364  0605               	decf	btemp+5,f,c
   616  001366  6A06               	clrf	btemp+6,c
   617  001368  BE05               	btfsc	btemp+5,7,c
   618  00136A  0606               	decf	btemp+6,f,c
   619  00136C  5006               	movf	btemp+6,w,c
   620  00136E  6E07               	movwf	btemp+7,c
   621  001370  0EF1               	movlw	low (?a_FirstPCW+1)
   622  001372  6EE9               	movwf	fsr0l,c
   623  001374  0E00               	movlw	high (?a_FirstPCW+1)
   624  001376  6EEA               	movwf	fsr0h,c
   625  001378  ECAB  F04A         	call	almul_f
   626                           ;rgl.c: 159: if(m<0) m=0;
   627  00137C  AFF4               	btfss	(?a_FirstPCW+4)^(__Lparam& (0+65280)),7,b
   628  00137E  D004               	goto	l29
   629  001380  6BF1               	clrf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),b
   630  001382  6BF2               	clrf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),b
   631  001384  6BF3               	clrf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
   632  001386  6BF4               	clrf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
   633  001388                     l29:
   634                           ;rgl.c: 160: m=m/10+PWM.MDMOD;
   635  001388  0E0A               	movlw	10
   636  00138A  6E04               	movwf	btemp+4,c
   637  00138C  6A05               	clrf	btemp+5,c
   638  00138E  6A06               	clrf	btemp+6,c
   639  001390  6A07               	clrf	btemp+7,c
   640  001392  C0F1  F000         	movff	?a_FirstPCW+1,btemp
   641  001396  C0F2  F001         	movff	?a_FirstPCW+2,btemp+1
   642  00139A  C0F3  F002         	movff	?a_FirstPCW+3,btemp+2
   643  00139E  C0F4  F003         	movff	?a_FirstPCW+4,btemp+3
   644  0013A2  ECE2  F049         	call	aldiv
   645  0013A6  C061  FFE8         	movff	_PWM+5,wreg
   646  0013AA  2400               	addwf	btemp,w,c
   647  0013AC  0100               	movlb	__Lparam shr (0+8)
   648  0013AE  6FF1               	movwf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),b
   649  0013B0  0E00               	movlw	0
   650  0013B2  2001               	addwfc	btemp+1,w,c
   651  0013B4  6FF2               	movwf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),b
   652  0013B6  0E00               	movlw	0
   653  0013B8  2002               	addwfc	btemp+2,w,c
   654  0013BA  6FF3               	movwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
   655  0013BC  0E00               	movlw	0
   656  0013BE  2003               	addwfc	btemp+3,w,c
   657  0013C0  6FF4               	movwf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
   658                           ;rgl.c: 161: if(m>0xff) p2=maxmod;
   659  0013C2  51F4               	movf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),w
   660  0013C4  0A80               	xorlw	128
   661  0013C6  0F80               	addlw	128
   662  0013C8  E108               	bnz	u175
   663  0013CA  0E00               	movlw	0
   664  0013CC  5DF3               	subwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),w
   665  0013CE  E105               	bnz	u175
   666  0013D0  0E01               	movlw	1
   667  0013D2  5DF2               	subwf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),w
   668  0013D4  E102               	bnz	u175
   669  0013D6  0E00               	movlw	0
   670  0013D8  5DF1               	subwf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),w
   671  0013DA                     u175:
   672  0013DA  E302               	bnc	l30
   673  0013DC  50E1               	movf	fsr1l,w,c
   674  0013DE  D002               	goto	L2
   675  0013E0                     l30:
   676                           ;rgl.c: 162: else p2=m;
   677  0013E0  0100               	movlb	__Lparam shr (0+8)
   678  0013E2  51F1               	movf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),w
   679  0013E4                     L2:
   680  0013E4  6ED9               	movwf	fsr2l,c
   681                           ;rgl.c: 165: if(p>p2) p=p2;
   682  0013E6  0100               	movlb	__Lparam shr (0+8)
   683  0013E8  51F0               	movf	?a_FirstPCW^(__Lparam& (0+65280)),w
   684  0013EA  60D9               	cpfslt	fsr2l,c
   685  0013EC  D002               	goto	l32
   686  0013EE  50D9               	movf	fsr2l,w,c
   687  0013F0  6FF0               	movwf	?a_FirstPCW^(__Lparam& (0+65280)),b
   688  0013F2                     l32:
   689                           ;rgl.c: 168: if(DtCW.DCW>=0&&DtCW.DCW<=40)
   690  0013F2  C153  F000         	movff	_DtCW+7,btemp
   691  0013F6  C153  FFE8         	movff	_DtCW+7,wreg
   692  0013FA  0A80               	xorlw	128
   693  0013FC  BE00               	btfsc	btemp,7,c
   694  0013FE  D06C               	goto	L30
   695  001400  0F57               	addlw	-169
   696  001402  E267               	bc	l33
   697                           ;rgl.c: 169: {
   698  001404  0E0A               	movlw	10
   699  001406  6E02               	movwf	btemp+2,c
   700  001408  6A03               	clrf	btemp+3,c
   701  00140A  C153  F000         	movff	_DtCW+7,btemp
   702  00140E  6A01               	clrf	btemp+1,c
   703  001410  BE00               	btfsc	btemp,7,c
   704  001412  0601               	decf	btemp+1,f,c
   705  001414  EC78  F04A         	call	awmul
   706  001418  0100               	movlb	__Lparam shr (0+8)
   707  00141A  C004  F0F1         	movff	btemp+4,?a_FirstPCW+1
   708  00141E  C005  F0F2         	movff	btemp+5,?a_FirstPCW+2
   709  001422  0E00               	movlw	0
   710  001424  BFF2               	btfsc	(?a_FirstPCW+2)^(__Lparam& (0+65280)),7,b
   711  001426  0EFF               	movlw	-1
   712  001428  6FF3               	movwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
   713  00142A  6FF4               	movwf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
   714                           ;rgl.c: 171: m=m/(40-0);
   715  00142C  0E28               	movlw	40
   716  00142E  6E04               	movwf	btemp+4,c
   717  001430  6A05               	clrf	btemp+5,c
   718  001432  6A06               	clrf	btemp+6,c
   719  001434  6A07               	clrf	btemp+7,c
   720  001436  0EF1               	movlw	low (?a_FirstPCW+1)
   721  001438  6EE9               	movwf	fsr0l,c
   722  00143A  0E00               	movlw	high (?a_FirstPCW+1)
   723  00143C  6EEA               	movwf	fsr0h,c
   724  00143E  ECB5  F04A         	call	aldiv_f
   725                           ;rgl.c: 172: m=m*(maxmod-PWM.MDMOD);
   726  001442  C061  FFE8         	movff	_PWM+5,wreg
   727  001446  5CE1               	subwf	fsr1l,w,c
   728  001448  6E04               	movwf	btemp+4,c
   729  00144A  6A05               	clrf	btemp+5,c
   730  00144C  A0D8               	btfss	status,0,c
   731  00144E  0605               	decf	btemp+5,f,c
   732  001450  6A06               	clrf	btemp+6,c
   733  001452  BE05               	btfsc	btemp+5,7,c
   734  001454  0606               	decf	btemp+6,f,c
   735  001456  5006               	movf	btemp+6,w,c
   736  001458  6E07               	movwf	btemp+7,c
   737  00145A  0EF1               	movlw	low (?a_FirstPCW+1)
   738  00145C  6EE9               	movwf	fsr0l,c
   739  00145E  0E00               	movlw	high (?a_FirstPCW+1)
   740  001460  6EEA               	movwf	fsr0h,c
   741  001462  ECAB  F04A         	call	almul_f
   742                           ;rgl.c: 173: if(m<0) m=0;
   743  001466  AFF4               	btfss	(?a_FirstPCW+4)^(__Lparam& (0+65280)),7,b
   744  001468  D004               	goto	l34
   745  00146A  6BF1               	clrf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),b
   746  00146C  6BF2               	clrf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),b
   747  00146E  6BF3               	clrf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
   748  001470  6BF4               	clrf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
   749  001472                     l34:
   750                           ;rgl.c: 174: m=m/10+PWM.MDMOD;
   751  001472  0E0A               	movlw	10
   752  001474  6E04               	movwf	btemp+4,c
   753  001476  6A05               	clrf	btemp+5,c
   754  001478  6A06               	clrf	btemp+6,c
   755  00147A  6A07               	clrf	btemp+7,c
   756  00147C  C0F1  F000         	movff	?a_FirstPCW+1,btemp
   757  001480  C0F2  F001         	movff	?a_FirstPCW+2,btemp+1
   758  001484  C0F3  F002         	movff	?a_FirstPCW+3,btemp+2
   759  001488  C0F4  F003         	movff	?a_FirstPCW+4,btemp+3
   760  00148C  ECE2  F049         	call	aldiv
   761  001490  C061  FFE8         	movff	_PWM+5,wreg
   762  001494  2400               	addwf	btemp,w,c
   763  001496  0100               	movlb	__Lparam shr (0+8)
   764  001498  6FF1               	movwf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),b
   765  00149A  0E00               	movlw	0
   766  00149C  2001               	addwfc	btemp+1,w,c
   767  00149E  6FF2               	movwf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),b
   768  0014A0  0E00               	movlw	0
   769  0014A2  2002               	addwfc	btemp+2,w,c
   770  0014A4  6FF3               	movwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
   771  0014A6  0E00               	movlw	0
   772  0014A8  2003               	addwfc	btemp+3,w,c
   773  0014AA  6FF4               	movwf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
   774                           ;rgl.c: 175: if(m>0xff) p2=maxmod;
   775  0014AC  51F4               	movf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),w
   776  0014AE  0A80               	xorlw	128
   777  0014B0  0F80               	addlw	128
   778  0014B2  E108               	bnz	u235
   779  0014B4  0E00               	movlw	0
   780  0014B6  5DF3               	subwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),w
   781  0014B8  E105               	bnz	u235
   782  0014BA  0E01               	movlw	1
   783  0014BC  5DF2               	subwf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),w
   784  0014BE  E102               	bnz	u235
   785  0014C0  0E00               	movlw	0
   786  0014C2  5DF1               	subwf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),w
   787  0014C4                     u235:
   788  0014C4  E303               	bnc	l35
   789  0014C6  50E1               	movf	fsr1l,w,c
   790  0014C8                     L3:
   791  0014C8  6ED9               	movwf	fsr2l,c
   792  0014CA  D00F               	goto	l37
   793  0014CC                     l35:
   794                           ;rgl.c: 176: else p2=m;
   795  0014CC  0100               	movlb	__Lparam shr (0+8)
   796  0014CE  51F1               	movf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),w
   797  0014D0  D7FB               	goto	L3
   798                           ;rgl.c: 177: }
   799  0014D2                     l33:
   800                           ;rgl.c: 178: else
   801  0014D2  C153  FFE8         	movff	_DtCW+7,wreg
   802  0014D6  0A80               	xorlw	128
   803  0014D8                     L30:
   804  0014D8  0F57               	addlw	-169
   805  0014DA  E302               	bnc	l38
   806  0014DC  50E1               	movf	fsr1l,w,c
   807  0014DE  6ED9               	movwf	fsr2l,c
   808  0014E0                     l38:
   809                           ;rgl.c: 181: if(DtCW.DCW<0) p2=PWM.MDMOD;
   810  0014E0  C153  F000         	movff	_DtCW+7,btemp
   811  0014E4  BE00               	btfsc	btemp,7,c
   812  0014E6  C061  FFD9         	movff	_PWM+5,fsr2l
   813  0014EA                     l37:
   814                           ;rgl.c: 182: }
   815  0014EA  0100               	movlb	__Lparam shr (0+8)
   816  0014EC  51F0               	movf	?a_FirstPCW^(__Lparam& (0+65280)),w
   817  0014EE  60D9               	cpfslt	fsr2l,c
   818  0014F0  D002               	goto	l40
   819  0014F2  50D9               	movf	fsr2l,w,c
   820  0014F4  6FF0               	movwf	?a_FirstPCW^(__Lparam& (0+65280)),b
   821  0014F6                     l40:
   822                           ;rgl.c: 187: return p;
   823  0014F6  0100               	movlb	__Lparam shr (0+8)
   824  0014F8  51F0               	movf	?a_FirstPCW^(__Lparam& (0+65280)),w
   825  0014FA  0012               	return	
   826                           ;rgl.c: 188: }
   827  0014FC                     __end_of_FirstPCW:
   828                           ;rgl.c: 191: void ClrMod(void)
   829                           ;rgl.c: 192: {
   830  0014FC                     _ClrMod:
   831  000000                     
   832                           ;rgl.c: 193: rgl.fz=0;
   833  0014FC  0100               	movlb	_rgl shr (0+8)
   834  0014FE  9552               	bcf	_rgl& (0+255),2,b
   835                           ;rgl.c: 194: rgl.med_up=0;
   836  001500  9752               	bcf	_rgl& (0+255),3,b
   837                           ;rgl.c: 195: rgl.fast_up=0;
   838  001502  9952               	bcf	_rgl& (0+255),4,b
   839                           ;rgl.c: 196: rgl.xmod=PWM.BufPWM;
   840  001504  C05D  F05A         	movff	_PWM+1,_rgl+8
   841                           ;rgl.c: 197: rgl.srp=0;
   842  001508  6B59               	clrf	(_rgl+7)& (0+255),b
   843                           ;rgl.c: 198: rgl.ytmp=0;
   844  00150A  6B58               	clrf	(_rgl+6)& (0+255),b
   845                           ;rgl.c: 199: rgl.nmod=0;
   846  00150C  9B52               	bcf	_rgl& (0+255),5,b
   847                           ;rgl.c: 200: rgl.del1s=0;
   848  00150E  9D52               	bcf	_rgl& (0+255),6,b
   849                           ;rgl.c: 201: rgl.inv_mod=0;
   850  001510  9153               	bcf	(_rgl+1)& (0+255),0,b
   851                           ;rgl.c: 202: }
   852  001512  0012               	return	
   853  001514                     __end_of_ClrMod:
   854                           ;rgl.c: 205: void ModToCW(void)
   855                           ;rgl.c: 206: {
   856  001514                     _ModToCW:
   857  000000                     
   858                           ;rgl.c: 207: rgl.btcw=1;
   859  001514  0100               	movlb	_rgl shr (0+8)
   860  001516  8352               	bsf	_rgl& (0+255),1,b
   861                           ;rgl.c: 208: }
   862  001518  0012               	return	
   863  00151A                     __end_of_ModToCW:
   864                           ;rgl.c: 211: void IncConstCW(void)
   865                           ;rgl.c: 212: {
   866  00151A                     _IncConstCW:
   867  000000                     
   868                           ;rgl.c: 213: if(Tstoi()) rgl.ytmp++;
   869  00151A  ECC4  F020         	call	_Tstoi	;wreg free
   870  00151E  0100               	movlb	(_rgl+6) shr (0+8)
   871  001520  E302               	bnc	L31
   872  001522  2B58               	incf	(_rgl+6)& (0+255),f,b
   873  001524  0C01               	retlw	1
   874                           ;rgl.c: 214: else rgl.ytmp=0;
   875  001526                     L31:
   876  001526  6B58               	clrf	(_rgl+6)& (0+255),b
   877                           ;rgl.c: 215: }
   878  001528  0012               	return	
   879  00152A                     __end_of_IncConstCW:
   880                           ;rgl.c: 218: void ReadDataCW(void)
   881                           ;rgl.c: 219: {
   882  00152A                     _ReadDataCW:
   883  000000                     
   884                           ;rgl.c: 220: rgl.x_t=DtCW.DCW;
   885  00152A  C153  F054         	movff	_DtCW+7,_rgl+2
   886                           ;rgl.c: 222: rgl.x_dt=DtCW.dDCW;
   887  00152E  C154  F056         	movff	_DtCW+8,_rgl+4
   888                           ;rgl.c: 224: }
   889  001532  0012               	return	
   890  001534                     __end_of_ReadDataCW:
   891                           ;rgl.c: 227: void ModZgCW(void)
   892                           ;rgl.c: 228: {
   893  001534                     _ModZgCW:
   894  000000                     
   895                           ;rgl.c: 229: signed long m;
   896  001534  0100               	movlb	_rgl shr (0+8)
   897  001536  A552               	btfss	_rgl& (0+255),2,b
   898  001538  D00C               	goto	l48
   899                           ;rgl.c: 232: {
   900  00153A  0E05               	movlw	5
   901  00153C  ECCB  F020         	call	_Tnizsza
   902  001540  A0D8               	btfss	status,0,c
   903  001542  0012               	return	
   904                           ;rgl.c: 234: {
   905  001544  C05D  F05A         	movff	_PWM+1,_rgl+8
   906                           ;rgl.c: 236: rgl.srp=0;
   907  001548  0100               	movlb	(_rgl+7) shr (0+8)
   908  00154A  6B59               	clrf	(_rgl+7)& (0+255),b
   909                           ;rgl.c: 237: rgl.ytmp=0;
   910  00154C  6B58               	clrf	(_rgl+6)& (0+255),b
   911                           ;rgl.c: 238: rgl.nmod=0;
   912  00154E  9B52               	bcf	_rgl& (0+255),5,b
   913                           ;rgl.c: 239: rgl.del1s=0;
   914  001550  9D52               	bcf	_rgl& (0+255),6,b
   915                           ;rgl.c: 240: }
   916                           ;rgl.c: 241: else return;
   917  001552                     l48:
   918                           ;rgl.c: 242: }
   919  001552  0100               	movlb	_rgl shr (0+8)
   920  001554  BB52               	btfsc	_rgl& (0+255),5,b
   921  001556  D027               	goto	l51
   922  001558  ECF3  F020         	call	_Trowna	;wreg free
   923  00155C  E204               	bc	u340
   924  00155E  0E00               	movlw	0
   925  001560  ECD8  F020         	call	_Twyzsza
   926  001564  E320               	bnc	l51
   927  001566                     u340:
   928                           ;rgl.c: 247: {
   929  001566  0100               	movlb	_rgl shr (0+8)
   930  001568  8552               	bsf	_rgl& (0+255),2,b
   931                           ;rgl.c: 249: rgl.fast_up=0;
   932  00156A  9952               	bcf	_rgl& (0+255),4,b
   933                           ;rgl.c: 250: rgl.med_up=0;
   934  00156C  9752               	bcf	_rgl& (0+255),3,b
   935                           ;rgl.c: 251: rgl.srp=PWM.BufPWM;
   936  00156E  C05D  F059         	movff	_PWM+1,_rgl+7
   937                           ;rgl.c: 252: rgl.xmod=PWM.BufPWM;
   938  001572  C05D  F05A         	movff	_PWM+1,_rgl+8
   939                           ;rgl.c: 253: if(PWM.MMAXCW>PWM.MGMOD)
   940  001576  C076  FFE8         	movff	_PWM+26,wreg
   941  00157A  0100               	movlb	(_PWM+6) shr (0+8)
   942  00157C  6162               	cpfslt	(_PWM+6)& (0+255),b
   943  00157E  D009               	goto	l52
   944                           ;rgl.c: 254: {
   945  001580  C05A  FFE8         	movff	_rgl+8,wreg
   946  001584  6162               	cpfslt	(_PWM+6)& (0+255),b
   947  001586  0012               	return	
   948                           ;rgl.c: 256: {
   949  001588  C062  F059         	movff	_PWM+6,_rgl+7
   950                           ;rgl.c: 258: rgl.xmod=PWM.MGMOD;
   951  00158C  C062  F05A         	movff	_PWM+6,_rgl+8
   952                           ;rgl.c: 259: }
   953  001590  0012               	return	
   954  001592                     l52:
   955                           ;rgl.c: 261: else
   956  001592  C05A  FFE8         	movff	_rgl+8,wreg
   957  001596  0100               	movlb	(_PWM+26) shr (0+8)
   958  001598  6176               	cpfslt	(_PWM+26)& (0+255),b
   959  00159A  0012               	return	
   960                           ;rgl.c: 264: {
   961  00159C  C076  F059         	movff	_PWM+26,_rgl+7
   962                           ;rgl.c: 266: rgl.xmod=PWM.MMAXCW;
   963  0015A0  C076  F05A         	movff	_PWM+26,_rgl+8
   964                           ;rgl.c: 267: }
   965  0015A4  0012               	return	
   966  0015A6                     l51:
   967                           ;rgl.c: 270: }
   968  0015A6  C061  FFE8         	movff	_PWM+5,wreg
   969  0015AA  0100               	movlb	(_rgl+8) shr (0+8)
   970  0015AC  5D5A               	subwf	(_rgl+8)& (0+255),w,b
   971  0015AE  E318               	bnc	l56
   972  0015B0  0E0A               	movlw	10
   973  0015B2  6E02               	movwf	btemp+2,c
   974  0015B4  6A03               	clrf	btemp+3,c
   975  0015B6  C061  FFE8         	movff	_PWM+5,wreg
   976  0015BA  C05A  F000         	movff	_rgl+8,btemp
   977  0015BE  6A01               	clrf	btemp+1,c
   978  0015C0  5E00               	subwf	btemp,f,c
   979  0015C2  0E00               	movlw	0
   980  0015C4  5A01               	subwfb	btemp+1,f,c
   981  0015C6  EC78  F04A         	call	awmul
   982  0015CA  0100               	movlb	__Lparam shr (0+8)
   983  0015CC  C004  F0F0         	movff	btemp+4,?a_ModZgCW
   984  0015D0  C005  F0F1         	movff	btemp+5,?a_ModZgCW+1
   985  0015D4  0E00               	movlw	0
   986  0015D6  BFF1               	btfsc	(?a_ModZgCW+1)^(__Lparam& (0+65280)),7,b
   987  0015D8  0EFF               	movlw	-1
   988  0015DA  6FF2               	movwf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),b
   989  0015DC  6FF3               	movwf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),b
   990  0015DE  D005               	goto	l57
   991  0015E0                     l56:
   992                           ;rgl.c: 272: else m=0;
   993  0015E0  0100               	movlb	__Lparam shr (0+8)
   994  0015E2  6BF0               	clrf	?a_ModZgCW^(__Lparam& (0+65280)),b
   995  0015E4  6BF1               	clrf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),b
   996  0015E6  6BF2               	clrf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),b
   997  0015E8  6BF3               	clrf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),b
   998  0015EA                     l57:
   999                           ;rgl.c: 273: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
  1000  0015EA  C15A  FFE8         	movff	_DtCW+14,wreg
  1001  0015EE  C159  F000         	movff	_DtCW+13,btemp
  1002  0015F2  5C00               	subwf	btemp,w,c
  1003  0015F4  6E04               	movwf	btemp+4,c
  1004  0015F6  6A05               	clrf	btemp+5,c
  1005  0015F8  A0D8               	btfss	status,0,c
  1006  0015FA  0605               	decf	btemp+5,f,c
  1007  0015FC  6A06               	clrf	btemp+6,c
  1008  0015FE  BE05               	btfsc	btemp+5,7,c
  1009  001600  0606               	decf	btemp+6,f,c
  1010  001602  5006               	movf	btemp+6,w,c
  1011  001604  6E07               	movwf	btemp+7,c
  1012  001606  0EF0               	movlw	low ?a_ModZgCW
  1013  001608  6EE9               	movwf	fsr0l,c
  1014  00160A  0E00               	movlw	high ?a_ModZgCW
  1015  00160C  6EEA               	movwf	fsr0h,c
  1016  00160E  ECB5  F04A         	call	aldiv_f
  1017                           ;rgl.c: 274: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
  1018  001612  C15A  FFE8         	movff	_DtCW+14,wreg
  1019  001616  C158  F000         	movff	_DtCW+12,btemp
  1020  00161A  5C00               	subwf	btemp,w,c
  1021  00161C  6E04               	movwf	btemp+4,c
  1022  00161E  6A05               	clrf	btemp+5,c
  1023  001620  A0D8               	btfss	status,0,c
  1024  001622  0605               	decf	btemp+5,f,c
  1025  001624  6A06               	clrf	btemp+6,c
  1026  001626  BE05               	btfsc	btemp+5,7,c
  1027  001628  0606               	decf	btemp+6,f,c
  1028  00162A  5006               	movf	btemp+6,w,c
  1029  00162C  6E07               	movwf	btemp+7,c
  1030  00162E  0EF0               	movlw	low ?a_ModZgCW
  1031  001630  6EE9               	movwf	fsr0l,c
  1032  001632  0E00               	movlw	high ?a_ModZgCW
  1033  001634  6EEA               	movwf	fsr0h,c
  1034  001636  ECAB  F04A         	call	almul_f
  1035                           ;rgl.c: 275: if(m<0) m=0;
  1036  00163A  0100               	movlb	__Lparam shr (0+8)
  1037  00163C  AFF3               	btfss	(?a_ModZgCW+3)^(__Lparam& (0+65280)),7,b
  1038  00163E  D004               	goto	l58
  1039  001640  6BF0               	clrf	?a_ModZgCW^(__Lparam& (0+65280)),b
  1040  001642  6BF1               	clrf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),b
  1041  001644  6BF2               	clrf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),b
  1042  001646  6BF3               	clrf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),b
  1043  001648                     l58:
  1044                           ;rgl.c: 276: m=m/10+PWM.MDMOD;
  1045  001648  0E0A               	movlw	10
  1046  00164A  6E04               	movwf	btemp+4,c
  1047  00164C  6A05               	clrf	btemp+5,c
  1048  00164E  6A06               	clrf	btemp+6,c
  1049  001650  6A07               	clrf	btemp+7,c
  1050  001652  C0F0  F000         	movff	?a_ModZgCW,btemp
  1051  001656  C0F1  F001         	movff	?a_ModZgCW+1,btemp+1
  1052  00165A  C0F2  F002         	movff	?a_ModZgCW+2,btemp+2
  1053  00165E  C0F3  F003         	movff	?a_ModZgCW+3,btemp+3
  1054  001662  ECE2  F049         	call	aldiv
  1055  001666  C061  FFE8         	movff	_PWM+5,wreg
  1056  00166A  2400               	addwf	btemp,w,c
  1057  00166C  0100               	movlb	__Lparam shr (0+8)
  1058  00166E  6FF0               	movwf	?a_ModZgCW^(__Lparam& (0+65280)),b
  1059  001670  0E00               	movlw	0
  1060  001672  2001               	addwfc	btemp+1,w,c
  1061  001674  6FF1               	movwf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),b
  1062  001676  0E00               	movlw	0
  1063  001678  2002               	addwfc	btemp+2,w,c
  1064  00167A  6FF2               	movwf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),b
  1065  00167C  0E00               	movlw	0
  1066  00167E  2003               	addwfc	btemp+3,w,c
  1067  001680  6FF3               	movwf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),b
  1068                           ;rgl.c: 277: if(m>0xff)
  1069  001682  51F3               	movf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),w
  1070  001684  0A80               	xorlw	128
  1071  001686  0F80               	addlw	128
  1072  001688  E108               	bnz	u405
  1073  00168A  0E00               	movlw	0
  1074  00168C  5DF2               	subwf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),w
  1075  00168E  E105               	bnz	u405
  1076  001690  0E01               	movlw	1
  1077  001692  5DF1               	subwf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),w
  1078  001694  E102               	bnz	u405
  1079  001696  0E00               	movlw	0
  1080  001698  5DF0               	subwf	?a_ModZgCW^(__Lparam& (0+65280)),w
  1081  00169A                     u405:
  1082                           ;rgl.c: 278: {
  1083  00169A  0100               	movlb	_rgl shr (0+8)
  1084  00169C  E304               	bnc	L32
  1085  00169E  9552               	bcf	_rgl& (0+255),2,b
  1086                           ;rgl.c: 280: rgl.tmp_pwm=rgl.xmod;
  1087  0016A0  C05A  F05B         	movff	_rgl+8,_rgl+9
  1088                           ;rgl.c: 281: return;
  1089  0016A4  0012               	return	
  1090                           ;rgl.c: 282: }
  1091  0016A6                     L32:
  1092  0016A6  A552               	btfss	_rgl& (0+255),2,b
  1093  0016A8  D01C               	goto	l60
  1094  0016AA  C05A  F000         	movff	_rgl+8,btemp
  1095  0016AE  6A01               	clrf	btemp+1,c
  1096  0016B0  6A02               	clrf	btemp+2,c
  1097  0016B2  6A03               	clrf	btemp+3,c
  1098  0016B4  0100               	movlb	__Lparam shr (0+8)
  1099  0016B6  51F3               	movf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),w
  1100  0016B8  0A80               	xorlw	128
  1101  0016BA  6E04               	movwf	btemp+4,c
  1102  0016BC  5003               	movf	btemp+3,w,c
  1103  0016BE  0A80               	xorlw	128
  1104  0016C0  5C04               	subwf	btemp+4,w,c
  1105  0016C2  E108               	bnz	u425
  1106  0016C4  5002               	movf	btemp+2,w,c
  1107  0016C6  5DF2               	subwf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),w
  1108  0016C8  E105               	bnz	u425
  1109  0016CA  5001               	movf	btemp+1,w,c
  1110  0016CC  5DF1               	subwf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),w
  1111  0016CE  E102               	bnz	u425
  1112  0016D0  5000               	movf	btemp,w,c
  1113  0016D2  5DF0               	subwf	?a_ModZgCW^(__Lparam& (0+65280)),w
  1114  0016D4                     u425:
  1115  0016D4  E206               	bc	l60
  1116                           ;rgl.c: 284: rgl.srp=(rgl.xmod-m);
  1117  0016D6  0100               	movlb	__Lparam shr (0+8)
  1118  0016D8  51F0               	movf	?a_ModZgCW^(__Lparam& (0+65280)),w
  1119  0016DA  0100               	movlb	(_rgl+8) shr (0+8)
  1120  0016DC  5D5A               	subwf	(_rgl+8)& (0+255),w,b
  1121  0016DE  CFE8 F059          	movff	wreg,_rgl+7
  1122  0016E2                     l60:
  1123                           ;rgl.c: 285: m+=rgl.srp;
  1124  0016E2  C059  FFE8         	movff	_rgl+7,wreg
  1125  0016E6  0100               	movlb	__Lparam shr (0+8)
  1126  0016E8  27F0               	addwf	?a_ModZgCW^(__Lparam& (0+65280)),f,b
  1127  0016EA  0E01               	movlw	1
  1128  0016EC  B0D8               	btfsc	status,0,c
  1129  0016EE  27F1               	addwf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),f,b
  1130  0016F0  B0D8               	btfsc	status,0,c
  1131  0016F2  27F2               	addwf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),f,b
  1132  0016F4  B0D8               	btfsc	status,0,c
  1133  0016F6  27F3               	addwf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),f,b
  1134                           ;rgl.c: 286: if(m>rgl.xmod) p=rgl.xmod;
  1135  0016F8  C05A  F000         	movff	_rgl+8,btemp
  1136  0016FC  6A01               	clrf	btemp+1,c
  1137  0016FE  6A02               	clrf	btemp+2,c
  1138  001700  6A03               	clrf	btemp+3,c
  1139  001702  5003               	movf	btemp+3,w,c
  1140  001704  0A80               	xorlw	128
  1141  001706  6E04               	movwf	btemp+4,c
  1142  001708  51F3               	movf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),w
  1143  00170A  0A80               	xorlw	128
  1144  00170C  5C04               	subwf	btemp+4,w,c
  1145  00170E  E108               	bnz	u445
  1146  001710  51F2               	movf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),w
  1147  001712  5C02               	subwf	btemp+2,w,c
  1148  001714  E105               	bnz	u445
  1149  001716  51F1               	movf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),w
  1150  001718  5C01               	subwf	btemp+1,w,c
  1151  00171A  E102               	bnz	u445
  1152  00171C  51F0               	movf	?a_ModZgCW^(__Lparam& (0+65280)),w
  1153  00171E  5C00               	subwf	btemp,w,c
  1154  001720                     u445:
  1155  001720  E203               	bc	l61
  1156  001722  C05A  FFD9         	movff	_rgl+8,fsr2l
  1157  001726  D003               	goto	l62
  1158  001728                     l61:
  1159                           ;rgl.c: 287: else p=m;
  1160  001728  0100               	movlb	__Lparam shr (0+8)
  1161  00172A  51F0               	movf	?a_ModZgCW^(__Lparam& (0+65280)),w
  1162  00172C  6ED9               	movwf	fsr2l,c
  1163  00172E                     l62:
  1164                           ;rgl.c: 288: rgl.fz=0;
  1165  00172E  0100               	movlb	_rgl shr (0+8)
  1166  001730  9552               	bcf	_rgl& (0+255),2,b
  1167                           ;rgl.c: 289: rgl.tmp_pwm=p;
  1168  001732  CFD9 F05B          	movff	fsr2l,_rgl+9
  1169                           ;rgl.c: 290: }
  1170  001736  0012               	return	
  1171  001738                     __end_of_ModZgCW:
  1172                           ;rgl.c: 293: void ModDkCW(void)
  1173                           ;rgl.c: 294: {
  1174  001738                     _ModDkCW:
  1175  000000                     
  1176                           ;rgl.c: 295: signed long m;
  1177  001738  0100               	movlb	_rgl shr (0+8)
  1178  00173A  A552               	btfss	_rgl& (0+255),2,b
  1179  00173C  0012               	return	
  1180                           ;rgl.c: 300: ada=DtCW.AC_CW-DtCW.DAD_CW;
  1181  00173E  C15A  FFE8         	movff	_DtCW+14,wreg
  1182  001742  0101               	movlb	(_DtCW+12) shr (0+8)
  1183  001744  5D58               	subwf	(_DtCW+12)& (0+255),w,b
  1184  001746  0100               	movlb	__Lparam shr (0+8)
  1185  001748  6FF0               	movwf	?a_ModDkCW^(__Lparam& (0+65280)),b
  1186                           ;rgl.c: 301: if(Trowna()) return;
  1187  00174A  ECF3  F020         	call	_Trowna	;wreg free
  1188  00174E  B0D8               	btfsc	status,0,c
  1189  001750  0012               	return	
  1190                           ;rgl.c: 302: k=1.0;
  1191  001752  0100               	movlb	__Lparam shr (0+8)
  1192  001754  6BF2               	clrf	(?a_ModDkCW+2)^(__Lparam& (0+65280)),b
  1193  001756  0E80               	movlw	128
  1194  001758  6FF3               	movwf	(?a_ModDkCW+3)^(__Lparam& (0+65280)),b
  1195  00175A  0E3F               	movlw	63
  1196  00175C  6FF4               	movwf	(?a_ModDkCW+4)^(__Lparam& (0+65280)),b
  1197                           ;rgl.c: 303: if(Twyzsza(0)||Tnizsza(0))
  1198  00175E  0E00               	movlw	0
  1199  001760  ECD8  F020         	call	_Twyzsza
  1200  001764  E204               	bc	u490
  1201  001766  0E00               	movlw	0
  1202  001768  ECCB  F020         	call	_Tnizsza
  1203  00176C  E31D               	bnc	l66
  1204  00176E                     u490:
  1205                           ;rgl.c: 304: {
  1206  00176E  0E01               	movlw	1
  1207  001770  0100               	movlb	__Lparam shr (0+8)
  1208  001772  6FF1               	movwf	(?a_ModDkCW+1)^(__Lparam& (0+65280)),b
  1209  001774                     l67:
  1210                           ;rgl.c: 306: {
  1211  001774  0100               	movlb	__Lparam shr (0+8)
  1212  001776  51F1               	movf	(?a_ModDkCW+1)^(__Lparam& (0+65280)),w
  1213  001778  ECD8  F020         	call	_Twyzsza
  1214  00177C  E205               	bc	u520
  1215  00177E  0100               	movlb	__Lparam shr (0+8)
  1216  001780  51F1               	movf	(?a_ModDkCW+1)^(__Lparam& (0+65280)),w
  1217  001782  ECCB  F020         	call	_Tnizsza
  1218  001786  E310               	bnc	l66
  1219  001788                     u520:
  1220  001788  6A03               	clrf	btemp+3,c
  1221  00178A  0E80               	movlw	128
  1222  00178C  6E04               	movwf	btemp+4,c
  1223  00178E  0E3E               	movlw	62
  1224  001790  6E05               	movwf	btemp+5,c
  1225  001792  0EF2               	movlw	low (?a_ModDkCW+2)
  1226  001794  6EE9               	movwf	fsr0l,c
  1227  001796  0E00               	movlw	high (?a_ModDkCW+2)
  1228  001798  6EEA               	movwf	fsr0h,c
  1229  00179A  ECA3  F04A         	call	ftadd_f
  1230                           ;rgl.c: 308: else break;
  1231  00179E  0100               	movlb	__Lparam shr (0+8)
  1232  0017A0  2BF1               	incf	(?a_ModDkCW+1)^(__Lparam& (0+65280)),f,b
  1233  0017A2  0E05               	movlw	5
  1234  0017A4  65F1               	cpfsgt	(?a_ModDkCW+1)^(__Lparam& (0+65280)),b
  1235  0017A6  D7E6               	goto	l67
  1236  0017A8                     l66:
  1237                           ;rgl.c: 309: }
  1238  0017A8  C0F0  F000         	movff	?a_ModDkCW,btemp
  1239  0017AC  EC58  F04A         	call	abtoft
  1240  0017B0  C0F2  F003         	movff	?a_ModDkCW+2,btemp+3
  1241  0017B4  C0F3  F004         	movff	?a_ModDkCW+3,btemp+4
  1242  0017B8  C0F4  F005         	movff	?a_ModDkCW+4,btemp+5
  1243  0017BC  EC0A  F048         	call	ftmul
  1244  0017C0  C000  F0F9         	movff	btemp,?a_ModDkCW+9
  1245  0017C4  C001  F0FA         	movff	btemp+1,?a_ModDkCW+10
  1246  0017C8  C002  F0FB         	movff	btemp+2,?a_ModDkCW+11
  1247  0017CC  C059  F000         	movff	_rgl+7,btemp
  1248  0017D0  EC63  F04A         	call	lbtoft
  1249  0017D4  C0F9  F003         	movff	?a_ModDkCW+9,btemp+3
  1250  0017D8  C0FA  F004         	movff	?a_ModDkCW+10,btemp+4
  1251  0017DC  C0FB  F005         	movff	?a_ModDkCW+11,btemp+5
  1252  0017E0  ECFF  F048         	call	ftadd
  1253  0017E4  ECBB  F049         	call	fttol
  1254  0017E8  C000  F0F5         	movff	btemp,?a_ModDkCW+5
  1255  0017EC  C001  F0F6         	movff	btemp+1,?a_ModDkCW+6
  1256  0017F0  C002  F0F7         	movff	btemp+2,?a_ModDkCW+7
  1257  0017F4  C003  F0F8         	movff	btemp+3,?a_ModDkCW+8
  1258                           ;rgl.c: 312: if(m>rgl.xmod) p=rgl.xmod;
  1259  0017F8  C05A  F000         	movff	_rgl+8,btemp
  1260  0017FC  6A01               	clrf	btemp+1,c
  1261  0017FE  6A02               	clrf	btemp+2,c
  1262  001800  6A03               	clrf	btemp+3,c
  1263  001802  0100               	movlb	__Lparam shr (0+8)
  1264  001804  5003               	movf	btemp+3,w,c
  1265  001806  0A80               	xorlw	128
  1266  001808  6E04               	movwf	btemp+4,c
  1267  00180A  51F8               	movf	(?a_ModDkCW+8)^(__Lparam& (0+65280)),w
  1268  00180C  0A80               	xorlw	128
  1269  00180E  5C04               	subwf	btemp+4,w,c
  1270  001810  E108               	bnz	u545
  1271  001812  51F7               	movf	(?a_ModDkCW+7)^(__Lparam& (0+65280)),w
  1272  001814  5C02               	subwf	btemp+2,w,c
  1273  001816  E105               	bnz	u545
  1274  001818  51F6               	movf	(?a_ModDkCW+6)^(__Lparam& (0+65280)),w
  1275  00181A  5C01               	subwf	btemp+1,w,c
  1276  00181C  E102               	bnz	u545
  1277  00181E  51F5               	movf	(?a_ModDkCW+5)^(__Lparam& (0+65280)),w
  1278  001820  5C00               	subwf	btemp,w,c
  1279  001822                     u545:
  1280  001822  E203               	bc	l72
  1281  001824  C05A  FFD9         	movff	_rgl+8,fsr2l
  1282  001828  D01C               	goto	l73
  1283  00182A                     l72:
  1284                           ;rgl.c: 313: else
  1285  00182A  C061  F000         	movff	_PWM+5,btemp
  1286  00182E  6A01               	clrf	btemp+1,c
  1287  001830  6A02               	clrf	btemp+2,c
  1288  001832  6A03               	clrf	btemp+3,c
  1289  001834  0100               	movlb	__Lparam shr (0+8)
  1290  001836  51F8               	movf	(?a_ModDkCW+8)^(__Lparam& (0+65280)),w
  1291  001838  0A80               	xorlw	128
  1292  00183A  6E04               	movwf	btemp+4,c
  1293  00183C  5003               	movf	btemp+3,w,c
  1294  00183E  0A80               	xorlw	128
  1295  001840  5C04               	subwf	btemp+4,w,c
  1296  001842  E108               	bnz	u555
  1297  001844  5002               	movf	btemp+2,w,c
  1298  001846  5DF7               	subwf	(?a_ModDkCW+7)^(__Lparam& (0+65280)),w
  1299  001848  E105               	bnz	u555
  1300  00184A  5001               	movf	btemp+1,w,c
  1301  00184C  5DF6               	subwf	(?a_ModDkCW+6)^(__Lparam& (0+65280)),w
  1302  00184E  E102               	bnz	u555
  1303  001850  5000               	movf	btemp,w,c
  1304  001852  5DF5               	subwf	(?a_ModDkCW+5)^(__Lparam& (0+65280)),w
  1305  001854                     u555:
  1306  001854  E203               	bc	l74
  1307  001856  C061  FFD9         	movff	_PWM+5,fsr2l
  1308  00185A  D003               	goto	l73
  1309  00185C                     l74:
  1310                           ;rgl.c: 315: else p=m;
  1311  00185C  0100               	movlb	__Lparam shr (0+8)
  1312  00185E  51F5               	movf	(?a_ModDkCW+5)^(__Lparam& (0+65280)),w
  1313  001860  6ED9               	movwf	fsr2l,c
  1314  001862                     l73:
  1315                           ;rgl.c: 316: rgl.tmp_pwm=p;
  1316  001862  CFD9 F05B          	movff	fsr2l,_rgl+9
  1317                           ;rgl.c: 317: }
  1318  001866  0012               	return	
  1319  001868                     __end_of_ModDkCW:
  1320                           ;rgl.c: 322: void ModPruCW(void)
  1321                           ;rgl.c: 323: {
  1322  001868                     _ModPruCW:
  1323  000000                     
  1324                           ;rgl.c: 324: static unsigned char l,m,o,p,q,r,s;
  1325  001868  0100               	movlb	_rgl shr (0+8)
  1326  00186A  B552               	btfsc	_rgl& (0+255),2,b
  1327  00186C  D114               	goto	l77
  1328                           ;rgl.c: 329: {
  1329  00186E  010F               	movlb	F1542 shr (0+8)
  1330  001870  6B13               	clrf	F1542& (0+255),b
  1331                           ;rgl.c: 331: m=0;
  1332  001872  010F               	movlb	F1543 shr (0+8)
  1333  001874  6B14               	clrf	F1543& (0+255),b
  1334                           ;rgl.c: 332: o=0;
  1335  001876  010F               	movlb	F1544 shr (0+8)
  1336  001878  6B15               	clrf	F1544& (0+255),b
  1337                           ;rgl.c: 333: p=0;
  1338  00187A  010F               	movlb	F1545 shr (0+8)
  1339  00187C  6B16               	clrf	F1545& (0+255),b
  1340                           ;rgl.c: 334: if(q<255) q++;
  1341  00187E  CF17  F000         	movff	F1546,btemp
  1342  001882  2800               	incf	btemp,w,c
  1343  001884  E002               	bz	l78
  1344  001886  010F               	movlb	F1546 shr (0+8)
  1345  001888  2B17               	incf	F1546& (0+255),f,b
  1346  00188A                     l78:
  1347                           ;rgl.c: 335: if(s<255) s++;
  1348  00188A  CF19  F000         	movff	F1548,btemp
  1349  00188E  2800               	incf	btemp,w,c
  1350  001890  E002               	bz	l79
  1351  001892  010F               	movlb	F1548 shr (0+8)
  1352  001894  2B19               	incf	F1548& (0+255),f,b
  1353  001896                     l79:
  1354                           ;rgl.c: 336: if(DtCW._newPCW) s=0;
  1355  001896  0101               	movlb	(_DtCW+1) shr (0+8)
  1356  001898  A14D               	btfss	(_DtCW+1)& (0+255),0,b
  1357  00189A  D002               	goto	l80
  1358  00189C  010F               	movlb	F1548 shr (0+8)
  1359  00189E  6B19               	clrf	F1548& (0+255),b
  1360  0018A0                     l80:
  1361                           ;rgl.c: 337: if(Tnizsza(0))
  1362  0018A0  0E00               	movlw	0
  1363  0018A2  ECCB  F020         	call	_Tnizsza
  1364  0018A6  A0D8               	btfss	status,0,c
  1365  0018A8  0012               	return	
  1366                           ;rgl.c: 338: {
  1367  0018AA  0E0A               	movlw	10
  1368  0018AC  ECCB  F020         	call	_Tnizsza
  1369  0018B0  B0D8               	btfsc	status,0,c
  1370  0018B2  0012               	return	
  1371                           ;rgl.c: 340: {
  1372  0018B4  0100               	movlb	__Lparam shr (0+8)
  1373  0018B6  6BF0               	clrf	?a_ModPruCW^(__Lparam& (0+65280)),b
  1374                           ;rgl.c: 342: {
  1375  0018B8  CF2C  FFE8         	movff	_pwm_center,wreg
  1376  0018BC  0100               	movlb	(_rgl+9) shr (0+8)
  1377  0018BE  5D5B               	subwf	(_rgl+9)& (0+255),w,b
  1378  0018C0  E330               	bnc	l83
  1379                           ;rgl.c: 344: {
  1380  0018C2  0E05               	movlw	5
  1381  0018C4  ECCB  F020         	call	_Tnizsza
  1382  0018C8  E30A               	bnc	l84
  1383  0018CA  ECC4  F020         	call	_Tstoi	;wreg free
  1384  0018CE  E307               	bnc	l84
  1385  0018D0  0E00               	movlw	0
  1386  0018D2  010F               	movlb	F1548 shr (0+8)
  1387  0018D4  6519               	cpfsgt	F1548& (0+255),b
  1388  0018D6  D003               	goto	l84
  1389                           ;rgl.c: 346: {
  1390  0018D8  6B19               	clrf	F1548& (0+255),b
  1391                           ;rgl.c: 348: k=20;
  1392  0018DA  0E14               	movlw	20
  1393  0018DC  D06B               	goto	L17
  1394                           ;rgl.c: 349: }
  1395  0018DE                     l84:
  1396                           ;rgl.c: 350: else
  1397  0018DE  0E04               	movlw	4
  1398  0018E0  ECCB  F020         	call	_Tnizsza
  1399  0018E4  E30A               	bnc	l86
  1400  0018E6  ECC4  F020         	call	_Tstoi	;wreg free
  1401  0018EA  E307               	bnc	l86
  1402  0018EC  0E00               	movlw	0
  1403  0018EE  010F               	movlb	F1548 shr (0+8)
  1404  0018F0  6519               	cpfsgt	F1548& (0+255),b
  1405  0018F2  D003               	goto	l86
  1406                           ;rgl.c: 352: {
  1407  0018F4  6B19               	clrf	F1548& (0+255),b
  1408                           ;rgl.c: 354: k=15;
  1409  0018F6  0E0F               	movlw	15
  1410  0018F8  D05D               	goto	L17
  1411                           ;rgl.c: 355: }
  1412  0018FA                     l86:
  1413                           ;rgl.c: 356: else
  1414  0018FA  0E02               	movlw	2
  1415  0018FC  ECCB  F020         	call	_Tnizsza
  1416  001900  E308               	bnc	l88
  1417  001902  ECC4  F020         	call	_Tstoi	;wreg free
  1418  001906  E305               	bnc	l88
  1419  001908  0E00               	movlw	0
  1420  00190A  010F               	movlb	F1548 shr (0+8)
  1421  00190C  6519               	cpfsgt	F1548& (0+255),b
  1422  00190E  D001               	goto	l88
  1423  001910  D018               	goto	u860
  1424                           ;rgl.c: 358: {
  1425                           ;rgl.c: 360: k=10;
  1426                           ;rgl.c: 361: }
  1427  001912                     l88:
  1428                           ;rgl.c: 362: else
  1429  001912  ECC4  F020         	call	_Tstoi	;wreg free
  1430  001916  E350               	bnc	l91
  1431  001918  0E00               	movlw	0
  1432  00191A  010F               	movlb	F1548 shr (0+8)
  1433  00191C  6519               	cpfsgt	F1548& (0+255),b
  1434  00191E  D04C               	goto	l91
  1435  001920  D03C               	goto	u1040
  1436                           ;rgl.c: 364: {
  1437                           ;rgl.c: 366: k=5;
  1438                           ;rgl.c: 367: }
  1439  001922                     l83:
  1440                           ;rgl.c: 369: else
  1441  001922  CF2D  FFE8         	movff	_pwm_kwr,wreg
  1442  001926  0100               	movlb	(_rgl+9) shr (0+8)
  1443  001928  5D5B               	subwf	(_rgl+9)& (0+255),w,b
  1444  00192A  E32C               	bnc	l92
  1445                           ;rgl.c: 372: {
  1446  00192C  0E05               	movlw	5
  1447  00192E  ECCB  F020         	call	_Tnizsza
  1448  001932  E30B               	bnc	l93
  1449  001934  ECC4  F020         	call	_Tstoi	;wreg free
  1450  001938  E308               	bnc	l93
  1451  00193A  0E00               	movlw	0
  1452  00193C  010F               	movlb	F1548 shr (0+8)
  1453  00193E  6519               	cpfsgt	F1548& (0+255),b
  1454  001940  D004               	goto	l93
  1455  001942                     u860:
  1456                           ;rgl.c: 374: {
  1457  001942  010F               	movlb	F1548 shr (0+8)
  1458  001944  6B19               	clrf	F1548& (0+255),b
  1459                           ;rgl.c: 376: k=10;
  1460  001946  0E0A               	movlw	10
  1461  001948  D035               	goto	L17
  1462                           ;rgl.c: 377: }
  1463  00194A                     l93:
  1464                           ;rgl.c: 378: else
  1465  00194A  0E04               	movlw	4
  1466  00194C  ECCB  F020         	call	_Tnizsza
  1467  001950  E30A               	bnc	l95
  1468  001952  ECC4  F020         	call	_Tstoi	;wreg free
  1469  001956  E307               	bnc	l95
  1470  001958  0E00               	movlw	0
  1471  00195A  010F               	movlb	F1548 shr (0+8)
  1472  00195C  6519               	cpfsgt	F1548& (0+255),b
  1473  00195E  D003               	goto	l95
  1474                           ;rgl.c: 380: {
  1475  001960  6B19               	clrf	F1548& (0+255),b
  1476                           ;rgl.c: 382: k=8;
  1477  001962  0E08               	movlw	8
  1478  001964  D027               	goto	L17
  1479                           ;rgl.c: 383: }
  1480  001966                     l95:
  1481                           ;rgl.c: 384: else
  1482  001966  0E02               	movlw	2
  1483  001968  ECCB  F020         	call	_Tnizsza
  1484  00196C  E308               	bnc	l97
  1485  00196E  ECC4  F020         	call	_Tstoi	;wreg free
  1486  001972  E305               	bnc	l97
  1487  001974  0E00               	movlw	0
  1488  001976  010F               	movlb	F1548 shr (0+8)
  1489  001978  6519               	cpfsgt	F1548& (0+255),b
  1490  00197A  D001               	goto	l97
  1491  00197C  D00E               	goto	u1040
  1492                           ;rgl.c: 386: {
  1493                           ;rgl.c: 388: k=5;
  1494                           ;rgl.c: 389: }
  1495  00197E                     l97:
  1496                           ;rgl.c: 390: else
  1497  00197E  ECC4  F020         	call	_Tstoi	;wreg free
  1498  001982  D011               	goto	L24
  1499                           ;rgl.c: 392: {
  1500                           ;rgl.c: 394: k=2;
  1501                           ;rgl.c: 395: }
  1502  001984                     l92:
  1503                           ;rgl.c: 397: else
  1504  001984  0E02               	movlw	2
  1505  001986  ECCB  F020         	call	_Tnizsza
  1506  00198A  E30B               	bnc	l101
  1507  00198C  ECC4  F020         	call	_Tstoi	;wreg free
  1508  001990  E308               	bnc	l101
  1509  001992  0E00               	movlw	0
  1510  001994  010F               	movlb	F1548 shr (0+8)
  1511  001996  6519               	cpfsgt	F1548& (0+255),b
  1512  001998  D004               	goto	l101
  1513  00199A                     u1040:
  1514                           ;rgl.c: 400: {
  1515  00199A  010F               	movlb	F1548 shr (0+8)
  1516  00199C  6B19               	clrf	F1548& (0+255),b
  1517                           ;rgl.c: 402: k=5;
  1518  00199E  0E05               	movlw	5
  1519  0019A0  D009               	goto	L17
  1520                           ;rgl.c: 403: }
  1521  0019A2                     l101:
  1522                           ;rgl.c: 404: else
  1523  0019A2  ECC4  F020         	call	_Tstoi	;wreg free
  1524  0019A6                     L24:
  1525  0019A6  E308               	bnc	l91
  1526  0019A8  0E00               	movlw	0
  1527  0019AA  010F               	movlb	F1548 shr (0+8)
  1528  0019AC  6519               	cpfsgt	F1548& (0+255),b
  1529  0019AE  D004               	goto	l91
  1530                           ;rgl.c: 406: {
  1531  0019B0  6B19               	clrf	F1548& (0+255),b
  1532                           ;rgl.c: 408: k=2;
  1533  0019B2  0E02               	movlw	2
  1534  0019B4                     L17:
  1535  0019B4  0100               	movlb	__Lparam shr (0+8)
  1536  0019B6  6FF0               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  1537  0019B8                     l91:
  1538                           ;rgl.c: 409: }
  1539  0019B8  0E01               	movlw	1
  1540  0019BA  EC9C  F020         	call	_Trosnie
  1541  0019BE  E310               	bnc	l104
  1542  0019C0  0E00               	movlw	0
  1543  0019C2  010F               	movlb	F1548 shr (0+8)
  1544  0019C4  6519               	cpfsgt	F1548& (0+255),b
  1545  0019C6  D00C               	goto	l104
  1546                           ;rgl.c: 414: {
  1547  0019C8  6B19               	clrf	F1548& (0+255),b
  1548                           ;rgl.c: 416: {
  1549  0019CA  CF2D  FFE8         	movff	_pwm_kwr,wreg
  1550  0019CE  0100               	movlb	(_rgl+9) shr (0+8)
  1551  0019D0  5D5B               	subwf	(_rgl+9)& (0+255),w,b
  1552  0019D2  E304               	bnc	l105
  1553  0019D4  0E23               	movlw	35
  1554  0019D6                     L5:
  1555  0019D6  0100               	movlb	__Lparam shr (0+8)
  1556  0019D8  6FF0               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  1557  0019DA  D004               	goto	l107
  1558  0019DC                     l105:
  1559                           ;rgl.c: 418: else k=25;
  1560  0019DC  0E19               	movlw	25
  1561  0019DE  D7FB               	goto	L5
  1562                           ;rgl.c: 419: }
  1563  0019E0                     l104:
  1564                           ;rgl.c: 421: else
  1565  0019E0  0100               	movlb	(_rgl+6) shr (0+8)
  1566  0019E2  6B58               	clrf	(_rgl+6)& (0+255),b
  1567  0019E4                     l107:
  1568                           ;rgl.c: 423: if(PWM.BufPWM>rgl.xmod) return;
  1569  0019E4  C05D  FFE8         	movff	_PWM+1,wreg
  1570  0019E8  0100               	movlb	(_rgl+8) shr (0+8)
  1571  0019EA  615A               	cpfslt	(_rgl+8)& (0+255),b
  1572  0019EC  D001               	goto	l108
  1573  0019EE  0012               	return	
  1574  0019F0                     l108:
  1575                           ;rgl.c: 424: tmp=rgl.xmod-PWM.BufPWM;
  1576  0019F0  C05D  FFE8         	movff	_PWM+1,wreg
  1577  0019F4  0100               	movlb	(_rgl+8) shr (0+8)
  1578  0019F6  5D5A               	subwf	(_rgl+8)& (0+255),w,b
  1579  0019F8  6ED9               	movwf	fsr2l,c
  1580                           ;rgl.c: 425: if(k>tmp) k=tmp;
  1581  0019FA  50D9               	movf	fsr2l,w,c
  1582  0019FC  0100               	movlb	__Lparam shr (0+8)
  1583  0019FE  94D8               	bcf	status,2,c
  1584  001A00  90D8               	bcf	status,0,c
  1585  001A02  AFF0               	btfss	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  1586  001A04  5DF0               	subwf	?a_ModPruCW^(__Lparam& (0+65280)),w
  1587  001A06  B4D8               	btfsc	status,2,c
  1588  001A08  90D8               	bcf	status,0,c
  1589  001A0A  E302               	bnc	l109
  1590  001A0C  50D9               	movf	fsr2l,w,c
  1591  001A0E  6FF0               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  1592  001A10                     l109:
  1593                           ;rgl.c: 426: if(PWM.MMAXCW>PWM.MGMOD)
  1594  001A10  C076  FFE8         	movff	_PWM+26,wreg
  1595  001A14  0100               	movlb	(_PWM+6) shr (0+8)
  1596  001A16  6162               	cpfslt	(_PWM+6)& (0+255),b
  1597  001A18  D01F               	goto	l110
  1598                           ;rgl.c: 427: {
  1599  001A1A  C059  FFE8         	movff	_rgl+7,wreg
  1600  001A1E  0100               	movlb	__Lparam shr (0+8)
  1601  001A20  25F0               	addwf	?a_ModPruCW^(__Lparam& (0+65280)),w
  1602  001A22  6E02               	movwf	btemp+2,c
  1603  001A24  6A03               	clrf	btemp+3,c
  1604  001A26  B0D8               	btfsc	status,0,c
  1605  001A28  2A03               	incf	btemp+3,f,c
  1606  001A2A  BFF0               	btfsc	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  1607  001A2C  0603               	decf	btemp+3,f,c
  1608  001A2E  C062  F000         	movff	_PWM+6,btemp
  1609  001A32  6A01               	clrf	btemp+1,c
  1610  001A34  5001               	movf	btemp+1,w,c
  1611  001A36  0A80               	xorlw	128
  1612  001A38  6E04               	movwf	btemp+4,c
  1613  001A3A  5003               	movf	btemp+3,w,c
  1614  001A3C  0A80               	xorlw	128
  1615  001A3E  5C04               	subwf	btemp+4,w,c
  1616  001A40  E102               	bnz	u1155
  1617  001A42  5002               	movf	btemp+2,w,c
  1618  001A44  5C00               	subwf	btemp,w,c
  1619  001A46                     u1155:
  1620  001A46  E203               	bc	l111
  1621  001A48  C062  F059         	movff	_PWM+6,_rgl+7
  1622  001A4C  0012               	return	
  1623  001A4E                     l111:
  1624                           ;rgl.c: 429: else rgl.srp+=k;
  1625  001A4E  0100               	movlb	__Lparam shr (0+8)
  1626  001A50  51F0               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  1627  001A52  0100               	movlb	(_rgl+7) shr (0+8)
  1628  001A54  2759               	addwf	(_rgl+7)& (0+255),f,b
  1629                           ;rgl.c: 430: }
  1630  001A56  0012               	return	
  1631  001A58                     l110:
  1632                           ;rgl.c: 431: else
  1633  001A58  C059  FFE8         	movff	_rgl+7,wreg
  1634  001A5C  0100               	movlb	__Lparam shr (0+8)
  1635  001A5E  25F0               	addwf	?a_ModPruCW^(__Lparam& (0+65280)),w
  1636  001A60  6E02               	movwf	btemp+2,c
  1637  001A62  6A03               	clrf	btemp+3,c
  1638  001A64  B0D8               	btfsc	status,0,c
  1639  001A66  2A03               	incf	btemp+3,f,c
  1640  001A68  BFF0               	btfsc	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  1641  001A6A  0603               	decf	btemp+3,f,c
  1642  001A6C  C076  F000         	movff	_PWM+26,btemp
  1643  001A70  6A01               	clrf	btemp+1,c
  1644  001A72  5001               	movf	btemp+1,w,c
  1645  001A74  0A80               	xorlw	128
  1646  001A76  6E04               	movwf	btemp+4,c
  1647  001A78  5003               	movf	btemp+3,w,c
  1648  001A7A  0A80               	xorlw	128
  1649  001A7C  5C04               	subwf	btemp+4,w,c
  1650  001A7E  E102               	bnz	u1165
  1651  001A80  5002               	movf	btemp+2,w,c
  1652  001A82  5C00               	subwf	btemp,w,c
  1653  001A84                     u1165:
  1654  001A84  E203               	bc	l114
  1655  001A86  C076  F059         	movff	_PWM+26,_rgl+7
  1656  001A8A  0012               	return	
  1657  001A8C                     l114:
  1658                           ;rgl.c: 434: else rgl.srp+=k;
  1659  001A8C  0100               	movlb	__Lparam shr (0+8)
  1660  001A8E  51F0               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  1661  001A90  0100               	movlb	(_rgl+7) shr (0+8)
  1662  001A92  2759               	addwf	(_rgl+7)& (0+255),f,b
  1663                           ;rgl.c: 435: }
  1664  001A94  0012               	return	
  1665                           ;rgl.c: 438: else return;
  1666                           ;rgl.c: 440: else return;
  1667  001A96                     l77:
  1668                           ;rgl.c: 442: else
  1669  001A96  010F               	movlb	F1546 shr (0+8)
  1670  001A98  6B17               	clrf	F1546& (0+255),b
  1671                           ;rgl.c: 445: r=0;
  1672  001A9A  010F               	movlb	F1547 shr (0+8)
  1673  001A9C  6B18               	clrf	F1547& (0+255),b
  1674                           ;rgl.c: 446: s=0;
  1675  001A9E  010F               	movlb	F1548 shr (0+8)
  1676  001AA0  6B19               	clrf	F1548& (0+255),b
  1677                           ;rgl.c: 447: if(m<255) m++;
  1678  001AA2  CF14  F000         	movff	F1543,btemp
  1679  001AA6  2800               	incf	btemp,w,c
  1680  001AA8  E002               	bz	l119
  1681  001AAA  010F               	movlb	F1543 shr (0+8)
  1682  001AAC  2B14               	incf	F1543& (0+255),f,b
  1683  001AAE                     l119:
  1684                           ;rgl.c: 448: if(p<255) p++;
  1685  001AAE  CF16  F000         	movff	F1545,btemp
  1686  001AB2  2800               	incf	btemp,w,c
  1687  001AB4  E002               	bz	l120
  1688  001AB6  010F               	movlb	F1545 shr (0+8)
  1689  001AB8  2B16               	incf	F1545& (0+255),f,b
  1690  001ABA                     l120:
  1691                           ;rgl.c: 449: if(o<255) o++;
  1692  001ABA  CF15  F000         	movff	F1544,btemp
  1693  001ABE  2800               	incf	btemp,w,c
  1694  001AC0  E002               	bz	l121
  1695  001AC2  010F               	movlb	F1544 shr (0+8)
  1696  001AC4  2B15               	incf	F1544& (0+255),f,b
  1697  001AC6                     l121:
  1698                           ;rgl.c: 450: if(DtCW.DAD_CW>DtCW.AC_CW)
  1699  001AC6  C15A  FFE8         	movff	_DtCW+14,wreg
  1700  001ACA  0101               	movlb	(_DtCW+12) shr (0+8)
  1701  001ACC  6158               	cpfslt	(_DtCW+12)& (0+255),b
  1702  001ACE  D0D2               	goto	l122
  1703                           ;rgl.c: 451: {
  1704  001AD0  0100               	movlb	__Lparam shr (0+8)
  1705  001AD2  6BF0               	clrf	?a_ModPruCW^(__Lparam& (0+65280)),b
  1706                           ;rgl.c: 453: l=0;
  1707  001AD4  010F               	movlb	F1542 shr (0+8)
  1708  001AD6  6B13               	clrf	F1542& (0+255),b
  1709                           ;rgl.c: 454: if(Tmaleje(0)&&Twyzsza(1)&&m>=3)
  1710  001AD8  0E00               	movlw	0
  1711  001ADA  ECA9  F020         	call	_Tmaleje
  1712  001ADE  E310               	bnc	l123
  1713  001AE0  0E01               	movlw	1
  1714  001AE2  ECD8  F020         	call	_Twyzsza
  1715  001AE6  E30C               	bnc	l123
  1716  001AE8  0E02               	movlw	2
  1717  001AEA  010F               	movlb	F1543 shr (0+8)
  1718  001AEC  6514               	cpfsgt	F1543& (0+255),b
  1719  001AEE  D008               	goto	l123
  1720                           ;rgl.c: 455: {
  1721  001AF0  010F               	movlb	F1545 shr (0+8)
  1722  001AF2  6B16               	clrf	F1545& (0+255),b
  1723                           ;rgl.c: 457: o=0;
  1724  001AF4  010F               	movlb	F1544 shr (0+8)
  1725  001AF6  6B15               	clrf	F1544& (0+255),b
  1726                           ;rgl.c: 458: l=1;
  1727  001AF8  0E01               	movlw	1
  1728  001AFA  CFE8 FF13          	movff	wreg,F1542
  1729  001AFE  D035               	goto	L27
  1730                           ;rgl.c: 459: m=0;
  1731                           ;rgl.c: 460: k=1;
  1732                           ;rgl.c: 461: }
  1733  001B00                     l123:
  1734                           ;rgl.c: 462: else
  1735  001B00  0E00               	movlw	0
  1736  001B02  ECA9  F020         	call	_Tmaleje
  1737  001B06  E212               	bc	l125
  1738  001B08  0E04               	movlw	4
  1739  001B0A  ECD8  F020         	call	_Twyzsza
  1740  001B0E  E30E               	bnc	l125
  1741  001B10  0E01               	movlw	1
  1742  001B12  010F               	movlb	F1543 shr (0+8)
  1743  001B14  6514               	cpfsgt	F1543& (0+255),b
  1744  001B16  D00A               	goto	l125
  1745                           ;rgl.c: 464: {
  1746  001B18  010F               	movlb	F1545 shr (0+8)
  1747  001B1A  6B16               	clrf	F1545& (0+255),b
  1748                           ;rgl.c: 466: o=0;
  1749  001B1C  010F               	movlb	F1544 shr (0+8)
  1750  001B1E  6B15               	clrf	F1544& (0+255),b
  1751                           ;rgl.c: 467: l=0;
  1752  001B20  010F               	movlb	F1542 shr (0+8)
  1753  001B22  6B13               	clrf	F1542& (0+255),b
  1754                           ;rgl.c: 468: m=0;
  1755  001B24  010F               	movlb	F1543 shr (0+8)
  1756  001B26  6B14               	clrf	F1543& (0+255),b
  1757                           ;rgl.c: 469: k=5;
  1758  001B28  0E05               	movlw	5
  1759  001B2A  D022               	goto	L18
  1760                           ;rgl.c: 470: }
  1761  001B2C                     l125:
  1762                           ;rgl.c: 471: else
  1763  001B2C  0E00               	movlw	0
  1764  001B2E  ECA9  F020         	call	_Tmaleje
  1765  001B32  E209               	bc	l127
  1766  001B34  0E02               	movlw	2
  1767  001B36  ECD8  F020         	call	_Twyzsza
  1768  001B3A  E305               	bnc	l127
  1769  001B3C  0E02               	movlw	2
  1770  001B3E  010F               	movlb	F1543 shr (0+8)
  1771  001B40  6514               	cpfsgt	F1543& (0+255),b
  1772  001B42  D001               	goto	l127
  1773  001B44  D00C               	goto	u1400
  1774                           ;rgl.c: 473: {
  1775                           ;rgl.c: 475: o=0;
  1776                           ;rgl.c: 476: l=0;
  1777                           ;rgl.c: 477: m=0;
  1778                           ;rgl.c: 478: k=1;
  1779                           ;rgl.c: 479: }
  1780  001B46                     l127:
  1781                           ;rgl.c: 480: else
  1782  001B46  0E00               	movlw	0
  1783  001B48  ECA9  F020         	call	_Tmaleje
  1784  001B4C  E213               	bc	l124
  1785  001B4E  0E01               	movlw	1
  1786  001B50  ECD8  F020         	call	_Twyzsza
  1787  001B54  E30F               	bnc	l124
  1788  001B56  0E03               	movlw	3
  1789  001B58  010F               	movlb	F1543 shr (0+8)
  1790  001B5A  6514               	cpfsgt	F1543& (0+255),b
  1791  001B5C  D00B               	goto	l124
  1792  001B5E                     u1400:
  1793                           ;rgl.c: 482: {
  1794  001B5E  010F               	movlb	F1545 shr (0+8)
  1795  001B60  6B16               	clrf	F1545& (0+255),b
  1796                           ;rgl.c: 484: o=0;
  1797  001B62  010F               	movlb	F1544 shr (0+8)
  1798  001B64  6B15               	clrf	F1544& (0+255),b
  1799                           ;rgl.c: 485: l=0;
  1800  001B66  010F               	movlb	F1542 shr (0+8)
  1801  001B68  6B13               	clrf	F1542& (0+255),b
  1802  001B6A                     L27:
  1803                           ;rgl.c: 486: m=0;
  1804  001B6A  010F               	movlb	F1543 shr (0+8)
  1805  001B6C  6B14               	clrf	F1543& (0+255),b
  1806                           ;rgl.c: 487: k=1;
  1807  001B6E  0E01               	movlw	1
  1808  001B70                     L18:
  1809  001B70  0100               	movlb	__Lparam shr (0+8)
  1810  001B72  6FF0               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  1811  001B74                     l124:
  1812                           ;rgl.c: 488: }
  1813  001B74  010F               	movlb	F1542 shr (0+8)
  1814  001B76  5313               	movf	F1542& (0+255),f,b
  1815  001B78  E138               	bnz	l130
  1816  001B7A  0100               	movlb	__Lparam shr (0+8)
  1817  001B7C  51F0               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  1818  001B7E  E035               	bz	l130
  1819                           ;rgl.c: 490: {
  1820  001B80  C076  FFE8         	movff	_PWM+26,wreg
  1821  001B84  0100               	movlb	(_PWM+6) shr (0+8)
  1822  001B86  6162               	cpfslt	(_PWM+6)& (0+255),b
  1823  001B88  D007               	goto	l131
  1824                           ;rgl.c: 492: {
  1825  001B8A  C059  FFE8         	movff	_rgl+7,wreg
  1826  001B8E  6162               	cpfslt	(_PWM+6)& (0+255),b
  1827  001B90  D00A               	goto	l133
  1828  001B92  C062  F059         	movff	_PWM+6,_rgl+7
  1829                           ;rgl.c: 494: }
  1830  001B96  D007               	goto	l133
  1831  001B98                     l131:
  1832                           ;rgl.c: 495: else
  1833  001B98  C059  FFE8         	movff	_rgl+7,wreg
  1834  001B9C  0100               	movlb	(_PWM+26) shr (0+8)
  1835  001B9E  6176               	cpfslt	(_PWM+26)& (0+255),b
  1836  001BA0  D002               	goto	l133
  1837  001BA2  C076  F059         	movff	_PWM+26,_rgl+7
  1838  001BA6                     l133:
  1839                           ;rgl.c: 498: }
  1840  001BA6  C061  F000         	movff	_PWM+5,btemp
  1841  001BAA  6A01               	clrf	btemp+1,c
  1842  001BAC  C059  F002         	movff	_rgl+7,btemp+2
  1843  001BB0  0100               	movlb	__Lparam shr (0+8)
  1844  001BB2  51F0               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  1845  001BB4  5C02               	subwf	btemp+2,w,c
  1846  001BB6  6EF6               	movwf	tblptrl,c
  1847  001BB8  6AF7               	clrf	tblptrh,c
  1848  001BBA  B0D8               	btfsc	status,0,c
  1849  001BBC  2AF7               	incf	tblptrh,f,c
  1850  001BBE  AFF0               	btfss	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  1851  001BC0  06F7               	decf	tblptrh,f,c
  1852  001BC2  50F7               	movf	tblptrh,w,c
  1853  001BC4  0A80               	xorlw	128
  1854  001BC6  6E02               	movwf	btemp+2,c
  1855  001BC8  5001               	movf	btemp+1,w,c
  1856  001BCA  0A80               	xorlw	128
  1857  001BCC  5C02               	subwf	btemp+2,w,c
  1858  001BCE  E102               	bnz	u1475
  1859  001BD0  5000               	movf	btemp,w,c
  1860  001BD2  5CF6               	subwf	tblptrl,w,c
  1861  001BD4                     u1475:
  1862  001BD4  E203               	bc	l135
  1863  001BD6  C061  F059         	movff	_PWM+5,_rgl+7
  1864  001BDA  D044               	goto	l137
  1865  001BDC                     l135:
  1866                           ;rgl.c: 500: else rgl.srp=rgl.srp-k;
  1867  001BDC  0100               	movlb	__Lparam shr (0+8)
  1868  001BDE  51F0               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  1869  001BE0  0100               	movlb	(_rgl+7) shr (0+8)
  1870  001BE2  5D59               	subwf	(_rgl+7)& (0+255),w,b
  1871  001BE4  CFE8 F059          	movff	wreg,_rgl+7
  1872                           ;rgl.c: 501: }
  1873  001BE8  D03D               	goto	l137
  1874  001BEA                     l130:
  1875                           ;rgl.c: 502: else
  1876  001BEA  C076  FFE8         	movff	_PWM+26,wreg
  1877  001BEE  0100               	movlb	(_PWM+6) shr (0+8)
  1878  001BF0  6162               	cpfslt	(_PWM+6)& (0+255),b
  1879  001BF2  D01A               	goto	l138
  1880                           ;rgl.c: 505: {
  1881  001BF4  C059  FFE8         	movff	_rgl+7,wreg
  1882  001BF8  0100               	movlb	__Lparam shr (0+8)
  1883  001BFA  25F0               	addwf	?a_ModPruCW^(__Lparam& (0+65280)),w
  1884  001BFC  6E02               	movwf	btemp+2,c
  1885  001BFE  6A03               	clrf	btemp+3,c
  1886  001C00  B0D8               	btfsc	status,0,c
  1887  001C02  2A03               	incf	btemp+3,f,c
  1888  001C04  BFF0               	btfsc	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  1889  001C06  0603               	decf	btemp+3,f,c
  1890  001C08  C062  F000         	movff	_PWM+6,btemp
  1891  001C0C  6A01               	clrf	btemp+1,c
  1892  001C0E  5001               	movf	btemp+1,w,c
  1893  001C10  0A80               	xorlw	128
  1894  001C12  6E04               	movwf	btemp+4,c
  1895  001C14  5003               	movf	btemp+3,w,c
  1896  001C16  0A80               	xorlw	128
  1897  001C18  5C04               	subwf	btemp+4,w,c
  1898  001C1A  E102               	bnz	u1495
  1899  001C1C  5002               	movf	btemp+2,w,c
  1900  001C1E  5C00               	subwf	btemp,w,c
  1901  001C20                     u1495:
  1902  001C20  E21D               	bc	l142
  1903  001C22  C062  F059         	movff	_PWM+6,_rgl+7
  1904  001C26  D01E               	goto	l137
  1905                           ;rgl.c: 507: else rgl.srp+=k;
  1906                           ;rgl.c: 508: }
  1907  001C28                     l138:
  1908                           ;rgl.c: 509: else
  1909  001C28  C059  FFE8         	movff	_rgl+7,wreg
  1910  001C2C  0100               	movlb	__Lparam shr (0+8)
  1911  001C2E  25F0               	addwf	?a_ModPruCW^(__Lparam& (0+65280)),w
  1912  001C30  6E02               	movwf	btemp+2,c
  1913  001C32  6A03               	clrf	btemp+3,c
  1914  001C34  B0D8               	btfsc	status,0,c
  1915  001C36  2A03               	incf	btemp+3,f,c
  1916  001C38  BFF0               	btfsc	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  1917  001C3A  0603               	decf	btemp+3,f,c
  1918  001C3C  C076  F000         	movff	_PWM+26,btemp
  1919  001C40  6A01               	clrf	btemp+1,c
  1920  001C42  5001               	movf	btemp+1,w,c
  1921  001C44  0A80               	xorlw	128
  1922  001C46  6E04               	movwf	btemp+4,c
  1923  001C48  5003               	movf	btemp+3,w,c
  1924  001C4A  0A80               	xorlw	128
  1925  001C4C  5C04               	subwf	btemp+4,w,c
  1926  001C4E  E102               	bnz	u1505
  1927  001C50  5002               	movf	btemp+2,w,c
  1928  001C52  5C00               	subwf	btemp,w,c
  1929  001C54                     u1505:
  1930  001C54  E203               	bc	l142
  1931  001C56  C076  F059         	movff	_PWM+26,_rgl+7
  1932  001C5A  D004               	goto	l137
  1933  001C5C                     l142:
  1934                           ;rgl.c: 512: else rgl.srp+=k;
  1935  001C5C  0100               	movlb	__Lparam shr (0+8)
  1936  001C5E  51F0               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  1937  001C60  0100               	movlb	(_rgl+7) shr (0+8)
  1938  001C62  2759               	addwf	(_rgl+7)& (0+255),f,b
  1939  001C64                     l137:
  1940                           ;rgl.c: 513: }
  1941  001C64  C059  FFE8         	movff	_rgl+7,wreg
  1942  001C68  0100               	movlb	(_rgl+8) shr (0+8)
  1943  001C6A  615A               	cpfslt	(_rgl+8)& (0+255),b
  1944  001C6C  0012               	return	
  1945  001C6E  C059  F05A         	movff	_rgl+7,_rgl+8
  1946                           ;rgl.c: 516: return;
  1947  001C72  0012               	return	
  1948  001C74                     l122:
  1949                           ;rgl.c: 518: else
  1950  001C74  0100               	movlb	__Lparam shr (0+8)
  1951  001C76  6BF0               	clrf	?a_ModPruCW^(__Lparam& (0+65280)),b
  1952                           ;rgl.c: 521: l=0;
  1953  001C78  010F               	movlb	F1542 shr (0+8)
  1954  001C7A  6B13               	clrf	F1542& (0+255),b
  1955                           ;rgl.c: 522: if(Trosnie(0)&&Tnizsza(1)&&m>=3)
  1956  001C7C  0E00               	movlw	0
  1957  001C7E  EC9C  F020         	call	_Trosnie
  1958  001C82  E313               	bnc	l146
  1959  001C84  0E01               	movlw	1
  1960  001C86  ECCB  F020         	call	_Tnizsza
  1961  001C8A  E30F               	bnc	l146
  1962  001C8C  0E02               	movlw	2
  1963  001C8E  010F               	movlb	F1543 shr (0+8)
  1964  001C90  6514               	cpfsgt	F1543& (0+255),b
  1965  001C92  D00B               	goto	l146
  1966                           ;rgl.c: 523: {
  1967  001C94  010F               	movlb	F1545 shr (0+8)
  1968  001C96  6B16               	clrf	F1545& (0+255),b
  1969                           ;rgl.c: 525: o=0;
  1970  001C98  010F               	movlb	F1544 shr (0+8)
  1971  001C9A  6B15               	clrf	F1544& (0+255),b
  1972                           ;rgl.c: 526: l=1;
  1973  001C9C  0E01               	movlw	1
  1974  001C9E  CFE8 FF13          	movff	wreg,F1542
  1975                           ;rgl.c: 527: m=0;
  1976  001CA2  010F               	movlb	F1543 shr (0+8)
  1977  001CA4  6B14               	clrf	F1543& (0+255),b
  1978                           ;rgl.c: 528: k=1;
  1979  001CA6  0E01               	movlw	1
  1980  001CA8  D032               	goto	L19
  1981                           ;rgl.c: 529: }
  1982  001CAA                     l146:
  1983                           ;rgl.c: 530: else
  1984  001CAA  0E00               	movlw	0
  1985  001CAC  EC9C  F020         	call	_Trosnie
  1986  001CB0  E219               	bc	l148
  1987  001CB2  0E01               	movlw	1
  1988  001CB4  ECCB  F020         	call	_Tnizsza
  1989  001CB8  E315               	bnc	l148
  1990  001CBA  0E02               	movlw	2
  1991  001CBC  010F               	movlb	F1543 shr (0+8)
  1992  001CBE  6514               	cpfsgt	F1543& (0+255),b
  1993  001CC0  D011               	goto	l148
  1994                           ;rgl.c: 532: {
  1995  001CC2  010F               	movlb	F1545 shr (0+8)
  1996  001CC4  6B16               	clrf	F1545& (0+255),b
  1997                           ;rgl.c: 534: o=0;
  1998  001CC6  010F               	movlb	F1544 shr (0+8)
  1999  001CC8  6B15               	clrf	F1544& (0+255),b
  2000                           ;rgl.c: 535: l=0;
  2001  001CCA  010F               	movlb	F1542 shr (0+8)
  2002  001CCC  6B13               	clrf	F1542& (0+255),b
  2003                           ;rgl.c: 536: m=0;
  2004  001CCE  010F               	movlb	F1543 shr (0+8)
  2005  001CD0  6B14               	clrf	F1543& (0+255),b
  2006                           ;rgl.c: 537: k=2;
  2007  001CD2  0E02               	movlw	2
  2008  001CD4  0100               	movlb	__Lparam shr (0+8)
  2009  001CD6  6FF0               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  2010                           ;rgl.c: 538: if(Tnizsza(3)) k=5;
  2011  001CD8  0E03               	movlw	3
  2012  001CDA  ECCB  F020         	call	_Tnizsza
  2013  001CDE  E319               	bnc	l147
  2014  001CE0  0E05               	movlw	5
  2015  001CE2  D015               	goto	L19
  2016                           ;rgl.c: 539: }
  2017  001CE4                     l148:
  2018                           ;rgl.c: 540: else
  2019  001CE4  0E00               	movlw	0
  2020  001CE6  EC9C  F020         	call	_Trosnie
  2021  001CEA  E213               	bc	l147
  2022  001CEC  0E00               	movlw	0
  2023  001CEE  ECCB  F020         	call	_Tnizsza
  2024  001CF2  E30F               	bnc	l147
  2025  001CF4  0E03               	movlw	3
  2026  001CF6  010F               	movlb	F1543 shr (0+8)
  2027  001CF8  6514               	cpfsgt	F1543& (0+255),b
  2028  001CFA  D00B               	goto	l147
  2029                           ;rgl.c: 542: {
  2030  001CFC  010F               	movlb	F1545 shr (0+8)
  2031  001CFE  6B16               	clrf	F1545& (0+255),b
  2032                           ;rgl.c: 544: o=0;
  2033  001D00  010F               	movlb	F1544 shr (0+8)
  2034  001D02  6B15               	clrf	F1544& (0+255),b
  2035                           ;rgl.c: 545: l=0;
  2036  001D04  010F               	movlb	F1542 shr (0+8)
  2037  001D06  6B13               	clrf	F1542& (0+255),b
  2038                           ;rgl.c: 546: m=0;
  2039  001D08  010F               	movlb	F1543 shr (0+8)
  2040  001D0A  6B14               	clrf	F1543& (0+255),b
  2041                           ;rgl.c: 547: k=2;
  2042  001D0C  0E02               	movlw	2
  2043  001D0E                     L19:
  2044  001D0E  0100               	movlb	__Lparam shr (0+8)
  2045  001D10  6FF0               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  2046  001D12                     l147:
  2047                           ;rgl.c: 548: }
  2048  001D12  010F               	movlb	F1542 shr (0+8)
  2049  001D14  5313               	movf	F1542& (0+255),f,b
  2050  001D16  E141               	bnz	l152
  2051  001D18  0100               	movlb	__Lparam shr (0+8)
  2052  001D1A  51F0               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  2053  001D1C  E03E               	bz	l152
  2054                           ;rgl.c: 550: {
  2055  001D1E  C076  FFE8         	movff	_PWM+26,wreg
  2056  001D22  0100               	movlb	(_PWM+6) shr (0+8)
  2057  001D24  6162               	cpfslt	(_PWM+6)& (0+255),b
  2058  001D26  D01F               	goto	l153
  2059                           ;rgl.c: 552: {
  2060  001D28  C059  FFE8         	movff	_rgl+7,wreg
  2061  001D2C  0100               	movlb	__Lparam shr (0+8)
  2062  001D2E  25F0               	addwf	?a_ModPruCW^(__Lparam& (0+65280)),w
  2063  001D30  6E02               	movwf	btemp+2,c
  2064  001D32  6A03               	clrf	btemp+3,c
  2065  001D34  B0D8               	btfsc	status,0,c
  2066  001D36  2A03               	incf	btemp+3,f,c
  2067  001D38  BFF0               	btfsc	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  2068  001D3A  0603               	decf	btemp+3,f,c
  2069  001D3C  C062  F000         	movff	_PWM+6,btemp
  2070  001D40  6A01               	clrf	btemp+1,c
  2071  001D42  5001               	movf	btemp+1,w,c
  2072  001D44  0A80               	xorlw	128
  2073  001D46  6E04               	movwf	btemp+4,c
  2074  001D48  5003               	movf	btemp+3,w,c
  2075  001D4A  0A80               	xorlw	128
  2076  001D4C  5C04               	subwf	btemp+4,w,c
  2077  001D4E  E102               	bnz	u1725
  2078  001D50  5002               	movf	btemp+2,w,c
  2079  001D52  5C00               	subwf	btemp,w,c
  2080  001D54                     u1725:
  2081  001D54  E203               	bc	l154
  2082  001D56  C062  F059         	movff	_PWM+6,_rgl+7
  2083  001D5A  D040               	goto	l159
  2084  001D5C                     l154:
  2085                           ;rgl.c: 554: else rgl.srp+=k;
  2086  001D5C  0100               	movlb	__Lparam shr (0+8)
  2087  001D5E  51F0               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  2088  001D60  0100               	movlb	(_rgl+7) shr (0+8)
  2089  001D62  2759               	addwf	(_rgl+7)& (0+255),f,b
  2090                           ;rgl.c: 555: }
  2091  001D64  D03B               	goto	l159
  2092  001D66                     l153:
  2093                           ;rgl.c: 556: else
  2094  001D66  C059  FFE8         	movff	_rgl+7,wreg
  2095  001D6A  0100               	movlb	__Lparam shr (0+8)
  2096  001D6C  25F0               	addwf	?a_ModPruCW^(__Lparam& (0+65280)),w
  2097  001D6E  6E02               	movwf	btemp+2,c
  2098  001D70  6A03               	clrf	btemp+3,c
  2099  001D72  B0D8               	btfsc	status,0,c
  2100  001D74  2A03               	incf	btemp+3,f,c
  2101  001D76  BFF0               	btfsc	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  2102  001D78  0603               	decf	btemp+3,f,c
  2103  001D7A  C076  F000         	movff	_PWM+26,btemp
  2104  001D7E  6A01               	clrf	btemp+1,c
  2105  001D80  5001               	movf	btemp+1,w,c
  2106  001D82  0A80               	xorlw	128
  2107  001D84  6E04               	movwf	btemp+4,c
  2108  001D86  5003               	movf	btemp+3,w,c
  2109  001D88  0A80               	xorlw	128
  2110  001D8A  5C04               	subwf	btemp+4,w,c
  2111  001D8C  E102               	bnz	u1735
  2112  001D8E  5002               	movf	btemp+2,w,c
  2113  001D90  5C00               	subwf	btemp,w,c
  2114  001D92                     u1735:
  2115  001D92  E2E4               	bc	l154
  2116  001D94  C076  F059         	movff	_PWM+26,_rgl+7
  2117  001D98  D021               	goto	l159
  2118                           ;rgl.c: 559: else rgl.srp+=k;
  2119                           ;rgl.c: 560: }
  2120  001D9A                     l152:
  2121                           ;rgl.c: 562: else
  2122  001D9A  C061  F000         	movff	_PWM+5,btemp
  2123  001D9E  6A01               	clrf	btemp+1,c
  2124  001DA0  C059  F002         	movff	_rgl+7,btemp+2
  2125  001DA4  0100               	movlb	__Lparam shr (0+8)
  2126  001DA6  51F0               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  2127  001DA8  5C02               	subwf	btemp+2,w,c
  2128  001DAA  6EF6               	movwf	tblptrl,c
  2129  001DAC  6AF7               	clrf	tblptrh,c
  2130  001DAE  B0D8               	btfsc	status,0,c
  2131  001DB0  2AF7               	incf	tblptrh,f,c
  2132  001DB2  AFF0               	btfss	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  2133  001DB4  06F7               	decf	tblptrh,f,c
  2134  001DB6  50F7               	movf	tblptrh,w,c
  2135  001DB8  0A80               	xorlw	128
  2136  001DBA  6E02               	movwf	btemp+2,c
  2137  001DBC  5001               	movf	btemp+1,w,c
  2138  001DBE  0A80               	xorlw	128
  2139  001DC0  5C02               	subwf	btemp+2,w,c
  2140  001DC2  E102               	bnz	u1745
  2141  001DC4  5000               	movf	btemp,w,c
  2142  001DC6  5CF6               	subwf	tblptrl,w,c
  2143  001DC8                     u1745:
  2144  001DC8  E203               	bc	l160
  2145  001DCA  C061  F059         	movff	_PWM+5,_rgl+7
  2146  001DCE  D006               	goto	l159
  2147  001DD0                     l160:
  2148                           ;rgl.c: 565: else rgl.srp=rgl.srp-k;
  2149  001DD0  0100               	movlb	__Lparam shr (0+8)
  2150  001DD2  51F0               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  2151  001DD4  0100               	movlb	(_rgl+7) shr (0+8)
  2152  001DD6  5D59               	subwf	(_rgl+7)& (0+255),w,b
  2153  001DD8  CFE8 F059          	movff	wreg,_rgl+7
  2154  001DDC                     l159:
  2155                           ;rgl.c: 566: }
  2156  001DDC  C059  FFE8         	movff	_rgl+7,wreg
  2157  001DE0  0100               	movlb	(_rgl+8) shr (0+8)
  2158  001DE2  615A               	cpfslt	(_rgl+8)& (0+255),b
  2159  001DE4  0012               	return	
  2160  001DE6  C059  F05A         	movff	_rgl+7,_rgl+8
  2161                           ;rgl.c: 568: return;
  2162  001DEA  0012               	return	
  2163                           ;rgl.c: 569: }
  2164  001DEC                     __end_of_ModPruCW:
  2165                           ;rgl.c: 575: void IncMaxCW(void)
  2166                           ;rgl.c: 576: {
  2167  001DEC                     _IncMaxCW:
  2168  000000                     
  2169                           ;rgl.c: 577: unsigned char k;
  2170  001DEC  0100               	movlb	_rgl shr (0+8)
  2171  001DEE  A552               	btfss	_rgl& (0+255),2,b
  2172  001DF0  D014               	goto	l164
  2173                           ;rgl.c: 582: {
  2174  001DF2  C076  FFE8         	movff	_PWM+26,wreg
  2175  001DF6  0100               	movlb	(_PWM+6) shr (0+8)
  2176  001DF8  6162               	cpfslt	(_PWM+6)& (0+255),b
  2177  001DFA  D007               	goto	l165
  2178                           ;rgl.c: 584: {
  2179  001DFC  C05A  FFE8         	movff	_rgl+8,wreg
  2180  001E00  6162               	cpfslt	(_PWM+6)& (0+255),b
  2181  001E02  0012               	return	
  2182  001E04  C062  F05A         	movff	_PWM+6,_rgl+8
  2183                           ;rgl.c: 586: }
  2184  001E08  0012               	return	
  2185  001E0A                     l165:
  2186                           ;rgl.c: 587: else
  2187  001E0A  C05A  FFE8         	movff	_rgl+8,wreg
  2188  001E0E  0100               	movlb	(_PWM+26) shr (0+8)
  2189  001E10  6176               	cpfslt	(_PWM+26)& (0+255),b
  2190  001E12  0012               	return	
  2191  001E14  C076  F05A         	movff	_PWM+26,_rgl+8
  2192                           ;rgl.c: 590: }
  2193  001E18  0012               	return	
  2194  001E1A                     l164:
  2195                           ;rgl.c: 592: }
  2196  001E1A  0E02               	movlw	2
  2197  001E1C  EC9C  F020         	call	_Trosnie
  2198  001E20  E33D               	bnc	l169
  2199  001E22  0100               	movlb	_rgl shr (0+8)
  2200  001E24  B752               	btfsc	_rgl& (0+255),3,b
  2201  001E26  D03A               	goto	l169
  2202                           ;rgl.c: 597: {
  2203  001E28  0100               	movlb	_rgl shr (0+8)
  2204  001E2A  8752               	bsf	_rgl& (0+255),3,b
  2205                           ;rgl.c: 599: k=5;
  2206  001E2C  0E05               	movlw	5
  2207  001E2E  6ED9               	movwf	fsr2l,c
  2208                           ;rgl.c: 600: if(PWM.MMAXCW>PWM.MGMOD)
  2209  001E30  C076  FFE8         	movff	_PWM+26,wreg
  2210  001E34  0100               	movlb	(_PWM+6) shr (0+8)
  2211  001E36  6162               	cpfslt	(_PWM+6)& (0+255),b
  2212  001E38  D017               	goto	l170
  2213                           ;rgl.c: 601: {
  2214  001E3A  0E05               	movlw	5
  2215  001E3C  C059  F002         	movff	_rgl+7,btemp+2
  2216  001E40  6A03               	clrf	btemp+3,c
  2217  001E42  2602               	addwf	btemp+2,f,c
  2218  001E44  0E00               	movlw	0
  2219  001E46  2203               	addwfc	btemp+3,f,c
  2220  001E48  C062  F000         	movff	_PWM+6,btemp
  2221  001E4C  6A01               	clrf	btemp+1,c
  2222  001E4E  5001               	movf	btemp+1,w,c
  2223  001E50  0A80               	xorlw	128
  2224  001E52  6E04               	movwf	btemp+4,c
  2225  001E54  5003               	movf	btemp+3,w,c
  2226  001E56  0A80               	xorlw	128
  2227  001E58  5C04               	subwf	btemp+4,w,c
  2228  001E5A  E102               	bnz	u1845
  2229  001E5C  5002               	movf	btemp+2,w,c
  2230  001E5E  5C00               	subwf	btemp,w,c
  2231  001E60                     u1845:
  2232  001E60  E21A               	bc	l174
  2233  001E62  C062  F059         	movff	_PWM+6,_rgl+7
  2234  001E66  D01A               	goto	l169
  2235                           ;rgl.c: 603: else rgl.srp+=k;
  2236                           ;rgl.c: 604: }
  2237  001E68                     l170:
  2238                           ;rgl.c: 605: else
  2239  001E68  0E05               	movlw	5
  2240  001E6A  C059  F002         	movff	_rgl+7,btemp+2
  2241  001E6E  6A03               	clrf	btemp+3,c
  2242  001E70  2602               	addwf	btemp+2,f,c
  2243  001E72  0E00               	movlw	0
  2244  001E74  2203               	addwfc	btemp+3,f,c
  2245  001E76  C076  F000         	movff	_PWM+26,btemp
  2246  001E7A  6A01               	clrf	btemp+1,c
  2247  001E7C  5001               	movf	btemp+1,w,c
  2248  001E7E  0A80               	xorlw	128
  2249  001E80  6E04               	movwf	btemp+4,c
  2250  001E82  5003               	movf	btemp+3,w,c
  2251  001E84  0A80               	xorlw	128
  2252  001E86  5C04               	subwf	btemp+4,w,c
  2253  001E88  E102               	bnz	u1855
  2254  001E8A  5002               	movf	btemp+2,w,c
  2255  001E8C  5C00               	subwf	btemp,w,c
  2256  001E8E                     u1855:
  2257  001E8E  E203               	bc	l174
  2258  001E90  C076  F059         	movff	_PWM+26,_rgl+7
  2259  001E94  D003               	goto	l169
  2260  001E96                     l174:
  2261                           ;rgl.c: 608: else rgl.srp+=k;
  2262  001E96  0100               	movlb	(_rgl+7) shr (0+8)
  2263  001E98  0E05               	movlw	5
  2264  001E9A  2759               	addwf	(_rgl+7)& (0+255),f,b
  2265  001E9C                     l169:
  2266                           ;rgl.c: 609: }
  2267  001E9C  0E03               	movlw	3
  2268  001E9E  EC9C  F020         	call	_Trosnie
  2269  001EA2  E33D               	bnc	l176
  2270  001EA4  0100               	movlb	_rgl shr (0+8)
  2271  001EA6  B952               	btfsc	_rgl& (0+255),4,b
  2272  001EA8  D03A               	goto	l176
  2273                           ;rgl.c: 612: {
  2274  001EAA  0100               	movlb	_rgl shr (0+8)
  2275  001EAC  8952               	bsf	_rgl& (0+255),4,b
  2276                           ;rgl.c: 614: k=15;
  2277  001EAE  0E0F               	movlw	15
  2278  001EB0  6ED9               	movwf	fsr2l,c
  2279                           ;rgl.c: 615: if(PWM.MMAXCW>PWM.MGMOD)
  2280  001EB2  C076  FFE8         	movff	_PWM+26,wreg
  2281  001EB6  0100               	movlb	(_PWM+6) shr (0+8)
  2282  001EB8  6162               	cpfslt	(_PWM+6)& (0+255),b
  2283  001EBA  D017               	goto	l177
  2284                           ;rgl.c: 616: {
  2285  001EBC  0E0F               	movlw	15
  2286  001EBE  C059  F002         	movff	_rgl+7,btemp+2
  2287  001EC2  6A03               	clrf	btemp+3,c
  2288  001EC4  2602               	addwf	btemp+2,f,c
  2289  001EC6  0E00               	movlw	0
  2290  001EC8  2203               	addwfc	btemp+3,f,c
  2291  001ECA  C062  F000         	movff	_PWM+6,btemp
  2292  001ECE  6A01               	clrf	btemp+1,c
  2293  001ED0  5001               	movf	btemp+1,w,c
  2294  001ED2  0A80               	xorlw	128
  2295  001ED4  6E04               	movwf	btemp+4,c
  2296  001ED6  5003               	movf	btemp+3,w,c
  2297  001ED8  0A80               	xorlw	128
  2298  001EDA  5C04               	subwf	btemp+4,w,c
  2299  001EDC  E102               	bnz	u1905
  2300  001EDE  5002               	movf	btemp+2,w,c
  2301  001EE0  5C00               	subwf	btemp,w,c
  2302  001EE2                     u1905:
  2303  001EE2  E21A               	bc	l181
  2304  001EE4  C062  F059         	movff	_PWM+6,_rgl+7
  2305  001EE8  D01A               	goto	l176
  2306                           ;rgl.c: 618: else rgl.srp+=k;
  2307                           ;rgl.c: 619: }
  2308  001EEA                     l177:
  2309                           ;rgl.c: 620: else
  2310  001EEA  0E0F               	movlw	15
  2311  001EEC  C059  F002         	movff	_rgl+7,btemp+2
  2312  001EF0  6A03               	clrf	btemp+3,c
  2313  001EF2  2602               	addwf	btemp+2,f,c
  2314  001EF4  0E00               	movlw	0
  2315  001EF6  2203               	addwfc	btemp+3,f,c
  2316  001EF8  C076  F000         	movff	_PWM+26,btemp
  2317  001EFC  6A01               	clrf	btemp+1,c
  2318  001EFE  5001               	movf	btemp+1,w,c
  2319  001F00  0A80               	xorlw	128
  2320  001F02  6E04               	movwf	btemp+4,c
  2321  001F04  5003               	movf	btemp+3,w,c
  2322  001F06  0A80               	xorlw	128
  2323  001F08  5C04               	subwf	btemp+4,w,c
  2324  001F0A  E102               	bnz	u1915
  2325  001F0C  5002               	movf	btemp+2,w,c
  2326  001F0E  5C00               	subwf	btemp,w,c
  2327  001F10                     u1915:
  2328  001F10  E203               	bc	l181
  2329  001F12  C076  F059         	movff	_PWM+26,_rgl+7
  2330  001F16  D003               	goto	l176
  2331  001F18                     l181:
  2332                           ;rgl.c: 623: else rgl.srp+=k;
  2333  001F18  0100               	movlb	(_rgl+7) shr (0+8)
  2334  001F1A  0E0F               	movlw	15
  2335  001F1C  2759               	addwf	(_rgl+7)& (0+255),f,b
  2336  001F1E                     l176:
  2337                           ;rgl.c: 624: }
  2338  001F1E  0E01               	movlw	1
  2339  001F20  EC9C  F020         	call	_Trosnie
  2340  001F24  B0D8               	btfsc	status,0,c
  2341  001F26  0012               	return	
  2342                           ;rgl.c: 629: k=5;
  2343  001F28  0E05               	movlw	5
  2344  001F2A  6ED9               	movwf	fsr2l,c
  2345                           ;rgl.c: 630: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
  2346  001F2C  C05A  F000         	movff	_rgl+8,btemp
  2347  001F30  6A01               	clrf	btemp+1,c
  2348  001F32  2600               	addwf	btemp,f,c
  2349  001F34  0E00               	movlw	0
  2350  001F36  2201               	addwfc	btemp+1,f,c
  2351  001F38  5001               	movf	btemp+1,w,c
  2352  001F3A  0A80               	xorlw	128
  2353  001F3C  0F80               	addlw	-128
  2354  001F3E  0EF1               	movlw	241
  2355  001F40  B4D8               	btfsc	status,2,c
  2356  001F42  5C00               	subwf	btemp,w,c
  2357  001F44  E304               	bnc	l184
  2358  001F46  0EF0               	movlw	-16
  2359  001F48  CFE8 F05A          	movff	wreg,_rgl+8
  2360  001F4C  D003               	goto	l185
  2361  001F4E                     l184:
  2362                           ;rgl.c: 631: else rgl.xmod+=k;
  2363  001F4E  0100               	movlb	(_rgl+8) shr (0+8)
  2364  001F50  0E05               	movlw	5
  2365  001F52  275A               	addwf	(_rgl+8)& (0+255),f,b
  2366  001F54                     l185:
  2367                           ;rgl.c: 632: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PW
      +                          M.MMAXCW;
  2368  001F54  C05A  FFE8         	movff	_rgl+8,wreg
  2369  001F58  0100               	movlb	(_PWM+26) shr (0+8)
  2370  001F5A  6176               	cpfslt	(_PWM+26)& (0+255),b
  2371  001F5C  0012               	return	
  2372  001F5E  C076  F05A         	movff	_PWM+26,_rgl+8
  2373                           ;rgl.c: 633: }
  2374  001F62  0012               	return	
  2375  001F64                     __end_of_IncMaxCW:
  2376                           ;rgl.c: 636: void ModPrzCW(void)
  2377                           ;rgl.c: 637: {
  2378  001F64                     _ModPrzCW:
  2379  000000                     
  2380                           ;rgl.c: 638: unsigned char p,m,v,maxmod,mdmod,i;
  2381  001F64  0E00               	movlw	0
  2382  001F66  ECCB  F020         	call	_Tnizsza
  2383  001F6A  E201 D187          	bnc	l188
  2384                           ;rgl.c: 650: {
  2385  001F6E  C062  FFE8         	movff	_PWM+6,wreg
  2386  001F72  0100               	movlb	(_PWM+26) shr (0+8)
  2387  001F74  6176               	cpfslt	(_PWM+26)& (0+255),b
  2388  001F76  D003               	goto	l189
  2389  001F78  C076  FFE1         	movff	_PWM+26,fsr1l
  2390  001F7C  D002               	goto	l190
  2391  001F7E                     l189:
  2392                           ;rgl.c: 652: else maxmod=PWM.MGMOD;
  2393  001F7E  C062  FFE1         	movff	_PWM+6,fsr1l
  2394  001F82                     l190:
  2395                           ;rgl.c: 653: if(rgl.tmp_pwm>=pwm_center)
  2396  001F82  CF2C  FFE8         	movff	_pwm_center,wreg
  2397  001F86  0100               	movlb	(_rgl+9) shr (0+8)
  2398  001F88  5D5B               	subwf	(_rgl+9)& (0+255),w,b
  2399  001F8A  E201 D0BE          	bnc	l191
  2400                           ;rgl.c: 654: {
  2401  001F8E  C05A  FFE8         	movff	_rgl+8,wreg
  2402  001F92  5CE1               	subwf	fsr1l,w,c
  2403  001F94  E303               	bnc	l192
  2404  001F96  C05A  FFD9         	movff	_rgl+8,fsr2l
  2405  001F9A  D004               	goto	l193
  2406  001F9C                     l192:
  2407                           ;rgl.c: 656: else
  2408  001F9C  50E1               	movf	fsr1l,w,c
  2409  001F9E  6ED9               	movwf	fsr2l,c
  2410                           ;rgl.c: 659: rgl.xmod=maxmod;
  2411  001FA0  CFE1 F05A          	movff	fsr1l,_rgl+8
  2412  001FA4                     l193:
  2413                           ;rgl.c: 660: }
  2414  001FA4  C155  FFE8         	movff	_DtCW+9,wreg
  2415  001FA8  0A80               	xorlw	128
  2416  001FAA  0F79               	addlw	-135
  2417  001FAC  E335               	bnc	l194
  2418  001FAE  0E01               	movlw	1
  2419  001FB0  010F               	movlb	_tmr shr (0+8)
  2420  001FB2  6531               	cpfsgt	_tmr& (0+255),b
  2421  001FB4  D031               	goto	l194
  2422                           ;rgl.c: 662: {
  2423  001FB6  6B31               	clrf	_tmr& (0+255),b
  2424                           ;rgl.c: 664: r=p-PWM.MDMOD;
  2425  001FB8  C061  FFE8         	movff	_PWM+5,wreg
  2426  001FBC  5CD9               	subwf	fsr2l,w,c
  2427  001FBE  6EF3               	movwf	prodl,c
  2428  001FC0  6AF4               	clrf	prodh,c
  2429  001FC2  A0D8               	btfss	status,0,c
  2430  001FC4  06F4               	decf	prodh,f,c
  2431                           ;rgl.c: 665: if((p-(r/3))>PWM.MDMOD) p-=r/3;
  2432  001FC6  0E03               	movlw	3
  2433  001FC8  6E02               	movwf	btemp+2,c
  2434  001FCA  6A03               	clrf	btemp+3,c
  2435  001FCC  CFF3 F000          	movff	prodl,btemp
  2436  001FD0  CFF4 F001          	movff	prodh,btemp+1
  2437  001FD4  EC31  F04A         	call	awdiv
  2438  001FD8  5004               	movf	btemp+4,w,c
  2439  001FDA  5CD9               	subwf	fsr2l,w,c
  2440  001FDC  6E00               	movwf	btemp,c
  2441  001FDE  5005               	movf	btemp+5,w,c
  2442  001FE0  A0D8               	btfss	status,0,c
  2443  001FE2  2805               	incf	btemp+5,w,c
  2444  001FE4  6A01               	clrf	btemp+1,c
  2445  001FE6  5E01               	subwf	btemp+1,f,c
  2446  001FE8  C061  F002         	movff	_PWM+5,btemp+2
  2447  001FEC  6A03               	clrf	btemp+3,c
  2448  001FEE  5003               	movf	btemp+3,w,c
  2449  001FF0  0A80               	xorlw	128
  2450  001FF2  6E04               	movwf	btemp+4,c
  2451  001FF4  5001               	movf	btemp+1,w,c
  2452  001FF6  0A80               	xorlw	128
  2453  001FF8  5C04               	subwf	btemp+4,w,c
  2454  001FFA  E102               	bnz	u2025
  2455  001FFC  5000               	movf	btemp,w,c
  2456  001FFE  5C02               	subwf	btemp+2,w,c
  2457  002000                     u2025:
  2458  002000  E301 D138          	bc	l217
  2459  002004  0E03               	movlw	3
  2460  002006  6E02               	movwf	btemp+2,c
  2461  002008  6A03               	clrf	btemp+3,c
  2462  00200A  CFF3 F000          	movff	prodl,btemp
  2463  00200E  CFF4 F001          	movff	prodh,btemp+1
  2464  002012  EC31  F04A         	call	awdiv
  2465  002016  D039               	goto	L28
  2466                           ;rgl.c: 666: else p=PWM.MDMOD;
  2467                           ;rgl.c: 667: rgl.xmod=p;
  2468                           ;rgl.c: 668: }
  2469  002018                     l194:
  2470                           ;rgl.c: 669: else
  2471  002018  C155  FFE8         	movff	_DtCW+9,wreg
  2472  00201C  0A80               	xorlw	128
  2473  00201E  0F7B               	addlw	-133
  2474  002020  E337               	bnc	l198
  2475  002022  0E01               	movlw	1
  2476  002024  010F               	movlb	_tmr shr (0+8)
  2477  002026  6531               	cpfsgt	_tmr& (0+255),b
  2478  002028  D033               	goto	l198
  2479                           ;rgl.c: 671: {
  2480  00202A  6B31               	clrf	_tmr& (0+255),b
  2481                           ;rgl.c: 673: r=p-PWM.MDMOD;
  2482  00202C  C061  FFE8         	movff	_PWM+5,wreg
  2483  002030  5CD9               	subwf	fsr2l,w,c
  2484  002032  6EF3               	movwf	prodl,c
  2485  002034  6AF4               	clrf	prodh,c
  2486  002036  A0D8               	btfss	status,0,c
  2487  002038  06F4               	decf	prodh,f,c
  2488                           ;rgl.c: 674: if((p-(r/4))>PWM.MDMOD) p-=r/4;
  2489  00203A  0E04               	movlw	4
  2490  00203C  6E02               	movwf	btemp+2,c
  2491  00203E  6A03               	clrf	btemp+3,c
  2492  002040  CFF3 F000          	movff	prodl,btemp
  2493  002044  CFF4 F001          	movff	prodh,btemp+1
  2494  002048  EC31  F04A         	call	awdiv
  2495  00204C  5004               	movf	btemp+4,w,c
  2496  00204E  5CD9               	subwf	fsr2l,w,c
  2497  002050  6E00               	movwf	btemp,c
  2498  002052  5005               	movf	btemp+5,w,c
  2499  002054  A0D8               	btfss	status,0,c
  2500  002056  2805               	incf	btemp+5,w,c
  2501  002058  6A01               	clrf	btemp+1,c
  2502  00205A  5E01               	subwf	btemp+1,f,c
  2503  00205C  C061  F002         	movff	_PWM+5,btemp+2
  2504  002060  6A03               	clrf	btemp+3,c
  2505  002062  5003               	movf	btemp+3,w,c
  2506  002064  0A80               	xorlw	128
  2507  002066  6E04               	movwf	btemp+4,c
  2508  002068  5001               	movf	btemp+1,w,c
  2509  00206A  0A80               	xorlw	128
  2510  00206C  5C04               	subwf	btemp+4,w,c
  2511  00206E  E102               	bnz	u2065
  2512  002070  5000               	movf	btemp,w,c
  2513  002072  5C02               	subwf	btemp+2,w,c
  2514  002074                     u2065:
  2515  002074  E301 D0FE          	bc	l217
  2516  002078  0E04               	movlw	4
  2517  00207A  6E02               	movwf	btemp+2,c
  2518  00207C  6A03               	clrf	btemp+3,c
  2519  00207E  CFF3 F000          	movff	prodl,btemp
  2520  002082  CFF4 F001          	movff	prodh,btemp+1
  2521  002086  EC31  F04A         	call	awdiv
  2522  00208A                     L28:
  2523  00208A  5004               	movf	btemp+4,w,c
  2524  00208C  5ED9               	subwf	fsr2l,f,c
  2525  00208E  D0F4               	goto	l218
  2526                           ;rgl.c: 675: else p=PWM.MDMOD;
  2527                           ;rgl.c: 676: rgl.xmod=p;
  2528                           ;rgl.c: 677: }
  2529  002090                     l198:
  2530                           ;rgl.c: 678: else
  2531  002090  C155  FFE8         	movff	_DtCW+9,wreg
  2532  002094  0A80               	xorlw	128
  2533  002096  0F7C               	addlw	-132
  2534  002098  E201 D0F0          	bnc	l188
  2535  00209C  010F               	movlb	_tmr shr (0+8)
  2536  00209E  5331               	movf	_tmr& (0+255),f,b
  2537  0020A0  E101 D0EC          	bz	l188
  2538                           ;rgl.c: 680: {
  2539  0020A4  6B31               	clrf	_tmr& (0+255),b
  2540                           ;rgl.c: 682: r=p-PWM.MDMOD;
  2541  0020A6  C061  FFE8         	movff	_PWM+5,wreg
  2542  0020AA  5CD9               	subwf	fsr2l,w,c
  2543  0020AC  6EF3               	movwf	prodl,c
  2544  0020AE  6AF4               	clrf	prodh,c
  2545  0020B0  A0D8               	btfss	status,0,c
  2546  0020B2  06F4               	decf	prodh,f,c
  2547                           ;rgl.c: 683: if((p-(r/14))>PWM.MDMOD) p-=r/14;
  2548  0020B4  0E0E               	movlw	14
  2549  0020B6  6E02               	movwf	btemp+2,c
  2550  0020B8  6A03               	clrf	btemp+3,c
  2551  0020BA  CFF3 F000          	movff	prodl,btemp
  2552  0020BE  CFF4 F001          	movff	prodh,btemp+1
  2553  0020C2  EC31  F04A         	call	awdiv
  2554  0020C6  5004               	movf	btemp+4,w,c
  2555  0020C8  5CD9               	subwf	fsr2l,w,c
  2556  0020CA  6E00               	movwf	btemp,c
  2557  0020CC  5005               	movf	btemp+5,w,c
  2558  0020CE  A0D8               	btfss	status,0,c
  2559  0020D0  2805               	incf	btemp+5,w,c
  2560  0020D2  6A01               	clrf	btemp+1,c
  2561  0020D4  5E01               	subwf	btemp+1,f,c
  2562  0020D6  C061  F002         	movff	_PWM+5,btemp+2
  2563  0020DA  6A03               	clrf	btemp+3,c
  2564  0020DC  5003               	movf	btemp+3,w,c
  2565  0020DE  0A80               	xorlw	128
  2566  0020E0  6E04               	movwf	btemp+4,c
  2567  0020E2  5001               	movf	btemp+1,w,c
  2568  0020E4  0A80               	xorlw	128
  2569  0020E6  5C04               	subwf	btemp+4,w,c
  2570  0020E8  E102               	bnz	u2105
  2571  0020EA  5000               	movf	btemp,w,c
  2572  0020EC  5C02               	subwf	btemp+2,w,c
  2573  0020EE                     u2105:
  2574  0020EE  E301 D0C1          	bc	l217
  2575  0020F2  0E0E               	movlw	14
  2576  0020F4  6E02               	movwf	btemp+2,c
  2577  0020F6  6A03               	clrf	btemp+3,c
  2578  0020F8  CFF3 F000          	movff	prodl,btemp
  2579  0020FC  CFF4 F001          	movff	prodh,btemp+1
  2580  002100  EC31  F04A         	call	awdiv
  2581  002104                     L25:
  2582  002104  5004               	movf	btemp+4,w,c
  2583  002106  5ED9               	subwf	fsr2l,f,c
  2584  002108  D0B7               	goto	l218
  2585                           ;rgl.c: 684: else p=PWM.MDMOD;
  2586                           ;rgl.c: 685: rgl.xmod=p;
  2587                           ;rgl.c: 686: }
  2588  00210A                     l191:
  2589                           ;rgl.c: 688: else
  2590  00210A  C05A  FFE8         	movff	_rgl+8,wreg
  2591  00210E  5CE1               	subwf	fsr1l,w,c
  2592  002110  E303               	bnc	l206
  2593  002112  C05A  FFD9         	movff	_rgl+8,fsr2l
  2594  002116  D004               	goto	l207
  2595  002118                     l206:
  2596                           ;rgl.c: 691: else
  2597  002118  50E1               	movf	fsr1l,w,c
  2598  00211A  6ED9               	movwf	fsr2l,c
  2599                           ;rgl.c: 694: rgl.xmod=maxmod;
  2600  00211C  CFE1 F05A          	movff	fsr1l,_rgl+8
  2601  002120                     l207:
  2602                           ;rgl.c: 695: }
  2603  002120  C155  FFE8         	movff	_DtCW+9,wreg
  2604  002124  0A80               	xorlw	128
  2605  002126  0F79               	addlw	-135
  2606  002128  E334               	bnc	l208
  2607  00212A  0E01               	movlw	1
  2608  00212C  010F               	movlb	_tmr shr (0+8)
  2609  00212E  6531               	cpfsgt	_tmr& (0+255),b
  2610  002130  D030               	goto	l208
  2611                           ;rgl.c: 697: {
  2612  002132  6B31               	clrf	_tmr& (0+255),b
  2613                           ;rgl.c: 699: r=p-PWM.MDMOD;
  2614  002134  C061  FFE8         	movff	_PWM+5,wreg
  2615  002138  5CD9               	subwf	fsr2l,w,c
  2616  00213A  6EF3               	movwf	prodl,c
  2617  00213C  6AF4               	clrf	prodh,c
  2618  00213E  A0D8               	btfss	status,0,c
  2619  002140  06F4               	decf	prodh,f,c
  2620                           ;rgl.c: 700: if((p-(r/2))>PWM.MDMOD) p-=r/2;
  2621  002142  0E02               	movlw	2
  2622  002144  6E02               	movwf	btemp+2,c
  2623  002146  6A03               	clrf	btemp+3,c
  2624  002148  CFF3 F000          	movff	prodl,btemp
  2625  00214C  CFF4 F001          	movff	prodh,btemp+1
  2626  002150  EC31  F04A         	call	awdiv
  2627  002154  5004               	movf	btemp+4,w,c
  2628  002156  5CD9               	subwf	fsr2l,w,c
  2629  002158  6E00               	movwf	btemp,c
  2630  00215A  5005               	movf	btemp+5,w,c
  2631  00215C  A0D8               	btfss	status,0,c
  2632  00215E  2805               	incf	btemp+5,w,c
  2633  002160  6A01               	clrf	btemp+1,c
  2634  002162  5E01               	subwf	btemp+1,f,c
  2635  002164  C061  F002         	movff	_PWM+5,btemp+2
  2636  002168  6A03               	clrf	btemp+3,c
  2637  00216A  5003               	movf	btemp+3,w,c
  2638  00216C  0A80               	xorlw	128
  2639  00216E  6E04               	movwf	btemp+4,c
  2640  002170  5001               	movf	btemp+1,w,c
  2641  002172  0A80               	xorlw	128
  2642  002174  5C04               	subwf	btemp+4,w,c
  2643  002176  E102               	bnz	u2155
  2644  002178  5000               	movf	btemp,w,c
  2645  00217A  5C02               	subwf	btemp+2,w,c
  2646  00217C                     u2155:
  2647  00217C  E27B               	bc	l217
  2648  00217E  0E02               	movlw	2
  2649  002180  6E02               	movwf	btemp+2,c
  2650  002182  6A03               	clrf	btemp+3,c
  2651  002184  CFF3 F000          	movff	prodl,btemp
  2652  002188  CFF4 F001          	movff	prodh,btemp+1
  2653  00218C  EC31  F04A         	call	awdiv
  2654  002190  D7B9               	goto	L25
  2655                           ;rgl.c: 701: else p=PWM.MDMOD;
  2656                           ;rgl.c: 702: rgl.xmod=p;
  2657                           ;rgl.c: 703: }
  2658  002192                     l208:
  2659                           ;rgl.c: 704: else
  2660  002192  C155  FFE8         	movff	_DtCW+9,wreg
  2661  002196  0A80               	xorlw	128
  2662  002198  0F7B               	addlw	-133
  2663  00219A  E334               	bnc	l212
  2664  00219C  0E01               	movlw	1
  2665  00219E  010F               	movlb	_tmr shr (0+8)
  2666  0021A0  6531               	cpfsgt	_tmr& (0+255),b
  2667  0021A2  D030               	goto	l212
  2668                           ;rgl.c: 706: {
  2669  0021A4  6B31               	clrf	_tmr& (0+255),b
  2670                           ;rgl.c: 708: r=p-PWM.MDMOD;
  2671  0021A6  C061  FFE8         	movff	_PWM+5,wreg
  2672  0021AA  5CD9               	subwf	fsr2l,w,c
  2673  0021AC  6EF3               	movwf	prodl,c
  2674  0021AE  6AF4               	clrf	prodh,c
  2675  0021B0  A0D8               	btfss	status,0,c
  2676  0021B2  06F4               	decf	prodh,f,c
  2677                           ;rgl.c: 709: if((p-(r/3))>PWM.MDMOD) p-=r/3;
  2678  0021B4  0E03               	movlw	3
  2679  0021B6  6E02               	movwf	btemp+2,c
  2680  0021B8  6A03               	clrf	btemp+3,c
  2681  0021BA  CFF3 F000          	movff	prodl,btemp
  2682  0021BE  CFF4 F001          	movff	prodh,btemp+1
  2683  0021C2  EC31  F04A         	call	awdiv
  2684  0021C6  5004               	movf	btemp+4,w,c
  2685  0021C8  5CD9               	subwf	fsr2l,w,c
  2686  0021CA  6E00               	movwf	btemp,c
  2687  0021CC  5005               	movf	btemp+5,w,c
  2688  0021CE  A0D8               	btfss	status,0,c
  2689  0021D0  2805               	incf	btemp+5,w,c
  2690  0021D2  6A01               	clrf	btemp+1,c
  2691  0021D4  5E01               	subwf	btemp+1,f,c
  2692  0021D6  C061  F002         	movff	_PWM+5,btemp+2
  2693  0021DA  6A03               	clrf	btemp+3,c
  2694  0021DC  5003               	movf	btemp+3,w,c
  2695  0021DE  0A80               	xorlw	128
  2696  0021E0  6E04               	movwf	btemp+4,c
  2697  0021E2  5001               	movf	btemp+1,w,c
  2698  0021E4  0A80               	xorlw	128
  2699  0021E6  5C04               	subwf	btemp+4,w,c
  2700  0021E8  E102               	bnz	u2195
  2701  0021EA  5000               	movf	btemp,w,c
  2702  0021EC  5C02               	subwf	btemp+2,w,c
  2703  0021EE                     u2195:
  2704  0021EE  E242               	bc	l217
  2705  0021F0  0E03               	movlw	3
  2706  0021F2  6E02               	movwf	btemp+2,c
  2707  0021F4  6A03               	clrf	btemp+3,c
  2708  0021F6  CFF3 F000          	movff	prodl,btemp
  2709  0021FA  CFF4 F001          	movff	prodh,btemp+1
  2710  0021FE  EC31  F04A         	call	awdiv
  2711  002202  D780               	goto	L25
  2712                           ;rgl.c: 710: else p=PWM.MDMOD;
  2713                           ;rgl.c: 711: rgl.xmod=p;
  2714                           ;rgl.c: 712: }
  2715  002204                     l212:
  2716                           ;rgl.c: 713: else
  2717  002204  C155  FFE8         	movff	_DtCW+9,wreg
  2718  002208  0A80               	xorlw	128
  2719  00220A  0F7C               	addlw	-132
  2720  00220C  E337               	bnc	l188
  2721  00220E  010F               	movlb	_tmr shr (0+8)
  2722  002210  5331               	movf	_tmr& (0+255),f,b
  2723  002212  E034               	bz	l188
  2724                           ;rgl.c: 715: {
  2725  002214  6B31               	clrf	_tmr& (0+255),b
  2726                           ;rgl.c: 717: r=p-PWM.MDMOD;
  2727  002216  C061  FFE8         	movff	_PWM+5,wreg
  2728  00221A  5CD9               	subwf	fsr2l,w,c
  2729  00221C  6EF3               	movwf	prodl,c
  2730  00221E  6AF4               	clrf	prodh,c
  2731  002220  A0D8               	btfss	status,0,c
  2732  002222  06F4               	decf	prodh,f,c
  2733                           ;rgl.c: 718: if((p-(r/4))>PWM.MDMOD) p-=r/4;
  2734  002224  0E04               	movlw	4
  2735  002226  6E02               	movwf	btemp+2,c
  2736  002228  6A03               	clrf	btemp+3,c
  2737  00222A  CFF3 F000          	movff	prodl,btemp
  2738  00222E  CFF4 F001          	movff	prodh,btemp+1
  2739  002232  EC31  F04A         	call	awdiv
  2740  002236  5004               	movf	btemp+4,w,c
  2741  002238  5CD9               	subwf	fsr2l,w,c
  2742  00223A  6E00               	movwf	btemp,c
  2743  00223C  5005               	movf	btemp+5,w,c
  2744  00223E  A0D8               	btfss	status,0,c
  2745  002240  2805               	incf	btemp+5,w,c
  2746  002242  6A01               	clrf	btemp+1,c
  2747  002244  5E01               	subwf	btemp+1,f,c
  2748  002246  C061  F002         	movff	_PWM+5,btemp+2
  2749  00224A  6A03               	clrf	btemp+3,c
  2750  00224C  5003               	movf	btemp+3,w,c
  2751  00224E  0A80               	xorlw	128
  2752  002250  6E04               	movwf	btemp+4,c
  2753  002252  5001               	movf	btemp+1,w,c
  2754  002254  0A80               	xorlw	128
  2755  002256  5C04               	subwf	btemp+4,w,c
  2756  002258  E102               	bnz	u2235
  2757  00225A  5000               	movf	btemp,w,c
  2758  00225C  5C02               	subwf	btemp+2,w,c
  2759  00225E                     u2235:
  2760  00225E  E20A               	bc	l217
  2761  002260  0E04               	movlw	4
  2762  002262  6E02               	movwf	btemp+2,c
  2763  002264  6A03               	clrf	btemp+3,c
  2764  002266  CFF3 F000          	movff	prodl,btemp
  2765  00226A  CFF4 F001          	movff	prodh,btemp+1
  2766  00226E  EC31  F04A         	call	awdiv
  2767  002272  D70B               	goto	L28
  2768  002274                     l217:
  2769                           ;rgl.c: 719: else p=PWM.MDMOD;
  2770  002274  C061  FFD9         	movff	_PWM+5,fsr2l
  2771  002278                     l218:
  2772                           ;rgl.c: 720: rgl.xmod=p;
  2773  002278  CFD9 F05A          	movff	fsr2l,_rgl+8
  2774  00227C                     l188:
  2775                           ;rgl.c: 721: }
  2776  00227C  0100               	movlb	_rgl shr (0+8)
  2777                           ;rgl.c: 727: {
  2778  00227E  0E00               	movlw	0
  2779  002280  BB52               	btfsc	_rgl& (0+255),5,b
  2780  002282  D00C               	goto	L33
  2781  002284  ECA9  F020         	call	_Tmaleje
  2782  002288  B0D8               	btfsc	status,0,c
  2783  00228A  0012               	return	
  2784                           ;rgl.c: 731: {
  2785  00228C  0E08               	movlw	8
  2786  00228E  ECD8  F020         	call	_Twyzsza
  2787  002292  A0D8               	btfss	status,0,c
  2788  002294  0012               	return	
  2789                           ;rgl.c: 733: {
  2790  002296  0100               	movlb	_rgl shr (0+8)
  2791  002298  8B52               	bsf	_rgl& (0+255),5,b
  2792                           ;rgl.c: 742: return;
  2793  00229A  0012               	return	
  2794                           ;rgl.c: 744: else return;
  2795                           ;rgl.c: 746: else return;
  2796                           ;rgl.c: 750: else
  2797  00229C                     L33:
  2798  00229C  ECA9  F020         	call	_Tmaleje
  2799  0022A0  A0D8               	btfss	status,0,c
  2800  0022A2  ECC4  F020         	call	_Tstoi	;wreg free
  2801  0022A6  E306               	bnc	l224
  2802  0022A8  0E07               	movlw	7
  2803  0022AA  ECD8  F020         	call	_Twyzsza
  2804  0022AE  E202               	bc	l224
  2805                           ;rgl.c: 753: rgl.nmod=0;
  2806  0022B0  0100               	movlb	_rgl shr (0+8)
  2807  0022B2  9B52               	bcf	_rgl& (0+255),5,b
  2808  0022B4                     l224:
  2809                           ;rgl.c: 754: }
  2810  0022B4  010F               	movlb	F1564 shr (0+8)
  2811  0022B6  2B1A               	incf	F1564& (0+255),f,b
  2812                           ;rgl.c: 756: }
  2813  0022B8  0C01               	retlw	1
  2814  0022BA                     __end_of_ModPrzCW:
  2815                           ;rgl.c: 760: void SetPWM_CW(void)
  2816                           ;rgl.c: 761: {
  2817  0022BA                     _SetPWM_CW:
  2818  0022BA  EF8C  F017         	goto	_SetPWM_CW4
  2819                           ;rgl.c: 762: if(!rgl.nmod)
  2820                           ;rgl.c: 763: {
  2821                           ;rgl.c: 765: }
  2822                           ;rgl.c: 766: else WriteOPWM(PWM.MDMOD);
  2823                           ;rgl.c: 767: }
  2824  0022BE                     __end_of_SetPWM_CW:
  2825                           ;rgl.c: 777: void StartMCW4(void)
  2826                           ;rgl.c: 778: {
  2827  0022BE                     _StartMCW4:
  2828  000000                     
  2829                           ;rgl.c: 779: if(rgl.btcw) return;
  2830  0022BE  0100               	movlb	_rgl shr (0+8)
  2831  0022C0  B352               	btfsc	_rgl& (0+255),1,b
  2832  0022C2  0012               	return	
  2833                           ;rgl.c: 780: StartRTdS(3);
  2834  0022C4  0E03               	movlw	3
  2835  0022C6  EC16  F045         	call	_StartRTdS
  2836                           ;rgl.c: 781: DtCO.dDCO=0;
  2837  0022CA  0101               	movlb	(_DtCO+9) shr (0+8)
  2838  0022CC  6B46               	clrf	(_DtCO+9)& (0+255),b
  2839                           ;rgl.c: 782: DtCW.dDCW=0;
  2840  0022CE  0101               	movlb	(_DtCW+8) shr (0+8)
  2841  0022D0  6B54               	clrf	(_DtCW+8)& (0+255),b
  2842                           ;rgl.c: 783: DtCO.indCO=0;
  2843  0022D2  0101               	movlb	(_DtCO+10) shr (0+8)
  2844  0022D4  6B47               	clrf	(_DtCO+10)& (0+255),b
  2845                           ;rgl.c: 784: DtCW.indCW=0;
  2846  0022D6  0101               	movlb	(_DtCW+10) shr (0+8)
  2847  0022D8  6B56               	clrf	(_DtCW+10)& (0+255),b
  2848                           ;rgl.c: 785: rgl.fz=0;
  2849  0022DA  0100               	movlb	_rgl shr (0+8)
  2850  0022DC  9552               	bcf	_rgl& (0+255),2,b
  2851                           ;rgl.c: 786: rgl.med_up=0;
  2852  0022DE  9752               	bcf	_rgl& (0+255),3,b
  2853                           ;rgl.c: 787: rgl.fast_up=0;
  2854  0022E0  9952               	bcf	_rgl& (0+255),4,b
  2855                           ;rgl.c: 788: rgl.srp=0;
  2856  0022E2  6B59               	clrf	(_rgl+7)& (0+255),b
  2857                           ;rgl.c: 789: rgl.ytmp=0;
  2858  0022E4  6B58               	clrf	(_rgl+6)& (0+255),b
  2859                           ;rgl.c: 790: rgl.nmod=0;
  2860  0022E6  9B52               	bcf	_rgl& (0+255),5,b
  2861                           ;rgl.c: 791: rgl.del1s=0;
  2862  0022E8  9D52               	bcf	_rgl& (0+255),6,b
  2863                           ;rgl.c: 792: rgl.inv_mod=0;
  2864  0022EA  9153               	bcf	(_rgl+1)& (0+255),0,b
  2865                           ;rgl.c: 793: rgl.xmod=FirstPCW4();
  2866  0022EC  D808               	call	_FirstPCW4	;wreg free
  2867  0022EE  CFE8 F05A          	movff	wreg,_rgl+8
  2868                           ;rgl.c: 794: tmr=1;
  2869  0022F2  0E01               	movlw	1
  2870  0022F4  CFE8 FF31          	movff	wreg,_tmr
  2871                           ;rgl.c: 795: tmr2=1;
  2872  0022F8  CFE8 FF32          	movff	wreg,_tmr2
  2873                           ;rgl.c: 796: }
  2874  0022FC  0C01               	retlw	1
  2875  0022FE                     __end_of_StartMCW4:
  2876                           ;rgl.c: 799: unsigned char FirstPCW4(void)
  2877                           ;rgl.c: 800: {
  2878  0022FE                     _FirstPCW4:
  2879  000000                     
  2880                           ;rgl.c: 801: signed long m;
  2881  0022FE  C070  FFE8         	movff	_PWM+20,wreg
  2882  002302  0100               	movlb	(_PWM+26) shr (0+8)
  2883  002304  6176               	cpfslt	(_PWM+26)& (0+255),b
  2884  002306  D003               	goto	l232
  2885  002308  C076  FFE1         	movff	_PWM+26,fsr1l
  2886  00230C  D002               	goto	l233
  2887  00230E                     l232:
  2888                           ;rgl.c: 806: else maxmod=PWM.FIRSTPB;
  2889  00230E  C070  FFE1         	movff	_PWM+20,fsr1l
  2890  002312                     l233:
  2891                           ;rgl.c: 809: if(DtCW.CW>=20&&DtCW.CW<=60)
  2892  002312  0E13               	movlw	19
  2893  002314  0101               	movlb	(_DtCW+2) shr (0+8)
  2894  002316  654E               	cpfsgt	(_DtCW+2)& (0+255),b
  2895  002318  D06D               	goto	l234
  2896  00231A  0E3D               	movlw	61
  2897  00231C  614E               	cpfslt	(_DtCW+2)& (0+255),b
  2898  00231E  D06A               	goto	l234
  2899                           ;rgl.c: 810: {
  2900  002320  0E0A               	movlw	10
  2901  002322  6E02               	movwf	btemp+2,c
  2902  002324  6A03               	clrf	btemp+3,c
  2903  002326  0E3C               	movlw	60
  2904  002328  6E00               	movwf	btemp,c
  2905  00232A  6A01               	clrf	btemp+1,c
  2906  00232C  C14E  FFE8         	movff	_DtCW+2,wreg
  2907  002330  5E00               	subwf	btemp,f,c
  2908  002332  0E00               	movlw	0
  2909  002334  5A01               	subwfb	btemp+1,f,c
  2910  002336  EC78  F04A         	call	awmul
  2911  00233A  0100               	movlb	__Lparam shr (0+8)
  2912  00233C  C004  F0F1         	movff	btemp+4,?a_FirstPCW4+1
  2913  002340  C005  F0F2         	movff	btemp+5,?a_FirstPCW4+2
  2914  002344  0E00               	movlw	0
  2915  002346  BFF2               	btfsc	(?a_FirstPCW4+2)^(__Lparam& (0+65280)),7,
      +                          b
  2916  002348  0EFF               	movlw	-1
  2917  00234A  6FF3               	movwf	(?a_FirstPCW4+3)^(__Lparam& (0+65280)),b
  2918  00234C  6FF4               	movwf	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),b
  2919                           ;rgl.c: 812: m=m/(60-20);
  2920  00234E  0E28               	movlw	40
  2921  002350  6E04               	movwf	btemp+4,c
  2922  002352  6A05               	clrf	btemp+5,c
  2923  002354  6A06               	clrf	btemp+6,c
  2924  002356  6A07               	clrf	btemp+7,c
  2925  002358  0EF1               	movlw	low (?a_FirstPCW4+1)
  2926  00235A  6EE9               	movwf	fsr0l,c
  2927  00235C  0E00               	movlw	high (?a_FirstPCW4+1)
  2928  00235E  6EEA               	movwf	fsr0h,c
  2929  002360  ECB5  F04A         	call	aldiv_f
  2930                           ;rgl.c: 813: m=m*(maxmod-PWM.MDMOD);
  2931  002364  C061  FFE8         	movff	_PWM+5,wreg
  2932  002368  5CE1               	subwf	fsr1l,w,c
  2933  00236A  6E04               	movwf	btemp+4,c
  2934  00236C  6A05               	clrf	btemp+5,c
  2935  00236E  A0D8               	btfss	status,0,c
  2936  002370  0605               	decf	btemp+5,f,c
  2937  002372  6A06               	clrf	btemp+6,c
  2938  002374  BE05               	btfsc	btemp+5,7,c
  2939  002376  0606               	decf	btemp+6,f,c
  2940  002378  5006               	movf	btemp+6,w,c
  2941  00237A  6E07               	movwf	btemp+7,c
  2942  00237C  0EF1               	movlw	low (?a_FirstPCW4+1)
  2943  00237E  6EE9               	movwf	fsr0l,c
  2944  002380  0E00               	movlw	high (?a_FirstPCW4+1)
  2945  002382  6EEA               	movwf	fsr0h,c
  2946  002384  ECAB  F04A         	call	almul_f
  2947                           ;rgl.c: 814: if(m<0) m=0;
  2948  002388  AFF4               	btfss	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),7,
      +                          b
  2949  00238A  D004               	goto	l235
  2950  00238C  6BF1               	clrf	(?a_FirstPCW4+1)^(__Lparam& (0+65280)),b
  2951  00238E  6BF2               	clrf	(?a_FirstPCW4+2)^(__Lparam& (0+65280)),b
  2952  002390  6BF3               	clrf	(?a_FirstPCW4+3)^(__Lparam& (0+65280)),b
  2953  002392  6BF4               	clrf	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),b
  2954  002394                     l235:
  2955                           ;rgl.c: 815: m=m/10+PWM.MDMOD;
  2956  002394  0E0A               	movlw	10
  2957  002396  6E04               	movwf	btemp+4,c
  2958  002398  6A05               	clrf	btemp+5,c
  2959  00239A  6A06               	clrf	btemp+6,c
  2960  00239C  6A07               	clrf	btemp+7,c
  2961  00239E  C0F1  F000         	movff	?a_FirstPCW4+1,btemp
  2962  0023A2  C0F2  F001         	movff	?a_FirstPCW4+2,btemp+1
  2963  0023A6  C0F3  F002         	movff	?a_FirstPCW4+3,btemp+2
  2964  0023AA  C0F4  F003         	movff	?a_FirstPCW4+4,btemp+3
  2965  0023AE  ECE2  F049         	call	aldiv
  2966  0023B2  C061  FFE8         	movff	_PWM+5,wreg
  2967  0023B6  2400               	addwf	btemp,w,c
  2968  0023B8  0100               	movlb	__Lparam shr (0+8)
  2969  0023BA  6FF1               	movwf	(?a_FirstPCW4+1)^(__Lparam& (0+65280)),b
  2970  0023BC  0E00               	movlw	0
  2971  0023BE  2001               	addwfc	btemp+1,w,c
  2972  0023C0  6FF2               	movwf	(?a_FirstPCW4+2)^(__Lparam& (0+65280)),b
  2973  0023C2  0E00               	movlw	0
  2974  0023C4  2002               	addwfc	btemp+2,w,c
  2975  0023C6  6FF3               	movwf	(?a_FirstPCW4+3)^(__Lparam& (0+65280)),b
  2976  0023C8  0E00               	movlw	0
  2977  0023CA  2003               	addwfc	btemp+3,w,c
  2978  0023CC  6FF4               	movwf	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),b
  2979                           ;rgl.c: 816: if(m>0xff) p=maxmod;
  2980  0023CE  51F4               	movf	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),w
  2981  0023D0  0A80               	xorlw	128
  2982  0023D2  0F80               	addlw	128
  2983  0023D4  E108               	bnz	u2395
  2984  0023D6  0E00               	movlw	0
  2985  0023D8  5DF3               	subwf	(?a_FirstPCW4+3)^(__Lparam& (0+65280)),w
  2986  0023DA  E105               	bnz	u2395
  2987  0023DC  0E01               	movlw	1
  2988  0023DE  5DF2               	subwf	(?a_FirstPCW4+2)^(__Lparam& (0+65280)),w
  2989  0023E0  E102               	bnz	u2395
  2990  0023E2  0E00               	movlw	0
  2991  0023E4  5DF1               	subwf	(?a_FirstPCW4+1)^(__Lparam& (0+65280)),w
  2992  0023E6                     u2395:
  2993  0023E6  E303               	bnc	l236
  2994  0023E8  50E1               	movf	fsr1l,w,c
  2995  0023EA                     L9:
  2996  0023EA  6FF0               	movwf	?a_FirstPCW4^(__Lparam& (0+65280)),b
  2997  0023EC  D010               	goto	l238
  2998  0023EE                     l236:
  2999                           ;rgl.c: 817: else p=m;
  3000  0023EE  0100               	movlb	__Lparam shr (0+8)
  3001  0023F0  51F1               	movf	(?a_FirstPCW4+1)^(__Lparam& (0+65280)),w
  3002  0023F2  D7FB               	goto	L9
  3003                           ;rgl.c: 818: }
  3004  0023F4                     l234:
  3005                           ;rgl.c: 819: else
  3006  0023F4  0E14               	movlw	20
  3007  0023F6  0101               	movlb	(_DtCW+2) shr (0+8)
  3008  0023F8  614E               	cpfslt	(_DtCW+2)& (0+255),b
  3009  0023FA  D003               	goto	l239
  3010  0023FC  50E1               	movf	fsr1l,w,c
  3011  0023FE  0100               	movlb	__Lparam shr (0+8)
  3012  002400  6FF0               	movwf	?a_FirstPCW4^(__Lparam& (0+65280)),b
  3013  002402                     l239:
  3014                           ;rgl.c: 822: if(DtCW.CW>60) p=PWM.MDMOD;
  3015  002402  0E3C               	movlw	60
  3016  002404  0101               	movlb	(_DtCW+2) shr (0+8)
  3017  002406  654E               	cpfsgt	(_DtCW+2)& (0+255),b
  3018  002408  D002               	goto	l238
  3019  00240A  C061  F0F0         	movff	_PWM+5,?a_FirstPCW4
  3020  00240E                     l238:
  3021                           ;rgl.c: 823: }
  3022  00240E  0E0A               	movlw	10
  3023  002410  6E02               	movwf	btemp+2,c
  3024  002412  6A03               	clrf	btemp+3,c
  3025  002414  C14F  F000         	movff	_DtCW+3,btemp
  3026  002418  6A01               	clrf	btemp+1,c
  3027  00241A  0EDD               	movlw	221
  3028  00241C  2600               	addwf	btemp,f,c
  3029  00241E  0EFF               	movlw	255
  3030  002420  2201               	addwfc	btemp+1,f,c
  3031  002422  EC78  F04A         	call	awmul
  3032  002426  0100               	movlb	__Lparam shr (0+8)
  3033  002428  C004  F0F1         	movff	btemp+4,?a_FirstPCW4+1
  3034  00242C  C005  F0F2         	movff	btemp+5,?a_FirstPCW4+2
  3035  002430  0E00               	movlw	0
  3036  002432  BFF2               	btfsc	(?a_FirstPCW4+2)^(__Lparam& (0+65280)),7,
      +                          b
  3037  002434  0EFF               	movlw	-1
  3038  002436  6FF3               	movwf	(?a_FirstPCW4+3)^(__Lparam& (0+65280)),b
  3039  002438  6FF4               	movwf	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),b
  3040                           ;rgl.c: 827: m=m/(60-35);
  3041  00243A  0E19               	movlw	25
  3042  00243C  6E04               	movwf	btemp+4,c
  3043  00243E  6A05               	clrf	btemp+5,c
  3044  002440  6A06               	clrf	btemp+6,c
  3045  002442  6A07               	clrf	btemp+7,c
  3046  002444  0EF1               	movlw	low (?a_FirstPCW4+1)
  3047  002446  6EE9               	movwf	fsr0l,c
  3048  002448  0E00               	movlw	high (?a_FirstPCW4+1)
  3049  00244A  6EEA               	movwf	fsr0h,c
  3050  00244C  ECB5  F04A         	call	aldiv_f
  3051                           ;rgl.c: 828: m=m*(maxmod-PWM.MDMOD);
  3052  002450  C061  FFE8         	movff	_PWM+5,wreg
  3053  002454  5CE1               	subwf	fsr1l,w,c
  3054  002456  6E04               	movwf	btemp+4,c
  3055  002458  6A05               	clrf	btemp+5,c
  3056  00245A  A0D8               	btfss	status,0,c
  3057  00245C  0605               	decf	btemp+5,f,c
  3058  00245E  6A06               	clrf	btemp+6,c
  3059  002460  BE05               	btfsc	btemp+5,7,c
  3060  002462  0606               	decf	btemp+6,f,c
  3061  002464  5006               	movf	btemp+6,w,c
  3062  002466  6E07               	movwf	btemp+7,c
  3063  002468  0EF1               	movlw	low (?a_FirstPCW4+1)
  3064  00246A  6EE9               	movwf	fsr0l,c
  3065  00246C  0E00               	movlw	high (?a_FirstPCW4+1)
  3066  00246E  6EEA               	movwf	fsr0h,c
  3067  002470  ECAB  F04A         	call	almul_f
  3068                           ;rgl.c: 829: if(m<0) m=0;
  3069  002474  AFF4               	btfss	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),7,
      +                          b
  3070  002476  D004               	goto	l241
  3071  002478  6BF1               	clrf	(?a_FirstPCW4+1)^(__Lparam& (0+65280)),b
  3072  00247A  6BF2               	clrf	(?a_FirstPCW4+2)^(__Lparam& (0+65280)),b
  3073  00247C  6BF3               	clrf	(?a_FirstPCW4+3)^(__Lparam& (0+65280)),b
  3074  00247E  6BF4               	clrf	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),b
  3075  002480                     l241:
  3076                           ;rgl.c: 830: m=m/10+PWM.MDMOD;
  3077  002480  0E0A               	movlw	10
  3078  002482  6E04               	movwf	btemp+4,c
  3079  002484  6A05               	clrf	btemp+5,c
  3080  002486  6A06               	clrf	btemp+6,c
  3081  002488  6A07               	clrf	btemp+7,c
  3082  00248A  C0F1  F000         	movff	?a_FirstPCW4+1,btemp
  3083  00248E  C0F2  F001         	movff	?a_FirstPCW4+2,btemp+1
  3084  002492  C0F3  F002         	movff	?a_FirstPCW4+3,btemp+2
  3085  002496  C0F4  F003         	movff	?a_FirstPCW4+4,btemp+3
  3086  00249A  ECE2  F049         	call	aldiv
  3087  00249E  C061  FFE8         	movff	_PWM+5,wreg
  3088  0024A2  2400               	addwf	btemp,w,c
  3089  0024A4  0100               	movlb	__Lparam shr (0+8)
  3090  0024A6  6FF1               	movwf	(?a_FirstPCW4+1)^(__Lparam& (0+65280)),b
  3091  0024A8  0E00               	movlw	0
  3092  0024AA  2001               	addwfc	btemp+1,w,c
  3093  0024AC  6FF2               	movwf	(?a_FirstPCW4+2)^(__Lparam& (0+65280)),b
  3094  0024AE  0E00               	movlw	0
  3095  0024B0  2002               	addwfc	btemp+2,w,c
  3096  0024B2  6FF3               	movwf	(?a_FirstPCW4+3)^(__Lparam& (0+65280)),b
  3097  0024B4  0E00               	movlw	0
  3098  0024B6  2003               	addwfc	btemp+3,w,c
  3099  0024B8  6FF4               	movwf	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),b
  3100                           ;rgl.c: 831: if(m>0xff) p2=maxmod;
  3101  0024BA  51F4               	movf	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),w
  3102  0024BC  0A80               	xorlw	128
  3103  0024BE  0F80               	addlw	128
  3104  0024C0  E108               	bnz	u2435
  3105  0024C2  0E00               	movlw	0
  3106  0024C4  5DF3               	subwf	(?a_FirstPCW4+3)^(__Lparam& (0+65280)),w
  3107  0024C6  E105               	bnz	u2435
  3108  0024C8  0E01               	movlw	1
  3109  0024CA  5DF2               	subwf	(?a_FirstPCW4+2)^(__Lparam& (0+65280)),w
  3110  0024CC  E102               	bnz	u2435
  3111  0024CE  0E00               	movlw	0
  3112  0024D0  5DF1               	subwf	(?a_FirstPCW4+1)^(__Lparam& (0+65280)),w
  3113  0024D2                     u2435:
  3114  0024D2  E302               	bnc	l242
  3115  0024D4  50E1               	movf	fsr1l,w,c
  3116  0024D6  D002               	goto	L10
  3117  0024D8                     l242:
  3118                           ;rgl.c: 832: else p2=m;
  3119  0024D8  0100               	movlb	__Lparam shr (0+8)
  3120  0024DA  51F1               	movf	(?a_FirstPCW4+1)^(__Lparam& (0+65280)),w
  3121  0024DC                     L10:
  3122  0024DC  6ED9               	movwf	fsr2l,c
  3123                           ;rgl.c: 835: if(p>p2) p=p2;
  3124  0024DE  0100               	movlb	__Lparam shr (0+8)
  3125  0024E0  51F0               	movf	?a_FirstPCW4^(__Lparam& (0+65280)),w
  3126  0024E2  60D9               	cpfslt	fsr2l,c
  3127  0024E4  D002               	goto	l244
  3128  0024E6  50D9               	movf	fsr2l,w,c
  3129  0024E8  6FF0               	movwf	?a_FirstPCW4^(__Lparam& (0+65280)),b
  3130  0024EA                     l244:
  3131                           ;rgl.c: 838: if(DtCW.DCW>=0&&DtCW.DCW<=40)
  3132  0024EA  C153  F000         	movff	_DtCW+7,btemp
  3133  0024EE  C153  FFE8         	movff	_DtCW+7,wreg
  3134  0024F2  0A80               	xorlw	128
  3135  0024F4  BE00               	btfsc	btemp,7,c
  3136  0024F6  D06C               	goto	L34
  3137  0024F8  0F57               	addlw	-169
  3138  0024FA  E267               	bc	l245
  3139                           ;rgl.c: 839: {
  3140  0024FC  0E0A               	movlw	10
  3141  0024FE  6E02               	movwf	btemp+2,c
  3142  002500  6A03               	clrf	btemp+3,c
  3143  002502  C153  F000         	movff	_DtCW+7,btemp
  3144  002506  6A01               	clrf	btemp+1,c
  3145  002508  BE00               	btfsc	btemp,7,c
  3146  00250A  0601               	decf	btemp+1,f,c
  3147  00250C  EC78  F04A         	call	awmul
  3148  002510  0100               	movlb	__Lparam shr (0+8)
  3149  002512  C004  F0F1         	movff	btemp+4,?a_FirstPCW4+1
  3150  002516  C005  F0F2         	movff	btemp+5,?a_FirstPCW4+2
  3151  00251A  0E00               	movlw	0
  3152  00251C  BFF2               	btfsc	(?a_FirstPCW4+2)^(__Lparam& (0+65280)),7,
      +                          b
  3153  00251E  0EFF               	movlw	-1
  3154  002520  6FF3               	movwf	(?a_FirstPCW4+3)^(__Lparam& (0+65280)),b
  3155  002522  6FF4               	movwf	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),b
  3156                           ;rgl.c: 841: m=m/(40-0);
  3157  002524  0E28               	movlw	40
  3158  002526  6E04               	movwf	btemp+4,c
  3159  002528  6A05               	clrf	btemp+5,c
  3160  00252A  6A06               	clrf	btemp+6,c
  3161  00252C  6A07               	clrf	btemp+7,c
  3162  00252E  0EF1               	movlw	low (?a_FirstPCW4+1)
  3163  002530  6EE9               	movwf	fsr0l,c
  3164  002532  0E00               	movlw	high (?a_FirstPCW4+1)
  3165  002534  6EEA               	movwf	fsr0h,c
  3166  002536  ECB5  F04A         	call	aldiv_f
  3167                           ;rgl.c: 842: m=m*(maxmod-PWM.MDMOD);
  3168  00253A  C061  FFE8         	movff	_PWM+5,wreg
  3169  00253E  5CE1               	subwf	fsr1l,w,c
  3170  002540  6E04               	movwf	btemp+4,c
  3171  002542  6A05               	clrf	btemp+5,c
  3172  002544  A0D8               	btfss	status,0,c
  3173  002546  0605               	decf	btemp+5,f,c
  3174  002548  6A06               	clrf	btemp+6,c
  3175  00254A  BE05               	btfsc	btemp+5,7,c
  3176  00254C  0606               	decf	btemp+6,f,c
  3177  00254E  5006               	movf	btemp+6,w,c
  3178  002550  6E07               	movwf	btemp+7,c
  3179  002552  0EF1               	movlw	low (?a_FirstPCW4+1)
  3180  002554  6EE9               	movwf	fsr0l,c
  3181  002556  0E00               	movlw	high (?a_FirstPCW4+1)
  3182  002558  6EEA               	movwf	fsr0h,c
  3183  00255A  ECAB  F04A         	call	almul_f
  3184                           ;rgl.c: 843: if(m<0) m=0;
  3185  00255E  AFF4               	btfss	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),7,
      +                          b
  3186  002560  D004               	goto	l246
  3187  002562  6BF1               	clrf	(?a_FirstPCW4+1)^(__Lparam& (0+65280)),b
  3188  002564  6BF2               	clrf	(?a_FirstPCW4+2)^(__Lparam& (0+65280)),b
  3189  002566  6BF3               	clrf	(?a_FirstPCW4+3)^(__Lparam& (0+65280)),b
  3190  002568  6BF4               	clrf	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),b
  3191  00256A                     l246:
  3192                           ;rgl.c: 844: m=m/10+PWM.MDMOD;
  3193  00256A  0E0A               	movlw	10
  3194  00256C  6E04               	movwf	btemp+4,c
  3195  00256E  6A05               	clrf	btemp+5,c
  3196  002570  6A06               	clrf	btemp+6,c
  3197  002572  6A07               	clrf	btemp+7,c
  3198  002574  C0F1  F000         	movff	?a_FirstPCW4+1,btemp
  3199  002578  C0F2  F001         	movff	?a_FirstPCW4+2,btemp+1
  3200  00257C  C0F3  F002         	movff	?a_FirstPCW4+3,btemp+2
  3201  002580  C0F4  F003         	movff	?a_FirstPCW4+4,btemp+3
  3202  002584  ECE2  F049         	call	aldiv
  3203  002588  C061  FFE8         	movff	_PWM+5,wreg
  3204  00258C  2400               	addwf	btemp,w,c
  3205  00258E  0100               	movlb	__Lparam shr (0+8)
  3206  002590  6FF1               	movwf	(?a_FirstPCW4+1)^(__Lparam& (0+65280)),b
  3207  002592  0E00               	movlw	0
  3208  002594  2001               	addwfc	btemp+1,w,c
  3209  002596  6FF2               	movwf	(?a_FirstPCW4+2)^(__Lparam& (0+65280)),b
  3210  002598  0E00               	movlw	0
  3211  00259A  2002               	addwfc	btemp+2,w,c
  3212  00259C  6FF3               	movwf	(?a_FirstPCW4+3)^(__Lparam& (0+65280)),b
  3213  00259E  0E00               	movlw	0
  3214  0025A0  2003               	addwfc	btemp+3,w,c
  3215  0025A2  6FF4               	movwf	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),b
  3216                           ;rgl.c: 845: if(m>0xff) p2=maxmod;
  3217  0025A4  51F4               	movf	(?a_FirstPCW4+4)^(__Lparam& (0+65280)),w
  3218  0025A6  0A80               	xorlw	128
  3219  0025A8  0F80               	addlw	128
  3220  0025AA  E108               	bnz	u2495
  3221  0025AC  0E00               	movlw	0
  3222  0025AE  5DF3               	subwf	(?a_FirstPCW4+3)^(__Lparam& (0+65280)),w
  3223  0025B0  E105               	bnz	u2495
  3224  0025B2  0E01               	movlw	1
  3225  0025B4  5DF2               	subwf	(?a_FirstPCW4+2)^(__Lparam& (0+65280)),w
  3226  0025B6  E102               	bnz	u2495
  3227  0025B8  0E00               	movlw	0
  3228  0025BA  5DF1               	subwf	(?a_FirstPCW4+1)^(__Lparam& (0+65280)),w
  3229  0025BC                     u2495:
  3230  0025BC  E303               	bnc	l247
  3231  0025BE  50E1               	movf	fsr1l,w,c
  3232  0025C0                     L11:
  3233  0025C0  6ED9               	movwf	fsr2l,c
  3234  0025C2  D00F               	goto	l249
  3235  0025C4                     l247:
  3236                           ;rgl.c: 846: else p2=m;
  3237  0025C4  0100               	movlb	__Lparam shr (0+8)
  3238  0025C6  51F1               	movf	(?a_FirstPCW4+1)^(__Lparam& (0+65280)),w
  3239  0025C8  D7FB               	goto	L11
  3240                           ;rgl.c: 847: }
  3241  0025CA                     l245:
  3242                           ;rgl.c: 848: else
  3243  0025CA  C153  FFE8         	movff	_DtCW+7,wreg
  3244  0025CE  0A80               	xorlw	128
  3245  0025D0                     L34:
  3246  0025D0  0F57               	addlw	-169
  3247  0025D2  E302               	bnc	l250
  3248  0025D4  50E1               	movf	fsr1l,w,c
  3249  0025D6  6ED9               	movwf	fsr2l,c
  3250  0025D8                     l250:
  3251                           ;rgl.c: 851: if(DtCW.DCW<0) p2=PWM.MDMOD;
  3252  0025D8  C153  F000         	movff	_DtCW+7,btemp
  3253  0025DC  BE00               	btfsc	btemp,7,c
  3254  0025DE  C061  FFD9         	movff	_PWM+5,fsr2l
  3255  0025E2                     l249:
  3256                           ;rgl.c: 852: }
  3257  0025E2  0100               	movlb	__Lparam shr (0+8)
  3258  0025E4  51F0               	movf	?a_FirstPCW4^(__Lparam& (0+65280)),w
  3259  0025E6  60D9               	cpfslt	fsr2l,c
  3260  0025E8  D002               	goto	l252
  3261  0025EA  50D9               	movf	fsr2l,w,c
  3262  0025EC  6FF0               	movwf	?a_FirstPCW4^(__Lparam& (0+65280)),b
  3263  0025EE                     l252:
  3264                           ;rgl.c: 857: return p;
  3265  0025EE  0100               	movlb	__Lparam shr (0+8)
  3266  0025F0  51F0               	movf	?a_FirstPCW4^(__Lparam& (0+65280)),w
  3267  0025F2  0012               	return	
  3268                           ;rgl.c: 858: }
  3269  0025F4                     __end_of_FirstPCW4:
  3270                           ;rgl.c: 861: void ClrMod4(void)
  3271                           ;rgl.c: 862: {
  3272  0025F4                     _ClrMod4:
  3273  000000                     
  3274                           ;rgl.c: 863: rgl.fz=0;
  3275  0025F4  0100               	movlb	_rgl shr (0+8)
  3276  0025F6  9552               	bcf	_rgl& (0+255),2,b
  3277                           ;rgl.c: 864: rgl.med_up=0;
  3278  0025F8  9752               	bcf	_rgl& (0+255),3,b
  3279                           ;rgl.c: 865: rgl.fast_up=0;
  3280  0025FA  9952               	bcf	_rgl& (0+255),4,b
  3281                           ;rgl.c: 866: rgl.xmod=PWM.BufPWM;
  3282  0025FC  C05D  F05A         	movff	_PWM+1,_rgl+8
  3283                           ;rgl.c: 867: rgl.srp=0;
  3284  002600  6B59               	clrf	(_rgl+7)& (0+255),b
  3285                           ;rgl.c: 868: rgl.ytmp=0;
  3286  002602  6B58               	clrf	(_rgl+6)& (0+255),b
  3287                           ;rgl.c: 869: rgl.nmod=0;
  3288  002604  9B52               	bcf	_rgl& (0+255),5,b
  3289                           ;rgl.c: 870: rgl.del1s=0;
  3290  002606  9D52               	bcf	_rgl& (0+255),6,b
  3291                           ;rgl.c: 871: rgl.inv_mod=0;
  3292  002608  9153               	bcf	(_rgl+1)& (0+255),0,b
  3293                           ;rgl.c: 872: }
  3294  00260A  0012               	return	
  3295  00260C                     __end_of_ClrMod4:
  3296                           ;rgl.c: 875: void ModToCW4(void)
  3297                           ;rgl.c: 876: {
  3298  00260C                     _ModToCW4:
  3299  000000                     
  3300                           ;rgl.c: 877: rgl.btcw=1;
  3301  00260C  0100               	movlb	_rgl shr (0+8)
  3302  00260E  8352               	bsf	_rgl& (0+255),1,b
  3303                           ;rgl.c: 878: }
  3304  002610  0012               	return	
  3305  002612                     __end_of_ModToCW4:
  3306                           ;rgl.c: 881: void IncConstCW4(void)
  3307                           ;rgl.c: 882: {
  3308  002612                     _IncConstCW4:
  3309  000000                     
  3310                           ;rgl.c: 883: if(Tstoi()) rgl.ytmp++;
  3311  002612  ECC4  F020         	call	_Tstoi	;wreg free
  3312  002616  0100               	movlb	(_rgl+6) shr (0+8)
  3313  002618  E302               	bnc	L35
  3314  00261A  2B58               	incf	(_rgl+6)& (0+255),f,b
  3315  00261C  0C01               	retlw	1
  3316                           ;rgl.c: 884: else rgl.ytmp=0;
  3317  00261E                     L35:
  3318  00261E  6B58               	clrf	(_rgl+6)& (0+255),b
  3319                           ;rgl.c: 885: }
  3320  002620  0012               	return	
  3321  002622                     __end_of_IncConstCW4:
  3322                           ;rgl.c: 888: void ReadDataCW4(void)
  3323                           ;rgl.c: 889: {
  3324  002622                     _ReadDataCW4:
  3325  000000                     
  3326                           ;rgl.c: 890: rgl.x_t=DtCW.DCW;
  3327  002622  C153  F054         	movff	_DtCW+7,_rgl+2
  3328                           ;rgl.c: 891: rgl.x_f=DtCO.DCO;
  3329  002626  C145  F055         	movff	_DtCO+8,_rgl+3
  3330                           ;rgl.c: 892: rgl.x_dt=DtCW.ddDCW;
  3331  00262A  C155  F056         	movff	_DtCW+9,_rgl+4
  3332                           ;rgl.c: 893: rgl.x_df=DtCO.dDCO;
  3333  00262E  C146  F057         	movff	_DtCO+9,_rgl+5
  3334                           ;rgl.c: 894: }
  3335  002632  0012               	return	
  3336  002634                     __end_of_ReadDataCW4:
  3337                           ;rgl.c: 897: void ModZgCW4(void)
  3338                           ;rgl.c: 898: {
  3339  002634                     _ModZgCW4:
  3340  000000                     
  3341                           ;rgl.c: 899: signed long m;
  3342  002634  0E0A               	movlw	10
  3343  002636  ECCB  F020         	call	_Tnizsza
  3344  00263A  E302               	bnc	l260
  3345                           ;rgl.c: 904: {
  3346  00263C  010F               	movlb	F1579 shr (0+8)
  3347  00263E  6B1B               	clrf	F1579& (0+255),b
  3348  002640                     l260:
  3349                           ;rgl.c: 906: }
  3350  002640  0100               	movlb	_rgl shr (0+8)
  3351  002642  A552               	btfss	_rgl& (0+255),2,b
  3352  002644  D00D               	goto	l261
  3353                           ;rgl.c: 908: {
  3354  002646  0E02               	movlw	2
  3355  002648  ECCB  F020         	call	_Tnizsza
  3356  00264C  A0D8               	btfss	status,0,c
  3357  00264E  0012               	return	
  3358                           ;rgl.c: 910: {
  3359  002650  C05D  F05A         	movff	_PWM+1,_rgl+8
  3360                           ;rgl.c: 912: rgl.srp=0;
  3361  002654  0100               	movlb	(_rgl+7) shr (0+8)
  3362  002656  6B59               	clrf	(_rgl+7)& (0+255),b
  3363                           ;rgl.c: 913: rgl.ytmp=0;
  3364  002658  6B58               	clrf	(_rgl+6)& (0+255),b
  3365                           ;rgl.c: 914: rgl.del1s=0;
  3366  00265A  9D52               	bcf	_rgl& (0+255),6,b
  3367                           ;rgl.c: 915: pop=0;
  3368  00265C  010F               	movlb	F1579 shr (0+8)
  3369  00265E  6B1B               	clrf	F1579& (0+255),b
  3370                           ;rgl.c: 916: }
  3371                           ;rgl.c: 917: else return;
  3372  002660                     l261:
  3373                           ;rgl.c: 918: }
  3374  002660  0E01               	movlw	1
  3375  002662  ECCB  F020         	call	_Tnizsza
  3376  002666  E22E               	bc	l264
  3377                           ;rgl.c: 920: {
  3378  002668  0100               	movlb	_rgl shr (0+8)
  3379  00266A  8552               	bsf	_rgl& (0+255),2,b
  3380                           ;rgl.c: 922: rosnie=0;
  3381  00266C  010F               	movlb	_rosnie shr (0+8)
  3382  00266E  6B2E               	clrf	_rosnie& (0+255),b
  3383                           ;rgl.c: 923: stoi=0;
  3384  002670  010F               	movlb	_stoi shr (0+8)
  3385  002672  6B2F               	clrf	_stoi& (0+255),b
  3386                           ;rgl.c: 924: rgl.fast_up=0;
  3387  002674  0100               	movlb	_rgl shr (0+8)
  3388  002676  9952               	bcf	_rgl& (0+255),4,b
  3389                           ;rgl.c: 925: rgl.med_up=0;
  3390  002678  9752               	bcf	_rgl& (0+255),3,b
  3391                           ;rgl.c: 926: rgl.srp=PWM.BufPWM+pop;
  3392  00267A  CF1B  FFE8         	movff	F1579,wreg
  3393  00267E  0100               	movlb	(_PWM+1) shr (0+8)
  3394  002680  255D               	addwf	(_PWM+1)& (0+255),w,b
  3395  002682  CFE8 F059          	movff	wreg,_rgl+7
  3396                           ;rgl.c: 927: rgl.xmod=PWM.BufPWM+pop;
  3397  002686  CF1B  FFE8         	movff	F1579,wreg
  3398  00268A  255D               	addwf	(_PWM+1)& (0+255),w,b
  3399  00268C  CFE8 F05A          	movff	wreg,_rgl+8
  3400                           ;rgl.c: 928: pop=0;
  3401  002690  010F               	movlb	F1579 shr (0+8)
  3402  002692  6B1B               	clrf	F1579& (0+255),b
  3403                           ;rgl.c: 929: if(PWM.MMAXCW>PWM.MGMOD)
  3404  002694  C076  FFE8         	movff	_PWM+26,wreg
  3405  002698  0100               	movlb	(_PWM+6) shr (0+8)
  3406  00269A  6162               	cpfslt	(_PWM+6)& (0+255),b
  3407  00269C  D009               	goto	l265
  3408                           ;rgl.c: 930: {
  3409  00269E  C05A  FFE8         	movff	_rgl+8,wreg
  3410  0026A2  6162               	cpfslt	(_PWM+6)& (0+255),b
  3411  0026A4  0012               	return	
  3412                           ;rgl.c: 932: {
  3413  0026A6  C062  F059         	movff	_PWM+6,_rgl+7
  3414                           ;rgl.c: 934: rgl.xmod=PWM.MGMOD;
  3415  0026AA  C062  F05A         	movff	_PWM+6,_rgl+8
  3416                           ;rgl.c: 935: }
  3417  0026AE  0012               	return	
  3418  0026B0                     l265:
  3419                           ;rgl.c: 937: else
  3420  0026B0  C05A  FFE8         	movff	_rgl+8,wreg
  3421  0026B4  0100               	movlb	(_PWM+26) shr (0+8)
  3422  0026B6  6176               	cpfslt	(_PWM+26)& (0+255),b
  3423  0026B8  0012               	return	
  3424                           ;rgl.c: 940: {
  3425  0026BA  C076  F059         	movff	_PWM+26,_rgl+7
  3426                           ;rgl.c: 942: rgl.xmod=PWM.MMAXCW;
  3427  0026BE  C076  F05A         	movff	_PWM+26,_rgl+8
  3428                           ;rgl.c: 943: }
  3429  0026C2  0012               	return	
  3430  0026C4                     l264:
  3431                           ;rgl.c: 946: }
  3432  0026C4  C061  FFE8         	movff	_PWM+5,wreg
  3433  0026C8  0100               	movlb	(_rgl+8) shr (0+8)
  3434  0026CA  5D5A               	subwf	(_rgl+8)& (0+255),w,b
  3435  0026CC  E318               	bnc	l269
  3436  0026CE  0E0A               	movlw	10
  3437  0026D0  6E02               	movwf	btemp+2,c
  3438  0026D2  6A03               	clrf	btemp+3,c
  3439  0026D4  C061  FFE8         	movff	_PWM+5,wreg
  3440  0026D8  C05A  F000         	movff	_rgl+8,btemp
  3441  0026DC  6A01               	clrf	btemp+1,c
  3442  0026DE  5E00               	subwf	btemp,f,c
  3443  0026E0  0E00               	movlw	0
  3444  0026E2  5A01               	subwfb	btemp+1,f,c
  3445  0026E4  EC78  F04A         	call	awmul
  3446  0026E8  0100               	movlb	__Lparam shr (0+8)
  3447  0026EA  C004  F0F0         	movff	btemp+4,?a_ModZgCW4
  3448  0026EE  C005  F0F1         	movff	btemp+5,?a_ModZgCW4+1
  3449  0026F2  0E00               	movlw	0
  3450  0026F4  BFF1               	btfsc	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),7,b
  3451  0026F6  0EFF               	movlw	-1
  3452  0026F8  6FF2               	movwf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),b
  3453  0026FA  6FF3               	movwf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),b
  3454  0026FC  D005               	goto	l270
  3455  0026FE                     l269:
  3456                           ;rgl.c: 948: else m=0;
  3457  0026FE  0100               	movlb	__Lparam shr (0+8)
  3458  002700  6BF0               	clrf	?a_ModZgCW4^(__Lparam& (0+65280)),b
  3459  002702  6BF1               	clrf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),b
  3460  002704  6BF2               	clrf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),b
  3461  002706  6BF3               	clrf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),b
  3462  002708                     l270:
  3463                           ;rgl.c: 949: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
  3464  002708  C15A  FFE8         	movff	_DtCW+14,wreg
  3465  00270C  C159  F000         	movff	_DtCW+13,btemp
  3466  002710  5C00               	subwf	btemp,w,c
  3467  002712  6E04               	movwf	btemp+4,c
  3468  002714  6A05               	clrf	btemp+5,c
  3469  002716  A0D8               	btfss	status,0,c
  3470  002718  0605               	decf	btemp+5,f,c
  3471  00271A  6A06               	clrf	btemp+6,c
  3472  00271C  BE05               	btfsc	btemp+5,7,c
  3473  00271E  0606               	decf	btemp+6,f,c
  3474  002720  5006               	movf	btemp+6,w,c
  3475  002722  6E07               	movwf	btemp+7,c
  3476  002724  0EF0               	movlw	low ?a_ModZgCW4
  3477  002726  6EE9               	movwf	fsr0l,c
  3478  002728  0E00               	movlw	high ?a_ModZgCW4
  3479  00272A  6EEA               	movwf	fsr0h,c
  3480  00272C  ECB5  F04A         	call	aldiv_f
  3481                           ;rgl.c: 950: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
  3482  002730  C15A  FFE8         	movff	_DtCW+14,wreg
  3483  002734  C158  F000         	movff	_DtCW+12,btemp
  3484  002738  5C00               	subwf	btemp,w,c
  3485  00273A  6E04               	movwf	btemp+4,c
  3486  00273C  6A05               	clrf	btemp+5,c
  3487  00273E  A0D8               	btfss	status,0,c
  3488  002740  0605               	decf	btemp+5,f,c
  3489  002742  6A06               	clrf	btemp+6,c
  3490  002744  BE05               	btfsc	btemp+5,7,c
  3491  002746  0606               	decf	btemp+6,f,c
  3492  002748  5006               	movf	btemp+6,w,c
  3493  00274A  6E07               	movwf	btemp+7,c
  3494  00274C  0EF0               	movlw	low ?a_ModZgCW4
  3495  00274E  6EE9               	movwf	fsr0l,c
  3496  002750  0E00               	movlw	high ?a_ModZgCW4
  3497  002752  6EEA               	movwf	fsr0h,c
  3498  002754  ECAB  F04A         	call	almul_f
  3499                           ;rgl.c: 951: if(m<0) m=0;
  3500  002758  0100               	movlb	__Lparam shr (0+8)
  3501  00275A  AFF3               	btfss	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),7,b
  3502  00275C  D004               	goto	l271
  3503  00275E  6BF0               	clrf	?a_ModZgCW4^(__Lparam& (0+65280)),b
  3504  002760  6BF1               	clrf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),b
  3505  002762  6BF2               	clrf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),b
  3506  002764  6BF3               	clrf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),b
  3507  002766                     l271:
  3508                           ;rgl.c: 952: m=m/10+PWM.MDMOD;
  3509  002766  0E0A               	movlw	10
  3510  002768  6E04               	movwf	btemp+4,c
  3511  00276A  6A05               	clrf	btemp+5,c
  3512  00276C  6A06               	clrf	btemp+6,c
  3513  00276E  6A07               	clrf	btemp+7,c
  3514  002770  C0F0  F000         	movff	?a_ModZgCW4,btemp
  3515  002774  C0F1  F001         	movff	?a_ModZgCW4+1,btemp+1
  3516  002778  C0F2  F002         	movff	?a_ModZgCW4+2,btemp+2
  3517  00277C  C0F3  F003         	movff	?a_ModZgCW4+3,btemp+3
  3518  002780  ECE2  F049         	call	aldiv
  3519  002784  C061  FFE8         	movff	_PWM+5,wreg
  3520  002788  2400               	addwf	btemp,w,c
  3521  00278A  0100               	movlb	__Lparam shr (0+8)
  3522  00278C  6FF0               	movwf	?a_ModZgCW4^(__Lparam& (0+65280)),b
  3523  00278E  0E00               	movlw	0
  3524  002790  2001               	addwfc	btemp+1,w,c
  3525  002792  6FF1               	movwf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),b
  3526  002794  0E00               	movlw	0
  3527  002796  2002               	addwfc	btemp+2,w,c
  3528  002798  6FF2               	movwf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),b
  3529  00279A  0E00               	movlw	0
  3530  00279C  2003               	addwfc	btemp+3,w,c
  3531  00279E  6FF3               	movwf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),b
  3532                           ;rgl.c: 953: if(m>0xff)
  3533  0027A0  51F3               	movf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),w
  3534  0027A2  0A80               	xorlw	128
  3535  0027A4  0F80               	addlw	128
  3536  0027A6  E108               	bnz	u2635
  3537  0027A8  0E00               	movlw	0
  3538  0027AA  5DF2               	subwf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),w
  3539  0027AC  E105               	bnz	u2635
  3540  0027AE  0E01               	movlw	1
  3541  0027B0  5DF1               	subwf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),w
  3542  0027B2  E102               	bnz	u2635
  3543  0027B4  0E00               	movlw	0
  3544  0027B6  5DF0               	subwf	?a_ModZgCW4^(__Lparam& (0+65280)),w
  3545  0027B8                     u2635:
  3546                           ;rgl.c: 954: {
  3547  0027B8  0100               	movlb	_rgl shr (0+8)
  3548  0027BA  E304               	bnc	L36
  3549  0027BC  9552               	bcf	_rgl& (0+255),2,b
  3550                           ;rgl.c: 956: rgl.tmp_pwm=rgl.xmod;
  3551  0027BE  C05A  F05B         	movff	_rgl+8,_rgl+9
  3552                           ;rgl.c: 957: return;
  3553  0027C2  0012               	return	
  3554                           ;rgl.c: 958: }
  3555  0027C4                     L36:
  3556  0027C4  A552               	btfss	_rgl& (0+255),2,b
  3557  0027C6  D01C               	goto	l273
  3558  0027C8  C05A  F000         	movff	_rgl+8,btemp
  3559  0027CC  6A01               	clrf	btemp+1,c
  3560  0027CE  6A02               	clrf	btemp+2,c
  3561  0027D0  6A03               	clrf	btemp+3,c
  3562  0027D2  0100               	movlb	__Lparam shr (0+8)
  3563  0027D4  51F3               	movf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),w
  3564  0027D6  0A80               	xorlw	128
  3565  0027D8  6E04               	movwf	btemp+4,c
  3566  0027DA  5003               	movf	btemp+3,w,c
  3567  0027DC  0A80               	xorlw	128
  3568  0027DE  5C04               	subwf	btemp+4,w,c
  3569  0027E0  E108               	bnz	u2655
  3570  0027E2  5002               	movf	btemp+2,w,c
  3571  0027E4  5DF2               	subwf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),w
  3572  0027E6  E105               	bnz	u2655
  3573  0027E8  5001               	movf	btemp+1,w,c
  3574  0027EA  5DF1               	subwf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),w
  3575  0027EC  E102               	bnz	u2655
  3576  0027EE  5000               	movf	btemp,w,c
  3577  0027F0  5DF0               	subwf	?a_ModZgCW4^(__Lparam& (0+65280)),w
  3578  0027F2                     u2655:
  3579  0027F2  E206               	bc	l273
  3580                           ;rgl.c: 960: rgl.srp=(rgl.xmod-m);
  3581  0027F4  0100               	movlb	__Lparam shr (0+8)
  3582  0027F6  51F0               	movf	?a_ModZgCW4^(__Lparam& (0+65280)),w
  3583  0027F8  0100               	movlb	(_rgl+8) shr (0+8)
  3584  0027FA  5D5A               	subwf	(_rgl+8)& (0+255),w,b
  3585  0027FC  CFE8 F059          	movff	wreg,_rgl+7
  3586  002800                     l273:
  3587                           ;rgl.c: 961: m+=rgl.srp;
  3588  002800  C059  FFE8         	movff	_rgl+7,wreg
  3589  002804  0100               	movlb	__Lparam shr (0+8)
  3590  002806  27F0               	addwf	?a_ModZgCW4^(__Lparam& (0+65280)),f,b
  3591  002808  0E01               	movlw	1
  3592  00280A  B0D8               	btfsc	status,0,c
  3593  00280C  27F1               	addwf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),f,b
  3594  00280E  B0D8               	btfsc	status,0,c
  3595  002810  27F2               	addwf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),f,b
  3596  002812  B0D8               	btfsc	status,0,c
  3597  002814  27F3               	addwf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),f,b
  3598                           ;rgl.c: 962: if(m>rgl.xmod) p=rgl.xmod;
  3599  002816  C05A  F000         	movff	_rgl+8,btemp
  3600  00281A  6A01               	clrf	btemp+1,c
  3601  00281C  6A02               	clrf	btemp+2,c
  3602  00281E  6A03               	clrf	btemp+3,c
  3603  002820  5003               	movf	btemp+3,w,c
  3604  002822  0A80               	xorlw	128
  3605  002824  6E04               	movwf	btemp+4,c
  3606  002826  51F3               	movf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),w
  3607  002828  0A80               	xorlw	128
  3608  00282A  5C04               	subwf	btemp+4,w,c
  3609  00282C  E108               	bnz	u2675
  3610  00282E  51F2               	movf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),w
  3611  002830  5C02               	subwf	btemp+2,w,c
  3612  002832  E105               	bnz	u2675
  3613  002834  51F1               	movf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),w
  3614  002836  5C01               	subwf	btemp+1,w,c
  3615  002838  E102               	bnz	u2675
  3616  00283A  51F0               	movf	?a_ModZgCW4^(__Lparam& (0+65280)),w
  3617  00283C  5C00               	subwf	btemp,w,c
  3618  00283E                     u2675:
  3619  00283E  E203               	bc	l274
  3620  002840  C05A  FFD9         	movff	_rgl+8,fsr2l
  3621  002844  D003               	goto	l275
  3622  002846                     l274:
  3623                           ;rgl.c: 963: else p=m;
  3624  002846  0100               	movlb	__Lparam shr (0+8)
  3625  002848  51F0               	movf	?a_ModZgCW4^(__Lparam& (0+65280)),w
  3626  00284A  6ED9               	movwf	fsr2l,c
  3627  00284C                     l275:
  3628                           ;rgl.c: 964: rgl.fz=0;
  3629  00284C  0100               	movlb	_rgl shr (0+8)
  3630  00284E  9552               	bcf	_rgl& (0+255),2,b
  3631                           ;rgl.c: 965: rgl.tmp_pwm=p;
  3632  002850  CFD9 F05B          	movff	fsr2l,_rgl+9
  3633                           ;rgl.c: 966: }
  3634  002854  0012               	return	
  3635  002856                     __end_of_ModZgCW4:
  3636                           ;rgl.c: 969: void ModDkCW4(void)
  3637                           ;rgl.c: 970: {
  3638  002856                     _ModDkCW4:
  3639  000000                     
  3640                           ;rgl.c: 971: signed long m;
  3641  002856  0100               	movlb	_rgl shr (0+8)
  3642  002858  A552               	btfss	_rgl& (0+255),2,b
  3643  00285A  0012               	return	
  3644                           ;rgl.c: 976: ada=DtCW.AC_CW-DtCW.DAD_CW;
  3645  00285C  C15A  FFE8         	movff	_DtCW+14,wreg
  3646  002860  0101               	movlb	(_DtCW+12) shr (0+8)
  3647  002862  5D58               	subwf	(_DtCW+12)& (0+255),w,b
  3648  002864  6ED9               	movwf	fsr2l,c
  3649                           ;rgl.c: 977: k=3;
  3650  002866  0E03               	movlw	3
  3651  002868  6EE1               	movwf	fsr1l,c
  3652                           ;rgl.c: 978: if(ada<0) k=2;
  3653  00286A  AED9               	btfss	fsr2l,7,c
  3654  00286C  D002               	goto	l278
  3655  00286E  0E02               	movlw	2
  3656  002870  6EE1               	movwf	fsr1l,c
  3657  002872                     l278:
  3658                           ;rgl.c: 979: m=rgl.srp+k*ada;
  3659  002872  CFD9 F002          	movff	fsr2l,btemp+2
  3660  002876  6A03               	clrf	btemp+3,c
  3661  002878  BE02               	btfsc	btemp+2,7,c
  3662  00287A  0603               	decf	btemp+3,f,c
  3663  00287C  CFE1 F000          	movff	fsr1l,btemp
  3664  002880  6A01               	clrf	btemp+1,c
  3665  002882  EC78  F04A         	call	awmul
  3666  002886  C059  FFE8         	movff	_rgl+7,wreg
  3667  00288A  2404               	addwf	btemp+4,w,c
  3668  00288C  6E00               	movwf	btemp,c
  3669  00288E  0E00               	movlw	0
  3670  002890  2005               	addwfc	btemp+5,w,c
  3671  002892  6E01               	movwf	btemp+1,c
  3672  002894  0100               	movlb	__Lparam shr (0+8)
  3673  002896  C000  F0F0         	movff	btemp,?a_ModDkCW4
  3674  00289A  C001  F0F1         	movff	btemp+1,?a_ModDkCW4+1
  3675  00289E  0E00               	movlw	0
  3676  0028A0  BFF1               	btfsc	(?a_ModDkCW4+1)^(__Lparam& (0+65280)),7,b
  3677  0028A2  0EFF               	movlw	-1
  3678  0028A4  6FF2               	movwf	(?a_ModDkCW4+2)^(__Lparam& (0+65280)),b
  3679  0028A6  6FF3               	movwf	(?a_ModDkCW4+3)^(__Lparam& (0+65280)),b
  3680                           ;rgl.c: 980: if(m>rgl.xmod) p=rgl.xmod;
  3681  0028A8  C05A  F000         	movff	_rgl+8,btemp
  3682  0028AC  6A01               	clrf	btemp+1,c
  3683  0028AE  6A02               	clrf	btemp+2,c
  3684  0028B0  6A03               	clrf	btemp+3,c
  3685  0028B2  5003               	movf	btemp+3,w,c
  3686  0028B4  0A80               	xorlw	128
  3687  0028B6  6E04               	movwf	btemp+4,c
  3688  0028B8  51F3               	movf	(?a_ModDkCW4+3)^(__Lparam& (0+65280)),w
  3689  0028BA  0A80               	xorlw	128
  3690  0028BC  5C04               	subwf	btemp+4,w,c
  3691  0028BE  E108               	bnz	u2705
  3692  0028C0  51F2               	movf	(?a_ModDkCW4+2)^(__Lparam& (0+65280)),w
  3693  0028C2  5C02               	subwf	btemp+2,w,c
  3694  0028C4  E105               	bnz	u2705
  3695  0028C6  51F1               	movf	(?a_ModDkCW4+1)^(__Lparam& (0+65280)),w
  3696  0028C8  5C01               	subwf	btemp+1,w,c
  3697  0028CA  E102               	bnz	u2705
  3698  0028CC  51F0               	movf	?a_ModDkCW4^(__Lparam& (0+65280)),w
  3699  0028CE  5C00               	subwf	btemp,w,c
  3700  0028D0                     u2705:
  3701  0028D0  E203               	bc	l279
  3702  0028D2  C05A  FFD9         	movff	_rgl+8,fsr2l
  3703  0028D6  D01C               	goto	l280
  3704  0028D8                     l279:
  3705                           ;rgl.c: 981: else
  3706  0028D8  C061  F000         	movff	_PWM+5,btemp
  3707  0028DC  6A01               	clrf	btemp+1,c
  3708  0028DE  6A02               	clrf	btemp+2,c
  3709  0028E0  6A03               	clrf	btemp+3,c
  3710  0028E2  0100               	movlb	__Lparam shr (0+8)
  3711  0028E4  51F3               	movf	(?a_ModDkCW4+3)^(__Lparam& (0+65280)),w
  3712  0028E6  0A80               	xorlw	128
  3713  0028E8  6E04               	movwf	btemp+4,c
  3714  0028EA  5003               	movf	btemp+3,w,c
  3715  0028EC  0A80               	xorlw	128
  3716  0028EE  5C04               	subwf	btemp+4,w,c
  3717  0028F0  E108               	bnz	u2715
  3718  0028F2  5002               	movf	btemp+2,w,c
  3719  0028F4  5DF2               	subwf	(?a_ModDkCW4+2)^(__Lparam& (0+65280)),w
  3720  0028F6  E105               	bnz	u2715
  3721  0028F8  5001               	movf	btemp+1,w,c
  3722  0028FA  5DF1               	subwf	(?a_ModDkCW4+1)^(__Lparam& (0+65280)),w
  3723  0028FC  E102               	bnz	u2715
  3724  0028FE  5000               	movf	btemp,w,c
  3725  002900  5DF0               	subwf	?a_ModDkCW4^(__Lparam& (0+65280)),w
  3726  002902                     u2715:
  3727  002902  E203               	bc	l281
  3728  002904  C061  FFD9         	movff	_PWM+5,fsr2l
  3729  002908  D003               	goto	l280
  3730  00290A                     l281:
  3731                           ;rgl.c: 983: else p=m;
  3732  00290A  0100               	movlb	__Lparam shr (0+8)
  3733  00290C  51F0               	movf	?a_ModDkCW4^(__Lparam& (0+65280)),w
  3734  00290E  6ED9               	movwf	fsr2l,c
  3735  002910                     l280:
  3736                           ;rgl.c: 985: rgl.tmp_pwm=p;
  3737  002910  CFD9 F05B          	movff	fsr2l,_rgl+9
  3738                           ;rgl.c: 986: }
  3739  002914  0012               	return	
  3740  002916                     __end_of_ModDkCW4:
  3741                           ;rgl.c: 991: void ModPruCW4(void)
  3742                           ;rgl.c: 992: {
  3743  002916                     _ModPruCW4:
  3744  000000                     
  3745                           ;rgl.c: 993: static unsigned char l,m,o,p,q,r,s;
  3746  002916  0100               	movlb	_rgl shr (0+8)
  3747  002918  B552               	btfsc	_rgl& (0+255),2,b
  3748  00291A  D0A3               	goto	l284
  3749                           ;rgl.c: 997: {
  3750  00291C  010F               	movlb	F1586 shr (0+8)
  3751  00291E  6B1C               	clrf	F1586& (0+255),b
  3752                           ;rgl.c: 999: m=0;
  3753  002920  010F               	movlb	F1587 shr (0+8)
  3754  002922  6B1D               	clrf	F1587& (0+255),b
  3755                           ;rgl.c: 1000: o=0;
  3756  002924  010F               	movlb	F1588 shr (0+8)
  3757  002926  6B1E               	clrf	F1588& (0+255),b
  3758                           ;rgl.c: 1001: p=0;
  3759  002928  010F               	movlb	F1589 shr (0+8)
  3760  00292A  6B1F               	clrf	F1589& (0+255),b
  3761                           ;rgl.c: 1002: if(q<255) q++;
  3762  00292C  CF20  F000         	movff	F1590,btemp
  3763  002930  2800               	incf	btemp,w,c
  3764  002932  E002               	bz	l285
  3765  002934  010F               	movlb	F1590 shr (0+8)
  3766  002936  2B20               	incf	F1590& (0+255),f,b
  3767  002938                     l285:
  3768                           ;rgl.c: 1003: if(s<255) s++;
  3769  002938  CF22  F000         	movff	F1592,btemp
  3770  00293C  2800               	incf	btemp,w,c
  3771  00293E  E002               	bz	l286
  3772  002940  010F               	movlb	F1592 shr (0+8)
  3773  002942  2B22               	incf	F1592& (0+255),f,b
  3774  002944                     l286:
  3775                           ;rgl.c: 1004: if(DtCW._newPCW) s=0;
  3776  002944  0101               	movlb	(_DtCW+1) shr (0+8)
  3777  002946  A14D               	btfss	(_DtCW+1)& (0+255),0,b
  3778  002948  D002               	goto	l287
  3779  00294A  010F               	movlb	F1592 shr (0+8)
  3780  00294C  6B22               	clrf	F1592& (0+255),b
  3781  00294E                     l287:
  3782                           ;rgl.c: 1005: if(Tnizsza(0))
  3783  00294E  0E00               	movlw	0
  3784  002950  ECCB  F020         	call	_Tnizsza
  3785  002954  A0D8               	btfss	status,0,c
  3786  002956  0012               	return	
  3787                           ;rgl.c: 1006: {
  3788  002958  0E0A               	movlw	10
  3789  00295A  ECCB  F020         	call	_Tnizsza
  3790  00295E  B0D8               	btfsc	status,0,c
  3791  002960  0012               	return	
  3792                           ;rgl.c: 1008: {
  3793  002962  0100               	movlb	__Lparam shr (0+8)
  3794  002964  6BF0               	clrf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  3795                           ;rgl.c: 1010: if(Tstoi()&&s>2)
  3796  002966  ECC4  F020         	call	_Tstoi	;wreg free
  3797  00296A  E30E               	bnc	l290
  3798  00296C  0E02               	movlw	2
  3799  00296E  010F               	movlb	F1592 shr (0+8)
  3800  002970  6522               	cpfsgt	F1592& (0+255),b
  3801  002972  D00A               	goto	l290
  3802                           ;rgl.c: 1011: {
  3803  002974  6B22               	clrf	F1592& (0+255),b
  3804                           ;rgl.c: 1013: if(Tnizsza(3)) k=15;
  3805  002976  0E03               	movlw	3
  3806  002978  ECCB  F020         	call	_Tnizsza
  3807  00297C  E302               	bnc	l291
  3808  00297E  0E0F               	movlw	15
  3809  002980  D001               	goto	L20
  3810  002982                     l291:
  3811                           ;rgl.c: 1014: else k=10;
  3812  002982  0E0A               	movlw	10
  3813  002984                     L20:
  3814  002984  0100               	movlb	__Lparam shr (0+8)
  3815  002986  6FF0               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  3816  002988                     l290:
  3817                           ;rgl.c: 1015: }
  3818  002988  0E01               	movlw	1
  3819  00298A  EC9C  F020         	call	_Trosnie
  3820  00298E  E30F               	bnc	l293
  3821  002990  0E00               	movlw	0
  3822  002992  010F               	movlb	F1592 shr (0+8)
  3823  002994  6522               	cpfsgt	F1592& (0+255),b
  3824  002996  D00B               	goto	l293
  3825                           ;rgl.c: 1017: {
  3826  002998  6B22               	clrf	F1592& (0+255),b
  3827                           ;rgl.c: 1019: k=15;
  3828  00299A  0E0F               	movlw	15
  3829  00299C  0100               	movlb	__Lparam shr (0+8)
  3830  00299E  6FF0               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  3831                           ;rgl.c: 1020: if(Trosnie(2)) k=8;
  3832  0029A0  0E02               	movlw	2
  3833  0029A2  EC9C  F020         	call	_Trosnie
  3834  0029A6  E303               	bnc	l293
  3835  0029A8  0E08               	movlw	8
  3836  0029AA  0100               	movlb	__Lparam shr (0+8)
  3837  0029AC  6FF0               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  3838  0029AE                     l293:
  3839                           ;rgl.c: 1021: }
  3840  0029AE  0100               	movlb	(_rgl+6) shr (0+8)
  3841  0029B0  6B58               	clrf	(_rgl+6)& (0+255),b
  3842                           ;rgl.c: 1023: if(PWM.BufPWM>rgl.xmod) return;
  3843  0029B2  C05D  FFE8         	movff	_PWM+1,wreg
  3844  0029B6  615A               	cpfslt	(_rgl+8)& (0+255),b
  3845  0029B8  D001               	goto	l295
  3846  0029BA  0012               	return	
  3847  0029BC                     l295:
  3848                           ;rgl.c: 1024: tmp=rgl.xmod-PWM.BufPWM;
  3849  0029BC  C05D  FFE8         	movff	_PWM+1,wreg
  3850  0029C0  0100               	movlb	(_rgl+8) shr (0+8)
  3851  0029C2  5D5A               	subwf	(_rgl+8)& (0+255),w,b
  3852  0029C4  6ED9               	movwf	fsr2l,c
  3853                           ;rgl.c: 1025: if(k>tmp) k=tmp;
  3854  0029C6  50D9               	movf	fsr2l,w,c
  3855  0029C8  0100               	movlb	__Lparam shr (0+8)
  3856  0029CA  94D8               	bcf	status,2,c
  3857  0029CC  90D8               	bcf	status,0,c
  3858  0029CE  AFF0               	btfss	?a_ModPruCW4^(__Lparam& (0+65280)),7,b
  3859  0029D0  5DF0               	subwf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  3860  0029D2  B4D8               	btfsc	status,2,c
  3861  0029D4  90D8               	bcf	status,0,c
  3862  0029D6  E302               	bnc	l296
  3863  0029D8  50D9               	movf	fsr2l,w,c
  3864  0029DA  6FF0               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  3865  0029DC                     l296:
  3866                           ;rgl.c: 1026: if(PWM.MMAXCW>PWM.MGMOD)
  3867  0029DC  C076  FFE8         	movff	_PWM+26,wreg
  3868  0029E0  0100               	movlb	(_PWM+6) shr (0+8)
  3869  0029E2  6162               	cpfslt	(_PWM+6)& (0+255),b
  3870  0029E4  D01F               	goto	l297
  3871                           ;rgl.c: 1027: {
  3872  0029E6  C059  FFE8         	movff	_rgl+7,wreg
  3873  0029EA  0100               	movlb	__Lparam shr (0+8)
  3874  0029EC  25F0               	addwf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  3875  0029EE  6E02               	movwf	btemp+2,c
  3876  0029F0  6A03               	clrf	btemp+3,c
  3877  0029F2  B0D8               	btfsc	status,0,c
  3878  0029F4  2A03               	incf	btemp+3,f,c
  3879  0029F6  BFF0               	btfsc	?a_ModPruCW4^(__Lparam& (0+65280)),7,b
  3880  0029F8  0603               	decf	btemp+3,f,c
  3881  0029FA  C062  F000         	movff	_PWM+6,btemp
  3882  0029FE  6A01               	clrf	btemp+1,c
  3883  002A00  5001               	movf	btemp+1,w,c
  3884  002A02  0A80               	xorlw	128
  3885  002A04  6E04               	movwf	btemp+4,c
  3886  002A06  5003               	movf	btemp+3,w,c
  3887  002A08  0A80               	xorlw	128
  3888  002A0A  5C04               	subwf	btemp+4,w,c
  3889  002A0C  E102               	bnz	u2895
  3890  002A0E  5002               	movf	btemp+2,w,c
  3891  002A10  5C00               	subwf	btemp,w,c
  3892  002A12                     u2895:
  3893  002A12  E203               	bc	l298
  3894  002A14  C062  F059         	movff	_PWM+6,_rgl+7
  3895  002A18  0012               	return	
  3896  002A1A                     l298:
  3897                           ;rgl.c: 1029: else rgl.srp+=k;
  3898  002A1A  0100               	movlb	__Lparam shr (0+8)
  3899  002A1C  51F0               	movf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  3900  002A1E  0100               	movlb	(_rgl+7) shr (0+8)
  3901  002A20  2759               	addwf	(_rgl+7)& (0+255),f,b
  3902                           ;rgl.c: 1030: }
  3903  002A22  0012               	return	
  3904  002A24                     l297:
  3905                           ;rgl.c: 1031: else
  3906  002A24  C059  FFE8         	movff	_rgl+7,wreg
  3907  002A28  0100               	movlb	__Lparam shr (0+8)
  3908  002A2A  25F0               	addwf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  3909  002A2C  6E02               	movwf	btemp+2,c
  3910  002A2E  6A03               	clrf	btemp+3,c
  3911  002A30  B0D8               	btfsc	status,0,c
  3912  002A32  2A03               	incf	btemp+3,f,c
  3913  002A34  BFF0               	btfsc	?a_ModPruCW4^(__Lparam& (0+65280)),7,b
  3914  002A36  0603               	decf	btemp+3,f,c
  3915  002A38  C076  F000         	movff	_PWM+26,btemp
  3916  002A3C  6A01               	clrf	btemp+1,c
  3917  002A3E  5001               	movf	btemp+1,w,c
  3918  002A40  0A80               	xorlw	128
  3919  002A42  6E04               	movwf	btemp+4,c
  3920  002A44  5003               	movf	btemp+3,w,c
  3921  002A46  0A80               	xorlw	128
  3922  002A48  5C04               	subwf	btemp+4,w,c
  3923  002A4A  E102               	bnz	u2905
  3924  002A4C  5002               	movf	btemp+2,w,c
  3925  002A4E  5C00               	subwf	btemp,w,c
  3926  002A50                     u2905:
  3927  002A50  E203               	bc	l301
  3928  002A52  C076  F059         	movff	_PWM+26,_rgl+7
  3929  002A56  0012               	return	
  3930  002A58                     l301:
  3931                           ;rgl.c: 1034: else rgl.srp+=k;
  3932  002A58  0100               	movlb	__Lparam shr (0+8)
  3933  002A5A  51F0               	movf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  3934  002A5C  0100               	movlb	(_rgl+7) shr (0+8)
  3935  002A5E  2759               	addwf	(_rgl+7)& (0+255),f,b
  3936                           ;rgl.c: 1035: }
  3937  002A60  0012               	return	
  3938                           ;rgl.c: 1039: else return;
  3939                           ;rgl.c: 1041: else return;
  3940  002A62                     l284:
  3941                           ;rgl.c: 1043: else
  3942  002A62  010E               	movlb	_x shr (0+8)
  3943  002A64  6BF2               	clrf	_x& (0+255),b
  3944                           ;rgl.c: 1046: q=0;
  3945  002A66  010F               	movlb	F1590 shr (0+8)
  3946  002A68  6B20               	clrf	F1590& (0+255),b
  3947                           ;rgl.c: 1047: r=0;
  3948  002A6A  010F               	movlb	F1591 shr (0+8)
  3949  002A6C  6B21               	clrf	F1591& (0+255),b
  3950                           ;rgl.c: 1048: s=0;
  3951  002A6E  010F               	movlb	F1592 shr (0+8)
  3952  002A70  6B22               	clrf	F1592& (0+255),b
  3953                           ;rgl.c: 1049: if(m<255) m++;
  3954  002A72  CF1D  F000         	movff	F1587,btemp
  3955  002A76  2800               	incf	btemp,w,c
  3956  002A78  E002               	bz	l306
  3957  002A7A  010F               	movlb	F1587 shr (0+8)
  3958  002A7C  2B1D               	incf	F1587& (0+255),f,b
  3959  002A7E                     l306:
  3960                           ;rgl.c: 1050: if(p<255) p++;
  3961  002A7E  CF1F  F000         	movff	F1589,btemp
  3962  002A82  2800               	incf	btemp,w,c
  3963  002A84  E002               	bz	l307
  3964  002A86  010F               	movlb	F1589 shr (0+8)
  3965  002A88  2B1F               	incf	F1589& (0+255),f,b
  3966  002A8A                     l307:
  3967                           ;rgl.c: 1051: if(o<255) o++;
  3968  002A8A  CF1E  F000         	movff	F1588,btemp
  3969  002A8E  2800               	incf	btemp,w,c
  3970  002A90  E002               	bz	l308
  3971  002A92  010F               	movlb	F1588 shr (0+8)
  3972  002A94  2B1E               	incf	F1588& (0+255),f,b
  3973  002A96                     l308:
  3974                           ;rgl.c: 1052: if(DtCW.DAD_CW>DtCW.AC_CW)
  3975  002A96  C15A  FFE8         	movff	_DtCW+14,wreg
  3976  002A9A  0101               	movlb	(_DtCW+12) shr (0+8)
  3977  002A9C  6158               	cpfslt	(_DtCW+12)& (0+255),b
  3978  002A9E  D065               	goto	l309
  3979                           ;rgl.c: 1053: {
  3980  002AA0  0100               	movlb	__Lparam shr (0+8)
  3981  002AA2  6BF0               	clrf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  3982                           ;rgl.c: 1055: if(Trosnie(0)&&m>=2)
  3983  002AA4  0E00               	movlw	0
  3984  002AA6  EC9C  F020         	call	_Trosnie
  3985  002AAA  E310               	bnc	l310
  3986  002AAC  0E01               	movlw	1
  3987  002AAE  010F               	movlb	F1587 shr (0+8)
  3988  002AB0  651D               	cpfsgt	F1587& (0+255),b
  3989  002AB2  D00C               	goto	l310
  3990                           ;rgl.c: 1056: {
  3991  002AB4  010F               	movlb	F1589 shr (0+8)
  3992  002AB6  6B1F               	clrf	F1589& (0+255),b
  3993                           ;rgl.c: 1058: o=0;
  3994  002AB8  010F               	movlb	F1588 shr (0+8)
  3995  002ABA  6B1E               	clrf	F1588& (0+255),b
  3996                           ;rgl.c: 1059: l=0;
  3997  002ABC  010F               	movlb	F1586 shr (0+8)
  3998  002ABE  6B1C               	clrf	F1586& (0+255),b
  3999                           ;rgl.c: 1060: m=0;
  4000  002AC0  010F               	movlb	F1587 shr (0+8)
  4001  002AC2  6B1D               	clrf	F1587& (0+255),b
  4002                           ;rgl.c: 1061: k=3;
  4003  002AC4  0E03               	movlw	3
  4004  002AC6  0100               	movlb	__Lparam shr (0+8)
  4005  002AC8  6FF0               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4006                           ;rgl.c: 1062: }
  4007  002ACA  D01D               	goto	l311
  4008  002ACC                     l310:
  4009                           ;rgl.c: 1063: else
  4010  002ACC  0E01               	movlw	1
  4011  002ACE  ECD8  F020         	call	_Twyzsza
  4012  002AD2  E317               	bnc	l312
  4013                           ;rgl.c: 1065: {
  4014  002AD4  ECC4  F020         	call	_Tstoi	;wreg free
  4015  002AD8  E316               	bnc	l311
  4016                           ;rgl.c: 1067: {
  4017  002ADA  0E01               	movlw	1
  4018  002ADC  010F               	movlb	F1586 shr (0+8)
  4019  002ADE  651C               	cpfsgt	F1586& (0+255),b
  4020  002AE0  D00B               	goto	l314
  4021                           ;rgl.c: 1069: {
  4022  002AE2  0E02               	movlw	2
  4023  002AE4  0100               	movlb	__Lparam shr (0+8)
  4024  002AE6  6FF0               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4025                           ;rgl.c: 1071: if(Twyzsza(3)) k=3;
  4026  002AE8  0E03               	movlw	3
  4027  002AEA  ECD8  F020         	call	_Twyzsza
  4028  002AEE  E309               	bnc	l312
  4029  002AF0  0E03               	movlw	3
  4030  002AF2  0100               	movlb	__Lparam shr (0+8)
  4031  002AF4  6FF0               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4032  002AF6  D005               	goto	l312
  4033                           ;rgl.c: 1072: l=0;
  4034                           ;rgl.c: 1073: }
  4035  002AF8                     l314:
  4036                           ;rgl.c: 1074: else
  4037  002AF8  0100               	movlb	__Lparam shr (0+8)
  4038  002AFA  6BF0               	clrf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4039                           ;rgl.c: 1077: l++;
  4040  002AFC  010F               	movlb	F1586 shr (0+8)
  4041  002AFE  2B1C               	incf	F1586& (0+255),f,b
  4042                           ;rgl.c: 1078: }
  4043  002B00  D002               	goto	l311
  4044  002B02                     l312:
  4045  002B02  010F               	movlb	F1586 shr (0+8)
  4046  002B04  6B1C               	clrf	F1586& (0+255),b
  4047  002B06                     l311:
  4048                           ;rgl.c: 1081: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PW
      +                          M.MDMOD;
  4049  002B06  C061  F000         	movff	_PWM+5,btemp
  4050  002B0A  6A01               	clrf	btemp+1,c
  4051  002B0C  C059  F002         	movff	_rgl+7,btemp+2
  4052  002B10  0100               	movlb	__Lparam shr (0+8)
  4053  002B12  51F0               	movf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  4054  002B14  5C02               	subwf	btemp+2,w,c
  4055  002B16  6EF6               	movwf	tblptrl,c
  4056  002B18  6AF7               	clrf	tblptrh,c
  4057  002B1A  B0D8               	btfsc	status,0,c
  4058  002B1C  2AF7               	incf	tblptrh,f,c
  4059  002B1E  AFF0               	btfss	?a_ModPruCW4^(__Lparam& (0+65280)),7,b
  4060  002B20  06F7               	decf	tblptrh,f,c
  4061  002B22  50F7               	movf	tblptrh,w,c
  4062  002B24  0A80               	xorlw	128
  4063  002B26  6E02               	movwf	btemp+2,c
  4064  002B28  5001               	movf	btemp+1,w,c
  4065  002B2A  0A80               	xorlw	128
  4066  002B2C  5C02               	subwf	btemp+2,w,c
  4067  002B2E  E102               	bnz	u3025
  4068  002B30  5000               	movf	btemp,w,c
  4069  002B32  5CF6               	subwf	tblptrl,w,c
  4070  002B34                     u3025:
  4071  002B34  E203               	bc	l318
  4072  002B36  C061  F059         	movff	_PWM+5,_rgl+7
  4073  002B3A  D008               	goto	l319
  4074  002B3C                     l318:
  4075                           ;rgl.c: 1082: else {x=k+10;rgl.srp-=k;}
  4076  002B3C  0100               	movlb	__Lparam shr (0+8)
  4077  002B3E  51F0               	movf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  4078  002B40  0F0A               	addlw	10
  4079  002B42  CFE8 FEF2          	movff	wreg,_x
  4080  002B46  51F0               	movf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  4081  002B48  0100               	movlb	(_rgl+7) shr (0+8)
  4082  002B4A  5F59               	subwf	(_rgl+7)& (0+255),f,b
  4083  002B4C                     l319:
  4084                           ;rgl.c: 1083: if(rgl.srp>PWM.MMAXCW) rgl.srp=PWM
      +                          .MMAXCW;
  4085  002B4C  C059  FFE8         	movff	_rgl+7,wreg
  4086  002B50  0100               	movlb	(_PWM+26) shr (0+8)
  4087  002B52  6176               	cpfslt	(_PWM+26)& (0+255),b
  4088  002B54  D002               	goto	l320
  4089  002B56  C076  F059         	movff	_PWM+26,_rgl+7
  4090  002B5A                     l320:
  4091                           ;rgl.c: 1084: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.
      +                          srp;
  4092  002B5A  C059  FFE8         	movff	_rgl+7,wreg
  4093  002B5E  0100               	movlb	(_rgl+8) shr (0+8)
  4094  002B60  615A               	cpfslt	(_rgl+8)& (0+255),b
  4095  002B62  0012               	return	
  4096  002B64  C059  F05A         	movff	_rgl+7,_rgl+8
  4097                           ;rgl.c: 1086: return;
  4098  002B68  0012               	return	
  4099  002B6A                     l309:
  4100                           ;rgl.c: 1088: else
  4101  002B6A  0100               	movlb	__Lparam shr (0+8)
  4102  002B6C  6BF0               	clrf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4103                           ;rgl.c: 1091: if(Tmaleje(0)&&m>=2)
  4104  002B6E  0E00               	movlw	0
  4105  002B70  ECA9  F020         	call	_Tmaleje
  4106  002B74  E310               	bnc	l323
  4107  002B76  0E01               	movlw	1
  4108  002B78  010F               	movlb	F1587 shr (0+8)
  4109  002B7A  651D               	cpfsgt	F1587& (0+255),b
  4110  002B7C  D00C               	goto	l323
  4111                           ;rgl.c: 1092: {
  4112  002B7E  010F               	movlb	F1589 shr (0+8)
  4113  002B80  6B1F               	clrf	F1589& (0+255),b
  4114                           ;rgl.c: 1094: o=0;
  4115  002B82  010F               	movlb	F1588 shr (0+8)
  4116  002B84  6B1E               	clrf	F1588& (0+255),b
  4117                           ;rgl.c: 1095: l=0;
  4118  002B86  010F               	movlb	F1586 shr (0+8)
  4119  002B88  6B1C               	clrf	F1586& (0+255),b
  4120                           ;rgl.c: 1096: m=0;
  4121  002B8A  010F               	movlb	F1587 shr (0+8)
  4122  002B8C  6B1D               	clrf	F1587& (0+255),b
  4123                           ;rgl.c: 1097: k=1;
  4124  002B8E  0E01               	movlw	1
  4125  002B90  0100               	movlb	__Lparam shr (0+8)
  4126  002B92  6FF0               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4127                           ;rgl.c: 1098: }
  4128  002B94  D015               	goto	l324
  4129  002B96                     l323:
  4130                           ;rgl.c: 1099: else
  4131  002B96  0E01               	movlw	1
  4132  002B98  ECCB  F020         	call	_Tnizsza
  4133  002B9C  E30F               	bnc	l325
  4134                           ;rgl.c: 1101: {
  4135  002B9E  ECC4  F020         	call	_Tstoi	;wreg free
  4136  002BA2  E30E               	bnc	l324
  4137                           ;rgl.c: 1103: {
  4138  002BA4  0E02               	movlw	2
  4139  002BA6  010F               	movlb	F1586 shr (0+8)
  4140  002BA8  651C               	cpfsgt	F1586& (0+255),b
  4141  002BAA  D003               	goto	l327
  4142                           ;rgl.c: 1105: {
  4143  002BAC  0100               	movlb	__Lparam shr (0+8)
  4144  002BAE  6FF0               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4145  002BB0  D005               	goto	l325
  4146                           ;rgl.c: 1107: l=0;
  4147                           ;rgl.c: 1108: }
  4148  002BB2                     l327:
  4149                           ;rgl.c: 1109: else
  4150  002BB2  0100               	movlb	__Lparam shr (0+8)
  4151  002BB4  6BF0               	clrf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4152                           ;rgl.c: 1112: l++;
  4153  002BB6  010F               	movlb	F1586 shr (0+8)
  4154  002BB8  2B1C               	incf	F1586& (0+255),f,b
  4155                           ;rgl.c: 1113: }
  4156  002BBA  D002               	goto	l324
  4157  002BBC                     l325:
  4158  002BBC  010F               	movlb	F1586 shr (0+8)
  4159  002BBE  6B1C               	clrf	F1586& (0+255),b
  4160  002BC0                     l324:
  4161                           ;rgl.c: 1116: if(PWM.MMAXCW>PWM.MGMOD)
  4162  002BC0  C076  FFE8         	movff	_PWM+26,wreg
  4163  002BC4  0100               	movlb	(_PWM+6) shr (0+8)
  4164  002BC6  6162               	cpfslt	(_PWM+6)& (0+255),b
  4165  002BC8  D01A               	goto	l330
  4166                           ;rgl.c: 1117: {
  4167  002BCA  C059  FFE8         	movff	_rgl+7,wreg
  4168  002BCE  0100               	movlb	__Lparam shr (0+8)
  4169  002BD0  25F0               	addwf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  4170  002BD2  6E02               	movwf	btemp+2,c
  4171  002BD4  6A03               	clrf	btemp+3,c
  4172  002BD6  B0D8               	btfsc	status,0,c
  4173  002BD8  2A03               	incf	btemp+3,f,c
  4174  002BDA  BFF0               	btfsc	?a_ModPruCW4^(__Lparam& (0+65280)),7,b
  4175  002BDC  0603               	decf	btemp+3,f,c
  4176  002BDE  C062  F000         	movff	_PWM+6,btemp
  4177  002BE2  6A01               	clrf	btemp+1,c
  4178  002BE4  5001               	movf	btemp+1,w,c
  4179  002BE6  0A80               	xorlw	128
  4180  002BE8  6E04               	movwf	btemp+4,c
  4181  002BEA  5003               	movf	btemp+3,w,c
  4182  002BEC  0A80               	xorlw	128
  4183  002BEE  5C04               	subwf	btemp+4,w,c
  4184  002BF0  E102               	bnz	u3125
  4185  002BF2  5002               	movf	btemp+2,w,c
  4186  002BF4  5C00               	subwf	btemp,w,c
  4187  002BF6                     u3125:
  4188  002BF6  E21D               	bc	l334
  4189  002BF8  C062  F059         	movff	_PWM+6,_rgl+7
  4190  002BFC  D01E               	goto	l335
  4191                           ;rgl.c: 1119: else rgl.srp+=k;
  4192                           ;rgl.c: 1120: x=k;
  4193                           ;rgl.c: 1121: }
  4194  002BFE                     l330:
  4195                           ;rgl.c: 1122: else
  4196  002BFE  C059  FFE8         	movff	_rgl+7,wreg
  4197  002C02  0100               	movlb	__Lparam shr (0+8)
  4198  002C04  25F0               	addwf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  4199  002C06  6E02               	movwf	btemp+2,c
  4200  002C08  6A03               	clrf	btemp+3,c
  4201  002C0A  B0D8               	btfsc	status,0,c
  4202  002C0C  2A03               	incf	btemp+3,f,c
  4203  002C0E  BFF0               	btfsc	?a_ModPruCW4^(__Lparam& (0+65280)),7,b
  4204  002C10  0603               	decf	btemp+3,f,c
  4205  002C12  C076  F000         	movff	_PWM+26,btemp
  4206  002C16  6A01               	clrf	btemp+1,c
  4207  002C18  5001               	movf	btemp+1,w,c
  4208  002C1A  0A80               	xorlw	128
  4209  002C1C  6E04               	movwf	btemp+4,c
  4210  002C1E  5003               	movf	btemp+3,w,c
  4211  002C20  0A80               	xorlw	128
  4212  002C22  5C04               	subwf	btemp+4,w,c
  4213  002C24  E102               	bnz	u3135
  4214  002C26  5002               	movf	btemp+2,w,c
  4215  002C28  5C00               	subwf	btemp,w,c
  4216  002C2A                     u3135:
  4217  002C2A  E203               	bc	l334
  4218  002C2C  C076  F059         	movff	_PWM+26,_rgl+7
  4219  002C30  D004               	goto	l335
  4220  002C32                     l334:
  4221                           ;rgl.c: 1125: else rgl.srp+=k;
  4222  002C32  0100               	movlb	__Lparam shr (0+8)
  4223  002C34  51F0               	movf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  4224  002C36  0100               	movlb	(_rgl+7) shr (0+8)
  4225  002C38  2759               	addwf	(_rgl+7)& (0+255),f,b
  4226  002C3A                     l335:
  4227                           ;rgl.c: 1126: x=k;
  4228  002C3A  C0F0  FEF2         	movff	?a_ModPruCW4,_x
  4229                           ;rgl.c: 1127: }
  4230  002C3E  C059  FFE8         	movff	_rgl+7,wreg
  4231  002C42  0100               	movlb	(_rgl+8) shr (0+8)
  4232  002C44  615A               	cpfslt	(_rgl+8)& (0+255),b
  4233  002C46  0012               	return	
  4234  002C48  C059  F05A         	movff	_rgl+7,_rgl+8
  4235                           ;rgl.c: 1129: return;
  4236  002C4C  0012               	return	
  4237                           ;rgl.c: 1130: }
  4238  002C4E                     __end_of_ModPruCW4:
  4239                           ;rgl.c: 1136: void IncMaxCW4(void)
  4240                           ;rgl.c: 1137: {
  4241  002C4E                     _IncMaxCW4:
  4242  000000                     
  4243                           ;rgl.c: 1138: unsigned char k,w,d;
  4244  002C4E  0100               	movlb	_rgl shr (0+8)
  4245  002C50  A552               	btfss	_rgl& (0+255),2,b
  4246  002C52  D014               	goto	l338
  4247                           ;rgl.c: 1142: {
  4248  002C54  C076  FFE8         	movff	_PWM+26,wreg
  4249  002C58  0100               	movlb	(_PWM+6) shr (0+8)
  4250  002C5A  6162               	cpfslt	(_PWM+6)& (0+255),b
  4251  002C5C  D007               	goto	l339
  4252                           ;rgl.c: 1144: {
  4253  002C5E  C05A  FFE8         	movff	_rgl+8,wreg
  4254  002C62  6162               	cpfslt	(_PWM+6)& (0+255),b
  4255  002C64  0012               	return	
  4256  002C66  C062  F05A         	movff	_PWM+6,_rgl+8
  4257                           ;rgl.c: 1146: }
  4258  002C6A  0012               	return	
  4259  002C6C                     l339:
  4260                           ;rgl.c: 1147: else
  4261  002C6C  C05A  FFE8         	movff	_rgl+8,wreg
  4262  002C70  0100               	movlb	(_PWM+26) shr (0+8)
  4263  002C72  6176               	cpfslt	(_PWM+26)& (0+255),b
  4264  002C74  0012               	return	
  4265  002C76  C076  F05A         	movff	_PWM+26,_rgl+8
  4266                           ;rgl.c: 1150: }
  4267  002C7A  0012               	return	
  4268  002C7C                     l338:
  4269                           ;rgl.c: 1152: }
  4270  002C7C  0E01               	movlw	1
  4271  002C7E  EC9C  F020         	call	_Trosnie
  4272  002C82  B0D8               	btfsc	status,0,c
  4273  002C84  0012               	return	
  4274                           ;rgl.c: 1154: {
  4275  002C86  0E05               	movlw	5
  4276  002C88  6ED9               	movwf	fsr2l,c
  4277                           ;rgl.c: 1156: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
  4278  002C8A  C05A  F000         	movff	_rgl+8,btemp
  4279  002C8E  6A01               	clrf	btemp+1,c
  4280  002C90  2600               	addwf	btemp,f,c
  4281  002C92  0E00               	movlw	0
  4282  002C94  2201               	addwfc	btemp+1,f,c
  4283  002C96  5001               	movf	btemp+1,w,c
  4284  002C98  0A80               	xorlw	128
  4285  002C9A  0F80               	addlw	-128
  4286  002C9C  0EF1               	movlw	241
  4287  002C9E  B4D8               	btfsc	status,2,c
  4288  002CA0  5C00               	subwf	btemp,w,c
  4289  002CA2  E304               	bnc	l344
  4290  002CA4  0EF0               	movlw	-16
  4291  002CA6  CFE8 F05A          	movff	wreg,_rgl+8
  4292  002CAA  D003               	goto	l345
  4293  002CAC                     l344:
  4294                           ;rgl.c: 1157: else rgl.xmod+=k;
  4295  002CAC  0100               	movlb	(_rgl+8) shr (0+8)
  4296  002CAE  0E05               	movlw	5
  4297  002CB0  275A               	addwf	(_rgl+8)& (0+255),f,b
  4298  002CB2                     l345:
  4299                           ;rgl.c: 1158: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=P
      +                          WM.MMAXCW;
  4300  002CB2  C05A  FFE8         	movff	_rgl+8,wreg
  4301  002CB6  0100               	movlb	(_PWM+26) shr (0+8)
  4302  002CB8  6176               	cpfslt	(_PWM+26)& (0+255),b
  4303  002CBA  D002               	goto	l346
  4304  002CBC  C076  F05A         	movff	_PWM+26,_rgl+8
  4305  002CC0                     l346:
  4306                           ;rgl.c: 1159: x=k;
  4307  002CC0  0E05               	movlw	5
  4308  002CC2  CFE8 FEF2          	movff	wreg,_x
  4309                           ;rgl.c: 1160: }
  4310  002CC6  0C05               	retlw	5
  4311  002CC8                     __end_of_IncMaxCW4:
  4312                           ;rgl.c: 1164: void ModPrzCW4(void)
  4313                           ;rgl.c: 1165: {
  4314  002CC8                     _ModPrzCW4:
  4315  000000                     
  4316                           ;rgl.c: 1166: unsigned char p,m,maxmod,mdmod;
  4317  002CC8  0E0A               	movlw	10
  4318  002CCA  ECCB  F020         	call	_Tnizsza
  4319  002CCE  E201 D104          	bnc	l348
  4320                           ;rgl.c: 1232: {
  4321  002CD2  C062  FFE8         	movff	_PWM+6,wreg
  4322  002CD6  0100               	movlb	(_PWM+26) shr (0+8)
  4323  002CD8  6176               	cpfslt	(_PWM+26)& (0+255),b
  4324  002CDA  D003               	goto	l349
  4325  002CDC  C076  FFE1         	movff	_PWM+26,fsr1l
  4326  002CE0  D002               	goto	l350
  4327  002CE2                     l349:
  4328                           ;rgl.c: 1234: else maxmod=PWM.MGMOD;
  4329  002CE2  C062  FFE1         	movff	_PWM+6,fsr1l
  4330  002CE6                     l350:
  4331                           ;rgl.c: 1235: if(rgl.xmod<=maxmod) p=rgl.xmod;
  4332  002CE6  C05A  FFE8         	movff	_rgl+8,wreg
  4333  002CEA  5CE1               	subwf	fsr1l,w,c
  4334  002CEC  E303               	bnc	l351
  4335  002CEE  C05A  FFD9         	movff	_rgl+8,fsr2l
  4336  002CF2  D004               	goto	l352
  4337  002CF4                     l351:
  4338                           ;rgl.c: 1236: else
  4339  002CF4  50E1               	movf	fsr1l,w,c
  4340  002CF6  6ED9               	movwf	fsr2l,c
  4341                           ;rgl.c: 1239: rgl.xmod=maxmod;
  4342  002CF8  CFE1 F05A          	movff	fsr1l,_rgl+8
  4343  002CFC                     l352:
  4344                           ;rgl.c: 1240: }
  4345  002CFC  C155  FFE8         	movff	_DtCW+9,wreg
  4346  002D00  0A80               	xorlw	128
  4347  002D02  0F79               	addlw	-135
  4348  002D04  E337               	bnc	l353
  4349  002D06  0E01               	movlw	1
  4350  002D08  010F               	movlb	_tmr shr (0+8)
  4351  002D0A  6531               	cpfsgt	_tmr& (0+255),b
  4352  002D0C  D033               	goto	l353
  4353                           ;rgl.c: 1242: {
  4354  002D0E  6B31               	clrf	_tmr& (0+255),b
  4355                           ;rgl.c: 1244: r=p-PWM.MDMOD;
  4356  002D10  C061  FFE8         	movff	_PWM+5,wreg
  4357  002D14  5CD9               	subwf	fsr2l,w,c
  4358  002D16  6EF3               	movwf	prodl,c
  4359  002D18  6AF4               	clrf	prodh,c
  4360  002D1A  A0D8               	btfss	status,0,c
  4361  002D1C  06F4               	decf	prodh,f,c
  4362                           ;rgl.c: 1245: if((p-(r/4))>PWM.MDMOD) p-=r/4;
  4363  002D1E  0E04               	movlw	4
  4364  002D20  6E02               	movwf	btemp+2,c
  4365  002D22  6A03               	clrf	btemp+3,c
  4366  002D24  CFF3 F000          	movff	prodl,btemp
  4367  002D28  CFF4 F001          	movff	prodh,btemp+1
  4368  002D2C  EC31  F04A         	call	awdiv
  4369  002D30  5004               	movf	btemp+4,w,c
  4370  002D32  5CD9               	subwf	fsr2l,w,c
  4371  002D34  6E00               	movwf	btemp,c
  4372  002D36  5005               	movf	btemp+5,w,c
  4373  002D38  A0D8               	btfss	status,0,c
  4374  002D3A  2805               	incf	btemp+5,w,c
  4375  002D3C  6A01               	clrf	btemp+1,c
  4376  002D3E  5E01               	subwf	btemp+1,f,c
  4377  002D40  C061  F002         	movff	_PWM+5,btemp+2
  4378  002D44  6A03               	clrf	btemp+3,c
  4379  002D46  5003               	movf	btemp+3,w,c
  4380  002D48  0A80               	xorlw	128
  4381  002D4A  6E04               	movwf	btemp+4,c
  4382  002D4C  5001               	movf	btemp+1,w,c
  4383  002D4E  0A80               	xorlw	128
  4384  002D50  5C04               	subwf	btemp+4,w,c
  4385  002D52  E102               	bnz	u3285
  4386  002D54  5000               	movf	btemp,w,c
  4387  002D56  5C02               	subwf	btemp+2,w,c
  4388  002D58                     u3285:
  4389  002D58  E301 D07F          	bc	l362
  4390  002D5C  0E04               	movlw	4
  4391  002D5E  6E02               	movwf	btemp+2,c
  4392  002D60  6A03               	clrf	btemp+3,c
  4393  002D62  CFF3 F000          	movff	prodl,btemp
  4394  002D66  CFF4 F001          	movff	prodh,btemp+1
  4395  002D6A  EC31  F04A         	call	awdiv
  4396  002D6E  5004               	movf	btemp+4,w,c
  4397  002D70  5ED9               	subwf	fsr2l,f,c
  4398                           ;rgl.c: 1246: else p=PWM.MDMOD;
  4399  002D72  D0B1               	goto	l367
  4400                           ;rgl.c: 1247: rgl.xmod=p;
  4401                           ;rgl.c: 1248: }
  4402  002D74                     l353:
  4403                           ;rgl.c: 1249: else
  4404  002D74  C155  FFE8         	movff	_DtCW+9,wreg
  4405  002D78  0A80               	xorlw	128
  4406  002D7A  0F7B               	addlw	-133
  4407  002D7C  E334               	bnc	l357
  4408  002D7E  0E01               	movlw	1
  4409  002D80  010F               	movlb	_tmr shr (0+8)
  4410  002D82  6531               	cpfsgt	_tmr& (0+255),b
  4411  002D84  D030               	goto	l357
  4412                           ;rgl.c: 1251: {
  4413  002D86  6B31               	clrf	_tmr& (0+255),b
  4414                           ;rgl.c: 1253: r=p-PWM.MDMOD;
  4415  002D88  C061  FFE8         	movff	_PWM+5,wreg
  4416  002D8C  5CD9               	subwf	fsr2l,w,c
  4417  002D8E  6EF3               	movwf	prodl,c
  4418  002D90  6AF4               	clrf	prodh,c
  4419  002D92  A0D8               	btfss	status,0,c
  4420  002D94  06F4               	decf	prodh,f,c
  4421                           ;rgl.c: 1254: if((p-(r/8))>PWM.MDMOD) p-=r/8;
  4422  002D96  0E08               	movlw	8
  4423  002D98  6E02               	movwf	btemp+2,c
  4424  002D9A  6A03               	clrf	btemp+3,c
  4425  002D9C  CFF3 F000          	movff	prodl,btemp
  4426  002DA0  CFF4 F001          	movff	prodh,btemp+1
  4427  002DA4  EC31  F04A         	call	awdiv
  4428  002DA8  5004               	movf	btemp+4,w,c
  4429  002DAA  5CD9               	subwf	fsr2l,w,c
  4430  002DAC  6E00               	movwf	btemp,c
  4431  002DAE  5005               	movf	btemp+5,w,c
  4432  002DB0  A0D8               	btfss	status,0,c
  4433  002DB2  2805               	incf	btemp+5,w,c
  4434  002DB4  6A01               	clrf	btemp+1,c
  4435  002DB6  5E01               	subwf	btemp+1,f,c
  4436  002DB8  C061  F002         	movff	_PWM+5,btemp+2
  4437  002DBC  6A03               	clrf	btemp+3,c
  4438  002DBE  5003               	movf	btemp+3,w,c
  4439  002DC0  0A80               	xorlw	128
  4440  002DC2  6E04               	movwf	btemp+4,c
  4441  002DC4  5001               	movf	btemp+1,w,c
  4442  002DC6  0A80               	xorlw	128
  4443  002DC8  5C04               	subwf	btemp+4,w,c
  4444  002DCA  E102               	bnz	u3325
  4445  002DCC  5000               	movf	btemp,w,c
  4446  002DCE  5C02               	subwf	btemp+2,w,c
  4447  002DD0                     u3325:
  4448  002DD0  E244               	bc	l362
  4449  002DD2  0E08               	movlw	8
  4450  002DD4  6E02               	movwf	btemp+2,c
  4451  002DD6  6A03               	clrf	btemp+3,c
  4452  002DD8  CFF3 F000          	movff	prodl,btemp
  4453  002DDC  CFF4 F001          	movff	prodh,btemp+1
  4454  002DE0  EC31  F04A         	call	awdiv
  4455  002DE4  D037               	goto	L29
  4456                           ;rgl.c: 1255: else p=PWM.MDMOD;
  4457                           ;rgl.c: 1256: rgl.xmod=p;
  4458                           ;rgl.c: 1257: }
  4459  002DE6                     l357:
  4460                           ;rgl.c: 1258: else
  4461  002DE6  C155  FFE8         	movff	_DtCW+9,wreg
  4462  002DEA  0A80               	xorlw	128
  4463  002DEC  0F7C               	addlw	-132
  4464  002DEE  E338               	bnc	l361
  4465  002DF0  010F               	movlb	_tmr shr (0+8)
  4466  002DF2  5331               	movf	_tmr& (0+255),f,b
  4467  002DF4  E035               	bz	l361
  4468                           ;rgl.c: 1260: {
  4469  002DF6  6B31               	clrf	_tmr& (0+255),b
  4470                           ;rgl.c: 1262: r=p-PWM.MDMOD;
  4471  002DF8  C061  FFE8         	movff	_PWM+5,wreg
  4472  002DFC  5CD9               	subwf	fsr2l,w,c
  4473  002DFE  6EF3               	movwf	prodl,c
  4474  002E00  6AF4               	clrf	prodh,c
  4475  002E02  A0D8               	btfss	status,0,c
  4476  002E04  06F4               	decf	prodh,f,c
  4477                           ;rgl.c: 1263: if((p-(r/16))>PWM.MDMOD) p-=r/16;
  4478  002E06  0E10               	movlw	16
  4479  002E08  6E02               	movwf	btemp+2,c
  4480  002E0A  6A03               	clrf	btemp+3,c
  4481  002E0C  CFF3 F000          	movff	prodl,btemp
  4482  002E10  CFF4 F001          	movff	prodh,btemp+1
  4483  002E14  EC31  F04A         	call	awdiv
  4484  002E18  5004               	movf	btemp+4,w,c
  4485  002E1A  5CD9               	subwf	fsr2l,w,c
  4486  002E1C  6E00               	movwf	btemp,c
  4487  002E1E  5005               	movf	btemp+5,w,c
  4488  002E20  A0D8               	btfss	status,0,c
  4489  002E22  2805               	incf	btemp+5,w,c
  4490  002E24  6A01               	clrf	btemp+1,c
  4491  002E26  5E01               	subwf	btemp+1,f,c
  4492  002E28  C061  F002         	movff	_PWM+5,btemp+2
  4493  002E2C  6A03               	clrf	btemp+3,c
  4494  002E2E  5003               	movf	btemp+3,w,c
  4495  002E30  0A80               	xorlw	128
  4496  002E32  6E04               	movwf	btemp+4,c
  4497  002E34  5001               	movf	btemp+1,w,c
  4498  002E36  0A80               	xorlw	128
  4499  002E38  5C04               	subwf	btemp+4,w,c
  4500  002E3A  E102               	bnz	u3365
  4501  002E3C  5000               	movf	btemp,w,c
  4502  002E3E  5C02               	subwf	btemp+2,w,c
  4503  002E40                     u3365:
  4504  002E40  E20C               	bc	l362
  4505  002E42  0E10               	movlw	16
  4506  002E44  6E02               	movwf	btemp+2,c
  4507  002E46  6A03               	clrf	btemp+3,c
  4508  002E48  CFF3 F000          	movff	prodl,btemp
  4509  002E4C  CFF4 F001          	movff	prodh,btemp+1
  4510  002E50  EC31  F04A         	call	awdiv
  4511  002E54                     L29:
  4512  002E54  5004               	movf	btemp+4,w,c
  4513  002E56  5ED9               	subwf	fsr2l,f,c
  4514  002E58  D03E               	goto	l367
  4515  002E5A                     l362:
  4516                           ;rgl.c: 1264: else p=PWM.MDMOD;
  4517  002E5A  C061  FFD9         	movff	_PWM+5,fsr2l
  4518  002E5E  D03B               	goto	l367
  4519                           ;rgl.c: 1265: rgl.xmod=p;
  4520                           ;rgl.c: 1266: }
  4521  002E60                     l361:
  4522                           ;rgl.c: 1267: else
  4523  002E60  C155  FFE8         	movff	_DtCW+9,wreg
  4524  002E64  0A80               	xorlw	128
  4525  002E66  0F7F               	addlw	-129
  4526  002E68  E238               	bc	l348
  4527  002E6A  0E01               	movlw	1
  4528  002E6C  010F               	movlb	_tmr2 shr (0+8)
  4529  002E6E  6532               	cpfsgt	_tmr2& (0+255),b
  4530  002E70  D034               	goto	l348
  4531                           ;rgl.c: 1269: {
  4532  002E72  6B32               	clrf	_tmr2& (0+255),b
  4533                           ;rgl.c: 1271: r=p-PWM.MDMOD;
  4534  002E74  C061  FFE8         	movff	_PWM+5,wreg
  4535  002E78  5CD9               	subwf	fsr2l,w,c
  4536  002E7A  6EF3               	movwf	prodl,c
  4537  002E7C  6AF4               	clrf	prodh,c
  4538  002E7E  A0D8               	btfss	status,0,c
  4539  002E80  06F4               	decf	prodh,f,c
  4540                           ;rgl.c: 1272: if((p+(r/16))<maxmod) p+=r/16;
  4541  002E82  0E10               	movlw	16
  4542  002E84  6E02               	movwf	btemp+2,c
  4543  002E86  6A03               	clrf	btemp+3,c
  4544  002E88  CFF3 F000          	movff	prodl,btemp
  4545  002E8C  CFF4 F001          	movff	prodh,btemp+1
  4546  002E90  EC31  F04A         	call	awdiv
  4547  002E94  50D9               	movf	fsr2l,w,c
  4548  002E96  2404               	addwf	btemp+4,w,c
  4549  002E98  6E00               	movwf	btemp,c
  4550  002E9A  0E00               	movlw	0
  4551  002E9C  2005               	addwfc	btemp+5,w,c
  4552  002E9E  6E01               	movwf	btemp+1,c
  4553  002EA0  CFE1 F002          	movff	fsr1l,btemp+2
  4554  002EA4  6A03               	clrf	btemp+3,c
  4555  002EA6  5001               	movf	btemp+1,w,c
  4556  002EA8  0A80               	xorlw	128
  4557  002EAA  6E04               	movwf	btemp+4,c
  4558  002EAC  5003               	movf	btemp+3,w,c
  4559  002EAE  0A80               	xorlw	128
  4560  002EB0  5C04               	subwf	btemp+4,w,c
  4561  002EB2  E102               	bnz	u3405
  4562  002EB4  5002               	movf	btemp+2,w,c
  4563  002EB6  5C00               	subwf	btemp,w,c
  4564  002EB8                     u3405:
  4565  002EB8  E20C               	bc	l366
  4566  002EBA  0E10               	movlw	16
  4567  002EBC  6E02               	movwf	btemp+2,c
  4568  002EBE  6A03               	clrf	btemp+3,c
  4569  002EC0  CFF3 F000          	movff	prodl,btemp
  4570  002EC4  CFF4 F001          	movff	prodh,btemp+1
  4571  002EC8  EC31  F04A         	call	awdiv
  4572  002ECC  5004               	movf	btemp+4,w,c
  4573  002ECE  26D9               	addwf	fsr2l,f,c
  4574  002ED0  D002               	goto	l367
  4575  002ED2                     l366:
  4576                           ;rgl.c: 1273: else p=maxmod;
  4577  002ED2  50E1               	movf	fsr1l,w,c
  4578  002ED4  6ED9               	movwf	fsr2l,c
  4579  002ED6                     l367:
  4580                           ;rgl.c: 1274: rgl.xmod=p;
  4581  002ED6  CFD9 F05A          	movff	fsr2l,_rgl+8
  4582  002EDA                     l348:
  4583                           ;rgl.c: 1275: }
  4584  002EDA  0100               	movlb	_rgl shr (0+8)
  4585  002EDC  BB52               	btfsc	_rgl& (0+255),5,b
  4586  002EDE  D00F               	goto	l368
  4587                           ;rgl.c: 1320: {
  4588  002EE0  A552               	btfss	_rgl& (0+255),2,b
  4589  002EE2  0012               	return	
  4590                           ;rgl.c: 1322: {
  4591  002EE4  0E00               	movlw	0
  4592  002EE6  ECA9  F020         	call	_Tmaleje
  4593  002EEA  B0D8               	btfsc	status,0,c
  4594  002EEC  0012               	return	
  4595                           ;rgl.c: 1324: {
  4596  002EEE  0E09               	movlw	9
  4597  002EF0  ECD8  F020         	call	_Twyzsza
  4598  002EF4  A0D8               	btfss	status,0,c
  4599  002EF6  0012               	return	
  4600                           ;rgl.c: 1326: {
  4601  002EF8  0100               	movlb	_rgl shr (0+8)
  4602  002EFA  8B52               	bsf	_rgl& (0+255),5,b
  4603                           ;rgl.c: 1328: return;
  4604  002EFC  0012               	return	
  4605                           ;rgl.c: 1330: else return;
  4606                           ;rgl.c: 1332: else return;
  4607                           ;rgl.c: 1334: else return;
  4608  002EFE                     l368:
  4609                           ;rgl.c: 1336: else
  4610  002EFE  0E00               	movlw	0
  4611  002F00  ECA9  F020         	call	_Tmaleje
  4612  002F04  E306               	bnc	l375
  4613  002F06  0E09               	movlw	9
  4614  002F08  ECD8  F020         	call	_Twyzsza
  4615  002F0C  E202               	bc	l375
  4616                           ;rgl.c: 1339: rgl.nmod=0;
  4617  002F0E  0100               	movlb	_rgl shr (0+8)
  4618  002F10  9B52               	bcf	_rgl& (0+255),5,b
  4619  002F12                     l375:
  4620                           ;rgl.c: 1340: }
  4621  002F12  010F               	movlb	F1607 shr (0+8)
  4622  002F14  2B23               	incf	F1607& (0+255),f,b
  4623                           ;rgl.c: 1342: }
  4624  002F16  0C01               	retlw	1
  4625  002F18                     __end_of_ModPrzCW4:
  4626                           ;rgl.c: 1346: void SetPWM_CW4(void)
  4627                           ;rgl.c: 1347: {
  4628  002F18                     _SetPWM_CW4:
  4629  000000                     
  4630                           ;rgl.c: 1348: if(!rgl.nmod)
  4631  002F18  0100               	movlb	_rgl shr (0+8)
  4632  002F1A  AB52               	btfss	_rgl& (0+255),5,b
  4633  002F1C  EF48  F020         	goto	l658
  4634                           ;rgl.c: 1349: {
  4635                           ;rgl.c: 1351: }
  4636  002F20  EF4C  F020         	goto	l655
  4637                           ;rgl.c: 1352: else WriteOPWM(PWM.MDMOD);
  4638                           ;rgl.c: 1353: }
  4639  002F24                     __end_of_SetPWM_CW4:
  4640                           ;rgl.c: 1357: void ModZgCW5(void)
  4641                           ;rgl.c: 1358: {
  4642  002F24                     _ModZgCW5:
  4643  000000                     
  4644                           ;rgl.c: 1359: signed long m;
  4645  002F24  0100               	movlb	_rgl shr (0+8)
  4646  002F26  A552               	btfss	_rgl& (0+255),2,b
  4647  002F28  D00C               	goto	l381
  4648                           ;rgl.c: 1362: {
  4649  002F2A  0E02               	movlw	2
  4650  002F2C  ECCB  F020         	call	_Tnizsza
  4651  002F30  A0D8               	btfss	status,0,c
  4652  002F32  0012               	return	
  4653                           ;rgl.c: 1364: {
  4654  002F34  C05D  F05A         	movff	_PWM+1,_rgl+8
  4655                           ;rgl.c: 1366: rgl.srp=0;
  4656  002F38  0100               	movlb	(_rgl+7) shr (0+8)
  4657  002F3A  6B59               	clrf	(_rgl+7)& (0+255),b
  4658                           ;rgl.c: 1367: rgl.ytmp=0;
  4659  002F3C  6B58               	clrf	(_rgl+6)& (0+255),b
  4660                           ;rgl.c: 1368: rgl.nmod=0;
  4661  002F3E  9B52               	bcf	_rgl& (0+255),5,b
  4662                           ;rgl.c: 1369: rgl.del1s=0;
  4663  002F40  9D52               	bcf	_rgl& (0+255),6,b
  4664                           ;rgl.c: 1370: }
  4665                           ;rgl.c: 1371: else return;
  4666  002F42                     l381:
  4667                           ;rgl.c: 1372: }
  4668  002F42  0E00               	movlw	0
  4669  002F44  ECD8  F020         	call	_Twyzsza
  4670  002F48  E315               	bnc	l384
  4671  002F4A  ECC4  F020         	call	_Tstoi	;wreg free
  4672  002F4E  E312               	bnc	l384
  4673                           ;rgl.c: 1374: {
  4674  002F50  0100               	movlb	_rgl shr (0+8)
  4675  002F52  8552               	bsf	_rgl& (0+255),2,b
  4676                           ;rgl.c: 1376: rgl.fast_up=0;
  4677  002F54  9952               	bcf	_rgl& (0+255),4,b
  4678                           ;rgl.c: 1377: rgl.med_up=0;
  4679  002F56  9752               	bcf	_rgl& (0+255),3,b
  4680                           ;rgl.c: 1378: rgl.srp=PWM.BufPWM;
  4681  002F58  C05D  F059         	movff	_PWM+1,_rgl+7
  4682                           ;rgl.c: 1379: rgl.xmod=PWM.BufPWM;
  4683  002F5C  C05D  F05A         	movff	_PWM+1,_rgl+8
  4684                           ;rgl.c: 1380: if(rgl.xmod>PWM.MGMOD)
  4685  002F60  C05A  FFE8         	movff	_rgl+8,wreg
  4686  002F64  0100               	movlb	(_PWM+6) shr (0+8)
  4687  002F66  6162               	cpfslt	(_PWM+6)& (0+255),b
  4688  002F68  0012               	return	
  4689                           ;rgl.c: 1381: {
  4690  002F6A  C062  F059         	movff	_PWM+6,_rgl+7
  4691                           ;rgl.c: 1383: rgl.xmod=PWM.MGMOD;
  4692  002F6E  C062  F05A         	movff	_PWM+6,_rgl+8
  4693                           ;rgl.c: 1384: }
  4694  002F72  0012               	return	
  4695  002F74                     l384:
  4696                           ;rgl.c: 1386: }
  4697  002F74  C061  FFE8         	movff	_PWM+5,wreg
  4698  002F78  0100               	movlb	(_rgl+8) shr (0+8)
  4699  002F7A  5D5A               	subwf	(_rgl+8)& (0+255),w,b
  4700  002F7C  E318               	bnc	l386
  4701  002F7E  0E0A               	movlw	10
  4702  002F80  6E02               	movwf	btemp+2,c
  4703  002F82  6A03               	clrf	btemp+3,c
  4704  002F84  C061  FFE8         	movff	_PWM+5,wreg
  4705  002F88  C05A  F000         	movff	_rgl+8,btemp
  4706  002F8C  6A01               	clrf	btemp+1,c
  4707  002F8E  5E00               	subwf	btemp,f,c
  4708  002F90  0E00               	movlw	0
  4709  002F92  5A01               	subwfb	btemp+1,f,c
  4710  002F94  EC78  F04A         	call	awmul
  4711  002F98  0100               	movlb	__Lparam shr (0+8)
  4712  002F9A  C004  F0F0         	movff	btemp+4,?a_ModZgCW5
  4713  002F9E  C005  F0F1         	movff	btemp+5,?a_ModZgCW5+1
  4714  002FA2  0E00               	movlw	0
  4715  002FA4  BFF1               	btfsc	(?a_ModZgCW5+1)^(__Lparam& (0+65280)),7,b
  4716  002FA6  0EFF               	movlw	-1
  4717  002FA8  6FF2               	movwf	(?a_ModZgCW5+2)^(__Lparam& (0+65280)),b
  4718  002FAA  6FF3               	movwf	(?a_ModZgCW5+3)^(__Lparam& (0+65280)),b
  4719  002FAC  D005               	goto	l387
  4720  002FAE                     l386:
  4721                           ;rgl.c: 1388: else m=0;
  4722  002FAE  0100               	movlb	__Lparam shr (0+8)
  4723  002FB0  6BF0               	clrf	?a_ModZgCW5^(__Lparam& (0+65280)),b
  4724  002FB2  6BF1               	clrf	(?a_ModZgCW5+1)^(__Lparam& (0+65280)),b
  4725  002FB4  6BF2               	clrf	(?a_ModZgCW5+2)^(__Lparam& (0+65280)),b
  4726  002FB6  6BF3               	clrf	(?a_ModZgCW5+3)^(__Lparam& (0+65280)),b
  4727  002FB8                     l387:
  4728                           ;rgl.c: 1389: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
  4729  002FB8  C15A  FFE8         	movff	_DtCW+14,wreg
  4730  002FBC  C159  F000         	movff	_DtCW+13,btemp
  4731  002FC0  5C00               	subwf	btemp,w,c
  4732  002FC2  6E04               	movwf	btemp+4,c
  4733  002FC4  6A05               	clrf	btemp+5,c
  4734  002FC6  A0D8               	btfss	status,0,c
  4735  002FC8  0605               	decf	btemp+5,f,c
  4736  002FCA  6A06               	clrf	btemp+6,c
  4737  002FCC  BE05               	btfsc	btemp+5,7,c
  4738  002FCE  0606               	decf	btemp+6,f,c
  4739  002FD0  5006               	movf	btemp+6,w,c
  4740  002FD2  6E07               	movwf	btemp+7,c
  4741  002FD4  0EF0               	movlw	low ?a_ModZgCW5
  4742  002FD6  6EE9               	movwf	fsr0l,c
  4743  002FD8  0E00               	movlw	high ?a_ModZgCW5
  4744  002FDA  6EEA               	movwf	fsr0h,c
  4745  002FDC  ECB5  F04A         	call	aldiv_f
  4746                           ;rgl.c: 1390: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
  4747  002FE0  C15A  FFE8         	movff	_DtCW+14,wreg
  4748  002FE4  C158  F000         	movff	_DtCW+12,btemp
  4749  002FE8  5C00               	subwf	btemp,w,c
  4750  002FEA  6E04               	movwf	btemp+4,c
  4751  002FEC  6A05               	clrf	btemp+5,c
  4752  002FEE  A0D8               	btfss	status,0,c
  4753  002FF0  0605               	decf	btemp+5,f,c
  4754  002FF2  6A06               	clrf	btemp+6,c
  4755  002FF4  BE05               	btfsc	btemp+5,7,c
  4756  002FF6  0606               	decf	btemp+6,f,c
  4757  002FF8  5006               	movf	btemp+6,w,c
  4758  002FFA  6E07               	movwf	btemp+7,c
  4759  002FFC  0EF0               	movlw	low ?a_ModZgCW5
  4760  002FFE  6EE9               	movwf	fsr0l,c
  4761  003000  0E00               	movlw	high ?a_ModZgCW5
  4762  003002  6EEA               	movwf	fsr0h,c
  4763  003004  ECAB  F04A         	call	almul_f
  4764                           ;rgl.c: 1391: if(m<0) m=0;
  4765  003008  0100               	movlb	__Lparam shr (0+8)
  4766  00300A  AFF3               	btfss	(?a_ModZgCW5+3)^(__Lparam& (0+65280)),7,b
  4767  00300C  D004               	goto	l388
  4768  00300E  6BF0               	clrf	?a_ModZgCW5^(__Lparam& (0+65280)),b
  4769  003010  6BF1               	clrf	(?a_ModZgCW5+1)^(__Lparam& (0+65280)),b
  4770  003012  6BF2               	clrf	(?a_ModZgCW5+2)^(__Lparam& (0+65280)),b
  4771  003014  6BF3               	clrf	(?a_ModZgCW5+3)^(__Lparam& (0+65280)),b
  4772  003016                     l388:
  4773                           ;rgl.c: 1392: m=m/10+PWM.MDMOD;
  4774  003016  0E0A               	movlw	10
  4775  003018  6E04               	movwf	btemp+4,c
  4776  00301A  6A05               	clrf	btemp+5,c
  4777  00301C  6A06               	clrf	btemp+6,c
  4778  00301E  6A07               	clrf	btemp+7,c
  4779  003020  C0F0  F000         	movff	?a_ModZgCW5,btemp
  4780  003024  C0F1  F001         	movff	?a_ModZgCW5+1,btemp+1
  4781  003028  C0F2  F002         	movff	?a_ModZgCW5+2,btemp+2
  4782  00302C  C0F3  F003         	movff	?a_ModZgCW5+3,btemp+3
  4783  003030  ECE2  F049         	call	aldiv
  4784  003034  C061  FFE8         	movff	_PWM+5,wreg
  4785  003038  2400               	addwf	btemp,w,c
  4786  00303A  0100               	movlb	__Lparam shr (0+8)
  4787  00303C  6FF0               	movwf	?a_ModZgCW5^(__Lparam& (0+65280)),b
  4788  00303E  0E00               	movlw	0
  4789  003040  2001               	addwfc	btemp+1,w,c
  4790  003042  6FF1               	movwf	(?a_ModZgCW5+1)^(__Lparam& (0+65280)),b
  4791  003044  0E00               	movlw	0
  4792  003046  2002               	addwfc	btemp+2,w,c
  4793  003048  6FF2               	movwf	(?a_ModZgCW5+2)^(__Lparam& (0+65280)),b
  4794  00304A  0E00               	movlw	0
  4795  00304C  2003               	addwfc	btemp+3,w,c
  4796  00304E  6FF3               	movwf	(?a_ModZgCW5+3)^(__Lparam& (0+65280)),b
  4797                           ;rgl.c: 1393: if(m>0xff)
  4798  003050  51F3               	movf	(?a_ModZgCW5+3)^(__Lparam& (0+65280)),w
  4799  003052  0A80               	xorlw	128
  4800  003054  0F80               	addlw	128
  4801  003056  E108               	bnz	u3575
  4802  003058  0E00               	movlw	0
  4803  00305A  5DF2               	subwf	(?a_ModZgCW5+2)^(__Lparam& (0+65280)),w
  4804  00305C  E105               	bnz	u3575
  4805  00305E  0E01               	movlw	1
  4806  003060  5DF1               	subwf	(?a_ModZgCW5+1)^(__Lparam& (0+65280)),w
  4807  003062  E102               	bnz	u3575
  4808  003064  0E00               	movlw	0
  4809  003066  5DF0               	subwf	?a_ModZgCW5^(__Lparam& (0+65280)),w
  4810  003068                     u3575:
  4811                           ;rgl.c: 1394: {
  4812  003068  0100               	movlb	_rgl shr (0+8)
  4813  00306A  E304               	bnc	L37
  4814  00306C  9552               	bcf	_rgl& (0+255),2,b
  4815                           ;rgl.c: 1396: rgl.tmp_pwm=rgl.xmod;
  4816  00306E  C05A  F05B         	movff	_rgl+8,_rgl+9
  4817                           ;rgl.c: 1397: return;
  4818  003072  0012               	return	
  4819                           ;rgl.c: 1398: }
  4820  003074                     L37:
  4821  003074  A552               	btfss	_rgl& (0+255),2,b
  4822  003076  D01C               	goto	l390
  4823  003078  C05A  F000         	movff	_rgl+8,btemp
  4824  00307C  6A01               	clrf	btemp+1,c
  4825  00307E  6A02               	clrf	btemp+2,c
  4826  003080  6A03               	clrf	btemp+3,c
  4827  003082  0100               	movlb	__Lparam shr (0+8)
  4828  003084  51F3               	movf	(?a_ModZgCW5+3)^(__Lparam& (0+65280)),w
  4829  003086  0A80               	xorlw	128
  4830  003088  6E04               	movwf	btemp+4,c
  4831  00308A  5003               	movf	btemp+3,w,c
  4832  00308C  0A80               	xorlw	128
  4833  00308E  5C04               	subwf	btemp+4,w,c
  4834  003090  E108               	bnz	u3595
  4835  003092  5002               	movf	btemp+2,w,c
  4836  003094  5DF2               	subwf	(?a_ModZgCW5+2)^(__Lparam& (0+65280)),w
  4837  003096  E105               	bnz	u3595
  4838  003098  5001               	movf	btemp+1,w,c
  4839  00309A  5DF1               	subwf	(?a_ModZgCW5+1)^(__Lparam& (0+65280)),w
  4840  00309C  E102               	bnz	u3595
  4841  00309E  5000               	movf	btemp,w,c
  4842  0030A0  5DF0               	subwf	?a_ModZgCW5^(__Lparam& (0+65280)),w
  4843  0030A2                     u3595:
  4844  0030A2  E206               	bc	l390
  4845                           ;rgl.c: 1400: rgl.srp=(rgl.xmod-m);
  4846  0030A4  0100               	movlb	__Lparam shr (0+8)
  4847  0030A6  51F0               	movf	?a_ModZgCW5^(__Lparam& (0+65280)),w
  4848  0030A8  0100               	movlb	(_rgl+8) shr (0+8)
  4849  0030AA  5D5A               	subwf	(_rgl+8)& (0+255),w,b
  4850  0030AC  CFE8 F059          	movff	wreg,_rgl+7
  4851  0030B0                     l390:
  4852                           ;rgl.c: 1401: m+=rgl.srp;
  4853  0030B0  C059  FFE8         	movff	_rgl+7,wreg
  4854  0030B4  0100               	movlb	__Lparam shr (0+8)
  4855  0030B6  27F0               	addwf	?a_ModZgCW5^(__Lparam& (0+65280)),f,b
  4856  0030B8  0E01               	movlw	1
  4857  0030BA  B0D8               	btfsc	status,0,c
  4858  0030BC  27F1               	addwf	(?a_ModZgCW5+1)^(__Lparam& (0+65280)),f,b
  4859  0030BE  B0D8               	btfsc	status,0,c
  4860  0030C0  27F2               	addwf	(?a_ModZgCW5+2)^(__Lparam& (0+65280)),f,b
  4861  0030C2  B0D8               	btfsc	status,0,c
  4862  0030C4  27F3               	addwf	(?a_ModZgCW5+3)^(__Lparam& (0+65280)),f,b
  4863                           ;rgl.c: 1402: if(m>rgl.xmod) p=rgl.xmod;
  4864  0030C6  C05A  F000         	movff	_rgl+8,btemp
  4865  0030CA  6A01               	clrf	btemp+1,c
  4866  0030CC  6A02               	clrf	btemp+2,c
  4867  0030CE  6A03               	clrf	btemp+3,c
  4868  0030D0  5003               	movf	btemp+3,w,c
  4869  0030D2  0A80               	xorlw	128
  4870  0030D4  6E04               	movwf	btemp+4,c
  4871  0030D6  51F3               	movf	(?a_ModZgCW5+3)^(__Lparam& (0+65280)),w
  4872  0030D8  0A80               	xorlw	128
  4873  0030DA  5C04               	subwf	btemp+4,w,c
  4874  0030DC  E108               	bnz	u3615
  4875  0030DE  51F2               	movf	(?a_ModZgCW5+2)^(__Lparam& (0+65280)),w
  4876  0030E0  5C02               	subwf	btemp+2,w,c
  4877  0030E2  E105               	bnz	u3615
  4878  0030E4  51F1               	movf	(?a_ModZgCW5+1)^(__Lparam& (0+65280)),w
  4879  0030E6  5C01               	subwf	btemp+1,w,c
  4880  0030E8  E102               	bnz	u3615
  4881  0030EA  51F0               	movf	?a_ModZgCW5^(__Lparam& (0+65280)),w
  4882  0030EC  5C00               	subwf	btemp,w,c
  4883  0030EE                     u3615:
  4884  0030EE  E203               	bc	l391
  4885  0030F0  C05A  FFD9         	movff	_rgl+8,fsr2l
  4886  0030F4  D003               	goto	l392
  4887  0030F6                     l391:
  4888                           ;rgl.c: 1403: else p=m;
  4889  0030F6  0100               	movlb	__Lparam shr (0+8)
  4890  0030F8  51F0               	movf	?a_ModZgCW5^(__Lparam& (0+65280)),w
  4891  0030FA  6ED9               	movwf	fsr2l,c
  4892  0030FC                     l392:
  4893                           ;rgl.c: 1404: rgl.fz=0;
  4894  0030FC  0100               	movlb	_rgl shr (0+8)
  4895  0030FE  9552               	bcf	_rgl& (0+255),2,b
  4896                           ;rgl.c: 1405: rgl.tmp_pwm=p;
  4897  003100  CFD9 F05B          	movff	fsr2l,_rgl+9
  4898                           ;rgl.c: 1406: }
  4899  003104  0012               	return	
  4900  003106                     __end_of_ModZgCW5:
  4901                           ;rgl.c: 1409: void ModDkCW5(void)
  4902                           ;rgl.c: 1410: {
  4903  003106                     _ModDkCW5:
  4904  000000                     
  4905                           ;rgl.c: 1411: signed long m;
  4906  003106  0100               	movlb	_rgl shr (0+8)
  4907  003108  A552               	btfss	_rgl& (0+255),2,b
  4908  00310A  0012               	return	
  4909                           ;rgl.c: 1416: ada=DtCW.AC_CW-DtCW.DAD_CW;
  4910  00310C  C15A  FFE8         	movff	_DtCW+14,wreg
  4911  003110  0101               	movlb	(_DtCW+12) shr (0+8)
  4912  003112  5D58               	subwf	(_DtCW+12)& (0+255),w,b
  4913  003114  0100               	movlb	__Lparam shr (0+8)
  4914  003116  6FF0               	movwf	?a_ModDkCW5^(__Lparam& (0+65280)),b
  4915                           ;rgl.c: 1417: if(Trowna()) return;
  4916  003118  ECF3  F020         	call	_Trowna	;wreg free
  4917  00311C  B0D8               	btfsc	status,0,c
  4918  00311E  0012               	return	
  4919                           ;rgl.c: 1418: if(Tnizsza(0))
  4920  003120  0E00               	movlw	0
  4921  003122  ECCB  F020         	call	_Tnizsza
  4922                           ;rgl.c: 1419: {
  4923  003126  0E00               	movlw	0
  4924  003128  E30B               	bnc	L38
  4925  00312A  EC9C  F020         	call	_Trosnie
  4926  00312E  E214               	bc	l399
  4927                           ;rgl.c: 1421: {
  4928  003130  0E01               	movlw	1
  4929  003132  0100               	movlb	__Lparam shr (0+8)
  4930  003134  6FF1               	movwf	(?a_ModDkCW5+1)^(__Lparam& (0+65280)),b
  4931                           ;rgl.c: 1423: if(Tnizsza(1)) k=3;
  4932  003136  ECCB  F020         	call	_Tnizsza
  4933  00313A  E30E               	bnc	l399
  4934  00313C  0E03               	movlw	3
  4935  00313E  D00A               	goto	L21
  4936                           ;rgl.c: 1424: }
  4937                           ;rgl.c: 1426: else
  4938  003140                     L38:
  4939  003140  ECA9  F020         	call	_Tmaleje
  4940  003144  E209               	bc	l399
  4941                           ;rgl.c: 1429: {
  4942  003146  0E01               	movlw	1
  4943  003148  0100               	movlb	__Lparam shr (0+8)
  4944  00314A  6FF1               	movwf	(?a_ModDkCW5+1)^(__Lparam& (0+65280)),b
  4945                           ;rgl.c: 1431: if(Twyzsza(1)) k=2;
  4946  00314C  ECD8  F020         	call	_Twyzsza
  4947  003150  E303               	bnc	l399
  4948  003152  0E02               	movlw	2
  4949  003154                     L21:
  4950  003154  0100               	movlb	__Lparam shr (0+8)
  4951  003156  6FF1               	movwf	(?a_ModDkCW5+1)^(__Lparam& (0+65280)),b
  4952  003158                     l399:
  4953                           ;rgl.c: 1432: }
  4954  003158  C0F0  F002         	movff	?a_ModDkCW5,btemp+2
  4955  00315C  6A03               	clrf	btemp+3,c
  4956  00315E  BE02               	btfsc	btemp+2,7,c
  4957  003160  0603               	decf	btemp+3,f,c
  4958  003162  C0F1  F000         	movff	?a_ModDkCW5+1,btemp
  4959  003166  6A01               	clrf	btemp+1,c
  4960  003168  EC78  F04A         	call	awmul
  4961  00316C  C059  FFE8         	movff	_rgl+7,wreg
  4962  003170  2404               	addwf	btemp+4,w,c
  4963  003172  6E00               	movwf	btemp,c
  4964  003174  0E00               	movlw	0
  4965  003176  2005               	addwfc	btemp+5,w,c
  4966  003178  6E01               	movwf	btemp+1,c
  4967  00317A  0100               	movlb	__Lparam shr (0+8)
  4968  00317C  C000  F0F2         	movff	btemp,?a_ModDkCW5+2
  4969  003180  C001  F0F3         	movff	btemp+1,?a_ModDkCW5+3
  4970  003184  0E00               	movlw	0
  4971  003186  BFF3               	btfsc	(?a_ModDkCW5+3)^(__Lparam& (0+65280)),7,b
  4972  003188  0EFF               	movlw	-1
  4973  00318A  6FF4               	movwf	(?a_ModDkCW5+4)^(__Lparam& (0+65280)),b
  4974  00318C  6FF5               	movwf	(?a_ModDkCW5+5)^(__Lparam& (0+65280)),b
  4975                           ;rgl.c: 1435: if(m>rgl.xmod) p=rgl.xmod;
  4976  00318E  C05A  F000         	movff	_rgl+8,btemp
  4977  003192  6A01               	clrf	btemp+1,c
  4978  003194  6A02               	clrf	btemp+2,c
  4979  003196  6A03               	clrf	btemp+3,c
  4980  003198  5003               	movf	btemp+3,w,c
  4981  00319A  0A80               	xorlw	128
  4982  00319C  6E04               	movwf	btemp+4,c
  4983  00319E  51F5               	movf	(?a_ModDkCW5+5)^(__Lparam& (0+65280)),w
  4984  0031A0  0A80               	xorlw	128
  4985  0031A2  5C04               	subwf	btemp+4,w,c
  4986  0031A4  E108               	bnz	u3695
  4987  0031A6  51F4               	movf	(?a_ModDkCW5+4)^(__Lparam& (0+65280)),w
  4988  0031A8  5C02               	subwf	btemp+2,w,c
  4989  0031AA  E105               	bnz	u3695
  4990  0031AC  51F3               	movf	(?a_ModDkCW5+3)^(__Lparam& (0+65280)),w
  4991  0031AE  5C01               	subwf	btemp+1,w,c
  4992  0031B0  E102               	bnz	u3695
  4993  0031B2  51F2               	movf	(?a_ModDkCW5+2)^(__Lparam& (0+65280)),w
  4994  0031B4  5C00               	subwf	btemp,w,c
  4995  0031B6                     u3695:
  4996  0031B6  E203               	bc	l402
  4997  0031B8  C05A  FFD9         	movff	_rgl+8,fsr2l
  4998  0031BC  D01C               	goto	l403
  4999  0031BE                     l402:
  5000                           ;rgl.c: 1436: else
  5001  0031BE  C061  F000         	movff	_PWM+5,btemp
  5002  0031C2  6A01               	clrf	btemp+1,c
  5003  0031C4  6A02               	clrf	btemp+2,c
  5004  0031C6  6A03               	clrf	btemp+3,c
  5005  0031C8  0100               	movlb	__Lparam shr (0+8)
  5006  0031CA  51F5               	movf	(?a_ModDkCW5+5)^(__Lparam& (0+65280)),w
  5007  0031CC  0A80               	xorlw	128
  5008  0031CE  6E04               	movwf	btemp+4,c
  5009  0031D0  5003               	movf	btemp+3,w,c
  5010  0031D2  0A80               	xorlw	128
  5011  0031D4  5C04               	subwf	btemp+4,w,c
  5012  0031D6  E108               	bnz	u3705
  5013  0031D8  5002               	movf	btemp+2,w,c
  5014  0031DA  5DF4               	subwf	(?a_ModDkCW5+4)^(__Lparam& (0+65280)),w
  5015  0031DC  E105               	bnz	u3705
  5016  0031DE  5001               	movf	btemp+1,w,c
  5017  0031E0  5DF3               	subwf	(?a_ModDkCW5+3)^(__Lparam& (0+65280)),w
  5018  0031E2  E102               	bnz	u3705
  5019  0031E4  5000               	movf	btemp,w,c
  5020  0031E6  5DF2               	subwf	(?a_ModDkCW5+2)^(__Lparam& (0+65280)),w
  5021  0031E8                     u3705:
  5022  0031E8  E203               	bc	l404
  5023  0031EA  C061  FFD9         	movff	_PWM+5,fsr2l
  5024  0031EE  D003               	goto	l403
  5025  0031F0                     l404:
  5026                           ;rgl.c: 1438: else p=m;
  5027  0031F0  0100               	movlb	__Lparam shr (0+8)
  5028  0031F2  51F2               	movf	(?a_ModDkCW5+2)^(__Lparam& (0+65280)),w
  5029  0031F4  6ED9               	movwf	fsr2l,c
  5030  0031F6                     l403:
  5031                           ;rgl.c: 1439: rgl.tmp_pwm=p;
  5032  0031F6  CFD9 F05B          	movff	fsr2l,_rgl+9
  5033                           ;rgl.c: 1440: }
  5034  0031FA  0012               	return	
  5035  0031FC                     __end_of_ModDkCW5:
  5036                           ;rgl.c: 1445: void ModPruCW5(void)
  5037                           ;rgl.c: 1446: {
  5038  0031FC                     _ModPruCW5:
  5039  000000                     
  5040                           ;rgl.c: 1447: unsigned char tmp,k;
  5041  0031FC  0100               	movlb	_rgl shr (0+8)
  5042  0031FE  B552               	btfsc	_rgl& (0+255),2,b
  5043  003200  D080               	goto	l407
  5044                           ;rgl.c: 1450: {
  5045  003202  0E00               	movlw	0
  5046  003204  ECCB  F020         	call	_Tnizsza
  5047  003208  A0D8               	btfss	status,0,c
  5048  00320A  0012               	return	
  5049                           ;rgl.c: 1452: {
  5050  00320C  0E00               	movlw	0
  5051  00320E  ECCB  F020         	call	_Tnizsza
  5052  003212  A0D8               	btfss	status,0,c
  5053  003214  0012               	return	
  5054  003216  0E0A               	movlw	10
  5055  003218  ECCB  F020         	call	_Tnizsza
  5056  00321C  B0D8               	btfsc	status,0,c
  5057  00321E  0012               	return	
  5058                           ;rgl.c: 1454: {
  5059  003220  0100               	movlb	_rgl shr (0+8)
  5060  003222  AD52               	btfss	_rgl& (0+255),6,b
  5061  003224  D002               	goto	l410
  5062                           ;rgl.c: 1456: {
  5063  003226  9D52               	bcf	_rgl& (0+255),6,b
  5064                           ;rgl.c: 1458: return;
  5065  003228  0012               	return	
  5066  00322A                     l410:
  5067                           ;rgl.c: 1459: }
  5068  00322A  ECC4  F020         	call	_Tstoi	;wreg free
  5069  00322E  A0D8               	btfss	status,0,c
  5070  003230  0012               	return	
  5071                           ;rgl.c: 1461: {
  5072  003232  0100               	movlb	_rgl shr (0+8)
  5073  003234  8D52               	bsf	_rgl& (0+255),6,b
  5074                           ;rgl.c: 1463: if(PWM.BufPWM>rgl.xmod) return;
  5075  003236  C05D  FFE8         	movff	_PWM+1,wreg
  5076  00323A  615A               	cpfslt	(_rgl+8)& (0+255),b
  5077  00323C  D001               	goto	l412
  5078  00323E  0012               	return	
  5079  003240                     l412:
  5080                           ;rgl.c: 1464: tmp=rgl.xmod-PWM.BufPWM;
  5081  003240  C05D  FFE8         	movff	_PWM+1,wreg
  5082  003244  0100               	movlb	(_rgl+8) shr (0+8)
  5083  003246  5D5A               	subwf	(_rgl+8)& (0+255),w,b
  5084  003248  0100               	movlb	__Lparam shr (0+8)
  5085  00324A  6FF0               	movwf	?a_ModPruCW5^(__Lparam& (0+65280)),b
  5086                           ;rgl.c: 1467: if(Tnizsza(3))
  5087  00324C  0E03               	movlw	3
  5088  00324E  ECCB  F020         	call	_Tnizsza
  5089  003252  E308               	bnc	l413
  5090                           ;rgl.c: 1468: {
  5091  003254  0E0C               	movlw	12
  5092  003256  0100               	movlb	__Lparam shr (0+8)
  5093  003258  6FF1               	movwf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),b
  5094                           ;rgl.c: 1470: if(rgl.fast_up) k=10;
  5095  00325A  0100               	movlb	_rgl shr (0+8)
  5096  00325C  A952               	btfss	_rgl& (0+255),4,b
  5097  00325E  D00C               	goto	l415
  5098  003260  0E0A               	movlw	10
  5099  003262  D008               	goto	L22
  5100                           ;rgl.c: 1471: }
  5101  003264                     l413:
  5102                           ;rgl.c: 1472: else
  5103  003264  0E03               	movlw	3
  5104  003266  0100               	movlb	__Lparam shr (0+8)
  5105  003268  6FF1               	movwf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),b
  5106                           ;rgl.c: 1475: if(Tnizsza(1)) k=6;
  5107  00326A  0E01               	movlw	1
  5108  00326C  ECCB  F020         	call	_Tnizsza
  5109  003270  E303               	bnc	l415
  5110  003272  0E06               	movlw	6
  5111  003274                     L22:
  5112  003274  0100               	movlb	__Lparam shr (0+8)
  5113  003276  6FF1               	movwf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),b
  5114  003278                     l415:
  5115                           ;rgl.c: 1476: }
  5116  003278  0100               	movlb	__Lparam shr (0+8)
  5117  00327A  51F1               	movf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),w
  5118  00327C  61F0               	cpfslt	?a_ModPruCW5^(__Lparam& (0+65280)),b
  5119  00327E  D002               	goto	l417
  5120  003280  51F0               	movf	?a_ModPruCW5^(__Lparam& (0+65280)),w
  5121  003282  6FF1               	movwf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),b
  5122  003284                     l417:
  5123                           ;rgl.c: 1478: if(PWM.MMAXCW>PWM.MGMOD)
  5124  003284  C076  FFE8         	movff	_PWM+26,wreg
  5125  003288  0100               	movlb	(_PWM+6) shr (0+8)
  5126  00328A  6162               	cpfslt	(_PWM+6)& (0+255),b
  5127  00328C  D01D               	goto	l418
  5128                           ;rgl.c: 1479: {
  5129  00328E  0100               	movlb	__Lparam shr (0+8)
  5130  003290  51F1               	movf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),w
  5131  003292  C059  F002         	movff	_rgl+7,btemp+2
  5132  003296  6A03               	clrf	btemp+3,c
  5133  003298  2602               	addwf	btemp+2,f,c
  5134  00329A  0E00               	movlw	0
  5135  00329C  2203               	addwfc	btemp+3,f,c
  5136  00329E  C062  F000         	movff	_PWM+6,btemp
  5137  0032A2  6A01               	clrf	btemp+1,c
  5138  0032A4  5001               	movf	btemp+1,w,c
  5139  0032A6  0A80               	xorlw	128
  5140  0032A8  6E04               	movwf	btemp+4,c
  5141  0032AA  5003               	movf	btemp+3,w,c
  5142  0032AC  0A80               	xorlw	128
  5143  0032AE  5C04               	subwf	btemp+4,w,c
  5144  0032B0  E102               	bnz	u3845
  5145  0032B2  5002               	movf	btemp+2,w,c
  5146  0032B4  5C00               	subwf	btemp,w,c
  5147  0032B6                     u3845:
  5148  0032B6  E203               	bc	l419
  5149  0032B8  C062  F059         	movff	_PWM+6,_rgl+7
  5150  0032BC  0012               	return	
  5151  0032BE                     l419:
  5152                           ;rgl.c: 1481: else rgl.srp+=k;
  5153  0032BE  0100               	movlb	__Lparam shr (0+8)
  5154  0032C0  51F1               	movf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),w
  5155  0032C2  0100               	movlb	(_rgl+7) shr (0+8)
  5156  0032C4  2759               	addwf	(_rgl+7)& (0+255),f,b
  5157                           ;rgl.c: 1482: }
  5158  0032C6  0012               	return	
  5159  0032C8                     l418:
  5160                           ;rgl.c: 1483: else
  5161  0032C8  0100               	movlb	__Lparam shr (0+8)
  5162  0032CA  51F1               	movf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),w
  5163  0032CC  C059  F002         	movff	_rgl+7,btemp+2
  5164  0032D0  6A03               	clrf	btemp+3,c
  5165  0032D2  2602               	addwf	btemp+2,f,c
  5166  0032D4  0E00               	movlw	0
  5167  0032D6  2203               	addwfc	btemp+3,f,c
  5168  0032D8  C076  F000         	movff	_PWM+26,btemp
  5169  0032DC  6A01               	clrf	btemp+1,c
  5170  0032DE  5001               	movf	btemp+1,w,c
  5171  0032E0  0A80               	xorlw	128
  5172  0032E2  6E04               	movwf	btemp+4,c
  5173  0032E4  5003               	movf	btemp+3,w,c
  5174  0032E6  0A80               	xorlw	128
  5175  0032E8  5C04               	subwf	btemp+4,w,c
  5176  0032EA  E102               	bnz	u3855
  5177  0032EC  5002               	movf	btemp+2,w,c
  5178  0032EE  5C00               	subwf	btemp,w,c
  5179  0032F0                     u3855:
  5180  0032F0  E203               	bc	l422
  5181  0032F2  C076  F059         	movff	_PWM+26,_rgl+7
  5182  0032F6  0012               	return	
  5183  0032F8                     l422:
  5184                           ;rgl.c: 1486: else rgl.srp+=k;
  5185  0032F8  0100               	movlb	__Lparam shr (0+8)
  5186  0032FA  51F1               	movf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),w
  5187  0032FC  0100               	movlb	(_rgl+7) shr (0+8)
  5188  0032FE  2759               	addwf	(_rgl+7)& (0+255),f,b
  5189                           ;rgl.c: 1487: }
  5190                           ;rgl.c: 1490: else return;
  5191                           ;rgl.c: 1492: else return;
  5192  003300  0012               	return	
  5193                           ;rgl.c: 1494: else return;
  5194  003302                     l407:
  5195                           ;rgl.c: 1496: else
  5196  003302  ECC4  F020         	call	_Tstoi	;wreg free
  5197  003306  E201 D0B1          	bnc	l428
  5198  00330A  ECF3  F020         	call	_Trowna	;wreg free
  5199  00330E  E301 D0AD          	bc	l428
  5200                           ;rgl.c: 1499: {
  5201  003312  C15A  FFE8         	movff	_DtCW+14,wreg
  5202  003316  0101               	movlb	(_DtCW+12) shr (0+8)
  5203  003318  6158               	cpfslt	(_DtCW+12)& (0+255),b
  5204  00331A  D05F               	goto	l429
  5205                           ;rgl.c: 1501: {
  5206  00331C  0E01               	movlw	1
  5207  00331E  ECD8  F020         	call	_Twyzsza
  5208  003322  A0D8               	btfss	status,0,c
  5209  003324  0012               	return	
  5210                           ;rgl.c: 1503: {
  5211  003326  ECC4  F020         	call	_Tstoi	;wreg free
  5212  00332A  E30B               	bnc	l431
  5213                           ;rgl.c: 1505: {
  5214  00332C  0E02               	movlw	2
  5215  00332E  ECD8  F020         	call	_Twyzsza
  5216  003332  E207               	bc	l431
  5217                           ;rgl.c: 1507: {
  5218  003334  0100               	movlb	_rgl shr (0+8)
  5219  003336  AF52               	btfss	_rgl& (0+255),7,b
  5220  003338  D002               	goto	l433
  5221                           ;rgl.c: 1509: {
  5222  00333A  9F52               	bcf	_rgl& (0+255),7,b
  5223                           ;rgl.c: 1511: return;
  5224  00333C  0012               	return	
  5225  00333E                     l433:
  5226                           ;rgl.c: 1513: else rgl.deln1=1;
  5227  00333E  0100               	movlb	_rgl shr (0+8)
  5228  003340  8F52               	bsf	_rgl& (0+255),7,b
  5229  003342                     l431:
  5230                           ;rgl.c: 1514: }
  5231  003342  0E00               	movlw	0
  5232  003344  ECA9  F020         	call	_Tmaleje
  5233  003348  B0D8               	btfsc	status,0,c
  5234  00334A  0012               	return	
  5235                           ;rgl.c: 1518: k=1;
  5236  00334C  0E01               	movlw	1
  5237  00334E  6ED9               	movwf	fsr2l,c
  5238                           ;rgl.c: 1519: if(!Twyzsza(1)) k=1;
  5239  003350  ECD8  F020         	call	_Twyzsza
  5240  003354  E202               	bc	l436
  5241  003356  0E01               	movlw	1
  5242  003358  D013               	goto	L23
  5243  00335A                     l436:
  5244                           ;rgl.c: 1520: else
  5245  00335A  0E03               	movlw	3
  5246  00335C  ECD8  F020         	call	_Twyzsza
  5247  003360  E208               	bc	l438
  5248                           ;rgl.c: 1522: {
  5249  003362  0E02               	movlw	2
  5250  003364  0100               	movlb	__Lparam shr (0+8)
  5251  003366  6FF1               	movwf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),b
  5252                           ;rgl.c: 1524: if(!Tstoi()) k=5;
  5253  003368  ECC4  F020         	call	_Tstoi	;wreg free
  5254  00336C  E20B               	bc	l437
  5255  00336E  0E05               	movlw	5
  5256  003370  D007               	goto	L23
  5257                           ;rgl.c: 1525: }
  5258  003372                     l438:
  5259                           ;rgl.c: 1526: else
  5260  003372  0E05               	movlw	5
  5261  003374  0100               	movlb	__Lparam shr (0+8)
  5262  003376  6FF1               	movwf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),b
  5263                           ;rgl.c: 1529: if(!Tstoi()) k=10;
  5264  003378  ECC4  F020         	call	_Tstoi	;wreg free
  5265  00337C  E203               	bc	l437
  5266  00337E  0E0A               	movlw	10
  5267  003380                     L23:
  5268  003380  0100               	movlb	__Lparam shr (0+8)
  5269  003382  6FF1               	movwf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),b
  5270  003384                     l437:
  5271                           ;rgl.c: 1530: }
  5272  003384  C061  F000         	movff	_PWM+5,btemp
  5273  003388  6A01               	clrf	btemp+1,c
  5274  00338A  0100               	movlb	__Lparam shr (0+8)
  5275  00338C  51F1               	movf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),w
  5276  00338E  C059  F002         	movff	_rgl+7,btemp+2
  5277  003392  6A03               	clrf	btemp+3,c
  5278  003394  5E02               	subwf	btemp+2,f,c
  5279  003396  0E00               	movlw	0
  5280  003398  5A03               	subwfb	btemp+3,f,c
  5281  00339A  5003               	movf	btemp+3,w,c
  5282  00339C  0A80               	xorlw	128
  5283  00339E  6E04               	movwf	btemp+4,c
  5284  0033A0  5001               	movf	btemp+1,w,c
  5285  0033A2  0A80               	xorlw	128
  5286  0033A4  5C04               	subwf	btemp+4,w,c
  5287  0033A6  E102               	bnz	u3995
  5288  0033A8  5000               	movf	btemp,w,c
  5289  0033AA  5C02               	subwf	btemp+2,w,c
  5290  0033AC                     u3995:
  5291  0033AC  E203               	bc	l442
  5292  0033AE  C061  F059         	movff	_PWM+5,_rgl+7
  5293  0033B2  D004               	goto	l443
  5294  0033B4                     l442:
  5295                           ;rgl.c: 1532: else rgl.srp-=k;
  5296  0033B4  0100               	movlb	__Lparam shr (0+8)
  5297  0033B6  51F1               	movf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),w
  5298  0033B8  0100               	movlb	(_rgl+7) shr (0+8)
  5299  0033BA  5F59               	subwf	(_rgl+7)& (0+255),f,b
  5300  0033BC                     l443:
  5301                           ;rgl.c: 1533: if(rgl.srp>PWM.MMAXCW) rgl.srp=PWM
      +                          .MMAXCW;
  5302  0033BC  C059  FFE8         	movff	_rgl+7,wreg
  5303  0033C0  0100               	movlb	(_PWM+26) shr (0+8)
  5304  0033C2  6176               	cpfslt	(_PWM+26)& (0+255),b
  5305  0033C4  D002               	goto	l444
  5306  0033C6  C076  F059         	movff	_PWM+26,_rgl+7
  5307  0033CA                     l444:
  5308                           ;rgl.c: 1534: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.
      +                          srp;
  5309  0033CA  C059  FFE8         	movff	_rgl+7,wreg
  5310  0033CE  0100               	movlb	(_rgl+8) shr (0+8)
  5311  0033D0  615A               	cpfslt	(_rgl+8)& (0+255),b
  5312  0033D2  0012               	return	
  5313  0033D4  C059  F05A         	movff	_rgl+7,_rgl+8
  5314                           ;rgl.c: 1535: return;
  5315  0033D8  0012               	return	
  5316                           ;rgl.c: 1537: else return;
  5317  0033DA                     l429:
  5318                           ;rgl.c: 1539: else
  5319  0033DA  0E01               	movlw	1
  5320  0033DC  ECCB  F020         	call	_Tnizsza
  5321  0033E0  A0D8               	btfss	status,0,c
  5322  0033E2  0012               	return	
  5323                           ;rgl.c: 1542: {
  5324  0033E4  0E00               	movlw	0
  5325  0033E6  EC9C  F020         	call	_Trosnie
  5326  0033EA  B0D8               	btfsc	status,0,c
  5327  0033EC  0012               	return	
  5328                           ;rgl.c: 1544: {
  5329  0033EE  0E01               	movlw	1
  5330  0033F0  6ED9               	movwf	fsr2l,c
  5331                           ;rgl.c: 1546: if(PWM.MMAXCW>PWM.MGMOD)
  5332  0033F2  C076  FFE8         	movff	_PWM+26,wreg
  5333  0033F6  0100               	movlb	(_PWM+6) shr (0+8)
  5334  0033F8  6162               	cpfslt	(_PWM+6)& (0+255),b
  5335  0033FA  D017               	goto	l450
  5336                           ;rgl.c: 1547: {
  5337  0033FC  0E01               	movlw	1
  5338  0033FE  C059  F002         	movff	_rgl+7,btemp+2
  5339  003402  6A03               	clrf	btemp+3,c
  5340  003404  2602               	addwf	btemp+2,f,c
  5341  003406  0E00               	movlw	0
  5342  003408  2203               	addwfc	btemp+3,f,c
  5343  00340A  C062  F000         	movff	_PWM+6,btemp
  5344  00340E  6A01               	clrf	btemp+1,c
  5345  003410  5001               	movf	btemp+1,w,c
  5346  003412  0A80               	xorlw	128
  5347  003414  6E04               	movwf	btemp+4,c
  5348  003416  5003               	movf	btemp+3,w,c
  5349  003418  0A80               	xorlw	128
  5350  00341A  5C04               	subwf	btemp+4,w,c
  5351  00341C  E102               	bnz	u4055
  5352  00341E  5002               	movf	btemp+2,w,c
  5353  003420  5C00               	subwf	btemp,w,c
  5354  003422                     u4055:
  5355  003422  E21A               	bc	l454
  5356  003424  C062  F059         	movff	_PWM+6,_rgl+7
  5357  003428  D019               	goto	l453
  5358                           ;rgl.c: 1549: else rgl.srp+=k;
  5359                           ;rgl.c: 1550: }
  5360  00342A                     l450:
  5361                           ;rgl.c: 1551: else
  5362  00342A  0E01               	movlw	1
  5363  00342C  C059  F002         	movff	_rgl+7,btemp+2
  5364  003430  6A03               	clrf	btemp+3,c
  5365  003432  2602               	addwf	btemp+2,f,c
  5366  003434  0E00               	movlw	0
  5367  003436  2203               	addwfc	btemp+3,f,c
  5368  003438  C076  F000         	movff	_PWM+26,btemp
  5369  00343C  6A01               	clrf	btemp+1,c
  5370  00343E  5001               	movf	btemp+1,w,c
  5371  003440  0A80               	xorlw	128
  5372  003442  6E04               	movwf	btemp+4,c
  5373  003444  5003               	movf	btemp+3,w,c
  5374  003446  0A80               	xorlw	128
  5375  003448  5C04               	subwf	btemp+4,w,c
  5376  00344A  E102               	bnz	u4065
  5377  00344C  5002               	movf	btemp+2,w,c
  5378  00344E  5C00               	subwf	btemp,w,c
  5379  003450                     u4065:
  5380  003450  E203               	bc	l454
  5381  003452  C076  F059         	movff	_PWM+26,_rgl+7
  5382  003456  D002               	goto	l453
  5383  003458                     l454:
  5384                           ;rgl.c: 1554: else rgl.srp+=k;
  5385  003458  0100               	movlb	(_rgl+7) shr (0+8)
  5386  00345A  2B59               	incf	(_rgl+7)& (0+255),f,b
  5387  00345C                     l453:
  5388                           ;rgl.c: 1555: }
  5389  00345C  C059  FFE8         	movff	_rgl+7,wreg
  5390  003460  0100               	movlb	(_rgl+8) shr (0+8)
  5391  003462  615A               	cpfslt	(_rgl+8)& (0+255),b
  5392  003464  0012               	return	
  5393  003466  C059  F05A         	movff	_rgl+7,_rgl+8
  5394                           ;rgl.c: 1557: return;
  5395  00346A  0012               	return	
  5396                           ;rgl.c: 1559: else return;
  5397  00346C                     l428:
  5398                           ;rgl.c: 1563: else
  5399  00346C  0E00               	movlw	0
  5400  00346E  ECA9  F020         	call	_Tmaleje
  5401  003472  E34A               	bnc	l460
  5402                           ;rgl.c: 1566: {
  5403  003474  0E01               	movlw	1
  5404  003476  0100               	movlb	__Lparam shr (0+8)
  5405  003478  6FF1               	movwf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),b
  5406                           ;rgl.c: 1568: if(Tnizsza(1)) k=3;
  5407  00347A  ECCB  F020         	call	_Tnizsza
  5408  00347E  E303               	bnc	l461
  5409  003480  0E03               	movlw	3
  5410  003482  0100               	movlb	__Lparam shr (0+8)
  5411  003484  6FF1               	movwf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),b
  5412  003486                     l461:
  5413                           ;rgl.c: 1570: if(PWM.MMAXCW>PWM.MGMOD)
  5414  003486  C076  FFE8         	movff	_PWM+26,wreg
  5415  00348A  0100               	movlb	(_PWM+6) shr (0+8)
  5416  00348C  6162               	cpfslt	(_PWM+6)& (0+255),b
  5417  00348E  D018               	goto	l462
  5418                           ;rgl.c: 1571: {
  5419  003490  0100               	movlb	__Lparam shr (0+8)
  5420  003492  51F1               	movf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),w
  5421  003494  C059  F002         	movff	_rgl+7,btemp+2
  5422  003498  6A03               	clrf	btemp+3,c
  5423  00349A  2602               	addwf	btemp+2,f,c
  5424  00349C  0E00               	movlw	0
  5425  00349E  2203               	addwfc	btemp+3,f,c
  5426  0034A0  C062  F000         	movff	_PWM+6,btemp
  5427  0034A4  6A01               	clrf	btemp+1,c
  5428  0034A6  5001               	movf	btemp+1,w,c
  5429  0034A8  0A80               	xorlw	128
  5430  0034AA  6E04               	movwf	btemp+4,c
  5431  0034AC  5003               	movf	btemp+3,w,c
  5432  0034AE  0A80               	xorlw	128
  5433  0034B0  5C04               	subwf	btemp+4,w,c
  5434  0034B2  E102               	bnz	u4115
  5435  0034B4  5002               	movf	btemp+2,w,c
  5436  0034B6  5C00               	subwf	btemp,w,c
  5437  0034B8                     u4115:
  5438  0034B8  E21B               	bc	l466
  5439  0034BA  C062  F059         	movff	_PWM+6,_rgl+7
  5440  0034BE  D01C               	goto	l465
  5441                           ;rgl.c: 1573: else rgl.srp+=k;
  5442                           ;rgl.c: 1574: }
  5443  0034C0                     l462:
  5444                           ;rgl.c: 1575: else
  5445  0034C0  0100               	movlb	__Lparam shr (0+8)
  5446  0034C2  51F1               	movf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),w
  5447  0034C4  C059  F002         	movff	_rgl+7,btemp+2
  5448  0034C8  6A03               	clrf	btemp+3,c
  5449  0034CA  2602               	addwf	btemp+2,f,c
  5450  0034CC  0E00               	movlw	0
  5451  0034CE  2203               	addwfc	btemp+3,f,c
  5452  0034D0  C076  F000         	movff	_PWM+26,btemp
  5453  0034D4  6A01               	clrf	btemp+1,c
  5454  0034D6  5001               	movf	btemp+1,w,c
  5455  0034D8  0A80               	xorlw	128
  5456  0034DA  6E04               	movwf	btemp+4,c
  5457  0034DC  5003               	movf	btemp+3,w,c
  5458  0034DE  0A80               	xorlw	128
  5459  0034E0  5C04               	subwf	btemp+4,w,c
  5460  0034E2  E102               	bnz	u4125
  5461  0034E4  5002               	movf	btemp+2,w,c
  5462  0034E6  5C00               	subwf	btemp,w,c
  5463  0034E8                     u4125:
  5464  0034E8  E203               	bc	l466
  5465  0034EA  C076  F059         	movff	_PWM+26,_rgl+7
  5466  0034EE  D004               	goto	l465
  5467  0034F0                     l466:
  5468                           ;rgl.c: 1578: else rgl.srp+=k;
  5469  0034F0  0100               	movlb	__Lparam shr (0+8)
  5470  0034F2  51F1               	movf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),w
  5471  0034F4  0100               	movlb	(_rgl+7) shr (0+8)
  5472  0034F6  2759               	addwf	(_rgl+7)& (0+255),f,b
  5473  0034F8                     l465:
  5474                           ;rgl.c: 1579: }
  5475  0034F8  C059  FFE8         	movff	_rgl+7,wreg
  5476  0034FC  0100               	movlb	(_rgl+8) shr (0+8)
  5477  0034FE  615A               	cpfslt	(_rgl+8)& (0+255),b
  5478  003500  0012               	return	
  5479  003502  C059  F05A         	movff	_rgl+7,_rgl+8
  5480                           ;rgl.c: 1581: return;
  5481  003506  0012               	return	
  5482  003508                     l460:
  5483                           ;rgl.c: 1583: else
  5484  003508  0E00               	movlw	0
  5485  00350A  EC9C  F020         	call	_Trosnie
  5486  00350E  A0D8               	btfss	status,0,c
  5487  003510  0012               	return	
  5488                           ;rgl.c: 1585: {
  5489  003512  0E01               	movlw	1
  5490  003514  0100               	movlb	__Lparam shr (0+8)
  5491  003516  6FF1               	movwf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),b
  5492                           ;rgl.c: 1587: if(Twyzsza(1)) k=3;
  5493  003518  ECD8  F020         	call	_Twyzsza
  5494  00351C  E303               	bnc	l471
  5495  00351E  0E03               	movlw	3
  5496  003520  0100               	movlb	__Lparam shr (0+8)
  5497  003522  6FF1               	movwf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),b
  5498  003524                     l471:
  5499                           ;rgl.c: 1589: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PW
      +                          M.MDMOD;
  5500  003524  C061  F000         	movff	_PWM+5,btemp
  5501  003528  6A01               	clrf	btemp+1,c
  5502  00352A  0100               	movlb	__Lparam shr (0+8)
  5503  00352C  51F1               	movf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),w
  5504  00352E  C059  F002         	movff	_rgl+7,btemp+2
  5505  003532  6A03               	clrf	btemp+3,c
  5506  003534  5E02               	subwf	btemp+2,f,c
  5507  003536  0E00               	movlw	0
  5508  003538  5A03               	subwfb	btemp+3,f,c
  5509  00353A  5003               	movf	btemp+3,w,c
  5510  00353C  0A80               	xorlw	128
  5511  00353E  6E04               	movwf	btemp+4,c
  5512  003540  5001               	movf	btemp+1,w,c
  5513  003542  0A80               	xorlw	128
  5514  003544  5C04               	subwf	btemp+4,w,c
  5515  003546  E102               	bnz	u4165
  5516  003548  5000               	movf	btemp,w,c
  5517  00354A  5C02               	subwf	btemp+2,w,c
  5518  00354C                     u4165:
  5519  00354C  E203               	bc	l472
  5520  00354E  C061  F059         	movff	_PWM+5,_rgl+7
  5521  003552  D004               	goto	l473
  5522  003554                     l472:
  5523                           ;rgl.c: 1590: else rgl.srp-=k;
  5524  003554  0100               	movlb	__Lparam shr (0+8)
  5525  003556  51F1               	movf	(?a_ModPruCW5+1)^(__Lparam& (0+65280)),w
  5526  003558  0100               	movlb	(_rgl+7) shr (0+8)
  5527  00355A  5F59               	subwf	(_rgl+7)& (0+255),f,b
  5528  00355C                     l473:
  5529                           ;rgl.c: 1591: if(rgl.srp>PWM.MMAXCW) rgl.srp=PWM
      +                          .MMAXCW;
  5530  00355C  C059  FFE8         	movff	_rgl+7,wreg
  5531  003560  0100               	movlb	(_PWM+26) shr (0+8)
  5532  003562  6176               	cpfslt	(_PWM+26)& (0+255),b
  5533  003564  D002               	goto	l474
  5534  003566  C076  F059         	movff	_PWM+26,_rgl+7
  5535  00356A                     l474:
  5536                           ;rgl.c: 1592: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.
      +                          srp;
  5537  00356A  C059  FFE8         	movff	_rgl+7,wreg
  5538  00356E  0100               	movlb	(_rgl+8) shr (0+8)
  5539  003570  615A               	cpfslt	(_rgl+8)& (0+255),b
  5540  003572  0012               	return	
  5541  003574  C059  F05A         	movff	_rgl+7,_rgl+8
  5542                           ;rgl.c: 1593: return;
  5543  003578  0012               	return	
  5544                           ;rgl.c: 1594: }
  5545  00357A                     __end_of_ModPruCW5:
  5546                           ;rgl.c: 1601: void IncMaxCW5(void)
  5547                           ;rgl.c: 1602: {
  5548  00357A                     _IncMaxCW5:
  5549  000000                     
  5550                           ;rgl.c: 1603: unsigned char k;
  5551  00357A  0E04               	movlw	4
  5552  00357C  ECD8  F020         	call	_Twyzsza
  5553  003580  E302               	bnc	l477
  5554  003582  0100               	movlb	(_rgl+1) shr (0+8)
  5555  003584  8153               	bsf	(_rgl+1)& (0+255),0,b
  5556  003586                     l477:
  5557                           ;rgl.c: 1607: if(!Twyzsza(0)) rgl.inv_mod=0;
  5558  003586  0E00               	movlw	0
  5559  003588  ECD8  F020         	call	_Twyzsza
  5560  00358C  0100               	movlb	(_rgl+1) shr (0+8)
  5561  00358E  E201               	bc	L39
  5562  003590  9153               	bcf	(_rgl+1)& (0+255),0,b
  5563                           ;rgl.c: 1609: if(rgl.inv_mod)
  5564  003592                     L39:
  5565  003592  A153               	btfss	(_rgl+1)& (0+255),0,b
  5566  003594  D015               	goto	l479
  5567                           ;rgl.c: 1610: {
  5568  003596  0E03               	movlw	3
  5569  003598  EC16  F045         	call	_StartRTdS
  5570                           ;rgl.c: 1612: rgl.fz=0;
  5571  00359C  0100               	movlb	_rgl shr (0+8)
  5572  00359E  9552               	bcf	_rgl& (0+255),2,b
  5573                           ;rgl.c: 1613: rgl.srp=0;
  5574  0035A0  6B59               	clrf	(_rgl+7)& (0+255),b
  5575                           ;rgl.c: 1614: rgl.ytmp=0;
  5576  0035A2  6B58               	clrf	(_rgl+6)& (0+255),b
  5577                           ;rgl.c: 1615: rgl.del1s=0;
  5578  0035A4  9D52               	bcf	_rgl& (0+255),6,b
  5579                           ;rgl.c: 1616: DtCO.dDCO=0;
  5580  0035A6  0101               	movlb	(_DtCO+9) shr (0+8)
  5581  0035A8  6B46               	clrf	(_DtCO+9)& (0+255),b
  5582                           ;rgl.c: 1617: DtCW.dDCW=0;
  5583  0035AA  0101               	movlb	(_DtCW+8) shr (0+8)
  5584  0035AC  6B54               	clrf	(_DtCW+8)& (0+255),b
  5585                           ;rgl.c: 1618: DtCO.indCO=0;
  5586  0035AE  0101               	movlb	(_DtCO+10) shr (0+8)
  5587  0035B0  6B47               	clrf	(_DtCO+10)& (0+255),b
  5588                           ;rgl.c: 1619: DtCW.indCW=0;
  5589  0035B2  0101               	movlb	(_DtCW+10) shr (0+8)
  5590  0035B4  6B56               	clrf	(_DtCW+10)& (0+255),b
  5591                           ;rgl.c: 1620: rgl.tmp_pwm=PWM.MDMOD;
  5592  0035B6  C061  F05B         	movff	_PWM+5,_rgl+9
  5593                           ;rgl.c: 1621: rgl.xmod=PWM.MDMOD;
  5594  0035BA  C061  F05A         	movff	_PWM+5,_rgl+8
  5595                           ;rgl.c: 1622: return;
  5596  0035BE  0012               	return	
  5597  0035C0                     l479:
  5598                           ;rgl.c: 1623: }
  5599  0035C0  0100               	movlb	_rgl shr (0+8)
  5600  0035C2  A552               	btfss	_rgl& (0+255),2,b
  5601  0035C4  D014               	goto	l480
  5602                           ;rgl.c: 1626: {
  5603  0035C6  C076  FFE8         	movff	_PWM+26,wreg
  5604  0035CA  0100               	movlb	(_PWM+6) shr (0+8)
  5605  0035CC  6162               	cpfslt	(_PWM+6)& (0+255),b
  5606  0035CE  D007               	goto	l481
  5607                           ;rgl.c: 1628: {
  5608  0035D0  C05A  FFE8         	movff	_rgl+8,wreg
  5609  0035D4  6162               	cpfslt	(_PWM+6)& (0+255),b
  5610  0035D6  0012               	return	
  5611  0035D8  C062  F05A         	movff	_PWM+6,_rgl+8
  5612                           ;rgl.c: 1630: }
  5613  0035DC  0012               	return	
  5614  0035DE                     l481:
  5615                           ;rgl.c: 1631: else
  5616  0035DE  C05A  FFE8         	movff	_rgl+8,wreg
  5617  0035E2  0100               	movlb	(_PWM+26) shr (0+8)
  5618  0035E4  6176               	cpfslt	(_PWM+26)& (0+255),b
  5619  0035E6  0012               	return	
  5620  0035E8  C076  F05A         	movff	_PWM+26,_rgl+8
  5621                           ;rgl.c: 1634: }
  5622  0035EC  0012               	return	
  5623  0035EE                     l480:
  5624                           ;rgl.c: 1636: }
  5625  0035EE  0E02               	movlw	2
  5626  0035F0  EC9C  F020         	call	_Trosnie
  5627  0035F4  E33D               	bnc	l485
  5628  0035F6  0100               	movlb	_rgl shr (0+8)
  5629  0035F8  B752               	btfsc	_rgl& (0+255),3,b
  5630  0035FA  D03A               	goto	l485
  5631                           ;rgl.c: 1640: {
  5632  0035FC  0100               	movlb	_rgl shr (0+8)
  5633  0035FE  8752               	bsf	_rgl& (0+255),3,b
  5634                           ;rgl.c: 1642: k=5;
  5635  003600  0E05               	movlw	5
  5636  003602  6ED9               	movwf	fsr2l,c
  5637                           ;rgl.c: 1643: if(PWM.MMAXCW>PWM.MGMOD)
  5638  003604  C076  FFE8         	movff	_PWM+26,wreg
  5639  003608  0100               	movlb	(_PWM+6) shr (0+8)
  5640  00360A  6162               	cpfslt	(_PWM+6)& (0+255),b
  5641  00360C  D017               	goto	l486
  5642                           ;rgl.c: 1644: {
  5643  00360E  0E05               	movlw	5
  5644  003610  C059  F002         	movff	_rgl+7,btemp+2
  5645  003614  6A03               	clrf	btemp+3,c
  5646  003616  2602               	addwf	btemp+2,f,c
  5647  003618  0E00               	movlw	0
  5648  00361A  2203               	addwfc	btemp+3,f,c
  5649  00361C  C062  F000         	movff	_PWM+6,btemp
  5650  003620  6A01               	clrf	btemp+1,c
  5651  003622  5001               	movf	btemp+1,w,c
  5652  003624  0A80               	xorlw	128
  5653  003626  6E04               	movwf	btemp+4,c
  5654  003628  5003               	movf	btemp+3,w,c
  5655  00362A  0A80               	xorlw	128
  5656  00362C  5C04               	subwf	btemp+4,w,c
  5657  00362E  E102               	bnz	u4305
  5658  003630  5002               	movf	btemp+2,w,c
  5659  003632  5C00               	subwf	btemp,w,c
  5660  003634                     u4305:
  5661  003634  E21A               	bc	l490
  5662  003636  C062  F059         	movff	_PWM+6,_rgl+7
  5663  00363A  D01A               	goto	l485
  5664                           ;rgl.c: 1646: else rgl.srp+=k;
  5665                           ;rgl.c: 1647: }
  5666  00363C                     l486:
  5667                           ;rgl.c: 1648: else
  5668  00363C  0E05               	movlw	5
  5669  00363E  C059  F002         	movff	_rgl+7,btemp+2
  5670  003642  6A03               	clrf	btemp+3,c
  5671  003644  2602               	addwf	btemp+2,f,c
  5672  003646  0E00               	movlw	0
  5673  003648  2203               	addwfc	btemp+3,f,c
  5674  00364A  C076  F000         	movff	_PWM+26,btemp
  5675  00364E  6A01               	clrf	btemp+1,c
  5676  003650  5001               	movf	btemp+1,w,c
  5677  003652  0A80               	xorlw	128
  5678  003654  6E04               	movwf	btemp+4,c
  5679  003656  5003               	movf	btemp+3,w,c
  5680  003658  0A80               	xorlw	128
  5681  00365A  5C04               	subwf	btemp+4,w,c
  5682  00365C  E102               	bnz	u4315
  5683  00365E  5002               	movf	btemp+2,w,c
  5684  003660  5C00               	subwf	btemp,w,c
  5685  003662                     u4315:
  5686  003662  E203               	bc	l490
  5687  003664  C076  F059         	movff	_PWM+26,_rgl+7
  5688  003668  D003               	goto	l485
  5689  00366A                     l490:
  5690                           ;rgl.c: 1651: else rgl.srp+=k;
  5691  00366A  0100               	movlb	(_rgl+7) shr (0+8)
  5692  00366C  0E05               	movlw	5
  5693  00366E  2759               	addwf	(_rgl+7)& (0+255),f,b
  5694  003670                     l485:
  5695                           ;rgl.c: 1652: }
  5696  003670  0E03               	movlw	3
  5697  003672  EC9C  F020         	call	_Trosnie
  5698  003676  E33D               	bnc	l492
  5699  003678  0100               	movlb	_rgl shr (0+8)
  5700  00367A  B952               	btfsc	_rgl& (0+255),4,b
  5701  00367C  D03A               	goto	l492
  5702                           ;rgl.c: 1655: {
  5703  00367E  0100               	movlb	_rgl shr (0+8)
  5704  003680  8952               	bsf	_rgl& (0+255),4,b
  5705                           ;rgl.c: 1657: k=8;
  5706  003682  0E08               	movlw	8
  5707  003684  6ED9               	movwf	fsr2l,c
  5708                           ;rgl.c: 1658: if(PWM.MMAXCW>PWM.MGMOD)
  5709  003686  C076  FFE8         	movff	_PWM+26,wreg
  5710  00368A  0100               	movlb	(_PWM+6) shr (0+8)
  5711  00368C  6162               	cpfslt	(_PWM+6)& (0+255),b
  5712  00368E  D017               	goto	l493
  5713                           ;rgl.c: 1659: {
  5714  003690  0E08               	movlw	8
  5715  003692  C059  F002         	movff	_rgl+7,btemp+2
  5716  003696  6A03               	clrf	btemp+3,c
  5717  003698  2602               	addwf	btemp+2,f,c
  5718  00369A  0E00               	movlw	0
  5719  00369C  2203               	addwfc	btemp+3,f,c
  5720  00369E  C062  F000         	movff	_PWM+6,btemp
  5721  0036A2  6A01               	clrf	btemp+1,c
  5722  0036A4  5001               	movf	btemp+1,w,c
  5723  0036A6  0A80               	xorlw	128
  5724  0036A8  6E04               	movwf	btemp+4,c
  5725  0036AA  5003               	movf	btemp+3,w,c
  5726  0036AC  0A80               	xorlw	128
  5727  0036AE  5C04               	subwf	btemp+4,w,c
  5728  0036B0  E102               	bnz	u4365
  5729  0036B2  5002               	movf	btemp+2,w,c
  5730  0036B4  5C00               	subwf	btemp,w,c
  5731  0036B6                     u4365:
  5732  0036B6  E21A               	bc	l497
  5733  0036B8  C062  F059         	movff	_PWM+6,_rgl+7
  5734  0036BC  D01A               	goto	l492
  5735                           ;rgl.c: 1661: else rgl.srp+=k;
  5736                           ;rgl.c: 1662: }
  5737  0036BE                     l493:
  5738                           ;rgl.c: 1663: else
  5739  0036BE  0E08               	movlw	8
  5740  0036C0  C059  F002         	movff	_rgl+7,btemp+2
  5741  0036C4  6A03               	clrf	btemp+3,c
  5742  0036C6  2602               	addwf	btemp+2,f,c
  5743  0036C8  0E00               	movlw	0
  5744  0036CA  2203               	addwfc	btemp+3,f,c
  5745  0036CC  C076  F000         	movff	_PWM+26,btemp
  5746  0036D0  6A01               	clrf	btemp+1,c
  5747  0036D2  5001               	movf	btemp+1,w,c
  5748  0036D4  0A80               	xorlw	128
  5749  0036D6  6E04               	movwf	btemp+4,c
  5750  0036D8  5003               	movf	btemp+3,w,c
  5751  0036DA  0A80               	xorlw	128
  5752  0036DC  5C04               	subwf	btemp+4,w,c
  5753  0036DE  E102               	bnz	u4375
  5754  0036E0  5002               	movf	btemp+2,w,c
  5755  0036E2  5C00               	subwf	btemp,w,c
  5756  0036E4                     u4375:
  5757  0036E4  E203               	bc	l497
  5758  0036E6  C076  F059         	movff	_PWM+26,_rgl+7
  5759  0036EA  D003               	goto	l492
  5760  0036EC                     l497:
  5761                           ;rgl.c: 1666: else rgl.srp+=k;
  5762  0036EC  0100               	movlb	(_rgl+7) shr (0+8)
  5763  0036EE  0E08               	movlw	8
  5764  0036F0  2759               	addwf	(_rgl+7)& (0+255),f,b
  5765  0036F2                     l492:
  5766                           ;rgl.c: 1667: }
  5767  0036F2  0E01               	movlw	1
  5768  0036F4  EC9C  F020         	call	_Trosnie
  5769  0036F8  B0D8               	btfsc	status,0,c
  5770  0036FA  0012               	return	
  5771                           ;rgl.c: 1671: k=5;
  5772  0036FC  0E05               	movlw	5
  5773  0036FE  6ED9               	movwf	fsr2l,c
  5774                           ;rgl.c: 1672: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
  5775  003700  C05A  F000         	movff	_rgl+8,btemp
  5776  003704  6A01               	clrf	btemp+1,c
  5777  003706  2600               	addwf	btemp,f,c
  5778  003708  0E00               	movlw	0
  5779  00370A  2201               	addwfc	btemp+1,f,c
  5780  00370C  5001               	movf	btemp+1,w,c
  5781  00370E  0A80               	xorlw	128
  5782  003710  0F80               	addlw	-128
  5783  003712  0EF1               	movlw	241
  5784  003714  B4D8               	btfsc	status,2,c
  5785  003716  5C00               	subwf	btemp,w,c
  5786  003718  E304               	bnc	l500
  5787  00371A  0EF0               	movlw	-16
  5788  00371C  CFE8 F05A          	movff	wreg,_rgl+8
  5789  003720  D003               	goto	l501
  5790  003722                     l500:
  5791                           ;rgl.c: 1673: else rgl.xmod+=k;
  5792  003722  0100               	movlb	(_rgl+8) shr (0+8)
  5793  003724  0E05               	movlw	5
  5794  003726  275A               	addwf	(_rgl+8)& (0+255),f,b
  5795  003728                     l501:
  5796                           ;rgl.c: 1674: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=P
      +                          WM.MMAXCW;
  5797  003728  C05A  FFE8         	movff	_rgl+8,wreg
  5798  00372C  0100               	movlb	(_PWM+26) shr (0+8)
  5799  00372E  6176               	cpfslt	(_PWM+26)& (0+255),b
  5800  003730  0012               	return	
  5801  003732  C076  F05A         	movff	_PWM+26,_rgl+8
  5802                           ;rgl.c: 1675: }
  5803  003736  0012               	return	
  5804  003738                     __end_of_IncMaxCW5:
  5805                           ;rgl.c: 1678: void ModPrzCW5(void)
  5806                           ;rgl.c: 1679: {
  5807  003738                     _ModPrzCW5:
  5808  000000                     
  5809                           ;rgl.c: 1680: if(!rgl.nmod)
  5810  003738  0100               	movlb	_rgl shr (0+8)
  5811  00373A  BB52               	btfsc	_rgl& (0+255),5,b
  5812  00373C  D011               	goto	l504
  5813                           ;rgl.c: 1681: {
  5814  00373E  A552               	btfss	_rgl& (0+255),2,b
  5815  003740  0012               	return	
  5816                           ;rgl.c: 1683: {
  5817  003742  0E00               	movlw	0
  5818  003744  ECA9  F020         	call	_Tmaleje
  5819  003748  B0D8               	btfsc	status,0,c
  5820  00374A  0012               	return	
  5821                           ;rgl.c: 1685: {
  5822  00374C  0E04               	movlw	4
  5823  00374E  ECD8  F020         	call	_Twyzsza
  5824  003752  A0D8               	btfss	status,0,c
  5825  003754  0012               	return	
  5826                           ;rgl.c: 1687: {
  5827  003756  0100               	movlb	_rgl shr (0+8)
  5828  003758  8B52               	bsf	_rgl& (0+255),5,b
  5829                           ;rgl.c: 1689: PWM.BufPWM=PWM.MDMOD;
  5830  00375A  C061  F05D         	movff	_PWM+5,_PWM+1
  5831                           ;rgl.c: 1690: return;
  5832  00375E  0012               	return	
  5833                           ;rgl.c: 1692: else return;
  5834                           ;rgl.c: 1694: else return;
  5835                           ;rgl.c: 1696: else return;
  5836  003760                     l504:
  5837                           ;rgl.c: 1698: else
  5838  003760  0E00               	movlw	0
  5839  003762  ECA9  F020         	call	_Tmaleje
  5840  003766  A0D8               	btfss	status,0,c
  5841  003768  0012               	return	
  5842                           ;rgl.c: 1701: rgl.nmod=0;
  5843  00376A  0100               	movlb	_rgl shr (0+8)
  5844  00376C  9B52               	bcf	_rgl& (0+255),5,b
  5845                           ;rgl.c: 1702: }
  5846  00376E  0012               	return	
  5847  003770                     __end_of_ModPrzCW5:
  5848                           ;rgl.c: 1711: void StartCO2(void)
  5849                           ;rgl.c: 1712: {
  5850  003770                     _StartCO2:
  5851  000000                     
  5852                           ;rgl.c: 1713: unsigned char k;
  5853  003770  0100               	movlb	_rgl shr (0+8)
  5854  003772  A152               	btfss	_rgl& (0+255),0,b
  5855  003774  B352               	btfsc	_rgl& (0+255),1,b
  5856  003776  0012               	return	
  5857                           ;rgl.c: 1716: StartRTdS(3);
  5858  003778  0E03               	movlw	3
  5859  00377A  EC16  F045         	call	_StartRTdS
  5860                           ;rgl.c: 1717: DtCO.dDCO=0;
  5861  00377E  0101               	movlb	(_DtCO+9) shr (0+8)
  5862  003780  6B46               	clrf	(_DtCO+9)& (0+255),b
  5863                           ;rgl.c: 1718: DtCO.indCO=0;
  5864  003782  0101               	movlb	(_DtCO+10) shr (0+8)
  5865  003784  6B47               	clrf	(_DtCO+10)& (0+255),b
  5866                           ;rgl.c: 1719: DtCW.dDCW=0;
  5867  003786  0101               	movlb	(_DtCW+8) shr (0+8)
  5868  003788  6B54               	clrf	(_DtCW+8)& (0+255),b
  5869                           ;rgl.c: 1720: DtCW.indCW=0;
  5870  00378A  0101               	movlb	(_DtCW+10) shr (0+8)
  5871  00378C  6B56               	clrf	(_DtCW+10)& (0+255),b
  5872                           ;rgl.c: 1721: rgl.fz=0;
  5873  00378E  0100               	movlb	_rgl shr (0+8)
  5874  003790  9552               	bcf	_rgl& (0+255),2,b
  5875                           ;rgl.c: 1722: rgl.med_up=0;
  5876  003792  9752               	bcf	_rgl& (0+255),3,b
  5877                           ;rgl.c: 1723: rgl.fast_up=0;
  5878  003794  9952               	bcf	_rgl& (0+255),4,b
  5879                           ;rgl.c: 1727: if(PWM.MMAXCO>PWM.FIRSTPB)
  5880  003796  C075  FFE8         	movff	_PWM+25,wreg
  5881  00379A  0100               	movlb	(_PWM+20) shr (0+8)
  5882  00379C  6170               	cpfslt	(_PWM+20)& (0+255),b
  5883  00379E  D003               	goto	l515
  5884                           ;rgl.c: 1728: {
  5885  0037A0  C070  F05A         	movff	_PWM+20,_rgl+8
  5886                           ;rgl.c: 1730: }
  5887  0037A4  D002               	goto	l516
  5888  0037A6                     l515:
  5889                           ;rgl.c: 1731: else
  5890  0037A6  C075  F05A         	movff	_PWM+25,_rgl+8
  5891  0037AA                     l516:
  5892                           ;rgl.c: 1734: }
  5893  0037AA  0100               	movlb	(_rgl+7) shr (0+8)
  5894  0037AC  6B59               	clrf	(_rgl+7)& (0+255),b
  5895                           ;rgl.c: 1760: rgl.ytmp=0;
  5896  0037AE  6B58               	clrf	(_rgl+6)& (0+255),b
  5897                           ;rgl.c: 1761: rgl.nmod=0;
  5898  0037B0  9B52               	bcf	_rgl& (0+255),5,b
  5899                           ;rgl.c: 1762: rgl.del1s=0;
  5900  0037B2  9D52               	bcf	_rgl& (0+255),6,b
  5901                           ;rgl.c: 1763: rgl.deln1=0;
  5902  0037B4  9F52               	bcf	_rgl& (0+255),7,b
  5903                           ;rgl.c: 1764: rgl.inv_mod=0;
  5904  0037B6  9153               	bcf	(_rgl+1)& (0+255),0,b
  5905                           ;rgl.c: 1765: }
  5906  0037B8  0012               	return	
  5907  0037BA                     __end_of_StartCO2:
  5908                           ;rgl.c: 1768: void StartMCW2(void)
  5909                           ;rgl.c: 1769: {
  5910  0037BA                     _StartMCW2:
  5911  000000                     
  5912                           ;rgl.c: 1770: if(rgl.btco||rgl.btcw) return;
  5913  0037BA  0100               	movlb	_rgl shr (0+8)
  5914  0037BC  A152               	btfss	_rgl& (0+255),0,b
  5915  0037BE  B352               	btfsc	_rgl& (0+255),1,b
  5916  0037C0  0012               	return	
  5917                           ;rgl.c: 1771: StartRTdS(3);
  5918  0037C2  0E03               	movlw	3
  5919  0037C4  EC16  F045         	call	_StartRTdS
  5920                           ;rgl.c: 1772: DtCO.dDCO=0;
  5921  0037C8  0101               	movlb	(_DtCO+9) shr (0+8)
  5922  0037CA  6B46               	clrf	(_DtCO+9)& (0+255),b
  5923                           ;rgl.c: 1773: DtCW.dDCW=0;
  5924  0037CC  0101               	movlb	(_DtCW+8) shr (0+8)
  5925  0037CE  6B54               	clrf	(_DtCW+8)& (0+255),b
  5926                           ;rgl.c: 1774: DtCO.indCO=0;
  5927  0037D0  0101               	movlb	(_DtCO+10) shr (0+8)
  5928  0037D2  6B47               	clrf	(_DtCO+10)& (0+255),b
  5929                           ;rgl.c: 1775: DtCW.indCW=0;
  5930  0037D4  0101               	movlb	(_DtCW+10) shr (0+8)
  5931  0037D6  6B56               	clrf	(_DtCW+10)& (0+255),b
  5932                           ;rgl.c: 1776: rgl.fz=0;
  5933  0037D8  0100               	movlb	_rgl shr (0+8)
  5934  0037DA  9552               	bcf	_rgl& (0+255),2,b
  5935                           ;rgl.c: 1777: FirstPCW2();
  5936  0037DC  D805               	call	_FirstPCW2	;wreg free
  5937                           ;rgl.c: 1778: rgl.srp=0;
  5938  0037DE  0100               	movlb	(_rgl+7) shr (0+8)
  5939  0037E0  6B59               	clrf	(_rgl+7)& (0+255),b
  5940                           ;rgl.c: 1779: rgl.ytmp=0;
  5941  0037E2  6B58               	clrf	(_rgl+6)& (0+255),b
  5942                           ;rgl.c: 1780: rgl.del1s=0;
  5943  0037E4  9D52               	bcf	_rgl& (0+255),6,b
  5944                           ;rgl.c: 1781: }
  5945  0037E6  0012               	return	
  5946  0037E8                     __end_of_StartMCW2:
  5947                           ;rgl.c: 1784: void FirstPCW2(void)
  5948                           ;rgl.c: 1785: {
  5949  0037E8                     _FirstPCW2:
  5950  000000                     
  5951                           ;rgl.c: 1786: if(PWM.MMAXCW>PWM.MGMOD)
  5952  0037E8  C076  FFE8         	movff	_PWM+26,wreg
  5953  0037EC  0100               	movlb	(_PWM+6) shr (0+8)
  5954  0037EE  6162               	cpfslt	(_PWM+6)& (0+255),b
  5955  0037F0  D00B               	goto	l520
  5956                           ;rgl.c: 1787: {
  5957  0037F2  C153  FFE8         	movff	_DtCW+7,wreg
  5958  0037F6  0A80               	xorlw	128
  5959  0037F8  0F7F               	addlw	-129
  5960  0037FA  E303               	bnc	l521
  5961  0037FC  C062  F05A         	movff	_PWM+6,_rgl+8
  5962  003800  0012               	return	
  5963  003802                     l521:
  5964                           ;rgl.c: 1789: else rgl.xmod=PWM.FIRSTPB;
  5965  003802  C070  F05A         	movff	_PWM+20,_rgl+8
  5966                           ;rgl.c: 1790: }
  5967  003806  0012               	return	
  5968  003808                     l520:
  5969                           ;rgl.c: 1791: else
  5970  003808  C153  FFE8         	movff	_DtCW+7,wreg
  5971  00380C  0A80               	xorlw	128
  5972  00380E  0F7F               	addlw	-129
  5973  003810  E303               	bnc	l524
  5974  003812  C076  F05A         	movff	_PWM+26,_rgl+8
  5975  003816  0012               	return	
  5976  003818                     l524:
  5977                           ;rgl.c: 1794: else
  5978  003818  C076  FFE8         	movff	_PWM+26,wreg
  5979  00381C  0100               	movlb	(_PWM+20) shr (0+8)
  5980  00381E  6170               	cpfslt	(_PWM+20)& (0+255),b
  5981  003820  D003               	goto	l526
  5982  003822  C070  F05A         	movff	_PWM+20,_rgl+8
  5983  003826  0012               	return	
  5984  003828                     l526:
  5985                           ;rgl.c: 1797: else rgl.xmod=PWM.MMAXCW;
  5986  003828  C076  F05A         	movff	_PWM+26,_rgl+8
  5987                           ;rgl.c: 1798: }
  5988  00382C  0012               	return	
  5989  00382E                     __end_of_FirstPCW2:
  5990                           ;rgl.c: 1838: void ClrMod2(void)
  5991                           ;rgl.c: 1839: {
  5992  00382E                     _ClrMod2:
  5993  000000                     
  5994                           ;rgl.c: 1840: rgl.fz=0;
  5995  00382E  0100               	movlb	_rgl shr (0+8)
  5996  003830  9552               	bcf	_rgl& (0+255),2,b
  5997                           ;rgl.c: 1841: rgl.xmod=PWM.BufPWM;
  5998  003832  C05D  F05A         	movff	_PWM+1,_rgl+8
  5999                           ;rgl.c: 1842: rgl.srp=0;
  6000  003836  6B59               	clrf	(_rgl+7)& (0+255),b
  6001                           ;rgl.c: 1843: rgl.ytmp=0;
  6002  003838  6B58               	clrf	(_rgl+6)& (0+255),b
  6003                           ;rgl.c: 1844: rgl.del1s=0;
  6004  00383A  9D52               	bcf	_rgl& (0+255),6,b
  6005                           ;rgl.c: 1845: }
  6006  00383C  0012               	return	
  6007  00383E                     __end_of_ClrMod2:
  6008                           ;rgl.c: 1848: void ModToCW2(void)
  6009                           ;rgl.c: 1849: {
  6010  00383E                     _ModToCW2:
  6011  000000                     
  6012                           ;rgl.c: 1850: rgl.btcw=1;
  6013  00383E  0100               	movlb	_rgl shr (0+8)
  6014  003840  8352               	bsf	_rgl& (0+255),1,b
  6015                           ;rgl.c: 1851: if(rgl.btco)
  6016  003842  A152               	btfss	_rgl& (0+255),0,b
  6017  003844  0012               	return	
  6018                           ;rgl.c: 1852: {
  6019  003846  9152               	bcf	_rgl& (0+255),0,b
  6020                           ;rgl.c: 1854: ClrMod2();
  6021  003848  D7F2               	goto	_ClrMod2	;wreg free
  6022                           ;rgl.c: 1855: }
  6023  00384A                     __end_of_ModToCW2:
  6024                           ;rgl.c: 1859: void ModToCO2(void)
  6025                           ;rgl.c: 1860: {
  6026  00384A                     _ModToCO2:
  6027  000000                     
  6028                           ;rgl.c: 1861: rgl.btco=1;
  6029  00384A  0100               	movlb	_rgl shr (0+8)
  6030  00384C  8152               	bsf	_rgl& (0+255),0,b
  6031                           ;rgl.c: 1862: if(rgl.btcw)
  6032  00384E  A352               	btfss	_rgl& (0+255),1,b
  6033  003850  0012               	return	
  6034                           ;rgl.c: 1863: {
  6035  003852  9352               	bcf	_rgl& (0+255),1,b
  6036                           ;rgl.c: 1865: ClrMod2();
  6037  003854  D7EC               	goto	_ClrMod2	;wreg free
  6038                           ;rgl.c: 1866: }
  6039  003856                     __end_of_ModToCO2:
  6040                           ;rgl.c: 1870: void IncConstCW2(void)
  6041                           ;rgl.c: 1871: {
  6042  003856                     _IncConstCW2:
  6043  000000                     
  6044                           ;rgl.c: 1872: if(!TFrosnie(0))
  6045  003856  0E00               	movlw	0
  6046  003858  ECFA  F020         	call	_TFrosnie
  6047  00385C  E208               	bc	l534
  6048                           ;rgl.c: 1873: {
  6049  00385E  ECC4  F020         	call	_Tstoi	;wreg free
  6050  003862  0100               	movlb	(_rgl+6) shr (0+8)
  6051  003864  E302               	bnc	L40
  6052  003866  2B58               	incf	(_rgl+6)& (0+255),f,b
  6053  003868  0C01               	retlw	1
  6054                           ;rgl.c: 1875: else rgl.ytmp=0;
  6055  00386A                     L40:
  6056  00386A  6B58               	clrf	(_rgl+6)& (0+255),b
  6057                           ;rgl.c: 1876: }
  6058  00386C  0012               	return	
  6059  00386E                     l534:
  6060                           ;rgl.c: 1877: else rgl.ytmp=0;
  6061  00386E  0100               	movlb	(_rgl+6) shr (0+8)
  6062  003870  6B58               	clrf	(_rgl+6)& (0+255),b
  6063                           ;rgl.c: 1878: }
  6064  003872  0012               	return	
  6065  003874                     __end_of_IncConstCW2:
  6066                           ;rgl.c: 1880: void IncConstCO2(void)
  6067                           ;rgl.c: 1881: {
  6068  003874                     _IncConstCO2:
  6069  000000                     
  6070                           ;rgl.c: 1882: if(Tstoi()) rgl.ytmp++;
  6071  003874  ECC4  F020         	call	_Tstoi	;wreg free
  6072  003878  0100               	movlb	(_rgl+6) shr (0+8)
  6073  00387A  E302               	bnc	L41
  6074  00387C  2B58               	incf	(_rgl+6)& (0+255),f,b
  6075  00387E  0C01               	retlw	1
  6076                           ;rgl.c: 1883: else rgl.ytmp=0;
  6077  003880                     L41:
  6078  003880  6B58               	clrf	(_rgl+6)& (0+255),b
  6079                           ;rgl.c: 1884: }
  6080  003882  0012               	return	
  6081  003884                     __end_of_IncConstCO2:
  6082                           ;rgl.c: 1887: void ReadDataCO2(void)
  6083                           ;rgl.c: 1888: {
  6084  003884                     _ReadDataCO2:
  6085  000000                     
  6086                           ;rgl.c: 1889: rgl.x_t=DtCO.DCO;
  6087  003884  C145  F054         	movff	_DtCO+8,_rgl+2
  6088                           ;rgl.c: 1890: rgl.x_dt=DtCO.dDCO;
  6089  003888  C146  F056         	movff	_DtCO+9,_rgl+4
  6090                           ;rgl.c: 1891: }
  6091  00388C  0012               	return	
  6092  00388E                     __end_of_ReadDataCO2:
  6093                           ;rgl.c: 1894: void ReadDataCW2(void)
  6094                           ;rgl.c: 1895: {
  6095  00388E                     _ReadDataCW2:
  6096  000000                     
  6097                           ;rgl.c: 1896: rgl.x_t=DtCW.DCW;
  6098  00388E  C153  F054         	movff	_DtCW+7,_rgl+2
  6099                           ;rgl.c: 1897: rgl.x_f=DtCO.DCO;
  6100  003892  C145  F055         	movff	_DtCO+8,_rgl+3
  6101                           ;rgl.c: 1898: rgl.x_dt=DtCW.dDCW;
  6102  003896  C154  F056         	movff	_DtCW+8,_rgl+4
  6103                           ;rgl.c: 1899: rgl.x_df=DtCO.dDCO;
  6104  00389A  C146  F057         	movff	_DtCO+9,_rgl+5
  6105                           ;rgl.c: 1900: }
  6106  00389E  0012               	return	
  6107  0038A0                     __end_of_ReadDataCW2:
  6108                           ;rgl.c: 1903: void ModZgCW2(void)
  6109                           ;rgl.c: 1904: {
  6110  0038A0                     _ModZgCW2:
  6111  000000                     
  6112                           ;rgl.c: 1905: signed long m;
  6113  0038A0  0E0A               	movlw	10
  6114  0038A2  ECCB  F020         	call	_Tnizsza
  6115  0038A6  E304               	bnc	l544
  6116                           ;rgl.c: 1910: {
  6117  0038A8  0E14               	movlw	20
  6118  0038AA  CFE8 FF24          	movff	wreg,F1638
  6119                           ;rgl.c: 1912: FirstPCW2();
  6120  0038AE  DF9C               	call	_FirstPCW2	;wreg free
  6121  0038B0                     l544:
  6122                           ;rgl.c: 1913: }
  6123  0038B0  0100               	movlb	_rgl shr (0+8)
  6124  0038B2  A552               	btfss	_rgl& (0+255),2,b
  6125  0038B4  D00D               	goto	l545
  6126                           ;rgl.c: 1915: {
  6127  0038B6  0E02               	movlw	2
  6128  0038B8  ECCB  F020         	call	_Tnizsza
  6129  0038BC  A0D8               	btfss	status,0,c
  6130  0038BE  0012               	return	
  6131                           ;rgl.c: 1917: {
  6132  0038C0  C05D  F05A         	movff	_PWM+1,_rgl+8
  6133                           ;rgl.c: 1919: rgl.srp=0;
  6134  0038C4  0100               	movlb	(_rgl+7) shr (0+8)
  6135  0038C6  6B59               	clrf	(_rgl+7)& (0+255),b
  6136                           ;rgl.c: 1920: rgl.ytmp=0;
  6137  0038C8  6B58               	clrf	(_rgl+6)& (0+255),b
  6138                           ;rgl.c: 1921: rgl.del1s=0;
  6139  0038CA  9D52               	bcf	_rgl& (0+255),6,b
  6140                           ;rgl.c: 1922: pop=0;
  6141  0038CC  010F               	movlb	F1638 shr (0+8)
  6142  0038CE  6B24               	clrf	F1638& (0+255),b
  6143                           ;rgl.c: 1923: }
  6144                           ;rgl.c: 1924: else return;
  6145  0038D0                     l545:
  6146                           ;rgl.c: 1925: }
  6147  0038D0  0E01               	movlw	1
  6148  0038D2  ECCB  F020         	call	_Tnizsza
  6149  0038D6  E229               	bc	l548
  6150                           ;rgl.c: 1927: {
  6151  0038D8  0100               	movlb	_rgl shr (0+8)
  6152  0038DA  8552               	bsf	_rgl& (0+255),2,b
  6153                           ;rgl.c: 1929: rgl.fast_up=0;
  6154  0038DC  9952               	bcf	_rgl& (0+255),4,b
  6155                           ;rgl.c: 1930: rgl.med_up=0;
  6156  0038DE  9752               	bcf	_rgl& (0+255),3,b
  6157                           ;rgl.c: 1931: rgl.srp=PWM.BufPWM+pop;
  6158  0038E0  CF24  FFE8         	movff	F1638,wreg
  6159  0038E4  0100               	movlb	(_PWM+1) shr (0+8)
  6160  0038E6  255D               	addwf	(_PWM+1)& (0+255),w,b
  6161  0038E8  CFE8 F059          	movff	wreg,_rgl+7
  6162                           ;rgl.c: 1932: rgl.xmod=PWM.BufPWM+pop;
  6163  0038EC  CF24  FFE8         	movff	F1638,wreg
  6164  0038F0  255D               	addwf	(_PWM+1)& (0+255),w,b
  6165  0038F2  CFE8 F05A          	movff	wreg,_rgl+8
  6166                           ;rgl.c: 1933: pop=0;
  6167  0038F6  010F               	movlb	F1638 shr (0+8)
  6168  0038F8  6B24               	clrf	F1638& (0+255),b
  6169                           ;rgl.c: 1934: if(PWM.MMAXCW>PWM.MGMOD)
  6170  0038FA  C076  FFE8         	movff	_PWM+26,wreg
  6171  0038FE  0100               	movlb	(_PWM+6) shr (0+8)
  6172  003900  6162               	cpfslt	(_PWM+6)& (0+255),b
  6173  003902  D009               	goto	l549
  6174                           ;rgl.c: 1935: {
  6175  003904  C05A  FFE8         	movff	_rgl+8,wreg
  6176  003908  6162               	cpfslt	(_PWM+6)& (0+255),b
  6177  00390A  0012               	return	
  6178                           ;rgl.c: 1937: {
  6179  00390C  C062  F059         	movff	_PWM+6,_rgl+7
  6180                           ;rgl.c: 1939: rgl.xmod=PWM.MGMOD;
  6181  003910  C062  F05A         	movff	_PWM+6,_rgl+8
  6182                           ;rgl.c: 1940: }
  6183  003914  0012               	return	
  6184  003916                     l549:
  6185                           ;rgl.c: 1942: else
  6186  003916  C05A  FFE8         	movff	_rgl+8,wreg
  6187  00391A  0100               	movlb	(_PWM+26) shr (0+8)
  6188  00391C  6176               	cpfslt	(_PWM+26)& (0+255),b
  6189  00391E  0012               	return	
  6190                           ;rgl.c: 1945: {
  6191  003920  C076  F059         	movff	_PWM+26,_rgl+7
  6192                           ;rgl.c: 1947: rgl.xmod=PWM.MMAXCW;
  6193  003924  C076  F05A         	movff	_PWM+26,_rgl+8
  6194                           ;rgl.c: 1948: }
  6195  003928  0012               	return	
  6196  00392A                     l548:
  6197                           ;rgl.c: 1951: }
  6198  00392A  C061  FFE8         	movff	_PWM+5,wreg
  6199  00392E  0100               	movlb	(_rgl+8) shr (0+8)
  6200  003930  5D5A               	subwf	(_rgl+8)& (0+255),w,b
  6201  003932  E318               	bnc	l553
  6202  003934  0E0A               	movlw	10
  6203  003936  6E02               	movwf	btemp+2,c
  6204  003938  6A03               	clrf	btemp+3,c
  6205  00393A  C061  FFE8         	movff	_PWM+5,wreg
  6206  00393E  C05A  F000         	movff	_rgl+8,btemp
  6207  003942  6A01               	clrf	btemp+1,c
  6208  003944  5E00               	subwf	btemp,f,c
  6209  003946  0E00               	movlw	0
  6210  003948  5A01               	subwfb	btemp+1,f,c
  6211  00394A  EC78  F04A         	call	awmul
  6212  00394E  0100               	movlb	__Lparam shr (0+8)
  6213  003950  C004  F0F0         	movff	btemp+4,?a_ModZgCW2
  6214  003954  C005  F0F1         	movff	btemp+5,?a_ModZgCW2+1
  6215  003958  0E00               	movlw	0
  6216  00395A  BFF1               	btfsc	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),7,b
  6217  00395C  0EFF               	movlw	-1
  6218  00395E  6FF2               	movwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),b
  6219  003960  6FF3               	movwf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),b
  6220  003962  D005               	goto	l554
  6221  003964                     l553:
  6222                           ;rgl.c: 1953: else m=0;
  6223  003964  0100               	movlb	__Lparam shr (0+8)
  6224  003966  6BF0               	clrf	?a_ModZgCW2^(__Lparam& (0+65280)),b
  6225  003968  6BF1               	clrf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),b
  6226  00396A  6BF2               	clrf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),b
  6227  00396C  6BF3               	clrf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),b
  6228  00396E                     l554:
  6229                           ;rgl.c: 1954: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
  6230  00396E  C15A  FFE8         	movff	_DtCW+14,wreg
  6231  003972  C159  F000         	movff	_DtCW+13,btemp
  6232  003976  5C00               	subwf	btemp,w,c
  6233  003978  6E04               	movwf	btemp+4,c
  6234  00397A  6A05               	clrf	btemp+5,c
  6235  00397C  A0D8               	btfss	status,0,c
  6236  00397E  0605               	decf	btemp+5,f,c
  6237  003980  6A06               	clrf	btemp+6,c
  6238  003982  BE05               	btfsc	btemp+5,7,c
  6239  003984  0606               	decf	btemp+6,f,c
  6240  003986  5006               	movf	btemp+6,w,c
  6241  003988  6E07               	movwf	btemp+7,c
  6242  00398A  0EF0               	movlw	low ?a_ModZgCW2
  6243  00398C  6EE9               	movwf	fsr0l,c
  6244  00398E  0E00               	movlw	high ?a_ModZgCW2
  6245  003990  6EEA               	movwf	fsr0h,c
  6246  003992  ECB5  F04A         	call	aldiv_f
  6247                           ;rgl.c: 1955: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
  6248  003996  C15A  FFE8         	movff	_DtCW+14,wreg
  6249  00399A  C158  F000         	movff	_DtCW+12,btemp
  6250  00399E  5C00               	subwf	btemp,w,c
  6251  0039A0  6E04               	movwf	btemp+4,c
  6252  0039A2  6A05               	clrf	btemp+5,c
  6253  0039A4  A0D8               	btfss	status,0,c
  6254  0039A6  0605               	decf	btemp+5,f,c
  6255  0039A8  6A06               	clrf	btemp+6,c
  6256  0039AA  BE05               	btfsc	btemp+5,7,c
  6257  0039AC  0606               	decf	btemp+6,f,c
  6258  0039AE  5006               	movf	btemp+6,w,c
  6259  0039B0  6E07               	movwf	btemp+7,c
  6260  0039B2  0EF0               	movlw	low ?a_ModZgCW2
  6261  0039B4  6EE9               	movwf	fsr0l,c
  6262  0039B6  0E00               	movlw	high ?a_ModZgCW2
  6263  0039B8  6EEA               	movwf	fsr0h,c
  6264  0039BA  ECAB  F04A         	call	almul_f
  6265                           ;rgl.c: 1956: if(m<0) m=0;
  6266  0039BE  0100               	movlb	__Lparam shr (0+8)
  6267  0039C0  AFF3               	btfss	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),7,b
  6268  0039C2  D004               	goto	l555
  6269  0039C4  6BF0               	clrf	?a_ModZgCW2^(__Lparam& (0+65280)),b
  6270  0039C6  6BF1               	clrf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),b
  6271  0039C8  6BF2               	clrf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),b
  6272  0039CA  6BF3               	clrf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),b
  6273  0039CC                     l555:
  6274                           ;rgl.c: 1957: m=m/10+PWM.MDMOD;
  6275  0039CC  0E0A               	movlw	10
  6276  0039CE  6E04               	movwf	btemp+4,c
  6277  0039D0  6A05               	clrf	btemp+5,c
  6278  0039D2  6A06               	clrf	btemp+6,c
  6279  0039D4  6A07               	clrf	btemp+7,c
  6280  0039D6  C0F0  F000         	movff	?a_ModZgCW2,btemp
  6281  0039DA  C0F1  F001         	movff	?a_ModZgCW2+1,btemp+1
  6282  0039DE  C0F2  F002         	movff	?a_ModZgCW2+2,btemp+2
  6283  0039E2  C0F3  F003         	movff	?a_ModZgCW2+3,btemp+3
  6284  0039E6  ECE2  F049         	call	aldiv
  6285  0039EA  C061  FFE8         	movff	_PWM+5,wreg
  6286  0039EE  2400               	addwf	btemp,w,c
  6287  0039F0  0100               	movlb	__Lparam shr (0+8)
  6288  0039F2  6FF0               	movwf	?a_ModZgCW2^(__Lparam& (0+65280)),b
  6289  0039F4  0E00               	movlw	0
  6290  0039F6  2001               	addwfc	btemp+1,w,c
  6291  0039F8  6FF1               	movwf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),b
  6292  0039FA  0E00               	movlw	0
  6293  0039FC  2002               	addwfc	btemp+2,w,c
  6294  0039FE  6FF2               	movwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),b
  6295  003A00  0E00               	movlw	0
  6296  003A02  2003               	addwfc	btemp+3,w,c
  6297  003A04  6FF3               	movwf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),b
  6298                           ;rgl.c: 1958: if(m>0xff)
  6299  003A06  51F3               	movf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),w
  6300  003A08  0A80               	xorlw	128
  6301  003A0A  0F80               	addlw	128
  6302  003A0C  E108               	bnz	u4715
  6303  003A0E  0E00               	movlw	0
  6304  003A10  5DF2               	subwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),w
  6305  003A12  E105               	bnz	u4715
  6306  003A14  0E01               	movlw	1
  6307  003A16  5DF1               	subwf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),w
  6308  003A18  E102               	bnz	u4715
  6309  003A1A  0E00               	movlw	0
  6310  003A1C  5DF0               	subwf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  6311  003A1E                     u4715:
  6312                           ;rgl.c: 1959: {
  6313  003A1E  0100               	movlb	_rgl shr (0+8)
  6314  003A20  E304               	bnc	L42
  6315  003A22  9552               	bcf	_rgl& (0+255),2,b
  6316                           ;rgl.c: 1961: rgl.tmp_pwm=rgl.xmod;
  6317  003A24  C05A  F05B         	movff	_rgl+8,_rgl+9
  6318                           ;rgl.c: 1962: return;
  6319  003A28  0012               	return	
  6320                           ;rgl.c: 1963: }
  6321  003A2A                     L42:
  6322  003A2A  A552               	btfss	_rgl& (0+255),2,b
  6323  003A2C  D01C               	goto	l557
  6324  003A2E  C05A  F000         	movff	_rgl+8,btemp
  6325  003A32  6A01               	clrf	btemp+1,c
  6326  003A34  6A02               	clrf	btemp+2,c
  6327  003A36  6A03               	clrf	btemp+3,c
  6328  003A38  0100               	movlb	__Lparam shr (0+8)
  6329  003A3A  51F3               	movf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),w
  6330  003A3C  0A80               	xorlw	128
  6331  003A3E  6E04               	movwf	btemp+4,c
  6332  003A40  5003               	movf	btemp+3,w,c
  6333  003A42  0A80               	xorlw	128
  6334  003A44  5C04               	subwf	btemp+4,w,c
  6335  003A46  E108               	bnz	u4735
  6336  003A48  5002               	movf	btemp+2,w,c
  6337  003A4A  5DF2               	subwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),w
  6338  003A4C  E105               	bnz	u4735
  6339  003A4E  5001               	movf	btemp+1,w,c
  6340  003A50  5DF1               	subwf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),w
  6341  003A52  E102               	bnz	u4735
  6342  003A54  5000               	movf	btemp,w,c
  6343  003A56  5DF0               	subwf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  6344  003A58                     u4735:
  6345  003A58  E206               	bc	l557
  6346                           ;rgl.c: 1965: rgl.srp=(rgl.xmod-m);
  6347  003A5A  0100               	movlb	__Lparam shr (0+8)
  6348  003A5C  51F0               	movf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  6349  003A5E  0100               	movlb	(_rgl+8) shr (0+8)
  6350  003A60  5D5A               	subwf	(_rgl+8)& (0+255),w,b
  6351  003A62  CFE8 F059          	movff	wreg,_rgl+7
  6352  003A66                     l557:
  6353                           ;rgl.c: 1966: m+=rgl.srp;
  6354  003A66  C059  FFE8         	movff	_rgl+7,wreg
  6355  003A6A  0100               	movlb	__Lparam shr (0+8)
  6356  003A6C  27F0               	addwf	?a_ModZgCW2^(__Lparam& (0+65280)),f,b
  6357  003A6E  0E01               	movlw	1
  6358  003A70  B0D8               	btfsc	status,0,c
  6359  003A72  27F1               	addwf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),f,b
  6360  003A74  B0D8               	btfsc	status,0,c
  6361  003A76  27F2               	addwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),f,b
  6362  003A78  B0D8               	btfsc	status,0,c
  6363  003A7A  27F3               	addwf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),f,b
  6364                           ;rgl.c: 1967: if(m>rgl.xmod) p=rgl.xmod;
  6365  003A7C  C05A  F000         	movff	_rgl+8,btemp
  6366  003A80  6A01               	clrf	btemp+1,c
  6367  003A82  6A02               	clrf	btemp+2,c
  6368  003A84  6A03               	clrf	btemp+3,c
  6369  003A86  5003               	movf	btemp+3,w,c
  6370  003A88  0A80               	xorlw	128
  6371  003A8A  6E04               	movwf	btemp+4,c
  6372  003A8C  51F3               	movf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),w
  6373  003A8E  0A80               	xorlw	128
  6374  003A90  5C04               	subwf	btemp+4,w,c
  6375  003A92  E108               	bnz	u4755
  6376  003A94  51F2               	movf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),w
  6377  003A96  5C02               	subwf	btemp+2,w,c
  6378  003A98  E105               	bnz	u4755
  6379  003A9A  51F1               	movf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),w
  6380  003A9C  5C01               	subwf	btemp+1,w,c
  6381  003A9E  E102               	bnz	u4755
  6382  003AA0  51F0               	movf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  6383  003AA2  5C00               	subwf	btemp,w,c
  6384  003AA4                     u4755:
  6385  003AA4  E203               	bc	l558
  6386  003AA6  C05A  FFD9         	movff	_rgl+8,fsr2l
  6387  003AAA  D003               	goto	l559
  6388  003AAC                     l558:
  6389                           ;rgl.c: 1968: else p=m;
  6390  003AAC  0100               	movlb	__Lparam shr (0+8)
  6391  003AAE  51F0               	movf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  6392  003AB0  6ED9               	movwf	fsr2l,c
  6393  003AB2                     l559:
  6394                           ;rgl.c: 1969: rgl.fz=0;
  6395  003AB2  0100               	movlb	_rgl shr (0+8)
  6396  003AB4  9552               	bcf	_rgl& (0+255),2,b
  6397                           ;rgl.c: 1970: rgl.tmp_pwm=p;
  6398  003AB6  CFD9 F05B          	movff	fsr2l,_rgl+9
  6399                           ;rgl.c: 1971: }
  6400  003ABA  0012               	return	
  6401  003ABC                     __end_of_ModZgCW2:
  6402                           ;rgl.c: 1974: void ModDkCW2(void)
  6403                           ;rgl.c: 1975: {
  6404  003ABC                     _ModDkCW2:
  6405  000000                     
  6406                           ;rgl.c: 1976: signed long m;
  6407  003ABC  0100               	movlb	_rgl shr (0+8)
  6408  003ABE  A552               	btfss	_rgl& (0+255),2,b
  6409  003AC0  0012               	return	
  6410                           ;rgl.c: 1981: ada=DtCW.AC_CW-DtCW.DAD_CW;
  6411  003AC2  C15A  FFE8         	movff	_DtCW+14,wreg
  6412  003AC6  0101               	movlb	(_DtCW+12) shr (0+8)
  6413  003AC8  5D58               	subwf	(_DtCW+12)& (0+255),w,b
  6414  003ACA  6ED9               	movwf	fsr2l,c
  6415                           ;rgl.c: 1982: k=9;
  6416  003ACC  0E09               	movlw	9
  6417  003ACE  6EE1               	movwf	fsr1l,c
  6418                           ;rgl.c: 1983: if(ada<0) k=8;
  6419  003AD0  AED9               	btfss	fsr2l,7,c
  6420  003AD2  D002               	goto	l562
  6421  003AD4  0E08               	movlw	8
  6422  003AD6  6EE1               	movwf	fsr1l,c
  6423  003AD8                     l562:
  6424                           ;rgl.c: 1984: m=rgl.srp+k*ada;
  6425  003AD8  CFD9 F002          	movff	fsr2l,btemp+2
  6426  003ADC  6A03               	clrf	btemp+3,c
  6427  003ADE  BE02               	btfsc	btemp+2,7,c
  6428  003AE0  0603               	decf	btemp+3,f,c
  6429  003AE2  CFE1 F000          	movff	fsr1l,btemp
  6430  003AE6  6A01               	clrf	btemp+1,c
  6431  003AE8  EC78  F04A         	call	awmul
  6432  003AEC  C059  FFE8         	movff	_rgl+7,wreg
  6433  003AF0  2404               	addwf	btemp+4,w,c
  6434  003AF2  6E00               	movwf	btemp,c
  6435  003AF4  0E00               	movlw	0
  6436  003AF6  2005               	addwfc	btemp+5,w,c
  6437  003AF8  6E01               	movwf	btemp+1,c
  6438  003AFA  0100               	movlb	__Lparam shr (0+8)
  6439  003AFC  C000  F0F0         	movff	btemp,?a_ModDkCW2
  6440  003B00  C001  F0F1         	movff	btemp+1,?a_ModDkCW2+1
  6441  003B04  0E00               	movlw	0
  6442  003B06  BFF1               	btfsc	(?a_ModDkCW2+1)^(__Lparam& (0+65280)),7,b
  6443  003B08  0EFF               	movlw	-1
  6444  003B0A  6FF2               	movwf	(?a_ModDkCW2+2)^(__Lparam& (0+65280)),b
  6445  003B0C  6FF3               	movwf	(?a_ModDkCW2+3)^(__Lparam& (0+65280)),b
  6446                           ;rgl.c: 1985: if(m>rgl.xmod) p=rgl.xmod;
  6447  003B0E  C05A  F000         	movff	_rgl+8,btemp
  6448  003B12  6A01               	clrf	btemp+1,c
  6449  003B14  6A02               	clrf	btemp+2,c
  6450  003B16  6A03               	clrf	btemp+3,c
  6451  003B18  5003               	movf	btemp+3,w,c
  6452  003B1A  0A80               	xorlw	128
  6453  003B1C  6E04               	movwf	btemp+4,c
  6454  003B1E  51F3               	movf	(?a_ModDkCW2+3)^(__Lparam& (0+65280)),w
  6455  003B20  0A80               	xorlw	128
  6456  003B22  5C04               	subwf	btemp+4,w,c
  6457  003B24  E108               	bnz	u4785
  6458  003B26  51F2               	movf	(?a_ModDkCW2+2)^(__Lparam& (0+65280)),w
  6459  003B28  5C02               	subwf	btemp+2,w,c
  6460  003B2A  E105               	bnz	u4785
  6461  003B2C  51F1               	movf	(?a_ModDkCW2+1)^(__Lparam& (0+65280)),w
  6462  003B2E  5C01               	subwf	btemp+1,w,c
  6463  003B30  E102               	bnz	u4785
  6464  003B32  51F0               	movf	?a_ModDkCW2^(__Lparam& (0+65280)),w
  6465  003B34  5C00               	subwf	btemp,w,c
  6466  003B36                     u4785:
  6467  003B36  E203               	bc	l563
  6468  003B38  C05A  FFD9         	movff	_rgl+8,fsr2l
  6469  003B3C  D01C               	goto	l564
  6470  003B3E                     l563:
  6471                           ;rgl.c: 1986: else
  6472  003B3E  C061  F000         	movff	_PWM+5,btemp
  6473  003B42  6A01               	clrf	btemp+1,c
  6474  003B44  6A02               	clrf	btemp+2,c
  6475  003B46  6A03               	clrf	btemp+3,c
  6476  003B48  0100               	movlb	__Lparam shr (0+8)
  6477  003B4A  51F3               	movf	(?a_ModDkCW2+3)^(__Lparam& (0+65280)),w
  6478  003B4C  0A80               	xorlw	128
  6479  003B4E  6E04               	movwf	btemp+4,c
  6480  003B50  5003               	movf	btemp+3,w,c
  6481  003B52  0A80               	xorlw	128
  6482  003B54  5C04               	subwf	btemp+4,w,c
  6483  003B56  E108               	bnz	u4795
  6484  003B58  5002               	movf	btemp+2,w,c
  6485  003B5A  5DF2               	subwf	(?a_ModDkCW2+2)^(__Lparam& (0+65280)),w
  6486  003B5C  E105               	bnz	u4795
  6487  003B5E  5001               	movf	btemp+1,w,c
  6488  003B60  5DF1               	subwf	(?a_ModDkCW2+1)^(__Lparam& (0+65280)),w
  6489  003B62  E102               	bnz	u4795
  6490  003B64  5000               	movf	btemp,w,c
  6491  003B66  5DF0               	subwf	?a_ModDkCW2^(__Lparam& (0+65280)),w
  6492  003B68                     u4795:
  6493  003B68  E203               	bc	l565
  6494  003B6A  C061  FFD9         	movff	_PWM+5,fsr2l
  6495  003B6E  D003               	goto	l564
  6496  003B70                     l565:
  6497                           ;rgl.c: 1988: else p=m;
  6498  003B70  0100               	movlb	__Lparam shr (0+8)
  6499  003B72  51F0               	movf	?a_ModDkCW2^(__Lparam& (0+65280)),w
  6500  003B74  6ED9               	movwf	fsr2l,c
  6501  003B76                     l564:
  6502                           ;rgl.c: 1989: rgl.tmp_pwm=p;
  6503  003B76  CFD9 F05B          	movff	fsr2l,_rgl+9
  6504                           ;rgl.c: 1990: }
  6505  003B7A  0012               	return	
  6506  003B7C                     __end_of_ModDkCW2:
  6507                           ;rgl.c: 1995: void ModPruCW2(void)
  6508                           ;rgl.c: 1996: {
  6509  003B7C                     _ModPruCW2:
  6510  000000                     
  6511                           ;rgl.c: 1997: static unsigned char l,m,o,p,q,r,s
      +                          ;
  6512  003B7C  0100               	movlb	_rgl shr (0+8)
  6513  003B7E  B552               	btfsc	_rgl& (0+255),2,b
  6514  003B80  D0AF               	goto	l568
  6515                           ;rgl.c: 2001: {
  6516  003B82  010F               	movlb	F1645 shr (0+8)
  6517  003B84  6B25               	clrf	F1645& (0+255),b
  6518                           ;rgl.c: 2003: m=0;
  6519  003B86  010F               	movlb	F1646 shr (0+8)
  6520  003B88  6B26               	clrf	F1646& (0+255),b
  6521                           ;rgl.c: 2004: o=0;
  6522  003B8A  010F               	movlb	F1647 shr (0+8)
  6523  003B8C  6B27               	clrf	F1647& (0+255),b
  6524                           ;rgl.c: 2005: p=0;
  6525  003B8E  010F               	movlb	F1648 shr (0+8)
  6526  003B90  6B28               	clrf	F1648& (0+255),b
  6527                           ;rgl.c: 2006: if(q<255) q++;
  6528  003B92  CF29  F000         	movff	F1649,btemp
  6529  003B96  2800               	incf	btemp,w,c
  6530  003B98  E002               	bz	l569
  6531  003B9A  010F               	movlb	F1649 shr (0+8)
  6532  003B9C  2B29               	incf	F1649& (0+255),f,b
  6533  003B9E                     l569:
  6534                           ;rgl.c: 2007: if(s<255) s++;
  6535  003B9E  CF2B  F000         	movff	F1651,btemp
  6536  003BA2  2800               	incf	btemp,w,c
  6537  003BA4  E002               	bz	l570
  6538  003BA6  010F               	movlb	F1651 shr (0+8)
  6539  003BA8  2B2B               	incf	F1651& (0+255),f,b
  6540  003BAA                     l570:
  6541                           ;rgl.c: 2008: if(DtCW._newPCW) s=0;
  6542  003BAA  0101               	movlb	(_DtCW+1) shr (0+8)
  6543  003BAC  A14D               	btfss	(_DtCW+1)& (0+255),0,b
  6544  003BAE  D002               	goto	l571
  6545  003BB0  010F               	movlb	F1651 shr (0+8)
  6546  003BB2  6B2B               	clrf	F1651& (0+255),b
  6547  003BB4                     l571:
  6548                           ;rgl.c: 2009: if(Tnizsza(0))
  6549  003BB4  0E00               	movlw	0
  6550  003BB6  DAEF               	call	_Tnizsza
  6551  003BB8  A0D8               	btfss	status,0,c
  6552  003BBA  0012               	return	
  6553                           ;rgl.c: 2010: {
  6554  003BBC  0E0A               	movlw	10
  6555  003BBE  DAEB               	call	_Tnizsza
  6556  003BC0  B0D8               	btfsc	status,0,c
  6557  003BC2  0012               	return	
  6558                           ;rgl.c: 2012: {
  6559  003BC4  0100               	movlb	__Lparam shr (0+8)
  6560  003BC6  6BF0               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6561                           ;rgl.c: 2014: if((Trosnie(1)||TFrosnie(1))&&s>=1
      +                          )
  6562  003BC8  0E01               	movlw	1
  6563  003BCA  DAB6               	call	_Trosnie
  6564  003BCC  E203               	bc	u4880
  6565  003BCE  0E01               	movlw	1
  6566  003BD0  DB11               	call	_TFrosnie
  6567  003BD2  E310               	bnc	l574
  6568  003BD4                     u4880:
  6569  003BD4  0E00               	movlw	0
  6570  003BD6  010F               	movlb	F1651 shr (0+8)
  6571  003BD8  652B               	cpfsgt	F1651& (0+255),b
  6572  003BDA  D00C               	goto	l574
  6573                           ;rgl.c: 2015: {
  6574  003BDC  6B2B               	clrf	F1651& (0+255),b
  6575                           ;rgl.c: 2017: k=10;
  6576  003BDE  0E0A               	movlw	10
  6577  003BE0  0100               	movlb	__Lparam shr (0+8)
  6578  003BE2  6FF0               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6579                           ;rgl.c: 2018: if(Trosnie(2)||TFrosnie(2)) k=8;
  6580  003BE4  0E02               	movlw	2
  6581  003BE6  DAA8               	call	_Trosnie
  6582  003BE8  E203               	bc	u4930
  6583  003BEA  0E02               	movlw	2
  6584  003BEC  DB03               	call	_TFrosnie
  6585  003BEE  E31E               	bnc	l576
  6586  003BF0                     u4930:
  6587  003BF0  0E08               	movlw	8
  6588  003BF2  D009               	goto	L13
  6589                           ;rgl.c: 2019: }
  6590  003BF4                     l574:
  6591                           ;rgl.c: 2020: else
  6592  003BF4  0E00               	movlw	0
  6593  003BF6  DB0B               	call	_TFmaleje
  6594  003BF8  E309               	bnc	l577
  6595  003BFA  0E00               	movlw	0
  6596  003BFC  010F               	movlb	F1649 shr (0+8)
  6597  003BFE  6529               	cpfsgt	F1649& (0+255),b
  6598  003C00  D005               	goto	l577
  6599                           ;rgl.c: 2022: {
  6600  003C02  6B29               	clrf	F1649& (0+255),b
  6601                           ;rgl.c: 2024: k=6;
  6602  003C04  0E06               	movlw	6
  6603  003C06                     L13:
  6604  003C06  0100               	movlb	__Lparam shr (0+8)
  6605  003C08  6FF0               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6606                           ;rgl.c: 2025: }else
  6607  003C0A  D010               	goto	l576
  6608  003C0C                     l577:
  6609                           ;rgl.c: 2026: if(TFstoi())
  6610  003C0C  DB1B               	call	_TFstoi	;wreg free
  6611  003C0E  E30E               	bnc	l576
  6612                           ;rgl.c: 2027: {
  6613  003C10  0E00               	movlw	0
  6614  003C12  010F               	movlb	F1650 shr (0+8)
  6615  003C14  652A               	cpfsgt	F1650& (0+255),b
  6616  003C16  D006               	goto	l580
  6617                           ;rgl.c: 2029: {
  6618  003C18  0E06               	movlw	6
  6619  003C1A  0100               	movlb	__Lparam shr (0+8)
  6620  003C1C  6FF0               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6621                           ;rgl.c: 2031: r=0;
  6622  003C1E  010F               	movlb	F1650 shr (0+8)
  6623  003C20  6B2A               	clrf	F1650& (0+255),b
  6624                           ;rgl.c: 2032: }
  6625  003C22  D004               	goto	l576
  6626  003C24                     l580:
  6627                           ;rgl.c: 2033: else
  6628  003C24  0100               	movlb	__Lparam shr (0+8)
  6629  003C26  6BF0               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6630                           ;rgl.c: 2036: r++;
  6631  003C28  010F               	movlb	F1650 shr (0+8)
  6632  003C2A  2B2A               	incf	F1650& (0+255),f,b
  6633  003C2C                     l576:
  6634                           ;rgl.c: 2037: }
  6635  003C2C  0100               	movlb	(_rgl+6) shr (0+8)
  6636  003C2E  6B58               	clrf	(_rgl+6)& (0+255),b
  6637                           ;rgl.c: 2040: if(PWM.BufPWM>rgl.xmod) return;
  6638  003C30  C05D  FFE8         	movff	_PWM+1,wreg
  6639  003C34  615A               	cpfslt	(_rgl+8)& (0+255),b
  6640  003C36  D001               	goto	l582
  6641  003C38  0012               	return	
  6642  003C3A                     l582:
  6643                           ;rgl.c: 2041: tmp=rgl.xmod-PWM.BufPWM;
  6644  003C3A  C05D  FFE8         	movff	_PWM+1,wreg
  6645  003C3E  0100               	movlb	(_rgl+8) shr (0+8)
  6646  003C40  5D5A               	subwf	(_rgl+8)& (0+255),w,b
  6647  003C42  6ED9               	movwf	fsr2l,c
  6648                           ;rgl.c: 2042: if(k>tmp) k=tmp;
  6649  003C44  50D9               	movf	fsr2l,w,c
  6650  003C46  0100               	movlb	__Lparam shr (0+8)
  6651  003C48  94D8               	bcf	status,2,c
  6652  003C4A  90D8               	bcf	status,0,c
  6653  003C4C  AFF0               	btfss	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  6654  003C4E  5DF0               	subwf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6655  003C50  B4D8               	btfsc	status,2,c
  6656  003C52  90D8               	bcf	status,0,c
  6657  003C54  E302               	bnc	l583
  6658  003C56  50D9               	movf	fsr2l,w,c
  6659  003C58  6FF0               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6660  003C5A                     l583:
  6661                           ;rgl.c: 2045: if(PWM.MMAXCW>PWM.MGMOD)
  6662  003C5A  C076  FFE8         	movff	_PWM+26,wreg
  6663  003C5E  0100               	movlb	(_PWM+6) shr (0+8)
  6664  003C60  6162               	cpfslt	(_PWM+6)& (0+255),b
  6665  003C62  D01F               	goto	l584
  6666                           ;rgl.c: 2046: {
  6667  003C64  C059  FFE8         	movff	_rgl+7,wreg
  6668  003C68  0100               	movlb	__Lparam shr (0+8)
  6669  003C6A  25F0               	addwf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6670  003C6C  6E02               	movwf	btemp+2,c
  6671  003C6E  6A03               	clrf	btemp+3,c
  6672  003C70  B0D8               	btfsc	status,0,c
  6673  003C72  2A03               	incf	btemp+3,f,c
  6674  003C74  BFF0               	btfsc	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  6675  003C76  0603               	decf	btemp+3,f,c
  6676  003C78  C062  F000         	movff	_PWM+6,btemp
  6677  003C7C  6A01               	clrf	btemp+1,c
  6678  003C7E  5001               	movf	btemp+1,w,c
  6679  003C80  0A80               	xorlw	128
  6680  003C82  6E04               	movwf	btemp+4,c
  6681  003C84  5003               	movf	btemp+3,w,c
  6682  003C86  0A80               	xorlw	128
  6683  003C88  5C04               	subwf	btemp+4,w,c
  6684  003C8A  E102               	bnz	u5025
  6685  003C8C  5002               	movf	btemp+2,w,c
  6686  003C8E  5C00               	subwf	btemp,w,c
  6687  003C90                     u5025:
  6688  003C90  E203               	bc	l585
  6689  003C92  C062  F059         	movff	_PWM+6,_rgl+7
  6690  003C96  0012               	return	
  6691  003C98                     l585:
  6692                           ;rgl.c: 2048: else rgl.srp+=k;
  6693  003C98  0100               	movlb	__Lparam shr (0+8)
  6694  003C9A  51F0               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6695  003C9C  0100               	movlb	(_rgl+7) shr (0+8)
  6696  003C9E  2759               	addwf	(_rgl+7)& (0+255),f,b
  6697                           ;rgl.c: 2049: }
  6698  003CA0  0012               	return	
  6699  003CA2                     l584:
  6700                           ;rgl.c: 2050: else
  6701  003CA2  C059  FFE8         	movff	_rgl+7,wreg
  6702  003CA6  0100               	movlb	__Lparam shr (0+8)
  6703  003CA8  25F0               	addwf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6704  003CAA  6E02               	movwf	btemp+2,c
  6705  003CAC  6A03               	clrf	btemp+3,c
  6706  003CAE  B0D8               	btfsc	status,0,c
  6707  003CB0  2A03               	incf	btemp+3,f,c
  6708  003CB2  BFF0               	btfsc	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  6709  003CB4  0603               	decf	btemp+3,f,c
  6710  003CB6  C076  F000         	movff	_PWM+26,btemp
  6711  003CBA  6A01               	clrf	btemp+1,c
  6712  003CBC  5001               	movf	btemp+1,w,c
  6713  003CBE  0A80               	xorlw	128
  6714  003CC0  6E04               	movwf	btemp+4,c
  6715  003CC2  5003               	movf	btemp+3,w,c
  6716  003CC4  0A80               	xorlw	128
  6717  003CC6  5C04               	subwf	btemp+4,w,c
  6718  003CC8  E102               	bnz	u5035
  6719  003CCA  5002               	movf	btemp+2,w,c
  6720  003CCC  5C00               	subwf	btemp,w,c
  6721  003CCE                     u5035:
  6722  003CCE  E203               	bc	l588
  6723  003CD0  C076  F059         	movff	_PWM+26,_rgl+7
  6724  003CD4  0012               	return	
  6725  003CD6                     l588:
  6726                           ;rgl.c: 2053: else rgl.srp+=k;
  6727  003CD6  0100               	movlb	__Lparam shr (0+8)
  6728  003CD8  51F0               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6729  003CDA  0100               	movlb	(_rgl+7) shr (0+8)
  6730  003CDC  2759               	addwf	(_rgl+7)& (0+255),f,b
  6731                           ;rgl.c: 2054: }
  6732  003CDE  0012               	return	
  6733                           ;rgl.c: 2057: else return;
  6734                           ;rgl.c: 2059: else return;
  6735  003CE0                     l568:
  6736                           ;rgl.c: 2061: else
  6737  003CE0  010F               	movlb	F1649 shr (0+8)
  6738  003CE2  6B29               	clrf	F1649& (0+255),b
  6739                           ;rgl.c: 2064: r=0;
  6740  003CE4  010F               	movlb	F1650 shr (0+8)
  6741  003CE6  6B2A               	clrf	F1650& (0+255),b
  6742                           ;rgl.c: 2065: s=0;
  6743  003CE8  010F               	movlb	F1651 shr (0+8)
  6744  003CEA  6B2B               	clrf	F1651& (0+255),b
  6745                           ;rgl.c: 2066: if(m<255) m++;
  6746  003CEC  CF26  F000         	movff	F1646,btemp
  6747  003CF0  2800               	incf	btemp,w,c
  6748  003CF2  E002               	bz	l593
  6749  003CF4  010F               	movlb	F1646 shr (0+8)
  6750  003CF6  2B26               	incf	F1646& (0+255),f,b
  6751  003CF8                     l593:
  6752                           ;rgl.c: 2067: if(p<255) p++;
  6753  003CF8  CF28  F000         	movff	F1648,btemp
  6754  003CFC  2800               	incf	btemp,w,c
  6755  003CFE  E002               	bz	l594
  6756  003D00  010F               	movlb	F1648 shr (0+8)
  6757  003D02  2B28               	incf	F1648& (0+255),f,b
  6758  003D04                     l594:
  6759                           ;rgl.c: 2068: if(o<255) o++;
  6760  003D04  CF27  F000         	movff	F1647,btemp
  6761  003D08  2800               	incf	btemp,w,c
  6762  003D0A  E002               	bz	l595
  6763  003D0C  010F               	movlb	F1647 shr (0+8)
  6764  003D0E  2B27               	incf	F1647& (0+255),f,b
  6765  003D10                     l595:
  6766                           ;rgl.c: 2069: if(DtCW.DAD_CW>DtCW.AC_CW)
  6767  003D10  C15A  FFE8         	movff	_DtCW+14,wreg
  6768  003D14  0101               	movlb	(_DtCW+12) shr (0+8)
  6769  003D16  6158               	cpfslt	(_DtCW+12)& (0+255),b
  6770  003D18  D087               	goto	l596
  6771                           ;rgl.c: 2070: {
  6772  003D1A  0100               	movlb	__Lparam shr (0+8)
  6773  003D1C  6BF0               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6774                           ;rgl.c: 2072: if(TFmaleje(0)&&!Twyzsza(0)&&p>=2)
  6775  003D1E  0E00               	movlw	0
  6776  003D20  DA76               	call	_TFmaleje
  6777  003D22  0E00               	movlw	0
  6778  003D24  E311               	bnc	L43
  6779  003D26  DA44               	call	_Twyzsza
  6780  003D28  E20E               	bc	l597
  6781  003D2A  0E01               	movlw	1
  6782  003D2C  010F               	movlb	F1648 shr (0+8)
  6783  003D2E  6528               	cpfsgt	F1648& (0+255),b
  6784  003D30  D00A               	goto	l597
  6785                           ;rgl.c: 2073: {
  6786  003D32  6B28               	clrf	F1648& (0+255),b
  6787                           ;rgl.c: 2075: o=0;
  6788  003D34  010F               	movlb	F1647 shr (0+8)
  6789  003D36  6B27               	clrf	F1647& (0+255),b
  6790                           ;rgl.c: 2076: l=0;
  6791  003D38  010F               	movlb	F1645 shr (0+8)
  6792  003D3A  6B25               	clrf	F1645& (0+255),b
  6793                           ;rgl.c: 2077: m=0;
  6794  003D3C  010F               	movlb	F1646 shr (0+8)
  6795  003D3E  6B26               	clrf	F1646& (0+255),b
  6796                           ;rgl.c: 2078: k=-1;
  6797  003D40  0100               	movlb	__Lparam shr (0+8)
  6798  003D42  69F0               	setf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6799                           ;rgl.c: 2079: }
  6800  003D44  D043               	goto	l598
  6801  003D46                     l597:
  6802                           ;rgl.c: 2080: else
  6803  003D46  0E00               	movlw	0
  6804  003D48                     L43:
  6805  003D48  DA55               	call	_TFrosnie
  6806  003D4A  E312               	bnc	l599
  6807  003D4C  0E01               	movlw	1
  6808  003D4E  010F               	movlb	F1647 shr (0+8)
  6809  003D50  6527               	cpfsgt	F1647& (0+255),b
  6810  003D52  D00E               	goto	l599
  6811                           ;rgl.c: 2082: {
  6812  003D54  6B27               	clrf	F1647& (0+255),b
  6813                           ;rgl.c: 2084: p=0;
  6814  003D56  010F               	movlb	F1648 shr (0+8)
  6815  003D58  6B28               	clrf	F1648& (0+255),b
  6816                           ;rgl.c: 2085: l=0;
  6817  003D5A  010F               	movlb	F1645 shr (0+8)
  6818  003D5C  6B25               	clrf	F1645& (0+255),b
  6819                           ;rgl.c: 2086: m=0;
  6820  003D5E  010F               	movlb	F1646 shr (0+8)
  6821  003D60  6B26               	clrf	F1646& (0+255),b
  6822                           ;rgl.c: 2087: k=2;
  6823  003D62  0E02               	movlw	2
  6824  003D64  0100               	movlb	__Lparam shr (0+8)
  6825  003D66  6FF0               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6826                           ;rgl.c: 2088: if(Trowna()) k=1;
  6827  003D68  DA3E               	call	_Trowna	;wreg free
  6828  003D6A  E330               	bnc	l598
  6829  003D6C  0E01               	movlw	1
  6830  003D6E  D010               	goto	L14
  6831                           ;rgl.c: 2089: }
  6832  003D70                     l599:
  6833                           ;rgl.c: 2090: else
  6834  003D70  0E00               	movlw	0
  6835  003D72  D9E2               	call	_Trosnie
  6836  003D74  E310               	bnc	l602
  6837  003D76  0E01               	movlw	1
  6838  003D78  010F               	movlb	F1646 shr (0+8)
  6839  003D7A  6526               	cpfsgt	F1646& (0+255),b
  6840  003D7C  D00C               	goto	l602
  6841                           ;rgl.c: 2092: {
  6842  003D7E  010F               	movlb	F1648 shr (0+8)
  6843  003D80  6B28               	clrf	F1648& (0+255),b
  6844                           ;rgl.c: 2094: o=0;
  6845  003D82  010F               	movlb	F1647 shr (0+8)
  6846  003D84  6B27               	clrf	F1647& (0+255),b
  6847                           ;rgl.c: 2095: l=0;
  6848  003D86  010F               	movlb	F1645 shr (0+8)
  6849  003D88  6B25               	clrf	F1645& (0+255),b
  6850                           ;rgl.c: 2096: m=0;
  6851  003D8A  010F               	movlb	F1646 shr (0+8)
  6852  003D8C  6B26               	clrf	F1646& (0+255),b
  6853                           ;rgl.c: 2097: k=3;
  6854  003D8E  0E03               	movlw	3
  6855  003D90                     L14:
  6856  003D90  0100               	movlb	__Lparam shr (0+8)
  6857  003D92  6FF0               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6858                           ;rgl.c: 2098: }
  6859  003D94  D01B               	goto	l598
  6860  003D96                     l602:
  6861                           ;rgl.c: 2099: else
  6862  003D96  0E01               	movlw	1
  6863  003D98  DA0B               	call	_Twyzsza
  6864  003D9A  E316               	bnc	l604
  6865                           ;rgl.c: 2101: {
  6866  003D9C  D9F5               	call	_Tstoi	;wreg free
  6867  003D9E  E316               	bnc	l598
  6868  003DA0  DA51               	call	_TFstoi	;wreg free
  6869  003DA2  E314               	bnc	l598
  6870                           ;rgl.c: 2103: {
  6871  003DA4  0E01               	movlw	1
  6872  003DA6  010F               	movlb	F1645 shr (0+8)
  6873  003DA8  6525               	cpfsgt	F1645& (0+255),b
  6874  003DAA  D009               	goto	l606
  6875                           ;rgl.c: 2105: {
  6876  003DAC  0100               	movlb	__Lparam shr (0+8)
  6877  003DAE  6FF0               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6878                           ;rgl.c: 2107: if(Twyzsza(3)) k=2;
  6879  003DB0  0E03               	movlw	3
  6880  003DB2  D9FE               	call	_Twyzsza
  6881  003DB4  E309               	bnc	l604
  6882  003DB6  0E02               	movlw	2
  6883  003DB8  0100               	movlb	__Lparam shr (0+8)
  6884  003DBA  6FF0               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6885  003DBC  D005               	goto	l604
  6886                           ;rgl.c: 2108: l=0;
  6887                           ;rgl.c: 2109: }
  6888  003DBE                     l606:
  6889                           ;rgl.c: 2110: else
  6890  003DBE  0100               	movlb	__Lparam shr (0+8)
  6891  003DC0  6BF0               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6892                           ;rgl.c: 2113: l++;
  6893  003DC2  010F               	movlb	F1645 shr (0+8)
  6894  003DC4  2B25               	incf	F1645& (0+255),f,b
  6895                           ;rgl.c: 2114: }
  6896  003DC6  D002               	goto	l598
  6897  003DC8                     l604:
  6898  003DC8  010F               	movlb	F1645 shr (0+8)
  6899  003DCA  6B25               	clrf	F1645& (0+255),b
  6900  003DCC                     l598:
  6901                           ;rgl.c: 2117: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PW
      +                          M.MDMOD;
  6902  003DCC  C061  F000         	movff	_PWM+5,btemp
  6903  003DD0  6A01               	clrf	btemp+1,c
  6904  003DD2  C059  F002         	movff	_rgl+7,btemp+2
  6905  003DD6  0100               	movlb	__Lparam shr (0+8)
  6906  003DD8  51F0               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6907  003DDA  5C02               	subwf	btemp+2,w,c
  6908  003DDC  6EF6               	movwf	tblptrl,c
  6909  003DDE  6AF7               	clrf	tblptrh,c
  6910  003DE0  B0D8               	btfsc	status,0,c
  6911  003DE2  2AF7               	incf	tblptrh,f,c
  6912  003DE4  AFF0               	btfss	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  6913  003DE6  06F7               	decf	tblptrh,f,c
  6914  003DE8  50F7               	movf	tblptrh,w,c
  6915  003DEA  0A80               	xorlw	128
  6916  003DEC  6E02               	movwf	btemp+2,c
  6917  003DEE  5001               	movf	btemp+1,w,c
  6918  003DF0  0A80               	xorlw	128
  6919  003DF2  5C02               	subwf	btemp+2,w,c
  6920  003DF4  E102               	bnz	u5265
  6921  003DF6  5000               	movf	btemp,w,c
  6922  003DF8  5CF6               	subwf	tblptrl,w,c
  6923  003DFA                     u5265:
  6924  003DFA  E203               	bc	l610
  6925  003DFC  C061  F059         	movff	_PWM+5,_rgl+7
  6926  003E00  D004               	goto	l611
  6927  003E02                     l610:
  6928                           ;rgl.c: 2118: else rgl.srp-=k;
  6929  003E02  0100               	movlb	__Lparam shr (0+8)
  6930  003E04  51F0               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6931  003E06  0100               	movlb	(_rgl+7) shr (0+8)
  6932  003E08  5F59               	subwf	(_rgl+7)& (0+255),f,b
  6933  003E0A                     l611:
  6934                           ;rgl.c: 2119: if(rgl.srp>PWM.MMAXCW) rgl.srp=PWM
      +                          .MMAXCW;
  6935  003E0A  C059  FFE8         	movff	_rgl+7,wreg
  6936  003E0E  0100               	movlb	(_PWM+26) shr (0+8)
  6937  003E10  6176               	cpfslt	(_PWM+26)& (0+255),b
  6938  003E12  D002               	goto	l612
  6939  003E14  C076  F059         	movff	_PWM+26,_rgl+7
  6940  003E18                     l612:
  6941                           ;rgl.c: 2120: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.
      +                          srp;
  6942  003E18  C059  FFE8         	movff	_rgl+7,wreg
  6943  003E1C  0100               	movlb	(_rgl+8) shr (0+8)
  6944  003E1E  615A               	cpfslt	(_rgl+8)& (0+255),b
  6945  003E20  0012               	return	
  6946  003E22  C059  F05A         	movff	_rgl+7,_rgl+8
  6947                           ;rgl.c: 2121: return;
  6948  003E26  0012               	return	
  6949  003E28                     l596:
  6950                           ;rgl.c: 2123: else
  6951  003E28  0100               	movlb	__Lparam shr (0+8)
  6952  003E2A  6BF0               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6953                           ;rgl.c: 2126: if(TFrosnie(0)&&o>=2)
  6954  003E2C  0E00               	movlw	0
  6955  003E2E  D9E2               	call	_TFrosnie
  6956  003E30  E312               	bnc	l615
  6957  003E32  0E01               	movlw	1
  6958  003E34  010F               	movlb	F1647 shr (0+8)
  6959  003E36  6527               	cpfsgt	F1647& (0+255),b
  6960  003E38  D00E               	goto	l615
  6961                           ;rgl.c: 2127: {
  6962  003E3A  6B27               	clrf	F1647& (0+255),b
  6963                           ;rgl.c: 2129: p=0;
  6964  003E3C  010F               	movlb	F1648 shr (0+8)
  6965  003E3E  6B28               	clrf	F1648& (0+255),b
  6966                           ;rgl.c: 2130: l=0;
  6967  003E40  010F               	movlb	F1645 shr (0+8)
  6968  003E42  6B25               	clrf	F1645& (0+255),b
  6969                           ;rgl.c: 2131: m=0;
  6970  003E44  010F               	movlb	F1646 shr (0+8)
  6971  003E46  6B26               	clrf	F1646& (0+255),b
  6972                           ;rgl.c: 2132: k=-3;
  6973  003E48  0EFD               	movlw	253
  6974  003E4A  0100               	movlb	__Lparam shr (0+8)
  6975  003E4C  6FF0               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6976                           ;rgl.c: 2133: if(Trowna()) k=-2;
  6977  003E4E  D9CB               	call	_Trowna	;wreg free
  6978  003E50  E345               	bnc	l617
  6979  003E52  0EFE               	movlw	254
  6980  003E54  D02B               	goto	L16
  6981                           ;rgl.c: 2134: }
  6982  003E56                     l615:
  6983                           ;rgl.c: 2135: else
  6984  003E56  0E00               	movlw	0
  6985  003E58  D9DA               	call	_TFmaleje
  6986  003E5A  E312               	bnc	l618
  6987  003E5C  0E01               	movlw	1
  6988  003E5E  010F               	movlb	F1648 shr (0+8)
  6989  003E60  6528               	cpfsgt	F1648& (0+255),b
  6990  003E62  D00E               	goto	l618
  6991                           ;rgl.c: 2137: {
  6992  003E64  6B28               	clrf	F1648& (0+255),b
  6993                           ;rgl.c: 2139: o=0;
  6994  003E66  010F               	movlb	F1647 shr (0+8)
  6995  003E68  6B27               	clrf	F1647& (0+255),b
  6996                           ;rgl.c: 2140: l=0;
  6997  003E6A  010F               	movlb	F1645 shr (0+8)
  6998  003E6C  6B25               	clrf	F1645& (0+255),b
  6999                           ;rgl.c: 2141: m=0;
  7000  003E6E  010F               	movlb	F1646 shr (0+8)
  7001  003E70  6B26               	clrf	F1646& (0+255),b
  7002                           ;rgl.c: 2142: k=2;
  7003  003E72  0E02               	movlw	2
  7004  003E74  0100               	movlb	__Lparam shr (0+8)
  7005  003E76  6FF0               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  7006                           ;rgl.c: 2143: if(Trowna()) k=1;
  7007  003E78  D9B6               	call	_Trowna	;wreg free
  7008  003E7A  E330               	bnc	l617
  7009  003E7C  0E01               	movlw	1
  7010  003E7E  D016               	goto	L16
  7011                           ;rgl.c: 2144: }
  7012  003E80                     l618:
  7013                           ;rgl.c: 2145: else
  7014  003E80  0E00               	movlw	0
  7015  003E82  D967               	call	_Tmaleje
  7016  003E84  E316               	bnc	l621
  7017  003E86  0E01               	movlw	1
  7018  003E88  010F               	movlb	F1646 shr (0+8)
  7019  003E8A  6526               	cpfsgt	F1646& (0+255),b
  7020  003E8C  D012               	goto	l621
  7021                           ;rgl.c: 2147: {
  7022  003E8E  010F               	movlb	F1648 shr (0+8)
  7023  003E90  6B28               	clrf	F1648& (0+255),b
  7024                           ;rgl.c: 2149: o=0;
  7025  003E92  010F               	movlb	F1647 shr (0+8)
  7026  003E94  6B27               	clrf	F1647& (0+255),b
  7027                           ;rgl.c: 2150: l=0;
  7028  003E96  010F               	movlb	F1645 shr (0+8)
  7029  003E98  6B25               	clrf	F1645& (0+255),b
  7030                           ;rgl.c: 2151: m=0;
  7031  003E9A  010F               	movlb	F1646 shr (0+8)
  7032  003E9C  6B26               	clrf	F1646& (0+255),b
  7033                           ;rgl.c: 2152: k=2;
  7034  003E9E  0E02               	movlw	2
  7035  003EA0  0100               	movlb	__Lparam shr (0+8)
  7036  003EA2  6FF0               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  7037                           ;rgl.c: 2153: if(Tnizsza(0)) k=3;
  7038  003EA4  0E00               	movlw	0
  7039  003EA6  D977               	call	_Tnizsza
  7040  003EA8  E319               	bnc	l617
  7041  003EAA  0E03               	movlw	3
  7042  003EAC                     L16:
  7043  003EAC  0100               	movlb	__Lparam shr (0+8)
  7044  003EAE  6FF0               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  7045                           ;rgl.c: 2154: }
  7046  003EB0  D015               	goto	l617
  7047  003EB2                     l621:
  7048                           ;rgl.c: 2155: else
  7049  003EB2  0E01               	movlw	1
  7050  003EB4  D970               	call	_Tnizsza
  7051  003EB6  E310               	bnc	l624
  7052                           ;rgl.c: 2157: {
  7053  003EB8  D967               	call	_Tstoi	;wreg free
  7054  003EBA  E310               	bnc	l617
  7055  003EBC  D9C3               	call	_TFstoi	;wreg free
  7056  003EBE  E30E               	bnc	l617
  7057                           ;rgl.c: 2159: {
  7058  003EC0  0E02               	movlw	2
  7059  003EC2  010F               	movlb	F1645 shr (0+8)
  7060  003EC4  6525               	cpfsgt	F1645& (0+255),b
  7061  003EC6  D003               	goto	l626
  7062                           ;rgl.c: 2161: {
  7063  003EC8  0100               	movlb	__Lparam shr (0+8)
  7064  003ECA  6FF0               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  7065  003ECC  D005               	goto	l624
  7066                           ;rgl.c: 2163: l=0;
  7067                           ;rgl.c: 2164: }
  7068  003ECE                     l626:
  7069                           ;rgl.c: 2165: else
  7070  003ECE  0100               	movlb	__Lparam shr (0+8)
  7071  003ED0  6BF0               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  7072                           ;rgl.c: 2168: l++;
  7073  003ED2  010F               	movlb	F1645 shr (0+8)
  7074  003ED4  2B25               	incf	F1645& (0+255),f,b
  7075                           ;rgl.c: 2169: }
  7076  003ED6  D002               	goto	l617
  7077  003ED8                     l624:
  7078  003ED8  010F               	movlb	F1645 shr (0+8)
  7079  003EDA  6B25               	clrf	F1645& (0+255),b
  7080  003EDC                     l617:
  7081                           ;rgl.c: 2172: if(PWM.MMAXCW>PWM.MGMOD)
  7082  003EDC  C076  FFE8         	movff	_PWM+26,wreg
  7083  003EE0  0100               	movlb	(_PWM+6) shr (0+8)
  7084  003EE2  6162               	cpfslt	(_PWM+6)& (0+255),b
  7085  003EE4  D01A               	goto	l629
  7086                           ;rgl.c: 2173: {
  7087  003EE6  C059  FFE8         	movff	_rgl+7,wreg
  7088  003EEA  0100               	movlb	__Lparam shr (0+8)
  7089  003EEC  25F0               	addwf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  7090  003EEE  6E02               	movwf	btemp+2,c
  7091  003EF0  6A03               	clrf	btemp+3,c
  7092  003EF2  B0D8               	btfsc	status,0,c
  7093  003EF4  2A03               	incf	btemp+3,f,c
  7094  003EF6  BFF0               	btfsc	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  7095  003EF8  0603               	decf	btemp+3,f,c
  7096  003EFA  C062  F000         	movff	_PWM+6,btemp
  7097  003EFE  6A01               	clrf	btemp+1,c
  7098  003F00  5001               	movf	btemp+1,w,c
  7099  003F02  0A80               	xorlw	128
  7100  003F04  6E04               	movwf	btemp+4,c
  7101  003F06  5003               	movf	btemp+3,w,c
  7102  003F08  0A80               	xorlw	128
  7103  003F0A  5C04               	subwf	btemp+4,w,c
  7104  003F0C  E102               	bnz	u5475
  7105  003F0E  5002               	movf	btemp+2,w,c
  7106  003F10  5C00               	subwf	btemp,w,c
  7107  003F12                     u5475:
  7108  003F12  E21D               	bc	l633
  7109  003F14  C062  F059         	movff	_PWM+6,_rgl+7
  7110  003F18  D01E               	goto	l632
  7111                           ;rgl.c: 2175: else rgl.srp+=k;
  7112                           ;rgl.c: 2176: }
  7113  003F1A                     l629:
  7114                           ;rgl.c: 2177: else
  7115  003F1A  C059  FFE8         	movff	_rgl+7,wreg
  7116  003F1E  0100               	movlb	__Lparam shr (0+8)
  7117  003F20  25F0               	addwf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  7118  003F22  6E02               	movwf	btemp+2,c
  7119  003F24  6A03               	clrf	btemp+3,c
  7120  003F26  B0D8               	btfsc	status,0,c
  7121  003F28  2A03               	incf	btemp+3,f,c
  7122  003F2A  BFF0               	btfsc	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  7123  003F2C  0603               	decf	btemp+3,f,c
  7124  003F2E  C076  F000         	movff	_PWM+26,btemp
  7125  003F32  6A01               	clrf	btemp+1,c
  7126  003F34  5001               	movf	btemp+1,w,c
  7127  003F36  0A80               	xorlw	128
  7128  003F38  6E04               	movwf	btemp+4,c
  7129  003F3A  5003               	movf	btemp+3,w,c
  7130  003F3C  0A80               	xorlw	128
  7131  003F3E  5C04               	subwf	btemp+4,w,c
  7132  003F40  E102               	bnz	u5485
  7133  003F42  5002               	movf	btemp+2,w,c
  7134  003F44  5C00               	subwf	btemp,w,c
  7135  003F46                     u5485:
  7136  003F46  E203               	bc	l633
  7137  003F48  C076  F059         	movff	_PWM+26,_rgl+7
  7138  003F4C  D004               	goto	l632
  7139  003F4E                     l633:
  7140                           ;rgl.c: 2180: else rgl.srp+=k;
  7141  003F4E  0100               	movlb	__Lparam shr (0+8)
  7142  003F50  51F0               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  7143  003F52  0100               	movlb	(_rgl+7) shr (0+8)
  7144  003F54  2759               	addwf	(_rgl+7)& (0+255),f,b
  7145  003F56                     l632:
  7146                           ;rgl.c: 2181: }
  7147  003F56  C059  FFE8         	movff	_rgl+7,wreg
  7148  003F5A  0100               	movlb	(_rgl+8) shr (0+8)
  7149  003F5C  615A               	cpfslt	(_rgl+8)& (0+255),b
  7150  003F5E  0012               	return	
  7151  003F60  C059  F05A         	movff	_rgl+7,_rgl+8
  7152                           ;rgl.c: 2183: return;
  7153  003F64  0012               	return	
  7154                           ;rgl.c: 2184: }
  7155  003F66                     __end_of_ModPruCW2:
  7156                           ;rgl.c: 2190: void IncMaxCW2(void)
  7157                           ;rgl.c: 2191: {
  7158  003F66                     _IncMaxCW2:
  7159  000000                     
  7160                           ;rgl.c: 2192: unsigned char k;
  7161  003F66  0100               	movlb	_rgl shr (0+8)
  7162  003F68  A552               	btfss	_rgl& (0+255),2,b
  7163  003F6A  D014               	goto	l637
  7164                           ;rgl.c: 2196: {
  7165  003F6C  C076  FFE8         	movff	_PWM+26,wreg
  7166  003F70  0100               	movlb	(_PWM+6) shr (0+8)
  7167  003F72  6162               	cpfslt	(_PWM+6)& (0+255),b
  7168  003F74  D007               	goto	l638
  7169                           ;rgl.c: 2198: {
  7170  003F76  C05A  FFE8         	movff	_rgl+8,wreg
  7171  003F7A  6162               	cpfslt	(_PWM+6)& (0+255),b
  7172  003F7C  0012               	return	
  7173  003F7E  C062  F05A         	movff	_PWM+6,_rgl+8
  7174                           ;rgl.c: 2200: }
  7175  003F82  0012               	return	
  7176  003F84                     l638:
  7177                           ;rgl.c: 2201: else
  7178  003F84  C05A  FFE8         	movff	_rgl+8,wreg
  7179  003F88  0100               	movlb	(_PWM+26) shr (0+8)
  7180  003F8A  6176               	cpfslt	(_PWM+26)& (0+255),b
  7181  003F8C  0012               	return	
  7182  003F8E  C076  F05A         	movff	_PWM+26,_rgl+8
  7183                           ;rgl.c: 2204: }
  7184  003F92  0012               	return	
  7185  003F94                     l637:
  7186                           ;rgl.c: 2206: }
  7187  003F94  0E01               	movlw	1
  7188  003F96  D8D0               	call	_Trosnie
  7189  003F98  B0D8               	btfsc	status,0,c
  7190  003F9A  0012               	return	
  7191  003F9C  0E01               	movlw	1
  7192  003F9E  D92A               	call	_TFrosnie
  7193  003FA0  B0D8               	btfsc	status,0,c
  7194  003FA2  0012               	return	
  7195                           ;rgl.c: 2209: k=5;
  7196  003FA4  0E05               	movlw	5
  7197  003FA6  6ED9               	movwf	fsr2l,c
  7198                           ;rgl.c: 2210: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
  7199  003FA8  C05A  F000         	movff	_rgl+8,btemp
  7200  003FAC  6A01               	clrf	btemp+1,c
  7201  003FAE  2600               	addwf	btemp,f,c
  7202  003FB0  0E00               	movlw	0
  7203  003FB2  2201               	addwfc	btemp+1,f,c
  7204  003FB4  5001               	movf	btemp+1,w,c
  7205  003FB6  0A80               	xorlw	128
  7206  003FB8  0F80               	addlw	-128
  7207  003FBA  0EF1               	movlw	241
  7208  003FBC  B4D8               	btfsc	status,2,c
  7209  003FBE  5C00               	subwf	btemp,w,c
  7210  003FC0  E304               	bnc	l643
  7211  003FC2  0EF0               	movlw	-16
  7212  003FC4  CFE8 F05A          	movff	wreg,_rgl+8
  7213  003FC8  D003               	goto	l644
  7214  003FCA                     l643:
  7215                           ;rgl.c: 2211: else rgl.xmod+=k;
  7216  003FCA  0100               	movlb	(_rgl+8) shr (0+8)
  7217  003FCC  0E05               	movlw	5
  7218  003FCE  275A               	addwf	(_rgl+8)& (0+255),f,b
  7219  003FD0                     l644:
  7220                           ;rgl.c: 2212: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=P
      +                          WM.MMAXCW;
  7221  003FD0  C05A  FFE8         	movff	_rgl+8,wreg
  7222  003FD4  0100               	movlb	(_PWM+26) shr (0+8)
  7223  003FD6  6176               	cpfslt	(_PWM+26)& (0+255),b
  7224  003FD8  0012               	return	
  7225  003FDA  C076  F05A         	movff	_PWM+26,_rgl+8
  7226                           ;rgl.c: 2213: }
  7227  003FDE  0012               	return	
  7228  003FE0                     __end_of_IncMaxCW2:
  7229                           ;rgl.c: 2216: void ModPrzCW2(void)
  7230                           ;rgl.c: 2217: {
  7231  003FE0                     _ModPrzCW2:
  7232  000000                     
  7233                           ;rgl.c: 2218: if(!rgl.nmod)
  7234  003FE0  0100               	movlb	_rgl shr (0+8)
  7235  003FE2  BB52               	btfsc	_rgl& (0+255),5,b
  7236  003FE4  D00B               	goto	l647
  7237                           ;rgl.c: 2219: {
  7238  003FE6  0E00               	movlw	0
  7239  003FE8  D8B4               	call	_Tmaleje
  7240  003FEA  B0D8               	btfsc	status,0,c
  7241  003FEC  0012               	return	
  7242  003FEE  0E03               	movlw	3
  7243  003FF0  D8DF               	call	_Twyzsza
  7244  003FF2  A0D8               	btfss	status,0,c
  7245  003FF4  0012               	return	
  7246                           ;rgl.c: 2221: {
  7247  003FF6  0100               	movlb	_rgl shr (0+8)
  7248  003FF8  8B52               	bsf	_rgl& (0+255),5,b
  7249                           ;rgl.c: 2223: }
  7250  003FFA  0012               	return	
  7251  003FFC                     l647:
  7252                           ;rgl.c: 2225: else
  7253  003FFC  0E03               	movlw	3
  7254  003FFE  D8D8               	call	_Twyzsza
  7255  004000  B0D8               	btfsc	status,0,c
  7256  004002  0012               	return	
  7257                           ;rgl.c: 2228: {
  7258  004004  0E00               	movlw	0
  7259  004006  D8A5               	call	_Tmaleje
  7260  004008  E302               	bnc	l651
  7261  00400A  0100               	movlb	_rgl shr (0+8)
  7262  00400C  9B52               	bcf	_rgl& (0+255),5,b
  7263  00400E                     l651:
  7264                           ;rgl.c: 2230: if(Tstoi()&&TFmaleje(0)) rgl.nmod=
      +                          0;
  7265  00400E  D8BC               	call	_Tstoi	;wreg free
  7266  004010  E305               	bnc	l652
  7267  004012  0E00               	movlw	0
  7268  004014  D8FC               	call	_TFmaleje
  7269  004016  E302               	bnc	l652
  7270  004018  0100               	movlb	_rgl shr (0+8)
  7271  00401A  9B52               	bcf	_rgl& (0+255),5,b
  7272  00401C                     l652:
  7273                           ;rgl.c: 2231: if(Tnizsza(3)) rgl.nmod=0;
  7274  00401C  0E03               	movlw	3
  7275  00401E  D8BB               	call	_Tnizsza
  7276  004020  A0D8               	btfss	status,0,c
  7277  004022  0012               	return	
  7278  004024  0100               	movlb	_rgl shr (0+8)
  7279  004026  9B52               	bcf	_rgl& (0+255),5,b
  7280                           ;rgl.c: 2232: }
  7281  004028  0012               	return	
  7282  00402A                     __end_of_ModPrzCW2:
  7283                           ;rgl.c: 2237: void PropCO2(void)
  7284                           ;rgl.c: 2238: {
  7285  00402A                     _PropCO2:
  7286  000000                     
  7287                           ;rgl.c: 2239: if(!rgl.nmod)
  7288  00402A  0100               	movlb	_rgl shr (0+8)
  7289  00402C  BB52               	btfsc	_rgl& (0+255),5,b
  7290  00402E  D034               	goto	l655
  7291                           ;rgl.c: 2240: {
  7292  004030  C055  FFE8         	movff	_rgl+3,wreg
  7293  004034  0A03               	xorlw	3
  7294  004036  E108               	bnz	l656
  7295                           ;rgl.c: 2242: {
  7296  004038  C05B  FFE8         	movff	_rgl+9,wreg
  7297  00403C  0100               	movlb	(_PWM+6) shr (0+8)
  7298  00403E  6162               	cpfslt	(_PWM+6)& (0+255),b
  7299  004040  D027               	goto	l658
  7300                           ;rgl.c: 2244: rgl.tmp_pwm=PWM.MGMOD;
  7301  004042  C062  F05B         	movff	_PWM+6,_rgl+9
  7302                           ;rgl.c: 2245: }
  7303  004046  D024               	goto	l658
  7304  004048                     l656:
  7305                           ;rgl.c: 2246: else
  7306  004048  C055  FFE8         	movff	_rgl+3,wreg
  7307  00404C  0A02               	xorlw	2
  7308  00404E  E108               	bnz	l659
  7309                           ;rgl.c: 2248: {
  7310  004050  C05B  FFE8         	movff	_rgl+9,wreg
  7311  004054  0100               	movlb	(_PWM+21) shr (0+8)
  7312  004056  6171               	cpfslt	(_PWM+21)& (0+255),b
  7313  004058  D01B               	goto	l658
  7314                           ;rgl.c: 2250: rgl.tmp_pwm=PWM.PROP1;
  7315  00405A  C071  F05B         	movff	_PWM+21,_rgl+9
  7316                           ;rgl.c: 2251: }
  7317  00405E  D018               	goto	l658
  7318  004060                     l659:
  7319                           ;rgl.c: 2252: else
  7320  004060  C055  F000         	movff	_rgl+3,btemp
  7321  004064  0400               	decf	btemp,w,c
  7322  004066  E108               	bnz	l662
  7323                           ;rgl.c: 2254: {
  7324  004068  C05B  FFE8         	movff	_rgl+9,wreg
  7325  00406C  0100               	movlb	(_PWM+22) shr (0+8)
  7326  00406E  6172               	cpfslt	(_PWM+22)& (0+255),b
  7327  004070  D00F               	goto	l658
  7328                           ;rgl.c: 2256: rgl.tmp_pwm=PWM.PROP2;
  7329  004072  C072  F05B         	movff	_PWM+22,_rgl+9
  7330                           ;rgl.c: 2257: }
  7331  004076  D00C               	goto	l658
  7332  004078                     l662:
  7333                           ;rgl.c: 2258: else
  7334  004078  C055  FFE8         	movff	_rgl+3,wreg
  7335  00407C  0A80               	xorlw	128
  7336  00407E  0F7F               	addlw	-129
  7337  004080  E207               	bc	l658
  7338                           ;rgl.c: 2260: {
  7339  004082  C05B  FFE8         	movff	_rgl+9,wreg
  7340  004086  0100               	movlb	(_PWM+23) shr (0+8)
  7341  004088  6173               	cpfslt	(_PWM+23)& (0+255),b
  7342  00408A  D002               	goto	l658
  7343                           ;rgl.c: 2262: rgl.tmp_pwm=PWM.PROP3;
  7344  00408C  C073  F05B         	movff	_PWM+23,_rgl+9
  7345  004090                     l658:
  7346                           ;rgl.c: 2263: }
  7347  004090  C05B  FFE8         	movff	_rgl+9,wreg
  7348  004094  EF97  F03E         	goto	_WriteOPWM
  7349                           ;rgl.c: 2266: }
  7350  004098                     l655:
  7351                           ;rgl.c: 2267: else WriteOPWM(PWM.MDMOD);
  7352  004098  C061  FFE8         	movff	_PWM+5,wreg
  7353  00409C  EF97  F03E         	goto	_WriteOPWM
  7354                           ;rgl.c: 2268: }
  7355  0040A0                     __end_of_PropCO2:
  7356                           ;rgl.c: 2278: void ModToCW3(void)
  7357                           ;rgl.c: 2279: {
  7358  0040A0                     _ModToCW3:
  7359  000000                     
  7360                           ;rgl.c: 2280: rgl.btcw=1;
  7361  0040A0  0100               	movlb	_rgl shr (0+8)
  7362  0040A2  8352               	bsf	_rgl& (0+255),1,b
  7363                           ;rgl.c: 2281: if(rgl.btco)
  7364  0040A4  A152               	btfss	_rgl& (0+255),0,b
  7365  0040A6  0012               	return	
  7366                           ;rgl.c: 2282: {
  7367  0040A8  9152               	bcf	_rgl& (0+255),0,b
  7368                           ;rgl.c: 2285: if(!Tnizsza(0))
  7369  0040AA  0E00               	movlw	0
  7370  0040AC  D874               	call	_Tnizsza
  7371  0040AE  B0D8               	btfsc	status,0,c
  7372  0040B0  0012               	return	
  7373                           ;rgl.c: 2286: {
  7374  0040B2  C061  F000         	movff	_PWM+5,btemp
  7375  0040B6  6A01               	clrf	btemp+1,c
  7376  0040B8  C059  F002         	movff	_rgl+7,btemp+2
  7377  0040BC  0EF6               	movlw	246
  7378  0040BE  2402               	addwf	btemp+2,w,c
  7379  0040C0  6EF6               	movwf	tblptrl,c
  7380  0040C2  6AF7               	clrf	tblptrh,c
  7381  0040C4  0EFF               	movlw	255
  7382  0040C6  22F7               	addwfc	tblptrh,f,c
  7383  0040C8  50F7               	movf	tblptrh,w,c
  7384  0040CA  0A80               	xorlw	128
  7385  0040CC  6E02               	movwf	btemp+2,c
  7386  0040CE  5001               	movf	btemp+1,w,c
  7387  0040D0  0A80               	xorlw	128
  7388  0040D2  5C02               	subwf	btemp+2,w,c
  7389  0040D4  E102               	bnz	u5805
  7390  0040D6  5000               	movf	btemp,w,c
  7391  0040D8  5CF6               	subwf	tblptrl,w,c
  7392  0040DA                     u5805:
  7393  0040DA  E203               	bc	l671
  7394  0040DC  C061  F059         	movff	_PWM+5,_rgl+7
  7395  0040E0  0012               	return	
  7396  0040E2                     l671:
  7397                           ;rgl.c: 2288: else rgl.srp-=10;
  7398  0040E2  0100               	movlb	(_rgl+7) shr (0+8)
  7399  0040E4  0EF6               	movlw	-10
  7400  0040E6  2759               	addwf	(_rgl+7)& (0+255),f,b
  7401                           ;rgl.c: 2289: }
  7402  0040E8  0CF6               	retlw	246
  7403  0040EA                     __end_of_ModToCW3:
  7404                           ;rgl.c: 2294: void ModToCO3(void)
  7405                           ;rgl.c: 2295: {
  7406  0040EA                     _ModToCO3:
  7407  000000                     
  7408                           ;rgl.c: 2296: rgl.btco=1;
  7409  0040EA  0100               	movlb	_rgl shr (0+8)
  7410  0040EC  8152               	bsf	_rgl& (0+255),0,b
  7411                           ;rgl.c: 2297: rgl.btcw=0;
  7412  0040EE  9352               	bcf	_rgl& (0+255),1,b
  7413                           ;rgl.c: 2298: }
  7414  0040F0  0012               	return	
  7415  0040F2                     __end_of_ModToCO3:
  7416                           ;rgl.c: 2301: void StartMCO3(void)
  7417                           ;rgl.c: 2302: {
  7418  0040F2                     _StartMCO3:
  7419  000000                     
  7420                           ;rgl.c: 2303: if(rgl.btco||rgl.btcw) return;
  7421  0040F2  0100               	movlb	_rgl shr (0+8)
  7422  0040F4  A152               	btfss	_rgl& (0+255),0,b
  7423  0040F6  B352               	btfsc	_rgl& (0+255),1,b
  7424  0040F8  0012               	return	
  7425                           ;rgl.c: 2304: StartRTdS(3);
  7426  0040FA  0E03               	movlw	3
  7427  0040FC  EC16  F045         	call	_StartRTdS
  7428                           ;rgl.c: 2305: DtCO.dDCO=0;
  7429  004100  0101               	movlb	(_DtCO+9) shr (0+8)
  7430  004102  6B46               	clrf	(_DtCO+9)& (0+255),b
  7431                           ;rgl.c: 2306: DtCO.indCO=0;
  7432  004104  0101               	movlb	(_DtCO+10) shr (0+8)
  7433  004106  6B47               	clrf	(_DtCO+10)& (0+255),b
  7434                           ;rgl.c: 2307: rgl.fz=0;
  7435  004108  0100               	movlb	_rgl shr (0+8)
  7436  00410A  9552               	bcf	_rgl& (0+255),2,b
  7437                           ;rgl.c: 2308: rgl.med_up=0;
  7438  00410C  9752               	bcf	_rgl& (0+255),3,b
  7439                           ;rgl.c: 2309: rgl.fast_up=0;
  7440  00410E  9952               	bcf	_rgl& (0+255),4,b
  7441                           ;rgl.c: 2311: if(PWM.MAXPWM>PWM.FIRSTPB)
  7442  004110  C078  FFE8         	movff	_PWM+28,wreg
  7443  004114  0100               	movlb	(_PWM+20) shr (0+8)
  7444  004116  6170               	cpfslt	(_PWM+20)& (0+255),b
  7445  004118  D003               	goto	l676
  7446                           ;rgl.c: 2312: {
  7447  00411A  C070  F05A         	movff	_PWM+20,_rgl+8
  7448                           ;rgl.c: 2314: }
  7449  00411E  D002               	goto	l677
  7450  004120                     l676:
  7451                           ;rgl.c: 2315: else
  7452  004120  C078  F05A         	movff	_PWM+28,_rgl+8
  7453  004124                     l677:
  7454                           ;rgl.c: 2318: }
  7455  004124  0100               	movlb	(_rgl+7) shr (0+8)
  7456  004126  6B59               	clrf	(_rgl+7)& (0+255),b
  7457                           ;rgl.c: 2320: rgl.ytmp=0;
  7458  004128  6B58               	clrf	(_rgl+6)& (0+255),b
  7459                           ;rgl.c: 2321: rgl.nmod=0;
  7460  00412A  9B52               	bcf	_rgl& (0+255),5,b
  7461                           ;rgl.c: 2322: rgl.btcw=0;
  7462  00412C  9352               	bcf	_rgl& (0+255),1,b
  7463                           ;rgl.c: 2323: rgl.btco=1;
  7464  00412E  8152               	bsf	_rgl& (0+255),0,b
  7465                           ;rgl.c: 2324: rgl.del1s=0;
  7466  004130  9D52               	bcf	_rgl& (0+255),6,b
  7467                           ;rgl.c: 2325: rgl.deln1=0;
  7468  004132  9F52               	bcf	_rgl& (0+255),7,b
  7469                           ;rgl.c: 2326: rgl.inv_mod=0;
  7470  004134  9153               	bcf	(_rgl+1)& (0+255),0,b
  7471                           ;rgl.c: 2327: }
  7472  004136  0012               	return	
  7473  004138                     __end_of_StartMCO3:
  7474                           ;rgl.c: 2337: bit Trosnie(const unsigned char t)
  7475                           ;rgl.c: 2338: {
  7476  004138                     _Trosnie:
  7477  000000                     
  7478                           ; _t loaded to fsr2l
  7479  004138  6ED9               	movwf	fsr2l,c
  7480                           ;rgl.c: 2339: return (rgl.x_dt>t);
  7481  00413A  C056  F000         	movff	_rgl+4,btemp
  7482  00413E  50D9               	movf	fsr2l,w,c
  7483  004140  BE00               	btfsc	btemp,7,c
  7484  004142  D005               	goto	u5850
  7485  004144  0AFF               	xorlw	255
  7486  004146  2400               	addwf	btemp,w,c
  7487  004148  E302               	bnc	u5850
  7488  00414A  80D8               	bsf	status,0,c
  7489  00414C  0012               	return	
  7490  00414E                     u5850:
  7491  00414E  90D8               	bcf	status,0,c
  7492  004150  0012               	return	
  7493                           ;rgl.c: 2340: }
  7494  004152                     __end_of_Trosnie:
  7495                           ;rgl.c: 2346: bit Tmaleje(const unsigned char t)
  7496                           ;rgl.c: 2347: {
  7497  004152                     _Tmaleje:
  7498  000000                     
  7499                           ; _t loaded to fsr2l
  7500  004152  6ED9               	movwf	fsr2l,c
  7501                           ;rgl.c: 2348: return (rgl.x_dt<(-1*t));
  7502  004154  CFD9 F000          	movff	fsr2l,btemp
  7503  004158  6A01               	clrf	btemp+1,c
  7504  00415A  1E00               	comf	btemp,f,c
  7505  00415C  1E01               	comf	btemp+1,f,c
  7506  00415E  4A00               	infsnz	btemp,f,c
  7507  004160  2A01               	incf	btemp+1,f,c
  7508  004162  C056  F002         	movff	_rgl+4,btemp+2
  7509  004166  6A03               	clrf	btemp+3,c
  7510  004168  BE02               	btfsc	btemp+2,7,c
  7511  00416A  0603               	decf	btemp+3,f,c
  7512  00416C  5003               	movf	btemp+3,w,c
  7513  00416E  0A80               	xorlw	128
  7514  004170  6E04               	movwf	btemp+4,c
  7515  004172  5001               	movf	btemp+1,w,c
  7516  004174  0A80               	xorlw	128
  7517  004176  5C04               	subwf	btemp+4,w,c
  7518  004178  E102               	bnz	u5875
  7519  00417A  5000               	movf	btemp,w,c
  7520  00417C  5C02               	subwf	btemp+2,w,c
  7521  00417E                     u5875:
  7522  00417E  E202               	bc	u5870
  7523  004180  80D8               	bsf	status,0,c
  7524  004182  0012               	return	
  7525  004184                     u5870:
  7526  004184  90D8               	bcf	status,0,c
  7527  004186  0012               	return	
  7528                           ;rgl.c: 2349: }
  7529  004188                     __end_of_Tmaleje:
  7530                           ;rgl.c: 2353: bit Tstoi(void)
  7531                           ;rgl.c: 2354: {
  7532  004188                     _Tstoi:
  7533  000000                     
  7534                           ;rgl.c: 2355: return !rgl.x_dt;
  7535  004188  EE00  F056         	lfsr	0,_rgl+4
  7536  00418C  50EF               	movf	indf0,w,c
  7537  00418E  90D8               	bcf	status,0,c
  7538  004190  B4D8               	btfsc	status,2,c
  7539  004192  80D8               	bsf	status,0,c
  7540  004194  0012               	return	
  7541                           ;rgl.c: 2356: }
  7542  004196                     __end_of_Tstoi:
  7543                           ;rgl.c: 2363: bit Tnizsza(const unsigned char t)
  7544                           ;rgl.c: 2364: {
  7545  004196                     _Tnizsza:
  7546  000000                     
  7547                           ; _t loaded to fsr2l
  7548  004196  6ED9               	movwf	fsr2l,c
  7549                           ;rgl.c: 2365: return (rgl.x_t>t);
  7550  004198  C054  F000         	movff	_rgl+2,btemp
  7551  00419C  50D9               	movf	fsr2l,w,c
  7552  00419E  BE00               	btfsc	btemp,7,c
  7553  0041A0  D005               	goto	u5890
  7554  0041A2  0AFF               	xorlw	255
  7555  0041A4  2400               	addwf	btemp,w,c
  7556  0041A6  E302               	bnc	u5890
  7557  0041A8  80D8               	bsf	status,0,c
  7558  0041AA  0012               	return	
  7559  0041AC                     u5890:
  7560  0041AC  90D8               	bcf	status,0,c
  7561  0041AE  0012               	return	
  7562                           ;rgl.c: 2366: }
  7563  0041B0                     __end_of_Tnizsza:
  7564                           ;rgl.c: 2372: bit Twyzsza(const unsigned char t)
  7565                           ;rgl.c: 2373: {
  7566  0041B0                     _Twyzsza:
  7567  000000                     
  7568                           ; _t loaded to fsr2l
  7569  0041B0  6ED9               	movwf	fsr2l,c
  7570                           ;rgl.c: 2374: return (rgl.x_t<(-1*t));
  7571  0041B2  CFD9 F000          	movff	fsr2l,btemp
  7572  0041B6  6A01               	clrf	btemp+1,c
  7573  0041B8  1E00               	comf	btemp,f,c
  7574  0041BA  1E01               	comf	btemp+1,f,c
  7575  0041BC  4A00               	infsnz	btemp,f,c
  7576  0041BE  2A01               	incf	btemp+1,f,c
  7577  0041C0  C054  F002         	movff	_rgl+2,btemp+2
  7578  0041C4  6A03               	clrf	btemp+3,c
  7579  0041C6  BE02               	btfsc	btemp+2,7,c
  7580  0041C8  0603               	decf	btemp+3,f,c
  7581  0041CA  5003               	movf	btemp+3,w,c
  7582  0041CC  0A80               	xorlw	128
  7583  0041CE  6E04               	movwf	btemp+4,c
  7584  0041D0  5001               	movf	btemp+1,w,c
  7585  0041D2  0A80               	xorlw	128
  7586  0041D4  5C04               	subwf	btemp+4,w,c
  7587  0041D6  E102               	bnz	u5915
  7588  0041D8  5000               	movf	btemp,w,c
  7589  0041DA  5C02               	subwf	btemp+2,w,c
  7590  0041DC                     u5915:
  7591  0041DC  E202               	bc	u5910
  7592  0041DE  80D8               	bsf	status,0,c
  7593  0041E0  0012               	return	
  7594  0041E2                     u5910:
  7595  0041E2  90D8               	bcf	status,0,c
  7596  0041E4  0012               	return	
  7597                           ;rgl.c: 2375: }
  7598  0041E6                     __end_of_Twyzsza:
  7599                           ;rgl.c: 2379: bit Trowna(void)
  7600                           ;rgl.c: 2380: {
  7601  0041E6                     _Trowna:
  7602  000000                     
  7603                           ;rgl.c: 2381: return !rgl.x_t;
  7604  0041E6  EE00  F054         	lfsr	0,_rgl+2
  7605  0041EA  50EF               	movf	indf0,w,c
  7606  0041EC  90D8               	bcf	status,0,c
  7607  0041EE  B4D8               	btfsc	status,2,c
  7608  0041F0  80D8               	bsf	status,0,c
  7609  0041F2  0012               	return	
  7610                           ;rgl.c: 2382: }
  7611  0041F4                     __end_of_Trowna:
  7612                           ;rgl.c: 2388: bit TFrosnie(const unsigned char t
      +                          )
  7613                           ;rgl.c: 2389: {
  7614  0041F4                     _TFrosnie:
  7615  000000                     
  7616                           ; _t loaded to fsr2l
  7617  0041F4  6ED9               	movwf	fsr2l,c
  7618                           ;rgl.c: 2390: return (rgl.x_df>t);
  7619  0041F6  C057  F000         	movff	_rgl+5,btemp
  7620  0041FA  50D9               	movf	fsr2l,w,c
  7621  0041FC  BE00               	btfsc	btemp,7,c
  7622  0041FE  D005               	goto	u5930
  7623  004200  0AFF               	xorlw	255
  7624  004202  2400               	addwf	btemp,w,c
  7625  004204  E302               	bnc	u5930
  7626  004206  80D8               	bsf	status,0,c
  7627  004208  0012               	return	
  7628  00420A                     u5930:
  7629  00420A  90D8               	bcf	status,0,c
  7630  00420C  0012               	return	
  7631                           ;rgl.c: 2391: }
  7632  00420E                     __end_of_TFrosnie:
  7633                           ;rgl.c: 2397: bit TFmaleje(const unsigned char t
      +                          )
  7634                           ;rgl.c: 2398: {
  7635  00420E                     _TFmaleje:
  7636  000000                     
  7637                           ; _t loaded to fsr2l
  7638  00420E  6ED9               	movwf	fsr2l,c
  7639                           ;rgl.c: 2399: return (rgl.x_df<(-1*t));
  7640  004210  CFD9 F000          	movff	fsr2l,btemp
  7641  004214  6A01               	clrf	btemp+1,c
  7642  004216  1E00               	comf	btemp,f,c
  7643  004218  1E01               	comf	btemp+1,f,c
  7644  00421A  4A00               	infsnz	btemp,f,c
  7645  00421C  2A01               	incf	btemp+1,f,c
  7646  00421E  C057  F002         	movff	_rgl+5,btemp+2
  7647  004222  6A03               	clrf	btemp+3,c
  7648  004224  BE02               	btfsc	btemp+2,7,c
  7649  004226  0603               	decf	btemp+3,f,c
  7650  004228  5003               	movf	btemp+3,w,c
  7651  00422A  0A80               	xorlw	128
  7652  00422C  6E04               	movwf	btemp+4,c
  7653  00422E  5001               	movf	btemp+1,w,c
  7654  004230  0A80               	xorlw	128
  7655  004232  5C04               	subwf	btemp+4,w,c
  7656  004234  E102               	bnz	u5955
  7657  004236  5000               	movf	btemp,w,c
  7658  004238  5C02               	subwf	btemp+2,w,c
  7659  00423A                     u5955:
  7660  00423A  E202               	bc	u5950
  7661  00423C  80D8               	bsf	status,0,c
  7662  00423E  0012               	return	
  7663  004240                     u5950:
  7664  004240  90D8               	bcf	status,0,c
  7665  004242  0012               	return	
  7666                           ;rgl.c: 2400: }
  7667  004244                     __end_of_TFmaleje:
  7668                           ;rgl.c: 2404: bit TFstoi(void)
  7669                           ;rgl.c: 2405: {
  7670  004244                     _TFstoi:
  7671  000000                     
  7672                           ;rgl.c: 2406: return !rgl.x_df;
  7673  004244  EE00  F057         	lfsr	0,_rgl+5
  7674  004248  50EF               	movf	indf0,w,c
  7675  00424A  90D8               	bcf	status,0,c
  7676  00424C  B4D8               	btfsc	status,2,c
  7677  00424E  80D8               	bsf	status,0,c
  7678  004250  0012               	return	
  7679                           ;rgl.c: 2407: }
  7680  004252                     __end_of_TFstoi:
  7681                           ;rgl.c: 2410: void RestartMod(void)
  7682                           ;rgl.c: 2411: {
  7683  004252                     _RestartMod:
  7684  000000                     
  7685                           ;rgl.c: 2412: rgl.btco=0;
  7686  004252  0100               	movlb	_rgl shr (0+8)
  7687  004254  9152               	bcf	_rgl& (0+255),0,b
  7688                           ;rgl.c: 2413: rgl.btcw=0;
  7689  004256  9352               	bcf	_rgl& (0+255),1,b
  7690                           ;rgl.c: 2414: rgl.fz=0;
  7691  004258  9552               	bcf	_rgl& (0+255),2,b
  7692                           ;rgl.c: 2415: rgl.med_up=0;
  7693  00425A  9752               	bcf	_rgl& (0+255),3,b
  7694                           ;rgl.c: 2416: rgl.fast_up=0;
  7695  00425C  9952               	bcf	_rgl& (0+255),4,b
  7696                           ;rgl.c: 2417: rgl.nmod=0;
  7697  00425E  9B52               	bcf	_rgl& (0+255),5,b
  7698                           ;rgl.c: 2418: rgl.del1s=0;
  7699  004260  9D52               	bcf	_rgl& (0+255),6,b
  7700                           ;rgl.c: 2419: rgl.deln1=0;
  7701  004262  9F52               	bcf	_rgl& (0+255),7,b
  7702                           ;rgl.c: 2420: rgl.inv_mod=0;
  7703  004264  9153               	bcf	(_rgl+1)& (0+255),0,b
  7704                           ;rgl.c: 2421: rosnie=0;
  7705  004266  010F               	movlb	_rosnie shr (0+8)
  7706  004268  6B2E               	clrf	_rosnie& (0+255),b
  7707                           ;rgl.c: 2422: stoi=0;
  7708  00426A  010F               	movlb	_stoi shr (0+8)
  7709  00426C  6B2F               	clrf	_stoi& (0+255),b
  7710                           ;rgl.c: 2423: }
  7711  00426E  0012               	return	
  7712  004270                     __end_of_RestartMod:
  7713  000000                     
  7714  000000                     
  7715  000000                     
  7716  000000                     
  7717  000000                     
  7718  000000                     
  7719  000000                     
  7720  000000                     
  7721  000000                     
  7722  000000                     
  7723  000000                     
  7724  000000                     
  7725  000000                     
  7726  000000                     
  7727  000000                     
  7728  000000                     
  7729  000000                     
  7730  000000                     
  7731  000000                     
  7732  000000                     
  7733  000000                     
  7734  000000                     
  7735  000000                     
  7736  000000                     
  7737  000000                     
  7738  000000                     
  7739  000000                     
  7740  000000                     
  7741  000000                     
  7742  000000                     
  7743  000000                     
  7744  000000                     
  7745  000000                     
  7746  000000                     
  7747  000000                     
  7748  000000                     
  7749  000000                     
  7750  000000                     
  7751  000000                     
  7752  000000                     
  7753  000000                     
  7754  000000                     
  7755  000000                     
  7756  000000                     
  7757  000000                     
  7758  000000                     
  7759  000000                     
  7760  000000                     
  7761  000000                     
  7762  000000                     
  7763  000000                     
  7764  000000                     
  7765  000000                     
  7766  000000                     
  7767  000000                     
  7768  000000                     
  7769  000000                     
  7770  000000                     
  7771  000000                     
  7772  000000                     
  7773  000000                     
  7774  000000                     
  7775  000000                     
  7776  000000                     
  7777  000000                     
  7778  000000                     
  7779  000000                     
  7780  000000                     
  7781  000000                     
  7782  000000                     
  7783  000000                     
  7784  000000                     
  7785  000000                     
  7786  000000                     
  7787  000000                     
  7788  000000                     
  7789  000000                     
  7790  000000                     
  7791  000000                     
  7792  000000                     
  7793  000000                     
  7794  000000                     
  7795  000000                     
  7796  000000                     
  7797  000000                     
  7798  000000                     
  7799  000000                     
  7800  000000                     
  7801  000000                     
  7802  000000                     
  7803  000000                     
  7804  000000                     
  7805  000000                     
  7806  000000                     
  7807  000000                     
  7808  000000                     
  7809  000000                     
  7810  000000                     
  7811  000000                     
  7812  000000                     
  7813  000000                     
  7814  000000                     
  7815  000000                     
  7816  000000                     
  7817  000000                     
  7818  000000                     
  7819  000000                     
  7820  000000                     
  7821  000000                     
  7822  000000                     
  7823  000000                     
  7824  000000                     
  7825  000000                     
  7826  000000                     
  7827  000000                     
  7828  000000                     
  7829  000000                     
  7830  000000                     
  7831  000000                     
  7832  000000                     
  7833  000000                     
  7834  000000                     
  7835  000000                     
  7836  000000                     
  7837  000000                     
  7838  000000                     
  7839  000000                     
  7840  000000                     
  7841  000000                     
  7842  000000                     
  7843  000000                     
  7844  000000                     
  7845  000000                     
  7846  000000                     
  7847  000000                     
  7848  000000                     
  7849  000000                     
  7850  000000                     
  7851  000000                     
  7852  000000                     
  7853  000000                     
  7854  000000                     
  7855  000000                     
  7856  000000                     
  7857  000000                     
  7858  000000                     
  7859  000000                     
  7860  000000                     
  7861  000000                     
  7862  000000                     
  7863  000000                     
  7864  000000                     
  7865  000000                     
  7866  000000                     
  7867  000000                     
  7868  000000                     
  7869  000000                     
  7870  000000                     
  7871  000000                     
  7872  000000                     
  7873  000000                     
  7874  000000                     
  7875  000000                     
  7876  000000                     
  7877  000000                     
  7878  000000                     
  7879  000000                     
  7880  000000                     
  7881  000000                     
  7882  000000                     
  7883  000000                     
  7884  000000                     
  7885  000000                     
  7886  000000                     
  7887  000000                     
  7888  000000                     
  7889  000000                     
  7890  000000                     
  7891  000000                     
  7892  000000                     
  7893  000000                     
  7894  000000                     
  7895  000000                     
  7896  000000                     
  7897  000000                     
  7898  000000                     
  7899  000000                     
  7900  000000                     
  7901  000000                     
  7902  000000                     
  7903  000000                     
  7904  000000                     
  7905  000000                     
  7906  000000                     
  7907  000000                     
  7908  000000                     
  7909  000000                     
  7910  000000                     
  7911  000000                     
  7912  000000                     
  7913  000000                     
  7914  000000                     
  7915  000000                     
  7916  000000                     
  7917  000000                     
  7918  000000                     
  7919  000000                     
  7920  000000                     
  7921  000000                     
  7922  000000                     
  7923  000000                     
  7924  000000                     
  7925  000000                     
  7926  000000                     
  7927  000000                     
  7928  000000                     
  7929  000000                     
  7930  000000                     
  7931  000000                     
  7932  000000                     
  7933  000000                     
  7934  000000                     
  7935  000000                     
  7936  000000                     
  7937  000000                     
  7938  000000                     
  7939  000000                     
  7940  000000                     
  7941  000000                     
  7942  000000                     
  7943  000000                     
  7944  000000                     
  7945  000000                     
  7946  000000                     
  7947  000000                     
  7948  000000                     
  7949  000000                     
  7950  000000                     
  7951  000000                     
  7952  000000                     
  7953  000000                     
  7954  000000                     
  7955  000000                     
  7956  000000                     
  7957  000000                     
  7958  000000                     
  7959  000000                     
  7960  000000                     
  7961  000000                     
  7962  000000                     
  7963  000000                     
  7964  000000                     
  7965  000000                     
  7966  000000                     
  7967  000000                     
  7968  000000                     
  7969  000000                     
  7970  000000                     
  7971  000000                     
  7972  000000                     
  7973  000000                     
  7974  000000                     
  7975  000000                     
  7976  000000                     
  7977  000000                     
  7978  000000                     
  7979  000000                     
  7980  000000                     
  7981  000000                     
  7982  000000                     
  7983  000000                     
  7984  000000                     
  7985  000000                     
  7986  000000                     
  7987  000000                     
  7988  000000                     
  7989  000000                     
  7990  000000                     
  7991  000000                     
  7992  000000                     
  7993  000000                     
  7994  000000                     
  7995  000000                     
  7996  000000                     
  7997  000000                     
  7998  000000                     
  7999  000000                     
  8000  000000                     
  8001  000000                     
  8002  000000                     
  8003  000000                     
  8004  000000                     
  8005  000000                     
  8006  000000                     
  8007  000000                     
  8008  000000                     
  8009  000000                     
  8010  000000                     
  8011  000000                     
  8012  000000                     
  8013  000000                     
  8014  000000                     
  8015  000000                     
  8016  000000                     
  8017  000000                     
  8018  000000                     
  8019  000000                     
  8020  000000                     
  8021  000000                     
  8022  000000                     
  8023  000000                     
  8024  000000                     
  8025  000000                     
  8026  000000                     
  8027  000000                     
  8028  000000                     
  8029  000000                     
  8030  000000                     
  8031  000000                     
  8032  000000                     
  8033  000000                     
  8034  000000                     
  8035  000000                     
  8036  000000                     
  8037  000000                     
  8038  000000                     
  8039  000000                     
  8040  000000                     
  8041  000000                     
  8042  000000                     
  8043  000000                     
  8044  000000                     
  8045  000000                     
  8046  000000                     
  8047  000000                     
  8048  000000                     
  8049  000000                     
  8050  000000                     
  8051  000000                     
  8052  000000                     
  8053  000000                     
  8054  000000                     
  8055  000000                     
  8056  000000                     
  8057  000000                     
  8058  000000                     
  8059  000000                     
  8060  000000                     
  8061  000000                     
  8062  000000                     
  8063  000000                     
  8064  000000                     
  8065  000000                     
  8066  000000                     
  8067  000000                     
  8068  000000                     
  8069  000000                     
  8070  000000                     
  8071  000000                     
  8072  000000                     
  8073  000000                     
  8074  000000                     
  8075  000000                     
  8076  000000                     
  8077  000000                     
  8078  000000                     
  8079  000000                     
  8080  000000                     
  8081  000000                     
  8082  000000                     
  8083  000000                     
  8084  000000                     
  8085  000000                     
  8086  000000                     
  8087  000000                     
  8088  000000                     
  8089  000000                     
  8090  000000                     
  8091  000000                     
  8092  000000                     
  8093  000000                     
  8094  000000                     
  8095  000000                     
  8096  000000                     
  8097  000000                     
  8098  000000                     
  8099  000000                     
  8100  000000                     
  8101  000000                     
  8102  000000                     
  8103  000000                     
  8104  000000                     
  8105  000000                     
  8106  000000                     
  8107  000000                     
  8108  000000                     
  8109  000000                     
  8110  000000                     
  8111  000000                     
  8112  000000                     
  8113  000000                     
  8114  000000                     
  8115  000000                     
  8116  000000                     
  8117  000000                     
  8118  000000                     
  8119  000000                     
  8120  000000                     
  8121  000000                     
  8122  000000                     
  8123  000000                     
  8124  000000                     
  8125  000000                     
  8126  000000                     
  8127  000000                     
  8128  000000                     
  8129  000000                     
  8130  000000                     
  8131  000000                     
  8132  000000                     
  8133  000000                     
  8134  000000                     
  8135  000000                     
  8136  000000                     
  8137  000000                     
  8138  000000                     
  8139  000000                     
  8140  000000                     
  8141  000000                     
  8142  000000                     
  8143  000000                     
  8144  000000                     
  8145  000000                     
  8146  000000                     
  8147  000000                     
  8148  000000                     
  8149                           
  8150                           	psect	bigbss
  8151  000F13                     F1542:
  8152  000F13                     	ds	1
  8153  000F13                     F1543:
  8154  000F13                     	ds	1
  8155  000F13                     F1544:
  8156  000F13                     	ds	1
  8157  000F13                     F1545:
  8158  000F13                     	ds	1
  8159  000F13                     F1546:
  8160  000F13                     	ds	1
  8161  000F13                     F1547:
  8162  000F13                     	ds	1
  8163  000F13                     F1548:
  8164  000F13                     	ds	1
  8165  000F13                     F1564:
  8166  000F13                     	ds	1
  8167  000F13                     F1579:
  8168  000F13                     	ds	1
  8169  000F13                     F1586:
  8170  000F13                     	ds	1
  8171  000F13                     F1587:
  8172  000F13                     	ds	1
  8173  000F13                     F1588:
  8174  000F13                     	ds	1
  8175  000F13                     F1589:
  8176  000F13                     	ds	1
  8177  000F13                     F1590:
  8178  000F13                     	ds	1
  8179  000F13                     F1591:
  8180  000F13                     	ds	1
  8181  000F13                     F1592:
  8182  000F13                     	ds	1
  8183  000F13                     F1607:
  8184  000F13                     	ds	1
  8185  000F13                     F1638:
  8186  000F13                     	ds	1
  8187  000F13                     F1645:
  8188  000F13                     	ds	1
  8189  000F13                     F1646:
  8190  000F13                     	ds	1
  8191  000F13                     F1647:
  8192  000F13                     	ds	1
  8193  000F13                     F1648:
  8194  000F13                     	ds	1
  8195  000F13                     F1649:
  8196  000F13                     	ds	1
  8197  000F13                     F1650:
  8198  000F13                     	ds	1
  8199  000F13                     F1651:
  8200  000F13                     	ds	1
  8201  000000                     
  8202  000000                     
  8203  000000                     
  8204  000000                     
  8205  000000                     
  8206  000000                     
  8207  000000                     
  8208  000000                     
  8209  000000                     
  8210  000000                     
  8211  000000                     
  8212  000000                     
  8213  000000                     
  8214  000000                     
  8215  000000                     
  8216  000000                     
  8217  000000                     
  8218  000000                     
  8219  000000                     
  8220  000000                     
  8221  000000                     
  8222  000000                     
  8223  000000                     
  8224  000000                     
  8225  000000                     
  8226  000000                     
  8227  000000                     
  8228  000000                     
  8229  000000                     
  8230  000000                     
  8231  000000                     
  8232  000000                     
  8233  000000                     
  8234  000000                     
  8235  000000                     
  8236  000000                     
  8237  000000                     
  8238  000000                     
  8239  000000                     
  8240  000000                     
  8241  000000                     
  8242  000000                     
  8243  000000                     
  8244  000000                     
  8245  000000                     
  8246  000000                     
  8247  000000                     
  8248  000000                     
  8249  000000                     
  8250  000000                     
  8251  000000                     
  8252  000000                     
  8253  000000                     
  8254  000000                     
  8255  000000                     
  8256  000000                     
  8257  000000                     
  8258  000000                     
  8259  000000                     
  8260  000000                     
  8261  000000                     
  8262  000000                     
  8263  000000                     
  8264  000000                     
  8265  000000                     
  8266  000000                     
  8267  000000                     
  8268  000000                     
  8269  000000                     
  8270  000000                     
  8271  000000                     
  8272  000000                     
  8273  000000                     
  8274  000000                     
  8275  000000                     
  8276  000000                     
  8277  000000                     
  8278  000000                     
  8279  000000                     
  8280  000000                     
  8281  000000                     
  8282  000000                     
  8283  000000                     
  8284  000000                     
  8285  000000                     
  8286  000000                     
  8287  000000                     
  8288  000000                     
  8289  000000                     
  8290  000000                     
  8291  000000                     
  8292  000000                     
  8293  000000                     
  8294  000000                     
  8295  000000                     
  8296  000000                     
  8297  000000                     
  8298  000000                     
  8299  000000                     
  8300  000000                     
  8301  000000                     
  8302  000000                     
  8303  000000                     
  8304  000000                     
  8305  000000                     
  8306  000000                     
  8307  000000                     
  8308  000000                     
  8309  000000                     
  8310  000000                     
  8311  000000                     
  8312  000000                     
  8313  000000                     
  8314  000000                     
  8315  000000                     
  8316  000000                     
  8317  000000                     
  8318  000000                     
  8319  000000                     
  8320  000000                     
  8321  000000                     
  8322  000000                     
  8323  000000                     
  8324  000000                     
  8325  000000                     
  8326  000F13                     _pwm_center:
  8327  000F13                     	ds	1
  8328  000F13                     _pwm_kwr:
  8329  000F13                     	ds	1
  8330  000F13                     _rosnie:
  8331  000F13                     	ds	1
  8332  000F13                     _stoi:
  8333  000F13                     	ds	1
  8334  000F13                     _tmee:
  8335  000F13                     	ds	1
  8336  000F13                     _tmr:
  8337  000F13                     	ds	1
  8338  000F13                     _tmr2:
  8339  000F13                     	ds	1
  8340  000F13                     _tmr3:
  8341  000F13                     	ds	1
  8342  000F13                     _tmr4:
  8343  000F13                     	ds	1
  8344  000000                     
  8345  000000                     
  8346  000000                     
  8347  000000                     
  8348  000000                     
  8349  000000                     
  8350  000000                     
  8351                           
  8352                           	psect	bss
  8353  000052                     _rgl:
  8354  000052                     	ds	10
  8355                           
  8356                           	psect	temp
  8357  000000                     btemp:
  8358  000000                     	ds	8
  8359                           tblptrh	equ	0xFF7
  8360                           tblptrl	equ	0xFF6
  8361                           prodh	equ	0xFF4
  8362                           prodl	equ	0xFF3
  8363                           indf0	equ	0xFEF
  8364                           fsr0h	equ	0xFEA
  8365                           fsr0l	equ	0xFE9
  8366                           wreg	equ	0xFE8
  8367                           fsr1l	equ	0xFE1
  8368                           fsr2l	equ	0xFD9
  8369                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Wed Jun 11 12:30:09 2014

                  _x 0EF2            ?a_ModDkCW 00F0  
                 l11 1126                   l20 1216  
                 l12 10EE                   l21 121A  
                 l13 10FA                   l30 13E0  
                 l22 12FC                   l14 1106  
                 l23 129C                   l15 1112  
                 l40 14F6                   l32 13F2  
                 l24 12F6                   l16 111E  
                 l33 14D2                   l34 1472  
                 l26 1316                   l51 15A6  
                 l35 14CC                   l27 130A  
                 l60 16E2                   l52 1592  
                 l61 1728                   l37 14EA  
                 l29 1388                   l62 172E  
                 l38 14E0                   l80 18A0  
                 l72 182A                   l56 15E0  
                 l48 1552                   l73 1862  
                 l57 15EA                   l74 185C  
                 l66 17A8                   l58 1648  
                 l91 19B8                   l83 1922  
                 l67 1774                   l92 1984  
                 l84 18DE                   l93 194A  
                 l77 1A96                   l86 18FA  
                 l78 188A                   l95 1966  
                 l79 1896                   l88 1912  
                 l97 197E                   u85 120A  
          ?a_ModZgCW 00F0             _StartCO2 3770  
           _StartMCW 112E           ?a_ModDkCW2 00F0  
         ?a_ModDkCW4 00F0           ?a_ModDkCW5 00F0  
         ?a_FirstPCW 00F0                  l101 19A2  
                l110 1A58                  l111 1A4E  
                l120 1ABA                  l104 19E0  
                l121 1AC6                  l105 19DC  
                l130 1BEA                  l122 1C74  
                l114 1A8C                  l131 1B98  
                l123 1B00                  l107 19E4  
                l212 2204                  l124 1B74  
                l108 19F0                  l301 2A58  
                l133 1BA6                  l125 1B2C  
                l109 1A10                  l310 2ACC  
                l206 2118                  l142 1C5C  
                l311 2B06                  l207 2120  
                l135 1BDC                  l127 1B46  
                l119 1AAE                  l320 2B5A  
                l312 2B02                  l232 230E  
                l224 22B4                  l208 2192  
                l160 1DD0                  l152 1D9A  
                l241 2480                  l233 2312  
                l217 2274                  l153 1D66  
                l137 1C64                  l410 322A  
                l402 31BE                  l330 2BFE  
                l314 2AF8                  l306 2A7E  
                l250 25D8                  l242 24D8  
                l234 23F4                  l218 2278  
                l170 1E68                  l154 1D5C  
                l146 1CAA                  l138 1C28  
                l403 31F6                  l323 2B96  
                l307 2A8A                  l235 2394  
                l147 1D12                  l500 3722  
                l412 3240                  l404 31F0  
                l324 2BC0                  l308 2A96  
                l260 2640                  l252 25EE  
                l244 24EA                  l236 23EE  
                l164 1E1A                  l148 1CE4  
                l501 3728                  l413 3264  
                l325 2BBC                  l309 2B6A  
                l261 2660                  l245 25CA  
                l181 1F18                  l165 1E0A  
                l422 32F8                  l350 2CE6  
                l334 2C32                  l318 2B3C  
                l270 2708                  l246 256A  
                l238 240E                  l190 1F82  
                l174 1E96                  l431 3342  
                l415 3278                  l407 3302  
                l351 2CF4                  l335 2C3A  
                l327 2BB2                  l319 2B4C  
                l271 2766                  l247 25C4  
                l239 2402                  l191 210A  
                l159 1DDC                  l520 3808  
                l504 3760                  l352 2CFC  
                l344 2CAC                  l280 2910  
                l264 26C4                  l192 1F9C  
                l184 1F4E                  l176 1F1E  
                l521 3802                  l433 333E  
                l417 3284                  l361 2E60  
                l353 2D74                  l345 2CB2  
                l281 290A                  l273 2800  
                l265 26B0                  l249 25E2  
                l193 1FA4                  l185 1F54  
                l177 1EEA                  l169 1E9C  
                l610 3E02                  l602 3D96  
                l450 342A                  l442 33B4  
                l418 32C8                  l362 2E5A  
                l346 2CC0                  l338 2C7C  
                l290 2988                  l274 2846  
                l194 2018                  l611 3E0A  
                l515 37A6                  l443 33BC  
                l419 32BE                  l339 2C6C  
                l291 2982                  l275 284C  
                l612 3E18                  l604 3DC8  
                l524 3818                  l516 37AA  
                l460 3508                  l444 33CA  
                l436 335A                  l428 346C  
                l348 2EDA                  l284 2A62  
                l188 227C                  l621 3EB2  
                l461 3486                  l453 345C  
                l437 3384                  l429 33DA  
                l381 2F42                  l357 2DE6  
                l349 2CE2                  l293 29AE  
                l285 2938                  l269 26FE  
                l189 1F7E                  l606 3DBE  
                l534 386E                  l526 3828  
                l462 34C0                  l454 3458  
                l438 3372                  l390 30B0  
                l366 2ED2                  l286 2944  
                l278 2872                  l198 2090  
                l615 3E56                  l471 3524  
                l391 30F6                  l375 2F12  
                l367 2ED6                  l295 29BC  
                l287 294E                  l279 28D8  
                l632 3F56                  l624 3ED8  
                l544 38B0                  l480 35EE  
                l472 3554                  l392 30FC  
                l384 2F74                  l368 2EFE  
                l296 29DC                  l633 3F4E  
                l617 3EDC                  l553 3964  
                l545 38D0                  l481 35DE  
                l473 355C                  l465 34F8  
                l297 2A24                  l626 3ECE  
                l618 3E80                  l570 3BAA  
                l562 3AD8                  l554 396E  
                l490 366A                  l474 356A  
                l466 34F0                  l386 2FAE  
                l298 2A1A                  l651 400E  
                l643 3FCA                  l571 3BB4  
                l563 3B3E                  l555 39CC  
                l387 2FB8                  l652 401C  
                l644 3FD0                  l580 3C24  
                l564 3B76                  l548 392A  
                l492 36F2                  l388 3016  
                l637 3F94                  l629 3F1A  
                l565 3B70                  l557 3A66  
                l549 3916                  l493 36BE  
                l485 3670                  l477 3586  
                l662 4078                  l638 3F84  
                l582 3C3A                  l574 3BF4  
                l558 3AAC                  l486 363C  
                l671 40E2                  l655 4098  
                l647 3FFC                  l583 3C5A  
                l559 3AB2                  l479 35C0  
                l399 3158                  l656 4048  
                l584 3CA2                  l576 3C2C  
                l568 3CE0                  l593 3CF8  
                l585 3C98                  l577 3C0C  
                l569 3B9E                  l497 36EC  
                l658 4090                  l594 3D04  
                l659 4060                  l595 3D10  
                l676 4120                  l596 3E28  
                l588 3CD6                  l677 4124  
                l597 3D46                  l598 3DCC  
                l599 3D70                  u135 12EE  
                u235 14C4                  u340 1566  
                u405 169A                  u175 13DA  
                u520 1788                  u425 16D4  
                u445 1720                  u545 1822  
                u490 176E                  u555 1854  
                u860 1942                  _PWM 005C  
         ?a_ModZgCW2 00F0           ?a_ModZgCW4 00F0  
         ?a_ModZgCW5 00F0           ?a_ModPruCW 00F0  
                _rgl 0052            _StartMCO3 40F2  
          _StartMCW2 37BA            _StartMCW4 22BE  
                _tmr 0F31    __end_of_StartMCO3 4138  
  __end_of_StartMCW2 37E8    __end_of_StartMCW4 22FE  
                wreg 000FE8            _StartRTdS 8A2C  
         _RestartMod 4252                 F1542 0F13  
               F1607 0F23                 F1543 0F14  
               F1544 0F15                 F1545 0F16  
               F1650 0F2A                 F1546 0F17  
               F1651 0F2B                 F1547 0F18  
               F1564 0F1A                 F1548 0F19  
               F1645 0F25                 F1646 0F26  
               F1638 0F24                 F1590 0F20  
               F1647 0F27                 F1591 0F21  
               F1648 0F28                 F1592 0F22  
               F1649 0F29                 F1586 0F1C  
               F1587 0F1D                 F1579 0F1B  
               F1588 0F1E                 F1589 0F1F  
 __end_of_RestartMod 4270          ?a_FirstPCW4 00F0  
               f6073 00F9                 u1040 199A  
               u1400 1B5E                 u2105 20EE  
               u2025 2000                 u1155 1A46  
               u1165 1A84                 u3025 2B34  
               u2065 2074                 u1505 1C54  
               u2235 225E                 u2155 217C  
               u3125 2BF6                 u3135 2C2A  
               u4115 34B8                 u2435 24D2  
               u2195 21EE                 u1475 1BD4  
               u4125 34E8                 u3405 2EB8  
               u3325 2DD0                 u1725 1D54  
               u4055 3422                 u1735 1D92  
               u1495 1C20                 u5025 3C90  
               u4305 3634                 u4065 3450  
               u2705 28D0                 u1905 1EE2  
               u1745 1DC8                 u5035 3CCE  
               u4315 3662                 u2715 2902  
               u2635 27B8                 u2395 23E6  
               u1915 1F10                 u4165 354C  
               u3365 2E40                 u3285 2D58  
               u1845 1E60                 u3615 30EE  
               u2655 27F2                 u2495 25BC  
               u1855 1E8E                 u3705 31E8  
               u2905 2A50                 u2675 283E  
               u4365 36B6                 u4375 36E4  
               u3575 3068                 u5265 3DFA  
               u4715 3A1E                 u3595 30A2  
               u3845 32B6                 u4735 3A58  
               u3855 32F0                 u3695 31B6  
               u2895 2A12                 u4930 3BF0  
               u5475 3F12                 u4755 3AA4  
               u5805 40DA                 u5485 3F46  
               u5910 41E2                 u4880 3BD4  
               u4785 3B36                 u5930 420A  
               u5850 414E                 u5915 41DC  
               u4795 3B68                 u3995 33AC  
               u5950 4240                 u5870 4184  
               u5890 41AC                 u5955 423A  
               u5875 417E                 _DtCO 013D  
          _WriteOPWM 7D2E                 _DtCW 014C  
               _RTdS 8A50      __end_of_ClrMod2 383E  
    __end_of_ClrMod4 260C          ?a_ModPruCW2 00F0  
        ?a_ModPruCW4 00F0          ?a_ModPruCW5 00F0  
               aldiv 93C4                 _tmr2 0F32  
               _tmr3 0F33                 _tmr4 0F34  
               _tmee 0F30                 fsr0h 000FEA  
               indf0 000FEF                 fsr0l 000FE9  
               fsr1l 000FE1                 fsr2l 000FD9  
               btemp 0000                 _stoi 0F2F  
               awdiv 9462                 ftadd 91FE  
               awmul 94F0                 ftmul 9014  
               fttol 9376      __end_of_ModDkCW 1868  
               prodl 000FF3           _pwm_center 0F2C  
    __end_of_ModToCW 151A      __end_of_ModZgCW 1738  
    __end_of_Moduluj 112E      __end_of_PropCO2 40A0  
    __end_of_Tmaleje 4188      __end_of_Tnizsza 41B0  
    __end_of_Trosnie 4152      __end_of_Twyzsza 41E6  
      __end_of_Tstoi 4196          _IncConstCO2 3874  
        _IncConstCW2 3856          _IncConstCW4 2612  
__end_of_IncConstCO2 3884  __end_of_IncConstCW2 3874  
__end_of_IncConstCW4 2622           used_btemp0 0001  
         used_btemp1 0001           used_btemp2 0001  
         used_btemp3 0001           used_btemp4 0001  
         used_btemp5 0001           used_btemp6 0001  
         used_btemp7 0001                _Tstoi 4188  
   __end_of_TFmaleje 4244                abtoft 94B0  
   __end_of_IncMaxCW 1F64     __end_of_TFrosnie 420E  
              lbtoft 94C6     __end_of_ModDkCW2 3B7C  
   __end_of_ModDkCW4 2916     __end_of_ModDkCW5 31FC  
   __end_of_FirstPCW 14FC              _ClrMod2 382E  
            _ClrMod4 25F4                status 000FD8  
   __end_of_ModToCO2 3856     __end_of_ModToCO3 40F2  
   __end_of_ModToCW2 384A     __end_of_ModToCW3 40EA  
   __end_of_ModToCW4 2612     __end_of_ModZgCW2 3ABC  
   __end_of_ModZgCW4 2856     __end_of_ModZgCW5 3106  
   __end_of_ModPruCW 1DEC     __end_of_ModPrzCW 22BA  
            _ModDkCW 1738              _ModToCW 1514  
            _ModZgCW 1534              _Moduluj 10C4  
            __Lparam 00F0              _PropCO2 402A  
            _Tmaleje 4152              _Tnizsza 4196  
            _Trosnie 4138     __end_of_StartCO2 37BA  
   __end_of_StartMCW 11C6              _Twyzsza 41B0  
            __ramtop 1000       __end_of_ClrMod 1514  
     __end_of_TFstoi 4252       __end_of_Trowna 41F4  
        _ReadDataCO2 3884              _pwm_kwr 0F2D  
        _ReadDataCW2 388E          _ReadDataCW4 2622  
         _IncConstCW 151A  __end_of_ReadDataCO2 388E  
__end_of_ReadDataCW2 38A0  __end_of_ReadDataCW4 2634  
 __end_of_IncConstCW 152A               _ClrMod 14FC  
             _TFstoi 4244               _Trowna 41E6  
             aldiv_f 956A               almul_f 9556  
             _rosnie 0F2E           _ReadDataCW 152A  
          _IncMaxCW2 3F66            _IncMaxCW4 2C4E  
          _IncMaxCW5 357A               ftadd_f 9546  
  __end_of_IncMaxCW2 3FE0    __end_of_IncMaxCW4 2CC8  
  __end_of_IncMaxCW5 3738   __end_of_ReadDataCW 1534  
          _FirstPCW2 37E8            _FirstPCW4 22FE  
             tblptrh 000FF7               tblptrl 000FF6  
  __end_of_FirstPCW2 382E    __end_of_FirstPCW4 25F4  
           _TFmaleje 420E             _IncMaxCW 1DEC  
           _TFrosnie 41F4            _ModPruCW2 3B7C  
          _ModPruCW4 2916            _ModPruCW5 31FC  
          _ModPrzCW2 3FE0            _ModPrzCW4 2CC8  
          _ModPrzCW5 3738    __end_of_ModPruCW2 3F66  
  __end_of_ModPruCW4 2C4E    __end_of_ModPruCW5 357A  
         _SetPWM_CW4 2F18    __end_of_ModPrzCW2 402A  
  __end_of_ModPrzCW4 2F18    __end_of_ModPrzCW5 3770  
           _ModDkCW2 3ABC             _ModDkCW4 2856  
           _ModDkCW5 3106             _FirstPCW 11C6  
 __end_of_SetPWM_CW4 2F24             _ModToCO2 384A  
           _ModToCO3 40EA             _ModToCW2 383E  
           _ModToCW3 40A0             _ModToCW4 260C  
           _ModZgCW2 38A0             _ModZgCW4 2634  
           _ModZgCW5 2F24             _ModPruCW 1868  
           _ModPrzCW 1F64            _SetPWM_CW 22BA  
  __end_of_SetPWM_CW 22BE  
