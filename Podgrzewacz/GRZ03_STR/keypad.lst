

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Wed Jun 11 12:30:07 2014


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     5                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     6                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     7  000000                     
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96                           
    97                           	psect	text
    98                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
    99                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   100                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   101                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   102                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   103                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   104                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   105                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   106                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   107                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   108                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   109                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   110                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   111                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   112                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   113                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   114                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   115                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   116                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   117                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   118                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   119                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   120                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   121                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   122                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   123                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   124                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   125                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   126                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   127                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   128                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   129                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   130                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   131                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   132                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   133                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   134                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   135                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   136                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   137                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   138                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   139                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   140                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   141                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   142                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   143                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   144                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   145                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   146                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   147                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   148                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   149                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   150                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   151                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   152                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   153                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   154                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   155                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   156                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   157                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   158                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   159                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   160                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   161                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   162                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   163                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   164                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   165                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   166                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   167                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   168                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   169                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   170                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   171                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   172                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   173                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   174                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   175                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   176                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   177                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   178                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   179                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   180                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   181                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   182                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   183                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   184                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   185                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   186                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   187                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   188                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   189                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   190                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   191                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   192                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   193                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   194                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   195                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   196                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   197                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   198  0086B0                     _SetBufKey:
   199                           ;       param _pTim assigned to ?_ExPresKey2B+1
   200  000000                     _ExPresKey2B$pTim	set	?_ExPresKey2B+1
   201                           ;       param _dTim assigned to ?_ExPresKey2B+0
   202  000000                     _ExPresKey2B$dTim	set	?_ExPresKey2B
   203                           ;       param _pTim assigned to ?_ExPresKey2+1
   204  000000                     _ExPresKey2$pTim	set	?_ExPresKey2+1
   205                           ;       param _dTim assigned to ?_ExPresKey2+0
   206  000000                     _ExPresKey2$dTim	set	?_ExPresKey2
   207                           ;       param _pTim assigned to ?_ExPresKey+1
   208  000000                     _ExPresKey$pTim	set	?_ExPresKey+1
   209                           ;       param _dTim assigned to ?_ExPresKey+0
   210  000000                     _ExPresKey$dTim	set	?_ExPresKey
   211  000000                     
   212                           ;keypad.c: 22: sp.sbk=1;
   213  0086B0  010E               	movlb	_sp shr (0+8)
   214  0086B2  83EE               	bsf	_sp& (0+255),1,b
   215                           ;keypad.c: 23: }
   216  0086B4  0012               	return	
   217  0086B6                     __end_of_SetBufKey:
   218                           ;keypad.c: 24: void ResBufKey(void)
   219                           ;keypad.c: 25: {
   220  0086B6                     _ResBufKey:
   221  000000                     
   222                           ;keypad.c: 26: sp.sbk=0;
   223  0086B6  010E               	movlb	_sp shr (0+8)
   224  0086B8  93EE               	bcf	_sp& (0+255),1,b
   225                           ;keypad.c: 27: }
   226  0086BA  0012               	return	
   227  0086BC                     __end_of_ResBufKey:
   228                           ;keypad.c: 31: void SetBufKey1(void)
   229                           ;keypad.c: 32: {
   230  0086BC                     _SetBufKey1:
   231  000000                     
   232                           ;keypad.c: 33: ky1.sbk=1;
   233  0086BC  010E               	movlb	_ky1 shr (0+8)
   234  0086BE  83EC               	bsf	_ky1& (0+255),1,b
   235                           ;keypad.c: 34: }
   236  0086C0  0012               	return	
   237  0086C2                     __end_of_SetBufKey1:
   238                           ;keypad.c: 35: void ResBufKey1(void)
   239                           ;keypad.c: 36: {
   240  0086C2                     _ResBufKey1:
   241  000000                     
   242                           ;keypad.c: 37: ky1.sbk=0;
   243  0086C2  010E               	movlb	_ky1 shr (0+8)
   244  0086C4  93EC               	bcf	_ky1& (0+255),1,b
   245                           ;keypad.c: 38: }
   246  0086C6  0012               	return	
   247  0086C8                     __end_of_ResBufKey1:
   248                           ;keypad.c: 39: unsigned char PresKey1(unsigned c
      +                          har k)
   249                           ;keypad.c: 40: {
   250  0086C8                     _PresKey1:
   251  000000                     
   252                           ; _k loaded to fsr2l
   253  0086C8  6ED9               	movwf	fsr2l,c
   254                           ;keypad.c: 41: ky1.bk=(k)?1:0;
   255  0086CA  0E00               	movlw	0
   256  0086CC  6A00               	clrf	btemp,c
   257  0086CE  62D9               	cpfseq	fsr2l,c
   258  0086D0  2A00               	incf	btemp,f,c
   259  0086D2  EE0E  F0EC         	lfsr	0,_ky1
   260  0086D6  50EF               	movf	indf0,w,c
   261  0086D8  1800               	xorwf	btemp,w,c
   262  0086DA  0BFE               	andlw	-2
   263  0086DC  1800               	xorwf	btemp,w,c
   264  0086DE  6EEF               	movwf	indf0,c
   265                           ;keypad.c: 42: if (!ky1.sbk&&ky1.bk)
   266  0086E0  010E               	movlb	_ky1 shr (0+8)
   267  0086E2  B3EC               	btfsc	_ky1& (0+255),1,b
   268  0086E4  D011               	goto	l7
   269  0086E6  010E               	movlb	_ky1 shr (0+8)
   270  0086E8  A1EC               	btfss	_ky1& (0+255),0,b
   271  0086EA  D00E               	goto	l7
   272                           ;keypad.c: 43: {
   273  0086EC  010E               	movlb	_ky1 shr (0+8)
   274  0086EE  0E00               	movlw	0
   275  0086F0  B1EC               	btfsc	_ky1& (0+255),0,b
   276  0086F2  0E01               	movlw	1
   277  0086F4  6E00               	movwf	btemp,c
   278  0086F6  EE0E  F0EC         	lfsr	0,_ky1
   279  0086FA  3600               	rlcf	btemp,f,c
   280  0086FC  50EF               	movf	indf0,w,c
   281  0086FE  1800               	xorwf	btemp,w,c
   282  008700  0BFD               	andlw	-3
   283  008702  1800               	xorwf	btemp,w,c
   284  008704  6EEF               	movwf	indf0,c
   285                           ;keypad.c: 45: return 1;
   286  008706  0C01               	retlw	1
   287  008708                     l7:
   288                           ;keypad.c: 46: }
   289  008708  010E               	movlb	_ky1 shr (0+8)
   290  00870A  0E00               	movlw	0
   291  00870C  B1EC               	btfsc	_ky1& (0+255),0,b
   292  00870E  0E01               	movlw	1
   293  008710  6E00               	movwf	btemp,c
   294  008712  EE0E  F0EC         	lfsr	0,_ky1
   295  008716  3600               	rlcf	btemp,f,c
   296  008718  50EF               	movf	indf0,w,c
   297  00871A  1800               	xorwf	btemp,w,c
   298  00871C  0BFD               	andlw	-3
   299  00871E  1800               	xorwf	btemp,w,c
   300  008720  6EEF               	movwf	indf0,c
   301                           ;keypad.c: 48: return 0;
   302  008722  0C00               	retlw	0
   303                           ;keypad.c: 49: }
   304  008724                     __end_of_PresKey1:
   305                           ;keypad.c: 54: void SetBufKey2(void)
   306                           ;keypad.c: 55: {
   307  008724                     _SetBufKey2:
   308  000000                     
   309                           ;keypad.c: 56: ky2.sbk=1;
   310  008724  010E               	movlb	_ky2 shr (0+8)
   311  008726  83ED               	bsf	_ky2& (0+255),1,b
   312                           ;keypad.c: 57: }
   313  008728  0012               	return	
   314  00872A                     __end_of_SetBufKey2:
   315                           ;keypad.c: 58: void ResBufKey2(void)
   316                           ;keypad.c: 59: {
   317  00872A                     _ResBufKey2:
   318  000000                     
   319                           ;keypad.c: 60: ky2.sbk=0;
   320  00872A  010E               	movlb	_ky2 shr (0+8)
   321  00872C  93ED               	bcf	_ky2& (0+255),1,b
   322                           ;keypad.c: 61: }
   323  00872E  0012               	return	
   324  008730                     __end_of_ResBufKey2:
   325                           ;keypad.c: 62: unsigned char PresKey2(unsigned c
      +                          har k)
   326                           ;keypad.c: 63: {
   327  008730                     _PresKey2:
   328  000000                     
   329                           ; _k loaded to fsr2l
   330  008730  6ED9               	movwf	fsr2l,c
   331                           ;keypad.c: 64: ky2.bk=(k)?1:0;
   332  008732  0E00               	movlw	0
   333  008734  6A00               	clrf	btemp,c
   334  008736  62D9               	cpfseq	fsr2l,c
   335  008738  2A00               	incf	btemp,f,c
   336  00873A  EE0E  F0ED         	lfsr	0,_ky2
   337  00873E  50EF               	movf	indf0,w,c
   338  008740  1800               	xorwf	btemp,w,c
   339  008742  0BFE               	andlw	-2
   340  008744  1800               	xorwf	btemp,w,c
   341  008746  6EEF               	movwf	indf0,c
   342                           ;keypad.c: 65: if (!ky2.sbk&&ky2.bk)
   343  008748  010E               	movlb	_ky2 shr (0+8)
   344  00874A  B3ED               	btfsc	_ky2& (0+255),1,b
   345  00874C  D011               	goto	l11
   346  00874E  010E               	movlb	_ky2 shr (0+8)
   347  008750  A1ED               	btfss	_ky2& (0+255),0,b
   348  008752  D00E               	goto	l11
   349                           ;keypad.c: 66: {
   350  008754  010E               	movlb	_ky2 shr (0+8)
   351  008756  0E00               	movlw	0
   352  008758  B1ED               	btfsc	_ky2& (0+255),0,b
   353  00875A  0E01               	movlw	1
   354  00875C  6E00               	movwf	btemp,c
   355  00875E  EE0E  F0ED         	lfsr	0,_ky2
   356  008762  3600               	rlcf	btemp,f,c
   357  008764  50EF               	movf	indf0,w,c
   358  008766  1800               	xorwf	btemp,w,c
   359  008768  0BFD               	andlw	-3
   360  00876A  1800               	xorwf	btemp,w,c
   361  00876C  6EEF               	movwf	indf0,c
   362                           ;keypad.c: 68: return 1;
   363  00876E  0C01               	retlw	1
   364  008770                     l11:
   365                           ;keypad.c: 69: }
   366  008770  010E               	movlb	_ky2 shr (0+8)
   367  008772  0E00               	movlw	0
   368  008774  B1ED               	btfsc	_ky2& (0+255),0,b
   369  008776  0E01               	movlw	1
   370  008778  6E00               	movwf	btemp,c
   371  00877A  EE0E  F0ED         	lfsr	0,_ky2
   372  00877E  3600               	rlcf	btemp,f,c
   373  008780  50EF               	movf	indf0,w,c
   374  008782  1800               	xorwf	btemp,w,c
   375  008784  0BFD               	andlw	-3
   376  008786  1800               	xorwf	btemp,w,c
   377  008788  6EEF               	movwf	indf0,c
   378                           ;keypad.c: 71: return 0;
   379  00878A  0C00               	retlw	0
   380                           ;keypad.c: 72: }
   381  00878C                     __end_of_PresKey2:
   382                           ;keypad.c: 112: unsigned char ExPresKey(unsigned
      +                           char k,unsigned char dTim,unsigned char pTim)
   383                           ;keypad.c: 113: {
   384  00878C  00F7               	dw	?_ExPresKey
   385  00878E                     _ExPresKey:
   386  000000                     
   387                           ; _k loaded to fsr2l
   388  00878E  6ED9               	movwf	fsr2l,c
   389                           ;keypad.c: 114: sp.bk=(k)?1:0;
   390  008790  0E00               	movlw	0
   391  008792  6A00               	clrf	btemp,c
   392  008794  62D9               	cpfseq	fsr2l,c
   393  008796  2A00               	incf	btemp,f,c
   394  008798  EE0E  F0EE         	lfsr	0,_sp
   395  00879C  50EF               	movf	indf0,w,c
   396  00879E  1800               	xorwf	btemp,w,c
   397  0087A0  0BFE               	andlw	-2
   398  0087A2  1800               	xorwf	btemp,w,c
   399  0087A4  6EEF               	movwf	indf0,c
   400                           ;keypad.c: 116: if (!sp.sbk&&sp.bk)
   401  0087A6  010E               	movlb	_sp shr (0+8)
   402  0087A8  B3EE               	btfsc	_sp& (0+255),1,b
   403  0087AA  D014               	goto	l13
   404  0087AC  010E               	movlb	_sp shr (0+8)
   405  0087AE  A1EE               	btfss	_sp& (0+255),0,b
   406  0087B0  D011               	goto	l13
   407                           ;keypad.c: 117: {
   408  0087B2  010E               	movlb	_sp shr (0+8)
   409  0087B4  0E00               	movlw	0
   410  0087B6  B1EE               	btfsc	_sp& (0+255),0,b
   411  0087B8  0E01               	movlw	1
   412  0087BA  6E00               	movwf	btemp,c
   413  0087BC  EE0E  F0EE         	lfsr	0,_sp
   414  0087C0  3600               	rlcf	btemp,f,c
   415  0087C2  50EF               	movf	indf0,w,c
   416  0087C4  1800               	xorwf	btemp,w,c
   417  0087C6  0BFD               	andlw	-3
   418  0087C8  1800               	xorwf	btemp,w,c
   419  0087CA  6EEF               	movwf	indf0,c
   420                           ;keypad.c: 119: StartRTdS(1);
   421  0087CC  0E01               	movlw	1
   422  0087CE  EC16  F045         	call	_StartRTdS
   423                           ;keypad.c: 120: return 1;
   424  0087D2  0C01               	retlw	1
   425  0087D4                     l13:
   426                           ;keypad.c: 121: }
   427  0087D4  010E               	movlb	_sp shr (0+8)
   428  0087D6  0E00               	movlw	0
   429  0087D8  B1EE               	btfsc	_sp& (0+255),0,b
   430  0087DA  0E01               	movlw	1
   431  0087DC  6E00               	movwf	btemp,c
   432  0087DE  EE0E  F0EE         	lfsr	0,_sp
   433  0087E2  3600               	rlcf	btemp,f,c
   434  0087E4  50EF               	movf	indf0,w,c
   435  0087E6  1800               	xorwf	btemp,w,c
   436  0087E8  0BFD               	andlw	-3
   437  0087EA  1800               	xorwf	btemp,w,c
   438  0087EC  6EEF               	movwf	indf0,c
   439                           ;keypad.c: 123: if(sp.sbk&&sp.bk)
   440  0087EE  A3EE               	btfss	_sp& (0+255),1,b
   441  0087F0  D022               	goto	l14
   442  0087F2  010E               	movlb	_sp shr (0+8)
   443  0087F4  A1EE               	btfss	_sp& (0+255),0,b
   444  0087F6  D01F               	goto	l14
   445                           ;keypad.c: 124: {
   446  0087F8  010E               	movlb	_sp shr (0+8)
   447  0087FA  B5EE               	btfsc	_sp& (0+255),2,b
   448  0087FC  D00D               	goto	l15
   449  0087FE  0E01               	movlw	1
   450  008800  EC28  F045         	call	_RTdS
   451  008804  6E00               	movwf	btemp,c
   452  008806  0100               	movlb	__Lparam shr (0+8)
   453  008808  51F7               	movf	?_ExPresKey^(__Lparam& (0+65280)),w
   454  00880A  5C00               	subwf	btemp,w,c
   455                           ;keypad.c: 126: {
   456  00880C  010E               	movlb	_sp shr (0+8)
   457  00880E  E305               	bnc	L1
   458  008810  85EE               	bsf	_sp& (0+255),2,b
   459                           ;keypad.c: 128: StartRTdS(1);
   460  008812  0E01               	movlw	1
   461  008814  EC16  F045         	call	_StartRTdS
   462  008818                     l15:
   463                           ;keypad.c: 129: }
   464  008818  010E               	movlb	_sp shr (0+8)
   465  00881A                     L1:
   466  00881A  A5EE               	btfss	_sp& (0+255),2,b
   467  00881C  0C00               	retlw	0
   468  00881E  0E01               	movlw	1
   469  008820  EC28  F045         	call	_RTdS
   470  008824  6E00               	movwf	btemp,c
   471  008826  0100               	movlb	__Lparam shr (0+8)
   472  008828  51F8               	movf	(?_ExPresKey+1)^(__Lparam& (0+65280)),w
   473  00882A  5C00               	subwf	btemp,w,c
   474  00882C  E306               	bnc	l17
   475                           ;keypad.c: 131: {
   476  00882E  0E01               	movlw	1
   477  008830  EC16  F045         	call	_StartRTdS
   478                           ;keypad.c: 133: return 2;
   479  008834  0C02               	retlw	2
   480                           ;keypad.c: 134: }
   481  008836                     l14:
   482  008836  010E               	movlb	_sp shr (0+8)
   483  008838  95EE               	bcf	_sp& (0+255),2,b
   484  00883A                     l17:
   485                           ;keypad.c: 136: return 0;
   486  00883A  0C00               	retlw	0
   487                           ;keypad.c: 137: }
   488  00883C                     __end_of_ExPresKey:
   489                           ;keypad.c: 150: unsigned char ExPresKey2(unsigne
      +                          d char k,unsigned char dTim,unsigned char pTim)
   490                           ;keypad.c: 151: {
   491  00883C  00F9               	dw	?_ExPresKey2
   492  00883E                     _ExPresKey2:
   493  000000                     
   494                           ; _k loaded to fsr2l
   495  00883E  6ED9               	movwf	fsr2l,c
   496                           ;keypad.c: 152: sp.bk=(k)?1:0;
   497  008840  0E00               	movlw	0
   498  008842  6A00               	clrf	btemp,c
   499  008844  62D9               	cpfseq	fsr2l,c
   500  008846  2A00               	incf	btemp,f,c
   501  008848  EE0E  F0EE         	lfsr	0,_sp
   502  00884C  50EF               	movf	indf0,w,c
   503  00884E  1800               	xorwf	btemp,w,c
   504  008850  0BFE               	andlw	-2
   505  008852  1800               	xorwf	btemp,w,c
   506  008854  6EEF               	movwf	indf0,c
   507                           ;keypad.c: 154: if(sp.fl&&sp.sbk&&!sp.bk)
   508  008856  010E               	movlb	_sp shr (0+8)
   509  008858  A9EE               	btfss	_sp& (0+255),4,b
   510  00885A  D014               	goto	l19
   511  00885C  010E               	movlb	_sp shr (0+8)
   512  00885E  A3EE               	btfss	_sp& (0+255),1,b
   513  008860  D011               	goto	l19
   514  008862  010E               	movlb	_sp shr (0+8)
   515  008864  B1EE               	btfsc	_sp& (0+255),0,b
   516  008866  D00E               	goto	l19
   517                           ;keypad.c: 155: {
   518  008868  010E               	movlb	_sp shr (0+8)
   519  00886A  99EE               	bcf	_sp& (0+255),4,b
   520                           ;keypad.c: 157: sp.sbk=(sp.bk)?1:0;
   521  00886C  0E00               	movlw	0
   522  00886E  B1EE               	btfsc	_sp& (0+255),0,b
   523  008870  0E01               	movlw	1
   524  008872  6E00               	movwf	btemp,c
   525  008874  EE0E  F0EE         	lfsr	0,_sp
   526  008878  3600               	rlcf	btemp,f,c
   527  00887A  50EF               	movf	indf0,w,c
   528  00887C  1800               	xorwf	btemp,w,c
   529  00887E  0BFD               	andlw	-3
   530  008880  1800               	xorwf	btemp,w,c
   531  008882  6EEF               	movwf	indf0,c
   532  008884                     l19:
   533                           ;keypad.c: 158: }
   534  008884  010E               	movlb	_sp shr (0+8)
   535  008886  B3EE               	btfsc	_sp& (0+255),1,b
   536  008888  D006               	goto	l20
   537  00888A  010E               	movlb	_sp shr (0+8)
   538  00888C  A1EE               	btfss	_sp& (0+255),0,b
   539  00888E  D003               	goto	l20
   540  008890  0E01               	movlw	1
   541  008892  EC16  F045         	call	_StartRTdS
   542  008896                     l20:
   543                           ;keypad.c: 161: if (!sp.fl&&sp.sbk&&!sp.bk)
   544  008896  010E               	movlb	_sp shr (0+8)
   545  008898  B9EE               	btfsc	_sp& (0+255),4,b
   546  00889A  D017               	goto	l21
   547  00889C  010E               	movlb	_sp shr (0+8)
   548  00889E  A3EE               	btfss	_sp& (0+255),1,b
   549  0088A0  D014               	goto	l21
   550  0088A2  010E               	movlb	_sp shr (0+8)
   551  0088A4  B1EE               	btfsc	_sp& (0+255),0,b
   552  0088A6  D011               	goto	l21
   553                           ;keypad.c: 162: {
   554  0088A8  010E               	movlb	_sp shr (0+8)
   555  0088AA  0E00               	movlw	0
   556  0088AC  B1EE               	btfsc	_sp& (0+255),0,b
   557  0088AE  0E01               	movlw	1
   558  0088B0  6E00               	movwf	btemp,c
   559  0088B2  EE0E  F0EE         	lfsr	0,_sp
   560  0088B6  3600               	rlcf	btemp,f,c
   561  0088B8  50EF               	movf	indf0,w,c
   562  0088BA  1800               	xorwf	btemp,w,c
   563  0088BC  0BFD               	andlw	-3
   564  0088BE  1800               	xorwf	btemp,w,c
   565  0088C0  6EEF               	movwf	indf0,c
   566                           ;keypad.c: 164: StartRTdS(1);
   567  0088C2  0E01               	movlw	1
   568  0088C4  EC16  F045         	call	_StartRTdS
   569                           ;keypad.c: 165: return 1;
   570  0088C8  0C01               	retlw	1
   571  0088CA                     l21:
   572                           ;keypad.c: 166: }
   573  0088CA  010E               	movlb	_sp shr (0+8)
   574  0088CC  A3EE               	btfss	_sp& (0+255),1,b
   575  0088CE  D020               	goto	l22
   576  0088D0  010E               	movlb	_sp shr (0+8)
   577  0088D2  A1EE               	btfss	_sp& (0+255),0,b
   578  0088D4  D01D               	goto	l22
   579                           ;keypad.c: 168: {
   580  0088D6  010E               	movlb	_sp shr (0+8)
   581  0088D8  B5EE               	btfsc	_sp& (0+255),2,b
   582  0088DA  D00B               	goto	l23
   583  0088DC  0E01               	movlw	1
   584  0088DE  EC28  F045         	call	_RTdS
   585  0088E2  6E00               	movwf	btemp,c
   586  0088E4  0100               	movlb	__Lparam shr (0+8)
   587  0088E6  51F9               	movf	?_ExPresKey2^(__Lparam& (0+65280)),w
   588  0088E8  5C00               	subwf	btemp,w,c
   589                           ;keypad.c: 171: {
   590  0088EA  010E               	movlb	_sp shr (0+8)
   591  0088EC  E303               	bnc	L2
   592  0088EE  89EE               	bsf	_sp& (0+255),4,b
   593                           ;keypad.c: 173: sp.ap=1;
   594  0088F0  85EE               	bsf	_sp& (0+255),2,b
   595  0088F2                     l23:
   596                           ;keypad.c: 174: }
   597  0088F2  010E               	movlb	_sp shr (0+8)
   598  0088F4                     L2:
   599  0088F4  A5EE               	btfss	_sp& (0+255),2,b
   600  0088F6  D00E               	goto	l25
   601  0088F8  0E01               	movlw	1
   602  0088FA  EC28  F045         	call	_RTdS
   603  0088FE  6E00               	movwf	btemp,c
   604  008900  0100               	movlb	__Lparam shr (0+8)
   605  008902  51FA               	movf	(?_ExPresKey2+1)^(__Lparam& (0+65280)),w
   606  008904  5C00               	subwf	btemp,w,c
   607  008906  E306               	bnc	l25
   608                           ;keypad.c: 176: {
   609  008908  0E01               	movlw	1
   610  00890A  EC16  F045         	call	_StartRTdS
   611                           ;keypad.c: 178: return 2;
   612  00890E  0C02               	retlw	2
   613                           ;keypad.c: 179: }
   614  008910                     l22:
   615  008910  010E               	movlb	_sp shr (0+8)
   616  008912  95EE               	bcf	_sp& (0+255),2,b
   617  008914                     l25:
   618                           ;keypad.c: 181: sp.sbk=(sp.bk)?1:0;
   619  008914  010E               	movlb	_sp shr (0+8)
   620  008916  0E00               	movlw	0
   621  008918  B1EE               	btfsc	_sp& (0+255),0,b
   622  00891A  0E01               	movlw	1
   623  00891C  6E00               	movwf	btemp,c
   624  00891E  EE0E  F0EE         	lfsr	0,_sp
   625  008922  3600               	rlcf	btemp,f,c
   626  008924  50EF               	movf	indf0,w,c
   627  008926  1800               	xorwf	btemp,w,c
   628  008928  0BFD               	andlw	-3
   629  00892A  1800               	xorwf	btemp,w,c
   630  00892C  6EEF               	movwf	indf0,c
   631                           ;keypad.c: 182: if (sp.ap) return 3;
   632  00892E  B5EE               	btfsc	_sp& (0+255),2,b
   633  008930  0C03               	retlw	3
   634                           ;keypad.c: 183: return 0;
   635  008932  0C00               	retlw	0
   636                           ;keypad.c: 184: }
   637  008934                     __end_of_ExPresKey2:
   638                           ;keypad.c: 197: unsigned char ExPresKey2B(unsign
      +                          ed char k,unsigned char dTim,unsigned char pTim)
   639                           ;keypad.c: 198: {
   640  008934  00F8               	dw	?_ExPresKey2B
   641  008936                     _ExPresKey2B:
   642  000000                     
   643                           ; _k loaded to fsr2l
   644  008936  6ED9               	movwf	fsr2l,c
   645                           ;keypad.c: 199: sp2.bk=(k)?1:0;
   646  008938  0E00               	movlw	0
   647  00893A  6A00               	clrf	btemp,c
   648  00893C  62D9               	cpfseq	fsr2l,c
   649  00893E  2A00               	incf	btemp,f,c
   650  008940  EE0E  F0EF         	lfsr	0,_sp2
   651  008944  50EF               	movf	indf0,w,c
   652  008946  1800               	xorwf	btemp,w,c
   653  008948  0BFE               	andlw	-2
   654  00894A  1800               	xorwf	btemp,w,c
   655  00894C  6EEF               	movwf	indf0,c
   656                           ;keypad.c: 201: if(sp2.fl&&sp2.sbk&&!sp2.bk)
   657  00894E  010E               	movlb	_sp2 shr (0+8)
   658  008950  A9EF               	btfss	_sp2& (0+255),4,b
   659  008952  D014               	goto	l28
   660  008954  010E               	movlb	_sp2 shr (0+8)
   661  008956  A3EF               	btfss	_sp2& (0+255),1,b
   662  008958  D011               	goto	l28
   663  00895A  010E               	movlb	_sp2 shr (0+8)
   664  00895C  B1EF               	btfsc	_sp2& (0+255),0,b
   665  00895E  D00E               	goto	l28
   666                           ;keypad.c: 202: {
   667  008960  010E               	movlb	_sp2 shr (0+8)
   668  008962  99EF               	bcf	_sp2& (0+255),4,b
   669                           ;keypad.c: 204: sp2.sbk=(sp2.bk)?1:0;
   670  008964  0E00               	movlw	0
   671  008966  B1EF               	btfsc	_sp2& (0+255),0,b
   672  008968  0E01               	movlw	1
   673  00896A  6E00               	movwf	btemp,c
   674  00896C  EE0E  F0EF         	lfsr	0,_sp2
   675  008970  3600               	rlcf	btemp,f,c
   676  008972  50EF               	movf	indf0,w,c
   677  008974  1800               	xorwf	btemp,w,c
   678  008976  0BFD               	andlw	-3
   679  008978  1800               	xorwf	btemp,w,c
   680  00897A  6EEF               	movwf	indf0,c
   681  00897C                     l28:
   682                           ;keypad.c: 205: }
   683  00897C  010E               	movlb	_sp2 shr (0+8)
   684  00897E  B3EF               	btfsc	_sp2& (0+255),1,b
   685  008980  D006               	goto	l29
   686  008982  010E               	movlb	_sp2 shr (0+8)
   687  008984  A1EF               	btfss	_sp2& (0+255),0,b
   688  008986  D003               	goto	l29
   689  008988  0E02               	movlw	2
   690  00898A  EC16  F045         	call	_StartRTdS
   691  00898E                     l29:
   692                           ;keypad.c: 208: if (!sp2.fl&&sp2.sbk&&!sp2.bk)
   693  00898E  010E               	movlb	_sp2 shr (0+8)
   694  008990  B9EF               	btfsc	_sp2& (0+255),4,b
   695  008992  D017               	goto	l30
   696  008994  010E               	movlb	_sp2 shr (0+8)
   697  008996  A3EF               	btfss	_sp2& (0+255),1,b
   698  008998  D014               	goto	l30
   699  00899A  010E               	movlb	_sp2 shr (0+8)
   700  00899C  B1EF               	btfsc	_sp2& (0+255),0,b
   701  00899E  D011               	goto	l30
   702                           ;keypad.c: 209: {
   703  0089A0  010E               	movlb	_sp2 shr (0+8)
   704  0089A2  0E00               	movlw	0
   705  0089A4  B1EF               	btfsc	_sp2& (0+255),0,b
   706  0089A6  0E01               	movlw	1
   707  0089A8  6E00               	movwf	btemp,c
   708  0089AA  EE0E  F0EF         	lfsr	0,_sp2
   709  0089AE  3600               	rlcf	btemp,f,c
   710  0089B0  50EF               	movf	indf0,w,c
   711  0089B2  1800               	xorwf	btemp,w,c
   712  0089B4  0BFD               	andlw	-3
   713  0089B6  1800               	xorwf	btemp,w,c
   714  0089B8  6EEF               	movwf	indf0,c
   715                           ;keypad.c: 211: StartRTdS(2);
   716  0089BA  0E02               	movlw	2
   717  0089BC  EC16  F045         	call	_StartRTdS
   718                           ;keypad.c: 212: return 1;
   719  0089C0  0C01               	retlw	1
   720  0089C2                     l30:
   721                           ;keypad.c: 213: }
   722  0089C2  010E               	movlb	_sp2 shr (0+8)
   723  0089C4  A3EF               	btfss	_sp2& (0+255),1,b
   724  0089C6  D020               	goto	l31
   725  0089C8  010E               	movlb	_sp2 shr (0+8)
   726  0089CA  A1EF               	btfss	_sp2& (0+255),0,b
   727  0089CC  D01D               	goto	l31
   728                           ;keypad.c: 215: {
   729  0089CE  010E               	movlb	_sp2 shr (0+8)
   730  0089D0  B5EF               	btfsc	_sp2& (0+255),2,b
   731  0089D2  D00B               	goto	l32
   732  0089D4  0E02               	movlw	2
   733  0089D6  EC28  F045         	call	_RTdS
   734  0089DA  6E00               	movwf	btemp,c
   735  0089DC  0100               	movlb	__Lparam shr (0+8)
   736  0089DE  51F8               	movf	?_ExPresKey2B^(__Lparam& (0+65280)),w
   737  0089E0  5C00               	subwf	btemp,w,c
   738                           ;keypad.c: 218: {
   739  0089E2  010E               	movlb	_sp2 shr (0+8)
   740  0089E4  E303               	bnc	L3
   741  0089E6  89EF               	bsf	_sp2& (0+255),4,b
   742                           ;keypad.c: 220: sp2.ap=1;
   743  0089E8  85EF               	bsf	_sp2& (0+255),2,b
   744  0089EA                     l32:
   745                           ;keypad.c: 221: }
   746  0089EA  010E               	movlb	_sp2 shr (0+8)
   747  0089EC                     L3:
   748  0089EC  A5EF               	btfss	_sp2& (0+255),2,b
   749  0089EE  D00E               	goto	l34
   750  0089F0  0E02               	movlw	2
   751  0089F2  EC28  F045         	call	_RTdS
   752  0089F6  6E00               	movwf	btemp,c
   753  0089F8  0100               	movlb	__Lparam shr (0+8)
   754  0089FA  51F9               	movf	(?_ExPresKey2B+1)^(__Lparam& (0+65280)),w
   755  0089FC  5C00               	subwf	btemp,w,c
   756  0089FE  E306               	bnc	l34
   757                           ;keypad.c: 223: {
   758  008A00  0E02               	movlw	2
   759  008A02  EC16  F045         	call	_StartRTdS
   760                           ;keypad.c: 225: return 2;
   761  008A06  0C02               	retlw	2
   762                           ;keypad.c: 226: }
   763  008A08                     l31:
   764  008A08  010E               	movlb	_sp2 shr (0+8)
   765  008A0A  95EF               	bcf	_sp2& (0+255),2,b
   766  008A0C                     l34:
   767                           ;keypad.c: 228: sp2.sbk=(sp2.bk)?1:0;
   768  008A0C  010E               	movlb	_sp2 shr (0+8)
   769  008A0E  0E00               	movlw	0
   770  008A10  B1EF               	btfsc	_sp2& (0+255),0,b
   771  008A12  0E01               	movlw	1
   772  008A14  6E00               	movwf	btemp,c
   773  008A16  EE0E  F0EF         	lfsr	0,_sp2
   774  008A1A  3600               	rlcf	btemp,f,c
   775  008A1C  50EF               	movf	indf0,w,c
   776  008A1E  1800               	xorwf	btemp,w,c
   777  008A20  0BFD               	andlw	-3
   778  008A22  1800               	xorwf	btemp,w,c
   779  008A24  6EEF               	movwf	indf0,c
   780                           ;keypad.c: 229: if (sp2.ap) return 3;
   781  008A26  B5EF               	btfsc	_sp2& (0+255),2,b
   782  008A28  0C03               	retlw	3
   783                           ;keypad.c: 230: return 0;
   784  008A2A  0C00               	retlw	0
   785                           ;keypad.c: 231: }
   786  008A2C                     __end_of_ExPresKey2B:
   787  000000                     
   788  000000                     
   789  000000                     
   790  000000                     
   791  000000                     
   792  000000                     
   793  000000                     
   794  000000                     
   795  000000                     
   796  000000                     
   797  000000                     
   798  000000                     
   799  000000                     
   800  000000                     
   801  000000                     
   802  000000                     
   803  000000                     
   804  000000                     
   805  000000                     
   806  000000                     
   807  000000                     
   808  000000                     
   809  000000                     
   810  000000                     
   811  000000                     
   812  000000                     
   813  000000                     
   814  000000                     
   815  000000                     
   816  000000                     
   817  000000                     
   818  000000                     
   819  000000                     
   820  000000                     
   821  000000                     
   822  000000                     
   823  000000                     
   824  000000                     
   825  000000                     
   826  000000                     
   827  000000                     
   828  000000                     
   829  000000                     
   830  000000                     
   831  000000                     
   832  000000                     
   833  000000                     
   834  000000                     
   835  000000                     
   836  000000                     
   837  000000                     
   838  000000                     
   839  000000                     
   840  000000                     
   841  000000                     
   842  000000                     
   843  000000                     
   844  000000                     
   845  000000                     
   846  000000                     
   847  000000                     
   848  000000                     
   849  000000                     
   850  000000                     
   851  000000                     
   852  000000                     
   853  000000                     
   854  000000                     
   855  000000                     
   856  000000                     
   857  000000                     
   858  000000                     
   859  000000                     
   860  000000                     
   861  000000                     
   862  000000                     
   863  000000                     
   864  000000                     
   865  000000                     
   866  000000                     
   867  000000                     
   868  000000                     
   869  000000                     
   870  000000                     
   871  000000                     
   872  000000                     
   873  000000                     
   874  000000                     
   875  000000                     
   876  000000                     
   877  000000                     
   878  000000                     
   879  000000                     
   880  000000                     
   881  000000                     
   882  000000                     
   883  000000                     
   884  000000                     
   885  000000                     
   886  000000                     
   887  000000                     
   888  000000                     
   889  000000                     
   890  000000                     
   891  000000                     
   892  000000                     
   893  000000                     
   894  000000                     
   895  000000                     
   896  000000                     
   897  000000                     
   898  000000                     
   899  000000                     
   900  000000                     
   901  000000                     
   902  000000                     
   903  000000                     
   904  000000                     
   905  000000                     
   906  000000                     
   907  000000                     
   908  000000                     
   909  000000                     
   910  000000                     
   911  000000                     
   912  000000                     
   913  000000                     
   914  000000                     
   915  000000                     
   916  000000                     
   917  000000                     
   918  000000                     
   919  000000                     
   920  000000                     
   921  000000                     
   922  000000                     
   923  000000                     
   924  000000                     
   925  000000                     
   926  000000                     
   927  000000                     
   928  000000                     
   929  000000                     
   930  000000                     
   931  000000                     
   932  000000                     
   933  000000                     
   934  000000                     
   935  000000                     
   936  000000                     
   937  000000                     
   938  000000                     
   939  000000                     
   940  000000                     
   941  000000                     
   942  000000                     
   943  000000                     
   944  000000                     
   945  000000                     
   946  000000                     
   947  000000                     
   948  000000                     
   949  000000                     
   950  000000                     
   951  000000                     
   952  000000                     
   953  000000                     
   954  000000                     
   955  000000                     
   956  000000                     
   957  000000                     
   958  000000                     
   959  000000                     
   960  000000                     
   961  000000                     
   962  000000                     
   963  000000                     
   964  000000                     
   965  000000                     
   966  000000                     
   967  000000                     
   968  000000                     
   969  000000                     
   970  000000                     
   971  000000                     
   972  000000                     
   973  000000                     
   974  000000                     
   975  000000                     
   976  000000                     
   977  000000                     
   978  000000                     
   979  000000                     
   980  000000                     
   981  000000                     
   982  000000                     
   983  000000                     
   984  000000                     
   985  000000                     
   986  000000                     
   987  000000                     
   988  000000                     
   989  000000                     
   990  000000                     
   991  000000                     
   992  000000                     
   993  000000                     
   994  000000                     
   995  000000                     
   996  000000                     
   997  000000                     
   998  000000                     
   999  000000                     
  1000  000000                     
  1001  000000                     
  1002  000000                     
  1003  000000                     
  1004  000000                     
  1005  000000                     
  1006  000000                     
  1007  000000                     
  1008  000000                     
  1009  000000                     
  1010  000000                     
  1011  000000                     
  1012  000000                     
  1013  000000                     
  1014  000000                     
  1015  000000                     
  1016  000000                     
  1017  000000                     
  1018  000000                     
  1019  000000                     
  1020  000000                     
  1021  000000                     
  1022  000000                     
  1023  000000                     
  1024  000000                     
  1025  000000                     
  1026  000000                     
  1027  000000                     
  1028  000000                     
  1029  000000                     
  1030  000000                     
  1031  000000                     
  1032  000000                     
  1033  000000                     
  1034  000000                     
  1035  000000                     
  1036  000000                     
  1037  000000                     
  1038  000000                     
  1039  000000                     
  1040  000000                     
  1041  000000                     
  1042  000000                     
  1043  000000                     
  1044  000000                     
  1045  000000                     
  1046  000000                     
  1047  000000                     
  1048  000000                     
  1049  000000                     
  1050  000000                     
  1051  000000                     
  1052  000000                     
  1053  000000                     
  1054  000000                     
  1055  000000                     
  1056  000000                     
  1057  000000                     
  1058  000000                     
  1059  000000                     
  1060  000000                     
  1061  000000                     
  1062  000000                     
  1063  000000                     
  1064  000000                     
  1065  000000                     
  1066  000000                     
  1067  000000                     
  1068  000000                     
  1069  000000                     
  1070  000000                     
  1071  000000                     
  1072  000000                     
  1073  000000                     
  1074  000000                     
  1075  000000                     
  1076  000000                     
  1077  000000                     
  1078  000000                     
  1079  000000                     
  1080  000000                     
  1081  000000                     
  1082  000000                     
  1083  000000                     
  1084  000000                     
  1085  000000                     
  1086  000000                     
  1087  000000                     
  1088  000000                     
  1089  000000                     
  1090  000000                     
  1091  000000                     
  1092  000000                     
  1093  000000                     
  1094  000000                     
  1095  000000                     
  1096  000000                     
  1097  000000                     
  1098  000000                     
  1099  000000                     
  1100  000000                     
  1101  000000                     
  1102  000000                     
  1103  000000                     
  1104  000000                     
  1105  000000                     
  1106  000000                     
  1107  000000                     
  1108  000000                     
  1109  000000                     
  1110  000000                     
  1111  000000                     
  1112  000000                     
  1113  000000                     
  1114  000000                     
  1115  000000                     
  1116  000000                     
  1117  000000                     
  1118  000000                     
  1119  000000                     
  1120  000000                     
  1121  000000                     
  1122  000000                     
  1123  000000                     
  1124  000000                     
  1125  000000                     
  1126  000000                     
  1127  000000                     
  1128  000000                     
  1129  000000                     
  1130  000000                     
  1131  000000                     
  1132  000000                     
  1133  000000                     
  1134  000000                     
  1135  000000                     
  1136  000000                     
  1137  000000                     
  1138  000000                     
  1139  000000                     
  1140  000000                     
  1141  000000                     
  1142  000000                     
  1143  000000                     
  1144  000000                     
  1145  000000                     
  1146  000000                     
  1147  000000                     
  1148  000000                     
  1149  000000                     
  1150  000000                     
  1151  000000                     
  1152  000000                     
  1153  000000                     
  1154  000000                     
  1155  000000                     
  1156  000000                     
  1157  000000                     
  1158  000000                     
  1159  000000                     
  1160  000000                     
  1161  000000                     
  1162  000000                     
  1163  000000                     
  1164  000000                     
  1165  000000                     
  1166  000000                     
  1167  000000                     
  1168  000000                     
  1169  000000                     
  1170  000000                     
  1171  000000                     
  1172  000000                     
  1173  000000                     
  1174  000000                     
  1175  000000                     
  1176  000000                     
  1177  000000                     
  1178  000000                     
  1179  000000                     
  1180  000000                     
  1181  000000                     
  1182  000000                     
  1183  000000                     
  1184  000000                     
  1185  000000                     
  1186  000000                     
  1187  000000                     
  1188  000000                     
  1189  000000                     
  1190  000000                     
  1191  000000                     
  1192  000000                     
  1193  000000                     
  1194  000000                     
  1195  000000                     
  1196  000000                     
  1197  000000                     
  1198  000000                     
  1199  000000                     
  1200  000000                     
  1201  000000                     
  1202  000000                     
  1203  000000                     
  1204  000000                     
  1205  000000                     
  1206  000000                     
  1207  000000                     
  1208  000000                     
  1209  000000                     
  1210  000000                     
  1211  000000                     
  1212  000000                     
  1213  000000                     
  1214  000000                     
  1215  000000                     
  1216  000000                     
  1217  000000                     
  1218  000000                     
  1219  000000                     
  1220  000000                     
  1221  000000                     
  1222  000000                     
  1223  000000                     
  1224  000000                     
  1225  000000                     
  1226  000000                     
  1227  000000                     
  1228  000000                     
  1229  000000                     
  1230  000000                     
  1231  000000                     
  1232  000000                     
  1233  000000                     
  1234  000000                     
  1235  000000                     
  1236  000000                     
  1237  000000                     
  1238  000000                     
  1239  000000                     
  1240  000000                     
  1241  000000                     
  1242  000000                     
  1243  000000                     
  1244  000000                     
  1245  000000                     
  1246  000000                     
  1247  000000                     
  1248  000000                     
  1249  000000                     
  1250  000000                     
  1251  000000                     
  1252  000000                     
  1253  000000                     
  1254  000000                     
  1255  000000                     
  1256  000000                     
  1257  000000                     
  1258  000000                     
  1259  000000                     
  1260  000000                     
  1261  000000                     
  1262  000000                     
  1263  000000                     
  1264  000000                     
  1265  000000                     
  1266  000000                     
  1267  000000                     
  1268  000000                     
  1269  000000                     
  1270  000000                     
  1271  000000                     
  1272  000000                     
  1273  000000                     
  1274  000000                     
  1275  000000                     
  1276  000000                     
  1277  000000                     
  1278  000000                     
  1279  000000                     
  1280  000000                     
  1281  000000                     
  1282  000000                     
  1283  000000                     
  1284  000000                     
  1285  000000                     
  1286  000000                     
  1287  000000                     
  1288  000000                     
  1289  000000                     
  1290  000000                     
  1291  000000                     
  1292  000000                     
  1293  000000                     
  1294  000000                     
  1295  000000                     
  1296  000000                     
  1297  000000                     
  1298  000000                     
  1299  000000                     
  1300  000000                     
  1301  000000                     
  1302  000000                     
  1303  000000                     
  1304  000000                     
  1305  000000                     
  1306  000000                     
  1307  000000                     
  1308  000000                     
  1309  000000                     
  1310  000000                     
  1311  000000                     
  1312  000000                     
  1313  000000                     
  1314  000000                     
  1315  000000                     
  1316  000000                     
  1317  000000                     
  1318  000000                     
  1319  000000                     
  1320  000000                     
  1321  000000                     
  1322  000000                     
  1323  000000                     
  1324  000000                     
  1325  000000                     
  1326  000000                     
  1327  000000                     
  1328  000000                     
  1329  000000                     
  1330  000000                     
  1331  000000                     
  1332  000000                     
  1333  000000                     
  1334  000000                     
  1335  000000                     
  1336  000000                     
  1337  000000                     
  1338  000000                     
  1339  000000                     
  1340  000000                     
  1341  000000                     
  1342  000000                     
  1343  000000                     
  1344  000000                     
  1345  000000                     
  1346  000000                     
  1347  000000                     
  1348                           
  1349                           	psect	bigbss
  1350  000EEC                     _ky1:
  1351  000EEC                     	ds	1
  1352  000EEC                     _ky2:
  1353  000EEC                     	ds	1
  1354  000EEC                     _sp:
  1355  000EEC                     	ds	1
  1356  000EEC                     _sp2:
  1357  000EEC                     	ds	1
  1358  000000                     
  1359  000000                     
  1360  000000                     
  1361  000000                     
  1362  000000                     
  1363  000000                     
  1364  000000                     
  1365                           
  1366                           	psect	temp
  1367  000000                     btemp:
  1368  000000                     	ds	1
  1369                           indf0	equ	0xFEF
  1370                           fsr2l	equ	0xFD9


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Wed Jun 11 12:30:07 2014

           _PresKey1 86C8             _PresKey2 8730  
                  l7 8708                   l11 8770  
                 l20 8896                   l21 88CA  
                 l13 87D4                   l30 89C2  
                 l22 8910                   l14 8836  
                 l31 8A08                   l23 88F2  
                 l15 8818                   l32 89EA  
                 l25 8914                   l17 883A  
                 l34 8A0C                   l19 8884  
                 l28 897C                   l29 898E  
                 _sp 0EEE                  _ky1 0EEC  
                _ky2 0EED                  _sp2 0EEF  
          _StartRTdS 8A2C                 _RTdS 8A50  
               indf0 000FEF                 fsr2l 000FD9  
               btemp 0000           used_btemp0 0001  
        _ExPresKey2B 8936  __end_of_ExPresKey2B 8A2C  
              status 000FD8              __Lparam 00F0  
   __end_of_PresKey1 8724     __end_of_PresKey2 878C  
       ?_ExPresKey2B 00F8              __ramtop 1000  
         _ExPresKey2 883E   __end_of_ExPresKey2 8934  
        ?_ExPresKey2 00F9            _ExPresKey 878E  
  __end_of_ExPresKey 883C           ?_ExPresKey 00F7  
         _ResBufKey1 86C2           _ResBufKey2 872A  
 __end_of_ResBufKey1 86C8   __end_of_ResBufKey2 8730  
          _ResBufKey 86B6           _SetBufKey1 86BC  
         _SetBufKey2 8724    __end_of_ResBufKey 86BC  
 __end_of_SetBufKey1 86C2   __end_of_SetBufKey2 872A  
          _SetBufKey 86B0    __end_of_SetBufKey 86B6  
