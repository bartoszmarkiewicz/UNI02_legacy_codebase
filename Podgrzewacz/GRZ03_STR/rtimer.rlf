ý

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Wed Jun 11 12:30:09 2014


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	rbss,global,common,class=COMRAM,space=1,d
      +                          elta=1
     5                           	psect	temp,global,ovrld,common,class=COMRAMý,spa
      +                          ce=1,delta=1
     6                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     7  000000                     
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000ý000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000  ý                   
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000       ý              
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000            ý         
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                 ý    
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
ý    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96                           
    97                           	psect	text
    98                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                 ý         d char TOSU @ 0xFFF;
    99                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   100                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   101                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   102                           ;pic18f45k20.h: 24: static volatile ýnear unsigne
      +                          d char PCLATU @ 0xFFB;
   103                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   104                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   105                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   106                      ý     ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   107                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   108                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   109                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d chaýr TABLAT @ 0xFF5;
   110                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   111                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   112                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   113                           ;pic18f45k20.h: 35: static near unsigned char ýIN
      +                          TCON2 @ 0xFF1;
   114                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   115                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   116                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   117                           ;pic18f45ýk20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   118                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   119                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   120                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEýA;
   121                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   122                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   123                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   124                           ;pic18f45k20.h: 46: static volatile near unsigne
      +       ý                   d char POSTINC1 @ 0xFE6;
   125                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   126                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   127                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   128                           ;pic18f45k20.h:ý 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   129                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   130                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   131                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   132              ý             ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   133                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   134                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   135                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                     ý     d char PLUSW2 @ 0xFDB;
   136                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   137                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   138                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   139                           ;pic18f45k20.h: 61: static volatile ýnear unsigne
      +                          d char TMR0H @ 0xFD7;
   140                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   141                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   142                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   143                           ;pic18f4ý5k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   144                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   145                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   146                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;ý
   147                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   148                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   149                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   150                           ;pic18f45k20.h: 74: static near unsigned char T1
      +          ý                CON @ 0xFCD;
   151                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   152                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   153                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   154                           ;pic18f45k20.h: 78: static volatile near unsigne
      + ý                         d char SSPBUF @ 0xFC9;
   155                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   156                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   157                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   158                           ;pic18f45k20.h: 82: sýtatic volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   159                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   160                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   161                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   162      ý                     ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   163                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   164                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   165                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPýR1H @ 0xFBF;
   166                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   167                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   168                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   169                           ;pic18f45k20.h: 95: static volatile near unsigne
 ý     +                          d char CCPR2H @ 0xFBC;
   170                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   171                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   172                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   173                           ;pic18f4ý5k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   174                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   175                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   176                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;ý
   177                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   178                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   179                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   180                           ;pic18f45k20.h: 107: static volatile near unsign
      +  ý                        ed char TMR3L @ 0xFB2;
   181                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   182                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   183                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   184                           ;pic18f45k20.h: 112: static near uýnsigned char S
      +                          PBRG @ 0xFAF;
   185                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   186                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   187                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   188                           ;pic18fý45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   189                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   190                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   191                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xýFAC;
   192                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   193                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   194                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   195                           ;pic18f45k20.h: 130: static near unsigned char E
      +        >                  EADR @ 0xFA9;
   196                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   197                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   198        4text                        _StartRTdS:
   199  000000                     
   200                           ; _Index loaded to fsr2l
   201        4text  y   6ED9               	movwf	fsr2l,c
   202                           ;rtimer.c: 56: if (Index>8-1) asm("RESET");
   203        4text     &   0E07               	movlw	7
   204        4text     -   64D9               	cpfsgt	fsr2l,c
   205        4text     &   D001               	goto	l7
   206        4text     (   00FF               	reset		;#
   207        4text 
    b                      l7:
   208                           ;rtimer.c: 57: dSk[Index].cS=0;
   209        4text 
    -   50D9               	movf	fsr2l,w,c
   210        4text     .   24D9               	addwf	fsr2l,w,c
   211        4text             1rbss     #                	addlw	_dSk
   212        4text     ,   6EE9               	movwf	fsr0l,c
   213        4text     +   6AEA               	clrf	fsr0h,c
   214        4text     l   6AEF               	clrf	indf0,c
   215                           ;rtimer.c: 58: dSk[Index].dS=0;
   216        4text     -   50D9               	movf	fsr2l,w,c
   217        4text     .   24D9               	addwf	fsr2l,w,c
   218        4text             1rbss     %                	addlw	_dSk+1
   219        4text     ,   6EE9               	movwf	fsr0l,c
   220        4text     +   6AEA               	clrf	fsr0h,c
   221        4text      ]   6AEF               	clrf	indf0,c
   222                           ;rtimer.c: 59: }
   223        4text "    &   0C00               	retlw	0
   224        4text $    ã                      __end_of_StartRTdS:
   225                           ;rtimer.c: 60: unsigned char RTdS(const unsigned
      +                           char Index)
   226                           ;rtimer.c: 61: {
   227        4text $                          _RTdS:
   228  000000                     
   229                           ; _Index loaded to fsr2l
   230        4text $    y   6ED9               	movwf	fsr2l,c
   231                           ;rtimer.c: 62: if (Index>8-1) asm("RESET");
   232        4text &    &   0E07               	movlw	7
   233        4text (    -   64D9               	cpfsgt	fsr2l,c
   234        4text *    &   D001               	goto	l9
   235        4text ,    (   00FF               	reset		;#
   236        4text .    g                      l9:
   237                           ;rtimer.c: 63: return dSk[Index].dS;
   238        4text .    -   50D9               	movf	fsr2l,w,c
   239        4text 0    .   24D9               	addwf	fsr2l,w,c
   240        4text 2            1rbss     %                	addlw	_dSk+1
   241        4text 4    ,   6EE9               	movwf	fsr0l,c
   242        4text 6    +   6AEA               	clrf	fsr0h,c
   243        4text 8    -   50EF               	movf	indf0,w,c
   244        4text :    X   0012               	return	
   245                           ;rtimer.c: 64: }
   246        4text <    Ù                      __end_of_RTdS:
   247                           ;rtimer.c: 69: void StartRTS(const unsigned char
      +                           Index)
   248                           ;rtimer.c: 70: {
   249        4text <                          _StartRTS:
   250  000000                     
   251                           ; _Index loaded to fsr2l
   252        4text <    z   6ED9               	movwf	fsr2l,c
   253                           ;rtimer.c: 71: if (Index>14-1) asm("RESET");
   254        4text >    '   0E0D               	movlw	13
   255        4text @    -   64D9               	cpfsgt	fsr2l,c
   256        4text B    '   D001               	goto	l11
   257        4text D    (   00FF               	reset		;#
   258        4text F    b                      l11:
   259                           ;rtimer.c: 72: Sk[Index].dS=0;
   260        4text F    -   50D9               	movf	fsr2l,w,c
   261        4text H    .   24D9               	addwf	fsr2l,w,c
   262        4text J            1rbss #    "                	addlw	_Sk
   263        4text L    ,   6EE9               	movwf	fsr0l,c
   264        4text N    +   6AEA               	clrf	fsr0h,c
   265        4text P    j   6AEF               	clrf	indf0,c
   266                           ;rtimer.c: 73: Sk[Index].S=0;
   267        4text R    -   50D9               	movf	fsr2l,w,c
   268        4text T    .   24D9               	addwf	fsr2l,w,c
   269        4text V            1rbss $    $                	addlw	_Sk+1
   270        4text X    ,   6EE9               	movwf	fsr0l,c
   271        4text Z    +   6AEA               	clrf	fsr0h,c
   272        4text \    ]   6AEF               	clrf	indf0,c
   273                           ;rtimer.c: 74: }
   274        4text ^    &   0C00               	retlw	0
   275        4text `    á                      __end_of_StartRTS:
   276                           ;rtimer.c: 75: unsigned char RTS(const unsigned 
      +                          char Index)
   277                           ;rtimer.c: 76: {
   278        4text `                          _RTS:
   279  000000                     
   280                           ; _Index loaded to fsr2l
   281        4text `    z   6ED9               	movwf	fsr2l,c
   282                           ;rtimer.c: 77: if (Index>14-1) asm("RESET");
   283        4text b    '   0E0D               	movlw	13
   284        4text d    -   64D9               	cpfsgt	fsr2l,c
   285        4text f    '   D001               	goto	l13
   286        4text h    (   00FF               	reset		;#
   287        4text j    f                      l13:
   288                           ;rtimer.c: 78: return Sk[Index].S;
   289        4text j    -   50D9               	movf	fsr2l,w,c
   290        4text l    .   24D9               	addwf	fsr2l,w,c
   291        4text n            1rbss $    $                	addlw	_Sk+1
   292        4text p    ,   6EE9               	movwf	fsr0l,c
   293        4text r    +   6AEA               	clrf	fsr0h,c
   294        4text t    -   50EF               	movf	indf0,w,c
   295        4text v    X   0012               	return	
   296                           ;rtimer.c: 79: }
   297        4text x    Ø                      __end_of_RTS:
   298                           ;rtimer.c: 84: void StartRTM(const unsigned char
      +                           Index)
   299                           ;rtimer.c: 85: {
   300        4text x                          _StartRTM:
   301  000000                     
   302                           ; _Index loaded to fsr2l
   303        4text x    y   6ED9               	movwf	fsr2l,c
   304                           ;rtimer.c: 86: if (Index>6-1) asm("RESET");
   305        4text z    &   0E05               	movlw	5
   306        4text |    -   64D9               	cpfsgt	fsr2l,c
   307        4text ~    '   D001               	goto	l15
   308        4text     (   00FF               	reset		;#
   309        4text     a                      l15:
   310                           ;rtimer.c: 87: Mn[Index].S=0;
   311        4text     -   50D9               	movf	fsr2l,w,c
   312        4text     .   24D9               	addwf	fsr2l,w,c
   313        4text             1rbss     "                	addlw	_Mn
   314        4text     ,   6EE9               	movwf	fsr0l,c
   315        4text     +   6AEA               	clrf	fsr0h,c
   316        4text     j   6AEF               	clrf	indf0,c
   317                           ;rtimer.c: 88: Mn[Index].M=0;
   318        4text     -   50D9               	movf	fsr2l,w,c
   319        4text     .   24D9               	addwf	fsr2l,w,c
   320        4text             1rbss     $                	addlw	_Mn+1
   321        4text     ,   6EE9               	movwf	fsr0l,c
   322        4text     +   6AEA               	clrf	fsr0h,c
   323        4text     ]   6AEF               	clrf	indf0,c
   324                           ;rtimer.c: 89: }
   325        4text     &   0C00               	retlw	0
   326        4text     á                      __end_of_StartRTM:
   327                           ;rtimer.c: 90: unsigned char RTM(const unsigned 
      +                          char Index)
   328                           ;rtimer.c: 91: {
   329        4text                           _RTM:
   330  000000                     
   331                           ; _Index loaded to fsr2l
   332        4text     y   6ED9               	movwf	fsr2l,c
   333                           ;rtimer.c: 92: if (Index>6-1) asm("RESET");
   334        4text     &   0E05               	movlw	5
   335        4text      -   64D9               	cpfsgt	fsr2l,c
   336        4text ¢    '   D001               	goto	l17
   337        4text ¤    (   00FF               	reset		;#
   338        4text ¦    f                      l17:
   339                           ;rtimer.c: 93: return Mn[Index].M;
   340        4text ¦    -   50D9               	movf	fsr2l,w,c
   341        4text ¨    .   24D9               	addwf	fsr2l,w,c
   342        4text ª            1rbss     $                	addlw	_Mn+1
   343        4text ¬    ,   6EE9               	movwf	fsr0l,c
   344        4text ®    +   6AEA               	clrf	fsr0h,c
   345        4text °    -   50EF               	movf	indf0,w,c
   346        4text ²    X   0012               	return	
   347                           ;rtimer.c: 94: }
   348        4text ´    Ý                      __end_of_RTM:
   349                           ;rtimer.c: 95: unsigned char RTMs(const unsigned
      +                           char Index)
   350                           ;rtimer.c: 96: {
   351        4text ´                          _RTMs:
   352  000000                     
   353                           ; _Index loaded to fsr2l
   354        4text ´    y   6ED9               	movwf	fsr2l,c
   355                           ;rtimer.c: 97: if (Index>6-1) asm("RESET");
   356        4text ¶    &   0E05               	movlw	5
   357        4text ¸    -   64D9               	cpfsgt	fsr2l,c
   358        4text º    '   D001               	goto	l19
   359        4text ¼    (   00FF               	reset		;#
   360        4text ¾    f                      l19:
   361                           ;rtimer.c: 98: return Mn[Index].S;
   362        4text ¾    -   50D9               	movf	fsr2l,w,c
   363        4text À    .   24D9               	addwf	fsr2l,w,c
   364        4text Â            1rbss     "                	addlw	_Mn
   365        4text Ä    ,   6EE9               	movwf	fsr0l,c
   366        4text Æ    +   6AEA               	clrf	fsr0h,c
   367        4text È    -   50EF               	movf	indf0,w,c
   368        4text Ê    X   0012               	return	
   369                           ;rtimer.c: 99: }
   370        4text Ì    Û                      __end_of_RTMs:
   371                           ;rtimer.c: 104: void StartRTG(const unsigned cha
      +                          r Index)
   372                           ;rtimer.c: 105: {
   373        4text Ì                          _StartRTG:
   374  000000                     
   375                           ; _Index loaded to fsr2l
   376        4text Ì    z   6ED9               	movwf	fsr2l,c
   377                           ;rtimer.c: 106: if (Index>2-1) asm("RESET");
   378        4text Î    &   0E01               	movlw	1
   379        4text Ð    -   64D9               	cpfsgt	fsr2l,c
   380        4text Ò    '   D001               	goto	l21
   381        4text Ô    (   00FF               	reset		;#
   382        4text Ö    b                      l21:
   383                           ;rtimer.c: 107: Gd[Index].M=0;
   384        4text Ö    -   50D9               	movf	fsr2l,w,c
   385        4text Ø    .   24D9               	addwf	fsr2l,w,c
   386        4text Ú            1rbss     "                	addlw	_Gd
   387        4text Ü    ,   6EE9               	movwf	fsr0l,c
   388        4text Þ    +   6AEA               	clrf	fsr0h,c
   389        4text à    k   6AEF               	clrf	indf0,c
   390                           ;rtimer.c: 108: Gd[Index].G=0;
   391        4text â    -   50D9               	movf	fsr2l,w,c
   392        4text ä    .   24D9               	addwf	fsr2l,w,c
   393        4text æ            1rbss     $                	addlw	_Gd+1
   394        4text è    ,   6EE9               	movwf	fsr0l,c
   395        4text ê    +   6AEA               	clrf	fsr0h,c
   396        4text ì    ^   6AEF               	clrf	indf0,c
   397                           ;rtimer.c: 109: }
   398        4text î    &   0C00               	retlw	0
   399        4text ð    ã                      __end_of_StartRTG:
   400                           ;rtimer.c: 110: unsigned char RTG(const unsigned
      +                           char Index)
   401                           ;rtimer.c: 111: {
   402        4text ð                          _RTG:
   403  000000                     
   404                           ; _Index loaded to fsr2l
   405        4text ð    z   6ED9               	movwf	fsr2l,c
   406                           ;rtimer.c: 112: if (Index>2-1) asm("RESET");
   407        4text ò    &   0E01               	movlw	1
   408        4text ô    -   64D9               	cpfsgt	fsr2l,c
   409        4text ö    '   D001               	goto	l23
   410        4text ø    (   00FF               	reset		;#
   411        4text ú    g                      l23:
   412                           ;rtimer.c: 113: return Gd[Index].G;
   413        4text ú    -   50D9               	movf	fsr2l,w,c
   414        4text ü    .   24D9               	addwf	fsr2l,w,c
   415        4text þ            1rbss     $                	addlw	_Gd+1
   416        4text     ,   6EE9               	movwf	fsr0l,c
   417        4text    +   6AEA               	clrf	fsr0h,c
   418        4text    -   50EF               	movf	indf0,w,c
   419        4text    Y   0012               	return	
   420                           ;rtimer.c: 114: }
   421        4text    ¤                      __end_of_RTG:
   422                           ;rtimer.c: 119: void IncRTimer(void)
   423                           ;rtimer.c: 120: {
   424        4text                          _IncRTimer:
   425  000000                     
   426                           ;rtimer.c: 122: unsigned char i;
   427        4text    +   6AD9               	clrf	fsr2l,c
   428        4text 
   U                      l25:
   429                           ;rtimer.c: 136: {
   430        4text 
   -   50D9               	movf	fsr2l,w,c
   431        4text    .   24D9               	addwf	fsr2l,w,c
   432        4text            1rbss     #                	addlw	_dSk
   433        4text    ,   6EE9               	movwf	fsr0l,c
   434        4text    +   6AEA               	clrf	fsr0h,c
   435        4text    n   2AEF               	incf	indf0,f,c
   436                           ;rtimer.c: 138: if(dSk[i].cS>9)
   437        4text    -   50D9               	movf	fsr2l,w,c
   438        4text    .   24D9               	addwf	fsr2l,w,c
   439        4text            1rbss     #                	addlw	_dSk
   440        4text    ,   6EE9               	movwf	fsr0l,c
   441        4text    +   6AEA               	clrf	fsr0h,c
   442        4text     -   50EF               	movf	indf0,w,c
   443        4text "        n   1temp  &                	movwf	btemp,c
   444        4text $   '   0E0A               	movlw	10
   445        4text &        \   1temp  (                	subwf	btemp,w,c
   446        4text (   Y   E315               	bnc	l28
   447                           ;rtimer.c: 139: {
   448        4text *   -   50D9               	movf	fsr2l,w,c
   449        4text ,   .   24D9               	addwf	fsr2l,w,c
   450        4text .           1rbss     #                	addlw	_dSk
   451        4text 0   ,   6EE9               	movwf	fsr0l,c
   452        4text 2   +   6AEA               	clrf	fsr0h,c
   453        4text 4   {   6AEF               	clrf	indf0,c
   454                           ;rtimer.c: 141: if(dSk[i].dS<255) dSk[i].dS++;
   455        4text 6   -   50D9               	movf	fsr2l,w,c
   456        4text 8   .   24D9               	addwf	fsr2l,w,c
   457        4text :           1rbss     %                	addlw	_dSk+1
   458        4text <   ,   6EE9               	movwf	fsr0l,c
   459        4text >   +   6AEA               	clrf	fsr0h,c
   460        4text @   -   50EF               	movf	indf0,w,c
   461        4text B        n   1temp  &                	movwf	btemp,c
   462        4text D        (   1temp  '                	incf	btemp,w,c
   463        4text F   %   E006               	bz	l28
   464        4text H   -   50D9               	movf	fsr2l,w,c
   465        4text J   .   24D9               	addwf	fsr2l,w,c
   466        4text L           1rbss     %                	addlw	_dSk+1
   467        4text N   ,   6EE9               	movwf	fsr0l,c
   468        4text P   +   6AEA               	clrf	fsr0h,c
   469        4text R   -   2AEF               	incf	indf0,f,c
   470        4text T   "                      l28:
   471        4text T   -   2AD9               	incf	fsr2l,f,c
   472        4text V   &   0E07               	movlw	7
   473        4text X   -   64D9               	cpfsgt	fsr2l,c
   474        4text Z   Z   D7D7               	goto	l25
   475                           ;rtimer.c: 142: }
   476        4text \        *   1rbss  t                	incf	_CommRT,f,c	;volatile
   477                           ;rtimer.c: 149: if(CommRT.cS>9)
   478        4text ^   &   0E09               	movlw	9
   479        4text `        d   1rbss  3                	cpfsgt	_CommRT,c	;volatile
   480        4text b   Y   0C09               	retlw	9
   481                           ;rtimer.c: 150: {
   482        4text d        j   1rbss  o                	clrf	_CommRT,c	;volatile
   483                           ;rtimer.c: 152: CommRT.dS++;
   484        4text f        *   1rbss     x                	incf	_CommRT+1,f,c	;volatile
   485                           ;rtimer.c: 157: for(i=0;i<14;i++)
   486        4text h   +   6AD9               	clrf	fsr2l,c
   487        4text j   U                      l31:
   488                           ;rtimer.c: 158: {
   489        4text j   -   50D9               	movf	fsr2l,w,c
   490        4text l   .   24D9               	addwf	fsr2l,w,c
   491        4text n           1rbss #    "                	addlw	_Sk
   492        4text p   ,   6EE9               	movwf	fsr0l,c
   493        4text r   +   6AEA               	clrf	fsr0h,c
   494        4text t   m   2AEF               	incf	indf0,f,c
   495                           ;rtimer.c: 160: if(Sk[i].dS>9)
   496        4text v   -   50D9               	movf	fsr2l,w,c
   497        4text x   .   24D9               	addwf	fsr2l,w,c
   498        4text z           1rbss #    "                	addlw	_Sk
   499        4text |   ,   6EE9               	movwf	fsr0l,c
   500        4text ~   +   6AEA               	clrf	fsr0h,c
   501        4text    -   50EF               	movf	indf0,w,c
   502        4text         n   1temp  &                	movwf	btemp,c
   503        4text    '   0E0A               	movlw	10
   504        4text         \   1temp  (                	subwf	btemp,w,c
   505        4text    Y   E315               	bnc	l34
   506                           ;rtimer.c: 161: {
   507        4text    -   50D9               	movf	fsr2l,w,c
   508        4text    .   24D9               	addwf	fsr2l,w,c
   509        4text            1rbss #    "                	addlw	_Sk
   510        4text    ,   6EE9               	movwf	fsr0l,c
   511        4text    +   6AEA               	clrf	fsr0h,c
   512        4text    w   6AEF               	clrf	indf0,c
   513                           ;rtimer.c: 163: if(Sk[i].S<255) Sk[i].S++;
   514        4text    -   50D9               	movf	fsr2l,w,c
   515        4text    .   24D9               	addwf	fsr2l,w,c
   516        4text            1rbss $    $                	addlw	_Sk+1
   517        4text    ,   6EE9               	movwf	fsr0l,c
   518        4text    +   6AEA               	clrf	fsr0h,c
   519        4text     -   50EF               	movf	indf0,w,c
   520        4text ¢        n   1temp  &                	movwf	btemp,c
   521        4text ¤        (   1temp  '                	incf	btemp,w,c
   522        4text ¦   %   E006               	bz	l34
   523        4text ¨   -   50D9               	movf	fsr2l,w,c
   524        4text ª   .   24D9               	addwf	fsr2l,w,c
   525        4text ¬           1rbss $    $                	addlw	_Sk+1
   526        4text ®   ,   6EE9               	movwf	fsr0l,c
   527        4text °   +   6AEA               	clrf	fsr0h,c
   528        4text ²   -   2AEF               	incf	indf0,f,c
   529        4text ´   "                      l34:
   530        4text ´   -   2AD9               	incf	fsr2l,f,c
   531        4text ¶   '   0E0D               	movlw	13
   532        4text ¸   -   64D9               	cpfsgt	fsr2l,c
   533        4text º   Z   D7D7               	goto	l31
   534                           ;rtimer.c: 164: }
   535        4text ¼   &   0E09               	movlw	9
   536        4text ¾        d   1rbss     5                	cpfsgt	_CommRT+1,c	;volatile
   537        4text À   Y   0C09               	retlw	9
   538                           ;rtimer.c: 169: {
   539        4text Â        j   1rbss     p                	clrf	_CommRT+1,c	;volatile
   540                           ;rtimer.c: 171: CommRT.S++;
   541        4text Ä        *   1rbss     w                	incf	_CommRT+2,f,c	;volatile
   542                           ;rtimer.c: 176: for(i=0;i<6;i++)
   543        4text Æ   +   6AD9               	clrf	fsr2l,c
   544        4text È   U                      l37:
   545                           ;rtimer.c: 177: {
   546        4text È   -   50D9               	movf	fsr2l,w,c
   547        4text Ê   .   24D9               	addwf	fsr2l,w,c
   548        4text Ì           1rbss     "                	addlw	_Mn
   549        4text Î   ,   6EE9               	movwf	fsr0l,c
   550        4text Ð   +   6AEA               	clrf	fsr0h,c
   551        4text Ò   m   2AEF               	incf	indf0,f,c
   552                           ;rtimer.c: 179: if(Mn[i].S>59)
   553        4text Ô   -   50D9               	movf	fsr2l,w,c
   554        4text Ö   .   24D9               	addwf	fsr2l,w,c
   555        4text Ø           1rbss     "                	addlw	_Mn
   556        4text Ú   ,   6EE9               	movwf	fsr0l,c
   557        4text Ü   +   6AEA               	clrf	fsr0h,c
   558        4text Þ   -   50EF               	movf	indf0,w,c
   559        4text à        n   1temp  &                	movwf	btemp,c
   560        4text â   '   0E3C               	movlw	60
   561        4text ä        \   1temp  (                	subwf	btemp,w,c
   562        4text æ   Y   E315               	bnc	l40
   563                           ;rtimer.c: 180: {
   564        4text è   -   50D9               	movf	fsr2l,w,c
   565        4text ê   .   24D9               	addwf	fsr2l,w,c
   566        4text ì           1rbss     "                	addlw	_Mn
   567        4text î   ,   6EE9               	movwf	fsr0l,c
   568        4text ð   +   6AEA               	clrf	fsr0h,c
   569        4text ò   w   6AEF               	clrf	indf0,c
   570                           ;rtimer.c: 182: if(Mn[i].M<255) Mn[i].M++;
   571        4text ô   -   50D9               	movf	fsr2l,w,c
   572        4text ö   .   24D9               	addwf	fsr2l,w,c
   573        4text ø           1rbss     $                	addlw	_Mn+1
   574        4text ú   ,   6EE9               	movwf	fsr0l,c
   575        4text ü   +   6AEA               	clrf	fsr0h,c
   576        4text þ   -   50EF               	movf	indf0,w,c
   577        4text          n   1temp  &                	movwf	btemp,c
   578        4text         (   1temp  '                	incf	btemp,w,c
   579        4text    %   E006               	bz	l40
   580        4text    -   50D9               	movf	fsr2l,w,c
   581        4text    .   24D9               	addwf	fsr2l,w,c
   582        4text 
           1rbss     $                	addlw	_Mn+1
   583        4text    ,   6EE9               	movwf	fsr0l,c
   584        4text    +   6AEA               	clrf	fsr0h,c
   585        4text    -   2AEF               	incf	indf0,f,c
   586        4text    "                      l40:
   587        4text    -   2AD9               	incf	fsr2l,f,c
   588        4text    &   0E05               	movlw	5
   589        4text    -   64D9               	cpfsgt	fsr2l,c
   590        4text    Z   D7D7               	goto	l37
   591                           ;rtimer.c: 183: }
   592        4text    '   0E3B               	movlw	59
   593        4text         d   1rbss     5                	cpfsgt	_CommRT+2,c	;volatile
   594        4text    Z   0C3B               	retlw	59
   595                           ;rtimer.c: 188: {
   596        4text          j   1rbss     u                	clrf	_CommRT+2,c	;volatile
   597                           ;rtimer.c: 194: for(i=0;i<2;i++)
   598        4text "   +   6AD9               	clrf	fsr2l,c
   599        4text $   U                      l43:
   600                           ;rtimer.c: 195: {
   601        4text $   -   50D9               	movf	fsr2l,w,c
   602        4text &   .   24D9               	addwf	fsr2l,w,c
   603        4text (           1rbss     "                	addlw	_Gd
   604        4text *   ,   6EE9               	movwf	fsr0l,c
   605        4text ,   +   6AEA               	clrf	fsr0h,c
   606        4text .   m   2AEF               	incf	indf0,f,c
   607                           ;rtimer.c: 197: if(Gd[i].M>59)
   608        4text 0   -   50D9               	movf	fsr2l,w,c
   609        4text 2   .   24D9               	addwf	fsr2l,w,c
   610        4text 4           1rbss     "                	addlw	_Gd
   611        4text 6   ,   6EE9               	movwf	fsr0l,c
   612        4text 8   +   6AEA               	clrf	fsr0h,c
   613        4text :   -   50EF               	movf	indf0,w,c
   614        4text <        n   1temp  &                	movwf	btemp,c
   615        4text >   '   0E3C               	movlw	60
   616        4text @        \   1temp  (                	subwf	btemp,w,c
   617        4text B   Y   E315               	bnc	l46
   618                           ;rtimer.c: 198: {
   619        4text D   -   50D9               	movf	fsr2l,w,c
   620        4text F   .   24D9               	addwf	fsr2l,w,c
   621        4text H           1rbss     "                	addlw	_Gd
   622        4text J   ,   6EE9               	movwf	fsr0l,c
   623        4text L   +   6AEA               	clrf	fsr0h,c
   624        4text N   w   6AEF               	clrf	indf0,c
   625                           ;rtimer.c: 200: if(Gd[i].G<255) Gd[i].G++;
   626        4text P   -   50D9               	movf	fsr2l,w,c
   627        4text R   .   24D9               	addwf	fsr2l,w,c
   628        4text T           1rbss     $                	addlw	_Gd+1
   629        4text V   ,   6EE9               	movwf	fsr0l,c
   630        4text X   +   6AEA               	clrf	fsr0h,c
   631        4text Z   -   50EF               	movf	indf0,w,c
   632        4text \        n   1temp  &                	movwf	btemp,c
   633        4text ^        (   1temp  '                	incf	btemp,w,c
   634        4text `   %   E006               	bz	l46
   635        4text b   -   50D9               	movf	fsr2l,w,c
   636        4text d   .   24D9               	addwf	fsr2l,w,c
   637        4text f           1rbss     $                	addlw	_Gd+1
   638        4text h   ,   6EE9               	movwf	fsr0l,c
   639        4text j   +   6AEA               	clrf	fsr0h,c
   640        4text l   -   2AEF               	incf	indf0,f,c
   641        4text n   "                      l46:
   642        4text n   -   2AD9               	incf	fsr2l,f,c
   643        4text p   &   0E01               	movlw	1
   644        4text r   -   64D9               	cpfsgt	fsr2l,c
   645        4text t   '   D7D7               	goto	l43
   646        4text v   Y   0C01               	retlw	1
   647                           ;rtimer.c: 201: }
   648        4text x   ý                     __end_of_IncRTimer:
   649  000000                     
   650  000000                     
   651  000000                     
   652  000000                     
   653  000000                     
   654  000000                     
   655  000000                     
   656  000000                     
   657  000000                     
   658  000000                     
   659  000000                     
   660  000000                     
   661  000000                     
ý   662  000000                     
   663  000000                     
   664  000000                     
   665  000000                     
   666  000000                     
   667  000000                     
   668  000000                     
   669  000000                     
   670  000000                     
   671  000000                     
   672  000000                     
   673  000000                     
   674  000000                     
   675  000000                     
   67ý6  000000                     
   677  000000                     
   678  000000                     
   679  000000                     
   680  000000                     
   681  000000                     
   682  000000                     
   683  000000                     
   684  000000                     
   685  000000                     
   686  000000                     
   687  000000                     
   688  000000                     
   689  000000                     
   690  00ý0000                     
   691  000000                     
   692  000000                     
   693  000000                     
   694  000000                     
   695  000000                     
   696  000000                     
   697  000000                     
   698  000000                     
   699  000000                     
   700  000000                     
   701  000000                     
   702  000000                     
   703  000000                     
   704  000000 ý                    
   705  000000                     
   706  000000                     
   707  000000                     
   708  000000                     
   709  000000                     
   710  000000                     
   711  000000                     
   712  000000                     
   713  000000                     
   714  000000                     
   715  000000                     
   716  000000                     
   717  000000                     
   718  000000      ý               
   719  000000                     
   720  000000                     
   721  000000                     
   722  000000                     
   723  000000                     
   724  000000                     
   725  000000                     
   726  000000                     
   727  000000                     
   728  000000                     
   729  000000                     
   730  000000                     
   731  000000                     
   732  000000           ý          
   733  000000                     
   734  000000                     
   735  000000                     
   736  000000                     
   737  000000                     
   738  000000                     
   739  000000                     
   740  000000                     
   741  000000                     
   742  000000                     
   743  000000                     
   744  000000                     
   745  000000                     
   746  000000                ý     
   747  000000                     
   748  000000                     
   749  000000                     
   750  000000                     
   751  000000                     
   752  000000                     
   753  000000                     
   754  000000                     
   755  000000                     
   756  000000                     
   757  000000                     
   758  000000                     
   759  000000                     
   760  000000                     ý
   761  000000                     
   762  000000                     
   763  000000                     
   764  000000                     
   765  000000                     
   766  000000                     
   767  000000                     
   768  000000                     
   769  000000                     
   770  000000                     
   771  000000                     
   772  000000                     
   773  000000                     
   774  000000                     
   7ý75  000000                     
   776  000000                     
   777  000000                     
   778  000000                     
   779  000000                     
   780  000000                     
   781  000000                     
   782  000000                     
   783  000000                     
   784  000000                     
   785  000000                     
   786  000000                     
   787  000000                     
   788  000000                     
   789  0ý00000                     
   790  000000                     
   791  000000                     
   792  000000                     
   793  000000                     
   794  000000                     
   795  000000                     
   796  000000                     
   797  000000                     
   798  000000                     
   799  000000                     
   800  000000                     
   801  000000                     
   802  000000                     
   803  000000ý                     
   804  000000                     
   805  000000                     
   806  000000                     
   807  000000                     
   808  000000                     
   809  000000                     
   810  000000                     
   811  000000                     
   812  000000                     
   813  000000                     
   814  000000                     
   815  000000                     
   816  000000                     
   817  000000     ý                
   818  000000                     
   819  000000                     
   820  000000                     
   821  000000                     
   822  000000                     
   823  000000                     
   824  000000                     
   825  000000                     
   826  000000                     
   827  000000                     
   828  000000                     
   829  000000                     
   830  000000                     
   831  000000          ý           
   832  000000                     
   833  000000                     
   834  000000                     
   835  000000                     
   836  000000                     
   837  000000                     
   838  000000                     
   839  000000                     
   840  000000                     
   841  000000                     
   842  000000                     
   843  000000                     
   844  000000                     
   845  000000               ý      
   846  000000                     
   847  000000                     
   848  000000                     
   849  000000                     
   850  000000                     
   851  000000                     
   852  000000                     
   853  000000                     
   854  000000                     
   855  000000                     
   856  000000                     
   857  000000                     
   858  000000                     
   859  000000                    ý 
   860  000000                     
   861  000000                     
   862  000000                     
   863  000000                     
   864  000000                     
   865  000000                     
   866  000000                     
   867  000000                     
   868  000000                     
   869  000000                     
   870  000000                     
   871  000000                     
   872  000000                     
   873  000000                     
   ý874  000000                     
   875  000000                     
   876  000000                     
   877  000000                     
   878  000000                     
   879  000000                     
   880  000000                     
   881  000000                     
   882  000000                     
   883  000000                     
   884  000000                     
   885  000000                     
   886  000000                     
   887  000000                     
   888  ý000000                     
   889  000000                     
   890  000000                     
   891  000000                     
   892  000000                     
   893  000000                     
   894  000000                     
   895  000000                     
   896  000000                     
   897  000000                     
   898  000000                     
   899  000000                     
   900  000000                     
   901  000000                     
   902  00000ý0                     
   903  000000                     
   904  000000                     
   905  000000                     
   906  000000                     
   907  000000                     
   908  000000                     
   909  000000                     
   910  000000                     
   911  000000                     
   912  000000                     
   913  000000                     
   914  000000                     
   915  000000                     
   916  000000    ý                 
   917  000000                     
   918  000000                     
   919  000000                     
   920  000000                     
   921  000000                     
   922  000000                     
   923  000000                     
   924  000000                     
   925  000000                     
   926  000000                     
   927  000000                     
   928  000000                     
   929  000000                     
   930  000000         ý            
   931  000000                     
   932  000000                     
   933  000000                     
   934  000000                     
   935  000000                     
   936  000000                     
   937  000000                     
   938  000000                     
   939  000000                     
   940  000000                     
   941  000000                     
   942  000000                     
   943  000000                     
   944  000000              ý       
   945  000000                     
   946  000000                     
   947  000000                     
   948  000000                     
   949  000000                     
   950  000000                     
   951  000000                     
   952  000000                     
   953  000000                     
   954  000000                     
   955  000000                     
   956  000000                     
   957  000000                     
   958  000000                   ý  
   959  000000                     
   960  000000                     
   961  000000                     
   962  000000                     
   963  000000                     
   964  000000                     
   965  000000                     
   966  000000                     
   967  000000                     
   968  000000                     
   969  000000                     
   970  000000                     
   971  000000                     
   972  000000                     
  ý 973  000000                     
   974  000000                     
   975  000000                     
   976  000000                     
   977  000000                     
   978  000000                     
   979  000000                     
   980  000000                     
   981  000000                     
   982  000000                     
   983  000000                     
   984  000000                     
   985  000000                     
   986  000000                     
   987 ý 000000                     
   988  000000                     
   989  000000                     
   990  000000                     
   991  000000                     
   992  000000                     
   993  000000                     
   994  000000                     
   995  000000                     
   996  000000                     
   997  000000                     
   998  000000                     
   999  000000                     
  1000  000000                     
  1001  0000ý00                     
  1002  000000                     
  1003  000000                     
  1004  000000                     
  1005  000000                     
  1006  000000                     
  1007  000000                     
  1008  000000                     
  1009  000000                     
  1010  000000                     
  1011  000000                     
  1012  000000                     
  1013  000000                     
  1014  000000                     
  1015  000000   ý                  
  1016  000000                     
  1017  000000                     
  1018  000000                     
  1019  000000                     
  1020  000000                     
  1021  000000                     
  1022  000000                     
  1023  000000                     
  1024  000000                     
  1025  000000                     
  1026  000000                     
  1027  000000                     
  1028  000000                     
  1029  000000        ý             
  1030  000000                     
  1031  000000                     
  1032  000000                     
  1033  000000                     
  1034  000000                     
  1035  000000                     
  1036  000000                     
  1037  000000                     
  1038  000000                     
  1039  000000                     
  1040  000000                     
  1041  000000                     
  1042  000000                     
  1043  000000             ý        
  1044  000000                     
  1045  000000                     
  1046  000000                     
  1047  000000                     
  1048  000000                     
  1049  000000                     
  1050  000000                     
  1051  000000                     
  1052  000000                     
  1053  000000                     
  1054  000000                     
  1055  000000                     
  1056  000000                     
  1057  000000                  ý   
  1058  000000                     
  1059  000000                     
  1060  000000                     
  1061  000000                     
  1062  000000                     
  1063  000000                     
  1064  000000                     
  1065  000000                     
  1066  000000                     
  1067  000000                     
  1068  000000                     
  1069  000000                     
  1070  000000                     
  1071  000000                     
 ý 1072  000000                     
  1073  000000                     
  1074  000000                     
  1075  000000                     
  1076  000000                     
  1077  000000                     
  1078  000000                     
  1079  000000                     
  1080  000000                     
  1081  000000                     
  1082  000000                     
  1083  000000                     
  1084  000000                     
  1085  000000                     
  1086ý  000000                     
  1087  000000                     
  1088  000000                     
  1089  000000                     
  1090  000000                     
  1091  000000                     
  1092  000000                     
  1093  000000                     
  1094  000000                     
  1095  000000                     
  1096  000000                     
  1097  000000                     
  1098  000000                     
  1099  000000                     
  1100  000ý000                     
  1101  000000                     
  1102  000000                     
  1103  000000                     
  1104  000000                     
  1105  000000                     
  1106  000000                     
  1107  000000                     
  1108  000000                     
  1109  000000                     
  1110  000000                     
  1111  000000                     
  1112  000000                     
  1113  000000                     
  1114  000000  ý                   
  1115  000000                     
  1116  000000                     
  1117  000000                     
  1118  000000                     
  1119  000000                     
  1120  000000                     
  1121  000000                     
  1122  000000                     
  1123  000000                     
  1124  000000                     
  1125  000000                     
  1126  000000                     
  1127  000000                     
  1128  000000       ý              
  1129  000000                     
  1130  000000                     
  1131  000000                     
  1132  000000                     
  1133  000000                     
  1134  000000                     
  1135  000000                     
  1136  000000                     
  1137  000000                     
  1138  000000                     
  1139  000000                     
  1140  000000                     
  1141  000000                     
  1142  000000            ý         
  1143  000000                     
  1144  000000                     
  1145  000000                     
  1146  000000                     
  1147  000000                     
  1148  000000                     
  1149  000000                     
  1150  000000                     
  1151  000000                     
  1152  000000                     
  1153  000000                     
  1154  000000                     
  1155  000000                     
  1156  000000                 ý    
  1157  000000                     
  1158  000000                     
  1159  000000                     
  1160  000000                     
  1161  000000                     
  1162  000000                     
  1163  000000                     
  1164  000000                     
  1165  000000                     
  1166  000000                     
  1167  000000                     
  1168  000000                     
  1169  000000                     
  1170  000000                     
ý  1171  000000                     
  1172  000000                     
  1173  000000                     
  1174  000000                     
  1175  000000                     
  1176  000000                     
  1177  000000                     
  1178  000000                     
  1179  000000                     
  1180  000000                     
  1181  000000                     
  1182  000000                     
  1183  000000                     
  1184  000000                     
  118ý5  000000                     
  1186  000000                     
  1187  000000                     
  1188  000000                     
  1189  000000                     
  1190  000000                     
  1191  000000                     
  1192  000000                     
  1193  000000                     
  1194  000000                     
  1195  000000                     
  1196  000000                     
  1197  000000                     
  1198  000000                     
  1199  00ý0000                     
  1200  000000                     
  1201  000000                     
  1202  000000                     
  1203  000000                     
  1204  000000                     
  1205  000000                     
  1206  000000                     
  1207  000000                     
  1208  000000                     
  1209  000000                     
  1210  000000                     
  1211  000000                     
  1212  000000                     
  1213  000000 Ø                     
  1214  000000                     
  1215  000000                     
  1216  000000                     
  1217                           
  1218                           	psect	rbss
  1219        4rbss                        _CommRT:
   1220        4rbss  #                      	ds	3
  1221        4rbss                        _Gd:
   1222        4rbss  #                      	ds	4
  1223        4rbss                        _Mn:
   1224        4rbss  $                      	ds	12
  1225        4rbss                        _dSk:
   1226        4rbss  $                      	ds	16
  1227        4rbss                        _Sk:
   1228        4rbss  s                      	ds	28
  1229                           
  1230                           	psect	temp
  1231        4temp                        btemp:
   1232        4temp  w                     	ds	1
  1233                           indf0	equ	0xFEF
  1234                           fsr0h	equ	0xFEA
  1235                           fsr0l	equ	0xFE9
  1236                           fsr2l	equ	0xFD9


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Wed Jun 11 12:30:09 2014

                l7       4text 
                       l9       4text .                      l11       4text F       
               l21       4text Ö                      l13       4text j                      l31       4text j      
               l23       4text ú                      l15       4text                       l40       4text       
               l25       4text 
                     l17       4text ¦                      l34       4text ´      
               l43       4text $                     l19       4text ¾                      l28       4text T      
               l37       4text È                     l46       4text n                     _Gd       4rbss        
               _Mn       4rbss                       _Sk       4rbss #                _StartRTG       4text Ì       
         _StartRTM       4text x                _StartRTS       4text <                     _RTG       4text ð       
              _RTM       4text                      _RTS       4text `                     _dSk       4rbss        
        _StartRTdS       4text     __end_of_StartRTdS       4text $                    _RTMs       4text ´       
             _RTdS       4text $                    fsr0h 000FEA               indf0 000FEF  
             fsr0l 000FE9               fsr2l 000FD9               btemp       4temp     
       used_btemp0       4 used_btemp0  0               status 000FD8            __Lparam       4 __Lparam     
 __end_of_StartRTG       4text ð        __end_of_StartRTM       4text         __end_of_StartRTS       4text `       
          __ramtop       4 __ramtop          __end_of_RTMs       4text Ì            __end_of_RTdS       4text <       
           _CommRT       4rbss           __end_of_RTG       4text             __end_of_RTM       4text ´       
      __end_of_RTS       4text x               _IncRTimer       4text       __end_of_IncRTimer       4text x      
   