

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Thu Jul 12 08:02:17 2018


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bss,global,class=RAM,space=1,delta=1
     5                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     6                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     7  000000                     
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96                           
    97                           	psect	text
    98                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
    99                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   100                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   101                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   102                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   103                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   104                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   105                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   106                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   107                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   108                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   109                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   110                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   111                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   112                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   113                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   114                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   115                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   116                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   117                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   118                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   119                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   120                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   121                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   122                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   123                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   124                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   125                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   126                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   127                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   128                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   129                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   130                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   131                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   132                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   133                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   134                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   135                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   136                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   137                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   138                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   139                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   140                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   141                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   142                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   143                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   144                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   145                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   146                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   147                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   148                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   149                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   150                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   151                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   152                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   153                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   154                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   155                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   156                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   157                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   158                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   159                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   160                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   161                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   162                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   163                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   164                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   165                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   166                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   167                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   168                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   169                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   170                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   171                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   172                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   173                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   174                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   175                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   176                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   177                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   178                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   179                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   180                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   181                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   182                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   183                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   184                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   185                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   186                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   187                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   188                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   189                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   190                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   191                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   192                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   193                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   194                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   195                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   196                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   197                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   198  008900                     _InitPWM:
   199  000000                     
   200                           ;pwm.c: 17: CCP1CON=0;
   201  008900  6ABD               	clrf	4029,c	;volatile
   202                           ;pwm.c: 18: CCPR1L=0;
   203  008902  6ABE               	clrf	4030,c	;volatile
   204                           ;pwm.c: 19: CCPR1H=0;
   205  008904  6ABF               	clrf	4031,c	;volatile
   206                           ;pwm.c: 20: CCP1CON=0b00001100;
   207  008906  0E0C               	movlw	12
   208  008908  6EBD               	movwf	4029,c	;volatile
   209                           ;pwm.c: 21: STRA=0;
   210  00890A  90B9               	bcf	4025,0,c
   211                           ;pwm.c: 22: STRB=0;
   212  00890C  92B9               	bcf	4025,1,c
   213                           ;pwm.c: 23: STRC=0;
   214  00890E  94B9               	bcf	4025,2,c
   215                           ;pwm.c: 24: STRD=1;
   216  008910  86B9               	bsf	4025,3,c
   217                           ;pwm.c: 26: CCP2CON=0;
   218  008912  6ABA               	clrf	4026,c	;volatile
   219                           ;pwm.c: 27: CCPR2L=0;
   220  008914  6ABB               	clrf	4027,c	;volatile
   221                           ;pwm.c: 28: CCPR2H=0;
   222  008916  6ABC               	clrf	4028,c	;volatile
   223                           ;pwm.c: 29: CCP2CON=0b00001100;
   224  008918  0E0C               	movlw	12
   225  00891A  6EBA               	movwf	4026,c	;volatile
   226                           ;pwm.c: 31: TMR2=0;
   227  00891C  6ACC               	clrf	4044,c	;volatile
   228                           ;pwm.c: 32: T2CON=0b00000010;
   229  00891E  0E02               	movlw	2
   230  008920  6ECA               	movwf	4042,c
   231                           ;pwm.c: 33: PR2=0x7C;
   232  008922  0E7C               	movlw	124
   233  008924  6ECB               	movwf	4043,c
   234                           ;pwm.c: 34: TMR2IE=1;
   235  008926  829D               	bsf	3997,1,c
   236                           ;pwm.c: 35: TMR2ON=1;
   237  008928  84CA               	bsf	4042,2,c
   238                           ;pwm.c: 47: PWM.HIPWM=(0x7C+1)<<1;
   239  00892A  0EFA               	movlw	-6
   240  00892C  CFE8 F263          	movff	wreg,_PWM+6
   241                           ;pwm.c: 60: PWM.BufPWM=0;
   242  008930  0102               	movlb	(_PWM+1) shr (0+8)
   243  008932  6B5E               	clrf	(_PWM+1)& (0+255),b
   244                           ;pwm.c: 61: PWM.NewPWM=0;
   245  008934  6B5F               	clrf	(_PWM+2)& (0+255),b
   246                           ;pwm.c: 62: PWM.BufPWM2=0;
   247  008936  6B61               	clrf	(_PWM+4)& (0+255),b
   248                           ;pwm.c: 63: PWM.NewPWM2=0;
   249  008938  6B62               	clrf	(_PWM+5)& (0+255),b
   250                           ;pwm.c: 64: }
   251  00893A  0012               	return	
   252  00893C                     __end_of_InitPWM:
   253                           ;pwm.c: 69: void ModParam(void)
   254                           ;pwm.c: 70: {
   255  00893C                     _ModParam:
   256  000000                     
   257                           ;pwm.c: 71: switch(DtKNF.rfan)
   258  00893C  D008               	goto	l6
   259  00893E                     l7:
   260                           ;pwm.c: 72: {
   261                           ;pwm.c: 74: {
   262  00893E  0E12               	movlw	18
   263  008940  D003               	goto	L2
   264                           ;pwm.c: 76: break;
   265  008942                     l8:
   266                           ;pwm.c: 77: }
   267                           ;pwm.c: 79: {
   268  008942  0E1F               	movlw	31
   269  008944  D001               	goto	L2
   270                           ;pwm.c: 81: break;
   271  008946                     l9:
   272                           ;pwm.c: 82: }
   273                           ;pwm.c: 84: {
   274  008946  0E1A               	movlw	26
   275  008948                     L2:
   276  008948  CFE8 F264          	movff	wreg,_PWM+7
   277                           ;pwm.c: 86: }
   278  00894C  D008               	goto	l5
   279  00894E                     l6:
   280  00894E  C053  FFE8         	movff	_DtKNF+14,wreg
   281  008952  0A00               	xorlw	0
   282  008954  E0F4               	bz	l7
   283  008956  0A01               	xorlw	1
   284  008958  E0F4               	bz	l8
   285  00895A  0A03               	xorlw	3
   286  00895C  E0F4               	bz	l9
   287  00895E                     l5:
   288                           ;pwm.c: 88: PWM.MGMOD=CalkVNTtoPWM(DtKNF.mmax);
   289  00895E  C052  FFE8         	movff	_DtKNF+13,wreg
   290  008962  ECDA  F039         	call	_CalkVNTtoPWM
   291  008966  CFE8 F268          	movff	wreg,_PWM+11
   292                           ;pwm.c: 89: if(PWM.MGMOD>PWM.HIPWM) PWM.MGMOD=PW
      +                          M.HIPWM;
   293  00896A  C268  FFE8         	movff	_PWM+11,wreg
   294  00896E  0102               	movlb	(_PWM+6) shr (0+8)
   295  008970  6163               	cpfslt	(_PWM+6)& (0+255),b
   296  008972  D002               	goto	l10
   297  008974  C263  F268         	movff	_PWM+6,_PWM+11
   298  008978                     l10:
   299                           ;pwm.c: 90: PWM.MDMOD=CalkVNTtoPWM(DtKNF.mmin);
   300  008978  C051  FFE8         	movff	_DtKNF+12,wreg
   301  00897C  ECDA  F039         	call	_CalkVNTtoPWM
   302  008980  CFE8 F265          	movff	wreg,_PWM+8
   303                           ;pwm.c: 91: if(PWM.MDMOD<PWM.VLO_PWM) PWM.MDMOD=
      +                          PWM.VLO_PWM;
   304  008984  C264  FFE8         	movff	_PWM+7,wreg
   305  008988  0102               	movlb	(_PWM+8) shr (0+8)
   306  00898A  6165               	cpfslt	(_PWM+8)& (0+255),b
   307  00898C  D002               	goto	l11
   308  00898E  C264  F265         	movff	_PWM+7,_PWM+8
   309  008992                     l11:
   310                           ;pwm.c: 92: PWM.DKNF_MDMOD=PWM.MDMOD;
   311  008992  C265  F266         	movff	_PWM+8,_PWM+9
   312                           ;pwm.c: 96: PWM.MSTART=CalkVNTtoPWM(ProcToVNT(Dt
      +                          KNF.mstr));
   313  008996  C048  FFE8         	movff	_DtKNF+3,wreg
   314  00899A  ECEB  F039         	call	_ProcToVNT
   315  00899E  ECDA  F039         	call	_CalkVNTtoPWM
   316  0089A2  CFE8 F275          	movff	wreg,_PWM+24
   317                           ;pwm.c: 97: if(PWM.MSTART>PWM.MGMOD) PWM.MSTART=
      +                          PWM.MGMOD;
   318  0089A6  C275  FFE8         	movff	_PWM+24,wreg
   319  0089AA  0102               	movlb	(_PWM+11) shr (0+8)
   320  0089AC  6168               	cpfslt	(_PWM+11)& (0+255),b
   321  0089AE  D002               	goto	l12
   322  0089B0  C268  F275         	movff	_PWM+11,_PWM+24
   323  0089B4                     l12:
   324                           ;pwm.c: 98: if(PWM.MSTART<PWM.MDMOD) PWM.MSTART=
      +                          PWM.MDMOD;
   325  0089B4  C265  FFE8         	movff	_PWM+8,wreg
   326  0089B8  0102               	movlb	(_PWM+24) shr (0+8)
   327  0089BA  6175               	cpfslt	(_PWM+24)& (0+255),b
   328  0089BC  D002               	goto	l13
   329  0089BE  C265  F275         	movff	_PWM+8,_PWM+24
   330  0089C2                     l13:
   331                           ;pwm.c: 101: PWM.DV16_MDMOD=CalkVNTtoPWM(16);
   332  0089C2  0E10               	movlw	16
   333  0089C4  ECDA  F039         	call	_CalkVNTtoPWM
   334  0089C8  CFE8 F267          	movff	wreg,_PWM+10
   335                           ;pwm.c: 102: if(PWM.MSTART>PWM.DV16_MDMOD)
   336  0089CC  C275  FFE8         	movff	_PWM+24,wreg
   337  0089D0  0102               	movlb	(_PWM+10) shr (0+8)
   338  0089D2  6167               	cpfslt	(_PWM+10)& (0+255),b
   339  0089D4  D00C               	goto	l14
   340                           ;pwm.c: 103: {
   341  0089D6  0E23               	movlw	35
   342  0089D8  ECDA  F039         	call	_CalkVNTtoPWM
   343  0089DC  CFE8 F267          	movff	wreg,_PWM+10
   344                           ;pwm.c: 105: if(PWM.MSTART<PWM.DV16_MDMOD) PWM.D
      +                          V16_MDMOD=PWM.MSTART;
   345  0089E0  C267  FFE8         	movff	_PWM+10,wreg
   346  0089E4  0102               	movlb	(_PWM+24) shr (0+8)
   347  0089E6  6175               	cpfslt	(_PWM+24)& (0+255),b
   348  0089E8  D002               	goto	l14
   349  0089EA  C275  F267         	movff	_PWM+24,_PWM+10
   350  0089EE                     l14:
   351                           ;pwm.c: 106: }
   352  0089EE  C264  FFE8         	movff	_PWM+7,wreg
   353  0089F2  0102               	movlb	(_PWM+10) shr (0+8)
   354  0089F4  6167               	cpfslt	(_PWM+10)& (0+255),b
   355  0089F6  D002               	goto	l16
   356  0089F8  C264  F267         	movff	_PWM+7,_PWM+10
   357  0089FC                     l16:
   358                           ;pwm.c: 109: PWM.MMAXCW=CalkVNTtoPWM(ProcToVNT(D
      +                          tKNF.mxcw));
   359  0089FC  C049  FFE8         	movff	_DtKNF+4,wreg
   360  008A00  ECEB  F039         	call	_ProcToVNT
   361  008A04  ECDA  F039         	call	_CalkVNTtoPWM
   362  008A08  CFE8 F277          	movff	wreg,_PWM+26
   363                           ;pwm.c: 110: if(PWM.MMAXCW>PWM.MGMOD) PWM.MMAXCW
      +                          =PWM.MGMOD;
   364  008A0C  C277  FFE8         	movff	_PWM+26,wreg
   365  008A10  0102               	movlb	(_PWM+11) shr (0+8)
   366  008A12  6168               	cpfslt	(_PWM+11)& (0+255),b
   367  008A14  D002               	goto	l17
   368  008A16  C268  F277         	movff	_PWM+11,_PWM+26
   369  008A1A                     l17:
   370                           ;pwm.c: 111: if(PWM.MMAXCW<PWM.MDMOD) PWM.MMAXCW
      +                          =PWM.MDMOD;
   371  008A1A  C265  FFE8         	movff	_PWM+8,wreg
   372  008A1E  0102               	movlb	(_PWM+26) shr (0+8)
   373  008A20  6177               	cpfslt	(_PWM+26)& (0+255),b
   374  008A22  D002               	goto	l18
   375  008A24  C265  F277         	movff	_PWM+8,_PWM+26
   376  008A28                     l18:
   377                           ;pwm.c: 112: PWM.MMAXCO=CalkVNTtoPWM(ProcToVNT(D
      +                          tKNF.mxco));
   378  008A28  C04A  FFE8         	movff	_DtKNF+5,wreg
   379  008A2C  ECEB  F039         	call	_ProcToVNT
   380  008A30  ECDA  F039         	call	_CalkVNTtoPWM
   381  008A34  CFE8 F276          	movff	wreg,_PWM+25
   382                           ;pwm.c: 113: if(PWM.MMAXCO>PWM.MGMOD) PWM.MMAXCO
      +                          =PWM.MGMOD;
   383  008A38  C276  FFE8         	movff	_PWM+25,wreg
   384  008A3C  0102               	movlb	(_PWM+11) shr (0+8)
   385  008A3E  6168               	cpfslt	(_PWM+11)& (0+255),b
   386  008A40  D002               	goto	l19
   387  008A42  C268  F276         	movff	_PWM+11,_PWM+25
   388  008A46                     l19:
   389                           ;pwm.c: 114: if(PWM.MMAXCO<PWM.MDMOD) PWM.MMAXCO
      +                          =PWM.MDMOD;
   390  008A46  C265  FFE8         	movff	_PWM+8,wreg
   391  008A4A  0102               	movlb	(_PWM+25) shr (0+8)
   392  008A4C  6176               	cpfslt	(_PWM+25)& (0+255),b
   393  008A4E  D002               	goto	l20
   394  008A50  C265  F276         	movff	_PWM+8,_PWM+25
   395  008A54                     l20:
   396                           ;pwm.c: 116: PWM.FIRSTPB=PWM.MGMOD-4*((PWM.MGMOD
      +                          -PWM.MDMOD)/10);
   397  008A54  0E0A               	movlw	10
   398  008A56  6E02               	movwf	btemp+2,c
   399  008A58  6A03               	clrf	btemp+3,c
   400  008A5A  C265  FFE8         	movff	_PWM+8,wreg
   401  008A5E  C268  F000         	movff	_PWM+11,btemp
   402  008A62  6A01               	clrf	btemp+1,c
   403  008A64  5E00               	subwf	btemp,f,c
   404  008A66  0E00               	movlw	0
   405  008A68  5A01               	subwfb	btemp+1,f,c
   406  008A6A  ECBB  F04B         	call	awdiv
   407  008A6E  90D8               	bcf	status,0,c
   408  008A70  3604               	rlcf	btemp+4,f,c
   409  008A72  90D8               	bcf	status,0,c
   410  008A74  3404               	rlcf	btemp+4,w,c
   411  008A76  0102               	movlb	(_PWM+11) shr (0+8)
   412  008A78  5D68               	subwf	(_PWM+11)& (0+255),w,b
   413  008A7A  CFE8 F26F          	movff	wreg,_PWM+18
   414                           ;pwm.c: 117: PWM.PROP1=PWM.MGMOD-1*((PWM.MGMOD-P
      +                          WM.MDMOD)/7);
   415  008A7E  0E07               	movlw	7
   416  008A80  6E02               	movwf	btemp+2,c
   417  008A82  6A03               	clrf	btemp+3,c
   418  008A84  C265  FFE8         	movff	_PWM+8,wreg
   419  008A88  C268  F000         	movff	_PWM+11,btemp
   420  008A8C  6A01               	clrf	btemp+1,c
   421  008A8E  5E00               	subwf	btemp,f,c
   422  008A90  0E00               	movlw	0
   423  008A92  5A01               	subwfb	btemp+1,f,c
   424  008A94  ECBB  F04B         	call	awdiv
   425  008A98  5004               	movf	btemp+4,w,c
   426  008A9A  5D68               	subwf	(_PWM+11)& (0+255),w,b
   427  008A9C  CFE8 F270          	movff	wreg,_PWM+19
   428                           ;pwm.c: 118: PWM.PROP2=PWM.MGMOD-2*((PWM.MGMOD-P
      +                          WM.MDMOD)/7);
   429  008AA0  0E07               	movlw	7
   430  008AA2  6E02               	movwf	btemp+2,c
   431  008AA4  6A03               	clrf	btemp+3,c
   432  008AA6  C265  FFE8         	movff	_PWM+8,wreg
   433  008AAA  C268  F000         	movff	_PWM+11,btemp
   434  008AAE  6A01               	clrf	btemp+1,c
   435  008AB0  5E00               	subwf	btemp,f,c
   436  008AB2  0E00               	movlw	0
   437  008AB4  5A01               	subwfb	btemp+1,f,c
   438  008AB6  ECBB  F04B         	call	awdiv
   439  008ABA  90D8               	bcf	status,0,c
   440  008ABC  3404               	rlcf	btemp+4,w,c
   441  008ABE  5D68               	subwf	(_PWM+11)& (0+255),w,b
   442  008AC0  CFE8 F271          	movff	wreg,_PWM+20
   443                           ;pwm.c: 119: PWM.PROP3=PWM.MGMOD-3*((PWM.MGMOD-P
      +                          WM.MDMOD)/7);
   444  008AC4  0E07               	movlw	7
   445  008AC6  6E02               	movwf	btemp+2,c
   446  008AC8  6A03               	clrf	btemp+3,c
   447  008ACA  C265  FFE8         	movff	_PWM+8,wreg
   448  008ACE  C268  F000         	movff	_PWM+11,btemp
   449  008AD2  6A01               	clrf	btemp+1,c
   450  008AD4  5E00               	subwf	btemp,f,c
   451  008AD6  0E00               	movlw	0
   452  008AD8  5A01               	subwfb	btemp+1,f,c
   453  008ADA  ECBB  F04B         	call	awdiv
   454  008ADE  5004               	movf	btemp+4,w,c
   455  008AE0  0D03               	mullw	3
   456  008AE2  50F3               	movf	prodl,w,c
   457  008AE4  5D68               	subwf	(_PWM+11)& (0+255),w,b
   458  008AE6  CFE8 F272          	movff	wreg,_PWM+21
   459                           ;pwm.c: 120: }
   460  008AEA  0012               	return	
   461  008AEC                     __end_of_ModParam:
   462                           ;pwm.c: 123: unsigned char VPWMtoPROC(unsigned c
      +                          har pwm)
   463                           ;pwm.c: 124: {
   464  008AEC                     _VPWMtoPROC:
   465  000000                     
   466                           ; _pwm loaded to fsr2l
   467  008AEC  6ED9               	movwf	fsr2l,c
   468                           ;pwm.c: 125: unsigned int p;
   469  008AEE  50D9               	movf	fsr2l,w,c
   470  008AF0  0102               	movlb	(_PWM+11) shr (0+8)
   471  008AF2  6168               	cpfslt	(_PWM+11)& (0+255),b
   472  008AF4  D002               	goto	l22
   473  008AF6  C268  FFD9         	movff	_PWM+11,fsr2l
   474  008AFA                     l22:
   475                           ;pwm.c: 128: if(pwm<PWM.MDMOD) pwm=PWM.MDMOD;
   476  008AFA  C265  FFE8         	movff	_PWM+8,wreg
   477  008AFE  60D9               	cpfslt	fsr2l,c
   478  008B00  D002               	goto	l23
   479  008B02  C265  FFD9         	movff	_PWM+8,fsr2l
   480  008B06                     l23:
   481                           ;pwm.c: 130: p=(pwm-PWM.MDMOD)*100;
   482  008B06  0E64               	movlw	100
   483  008B08  6E02               	movwf	btemp+2,c
   484  008B0A  6A03               	clrf	btemp+3,c
   485  008B0C  C265  FFE8         	movff	_PWM+8,wreg
   486  008B10  CFD9 F000          	movff	fsr2l,btemp
   487  008B14  6A01               	clrf	btemp+1,c
   488  008B16  5E00               	subwf	btemp,f,c
   489  008B18  0E00               	movlw	0
   490  008B1A  5A01               	subwfb	btemp+1,f,c
   491  008B1C  EC16  F04C         	call	lwmul
   492  008B20  C004  FFF6         	movff	btemp+4,tblptrl
   493  008B24  C005  FFF7         	movff	btemp+5,tblptrh
   494                           ;pwm.c: 131: p/=(PWM.MGMOD-PWM.MDMOD);
   495  008B28  C265  FFE8         	movff	_PWM+8,wreg
   496  008B2C  C268  F002         	movff	_PWM+11,btemp+2
   497  008B30  6A03               	clrf	btemp+3,c
   498  008B32  5E02               	subwf	btemp+2,f,c
   499  008B34  0E00               	movlw	0
   500  008B36  5A03               	subwfb	btemp+3,f,c
   501  008B38  CFF6 F000          	movff	tblptrl,btemp
   502  008B3C  CFF7 F001          	movff	tblptrh,btemp+1
   503  008B40  ECAF  F04A         	call	lwdiv
   504  008B44  C004  FFF6         	movff	btemp+4,tblptrl
   505  008B48  C005  FFF7         	movff	btemp+5,tblptrh
   506                           ;pwm.c: 132: if (p>100) p=100;
   507  008B4C  0E00               	movlw	0
   508  008B4E  5CF7               	subwf	tblptrh,w,c
   509  008B50  0E65               	movlw	101
   510  008B52  B4D8               	btfsc	status,2,c
   511  008B54  5CF6               	subwf	tblptrl,w,c
   512  008B56  E303               	bnc	l24
   513  008B58  0E64               	movlw	100
   514  008B5A  6EF6               	movwf	tblptrl,c
   515  008B5C  6AF7               	clrf	tblptrh,c
   516  008B5E                     l24:
   517                           ;pwm.c: 134: return (unsigned char)p;
   518  008B5E  50F6               	movf	tblptrl,w,c
   519  008B60  0012               	return	
   520                           ;pwm.c: 135: }
   521  008B62                     __end_of_VPWMtoPROC:
   522                           ;pwm.c: 139: void WritePWM(const unsigned char t
      +                          pwm)
   523                           ;pwm.c: 140: {
   524  008B62                     _WritePWM:
   525  000000                     
   526                           ;pwm.c: 142: PWM._ENPWM=0;
   527  008B62  0102               	movlb	_PWM shr (0+8)
   528  008B64  915D               	bcf	_PWM& (0+255),0,b
   529                           ;pwm.c: 143: PWM.BufPWM=tpwm;
   530  008B66  EE02  F05E         	lfsr	0,_PWM+1
   531  008B6A  CFE8 FFEF          	movff	wreg,indf0
   532                           ;pwm.c: 144: PWM._ENPWM=1;
   533  008B6E  815D               	bsf	_PWM& (0+255),0,b
   534                           ;pwm.c: 145: PWM.APROC=VPWMtoPROC(PWM.BufPWM);
   535  008B70  C25E  FFE8         	movff	_PWM+1,wreg
   536  008B74  DFBB               	call	_VPWMtoPROC
   537  008B76  CFE8 F273          	movff	wreg,_PWM+22
   538                           ;pwm.c: 146: }
   539  008B7A  0012               	return	
   540  008B7C                     __end_of_WritePWM:
   541                           ;pwm.c: 150: void WritePWM2(const unsigned char 
      +                          tpwm)
   542                           ;pwm.c: 151: {
   543  008B7C                     _WritePWM2:
   544  000000                     
   545                           ;pwm.c: 152: PWM._ENPWM2=0;
   546  008B7C  0102               	movlb	(_PWM+3) shr (0+8)
   547  008B7E  9160               	bcf	(_PWM+3)& (0+255),0,b
   548                           ;pwm.c: 153: PWM.BufPWM2=tpwm;
   549  008B80  EE02  F061         	lfsr	0,_PWM+4
   550  008B84  CFE8 FFEF          	movff	wreg,indf0
   551                           ;pwm.c: 154: PWM._ENPWM2=1;
   552  008B88  8160               	bsf	(_PWM+3)& (0+255),0,b
   553                           ;pwm.c: 155: }
   554  008B8A  0012               	return	
   555  008B8C                     __end_of_WritePWM2:
   556                           ;pwm.c: 171: void IntPWM(void)
   557                           ;pwm.c: 172: {
   558  008B8C                     _IntPWM:
   559  000000                     
   560                           ;pwm.c: 173: static bit btOsc=0;
   561  008B8C  0102               	movlb	_PWM shr (0+8)
   562  008B8E  B15D               	btfsc	_PWM& (0+255),0,b
   563                           ;pwm.c: 176: {
   564  008B90  C25E  F25F         	movff	_PWM+1,_PWM+2
   565                           ;pwm.c: 178: }
   566  008B94  C25F  FFE8         	movff	_PWM+2,wreg
   567  008B98  0102               	movlb	(_PWM+6) shr (0+8)
   568  008B9A  6163               	cpfslt	(_PWM+6)& (0+255),b
   569  008B9C  D002               	goto	l29
   570  008B9E  C263  F25F         	movff	_PWM+6,_PWM+2
   571  008BA2                     l29:
   572                           ;pwm.c: 189: DC1B1=((PWM.NewPWM&0b00000001)>0)?1
      +                          :0;
   573  008BA2  0102               	movlb	(_PWM+2) shr (0+8)
   574  008BA4  8ABD               	bsf	4029,5,c
   575  008BA6  A15F               	btfss	(_PWM+2)& (0+255),0,b
   576  008BA8  9ABD               	bcf	4029,5,c
   577                           ;pwm.c: 190: DC1B0=0;
   578  008BAA  98BD               	bcf	4029,4,c
   579                           ;pwm.c: 191: CCPR1L=PWM.NewPWM>>1;
   580  008BAC  C25F  F000         	movff	_PWM+2,btemp
   581  008BB0  90D8               	bcf	status,0,c
   582  008BB2  3000               	rrcf	btemp,w,c
   583  008BB4  6EBE               	movwf	4030,c	;volatile
   584                           ;pwm.c: 198: }
   585  008BB6  0012               	return	
   586  008BB8                     __end_of_IntPWM:
   587                           ;pwm.c: 202: void IntPWM2(void)
   588                           ;pwm.c: 203: {
   589  008BB8                     _IntPWM2:
   590  000000                     
   591                           ;pwm.c: 204: static bit btOsc=0;
   592  008BB8  0102               	movlb	(_PWM+3) shr (0+8)
   593  008BBA  B160               	btfsc	(_PWM+3)& (0+255),0,b
   594                           ;pwm.c: 207: {
   595  008BBC  C261  F262         	movff	_PWM+4,_PWM+5
   596                           ;pwm.c: 209: }
   597  008BC0  C262  FFE8         	movff	_PWM+5,wreg
   598  008BC4  0102               	movlb	(_PWM+6) shr (0+8)
   599  008BC6  6163               	cpfslt	(_PWM+6)& (0+255),b
   600  008BC8  D002               	goto	l32
   601  008BCA  C263  F262         	movff	_PWM+6,_PWM+5
   602  008BCE                     l32:
   603                           ;pwm.c: 220: DC2B1=((PWM.NewPWM2&0b00000001)>0)?
      +                          1:0;
   604  008BCE  0102               	movlb	(_PWM+5) shr (0+8)
   605  008BD0  8ABA               	bsf	4026,5,c
   606  008BD2  A162               	btfss	(_PWM+5)& (0+255),0,b
   607  008BD4  9ABA               	bcf	4026,5,c
   608                           ;pwm.c: 221: DC2B0=0;
   609  008BD6  98BA               	bcf	4026,4,c
   610                           ;pwm.c: 222: CCPR2L=PWM.NewPWM2>>1;
   611  008BD8  C262  F000         	movff	_PWM+5,btemp
   612  008BDC  90D8               	bcf	status,0,c
   613  008BDE  3000               	rrcf	btemp,w,c
   614  008BE0  6EBB               	movwf	4027,c	;volatile
   615                           ;pwm.c: 229: }
   616  008BE2  0012               	return	
   617  008BE4                     __end_of_IntPWM2:
   618  000000                     
   619  000000                     
   620  000000                     
   621  000000                     
   622  000000                     
   623  000000                     
   624  000000                     
   625  000000                     
   626  000000                     
   627  000000                     
   628  000000                     
   629  000000                     
   630  000000                     
   631  000000                     
   632  000000                     
   633  000000                     
   634  000000                     
   635  000000                     
   636  000000                     
   637  000000                     
   638  000000                     
   639  000000                     
   640  000000                     
   641  000000                     
   642  000000                     
   643  000000                     
   644  000000                     
   645  000000                     
   646  000000                     
   647  000000                     
   648  000000                     
   649  000000                     
   650  000000                     
   651  000000                     
   652  000000                     
   653  000000                     
   654  000000                     
   655  000000                     
   656  000000                     
   657  000000                     
   658  000000                     
   659  000000                     
   660  000000                     
   661  000000                     
   662  000000                     
   663  000000                     
   664  000000                     
   665  000000                     
   666  000000                     
   667  000000                     
   668  000000                     
   669  000000                     
   670  000000                     
   671  000000                     
   672  000000                     
   673  000000                     
   674  000000                     
   675  000000                     
   676  000000                     
   677  000000                     
   678  000000                     
   679  000000                     
   680  000000                     
   681  000000                     
   682  000000                     
   683  000000                     
   684  000000                     
   685  000000                     
   686  000000                     
   687  000000                     
   688  000000                     
   689  000000                     
   690  000000                     
   691  000000                     
   692  000000                     
   693  000000                     
   694  000000                     
   695  000000                     
   696  000000                     
   697  000000                     
   698  000000                     
   699  000000                     
   700  000000                     
   701  000000                     
   702  000000                     
   703  000000                     
   704  000000                     
   705  000000                     
   706  000000                     
   707  000000                     
   708  000000                     
   709  000000                     
   710  000000                     
   711  000000                     
   712  000000                     
   713  000000                     
   714  000000                     
   715  000000                     
   716  000000                     
   717  000000                     
   718  000000                     
   719  000000                     
   720  000000                     
   721  000000                     
   722  000000                     
   723  000000                     
   724  000000                     
   725  000000                     
   726  000000                     
   727  000000                     
   728  000000                     
   729  000000                     
   730  000000                     
   731  000000                     
   732  000000                     
   733  000000                     
   734  000000                     
   735  000000                     
   736  000000                     
   737  000000                     
   738  000000                     
   739  000000                     
   740  000000                     
   741  000000                     
   742  000000                     
   743  000000                     
   744  000000                     
   745  000000                     
   746  000000                     
   747  000000                     
   748  000000                     
   749  000000                     
   750  000000                     
   751  000000                     
   752  000000                     
   753  000000                     
   754  000000                     
   755  000000                     
   756  000000                     
   757  000000                     
   758  000000                     
   759  000000                     
   760  000000                     
   761  000000                     
   762  000000                     
   763  000000                     
   764  000000                     
   765  000000                     
   766  000000                     
   767  000000                     
   768  000000                     
   769  000000                     
   770  000000                     
   771  000000                     
   772  000000                     
   773  000000                     
   774  000000                     
   775  000000                     
   776  000000                     
   777  000000                     
   778  000000                     
   779  000000                     
   780  000000                     
   781  000000                     
   782  000000                     
   783  000000                     
   784  000000                     
   785  000000                     
   786  000000                     
   787  000000                     
   788  000000                     
   789  000000                     
   790  000000                     
   791  000000                     
   792  000000                     
   793  000000                     
   794  000000                     
   795  000000                     
   796  000000                     
   797  000000                     
   798  000000                     
   799  000000                     
   800  000000                     
   801  000000                     
   802  000000                     
   803  000000                     
   804  000000                     
   805  000000                     
   806  000000                     
   807  000000                     
   808  000000                     
   809  000000                     
   810  000000                     
   811  000000                     
   812  000000                     
   813  000000                     
   814  000000                     
   815  000000                     
   816  000000                     
   817  000000                     
   818  000000                     
   819  000000                     
   820  000000                     
   821  000000                     
   822  000000                     
   823  000000                     
   824  000000                     
   825  000000                     
   826  000000                     
   827  000000                     
   828  000000                     
   829  000000                     
   830  000000                     
   831  000000                     
   832  000000                     
   833  000000                     
   834  000000                     
   835  000000                     
   836  000000                     
   837  000000                     
   838  000000                     
   839  000000                     
   840  000000                     
   841  000000                     
   842  000000                     
   843  000000                     
   844  000000                     
   845  000000                     
   846  000000                     
   847  000000                     
   848  000000                     
   849  000000                     
   850  000000                     
   851  000000                     
   852  000000                     
   853  000000                     
   854  000000                     
   855  000000                     
   856  000000                     
   857  000000                     
   858  000000                     
   859  000000                     
   860  000000                     
   861  000000                     
   862  000000                     
   863  000000                     
   864  000000                     
   865  000000                     
   866  000000                     
   867  000000                     
   868  000000                     
   869  000000                     
   870  000000                     
   871  000000                     
   872  000000                     
   873  000000                     
   874  000000                     
   875  000000                     
   876  000000                     
   877  000000                     
   878  000000                     
   879  000000                     
   880  000000                     
   881  000000                     
   882  000000                     
   883  000000                     
   884  000000                     
   885  000000                     
   886  000000                     
   887  000000                     
   888  000000                     
   889  000000                     
   890  000000                     
   891  000000                     
   892  000000                     
   893  000000                     
   894  000000                     
   895  000000                     
   896  000000                     
   897  000000                     
   898  000000                     
   899  000000                     
   900  000000                     
   901  000000                     
   902  000000                     
   903  000000                     
   904  000000                     
   905  000000                     
   906  000000                     
   907  000000                     
   908  000000                     
   909  000000                     
   910  000000                     
   911  000000                     
   912  000000                     
   913  000000                     
   914  000000                     
   915  000000                     
   916  000000                     
   917  000000                     
   918  000000                     
   919  000000                     
   920  000000                     
   921  000000                     
   922  000000                     
   923  000000                     
   924  000000                     
   925  000000                     
   926  000000                     
   927  000000                     
   928  000000                     
   929  000000                     
   930  000000                     
   931  000000                     
   932  000000                     
   933  000000                     
   934  000000                     
   935  000000                     
   936  000000                     
   937  000000                     
   938  000000                     
   939  000000                     
   940  000000                     
   941  000000                     
   942  000000                     
   943  000000                     
   944  000000                     
   945  000000                     
   946  000000                     
   947  000000                     
   948  000000                     
   949  000000                     
   950  000000                     
   951  000000                     
   952  000000                     
   953  000000                     
   954  000000                     
   955  000000                     
   956  000000                     
   957  000000                     
   958  000000                     
   959  000000                     
   960  000000                     
   961  000000                     
   962  000000                     
   963  000000                     
   964  000000                     
   965  000000                     
   966  000000                     
   967  000000                     
   968  000000                     
   969  000000                     
   970  000000                     
   971  000000                     
   972  000000                     
   973  000000                     
   974  000000                     
   975  000000                     
   976  000000                     
   977  000000                     
   978  000000                     
   979  000000                     
   980  000000                     
   981  000000                     
   982  000000                     
   983  000000                     
   984  000000                     
   985  000000                     
   986  000000                     
   987  000000                     
   988  000000                     
   989  000000                     
   990  000000                     
   991  000000                     
   992  000000                     
   993  000000                     
   994  000000                     
   995  000000                     
   996  000000                     
   997  000000                     
   998  000000                     
   999  000000                     
  1000  000000                     
  1001  000000                     
  1002  000000                     
  1003  000000                     
  1004  000000                     
  1005  000000                     
  1006  000000                     
  1007  000000                     
  1008  000000                     
  1009  000000                     
  1010  000000                     
  1011  000000                     
  1012  000000                     
  1013  000000                     
  1014  000000                     
  1015  000000                     
  1016  000000                     
  1017  000000                     
  1018  000000                     
  1019  000000                     
  1020  000000                     
  1021  000000                     
  1022  000000                     
  1023  000000                     
  1024  000000                     
  1025  000000                     
  1026  000000                     
  1027  000000                     
  1028  000000                     
  1029  000000                     
  1030  000000                     
  1031  000000                     
  1032  000000                     
  1033  000000                     
  1034  000000                     
  1035  000000                     
  1036  000000                     
  1037  000000                     
  1038  000000                     
  1039  000000                     
  1040  000000                     
  1041  000000                     
  1042  000000                     
  1043  000000                     
  1044  000000                     
  1045  000000                     
  1046  000000                     
  1047  000000                     
  1048  000000                     
  1049  000000                     
  1050  000000                     
  1051  000000                     
  1052  000000                     
  1053  000000                     
  1054  000000                     
  1055  000000                     
  1056  000000                     
  1057  000000                     
  1058  000000                     
  1059  000000                     
  1060  000000                     
  1061  000000                     
  1062  000000                     
  1063  000000                     
  1064  000000                     
  1065  000000                     
  1066  000000                     
  1067  000000                     
  1068  000000                     
  1069  000000                     
  1070  000000                     
  1071  000000                     
  1072  000000                     
  1073  000000                     
  1074  000000                     
  1075  000000                     
  1076  000000                     
  1077  000000                     
  1078  000000                     
  1079  000000                     
  1080  000000                     
  1081  000000                     
  1082  000000                     
  1083  000000                     
  1084  000000                     
  1085  000000                     
  1086  000000                     
  1087  000000                     
  1088  000000                     
  1089  000000                     
  1090  000000                     
  1091  000000                     
  1092  000000                     
  1093  000000                     
  1094  000000                     
  1095  000000                     
  1096  000000                     
  1097  000000                     
  1098  000000                     
  1099  000000                     
  1100  000000                     
  1101  000000                     
  1102  000000                     
  1103  000000                     
  1104  000000                     
  1105  000000                     
  1106  000000                     
  1107  000000                     
  1108  000000                     
  1109  000000                     
  1110  000000                     
  1111  000000                     
  1112  000000                     
  1113  000000                     
  1114  000000                     
  1115  000000                     
  1116  000000                     
  1117  000000                     
  1118  000000                     
  1119  000000                     
  1120  000000                     
  1121  000000                     
  1122  000000                     
  1123  000000                     
  1124  000000                     
  1125  000000                     
  1126  000000                     
  1127  000000                     
  1128  000000                     
  1129  000000                     
  1130  000000                     
  1131  000000                     
  1132  000000                     
  1133  000000                     
  1134  000000                     
  1135  000000                     
  1136  000000                     
  1137  000000                     
  1138  000000                     
  1139  000000                     
  1140  000000                     
  1141  000000                     
  1142  000000                     
  1143  000000                     
  1144  000000                     
  1145  000000                     
  1146  000000                     
  1147  000000                     
  1148  000000                     
  1149  000000                     
  1150  000000                     
  1151  000000                     
  1152  000000                     
  1153  000000                     
  1154  000000                     
  1155  000000                     
  1156  000000                     
  1157  000000                     
  1158  000000                     
  1159  000000                     
  1160  000000                     
  1161  000000                     
  1162  000000                     
  1163  000000                     
  1164  000000                     
  1165  000000                     
  1166  000000                     
  1167  000000                     
  1168  000000                     
  1169  000000                     
  1170  000000                     
  1171  000000                     
  1172  000000                     
  1173  000000                     
  1174  000000                     
  1175  000000                     
  1176  000000                     
  1177  000000                     
  1178  000000                     
  1179  000000                     
  1180  000000                     
  1181  000000                     
  1182  000000                     
  1183  000000                     
  1184  000000                     
  1185  000000                     
  1186                           
  1187                           	psect	bss
  1188  00025D                     _PWM:
  1189  00025D                     	ds	30
  1190                           
  1191                           	psect	temp
  1192  000000                     btemp:
  1193  000000                     	ds	6
  1194                           tblptrh	equ	0xFF7
  1195                           tblptrl	equ	0xFF6
  1196                           prodl	equ	0xFF3
  1197                           indf0	equ	0xFEF
  1198                           wreg	equ	0xFE8
  1199                           fsr2l	equ	0xFD9
  1200                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Thu Jul 12 08:02:17 2018

                 l5 895E                   l6 894E  
                 l7 893E                   l8 8942  
                 l9 8946                  l10 8978  
                l11 8992                  l20 8A54  
                l12 89B4                  l13 89C2  
                l22 8AFA                  l14 89EE  
                l23 8B06                  l32 8BCE  
                l24 8B5E                  l16 89FC  
                l17 8A1A                  l18 8A28  
                l19 8A46                  l29 8BA2  
         _ProcToVNT 73D6                 _PWM 025D  
          _WritePWM 8B62                 wreg 000FE8  
         _WritePWM2 8B7C   __end_of_WritePWM2 8B8C  
              indf0 000FEF                fsr2l 000FD9  
              btemp 0000                awdiv 9776  
              lwdiv 955E     __end_of_IntPWM2 8BE4  
              prodl 000FF3                lwmul 982C  
   __end_of_InitPWM 893C               _DtKNF 0045  
        used_btemp0 0001          used_btemp1 0001  
        used_btemp2 0001          used_btemp3 0001  
        used_btemp4 0001          used_btemp5 0001  
             status 000FD8    __end_of_ModParam 8AEC  
           _IntPWM2 8BB8             _InitPWM 8900  
           __Lparam 00A8          _VPWMtoPROC 8AEC  
__end_of_VPWMtoPROC 8B62             __ramtop 1000  
  __end_of_WritePWM 8B7C      __end_of_IntPWM 8BB8  
      _CalkVNTtoPWM 73B4              _IntPWM 8B8C  
            tblptrl 000FF6            _ModParam 893C  
