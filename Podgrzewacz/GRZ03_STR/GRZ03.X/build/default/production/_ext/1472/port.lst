

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Thu Jul 12 08:02:17 2018


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	const,global,class=CODE,delta=1
     4                           	psect	text,global,reloc=2,class=CODE,delta=1
     5                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     6                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     7                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97                           
    98                           	psect	const
    99                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   100                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   101                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   102                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   103                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   104                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   105                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   106                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   107                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   108                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   109                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   110                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   111                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   112                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   113                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   114                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   115                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   116                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   117                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   118                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   119                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   120                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   121                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   122                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   123                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   124                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   125                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   126                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   127                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   128                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   129                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   130                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   131                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   132                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   133                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   134                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   135                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   136                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   137                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   138                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   139                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   140                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   141                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   142                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   143                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   144                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   145                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   146                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   147                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   148                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   149                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   150                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   151                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   152                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   153                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   154                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   155                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   156                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   157                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   158                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   159                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   160                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   161                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   162                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   163                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   164                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   165                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   166                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   167                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   168                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   169                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   170                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   171                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   172                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   173                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   174                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   175                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   176                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   177                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   178                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   179                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   180                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   181                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   182                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   183                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   184                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   185                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   186                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   187                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   188                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   189                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   190                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   191                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   192                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   193                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   194                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   195                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   196                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   197                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   198                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   199  001000                     _Nastawa:
   200  001000  01                 	db	1
   201  001001  01                 	db	1
   202  001002  01                 	db	1
   203  001003  01                 	db	1
   204  001004  02                 	db	2
   205  001005  04                 	db	4
   206  001006  02                 	db	2
   207  001007  02                 	db	2
   208  001008  02                 	db	2
   209  001009  02                 	db	2
   210  00100A  04                 	db	4
   211  00100B  08                 	db	8
   212  00100C  02                 	db	2
   213  00100D  02                 	db	2
   214  00100E  05                 	db	5
   215  00100F  05                 	db	5
   216  001010  02                 	db	2
   217  001011  02                 	db	2
   218  001012  02                 	db	2
   219  001013  0A                 	db	10
   220                           
   221                           	psect	text
   222                           ;port.c: 26: static const Opoznienie Nastawa[10]
      +                          ={
   223                           ;port.c: 27: 1,1,
   224                           ;port.c: 28: 1,1,
   225                           ;port.c: 29: 2,4,
   226                           ;port.c: 30: 2,2,
   227                           ;port.c: 31: 2,2,
   228                           ;port.c: 32: 4,8,
   229                           ;port.c: 33: 2,2,
   230                           ;port.c: 34: 5,5,
   231                           ;port.c: 35: 2,2,
   232                           ;port.c: 36: 2,10
   233                           ;port.c: 37: };
   234                           ;port.c: 39: static volatile IOPort SPort[10];
   235                           ;port.c: 44: void RefStan(void)
   236                           ;port.c: 45: {
   237  008204                     _RefStan:
   238  000000                     
   239                           ;port.c: 47: SPort[0].Input=(RB1) ? 0 : 1;
   240  008204  0E00               	movlw	0
   241  008206  A281               	btfss	3969,1,c	;volatile
   242  008208  0E01               	movlw	1
   243  00820A  6E00               	movwf	btemp,c
   244  00820C  EE0F  F001         	lfsr	0,_SPort	;volatile
   245  008210  18EF               	xorwf	indf0,w,c
   246  008212  0BFE               	andlw	-2
   247  008214  1800               	xorwf	btemp,w,c
   248  008216  6EEF               	movwf	indf0,c
   249                           ;port.c: 49: SPort[1].Input=(RB2) ? 0 : 1;
   250  008218  0E00               	movlw	0
   251  00821A  A481               	btfss	3969,2,c	;volatile
   252  00821C  0E01               	movlw	1
   253  00821E  6E00               	movwf	btemp,c
   254  008220  EE0F  F002         	lfsr	0,_SPort+1
   255  008224  18EF               	xorwf	indf0,w,c
   256  008226  0BFE               	andlw	-2
   257  008228  1800               	xorwf	btemp,w,c
   258  00822A  6EEF               	movwf	indf0,c
   259                           ;port.c: 51: SPort[2].Input=(RC0&&RA7) ? 1 : 0;
   260  00822C  B082               	btfsc	3970,0,c	;volatile
   261  00822E  AE80               	btfss	3968,7,c	;volatile
   262  008230  D002               	goto	u30
   263  008232  0E01               	movlw	1
   264  008234  D001               	goto	u40
   265  008236                     u30:
   266  008236  0E00               	movlw	0
   267  008238                     u40:
   268  008238  6E00               	movwf	btemp,c
   269  00823A  EE0F  F003         	lfsr	0,_SPort+2
   270  00823E  18EF               	xorwf	indf0,w,c
   271  008240  0BFE               	andlw	-2
   272  008242  1800               	xorwf	btemp,w,c
   273  008244  6EEF               	movwf	indf0,c
   274                           ;port.c: 53: SPort[3].Input=(RA6&&RA7) ? 1 : 0;
   275  008246  BC80               	btfsc	3968,6,c	;volatile
   276  008248  AE80               	btfss	3968,7,c	;volatile
   277  00824A  D002               	goto	u70
   278  00824C  0E01               	movlw	1
   279  00824E  D001               	goto	u80
   280  008250                     u70:
   281  008250  0E00               	movlw	0
   282  008252                     u80:
   283  008252  6E00               	movwf	btemp,c
   284  008254  EE0F  F004         	lfsr	0,_SPort+3
   285  008258  18EF               	xorwf	indf0,w,c
   286  00825A  0BFE               	andlw	-2
   287  00825C  1800               	xorwf	btemp,w,c
   288  00825E  6EEF               	movwf	indf0,c
   289                           ;port.c: 55: SPort[4].Input=(RA7) ? 1 : 0;
   290  008260  010F               	movlb	(_SPort+4) shr (0+8)
   291  008262  9105               	bcf	(_SPort+4)& (0+255),0,b
   292  008264  BE80               	btfsc	3968,7,c	;volatile
   293  008266  8105               	bsf	(_SPort+4)& (0+255),0,b
   294                           ;port.c: 57: SPort[5].Input=(RD4) ? 0 : 1;
   295  008268  0E00               	movlw	0
   296  00826A  A883               	btfss	3971,4,c	;volatile
   297  00826C  0E01               	movlw	1
   298  00826E  6E00               	movwf	btemp,c
   299  008270  EE0F  F006         	lfsr	0,_SPort+5
   300  008274  18EF               	xorwf	indf0,w,c
   301  008276  0BFE               	andlw	-2
   302  008278  1800               	xorwf	btemp,w,c
   303  00827A  6EEF               	movwf	indf0,c
   304                           ;port.c: 59: SPort[6].Input=(RA4) ? 0 : 1;
   305  00827C  0E00               	movlw	0
   306  00827E  A880               	btfss	3968,4,c	;volatile
   307  008280  0E01               	movlw	1
   308  008282  6E00               	movwf	btemp,c
   309  008284  EE0F  F007         	lfsr	0,_SPort+6
   310  008288  18EF               	xorwf	indf0,w,c
   311  00828A  0BFE               	andlw	-2
   312  00828C  1800               	xorwf	btemp,w,c
   313  00828E  6EEF               	movwf	indf0,c
   314                           ;port.c: 61: SPort[7].Input=(DtCW._err_CW)? 1 : 
      +                          0;
   315  008290  0102               	movlb	_DtCW shr (0+8)
   316  008292  0E00               	movlw	0
   317  008294  B14E               	btfsc	_DtCW& (0+255),0,b
   318  008296  0E01               	movlw	1
   319  008298  6E00               	movwf	btemp,c
   320  00829A  EE0F  F008         	lfsr	0,_SPort+7
   321  00829E  18EF               	xorwf	indf0,w,c
   322  0082A0  0BFE               	andlw	-2
   323  0082A2  1800               	xorwf	btemp,w,c
   324  0082A4  6EEF               	movwf	indf0,c
   325                           ;port.c: 63: SPort[8].Input=(RC5) ? 0 : 1;
   326  0082A6  0E00               	movlw	0
   327  0082A8  AA82               	btfss	3970,5,c	;volatile
   328  0082AA  0E01               	movlw	1
   329  0082AC  6E00               	movwf	btemp,c
   330  0082AE  EE0F  F009         	lfsr	0,_SPort+8
   331  0082B2  18EF               	xorwf	indf0,w,c
   332  0082B4  0BFE               	andlw	-2
   333  0082B6  1800               	xorwf	btemp,w,c
   334  0082B8  6EEF               	movwf	indf0,c
   335                           ;port.c: 65: SPort[9].Input=(RA6) ? 1 : 0;
   336  0082BA  010F               	movlb	(_SPort+9) shr (0+8)
   337  0082BC  910A               	bcf	(_SPort+9)& (0+255),0,b
   338  0082BE  BC80               	btfsc	3968,6,c	;volatile
   339  0082C0  810A               	bsf	(_SPort+9)& (0+255),0,b
   340                           ;port.c: 67: }
   341  0082C2  0012               	return	
   342  0082C4                     __end_of_RefStan:
   343                           ;port.c: 71: void FrsStan(void)
   344                           ;port.c: 72: {
   345  0082C4                     _FrsStan:
   346  000000                     
   347                           ;port.c: 74: SPort[0].Output=SPort[0].Input;
   348  0082C4  CF01  F000         	movff	_SPort,btemp	;volatile
   349  0082C8  010F               	movlb	_SPort shr (0+8)	;volatile
   350  0082CA  9301               	bcf	_SPort& (0+255),1,b	;volatile
   351  0082CC  B000               	btfsc	btemp,0,c
   352  0082CE  8301               	bsf	_SPort& (0+255),1,b	;volatile
   353                           ;port.c: 75: SPort[0].Timer=0;
   354  0082D0  EE0F  F001         	lfsr	0,_SPort	;volatile
   355  0082D4  0E03               	movlw	-253
   356  0082D6  16EF               	andwf	indf0,f,c
   357                           ;port.c: 78: SPort[1].Output=SPort[1].Input;
   358  0082D8  CF02  F000         	movff	_SPort+1,btemp
   359  0082DC  010F               	movlb	(_SPort+1) shr (0+8)
   360  0082DE  9302               	bcf	(_SPort+1)& (0+255),1,b
   361  0082E0  B000               	btfsc	btemp,0,c
   362  0082E2  8302               	bsf	(_SPort+1)& (0+255),1,b
   363                           ;port.c: 79: SPort[1].Timer=0;
   364  0082E4  EE0F  F002         	lfsr	0,_SPort+1
   365  0082E8  16EF               	andwf	indf0,f,c
   366                           ;port.c: 82: SPort[2].Output=SPort[2].Input;
   367  0082EA  CF03  F000         	movff	_SPort+2,btemp
   368  0082EE  010F               	movlb	(_SPort+2) shr (0+8)
   369  0082F0  9303               	bcf	(_SPort+2)& (0+255),1,b
   370  0082F2  B000               	btfsc	btemp,0,c
   371  0082F4  8303               	bsf	(_SPort+2)& (0+255),1,b
   372                           ;port.c: 83: SPort[2].Timer=0;
   373  0082F6  EE0F  F003         	lfsr	0,_SPort+2
   374  0082FA  16EF               	andwf	indf0,f,c
   375                           ;port.c: 86: SPort[3].Output=SPort[3].Input;
   376  0082FC  CF04  F000         	movff	_SPort+3,btemp
   377  008300  010F               	movlb	(_SPort+3) shr (0+8)
   378  008302  9304               	bcf	(_SPort+3)& (0+255),1,b
   379  008304  B000               	btfsc	btemp,0,c
   380  008306  8304               	bsf	(_SPort+3)& (0+255),1,b
   381                           ;port.c: 87: SPort[3].Timer=0;
   382  008308  EE0F  F004         	lfsr	0,_SPort+3
   383  00830C  16EF               	andwf	indf0,f,c
   384                           ;port.c: 90: SPort[4].Output=SPort[4].Input;
   385  00830E  CF05  F000         	movff	_SPort+4,btemp
   386  008312  010F               	movlb	(_SPort+4) shr (0+8)
   387  008314  9305               	bcf	(_SPort+4)& (0+255),1,b
   388  008316  B000               	btfsc	btemp,0,c
   389  008318  8305               	bsf	(_SPort+4)& (0+255),1,b
   390                           ;port.c: 91: SPort[4].Timer=0;
   391  00831A  EE0F  F005         	lfsr	0,_SPort+4
   392  00831E  16EF               	andwf	indf0,f,c
   393                           ;port.c: 94: SPort[5].Output=SPort[5].Input;
   394  008320  CF06  F000         	movff	_SPort+5,btemp
   395  008324  010F               	movlb	(_SPort+5) shr (0+8)
   396  008326  9306               	bcf	(_SPort+5)& (0+255),1,b
   397  008328  B000               	btfsc	btemp,0,c
   398  00832A  8306               	bsf	(_SPort+5)& (0+255),1,b
   399                           ;port.c: 95: SPort[5].Timer=0;
   400  00832C  EE0F  F006         	lfsr	0,_SPort+5
   401  008330  16EF               	andwf	indf0,f,c
   402                           ;port.c: 98: SPort[6].Output=SPort[6].Input;
   403  008332  CF07  F000         	movff	_SPort+6,btemp
   404  008336  010F               	movlb	(_SPort+6) shr (0+8)
   405  008338  9307               	bcf	(_SPort+6)& (0+255),1,b
   406  00833A  B000               	btfsc	btemp,0,c
   407  00833C  8307               	bsf	(_SPort+6)& (0+255),1,b
   408                           ;port.c: 99: SPort[6].Timer=0;
   409  00833E  EE0F  F007         	lfsr	0,_SPort+6
   410  008342  16EF               	andwf	indf0,f,c
   411                           ;port.c: 102: SPort[7].Output=SPort[7].Input;
   412  008344  CF08  F000         	movff	_SPort+7,btemp
   413  008348  010F               	movlb	(_SPort+7) shr (0+8)
   414  00834A  9308               	bcf	(_SPort+7)& (0+255),1,b
   415  00834C  B000               	btfsc	btemp,0,c
   416  00834E  8308               	bsf	(_SPort+7)& (0+255),1,b
   417                           ;port.c: 103: SPort[7].Timer=0;
   418  008350  EE0F  F008         	lfsr	0,_SPort+7
   419  008354  16EF               	andwf	indf0,f,c
   420                           ;port.c: 106: SPort[8].Output=SPort[8].Input;
   421  008356  CF09  F000         	movff	_SPort+8,btemp
   422  00835A  010F               	movlb	(_SPort+8) shr (0+8)
   423  00835C  9309               	bcf	(_SPort+8)& (0+255),1,b
   424  00835E  B000               	btfsc	btemp,0,c
   425  008360  8309               	bsf	(_SPort+8)& (0+255),1,b
   426                           ;port.c: 107: SPort[8].Timer=0;
   427  008362  EE0F  F009         	lfsr	0,_SPort+8
   428  008366  16EF               	andwf	indf0,f,c
   429                           ;port.c: 110: SPort[9].Output=SPort[9].Input;
   430  008368  CF0A  F000         	movff	_SPort+9,btemp
   431  00836C  010F               	movlb	(_SPort+9) shr (0+8)
   432  00836E  930A               	bcf	(_SPort+9)& (0+255),1,b
   433  008370  B000               	btfsc	btemp,0,c
   434  008372  830A               	bsf	(_SPort+9)& (0+255),1,b
   435                           ;port.c: 111: SPort[9].Timer=0;
   436  008374  EE0F  F00A         	lfsr	0,_SPort+9
   437  008378  16EF               	andwf	indf0,f,c
   438                           ;port.c: 113: }
   439  00837A  0C03               	retlw	3
   440  00837C                     __end_of_FrsStan:
   441                           ;port.c: 118: void InitPort(void)
   442                           ;port.c: 119: {
   443  00837C                     _InitPort:
   444  000000                     
   445                           ;port.c: 132: PORTA=0b00000000;
   446  00837C  6A80               	clrf	3968,c	;volatile
   447                           ;port.c: 133: TRISA=0b11111111;
   448  00837E  6892               	setf	3986,c	;volatile
   449                           ;port.c: 134: PORTB=0b00000000;
   450  008380  6A81               	clrf	3969,c	;volatile
   451                           ;port.c: 135: TRISB=0b11100111;
   452  008382  0EE7               	movlw	231
   453  008384  6E93               	movwf	3987,c	;volatile
   454                           ;port.c: 136: PORTC=0b00000000;
   455  008386  6A82               	clrf	3970,c	;volatile
   456                           ;port.c: 137: TRISC=0b11111001;
   457  008388  0EF9               	movlw	249
   458  00838A  6E94               	movwf	3988,c	;volatile
   459                           ;port.c: 138: PORTD=0b00000000;
   460  00838C  6A83               	clrf	3971,c	;volatile
   461                           ;port.c: 139: TRISD=0b00110000;
   462  00838E  0E30               	movlw	48
   463  008390  6E95               	movwf	3989,c	;volatile
   464                           ;port.c: 140: PORTE=0b00000000;
   465  008392  6A84               	clrf	3972,c	;volatile
   466                           ;port.c: 141: TRISE=(TRISE&0b11111000)|(0b111110
      +                          00&0b00000111);
   467  008394  0EF8               	movlw	248
   468  008396  1696               	andwf	3990,f,c	;volatile
   469                           ;port.c: 144: RefStan();
   470  008398  DF35               	call	_RefStan	;wreg free
   471                           ;port.c: 145: FrsStan();
   472  00839A  D794               	goto	_FrsStan	;wreg free
   473                           ;port.c: 147: }
   474  00839C                     __end_of_InitPort:
   475                           ;port.c: 150: void StabPort(void)
   476                           ;port.c: 151: {
   477  00839C                     _StabPort:
   478  000000                     
   479                           ;port.c: 152: static unsigned char tim=0;
   480  00839C  010F               	movlb	F1177 shr (0+8)
   481  00839E  2B00               	incf	F1177& (0+255),f,b
   482  0083A0  0500               	decf	F1177& (0+255),w,b
   483  0083A2  6E00               	movwf	btemp,c
   484  0083A4  0E05               	movlw	5
   485  0083A6  5C00               	subwf	btemp,w,c
   486  0083A8  A0D8               	btfss	status,0,c
   487  0083AA  0012               	return	
   488                           ;port.c: 157: tim=0;
   489  0083AC  6B00               	clrf	F1177& (0+255),b
   490                           ;port.c: 160: RefStan();
   491  0083AE  DF2A               	call	_RefStan	;wreg free
   492                           ;port.c: 163: for(i=0;i<10;i++)
   493  0083B0  6AD9               	clrf	fsr2l,c
   494  0083B2                     l13:
   495                           ;port.c: 164: {
   496  0083B2  50D9               	movf	fsr2l,w,c
   497  0083B4  EE0F  F001         	lfsr	0,_SPort
   498  0083B8  26E9               	addwf	fsr0l,f,c
   499  0083BA  0E00               	movlw	0
   500  0083BC  22EA               	addwfc	fsr0h,f,c
   501  0083BE  30EF               	rrcf	indf0,w,c
   502  0083C0  6E00               	movwf	btemp,c
   503  0083C2  3000               	rrcf	btemp,w,c
   504  0083C4  0B3F               	andlw	63
   505  0083C6  E114               	bnz	l16
   506                           ;port.c: 166: {
   507  0083C8  50D9               	movf	fsr2l,w,c
   508  0083CA  EE0F  F001         	lfsr	0,_SPort
   509  0083CE  26E9               	addwf	fsr0l,f,c
   510  0083D0  0E00               	movlw	0
   511  0083D2  22EA               	addwfc	fsr0h,f,c
   512  0083D4  50EF               	movf	indf0,w,c
   513  0083D6  0B01               	andlw	1
   514  0083D8  6E00               	movwf	btemp,c
   515  0083DA  50D9               	movf	fsr2l,w,c
   516  0083DC  EE0F  F001         	lfsr	0,_SPort
   517  0083E0  26E9               	addwf	fsr0l,f,c
   518  0083E2  0E00               	movlw	0
   519  0083E4  22EA               	addwfc	fsr0h,f,c
   520  0083E6  30EF               	rrcf	indf0,w,c
   521  0083E8  0B01               	andlw	1
   522  0083EA  1800               	xorwf	btemp,w,c
   523  0083EC  E073               	bz	l15
   524  0083EE  D05F               	goto	l24
   525                           ;port.c: 168: continue;
   526                           ;port.c: 169: else SPort[i].Timer++;
   527                           ;port.c: 170: }
   528  0083F0                     l16:
   529                           ;port.c: 171: else
   530  0083F0  50D9               	movf	fsr2l,w,c
   531  0083F2  EE0F  F001         	lfsr	0,_SPort
   532  0083F6  26E9               	addwf	fsr0l,f,c
   533  0083F8  0E00               	movlw	0
   534  0083FA  22EA               	addwfc	fsr0h,f,c
   535  0083FC  50EF               	movf	indf0,w,c
   536  0083FE  6E00               	movwf	btemp,c
   537  008400  50D9               	movf	fsr2l,w,c
   538  008402  0D02               	mullw	2
   539  008404  50F3               	movf	prodl,w,c
   540  008406  0F00               	addlw	low _Nastawa
   541  008408  6EF6               	movwf	tblptrl,c
   542  00840A  50F4               	movf	prodh,w,c
   543  00840C  6EF7               	movwf	tblptrh,c
   544  00840E  0E10               	movlw	high _Nastawa
   545                           ;port.c: 174: else delay=Nastawa[i].Delay2;
   546  008410  22F7               	addwfc	tblptrh,f,c
   547  008412  A200               	btfss	btemp,1,c
   548  008414  D003               	goto	L5
   549  008416  2AF6               	incf	tblptrl,f,c
   550  008418  0E00               	movlw	0
   551  00841A  22F7               	addwfc	tblptrh,f,c
   552  00841C                     L5:
   553  00841C  0008               	tblrd		*
   554  00841E  50F5               	movf	tablat,w,c
   555  008420  6EE1               	movwf	fsr1l,c
   556                           ;port.c: 176: if(SPort[i].Timer>=delay)
   557  008422  50D9               	movf	fsr2l,w,c
   558  008424  EE0F  F001         	lfsr	0,_SPort
   559  008428  26E9               	addwf	fsr0l,f,c
   560  00842A  0E00               	movlw	0
   561  00842C  22EA               	addwfc	fsr0h,f,c
   562  00842E  30EF               	rrcf	indf0,w,c
   563  008430  6E00               	movwf	btemp,c
   564  008432  3000               	rrcf	btemp,w,c
   565  008434  0B3F               	andlw	63
   566  008436  6E00               	movwf	btemp,c
   567  008438  50E1               	movf	fsr1l,w,c
   568  00843A  5C00               	subwf	btemp,w,c
   569  00843C  E31C               	bnc	l22
   570                           ;port.c: 177: {
   571  00843E  50D9               	movf	fsr2l,w,c
   572  008440  EE0F  F001         	lfsr	0,_SPort
   573  008444  26E9               	addwf	fsr0l,f,c
   574  008446  0E00               	movlw	0
   575  008448  22EA               	addwfc	fsr0h,f,c
   576  00844A  0E03               	movlw	-253
   577  00844C  16EF               	andwf	indf0,f,c
   578                           ;port.c: 179: SPort[i].Output=SPort[i].Input;
   579  00844E  50D9               	movf	fsr2l,w,c
   580  008450  EE0F  F001         	lfsr	0,_SPort
   581  008454  26E9               	addwf	fsr0l,f,c
   582  008456  0E00               	movlw	0
   583  008458  22EA               	addwfc	fsr0h,f,c
   584  00845A  50EF               	movf	indf0,w,c
   585  00845C  0B01               	andlw	1
   586  00845E  6E00               	movwf	btemp,c
   587  008460  50D9               	movf	fsr2l,w,c
   588  008462  EE0F  F001         	lfsr	0,_SPort
   589  008466  26E9               	addwf	fsr0l,f,c
   590  008468  0E00               	movlw	0
   591  00846A  22EA               	addwfc	fsr0h,f,c
   592  00846C  3600               	rlcf	btemp,f,c
   593  00846E  50EF               	movf	indf0,w,c
   594  008470  1800               	xorwf	btemp,w,c
   595  008472  0BFD               	andlw	-3
   596  008474  D02D               	goto	L3
   597                           ;port.c: 180: }
   598  008476                     l22:
   599                           ;port.c: 181: else
   600  008476  50D9               	movf	fsr2l,w,c
   601  008478  EE0F  F001         	lfsr	0,_SPort
   602  00847C  26E9               	addwf	fsr0l,f,c
   603  00847E  0E00               	movlw	0
   604  008480  22EA               	addwfc	fsr0h,f,c
   605  008482  50EF               	movf	indf0,w,c
   606  008484  0B01               	andlw	1
   607  008486  6E00               	movwf	btemp,c
   608  008488  50D9               	movf	fsr2l,w,c
   609  00848A  EE0F  F001         	lfsr	0,_SPort
   610  00848E  26E9               	addwf	fsr0l,f,c
   611  008490  0E00               	movlw	0
   612  008492  22EA               	addwfc	fsr0h,f,c
   613  008494  30EF               	rrcf	indf0,w,c
   614  008496  0B01               	andlw	1
   615  008498  1800               	xorwf	btemp,w,c
   616  00849A  E109               	bnz	l24
   617                           ;port.c: 184: SPort[i].Timer=0;
   618  00849C  50D9               	movf	fsr2l,w,c
   619  00849E  EE0F  F001         	lfsr	0,_SPort
   620  0084A2  26E9               	addwf	fsr0l,f,c
   621  0084A4  0E00               	movlw	0
   622  0084A6  22EA               	addwfc	fsr0h,f,c
   623  0084A8  0E03               	movlw	-253
   624  0084AA  16EF               	andwf	indf0,f,c
   625  0084AC  D013               	goto	l15
   626  0084AE                     l24:
   627                           ;port.c: 185: else SPort[i].Timer++;
   628  0084AE  50D9               	movf	fsr2l,w,c
   629  0084B0  EE0F  F001         	lfsr	0,_SPort
   630  0084B4  26E9               	addwf	fsr0l,f,c
   631  0084B6  0E00               	movlw	0
   632  0084B8  22EA               	addwfc	fsr0h,f,c
   633  0084BA  30EF               	rrcf	indf0,w,c
   634  0084BC  6E00               	movwf	btemp,c
   635  0084BE  3000               	rrcf	btemp,w,c
   636  0084C0  0B3F               	andlw	63
   637  0084C2  6E00               	movwf	btemp,c
   638  0084C4  2A00               	incf	btemp,f,c
   639  0084C6  3600               	rlcf	btemp,f,c
   640  0084C8  3600               	rlcf	btemp,f,c
   641  0084CA  50EF               	movf	indf0,w,c
   642  0084CC  1800               	xorwf	btemp,w,c
   643  0084CE  0B03               	andlw	-253
   644  0084D0                     L3:
   645  0084D0  1800               	xorwf	btemp,w,c
   646  0084D2  6EEF               	movwf	indf0,c
   647  0084D4                     l15:
   648  0084D4  2AD9               	incf	fsr2l,f,c
   649  0084D6  0E09               	movlw	9
   650  0084D8  64D9               	cpfsgt	fsr2l,c
   651  0084DA  D76B               	goto	l13
   652  0084DC  0C09               	retlw	9
   653                           ;port.c: 186: }
   654  0084DE                     __end_of_StabPort:
   655                           ;port.c: 192: bit RdPrt(const unsigned char Inde
      +                          x)
   656                           ;port.c: 193: {
   657  0084DE                     _RdPrt:
   658  000000                     
   659                           ; _Index loaded to fsr2l
   660  0084DE  6ED9               	movwf	fsr2l,c
   661                           ;port.c: 194: if (Index>10-1) asm("RESET");
   662  0084E0  0E09               	movlw	9
   663  0084E2  64D9               	cpfsgt	fsr2l,c
   664  0084E4  D001               	goto	l27
   665  0084E6  00FF               	reset		;#
   666  0084E8                     l27:
   667                           ;port.c: 195: return SPort[Index].Output;
   668  0084E8  50D9               	movf	fsr2l,w,c
   669  0084EA  EE0F  F001         	lfsr	0,_SPort
   670  0084EE  26E9               	addwf	fsr0l,f,c
   671  0084F0  0E00               	movlw	0
   672  0084F2  22EA               	addwfc	fsr0h,f,c
   673  0084F4  30EF               	rrcf	indf0,w,c
   674  0084F6  0B01               	andlw	1
   675  0084F8  6E00               	movwf	btemp,c
   676  0084FA  3000               	rrcf	btemp,w,c
   677  0084FC  0012               	return	
   678                           ;port.c: 196: }
   679  0084FE                     __end_of_RdPrt:
   680                           ;       param _nw assigned to ?_SetPrt+0
   681  000000                     _SetPrt$nw	set	?_SetPrt
   682                           ;port.c: 199: void SetPrt(const unsigned char In
      +                          dex, const unsigned char nw)
   683                           ;port.c: 200: {
   684  0084FE  00A8               	dw	?_SetPrt
   685  008500                     _SetPrt:
   686  000000                     
   687                           ; _Index loaded to fsr2l
   688  008500  6ED9               	movwf	fsr2l,c
   689                           ;port.c: 201: if (Index>10-1) asm("RESET");
   690  008502  0E09               	movlw	9
   691  008504  64D9               	cpfsgt	fsr2l,c
   692  008506  D001               	goto	l29
   693  008508  00FF               	reset		;#
   694  00850A                     l29:
   695                           ;port.c: 202: SPort[Index].Output=((!nw)?0:1);
   696  00850A  0E00               	movlw	0
   697  00850C  6A00               	clrf	btemp,c
   698  00850E  0100               	movlb	__Lparam shr (0+8)
   699  008510  63A8               	cpfseq	?_SetPrt^(__Lparam& (0+65280)),b
   700  008512  2A00               	incf	btemp,f,c
   701  008514  50D9               	movf	fsr2l,w,c
   702  008516  EE0F  F001         	lfsr	0,_SPort
   703  00851A  26E9               	addwf	fsr0l,f,c
   704  00851C  0E00               	movlw	0
   705  00851E  22EA               	addwfc	fsr0h,f,c
   706  008520  3600               	rlcf	btemp,f,c
   707  008522  50EF               	movf	indf0,w,c
   708  008524  1800               	xorwf	btemp,w,c
   709  008526  0BFD               	andlw	-3
   710  008528  1800               	xorwf	btemp,w,c
   711  00852A  6EEF               	movwf	indf0,c
   712                           ;port.c: 203: SPort[Index].Timer=0;
   713  00852C  50D9               	movf	fsr2l,w,c
   714  00852E  EE0F  F001         	lfsr	0,_SPort
   715  008532  26E9               	addwf	fsr0l,f,c
   716  008534  0E00               	movlw	0
   717  008536  22EA               	addwfc	fsr0h,f,c
   718  008538  0E03               	movlw	-253
   719  00853A  16EF               	andwf	indf0,f,c
   720                           ;port.c: 204: }
   721  00853C  0C03               	retlw	3
   722  00853E                     __end_of_SetPrt:
   723                           ;port.c: 207: void RefPrt(const unsigned char In
      +                          dex)
   724                           ;port.c: 208: {
   725  00853E                     _RefPrt:
   726  000000                     
   727                           ; _Index loaded to fsr2l
   728  00853E  6ED9               	movwf	fsr2l,c
   729                           ;port.c: 209: if (Index>10-1) asm("RESET");
   730  008540  0E09               	movlw	9
   731  008542  64D9               	cpfsgt	fsr2l,c
   732  008544  D001               	goto	l31
   733  008546  00FF               	reset		;#
   734  008548                     l31:
   735                           ;port.c: 210: SPort[Index].Output=SPort[Index].I
      +                          nput;
   736  008548  50D9               	movf	fsr2l,w,c
   737  00854A  EE0F  F001         	lfsr	0,_SPort
   738  00854E  26E9               	addwf	fsr0l,f,c
   739  008550  0E00               	movlw	0
   740  008552  22EA               	addwfc	fsr0h,f,c
   741  008554  50EF               	movf	indf0,w,c
   742  008556  0B01               	andlw	1
   743  008558  6E00               	movwf	btemp,c
   744  00855A  50D9               	movf	fsr2l,w,c
   745  00855C  EE0F  F001         	lfsr	0,_SPort
   746  008560  26E9               	addwf	fsr0l,f,c
   747  008562  0E00               	movlw	0
   748  008564  22EA               	addwfc	fsr0h,f,c
   749  008566  3600               	rlcf	btemp,f,c
   750  008568  50EF               	movf	indf0,w,c
   751  00856A  1800               	xorwf	btemp,w,c
   752  00856C  0BFD               	andlw	-3
   753  00856E  1800               	xorwf	btemp,w,c
   754  008570  6EEF               	movwf	indf0,c
   755                           ;port.c: 211: SPort[Index].Timer=0;
   756  008572  50D9               	movf	fsr2l,w,c
   757  008574  EE0F  F001         	lfsr	0,_SPort
   758  008578  26E9               	addwf	fsr0l,f,c
   759  00857A  0E00               	movlw	0
   760  00857C  22EA               	addwfc	fsr0h,f,c
   761  00857E  0E03               	movlw	-253
   762  008580  16EF               	andwf	indf0,f,c
   763                           ;port.c: 212: }
   764  008582  0C03               	retlw	3
   765  008584                     __end_of_RefPrt:
   766  000000                     
   767  000000                     
   768  000000                     
   769  000000                     
   770  000000                     
   771  000000                     
   772  000000                     
   773  000000                     
   774  000000                     
   775  000000                     
   776  000000                     
   777  000000                     
   778  000000                     
   779  000000                     
   780  000000                     
   781  000000                     
   782  000000                     
   783  000000                     
   784  000000                     
   785  000000                     
   786  000000                     
   787  000000                     
   788  000000                     
   789  000000                     
   790  000000                     
   791  000000                     
   792  000000                     
   793  000000                     
   794  000000                     
   795  000000                     
   796  000000                     
   797  000000                     
   798  000000                     
   799  000000                     
   800  000000                     
   801  000000                     
   802  000000                     
   803  000000                     
   804  000000                     
   805  000000                     
   806  000000                     
   807  000000                     
   808  000000                     
   809  000000                     
   810  000000                     
   811  000000                     
   812  000000                     
   813  000000                     
   814  000000                     
   815  000000                     
   816  000000                     
   817  000000                     
   818  000000                     
   819  000000                     
   820  000000                     
   821  000000                     
   822  000000                     
   823  000000                     
   824  000000                     
   825  000000                     
   826  000000                     
   827  000000                     
   828  000000                     
   829  000000                     
   830  000000                     
   831  000000                     
   832  000000                     
   833  000000                     
   834  000000                     
   835  000000                     
   836  000000                     
   837  000000                     
   838  000000                     
   839  000000                     
   840  000000                     
   841  000000                     
   842  000000                     
   843  000000                     
   844  000000                     
   845  000000                     
   846  000000                     
   847  000000                     
   848  000000                     
   849  000000                     
   850  000000                     
   851  000000                     
   852  000000                     
   853  000000                     
   854  000000                     
   855  000000                     
   856  000000                     
   857  000000                     
   858  000000                     
   859  000000                     
   860  000000                     
   861  000000                     
   862  000000                     
   863  000000                     
   864  000000                     
   865  000000                     
   866  000000                     
   867  000000                     
   868  000000                     
   869  000000                     
   870  000000                     
   871  000000                     
   872  000000                     
   873  000000                     
   874  000000                     
   875  000000                     
   876  000000                     
   877  000000                     
   878  000000                     
   879  000000                     
   880  000000                     
   881  000000                     
   882  000000                     
   883  000000                     
   884  000000                     
   885  000000                     
   886  000000                     
   887  000000                     
   888  000000                     
   889  000000                     
   890  000000                     
   891  000000                     
   892  000000                     
   893  000000                     
   894  000000                     
   895  000000                     
   896  000000                     
   897  000000                     
   898  000000                     
   899  000000                     
   900  000000                     
   901  000000                     
   902  000000                     
   903  000000                     
   904  000000                     
   905  000000                     
   906  000000                     
   907  000000                     
   908  000000                     
   909  000000                     
   910  000000                     
   911  000000                     
   912  000000                     
   913  000000                     
   914  000000                     
   915  000000                     
   916  000000                     
   917  000000                     
   918  000000                     
   919  000000                     
   920  000000                     
   921  000000                     
   922  000000                     
   923  000000                     
   924  000000                     
   925  000000                     
   926  000000                     
   927  000000                     
   928  000000                     
   929  000000                     
   930  000000                     
   931  000000                     
   932  000000                     
   933  000000                     
   934  000000                     
   935  000000                     
   936  000000                     
   937  000000                     
   938  000000                     
   939  000000                     
   940  000000                     
   941  000000                     
   942  000000                     
   943  000000                     
   944  000000                     
   945  000000                     
   946  000000                     
   947  000000                     
   948  000000                     
   949  000000                     
   950  000000                     
   951  000000                     
   952  000000                     
   953  000000                     
   954  000000                     
   955  000000                     
   956  000000                     
   957  000000                     
   958  000000                     
   959  000000                     
   960  000000                     
   961  000000                     
   962  000000                     
   963  000000                     
   964  000000                     
   965  000000                     
   966  000000                     
   967  000000                     
   968  000000                     
   969  000000                     
   970  000000                     
   971  000000                     
   972  000000                     
   973  000000                     
   974  000000                     
   975  000000                     
   976  000000                     
   977  000000                     
   978  000000                     
   979  000000                     
   980  000000                     
   981  000000                     
   982  000000                     
   983  000000                     
   984  000000                     
   985  000000                     
   986  000000                     
   987  000000                     
   988  000000                     
   989  000000                     
   990  000000                     
   991  000000                     
   992  000000                     
   993  000000                     
   994  000000                     
   995  000000                     
   996  000000                     
   997  000000                     
   998  000000                     
   999  000000                     
  1000  000000                     
  1001  000000                     
  1002  000000                     
  1003  000000                     
  1004  000000                     
  1005  000000                     
  1006  000000                     
  1007  000000                     
  1008  000000                     
  1009  000000                     
  1010  000000                     
  1011  000000                     
  1012  000000                     
  1013  000000                     
  1014  000000                     
  1015  000000                     
  1016  000000                     
  1017  000000                     
  1018  000000                     
  1019  000000                     
  1020  000000                     
  1021  000000                     
  1022  000000                     
  1023  000000                     
  1024  000000                     
  1025  000000                     
  1026  000000                     
  1027  000000                     
  1028  000000                     
  1029  000000                     
  1030  000000                     
  1031  000000                     
  1032  000000                     
  1033  000000                     
  1034  000000                     
  1035  000000                     
  1036  000000                     
  1037  000000                     
  1038  000000                     
  1039  000000                     
  1040  000000                     
  1041  000000                     
  1042  000000                     
  1043  000000                     
  1044  000000                     
  1045  000000                     
  1046  000000                     
  1047  000000                     
  1048  000000                     
  1049  000000                     
  1050  000000                     
  1051  000000                     
  1052  000000                     
  1053  000000                     
  1054  000000                     
  1055  000000                     
  1056  000000                     
  1057  000000                     
  1058  000000                     
  1059  000000                     
  1060  000000                     
  1061  000000                     
  1062  000000                     
  1063  000000                     
  1064  000000                     
  1065  000000                     
  1066  000000                     
  1067  000000                     
  1068  000000                     
  1069  000000                     
  1070  000000                     
  1071  000000                     
  1072  000000                     
  1073  000000                     
  1074  000000                     
  1075  000000                     
  1076  000000                     
  1077  000000                     
  1078  000000                     
  1079  000000                     
  1080  000000                     
  1081  000000                     
  1082  000000                     
  1083  000000                     
  1084  000000                     
  1085  000000                     
  1086  000000                     
  1087  000000                     
  1088  000000                     
  1089  000000                     
  1090  000000                     
  1091  000000                     
  1092  000000                     
  1093  000000                     
  1094  000000                     
  1095  000000                     
  1096  000000                     
  1097  000000                     
  1098  000000                     
  1099  000000                     
  1100  000000                     
  1101  000000                     
  1102  000000                     
  1103  000000                     
  1104  000000                     
  1105  000000                     
  1106  000000                     
  1107  000000                     
  1108  000000                     
  1109  000000                     
  1110  000000                     
  1111  000000                     
  1112  000000                     
  1113  000000                     
  1114  000000                     
  1115  000000                     
  1116  000000                     
  1117  000000                     
  1118  000000                     
  1119  000000                     
  1120  000000                     
  1121  000000                     
  1122  000000                     
  1123  000000                     
  1124  000000                     
  1125  000000                     
  1126  000000                     
  1127  000000                     
  1128  000000                     
  1129  000000                     
  1130  000000                     
  1131  000000                     
  1132  000000                     
  1133  000000                     
  1134  000000                     
  1135  000000                     
  1136  000000                     
  1137  000000                     
  1138  000000                     
  1139  000000                     
  1140  000000                     
  1141  000000                     
  1142  000000                     
  1143  000000                     
  1144  000000                     
  1145  000000                     
  1146  000000                     
  1147  000000                     
  1148  000000                     
  1149  000000                     
  1150  000000                     
  1151  000000                     
  1152  000000                     
  1153  000000                     
  1154  000000                     
  1155  000000                     
  1156  000000                     
  1157  000000                     
  1158  000000                     
  1159  000000                     
  1160  000000                     
  1161  000000                     
  1162  000000                     
  1163  000000                     
  1164  000000                     
  1165  000000                     
  1166  000000                     
  1167  000000                     
  1168  000000                     
  1169  000000                     
  1170  000000                     
  1171  000000                     
  1172  000000                     
  1173  000000                     
  1174  000000                     
  1175  000000                     
  1176  000000                     
  1177  000000                     
  1178  000000                     
  1179  000000                     
  1180  000000                     
  1181  000000                     
  1182  000000                     
  1183  000000                     
  1184  000000                     
  1185  000000                     
  1186  000000                     
  1187  000000                     
  1188  000000                     
  1189  000000                     
  1190  000000                     
  1191  000000                     
  1192  000000                     
  1193  000000                     
  1194  000000                     
  1195  000000                     
  1196  000000                     
  1197  000000                     
  1198  000000                     
  1199  000000                     
  1200  000000                     
  1201  000000                     
  1202                           
  1203                           	psect	bigbss
  1204  000F00                     F1177:
  1205  000F00                     	ds	1
  1206  000000                     
  1207  000000                     
  1208  000000                     
  1209  000000                     
  1210  000000                     
  1211  000000                     
  1212  000000                     
  1213  000000                     
  1214  000000                     
  1215  000000                     
  1216  000000                     
  1217  000000                     
  1218  000000                     
  1219  000000                     
  1220  000000                     
  1221  000000                     
  1222  000000                     
  1223  000000                     
  1224  000000                     
  1225  000000                     
  1226  000000                     
  1227  000000                     
  1228  000000                     
  1229  000000                     
  1230  000000                     
  1231  000000                     
  1232  000000                     
  1233  000000                     
  1234  000000                     
  1235  000000                     
  1236  000000                     
  1237  000000                     
  1238  000000                     
  1239  000000                     
  1240  000000                     
  1241  000000                     
  1242  000000                     
  1243  000000                     
  1244  000000                     
  1245  000000                     
  1246  000000                     
  1247  000000                     
  1248  000000                     
  1249  000000                     
  1250  000000                     
  1251  000000                     
  1252  000000                     
  1253  000000                     
  1254  000000                     
  1255  000000                     
  1256  000000                     
  1257  000000                     
  1258  000000                     
  1259  000000                     
  1260  000000                     
  1261  000000                     
  1262  000000                     
  1263  000000                     
  1264  000000                     
  1265  000000                     
  1266  000000                     
  1267  000000                     
  1268  000000                     
  1269  000000                     
  1270  000000                     
  1271  000000                     
  1272  000000                     
  1273  000000                     
  1274  000000                     
  1275  000000                     
  1276  000000                     
  1277  000000                     
  1278  000000                     
  1279  000000                     
  1280  000000                     
  1281  000000                     
  1282  000000                     
  1283  000000                     
  1284  000000                     
  1285  000000                     
  1286  000000                     
  1287  000000                     
  1288  000000                     
  1289  000000                     
  1290  000000                     
  1291  000000                     
  1292  000000                     
  1293  000000                     
  1294  000000                     
  1295  000000                     
  1296  000000                     
  1297  000000                     
  1298  000000                     
  1299  000000                     
  1300  000000                     
  1301  000000                     
  1302  000000                     
  1303  000000                     
  1304  000000                     
  1305  000000                     
  1306  000000                     
  1307  000000                     
  1308  000000                     
  1309  000000                     
  1310  000000                     
  1311  000000                     
  1312  000000                     
  1313  000000                     
  1314  000000                     
  1315  000000                     
  1316  000000                     
  1317  000000                     
  1318  000000                     
  1319  000000                     
  1320  000000                     
  1321  000000                     
  1322  000000                     
  1323  000000                     
  1324  000000                     
  1325  000000                     
  1326  000000                     
  1327  000000                     
  1328  000000                     
  1329  000000                     
  1330  000000                     
  1331  000000                     
  1332  000000                     
  1333  000000                     
  1334  000000                     
  1335  000000                     
  1336  000000                     
  1337  000000                     
  1338  000F00                     _SPort:
  1339  000F00                     	ds	10
  1340                           
  1341                           	psect	temp
  1342  000000                     btemp:
  1343  000000                     	ds	1
  1344                           tblptrh	equ	0xFF7
  1345                           tblptrl	equ	0xFF6
  1346                           tablat	equ	0xFF5
  1347                           prodh	equ	0xFF4
  1348                           prodl	equ	0xFF3
  1349                           indf0	equ	0xFEF
  1350                           fsr0h	equ	0xFEA
  1351                           fsr0l	equ	0xFE9
  1352                           fsr1l	equ	0xFE1
  1353                           fsr2l	equ	0xFD9
  1354                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Thu Jul 12 08:02:17 2018

        _StabPort 839C                l13 83B2                l22 8476  
              l31 8548                l15 84D4                l24 84AE  
              l16 83F0                l27 84E8                l29 850A  
              u30 8236                u40 8238                u70 8250  
              u80 8252              F1177 0F00              _DtCW 024E  
            fsr0h 000FEA              indf0 000FEF              fsr0l 000FE9  
            fsr1l 000FE1              fsr2l 000FD9              btemp 0000  
            prodh 000FF4              prodl 000FF3   __end_of_FrsStan 837C  
 __end_of_RefStan 82C4           ?_SetPrt 00A8     __end_of_RdPrt 84FE  
           _SPort 0F01             _RdPrt 84DE        used_btemp0 0001  
           tablat 000FF5             status 000FD8  __end_of_InitPort 839C  
         _FrsStan 82C4           _RefStan 8204           _Nastawa 1000  
         __Lparam 00A8  __end_of_StabPort 84DE           __ramtop 1000  
  __end_of_RefPrt 8584    __end_of_SetPrt 853E            _RefPrt 853E  
          _SetPrt 8500            tblptrh 000FF7            tblptrl 000FF6  
        _InitPort 837C  
