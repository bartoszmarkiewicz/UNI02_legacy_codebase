

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Thu Jul 12 08:02:18 2018


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	const,global,class=CODE,delta=1
     5                           	psect	bigdata,global,class=BIGRAM,space=1,delta
      +                          =1
     6                           	psect	ibigdata,global,class=CODE,delta=1
     7                           	psect	rbit,global,bit,common,class=COMRAM,space
      +                          =1,delta=1
     8                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     9                           	psect	bss,global,class=RAM,space=1,delta=1
    10                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     
   101                           
   102                           	psect	text
   103                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   104                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   105                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   106                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   107                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   108                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   109                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   110                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   111                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   112                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   113                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   114                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   115                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   116                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   117                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   118                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   119                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   120                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   121                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   122                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   123                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   124                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   125                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   126                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   127                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   128                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   129                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   130                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   131                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   132                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   133                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   134                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   135                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   136                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   137                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   138                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   139                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   140                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   141                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   142                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   143                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   144                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   145                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   146                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   147                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   148                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   149                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   150                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   151                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   152                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   153                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   154                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   155                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   156                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   157                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   158                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   159                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   160                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   161                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   162                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   163                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   164                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   165                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   166                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   167                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   168                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   169                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   170                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   171                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   172                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   173                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   174                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   175                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   176                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   177                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   178                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   179                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   180                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   181                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   182                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   183                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   184                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   185                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   186                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   187                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   188                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   189                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   190                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   191                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   192                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   193                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   194                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   195                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   196                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   197                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   198                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   199                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   200                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   201                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   202                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   203  002DD4                     _InitWsw:
   204                           ;       param _nrpoz assigned to ?_ResetPoz+0
   205  000000                     _ResetPoz$nrpoz	set	?_ResetPoz
   206                           ;       param _nrpoz assigned to ?_SetPoz+0
   207  000000                     _SetPoz$nrpoz	set	?_SetPoz
   208                           ;       param _nrpoz assigned to ?_GetPoz+0
   209  000000                     _GetPoz$nrpoz	set	?_GetPoz
   210                           ;       param _mask assigned to ?_SetStatus+4
   211  000000                     _SetStatus$mask	set	?_SetStatus+4
   212                           ;       param _wst assigned to ?_SetStatus+2
   213  000000                     _SetStatus$wst	set	?_SetStatus+2
   214                           ;       param _wData assigned to ?_SetStatus+0
   215  000000                     _SetStatus$wData	set	?_SetStatus
   216                           ;       param _wdt0 assigned to ?_SetData+3
   217  000000                     _SetData$wdt0	set	?_SetData+3
   218                           ;       param _wdt1 assigned to ?_SetData+2
   219  000000                     _SetData$wdt1	set	?_SetData+2
   220                           ;       param _wData assigned to ?_SetData+0
   221  000000                     _SetData$wData	set	?_SetData
   222                           ;       param _bt assigned to ?_SetWbtyBit+1
   223  000000                     _SetWbtyBit$bt	set	?_SetWbtyBit+1
   224                           ;       param _nrbit assigned to ?_SetWbtyBit+0
   225  000000                     _SetWbtyBit$nrbit	set	?_SetWbtyBit
   226                           ;	_i assigned to ?a_KolProc+0
   227  000000                     _KolProc$i	set	?a_KolProc
   228  000000                     
   229                           ;wsw2.c: 54: unsigned char i;
   230  002DD4  9284               	bcf	3972,1,c	;volatile
   231                           ;wsw2.c: 58: RE2=0;
   232  002DD6  9484               	bcf	3972,2,c	;volatile
   233                           ;wsw2.c: 59: RE0=0;
   234  002DD8  9084               	bcf	3972,0,c	;volatile
   235                           ;wsw2.c: 61: wbty[0]=0xff;
   236  002DDA  0EFF               	movlw	255
   237  002DDC  CFE8 FF39          	movff	wreg,_wbty
   238                           ;wsw2.c: 62: wbty[1]=0xff;
   239  002DE0  CFE8 FF3A          	movff	wreg,_wbty+1
   240                           ;wsw2.c: 63: wsdid=0x00;
   241  002DE4  010F               	movlb	_wsdid shr (0+8)
   242  002DE6  6B38               	clrf	_wsdid& (0+255),b
   243                           ;wsw2.c: 72: for(i=0;i<6-1;i++) PWD[i].St.focus=
      +                          0;
   244  002DE8  6AD9               	clrf	fsr2l,c
   245  002DEA                     l15:
   246  002DEA  50D9               	movf	fsr2l,w,c
   247  002DEC  0D04               	mullw	4
   248  002DEE  0EC1               	movlw	low _PWD
   249  002DF0  24F3               	addwf	prodl,w,c
   250  002DF2  6EE9               	movwf	fsr0l,c
   251  002DF4  0E01               	movlw	high _PWD
   252  002DF6  20F4               	addwfc	prodh,w,c
   253  002DF8  6EEA               	movwf	fsr0h,c
   254  002DFA  0EFE               	movlw	-2
   255  002DFC  16EF               	andwf	indf0,f,c
   256  002DFE  2AD9               	incf	fsr2l,f,c
   257  002E00  0E04               	movlw	4
   258  002E02  64D9               	cpfsgt	fsr2l,c
   259  002E04  D7F2               	goto	l15
   260                           ;wsw2.c: 87: SetStatus(&PWD[4],0b001000000000000
      +                          0,0b1111111111111111);
   261  002E06  0100               	movlb	__Lparam shr (0+8)
   262  002E08  0ED1               	movlw	low (_PWD+16)
   263  002E0A  6FAB               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   264  002E0C  0E01               	movlw	high (_PWD+16)
   265  002E0E  6FAC               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   266  002E10  6BAD               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   267  002E12  0E20               	movlw	32
   268  002E14  6FAE               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   269  002E16  69AF               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   270  002E18  69B0               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   271  002E1A  EC60  F01F         	call	_SetStatus	;wreg free
   272                           ;wsw2.c: 88: SetStatus(&PWD[5],0b010000000000000
      +                          0,0b1111111111111111);
   273  002E1E  0100               	movlb	__Lparam shr (0+8)
   274  002E20  0ED5               	movlw	low (_PWD+20)
   275  002E22  6FAB               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   276  002E24  0E01               	movlw	high (_PWD+20)
   277  002E26  6FAC               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   278  002E28  6BAD               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   279  002E2A  0E40               	movlw	64
   280  002E2C  6FAE               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   281  002E2E  69AF               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   282  002E30  69B0               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   283  002E32  EF60  F01F         	goto	_SetStatus	;wreg free
   284                           ;wsw2.c: 94: }
   285  002E36                     __end_of_InitWsw:
   286                           ;wsw2.c: 314: const unsigned char Znak[16]={
   287                           ;wsw2.c: 315: 0b01010000,
   288                           ;wsw2.c: 316: 0b11111001,
   289                           ;wsw2.c: 317: 0b00110010,
   290                           ;wsw2.c: 318: 0b00110001,
   291                           ;wsw2.c: 319: 0b10011001,
   292                           ;wsw2.c: 320: 0b00010101,
   293                           ;wsw2.c: 321: 0b00010100,
   294                           ;wsw2.c: 322: 0b01111001,
   295                           ;wsw2.c: 323: 0b00010000,
   296                           ;wsw2.c: 324: 0b00010001,
   297                           ;wsw2.c: 325: 0b00011000,
   298                           ;wsw2.c: 326: 0b10010100,
   299                           ;wsw2.c: 327: 0b01010110,
   300                           ;wsw2.c: 328: 0b10110000,
   301                           ;wsw2.c: 329: 0b00010110,
   302                           ;wsw2.c: 330: 0b00011110,
   303                           ;wsw2.c: 331: };
   304                           ;wsw2.c: 337: void RefreshWSW(void)
   305                           ;wsw2.c: 338: {
   306  002E36                     _RefreshWSW:
   307  000000                     
   308                           ;wsw2.c: 340: KolProc();
   309  002E36  D806               	call	_KolProc	;wreg free
   310                           ;wsw2.c: 342: SetPrWswData();
   311  002E38  ECBC  F01D         	call	_SetPrWswData	;wreg free
   312                           ;wsw2.c: 343: FormatWswData();
   313  002E3C  ECE9  F01D         	call	_FormatWswData	;wreg free
   314                           ;wsw2.c: 344: PrintWswData();
   315  002E40  EF90  F01E         	goto	_PrintWswData	;wreg free
   316                           ;wsw2.c: 345: }
   317  002E44                     __end_of_RefreshWSW:
   318                           ;wsw2.c: 350: void KolProc(void)
   319                           ;wsw2.c: 351: {
   320  002E44                     _KolProc:
   321  000000                     
   322                           ;wsw2.c: 352: unsigned char i,j,k,l,nC;
   323  002E44  6AD9               	clrf	fsr2l,c
   324  002E46                     l20:
   325                           ;wsw2.c: 355: {
   326  002E46  50D9               	movf	fsr2l,w,c
   327  002E48  0D03               	mullw	3
   328  002E4A  50F3               	movf	prodl,w,c
   329  002E4C  0F88               	addlw	low _Klj
   330  002E4E  6EF6               	movwf	tblptrl,c
   331  002E50  50F4               	movf	prodh,w,c
   332  002E52  6EF7               	movwf	tblptrh,c
   333  002E54  0E10               	movlw	high _Klj
   334  002E56  22F7               	addwfc	tblptrh,f,c
   335  002E58  0009               	tblrd		*+
   336  002E5A  CFF5 F000          	movff	tablat,btemp
   337  002E5E  0009               	tblrd		*+
   338  002E60  CFF5 F001          	movff	tablat,btemp+1
   339  002E64  0E08               	movlw	8
   340  002E66  2600               	addwf	btemp,f,c
   341  002E68  0E00               	movlw	0
   342  002E6A  2201               	addwfc	btemp+1,f,c
   343  002E6C  C000  FFF6         	movff	btemp,tblptrl
   344  002E70  C001  FFF7         	movff	btemp+1,tblptrh
   345  002E74  0E0F               	movlw	(high __ramtop+-1)
   346  002E76  64F7               	cpfsgt	tblptrh,c
   347  002E78  D007               	bra	u27
   348  002E7A  0009               	tblrd		*+
   349  002E7C  CFF5 F000          	movff	tablat,btemp
   350  002E80  0009               	tblrd		*+
   351  002E82  CFF5 F001          	movff	tablat,btemp+1
   352  002E86  D008               	bra	u20
   353  002E88                     u27:
   354  002E88  CFF6 FFE9          	movff	tblptrl,fsr0l
   355  002E8C  CFF7 FFEA          	movff	tblptrh,fsr0h
   356  002E90  CFEE F000          	movff	postinc0,btemp
   357  002E94  CFEE F001          	movff	postinc0,btemp+1
   358  002E98                     u20:
   359  002E98  0E02               	movlw	2
   360  002E9A  2600               	addwf	btemp,f,c
   361  002E9C  0E00               	movlw	0
   362  002E9E  2201               	addwfc	btemp+1,f,c
   363  002EA0  C000  FFF6         	movff	btemp,tblptrl
   364  002EA4  C001  FFF7         	movff	btemp+1,tblptrh
   365  002EA8  0E0F               	movlw	(high __ramtop+-1)
   366  002EAA  64F7               	cpfsgt	tblptrh,c
   367  002EAC  D003               	bra	u37
   368  002EAE  0008               	tblrd		*
   369  002EB0  50F5               	movf	tablat,w,c
   370  002EB2  D005               	bra	u30
   371  002EB4                     u37:
   372  002EB4  CFF6 FFE9          	movff	tblptrl,fsr0l
   373  002EB8  CFF7 FFEA          	movff	tblptrh,fsr0h
   374  002EBC  50EF               	movf	indf0,w,c
   375  002EBE                     u30:
   376  002EBE  6EE1               	movwf	fsr1l,c
   377                           ;wsw2.c: 357: if((KInd[j].reset)||(nC&&KTim[j].c
      +                          ykl>=nC))
   378  002EC0  50D9               	movf	fsr2l,w,c
   379  002EC2  EE0F  F03B         	lfsr	0,_KInd
   380  002EC6  26E9               	addwf	fsr0l,f,c
   381  002EC8  0E00               	movlw	0
   382  002ECA  22EA               	addwfc	fsr0h,f,c
   383  002ECC  50EF               	movf	indf0,w,c
   384  002ECE  6E00               	movwf	btemp,c
   385  002ED0  B200               	btfsc	btemp,1,c
   386  002ED2  D00F               	goto	u80
   387  002ED4  50E1               	movf	fsr1l,w,c
   388  002ED6  E063               	bz	l23
   389  002ED8  50D9               	movf	fsr2l,w,c
   390  002EDA  0D03               	mullw	3
   391  002EDC  0EB7               	movlw	low (_KTim+2)
   392  002EDE  24F3               	addwf	prodl,w,c
   393  002EE0  6EE9               	movwf	fsr0l,c
   394  002EE2  0E01               	movlw	high (_KTim+2)
   395  002EE4  20F4               	addwfc	prodh,w,c
   396  002EE6  6EEA               	movwf	fsr0h,c
   397  002EE8  50EF               	movf	indf0,w,c
   398  002EEA  6E00               	movwf	btemp,c
   399  002EEC  50E1               	movf	fsr1l,w,c
   400  002EEE  5C00               	subwf	btemp,w,c
   401  002EF0  E356               	bnc	l23
   402  002EF2                     u80:
   403                           ;wsw2.c: 358: {
   404  002EF2  50D9               	movf	fsr2l,w,c
   405  002EF4  0D03               	mullw	3
   406  002EF6  0EB7               	movlw	low (_KTim+2)
   407  002EF8  24F3               	addwf	prodl,w,c
   408  002EFA  6EE9               	movwf	fsr0l,c
   409  002EFC  0E01               	movlw	high (_KTim+2)
   410  002EFE  20F4               	addwfc	prodh,w,c
   411  002F00  6EEA               	movwf	fsr0h,c
   412  002F02  6AEF               	clrf	indf0,c
   413                           ;wsw2.c: 360: KInd[j].reset=0;
   414  002F04  50D9               	movf	fsr2l,w,c
   415  002F06  EE0F  F03B         	lfsr	0,_KInd
   416  002F0A  26E9               	addwf	fsr0l,f,c
   417  002F0C  0E00               	movlw	0
   418  002F0E  22EA               	addwfc	fsr0h,f,c
   419  002F10  0EFD               	movlw	-3
   420  002F12  16EF               	andwf	indf0,f,c
   421                           ;wsw2.c: 361: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j
      +                          ].KL).KFc[i].focus=0;
   422  002F14  6A02               	clrf	btemp+2,c
   423  002F16                     l27:
   424  002F16  50D9               	movf	fsr2l,w,c
   425  002F18  0D03               	mullw	3
   426  002F1A  50F3               	movf	prodl,w,c
   427  002F1C  0F88               	addlw	low _Klj
   428  002F1E  6EF6               	movwf	tblptrl,c
   429  002F20  50F4               	movf	prodh,w,c
   430  002F22  6EF7               	movwf	tblptrh,c
   431  002F24  0E10               	movlw	high _Klj
   432  002F26  22F7               	addwfc	tblptrh,f,c
   433  002F28  0E02               	movlw	2
   434  002F2A  26F6               	addwf	tblptrl,f,c
   435  002F2C  0E00               	movlw	0
   436  002F2E  22F7               	addwfc	tblptrh,f,c
   437  002F30  0008               	tblrd		*
   438  002F32  50F5               	movf	tablat,w,c
   439  002F34  5C02               	subwf	btemp+2,w,c
   440  002F36  E233               	bc	l23
   441  002F38  50D9               	movf	fsr2l,w,c
   442  002F3A  0D03               	mullw	3
   443  002F3C  50F3               	movf	prodl,w,c
   444  002F3E  0F88               	addlw	low _Klj
   445  002F40  6EF6               	movwf	tblptrl,c
   446  002F42  50F4               	movf	prodh,w,c
   447  002F44  6EF7               	movwf	tblptrh,c
   448  002F46  0E10               	movlw	high _Klj
   449  002F48  22F7               	addwfc	tblptrh,f,c
   450  002F4A  0009               	tblrd		*+
   451  002F4C  CFF5 F000          	movff	tablat,btemp
   452  002F50  0009               	tblrd		*+
   453  002F52  CFF5 F001          	movff	tablat,btemp+1
   454  002F56  0E06               	movlw	6
   455  002F58  2600               	addwf	btemp,f,c
   456  002F5A  0E00               	movlw	0
   457  002F5C  2201               	addwfc	btemp+1,f,c
   458  002F5E  C000  FFF6         	movff	btemp,tblptrl
   459  002F62  C001  FFF7         	movff	btemp+1,tblptrh
   460  002F66  0E0F               	movlw	(high __ramtop+-1)
   461  002F68  64F7               	cpfsgt	tblptrh,c
   462  002F6A  D007               	bra	u97
   463  002F6C  0009               	tblrd		*+
   464  002F6E  CFF5 F000          	movff	tablat,btemp
   465  002F72  0009               	tblrd		*+
   466  002F74  CFF5 F001          	movff	tablat,btemp+1
   467  002F78  D008               	bra	u90
   468  002F7A                     u97:
   469  002F7A  CFF6 FFE9          	movff	tblptrl,fsr0l
   470  002F7E  CFF7 FFEA          	movff	tblptrh,fsr0h
   471  002F82  CFEE F000          	movff	postinc0,btemp
   472  002F86  CFEE F001          	movff	postinc0,btemp+1
   473  002F8A                     u90:
   474  002F8A  5002               	movf	btemp+2,w,c
   475  002F8C  2400               	addwf	btemp,w,c
   476  002F8E  6EE9               	movwf	fsr0l,c
   477  002F90  0E00               	movlw	0
   478  002F92  2001               	addwfc	btemp+1,w,c
   479  002F94  6EEA               	movwf	fsr0h,c
   480  002F96  0EFE               	movlw	-2
   481  002F98  16EF               	andwf	indf0,f,c
   482  002F9A  2A02               	incf	btemp+2,f,c
   483  002F9C  D7BC               	goto	l27
   484  002F9E                     l23:
   485                           ;wsw2.c: 362: }
   486  002F9E  50D9               	movf	fsr2l,w,c
   487  002FA0  EE0F  F03B         	lfsr	0,_KInd
   488  002FA4  26E9               	addwf	fsr0l,f,c
   489  002FA6  0E00               	movlw	0
   490  002FA8  22EA               	addwfc	fsr0h,f,c
   491  002FAA  50EF               	movf	indf0,w,c
   492  002FAC  6E00               	movwf	btemp,c
   493  002FAE  A000               	btfss	btemp,0,c
   494  002FB0  D052               	goto	l28
   495  002FB2  50E1               	movf	fsr1l,w,c
   496  002FB4  E050               	bz	l28
   497                           ;wsw2.c: 364: {
   498  002FB6  50D9               	movf	fsr2l,w,c
   499  002FB8  0D03               	mullw	3
   500  002FBA  0EB7               	movlw	low (_KTim+2)
   501  002FBC  24F3               	addwf	prodl,w,c
   502  002FBE  6EE9               	movwf	fsr0l,c
   503  002FC0  0E01               	movlw	high (_KTim+2)
   504  002FC2  20F4               	addwfc	prodh,w,c
   505  002FC4  6EEA               	movwf	fsr0h,c
   506  002FC6  6AEF               	clrf	indf0,c
   507                           ;wsw2.c: 366: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j
      +                          ].KL).KFc[i].focus=1;
   508  002FC8  6A02               	clrf	btemp+2,c
   509  002FCA                     l32:
   510  002FCA  50D9               	movf	fsr2l,w,c
   511  002FCC  0D03               	mullw	3
   512  002FCE  50F3               	movf	prodl,w,c
   513  002FD0  0F88               	addlw	low _Klj
   514  002FD2  6EF6               	movwf	tblptrl,c
   515  002FD4  50F4               	movf	prodh,w,c
   516  002FD6  6EF7               	movwf	tblptrh,c
   517  002FD8  0E10               	movlw	high _Klj
   518  002FDA  22F7               	addwfc	tblptrh,f,c
   519  002FDC  0E02               	movlw	2
   520  002FDE  26F6               	addwf	tblptrl,f,c
   521  002FE0  0E00               	movlw	0
   522  002FE2  22F7               	addwfc	tblptrh,f,c
   523  002FE4  0008               	tblrd		*
   524  002FE6  50F5               	movf	tablat,w,c
   525  002FE8  5C02               	subwf	btemp+2,w,c
   526  002FEA  E235               	bc	l28
   527  002FEC  50D9               	movf	fsr2l,w,c
   528  002FEE  0D03               	mullw	3
   529  002FF0  50F3               	movf	prodl,w,c
   530  002FF2  0F88               	addlw	low _Klj
   531  002FF4  6EF6               	movwf	tblptrl,c
   532  002FF6  50F4               	movf	prodh,w,c
   533  002FF8  6EF7               	movwf	tblptrh,c
   534  002FFA  0E10               	movlw	high _Klj
   535  002FFC  22F7               	addwfc	tblptrh,f,c
   536  002FFE  0009               	tblrd		*+
   537  003000  CFF5 F000          	movff	tablat,btemp
   538  003004  0009               	tblrd		*+
   539  003006  CFF5 F001          	movff	tablat,btemp+1
   540  00300A  0E06               	movlw	6
   541  00300C  2600               	addwf	btemp,f,c
   542  00300E  0E00               	movlw	0
   543  003010  2201               	addwfc	btemp+1,f,c
   544  003012  C000  FFF6         	movff	btemp,tblptrl
   545  003016  C001  FFF7         	movff	btemp+1,tblptrh
   546  00301A  0E0F               	movlw	(high __ramtop+-1)
   547  00301C  64F7               	cpfsgt	tblptrh,c
   548  00301E  D007               	bra	u147
   549  003020  0009               	tblrd		*+
   550  003022  CFF5 F000          	movff	tablat,btemp
   551  003026  0009               	tblrd		*+
   552  003028  CFF5 F001          	movff	tablat,btemp+1
   553  00302C  D008               	bra	u140
   554  00302E                     u147:
   555  00302E  CFF6 FFE9          	movff	tblptrl,fsr0l
   556  003032  CFF7 FFEA          	movff	tblptrh,fsr0h
   557  003036  CFEE F000          	movff	postinc0,btemp
   558  00303A  CFEE F001          	movff	postinc0,btemp+1
   559  00303E                     u140:
   560  00303E  5002               	movf	btemp+2,w,c
   561  003040  2400               	addwf	btemp,w,c
   562  003042  6EE9               	movwf	fsr0l,c
   563  003044  0E00               	movlw	0
   564  003046  2001               	addwfc	btemp+1,w,c
   565  003048  6EEA               	movwf	fsr0h,c
   566  00304A  50EF               	movf	indf0,w,c
   567  00304C  0BFE               	andlw	-2
   568  00304E  0901               	iorlw	1
   569  003050  6EEF               	movwf	indf0,c
   570  003052  2A02               	incf	btemp+2,f,c
   571  003054  D7BA               	goto	l32
   572  003056                     l28:
   573                           ;wsw2.c: 367: }
   574  003056  50D9               	movf	fsr2l,w,c
   575  003058  EE0F  F03B         	lfsr	0,_KInd
   576  00305C  26E9               	addwf	fsr0l,f,c
   577  00305E  0E00               	movlw	0
   578  003060  22EA               	addwfc	fsr0h,f,c
   579  003062  50EF               	movf	indf0,w,c
   580  003064  6E00               	movwf	btemp,c
   581  003066  50D9               	movf	fsr2l,w,c
   582  003068  B000               	btfsc	btemp,0,c
   583  00306A  D047               	goto	L4
   584  00306C  0D03               	mullw	3
   585  00306E  50F3               	movf	prodl,w,c
   586  003070  0F88               	addlw	low _Klj
   587  003072  6EF6               	movwf	tblptrl,c
   588  003074  50F4               	movf	prodh,w,c
   589  003076  6EF7               	movwf	tblptrh,c
   590  003078  0E10               	movlw	high _Klj
   591  00307A  22F7               	addwfc	tblptrh,f,c
   592  00307C  0009               	tblrd		*+
   593  00307E  CFF5 F000          	movff	tablat,btemp
   594  003082  0009               	tblrd		*+
   595  003084  CFF5 F001          	movff	tablat,btemp+1
   596  003088  0E08               	movlw	8
   597  00308A  2600               	addwf	btemp,f,c
   598  00308C  0E00               	movlw	0
   599  00308E  2201               	addwfc	btemp+1,f,c
   600  003090  C000  FFF6         	movff	btemp,tblptrl
   601  003094  C001  FFF7         	movff	btemp+1,tblptrh
   602  003098  0E0F               	movlw	(high __ramtop+-1)
   603  00309A  64F7               	cpfsgt	tblptrh,c
   604  00309C  D007               	bra	u177
   605  00309E  0009               	tblrd		*+
   606  0030A0  CFF5 F000          	movff	tablat,btemp
   607  0030A4  0009               	tblrd		*+
   608  0030A6  CFF5 F001          	movff	tablat,btemp+1
   609  0030AA  D008               	bra	u170
   610  0030AC                     u177:
   611  0030AC  CFF6 FFE9          	movff	tblptrl,fsr0l
   612  0030B0  CFF7 FFEA          	movff	tblptrh,fsr0h
   613  0030B4  CFEE F000          	movff	postinc0,btemp
   614  0030B8  CFEE F001          	movff	postinc0,btemp+1
   615  0030BC                     u170:
   616  0030BC  C000  FFF6         	movff	btemp,tblptrl
   617  0030C0  C001  FFF7         	movff	btemp+1,tblptrh
   618  0030C4  0E0F               	movlw	(high __ramtop+-1)
   619  0030C6  64F7               	cpfsgt	tblptrh,c
   620  0030C8  D007               	bra	u187
   621  0030CA  0009               	tblrd		*+
   622  0030CC  CFF5 F000          	movff	tablat,btemp
   623  0030D0  0009               	tblrd		*+
   624  0030D2  CFF5 F001          	movff	tablat,btemp+1
   625  0030D6  D008               	bra	u180
   626  0030D8                     u187:
   627  0030D8  CFF6 FFE9          	movff	tblptrl,fsr0l
   628  0030DC  CFF7 FFEA          	movff	tblptrh,fsr0h
   629  0030E0  CFEE F000          	movff	postinc0,btemp
   630  0030E4  CFEE F001          	movff	postinc0,btemp+1
   631  0030E8                     u180:
   632  0030E8  C000  FFE9         	movff	btemp,fsr0l
   633  0030EC  C001  FFEA         	movff	btemp+1,fsr0h
   634  0030F0  50EF               	movf	indf0,w,c
   635  0030F2  6E00               	movwf	btemp,c
   636  0030F4  B000               	btfsc	btemp,0,c
   637  0030F6  D022               	goto	l33
   638                           ;wsw2.c: 369: {
   639  0030F8  50D9               	movf	fsr2l,w,c
   640  0030FA                     L4:
   641  0030FA  EE0F  F03B         	lfsr	0,_KInd
   642  0030FE  26E9               	addwf	fsr0l,f,c
   643  003100  0E00               	movlw	0
   644  003102  22EA               	addwfc	fsr0h,f,c
   645  003104  0EFE               	movlw	-2
   646  003106  16EF               	andwf	indf0,f,c
   647                           ;wsw2.c: 379: KInd[j].indeks=0;
   648  003108  50D9               	movf	fsr2l,w,c
   649  00310A  EE0F  F03B         	lfsr	0,_KInd
   650  00310E  26E9               	addwf	fsr0l,f,c
   651  003110  0E00               	movlw	0
   652  003112  22EA               	addwfc	fsr0h,f,c
   653  003114  0E03               	movlw	-253
   654  003116  16EF               	andwf	indf0,f,c
   655                           ;wsw2.c: 380: KTim[j].ncS=0;
   656  003118  50D9               	movf	fsr2l,w,c
   657  00311A  0D03               	mullw	3
   658  00311C  0EB5               	movlw	low _KTim
   659  00311E  24F3               	addwf	prodl,w,c
   660  003120  6EE9               	movwf	fsr0l,c
   661  003122  0E01               	movlw	high _KTim
   662  003124  20F4               	addwfc	prodh,w,c
   663  003126  6EEA               	movwf	fsr0h,c
   664  003128  6AEF               	clrf	indf0,c
   665                           ;wsw2.c: 381: KTim[j].ndS=0;
   666  00312A  50D9               	movf	fsr2l,w,c
   667  00312C  0D03               	mullw	3
   668  00312E  0EB6               	movlw	low (_KTim+1)
   669  003130  24F3               	addwf	prodl,w,c
   670  003132  6EE9               	movwf	fsr0l,c
   671  003134  0E01               	movlw	high (_KTim+1)
   672  003136  20F4               	addwfc	prodh,w,c
   673  003138  6EEA               	movwf	fsr0h,c
   674  00313A  6AEF               	clrf	indf0,c
   675  00313C                     l33:
   676                           ;wsw2.c: 383: }
   677  00313C  50D9               	movf	fsr2l,w,c
   678  00313E  0D03               	mullw	3
   679  003140  50F3               	movf	prodl,w,c
   680  003142  0F88               	addlw	low _Klj
   681  003144  6EF6               	movwf	tblptrl,c
   682  003146  50F4               	movf	prodh,w,c
   683  003148  6EF7               	movwf	tblptrh,c
   684  00314A  0E10               	movlw	high _Klj
   685  00314C  22F7               	addwfc	tblptrh,f,c
   686  00314E  0009               	tblrd		*+
   687  003150  CFF5 F000          	movff	tablat,btemp
   688  003154  0009               	tblrd		*+
   689  003156  CFF5 F001          	movff	tablat,btemp+1
   690  00315A  0E08               	movlw	8
   691  00315C  2600               	addwf	btemp,f,c
   692  00315E  0E00               	movlw	0
   693  003160  2201               	addwfc	btemp+1,f,c
   694  003162  C000  FFF6         	movff	btemp,tblptrl
   695  003166  C001  FFF7         	movff	btemp+1,tblptrh
   696  00316A  0E0F               	movlw	(high __ramtop+-1)
   697  00316C  64F7               	cpfsgt	tblptrh,c
   698  00316E  D007               	bra	u217
   699  003170  0009               	tblrd		*+
   700  003172  CFF5 F000          	movff	tablat,btemp
   701  003176  0009               	tblrd		*+
   702  003178  CFF5 F001          	movff	tablat,btemp+1
   703  00317C  D008               	bra	u210
   704  00317E                     u217:
   705  00317E  CFF6 FFE9          	movff	tblptrl,fsr0l
   706  003182  CFF7 FFEA          	movff	tblptrh,fsr0h
   707  003186  CFEE F000          	movff	postinc0,btemp
   708  00318A  CFEE F001          	movff	postinc0,btemp+1
   709  00318E                     u210:
   710  00318E  C000  FFF6         	movff	btemp,tblptrl
   711  003192  C001  FFF7         	movff	btemp+1,tblptrh
   712  003196  0E0F               	movlw	(high __ramtop+-1)
   713  003198  64F7               	cpfsgt	tblptrh,c
   714  00319A  D007               	bra	u227
   715  00319C  0009               	tblrd		*+
   716  00319E  CFF5 F000          	movff	tablat,btemp
   717  0031A2  0009               	tblrd		*+
   718  0031A4  CFF5 F001          	movff	tablat,btemp+1
   719  0031A8  D008               	bra	u220
   720  0031AA                     u227:
   721  0031AA  CFF6 FFE9          	movff	tblptrl,fsr0l
   722  0031AE  CFF7 FFEA          	movff	tblptrh,fsr0h
   723  0031B2  CFEE F000          	movff	postinc0,btemp
   724  0031B6  CFEE F001          	movff	postinc0,btemp+1
   725  0031BA                     u220:
   726  0031BA  C000  FFE9         	movff	btemp,fsr0l
   727  0031BE  C001  FFEA         	movff	btemp+1,fsr0h
   728  0031C2  0EFE               	movlw	-2
   729  0031C4  16EF               	andwf	indf0,f,c
   730                           ;wsw2.c: 385: for(i=KInd[j].indeks;i<Klj[j].nPzc
      +                          ;i++)
   731  0031C6  50D9               	movf	fsr2l,w,c
   732  0031C8  EE0F  F03B         	lfsr	0,_KInd
   733  0031CC  26E9               	addwf	fsr0l,f,c
   734  0031CE  0E00               	movlw	0
   735  0031D0  22EA               	addwfc	fsr0h,f,c
   736  0031D2  30EF               	rrcf	indf0,w,c
   737  0031D4  6E00               	movwf	btemp,c
   738  0031D6  3000               	rrcf	btemp,w,c
   739  0031D8  0B3F               	andlw	63
   740  0031DA  0100               	movlb	__Lparam shr (0+8)
   741  0031DC  6FF7               	movwf	?a_KolProc^(__Lparam& (0+65280)),b
   742  0031DE                     l37:
   743  0031DE  50D9               	movf	fsr2l,w,c
   744  0031E0  0D03               	mullw	3
   745  0031E2  50F3               	movf	prodl,w,c
   746  0031E4  0F88               	addlw	low _Klj
   747  0031E6  6EF6               	movwf	tblptrl,c
   748  0031E8  50F4               	movf	prodh,w,c
   749  0031EA  6EF7               	movwf	tblptrh,c
   750  0031EC  0E10               	movlw	high _Klj
   751  0031EE  22F7               	addwfc	tblptrh,f,c
   752  0031F0  0E02               	movlw	2
   753  0031F2  26F6               	addwf	tblptrl,f,c
   754  0031F4  0E00               	movlw	0
   755  0031F6  22F7               	addwfc	tblptrh,f,c
   756  0031F8  0008               	tblrd		*
   757  0031FA  50F5               	movf	tablat,w,c
   758  0031FC  0100               	movlb	__Lparam shr (0+8)
   759  0031FE  5DF7               	subwf	?a_KolProc^(__Lparam& (0+65280)),w
   760  003200  E302 EFB6  F01D    	bc	l35
   761                           ;wsw2.c: 386: {
   762  003206  50D9               	movf	fsr2l,w,c
   763  003208  0D03               	mullw	3
   764  00320A  50F3               	movf	prodl,w,c
   765  00320C  0F88               	addlw	low _Klj
   766  00320E  6EF6               	movwf	tblptrl,c
   767  003210  50F4               	movf	prodh,w,c
   768  003212  6EF7               	movwf	tblptrh,c
   769  003214  0E10               	movlw	high _Klj
   770  003216  22F7               	addwfc	tblptrh,f,c
   771  003218  0009               	tblrd		*+
   772  00321A  CFF5 F000          	movff	tablat,btemp
   773  00321E  0009               	tblrd		*+
   774  003220  CFF5 F001          	movff	tablat,btemp+1
   775  003224  0E06               	movlw	6
   776  003226  2600               	addwf	btemp,f,c
   777  003228  0E00               	movlw	0
   778  00322A  2201               	addwfc	btemp+1,f,c
   779  00322C  C000  FFF6         	movff	btemp,tblptrl
   780  003230  C001  FFF7         	movff	btemp+1,tblptrh
   781  003234  0E0F               	movlw	(high __ramtop+-1)
   782  003236  64F7               	cpfsgt	tblptrh,c
   783  003238  D007               	bra	u237
   784  00323A  0009               	tblrd		*+
   785  00323C  CFF5 F000          	movff	tablat,btemp
   786  003240  0009               	tblrd		*+
   787  003242  CFF5 F001          	movff	tablat,btemp+1
   788  003246  D008               	bra	u230
   789  003248                     u237:
   790  003248  CFF6 FFE9          	movff	tblptrl,fsr0l
   791  00324C  CFF7 FFEA          	movff	tblptrh,fsr0h
   792  003250  CFEE F000          	movff	postinc0,btemp
   793  003254  CFEE F001          	movff	postinc0,btemp+1
   794  003258                     u230:
   795  003258  0100               	movlb	__Lparam shr (0+8)
   796  00325A  51F7               	movf	?a_KolProc^(__Lparam& (0+65280)),w
   797  00325C  2400               	addwf	btemp,w,c
   798  00325E  6EE9               	movwf	fsr0l,c
   799  003260  0E00               	movlw	0
   800  003262  2001               	addwfc	btemp+1,w,c
   801  003264  6EEA               	movwf	fsr0h,c
   802  003266  50EF               	movf	indf0,w,c
   803  003268  6E00               	movwf	btemp,c
   804  00326A  B000               	btfsc	btemp,0,c
   805  00326C  D023               	goto	l38
   806                           ;wsw2.c: 389: {
   807  00326E  50D9               	movf	fsr2l,w,c
   808  003270  0D03               	mullw	3
   809  003272  50F3               	movf	prodl,w,c
   810  003274  0F88               	addlw	low _Klj
   811  003276  6EF6               	movwf	tblptrl,c
   812  003278  50F4               	movf	prodh,w,c
   813  00327A  6EF7               	movwf	tblptrh,c
   814  00327C  0E10               	movlw	high _Klj
   815  00327E  22F7               	addwfc	tblptrh,f,c
   816  003280  0E02               	movlw	2
   817  003282  26F6               	addwf	tblptrl,f,c
   818  003284  0E00               	movlw	0
   819  003286  22F7               	addwfc	tblptrh,f,c
   820  003288  0008               	tblrd		*
   821  00328A  50F5               	movf	tablat,w,c
   822  00328C  6E00               	movwf	btemp,c
   823  00328E  0FFF               	addlw	255
   824  003290  6E02               	movwf	btemp+2,c
   825  003292  6A03               	clrf	btemp+3,c
   826  003294  0EFF               	movlw	255
   827  003296  2203               	addwfc	btemp+3,f,c
   828  003298  C0F7  F000         	movff	?a_KolProc,btemp
   829  00329C  6A01               	clrf	btemp+1,c
   830  00329E  5001               	movf	btemp+1,w,c
   831  0032A0  0A80               	xorlw	128
   832  0032A2  6E04               	movwf	btemp+4,c
   833  0032A4  5003               	movf	btemp+3,w,c
   834  0032A6  0A80               	xorlw	128
   835  0032A8  5C04               	subwf	btemp+4,w,c
   836  0032AA  E102               	bnz	u255
   837  0032AC  5002               	movf	btemp+2,w,c
   838  0032AE  5C00               	subwf	btemp,w,c
   839  0032B0                     u255:
   840  0032B0  EF9E  F01D         	goto	u615
   841                           ;wsw2.c: 391: {
   842                           ;wsw2.c: 393: if(nC) KTim[j].cykl++;
   843                           ;wsw2.c: 394: }
   844  0032B4                     l38:
   845                           ;wsw2.c: 396: }
   846  0032B4  C0F7  F000         	movff	?a_KolProc,btemp
   847  0032B8  50D9               	movf	fsr2l,w,c
   848  0032BA  EE0F  F03B         	lfsr	0,_KInd
   849  0032BE  26E9               	addwf	fsr0l,f,c
   850  0032C0  0E00               	movlw	0
   851  0032C2  22EA               	addwfc	fsr0h,f,c
   852  0032C4  3600               	rlcf	btemp,f,c
   853  0032C6  3600               	rlcf	btemp,f,c
   854  0032C8  50EF               	movf	indf0,w,c
   855  0032CA  1800               	xorwf	btemp,w,c
   856  0032CC  0B03               	andlw	-253
   857  0032CE  1800               	xorwf	btemp,w,c
   858  0032D0  6EEF               	movwf	indf0,c
   859                           ;wsw2.c: 401: for(k=j+1;k<4;k++)
   860  0032D2  28D9               	incf	fsr2l,w,c
   861  0032D4  6E02               	movwf	btemp+2,c
   862  0032D6  D08D               	goto	L2
   863  0032D8                     l41:
   864                           ;wsw2.c: 402: if((*(*Klj[k].KL).KOut).nCykli)
   865  0032D8  5002               	movf	btemp+2,w,c
   866  0032DA  0D03               	mullw	3
   867  0032DC  50F3               	movf	prodl,w,c
   868  0032DE  0F88               	addlw	low _Klj
   869  0032E0  6EF6               	movwf	tblptrl,c
   870  0032E2  50F4               	movf	prodh,w,c
   871  0032E4  6EF7               	movwf	tblptrh,c
   872  0032E6  0E10               	movlw	high _Klj
   873  0032E8  22F7               	addwfc	tblptrh,f,c
   874  0032EA  0009               	tblrd		*+
   875  0032EC  CFF5 F000          	movff	tablat,btemp
   876  0032F0  0009               	tblrd		*+
   877  0032F2  CFF5 F001          	movff	tablat,btemp+1
   878  0032F6  0E08               	movlw	8
   879  0032F8  2600               	addwf	btemp,f,c
   880  0032FA  0E00               	movlw	0
   881  0032FC  2201               	addwfc	btemp+1,f,c
   882  0032FE  C000  FFF6         	movff	btemp,tblptrl
   883  003302  C001  FFF7         	movff	btemp+1,tblptrh
   884  003306  0E0F               	movlw	(high __ramtop+-1)
   885  003308  64F7               	cpfsgt	tblptrh,c
   886  00330A  D007               	bra	u287
   887  00330C  0009               	tblrd		*+
   888  00330E  CFF5 F000          	movff	tablat,btemp
   889  003312  0009               	tblrd		*+
   890  003314  CFF5 F001          	movff	tablat,btemp+1
   891  003318  D008               	bra	u280
   892  00331A                     u287:
   893  00331A  CFF6 FFE9          	movff	tblptrl,fsr0l
   894  00331E  CFF7 FFEA          	movff	tblptrh,fsr0h
   895  003322  CFEE F000          	movff	postinc0,btemp
   896  003326  CFEE F001          	movff	postinc0,btemp+1
   897  00332A                     u280:
   898  00332A  0E02               	movlw	2
   899  00332C  2600               	addwf	btemp,f,c
   900  00332E  0E00               	movlw	0
   901  003330  2201               	addwfc	btemp+1,f,c
   902  003332  C000  FFF6         	movff	btemp,tblptrl
   903  003336  C001  FFF7         	movff	btemp+1,tblptrh
   904  00333A  0E0F               	movlw	(high __ramtop+-1)
   905  00333C  64F7               	cpfsgt	tblptrh,c
   906  00333E  D003               	bra	u297
   907  003340  0008               	tblrd		*
   908  003342  50F5               	movf	tablat,w,c
   909  003344  D005               	bra	u290
   910  003346                     u297:
   911  003346  CFF6 FFE9          	movff	tblptrl,fsr0l
   912  00334A  CFF7 FFEA          	movff	tblptrh,fsr0h
   913  00334E  50EF               	movf	indf0,w,c
   914  003350                     u290:
   915  003350  0900               	iorlw	0
   916  003352  E04E               	bz	l44
   917                           ;wsw2.c: 403: {
   918  003354  6A03               	clrf	btemp+3,c
   919  003356                     l48:
   920  003356  5002               	movf	btemp+2,w,c
   921  003358  0D03               	mullw	3
   922  00335A  50F3               	movf	prodl,w,c
   923  00335C  0F88               	addlw	low _Klj
   924  00335E  6EF6               	movwf	tblptrl,c
   925  003360  50F4               	movf	prodh,w,c
   926  003362  6EF7               	movwf	tblptrh,c
   927  003364  0E10               	movlw	high _Klj
   928  003366  22F7               	addwfc	tblptrh,f,c
   929  003368  0E02               	movlw	2
   930  00336A  26F6               	addwf	tblptrl,f,c
   931  00336C  0E00               	movlw	0
   932  00336E  22F7               	addwfc	tblptrh,f,c
   933  003370  0008               	tblrd		*
   934  003372  50F5               	movf	tablat,w,c
   935  003374  5C03               	subwf	btemp+3,w,c
   936  003376  E233               	bc	u320
   937  003378  5002               	movf	btemp+2,w,c
   938  00337A  0D03               	mullw	3
   939  00337C  50F3               	movf	prodl,w,c
   940  00337E  0F88               	addlw	low _Klj
   941  003380  6EF6               	movwf	tblptrl,c
   942  003382  50F4               	movf	prodh,w,c
   943  003384  6EF7               	movwf	tblptrh,c
   944  003386  0E10               	movlw	high _Klj
   945  003388  22F7               	addwfc	tblptrh,f,c
   946  00338A  0009               	tblrd		*+
   947  00338C  CFF5 F000          	movff	tablat,btemp
   948  003390  0009               	tblrd		*+
   949  003392  CFF5 F001          	movff	tablat,btemp+1
   950  003396  0E06               	movlw	6
   951  003398  2600               	addwf	btemp,f,c
   952  00339A  0E00               	movlw	0
   953  00339C  2201               	addwfc	btemp+1,f,c
   954  00339E  C000  FFF6         	movff	btemp,tblptrl
   955  0033A2  C001  FFF7         	movff	btemp+1,tblptrh
   956  0033A6  0E0F               	movlw	(high __ramtop+-1)
   957  0033A8  64F7               	cpfsgt	tblptrh,c
   958  0033AA  D007               	bra	u317
   959  0033AC  0009               	tblrd		*+
   960  0033AE  CFF5 F000          	movff	tablat,btemp
   961  0033B2  0009               	tblrd		*+
   962  0033B4  CFF5 F001          	movff	tablat,btemp+1
   963  0033B8  D008               	bra	u310
   964  0033BA                     u317:
   965  0033BA  CFF6 FFE9          	movff	tblptrl,fsr0l
   966  0033BE  CFF7 FFEA          	movff	tblptrh,fsr0h
   967  0033C2  CFEE F000          	movff	postinc0,btemp
   968  0033C6  CFEE F001          	movff	postinc0,btemp+1
   969  0033CA                     u310:
   970  0033CA  5003               	movf	btemp+3,w,c
   971  0033CC  2400               	addwf	btemp,w,c
   972  0033CE  6EE9               	movwf	fsr0l,c
   973  0033D0  0E00               	movlw	0
   974  0033D2  2001               	addwfc	btemp+1,w,c
   975  0033D4  6EEA               	movwf	fsr0h,c
   976  0033D6  0EFE               	movlw	-2
   977  0033D8  16EF               	andwf	indf0,f,c
   978  0033DA  2A03               	incf	btemp+3,f,c
   979  0033DC  D7BC               	goto	l48
   980  0033DE                     u320:
   981                           ;wsw2.c: 405: KTim[k].cykl=0;
   982  0033DE  5002               	movf	btemp+2,w,c
   983  0033E0  0D03               	mullw	3
   984  0033E2  0EB7               	movlw	low (_KTim+2)
   985  0033E4  24F3               	addwf	prodl,w,c
   986  0033E6  6EE9               	movwf	fsr0l,c
   987  0033E8  0E01               	movlw	high (_KTim+2)
   988  0033EA  20F4               	addwfc	prodh,w,c
   989  0033EC  6EEA               	movwf	fsr0h,c
   990  0033EE  6AEF               	clrf	indf0,c
   991  0033F0                     l44:
   992  0033F0  2A02               	incf	btemp+2,f,c
   993  0033F2                     L2:
   994  0033F2  0E03               	movlw	3
   995  0033F4  6402               	cpfsgt	btemp+2,c
   996  0033F6  D770               	goto	l41
   997                           ;wsw2.c: 406: }
   998  0033F8  28D9               	incf	fsr2l,w,c
   999  0033FA  6E02               	movwf	btemp+2,c
  1000  0033FC  D01B               	goto	L3
  1001  0033FE                     l49:
  1002                           ;wsw2.c: 411: {
  1003  0033FE  5002               	movf	btemp+2,w,c
  1004  003400  EE0F  F03B         	lfsr	0,_KInd
  1005  003404  26E9               	addwf	fsr0l,f,c
  1006  003406  0E00               	movlw	0
  1007  003408  22EA               	addwfc	fsr0h,f,c
  1008  00340A  0E03               	movlw	-253
  1009  00340C  16EF               	andwf	indf0,f,c
  1010                           ;wsw2.c: 413: KTim[k].ncS=0;
  1011  00340E  5002               	movf	btemp+2,w,c
  1012  003410  0D03               	mullw	3
  1013  003412  0EB5               	movlw	low _KTim
  1014  003414  24F3               	addwf	prodl,w,c
  1015  003416  6EE9               	movwf	fsr0l,c
  1016  003418  0E01               	movlw	high _KTim
  1017  00341A  20F4               	addwfc	prodh,w,c
  1018  00341C  6EEA               	movwf	fsr0h,c
  1019  00341E  6AEF               	clrf	indf0,c
  1020                           ;wsw2.c: 414: KTim[k].ndS=0;
  1021  003420  5002               	movf	btemp+2,w,c
  1022  003422  0D03               	mullw	3
  1023  003424  0EB6               	movlw	low (_KTim+1)
  1024  003426  24F3               	addwf	prodl,w,c
  1025  003428  6EE9               	movwf	fsr0l,c
  1026  00342A  0E01               	movlw	high (_KTim+1)
  1027  00342C  20F4               	addwfc	prodh,w,c
  1028  00342E  6EEA               	movwf	fsr0h,c
  1029  003430  6AEF               	clrf	indf0,c
  1030  003432  2A02               	incf	btemp+2,f,c
  1031  003434                     L3:
  1032  003434  0E03               	movlw	3
  1033  003436  6402               	cpfsgt	btemp+2,c
  1034  003438  D7E2               	goto	l49
  1035                           ;wsw2.c: 415: }
  1036  00343A  50D9               	movf	fsr2l,w,c
  1037  00343C  0D03               	mullw	3
  1038  00343E  50F3               	movf	prodl,w,c
  1039  003440  0F88               	addlw	low _Klj
  1040  003442  6EF6               	movwf	tblptrl,c
  1041  003444  50F4               	movf	prodh,w,c
  1042  003446  6EF7               	movwf	tblptrh,c
  1043  003448  0E10               	movlw	high _Klj
  1044  00344A  22F7               	addwfc	tblptrh,f,c
  1045  00344C  0009               	tblrd		*+
  1046  00344E  CFF5 F000          	movff	tablat,btemp
  1047  003452  0009               	tblrd		*+
  1048  003454  CFF5 F001          	movff	tablat,btemp+1
  1049  003458  0E08               	movlw	8
  1050  00345A  2600               	addwf	btemp,f,c
  1051  00345C  0E00               	movlw	0
  1052  00345E  2201               	addwfc	btemp+1,f,c
  1053  003460  C000  FFF6         	movff	btemp,tblptrl
  1054  003464  C001  FFF7         	movff	btemp+1,tblptrh
  1055  003468  0E0F               	movlw	(high __ramtop+-1)
  1056  00346A  64F7               	cpfsgt	tblptrh,c
  1057  00346C  D007               	bra	u367
  1058  00346E  0009               	tblrd		*+
  1059  003470  CFF5 F000          	movff	tablat,btemp
  1060  003474  0009               	tblrd		*+
  1061  003476  CFF5 F001          	movff	tablat,btemp+1
  1062  00347A  D008               	bra	u360
  1063  00347C                     u367:
  1064  00347C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1065  003480  CFF7 FFEA          	movff	tblptrh,fsr0h
  1066  003484  CFEE F000          	movff	postinc0,btemp
  1067  003488  CFEE F001          	movff	postinc0,btemp+1
  1068  00348C                     u360:
  1069  00348C  C000  FFF6         	movff	btemp,tblptrl
  1070  003490  C001  FFF7         	movff	btemp+1,tblptrh
  1071  003494  0E0F               	movlw	(high __ramtop+-1)
  1072  003496  64F7               	cpfsgt	tblptrh,c
  1073  003498  D007               	bra	u377
  1074  00349A  0009               	tblrd		*+
  1075  00349C  CFF5 F000          	movff	tablat,btemp
  1076  0034A0  0009               	tblrd		*+
  1077  0034A2  CFF5 F001          	movff	tablat,btemp+1
  1078  0034A6  D008               	bra	u370
  1079  0034A8                     u377:
  1080  0034A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  1081  0034AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  1082  0034B0  CFEE F000          	movff	postinc0,btemp
  1083  0034B4  CFEE F001          	movff	postinc0,btemp+1
  1084  0034B8                     u370:
  1085  0034B8  C000  FFE9         	movff	btemp,fsr0l
  1086  0034BC  C001  FFEA         	movff	btemp+1,fsr0h
  1087  0034C0  50EF               	movf	indf0,w,c
  1088  0034C2  0BFE               	andlw	-2
  1089  0034C4  0901               	iorlw	1
  1090  0034C6  6EEF               	movwf	indf0,c
  1091                           ;wsw2.c: 420: Dmask=(*(*Klj[j].KL).KOut).DMask;
  1092  0034C8  50D9               	movf	fsr2l,w,c
  1093  0034CA  0D03               	mullw	3
  1094  0034CC  50F3               	movf	prodl,w,c
  1095  0034CE  0F88               	addlw	low _Klj
  1096  0034D0  6EF6               	movwf	tblptrl,c
  1097  0034D2  50F4               	movf	prodh,w,c
  1098  0034D4  6EF7               	movwf	tblptrh,c
  1099  0034D6  0E10               	movlw	high _Klj
  1100  0034D8  22F7               	addwfc	tblptrh,f,c
  1101  0034DA  0009               	tblrd		*+
  1102  0034DC  CFF5 F000          	movff	tablat,btemp
  1103  0034E0  0009               	tblrd		*+
  1104  0034E2  CFF5 F001          	movff	tablat,btemp+1
  1105  0034E6  0E08               	movlw	8
  1106  0034E8  2600               	addwf	btemp,f,c
  1107  0034EA  0E00               	movlw	0
  1108  0034EC  2201               	addwfc	btemp+1,f,c
  1109  0034EE  C000  FFF6         	movff	btemp,tblptrl
  1110  0034F2  C001  FFF7         	movff	btemp+1,tblptrh
  1111  0034F6  0E0F               	movlw	(high __ramtop+-1)
  1112  0034F8  64F7               	cpfsgt	tblptrh,c
  1113  0034FA  D007               	bra	u387
  1114  0034FC  0009               	tblrd		*+
  1115  0034FE  CFF5 F000          	movff	tablat,btemp
  1116  003502  0009               	tblrd		*+
  1117  003504  CFF5 F001          	movff	tablat,btemp+1
  1118  003508  D008               	bra	u380
  1119  00350A                     u387:
  1120  00350A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1121  00350E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1122  003512  CFEE F000          	movff	postinc0,btemp
  1123  003516  CFEE F001          	movff	postinc0,btemp+1
  1124  00351A                     u380:
  1125  00351A  0E03               	movlw	3
  1126  00351C  2600               	addwf	btemp,f,c
  1127  00351E  0E00               	movlw	0
  1128  003520  2201               	addwfc	btemp+1,f,c
  1129  003522  C000  FFF6         	movff	btemp,tblptrl
  1130  003526  C001  FFF7         	movff	btemp+1,tblptrh
  1131  00352A  0E0F               	movlw	(high __ramtop+-1)
  1132  00352C  64F7               	cpfsgt	tblptrh,c
  1133  00352E  D003               	bra	u397
  1134  003530  0008               	tblrd		*
  1135  003532  50F5               	movf	tablat,w,c
  1136  003534  D005               	bra	u390
  1137  003536                     u397:
  1138  003536  CFF6 FFE9          	movff	tblptrl,fsr0l
  1139  00353A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1140  00353E  50EF               	movf	indf0,w,c
  1141  003540                     u390:
  1142  003540  CFE8 FF37          	movff	wreg,_Dmask
  1143                           ;wsw2.c: 422: if (KTim[j].ndS<(*Klj[j].KL).KWP[i
      +                          ].delay)
  1144  003544  50D9               	movf	fsr2l,w,c
  1145  003546  0D03               	mullw	3
  1146  003548  0EB6               	movlw	low (_KTim+1)
  1147  00354A  24F3               	addwf	prodl,w,c
  1148  00354C  6EE9               	movwf	fsr0l,c
  1149  00354E  0E01               	movlw	high (_KTim+1)
  1150  003550  20F4               	addwfc	prodh,w,c
  1151  003552  6EEA               	movwf	fsr0h,c
  1152  003554  50EF               	movf	indf0,w,c
  1153  003556  0100               	movlb	__Lparam shr (0+8)
  1154  003558  6FF8               	movwf	(?a_KolProc+1)^(?a_KolProc& (0+65280)),b
  1155  00355A  50D9               	movf	fsr2l,w,c
  1156  00355C  0D03               	mullw	3
  1157  00355E  50F3               	movf	prodl,w,c
  1158  003560  0F88               	addlw	low _Klj
  1159  003562  6EF6               	movwf	tblptrl,c
  1160  003564  50F4               	movf	prodh,w,c
  1161  003566  6EF7               	movwf	tblptrh,c
  1162  003568  0E10               	movlw	high _Klj
  1163  00356A  22F7               	addwfc	tblptrh,f,c
  1164  00356C  0009               	tblrd		*+
  1165  00356E  CFF5 F000          	movff	tablat,btemp
  1166  003572  0009               	tblrd		*+
  1167  003574  CFF5 F001          	movff	tablat,btemp+1
  1168  003578  0E02               	movlw	2
  1169  00357A  2600               	addwf	btemp,f,c
  1170  00357C  0E00               	movlw	0
  1171  00357E  2201               	addwfc	btemp+1,f,c
  1172  003580  C000  FFF6         	movff	btemp,tblptrl
  1173  003584  C001  FFF7         	movff	btemp+1,tblptrh
  1174  003588  0E0F               	movlw	(high __ramtop+-1)
  1175  00358A  64F7               	cpfsgt	tblptrh,c
  1176  00358C  D007               	bra	u407
  1177  00358E  0009               	tblrd		*+
  1178  003590  CFF5 F000          	movff	tablat,btemp
  1179  003594  0009               	tblrd		*+
  1180  003596  CFF5 F001          	movff	tablat,btemp+1
  1181  00359A  D008               	bra	u400
  1182  00359C                     u407:
  1183  00359C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1184  0035A0  CFF7 FFEA          	movff	tblptrh,fsr0h
  1185  0035A4  CFEE F000          	movff	postinc0,btemp
  1186  0035A8  CFEE F001          	movff	postinc0,btemp+1
  1187  0035AC                     u400:
  1188  0035AC  51F7               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1189  0035AE  0D03               	mullw	3
  1190  0035B0  5000               	movf	btemp,w,c
  1191  0035B2  24F3               	addwf	prodl,w,c
  1192  0035B4  6E02               	movwf	btemp+2,c
  1193  0035B6  5001               	movf	btemp+1,w,c
  1194  0035B8  20F4               	addwfc	prodh,w,c
  1195  0035BA  6E03               	movwf	btemp+3,c
  1196  0035BC  0E02               	movlw	2
  1197  0035BE  2602               	addwf	btemp+2,f,c
  1198  0035C0  0E00               	movlw	0
  1199  0035C2  2203               	addwfc	btemp+3,f,c
  1200  0035C4  C002  FFF6         	movff	btemp+2,tblptrl
  1201  0035C8  C003  FFF7         	movff	btemp+3,tblptrh
  1202  0035CC  0E0F               	movlw	(high __ramtop+-1)
  1203  0035CE  64F7               	cpfsgt	tblptrh,c
  1204  0035D0  D003               	bra	u417
  1205  0035D2  0008               	tblrd		*
  1206  0035D4  50F5               	movf	tablat,w,c
  1207  0035D6  D005               	bra	u410
  1208  0035D8                     u417:
  1209  0035D8  CFF6 FFE9          	movff	tblptrl,fsr0l
  1210  0035DC  CFF7 FFEA          	movff	tblptrh,fsr0h
  1211  0035E0  50EF               	movf	indf0,w,c
  1212  0035E2                     u410:
  1213  0035E2  5DF8               	subwf	(?a_KolProc+1)^(__Lparam& (0+65280)),w
  1214  0035E4  E301 D26C          	bc	l52
  1215                           ;wsw2.c: 423: {
  1216  0035E8  50D9               	movf	fsr2l,w,c
  1217  0035EA  0D03               	mullw	3
  1218  0035EC  0EB5               	movlw	low _KTim
  1219  0035EE  24F3               	addwf	prodl,w,c
  1220  0035F0  6EE9               	movwf	fsr0l,c
  1221  0035F2  0E01               	movlw	high _KTim
  1222  0035F4  20F4               	addwfc	prodh,w,c
  1223  0035F6  6EEA               	movwf	fsr0h,c
  1224  0035F8  2AEF               	incf	indf0,f,c
  1225                           ;wsw2.c: 425: if (KTim[j].ncS>=10)
  1226  0035FA  50D9               	movf	fsr2l,w,c
  1227  0035FC  0D03               	mullw	3
  1228  0035FE  0EB5               	movlw	low _KTim
  1229  003600  24F3               	addwf	prodl,w,c
  1230  003602  6EE9               	movwf	fsr0l,c
  1231  003604  0E01               	movlw	high _KTim
  1232  003606  20F4               	addwfc	prodh,w,c
  1233  003608  6EEA               	movwf	fsr0h,c
  1234  00360A  50EF               	movf	indf0,w,c
  1235  00360C  6E00               	movwf	btemp,c
  1236  00360E  0E0A               	movlw	10
  1237  003610  5C00               	subwf	btemp,w,c
  1238  003612  E312               	bnc	l53
  1239                           ;wsw2.c: 426: {
  1240  003614  50D9               	movf	fsr2l,w,c
  1241  003616  0D03               	mullw	3
  1242  003618  0EB5               	movlw	low _KTim
  1243  00361A  24F3               	addwf	prodl,w,c
  1244  00361C  6EE9               	movwf	fsr0l,c
  1245  00361E  0E01               	movlw	high _KTim
  1246  003620  20F4               	addwfc	prodh,w,c
  1247  003622  6EEA               	movwf	fsr0h,c
  1248  003624  6AEF               	clrf	indf0,c
  1249                           ;wsw2.c: 428: KTim[j].ndS++;
  1250  003626  50D9               	movf	fsr2l,w,c
  1251  003628  0D03               	mullw	3
  1252  00362A  0EB6               	movlw	low (_KTim+1)
  1253  00362C  24F3               	addwf	prodl,w,c
  1254  00362E  6EE9               	movwf	fsr0l,c
  1255  003630  0E01               	movlw	high (_KTim+1)
  1256  003632  20F4               	addwfc	prodh,w,c
  1257  003634  6EEA               	movwf	fsr0h,c
  1258  003636  2AEF               	incf	indf0,f,c
  1259  003638                     l53:
  1260                           ;wsw2.c: 429: }
  1261  003638  50D9               	movf	fsr2l,w,c
  1262  00363A  0D03               	mullw	3
  1263  00363C  50F3               	movf	prodl,w,c
  1264  00363E  0F88               	addlw	low _Klj
  1265  003640  6EF6               	movwf	tblptrl,c
  1266  003642  50F4               	movf	prodh,w,c
  1267  003644  6EF7               	movwf	tblptrh,c
  1268  003646  0E10               	movlw	high _Klj
  1269  003648  22F7               	addwfc	tblptrh,f,c
  1270  00364A  0009               	tblrd		*+
  1271  00364C  CFF5 F000          	movff	tablat,btemp
  1272  003650  0009               	tblrd		*+
  1273  003652  CFF5 F001          	movff	tablat,btemp+1
  1274  003656  C000  FFF6         	movff	btemp,tblptrl
  1275  00365A  C001  FFF7         	movff	btemp+1,tblptrh
  1276  00365E  0E0F               	movlw	(high __ramtop+-1)
  1277  003660  64F7               	cpfsgt	tblptrh,c
  1278  003662  D007               	bra	u447
  1279  003664  0009               	tblrd		*+
  1280  003666  CFF5 F000          	movff	tablat,btemp
  1281  00366A  0009               	tblrd		*+
  1282  00366C  CFF5 F001          	movff	tablat,btemp+1
  1283  003670  D008               	bra	u440
  1284  003672                     u447:
  1285  003672  CFF6 FFE9          	movff	tblptrl,fsr0l
  1286  003676  CFF7 FFEA          	movff	tblptrh,fsr0h
  1287  00367A  CFEE F000          	movff	postinc0,btemp
  1288  00367E  CFEE F001          	movff	postinc0,btemp+1
  1289  003682                     u440:
  1290  003682  0100               	movlb	__Lparam shr (0+8)
  1291  003684  51F7               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1292  003686  0D02               	mullw	2
  1293  003688  5000               	movf	btemp,w,c
  1294  00368A  24F3               	addwf	prodl,w,c
  1295  00368C  6E02               	movwf	btemp+2,c
  1296  00368E  5001               	movf	btemp+1,w,c
  1297  003690  20F4               	addwfc	prodh,w,c
  1298  003692  6E03               	movwf	btemp+3,c
  1299  003694  C002  FFF6         	movff	btemp+2,tblptrl
  1300  003698  C003  FFF7         	movff	btemp+3,tblptrh
  1301  00369C  0E0F               	movlw	(high __ramtop+-1)
  1302  00369E  64F7               	cpfsgt	tblptrh,c
  1303  0036A0  D007               	bra	u457
  1304  0036A2  0009               	tblrd		*+
  1305  0036A4  CFF5 F000          	movff	tablat,btemp
  1306  0036A8  0009               	tblrd		*+
  1307  0036AA  CFF5 F001          	movff	tablat,btemp+1
  1308  0036AE  D008               	bra	u450
  1309  0036B0                     u457:
  1310  0036B0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1311  0036B4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1312  0036B8  CFEE F000          	movff	postinc0,btemp
  1313  0036BC  CFEE F001          	movff	postinc0,btemp+1
  1314  0036C0                     u450:
  1315  0036C0  5001               	movf	btemp+1,w,c
  1316  0036C2  1000               	iorwf	btemp,w,c
  1317  0036C4  E001 D11F          	bnz	l54
  1318                           ;wsw2.c: 431: {
  1319  0036C8  50D9               	movf	fsr2l,w,c
  1320  0036CA  0D03               	mullw	3
  1321  0036CC  50F3               	movf	prodl,w,c
  1322  0036CE  0F88               	addlw	low _Klj
  1323  0036D0  6EF6               	movwf	tblptrl,c
  1324  0036D2  50F4               	movf	prodh,w,c
  1325  0036D4  6EF7               	movwf	tblptrh,c
  1326  0036D6  0E10               	movlw	high _Klj
  1327  0036D8  22F7               	addwfc	tblptrh,f,c
  1328  0036DA  0009               	tblrd		*+
  1329  0036DC  CFF5 F000          	movff	tablat,btemp
  1330  0036E0  0009               	tblrd		*+
  1331  0036E2  CFF5 F001          	movff	tablat,btemp+1
  1332  0036E6  0E04               	movlw	4
  1333  0036E8  2600               	addwf	btemp,f,c
  1334  0036EA  0E00               	movlw	0
  1335  0036EC  2201               	addwfc	btemp+1,f,c
  1336  0036EE  C000  FFF6         	movff	btemp,tblptrl
  1337  0036F2  C001  FFF7         	movff	btemp+1,tblptrh
  1338  0036F6  0E0F               	movlw	(high __ramtop+-1)
  1339  0036F8  64F7               	cpfsgt	tblptrh,c
  1340  0036FA  D007               	bra	u477
  1341  0036FC  0009               	tblrd		*+
  1342  0036FE  CFF5 F000          	movff	tablat,btemp
  1343  003702  0009               	tblrd		*+
  1344  003704  CFF5 F001          	movff	tablat,btemp+1
  1345  003708  D008               	bra	u470
  1346  00370A                     u477:
  1347  00370A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1348  00370E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1349  003712  CFEE F000          	movff	postinc0,btemp
  1350  003716  CFEE F001          	movff	postinc0,btemp+1
  1351  00371A                     u470:
  1352  00371A  51F7               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1353  00371C  0D02               	mullw	2
  1354  00371E  5000               	movf	btemp,w,c
  1355  003720  24F3               	addwf	prodl,w,c
  1356  003722  6E02               	movwf	btemp+2,c
  1357  003724  5001               	movf	btemp+1,w,c
  1358  003726  20F4               	addwfc	prodh,w,c
  1359  003728  6E03               	movwf	btemp+3,c
  1360  00372A  C002  FFF6         	movff	btemp+2,tblptrl
  1361  00372E  C003  FFF7         	movff	btemp+3,tblptrh
  1362  003732  0E0F               	movlw	(high __ramtop+-1)
  1363  003734  64F7               	cpfsgt	tblptrh,c
  1364  003736  D007               	bra	u487
  1365  003738  0009               	tblrd		*+
  1366  00373A  CFF5 F000          	movff	tablat,btemp
  1367  00373E  0009               	tblrd		*+
  1368  003740  CFF5 F001          	movff	tablat,btemp+1
  1369  003744  D008               	bra	u480
  1370  003746                     u487:
  1371  003746  CFF6 FFE9          	movff	tblptrl,fsr0l
  1372  00374A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1373  00374E  CFEE F000          	movff	postinc0,btemp
  1374  003752  CFEE F001          	movff	postinc0,btemp+1
  1375  003756                     u480:
  1376  003756  50D9               	movf	fsr2l,w,c
  1377  003758  0D03               	mullw	3
  1378  00375A  50F3               	movf	prodl,w,c
  1379  00375C  0F88               	addlw	low _Klj
  1380  00375E  6EF6               	movwf	tblptrl,c
  1381  003760  50F4               	movf	prodh,w,c
  1382  003762  6EF7               	movwf	tblptrh,c
  1383  003764  0E10               	movlw	high _Klj
  1384  003766  22F7               	addwfc	tblptrh,f,c
  1385  003768  0009               	tblrd		*+
  1386  00376A  CFF5 F002          	movff	tablat,btemp+2
  1387  00376E  0009               	tblrd		*+
  1388  003770  CFF5 F003          	movff	tablat,btemp+3
  1389  003774  0E08               	movlw	8
  1390  003776  2602               	addwf	btemp+2,f,c
  1391  003778  0E00               	movlw	0
  1392  00377A  2203               	addwfc	btemp+3,f,c
  1393  00377C  C002  FFF6         	movff	btemp+2,tblptrl
  1394  003780  C003  FFF7         	movff	btemp+3,tblptrh
  1395  003784  0E0F               	movlw	(high __ramtop+-1)
  1396  003786  64F7               	cpfsgt	tblptrh,c
  1397  003788  D007               	bra	u497
  1398  00378A  0009               	tblrd		*+
  1399  00378C  CFF5 F002          	movff	tablat,btemp+2
  1400  003790  0009               	tblrd		*+
  1401  003792  CFF5 F003          	movff	tablat,btemp+3
  1402  003796  D008               	bra	u490
  1403  003798                     u497:
  1404  003798  CFF6 FFE9          	movff	tblptrl,fsr0l
  1405  00379C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1406  0037A0  CFEE F002          	movff	postinc0,btemp+2
  1407  0037A4  CFEE F003          	movff	postinc0,btemp+3
  1408  0037A8                     u490:
  1409  0037A8  C002  FFF6         	movff	btemp+2,tblptrl
  1410  0037AC  C003  FFF7         	movff	btemp+3,tblptrh
  1411  0037B0  0E0F               	movlw	(high __ramtop+-1)
  1412  0037B2  64F7               	cpfsgt	tblptrh,c
  1413  0037B4  D007               	bra	u507
  1414  0037B6  0009               	tblrd		*+
  1415  0037B8  CFF5 F002          	movff	tablat,btemp+2
  1416  0037BC  0009               	tblrd		*+
  1417  0037BE  CFF5 F003          	movff	tablat,btemp+3
  1418  0037C2  D008               	bra	u500
  1419  0037C4                     u507:
  1420  0037C4  CFF6 FFE9          	movff	tblptrl,fsr0l
  1421  0037C8  CFF7 FFEA          	movff	tblptrh,fsr0h
  1422  0037CC  CFEE F002          	movff	postinc0,btemp+2
  1423  0037D0  CFEE F003          	movff	postinc0,btemp+3
  1424  0037D4                     u500:
  1425  0037D4  C002  FFE9         	movff	btemp+2,fsr0l
  1426  0037D8  C003  FFEA         	movff	btemp+3,fsr0h
  1427  0037DC  C000  FFEE         	movff	btemp,postinc0
  1428  0037E0  C001  FFED         	movff	btemp+1,postdec0
  1429                           ;wsw2.c: 433: (*(*(*Klj[j].KL).KOut).CAdr).Dt=(*
      +                          Klj[j].KL).KWP[i].PWrt;
  1430  0037E4  50D9               	movf	fsr2l,w,c
  1431  0037E6  0D03               	mullw	3
  1432  0037E8  50F3               	movf	prodl,w,c
  1433  0037EA  0F88               	addlw	low _Klj
  1434  0037EC  6EF6               	movwf	tblptrl,c
  1435  0037EE  50F4               	movf	prodh,w,c
  1436  0037F0  6EF7               	movwf	tblptrh,c
  1437  0037F2  0E10               	movlw	high _Klj
  1438  0037F4  22F7               	addwfc	tblptrh,f,c
  1439  0037F6  0009               	tblrd		*+
  1440  0037F8  CFF5 F000          	movff	tablat,btemp
  1441  0037FC  0009               	tblrd		*+
  1442  0037FE  CFF5 F001          	movff	tablat,btemp+1
  1443  003802  0E02               	movlw	2
  1444  003804  2600               	addwf	btemp,f,c
  1445  003806  0E00               	movlw	0
  1446  003808  2201               	addwfc	btemp+1,f,c
  1447  00380A  C000  FFF6         	movff	btemp,tblptrl
  1448  00380E  C001  FFF7         	movff	btemp+1,tblptrh
  1449  003812  0E0F               	movlw	(high __ramtop+-1)
  1450  003814  64F7               	cpfsgt	tblptrh,c
  1451  003816  D007               	bra	u517
  1452  003818  0009               	tblrd		*+
  1453  00381A  CFF5 F000          	movff	tablat,btemp
  1454  00381E  0009               	tblrd		*+
  1455  003820  CFF5 F001          	movff	tablat,btemp+1
  1456  003824  D008               	bra	u510
  1457  003826                     u517:
  1458  003826  CFF6 FFE9          	movff	tblptrl,fsr0l
  1459  00382A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1460  00382E  CFEE F000          	movff	postinc0,btemp
  1461  003832  CFEE F001          	movff	postinc0,btemp+1
  1462  003836                     u510:
  1463  003836  51F7               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1464  003838  0D03               	mullw	3
  1465  00383A  5000               	movf	btemp,w,c
  1466  00383C  24F3               	addwf	prodl,w,c
  1467  00383E  6E02               	movwf	btemp+2,c
  1468  003840  5001               	movf	btemp+1,w,c
  1469  003842  20F4               	addwfc	prodh,w,c
  1470  003844  6E03               	movwf	btemp+3,c
  1471  003846  C002  FFF6         	movff	btemp+2,tblptrl
  1472  00384A  C003  FFF7         	movff	btemp+3,tblptrh
  1473  00384E  0E0F               	movlw	(high __ramtop+-1)
  1474  003850  64F7               	cpfsgt	tblptrh,c
  1475  003852  D007               	bra	u527
  1476  003854  0009               	tblrd		*+
  1477  003856  CFF5 F000          	movff	tablat,btemp
  1478  00385A  0009               	tblrd		*+
  1479  00385C  CFF5 F001          	movff	tablat,btemp+1
  1480  003860  D008               	bra	u520
  1481  003862                     u527:
  1482  003862  CFF6 FFE9          	movff	tblptrl,fsr0l
  1483  003866  CFF7 FFEA          	movff	tblptrh,fsr0h
  1484  00386A  CFEE F000          	movff	postinc0,btemp
  1485  00386E  CFEE F001          	movff	postinc0,btemp+1
  1486  003872                     u520:
  1487  003872  50D9               	movf	fsr2l,w,c
  1488  003874  0D03               	mullw	3
  1489  003876  50F3               	movf	prodl,w,c
  1490  003878  0F88               	addlw	low _Klj
  1491  00387A  6EF6               	movwf	tblptrl,c
  1492  00387C  50F4               	movf	prodh,w,c
  1493  00387E  6EF7               	movwf	tblptrh,c
  1494  003880  0E10               	movlw	high _Klj
  1495  003882  22F7               	addwfc	tblptrh,f,c
  1496  003884  0009               	tblrd		*+
  1497  003886  CFF5 F002          	movff	tablat,btemp+2
  1498  00388A  0009               	tblrd		*+
  1499  00388C  CFF5 F003          	movff	tablat,btemp+3
  1500  003890  0E08               	movlw	8
  1501  003892  2602               	addwf	btemp+2,f,c
  1502  003894  0E00               	movlw	0
  1503  003896  2203               	addwfc	btemp+3,f,c
  1504  003898  C002  FFF6         	movff	btemp+2,tblptrl
  1505  00389C  C003  FFF7         	movff	btemp+3,tblptrh
  1506  0038A0  0E0F               	movlw	(high __ramtop+-1)
  1507  0038A2  64F7               	cpfsgt	tblptrh,c
  1508  0038A4  D007               	bra	u537
  1509  0038A6  0009               	tblrd		*+
  1510  0038A8  CFF5 F002          	movff	tablat,btemp+2
  1511  0038AC  0009               	tblrd		*+
  1512  0038AE  CFF5 F003          	movff	tablat,btemp+3
  1513  0038B2  D008               	bra	u530
  1514  0038B4                     u537:
  1515  0038B4  CFF6 FFE9          	movff	tblptrl,fsr0l
  1516  0038B8  CFF7 FFEA          	movff	tblptrh,fsr0h
  1517  0038BC  CFEE F002          	movff	postinc0,btemp+2
  1518  0038C0  CFEE F003          	movff	postinc0,btemp+3
  1519  0038C4                     u530:
  1520  0038C4  C002  FFF6         	movff	btemp+2,tblptrl
  1521  0038C8  C003  FFF7         	movff	btemp+3,tblptrh
  1522  0038CC  0E0F               	movlw	(high __ramtop+-1)
  1523  0038CE  64F7               	cpfsgt	tblptrh,c
  1524  0038D0  D007               	bra	u547
  1525  0038D2  0009               	tblrd		*+
  1526  0038D4  CFF5 F002          	movff	tablat,btemp+2
  1527  0038D8  0009               	tblrd		*+
  1528  0038DA  CFF5 F003          	movff	tablat,btemp+3
  1529  0038DE  D008               	bra	u540
  1530  0038E0                     u547:
  1531  0038E0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1532  0038E4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1533  0038E8  CFEE F002          	movff	postinc0,btemp+2
  1534  0038EC  CFEE F003          	movff	postinc0,btemp+3
  1535  0038F0                     u540:
  1536  0038F0  0E02               	movlw	2
  1537  0038F2  2402               	addwf	btemp+2,w,c
  1538  0038F4  6EE9               	movwf	fsr0l,c
  1539  0038F6  0E00               	movlw	0
  1540  0038F8  2003               	addwfc	btemp+3,w,c
  1541  0038FA  6EEA               	movwf	fsr0h,c
  1542  0038FC  C000  FFEE         	movff	btemp,postinc0
  1543  003900  C001  FFED         	movff	btemp+1,postdec0
  1544                           ;wsw2.c: 434: }else (*(*(*Klj[j].KL).KOut).CAdr)
      +                          =*((*Klj[j].KL).KAP[i].PAdr);
  1545  003904  D095               	goto	l55
  1546  003906                     l54:
  1547  003906  50D9               	movf	fsr2l,w,c
  1548  003908  0D03               	mullw	3
  1549  00390A  50F3               	movf	prodl,w,c
  1550  00390C  0F88               	addlw	low _Klj
  1551  00390E  6EF6               	movwf	tblptrl,c
  1552  003910  50F4               	movf	prodh,w,c
  1553  003912  6EF7               	movwf	tblptrh,c
  1554  003914  0E10               	movlw	high _Klj
  1555  003916  22F7               	addwfc	tblptrh,f,c
  1556  003918  0009               	tblrd		*+
  1557  00391A  CFF5 F000          	movff	tablat,btemp
  1558  00391E  0009               	tblrd		*+
  1559  003920  CFF5 F001          	movff	tablat,btemp+1
  1560  003924  C000  FFF6         	movff	btemp,tblptrl
  1561  003928  C001  FFF7         	movff	btemp+1,tblptrh
  1562  00392C  0E0F               	movlw	(high __ramtop+-1)
  1563  00392E  64F7               	cpfsgt	tblptrh,c
  1564  003930  D007               	bra	u557
  1565  003932  0009               	tblrd		*+
  1566  003934  CFF5 F000          	movff	tablat,btemp
  1567  003938  0009               	tblrd		*+
  1568  00393A  CFF5 F001          	movff	tablat,btemp+1
  1569  00393E  D008               	bra	u550
  1570  003940                     u557:
  1571  003940  CFF6 FFE9          	movff	tblptrl,fsr0l
  1572  003944  CFF7 FFEA          	movff	tblptrh,fsr0h
  1573  003948  CFEE F000          	movff	postinc0,btemp
  1574  00394C  CFEE F001          	movff	postinc0,btemp+1
  1575  003950                     u550:
  1576  003950  0100               	movlb	__Lparam shr (0+8)
  1577  003952  51F7               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1578  003954  0D02               	mullw	2
  1579  003956  5000               	movf	btemp,w,c
  1580  003958  24F3               	addwf	prodl,w,c
  1581  00395A  6E02               	movwf	btemp+2,c
  1582  00395C  5001               	movf	btemp+1,w,c
  1583  00395E  20F4               	addwfc	prodh,w,c
  1584  003960  6E03               	movwf	btemp+3,c
  1585  003962  C002  FFF6         	movff	btemp+2,tblptrl
  1586  003966  C003  FFF7         	movff	btemp+3,tblptrh
  1587  00396A  0E0F               	movlw	(high __ramtop+-1)
  1588  00396C  64F7               	cpfsgt	tblptrh,c
  1589  00396E  D007               	bra	u567
  1590  003970  0009               	tblrd		*+
  1591  003972  CFF5 F000          	movff	tablat,btemp
  1592  003976  0009               	tblrd		*+
  1593  003978  CFF5 F001          	movff	tablat,btemp+1
  1594  00397C  D008               	bra	u560
  1595  00397E                     u567:
  1596  00397E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1597  003982  CFF7 FFEA          	movff	tblptrh,fsr0h
  1598  003986  CFEE F000          	movff	postinc0,btemp
  1599  00398A  CFEE F001          	movff	postinc0,btemp+1
  1600  00398E                     u560:
  1601  00398E  C000  FFE1         	movff	btemp,fsr1l
  1602  003992  C001  FFE2         	movff	btemp+1,fsr1h
  1603  003996  50D9               	movf	fsr2l,w,c
  1604  003998  0D03               	mullw	3
  1605  00399A  50F3               	movf	prodl,w,c
  1606  00399C  0F88               	addlw	low _Klj
  1607  00399E  6EF6               	movwf	tblptrl,c
  1608  0039A0  50F4               	movf	prodh,w,c
  1609  0039A2  6EF7               	movwf	tblptrh,c
  1610  0039A4  0E10               	movlw	high _Klj
  1611  0039A6  22F7               	addwfc	tblptrh,f,c
  1612  0039A8  0009               	tblrd		*+
  1613  0039AA  CFF5 F000          	movff	tablat,btemp
  1614  0039AE  0009               	tblrd		*+
  1615  0039B0  CFF5 F001          	movff	tablat,btemp+1
  1616  0039B4  0E08               	movlw	8
  1617  0039B6  2600               	addwf	btemp,f,c
  1618  0039B8  0E00               	movlw	0
  1619  0039BA  2201               	addwfc	btemp+1,f,c
  1620  0039BC  C000  FFF6         	movff	btemp,tblptrl
  1621  0039C0  C001  FFF7         	movff	btemp+1,tblptrh
  1622  0039C4  0E0F               	movlw	(high __ramtop+-1)
  1623  0039C6  64F7               	cpfsgt	tblptrh,c
  1624  0039C8  D007               	bra	u577
  1625  0039CA  0009               	tblrd		*+
  1626  0039CC  CFF5 F000          	movff	tablat,btemp
  1627  0039D0  0009               	tblrd		*+
  1628  0039D2  CFF5 F001          	movff	tablat,btemp+1
  1629  0039D6  D008               	bra	u570
  1630  0039D8                     u577:
  1631  0039D8  CFF6 FFE9          	movff	tblptrl,fsr0l
  1632  0039DC  CFF7 FFEA          	movff	tblptrh,fsr0h
  1633  0039E0  CFEE F000          	movff	postinc0,btemp
  1634  0039E4  CFEE F001          	movff	postinc0,btemp+1
  1635  0039E8                     u570:
  1636  0039E8  C000  FFF6         	movff	btemp,tblptrl
  1637  0039EC  C001  FFF7         	movff	btemp+1,tblptrh
  1638  0039F0  0E0F               	movlw	(high __ramtop+-1)
  1639  0039F2  64F7               	cpfsgt	tblptrh,c
  1640  0039F4  D007               	bra	u587
  1641  0039F6  0009               	tblrd		*+
  1642  0039F8  CFF5 F000          	movff	tablat,btemp
  1643  0039FC  0009               	tblrd		*+
  1644  0039FE  CFF5 F001          	movff	tablat,btemp+1
  1645  003A02  D008               	bra	u580
  1646  003A04                     u587:
  1647  003A04  CFF6 FFE9          	movff	tblptrl,fsr0l
  1648  003A08  CFF7 FFEA          	movff	tblptrh,fsr0h
  1649  003A0C  CFEE F000          	movff	postinc0,btemp
  1650  003A10  CFEE F001          	movff	postinc0,btemp+1
  1651  003A14                     u580:
  1652  003A14  C000  FFE9         	movff	btemp,fsr0l
  1653  003A18  C001  FFEA         	movff	btemp+1,fsr0h
  1654  003A1C  CFE6 FFEE          	movff	postinc1,postinc0
  1655  003A20  CFE6 FFEE          	movff	postinc1,postinc0
  1656  003A24  CFE6 FFEE          	movff	postinc1,postinc0
  1657  003A28  CFE5 FFED          	movff	postdec1,postdec0
  1658  003A2C  52ED               	movf	postdec0,f,c
  1659  003A2E  52ED               	movf	postdec0,f,c
  1660  003A30                     l55:
  1661                           ;wsw2.c: 435: (*(*(*Klj[j].KL).KOut).CAdr).St.fo
      +                          cus=1;
  1662  003A30  50D9               	movf	fsr2l,w,c
  1663  003A32  0D03               	mullw	3
  1664  003A34  50F3               	movf	prodl,w,c
  1665  003A36  0F88               	addlw	low _Klj
  1666  003A38  6EF6               	movwf	tblptrl,c
  1667  003A3A  50F4               	movf	prodh,w,c
  1668  003A3C  6EF7               	movwf	tblptrh,c
  1669  003A3E  0E10               	movlw	high _Klj
  1670  003A40  22F7               	addwfc	tblptrh,f,c
  1671  003A42  0009               	tblrd		*+
  1672  003A44  CFF5 F000          	movff	tablat,btemp
  1673  003A48  0009               	tblrd		*+
  1674  003A4A  CFF5 F001          	movff	tablat,btemp+1
  1675  003A4E  0E08               	movlw	8
  1676  003A50  2600               	addwf	btemp,f,c
  1677  003A52  0E00               	movlw	0
  1678  003A54  2201               	addwfc	btemp+1,f,c
  1679  003A56  C000  FFF6         	movff	btemp,tblptrl
  1680  003A5A  C001  FFF7         	movff	btemp+1,tblptrh
  1681  003A5E  0E0F               	movlw	(high __ramtop+-1)
  1682  003A60  64F7               	cpfsgt	tblptrh,c
  1683  003A62  D007               	bra	u597
  1684  003A64  0009               	tblrd		*+
  1685  003A66  CFF5 F000          	movff	tablat,btemp
  1686  003A6A  0009               	tblrd		*+
  1687  003A6C  CFF5 F001          	movff	tablat,btemp+1
  1688  003A70  D008               	bra	u590
  1689  003A72                     u597:
  1690  003A72  CFF6 FFE9          	movff	tblptrl,fsr0l
  1691  003A76  CFF7 FFEA          	movff	tblptrh,fsr0h
  1692  003A7A  CFEE F000          	movff	postinc0,btemp
  1693  003A7E  CFEE F001          	movff	postinc0,btemp+1
  1694  003A82                     u590:
  1695  003A82  C000  FFF6         	movff	btemp,tblptrl
  1696  003A86  C001  FFF7         	movff	btemp+1,tblptrh
  1697  003A8A  0E0F               	movlw	(high __ramtop+-1)
  1698  003A8C  64F7               	cpfsgt	tblptrh,c
  1699  003A8E  D007               	bra	u607
  1700  003A90  0009               	tblrd		*+
  1701  003A92  CFF5 F000          	movff	tablat,btemp
  1702  003A96  0009               	tblrd		*+
  1703  003A98  CFF5 F001          	movff	tablat,btemp+1
  1704  003A9C  D008               	bra	u600
  1705  003A9E                     u607:
  1706  003A9E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1707  003AA2  CFF7 FFEA          	movff	tblptrh,fsr0h
  1708  003AA6  CFEE F000          	movff	postinc0,btemp
  1709  003AAA  CFEE F001          	movff	postinc0,btemp+1
  1710  003AAE                     u600:
  1711  003AAE  C000  FFE9         	movff	btemp,fsr0l
  1712  003AB2  C001  FFEA         	movff	btemp+1,fsr0h
  1713  003AB6  50EF               	movf	indf0,w,c
  1714  003AB8  0BFE               	andlw	-2
  1715  003ABA  0901               	iorlw	1
  1716  003ABC  6EEF               	movwf	indf0,c
  1717                           ;wsw2.c: 436: break;
  1718  003ABE  D056               	goto	l35
  1719  003AC0                     l52:
  1720                           ;wsw2.c: 438: {
  1721  003AC0  50D9               	movf	fsr2l,w,c
  1722  003AC2  0D03               	mullw	3
  1723  003AC4  0EB5               	movlw	low _KTim
  1724  003AC6  24F3               	addwf	prodl,w,c
  1725  003AC8  6EE9               	movwf	fsr0l,c
  1726  003ACA  0E01               	movlw	high _KTim
  1727  003ACC  20F4               	addwfc	prodh,w,c
  1728  003ACE  6EEA               	movwf	fsr0h,c
  1729  003AD0  6AEF               	clrf	indf0,c
  1730                           ;wsw2.c: 440: KTim[j].ndS=0;
  1731  003AD2  50D9               	movf	fsr2l,w,c
  1732  003AD4  0D03               	mullw	3
  1733  003AD6  0EB6               	movlw	low (_KTim+1)
  1734  003AD8  24F3               	addwf	prodl,w,c
  1735  003ADA  6EE9               	movwf	fsr0l,c
  1736  003ADC  0E01               	movlw	high (_KTim+1)
  1737  003ADE  20F4               	addwfc	prodh,w,c
  1738  003AE0  6EEA               	movwf	fsr0h,c
  1739  003AE2  6AEF               	clrf	indf0,c
  1740                           ;wsw2.c: 441: if (KInd[j].indeks>=Klj[j].nPzc-1)
  1741  003AE4  50D9               	movf	fsr2l,w,c
  1742  003AE6  0D03               	mullw	3
  1743  003AE8  50F3               	movf	prodl,w,c
  1744  003AEA  0F88               	addlw	low _Klj
  1745  003AEC  6EF6               	movwf	tblptrl,c
  1746  003AEE  50F4               	movf	prodh,w,c
  1747  003AF0  6EF7               	movwf	tblptrh,c
  1748  003AF2  0E10               	movlw	high _Klj
  1749  003AF4  22F7               	addwfc	tblptrh,f,c
  1750  003AF6  0E02               	movlw	2
  1751  003AF8  26F6               	addwf	tblptrl,f,c
  1752  003AFA  0E00               	movlw	0
  1753  003AFC  22F7               	addwfc	tblptrh,f,c
  1754  003AFE  0008               	tblrd		*
  1755  003B00  50F5               	movf	tablat,w,c
  1756  003B02  6E00               	movwf	btemp,c
  1757  003B04  0FFF               	addlw	255
  1758  003B06  6EF6               	movwf	tblptrl,c
  1759  003B08  6AF7               	clrf	tblptrh,c
  1760  003B0A  0EFF               	movlw	255
  1761  003B0C  22F7               	addwfc	tblptrh,f,c
  1762  003B0E  50D9               	movf	fsr2l,w,c
  1763  003B10  EE0F  F03B         	lfsr	0,_KInd
  1764  003B14  26E9               	addwf	fsr0l,f,c
  1765  003B16  0E00               	movlw	0
  1766  003B18  22EA               	addwfc	fsr0h,f,c
  1767  003B1A  30EF               	rrcf	indf0,w,c
  1768  003B1C  6E00               	movwf	btemp,c
  1769  003B1E  3000               	rrcf	btemp,w,c
  1770  003B20  0B3F               	andlw	63
  1771  003B22  6E00               	movwf	btemp,c
  1772  003B24  C000  F002         	movff	btemp,btemp+2
  1773  003B28  6A03               	clrf	btemp+3,c
  1774  003B2A  5003               	movf	btemp+3,w,c
  1775  003B2C  0A80               	xorlw	128
  1776  003B2E  6E00               	movwf	btemp,c
  1777  003B30  50F7               	movf	tblptrh,w,c
  1778  003B32  0A80               	xorlw	128
  1779  003B34  5C00               	subwf	btemp,w,c
  1780  003B36  E102               	bnz	u615
  1781  003B38  50F6               	movf	tblptrl,w,c
  1782  003B3A  5C02               	subwf	btemp+2,w,c
  1783  003B3C                     u615:
  1784  003B3C  E313               	bnc	l36
  1785                           ;wsw2.c: 442: {
  1786  003B3E  50D9               	movf	fsr2l,w,c
  1787  003B40  EE0F  F03B         	lfsr	0,_KInd
  1788  003B44  26E9               	addwf	fsr0l,f,c
  1789  003B46  0E00               	movlw	0
  1790  003B48  22EA               	addwfc	fsr0h,f,c
  1791  003B4A  0E03               	movlw	-253
  1792  003B4C  16EF               	andwf	indf0,f,c
  1793                           ;wsw2.c: 444: if(nC) KTim[j].cykl++;
  1794  003B4E  50E1               	movf	fsr1l,w,c
  1795  003B50  E009               	bz	l36
  1796  003B52  50D9               	movf	fsr2l,w,c
  1797  003B54  0D03               	mullw	3
  1798  003B56  0EB7               	movlw	low (_KTim+2)
  1799  003B58  24F3               	addwf	prodl,w,c
  1800  003B5A  6EE9               	movwf	fsr0l,c
  1801  003B5C  0E01               	movlw	high (_KTim+2)
  1802  003B5E  20F4               	addwfc	prodh,w,c
  1803  003B60  6EEA               	movwf	fsr0h,c
  1804  003B62  2AEF               	incf	indf0,f,c
  1805  003B64                     l36:
  1806  003B64  0100               	movlb	__Lparam shr (0+8)
  1807  003B66  2BF7               	incf	?a_KolProc^(__Lparam& (0+65280)),f,b
  1808  003B68  EFEF  F018         	goto	l37
  1809  003B6C                     l35:
  1810  003B6C  2AD9               	incf	fsr2l,f,c
  1811  003B6E  0E03               	movlw	3
  1812  003B70  64D9               	cpfsgt	fsr2l,c
  1813  003B72  EF23  F017         	goto	l20
  1814  003B76  0C03               	retlw	3
  1815                           ;wsw2.c: 445: }
  1816  003B78                     __end_of_KolProc:
  1817                           ;wsw2.c: 455: void SetPrWswData(void)
  1818                           ;wsw2.c: 456: {
  1819  003B78                     _SetPrWswData:
  1820  000000                     
  1821                           ;wsw2.c: 457: unsigned char i;
  1822  003B78  6AD9               	clrf	fsr2l,c
  1823  003B7A                     l60:
  1824                           ;wsw2.c: 459: {
  1825  003B7A  50D9               	movf	fsr2l,w,c
  1826  003B7C  0D04               	mullw	4
  1827  003B7E  0EC1               	movlw	low _PWD
  1828  003B80  24F3               	addwf	prodl,w,c
  1829  003B82  6EE9               	movwf	fsr0l,c
  1830  003B84  0E01               	movlw	high _PWD
  1831  003B86  20F4               	addwfc	prodh,w,c
  1832  003B88  6EEA               	movwf	fsr0h,c
  1833  003B8A  50EF               	movf	indf0,w,c
  1834  003B8C  6E00               	movwf	btemp,c
  1835  003B8E  A000               	btfss	btemp,0,c
  1836  003B90  D013               	goto	l63
  1837                           ;wsw2.c: 461: {
  1838  003B92  50D9               	movf	fsr2l,w,c
  1839  003B94  0D04               	mullw	4
  1840  003B96  0EC1               	movlw	low _PWD
  1841  003B98  24F3               	addwf	prodl,w,c
  1842  003B9A  6EE9               	movwf	fsr0l,c
  1843  003B9C  0E01               	movlw	high _PWD
  1844  003B9E  20F4               	addwfc	prodh,w,c
  1845  003BA0  6EEA               	movwf	fsr0h,c
  1846  003BA2  CFEE F1B1          	movff	postinc0,_WswData
  1847  003BA6  CFEE F1B2          	movff	postinc0,_WswData+1
  1848  003BAA  CFEE F1B3          	movff	postinc0,_WswData+2
  1849  003BAE  CFED F1B4          	movff	postdec0,_WswData+3
  1850  003BB2  52ED               	movf	postdec0,f,c
  1851  003BB4  52ED               	movf	postdec0,f,c
  1852                           ;wsw2.c: 463: return;
  1853  003BB6  0012               	return	
  1854  003BB8                     l63:
  1855                           ;wsw2.c: 464: };
  1856  003BB8  2AD9               	incf	fsr2l,f,c
  1857  003BBA  0E04               	movlw	4
  1858  003BBC  64D9               	cpfsgt	fsr2l,c
  1859  003BBE  D7DD               	goto	l60
  1860                           ;wsw2.c: 465: }
  1861  003BC0  C1D5  F1B1         	movff	_PWD+20,_WswData
  1862  003BC4  C1D6  F1B2         	movff	_PWD+21,_WswData+1
  1863  003BC8  C1D7  F1B3         	movff	_PWD+22,_WswData+2
  1864  003BCC  C1D8  F1B4         	movff	_PWD+23,_WswData+3
  1865                           ;wsw2.c: 467: }
  1866  003BD0  0C04               	retlw	4
  1867  003BD2                     __end_of_SetPrWswData:
  1868                           ;wsw2.c: 469: void Swbty(unsigned char dtd);
  1869                           ;wsw2.c: 470: void Rwbty(unsigned char dtd);
  1870                           ;wsw2.c: 472: void FormatWswData(void)
  1871                           ;wsw2.c: 473: {
  1872  003BD2                     _FormatWswData:
  1873  000000                     
  1874                           ;wsw2.c: 474: unsigned char nrbty;
  1875  003BD2  0101               	movlb	_WswData shr (0+8)
  1876  003BD4  A5B1               	btfss	_WswData& (0+255),2,b
  1877  003BD6  D019               	goto	l65
  1878                           ;wsw2.c: 477: {
  1879  003BD8  C1B4  F000         	movff	_WswData+3,btemp
  1880  003BDC  0EF0               	movlw	-16
  1881  003BDE  1600               	andwf	btemp,f,c
  1882  003BE0  3A00               	swapf	btemp,f,c
  1883  003BE2  0E0F               	movlw	15
  1884  003BE4  1600               	andwf	btemp,f,c
  1885  003BE6  C000  F002         	movff	btemp,btemp+2
  1886  003BEA  6A03               	clrf	btemp+3,c
  1887  003BEC  5002               	movf	btemp+2,w,c
  1888  003BEE  0F94               	addlw	low _Znak
  1889  003BF0  6EF6               	movwf	tblptrl,c
  1890  003BF2  5003               	movf	btemp+3,w,c
  1891  003BF4  6EF7               	movwf	tblptrh,c
  1892  003BF6  0E10               	movlw	high _Znak
  1893  003BF8  22F7               	addwfc	tblptrh,f,c
  1894  003BFA  0008               	tblrd		*
  1895  003BFC  CFF5 F1AF          	movff	tablat,_LedData+1
  1896                           ;wsw2.c: 479: LedData.dLed0=Znak[WswData.Dt.Data
      +                          0&0x0F];
  1897  003C00  C1B4  F000         	movff	_WswData+3,btemp
  1898  003C04  0E0F               	movlw	15
  1899  003C06  1600               	andwf	btemp,f,c
  1900  003C08  D022               	goto	L1
  1901                           ;wsw2.c: 480: }else
  1902  003C0A                     l65:
  1903                           ;wsw2.c: 481: if(WswData.St.dec)
  1904  003C0A  0101               	movlb	_WswData shr (0+8)
  1905  003C0C  A3B1               	btfss	_WswData& (0+255),1,b
  1906  003C0E  D02D               	goto	l67
  1907                           ;wsw2.c: 482: {
  1908  003C10  0E63               	movlw	99
  1909  003C12  65B4               	cpfsgt	(_WswData+3)& (0+255),b
  1910  003C14  D002               	goto	l68
  1911  003C16  CFE8 F1B4          	movff	wreg,_WswData+3
  1912  003C1A                     l68:
  1913                           ;wsw2.c: 484: LedData.dLed1=Znak[WswData.Dt.Data
      +                          0/10];
  1914  003C1A  0E0A               	movlw	10
  1915  003C1C  6E01               	movwf	btemp+1,c
  1916  003C1E  C1B4  FFE8         	movff	_WswData+3,wreg
  1917  003C22  ECE2  F04A         	call	lbdiv
  1918  003C26  6E00               	movwf	btemp,c
  1919  003C28  C000  F002         	movff	btemp,btemp+2
  1920  003C2C  6A03               	clrf	btemp+3,c
  1921  003C2E  5002               	movf	btemp+2,w,c
  1922  003C30  0F94               	addlw	low _Znak
  1923  003C32  6EF6               	movwf	tblptrl,c
  1924  003C34  5003               	movf	btemp+3,w,c
  1925  003C36  6EF7               	movwf	tblptrh,c
  1926  003C38  0E10               	movlw	high _Znak
  1927  003C3A  22F7               	addwfc	tblptrh,f,c
  1928  003C3C  0008               	tblrd		*
  1929  003C3E  CFF5 F1AF          	movff	tablat,_LedData+1
  1930                           ;wsw2.c: 485: LedData.dLed0=Znak[WswData.Dt.Data
      +                          0%10];
  1931  003C42  0E0A               	movlw	10
  1932  003C44  6E01               	movwf	btemp+1,c
  1933  003C46  C1B4  FFE8         	movff	_WswData+3,wreg
  1934  003C4A  ECE2  F04A         	call	lbmod
  1935  003C4E                     L1:
  1936  003C4E  C000  F002         	movff	btemp,btemp+2
  1937  003C52  6A03               	clrf	btemp+3,c
  1938  003C54  5002               	movf	btemp+2,w,c
  1939  003C56  0F94               	addlw	low _Znak
  1940  003C58  6EF6               	movwf	tblptrl,c
  1941  003C5A  5003               	movf	btemp+3,w,c
  1942  003C5C  6EF7               	movwf	tblptrh,c
  1943  003C5E  0E10               	movlw	high _Znak
  1944  003C60  22F7               	addwfc	tblptrh,f,c
  1945  003C62  0008               	tblrd		*
  1946  003C64  CFF5 F1B0          	movff	tablat,_LedData+2
  1947                           ;wsw2.c: 486: }else
  1948  003C68  D004               	goto	l66
  1949  003C6A                     l67:
  1950                           ;wsw2.c: 487: {
  1951  003C6A  C1B3  F1AF         	movff	_WswData+2,_LedData+1
  1952                           ;wsw2.c: 489: LedData.dLed0=WswData.Dt.Data0;
  1953  003C6E  C1B4  F1B0         	movff	_WswData+3,_LedData+2
  1954  003C72                     l66:
  1955                           ;wsw2.c: 490: }
  1956  003C72  0101               	movlb	_WswData shr (0+8)
  1957  003C74  A7B1               	btfss	_WswData& (0+255),3,b
  1958  003C76  D00B               	goto	l70
  1959  003C78  0E94               	movlw	low _Znak
  1960  003C7A  6EF6               	movwf	tblptrl,c
  1961  003C7C  0E10               	movlw	high _Znak
  1962  003C7E  6EF7               	movwf	tblptrh,c
  1963  003C80  0008               	tblrd		*
  1964  003C82  50F5               	movf	tablat,w,c
  1965  003C84  63AF               	cpfseq	(_LedData+1)& (0+255),b
  1966  003C86  D003               	goto	l70
  1967                           ;wsw2.c: 492: LedData.dLed1=0b11111111;
  1968  003C88  0EFF               	movlw	255
  1969  003C8A  CFE8 F1AF          	movff	wreg,_LedData+1
  1970  003C8E                     l70:
  1971                           ;wsw2.c: 493: if (WswData.St.kropka0)
  1972  003C8E  0101               	movlb	_WswData shr (0+8)
  1973  003C90  A9B1               	btfss	_WswData& (0+255),4,b
  1974  003C92  D005               	goto	l71
  1975                           ;wsw2.c: 494: LedData.dLed0=LedData.dLed0&0b1110
      +                          1111;
  1976  003C94  C1B0  FFE8         	movff	_LedData+2,wreg
  1977  003C98  0BEF               	andlw	-17
  1978  003C9A  CFE8 F1B0          	movff	wreg,_LedData+2
  1979  003C9E                     l71:
  1980                           ;wsw2.c: 495: if (WswData.St.kropka1)
  1981  003C9E  0101               	movlb	_WswData shr (0+8)
  1982  003CA0  ABB1               	btfss	_WswData& (0+255),5,b
  1983  003CA2  D005               	goto	l72
  1984                           ;wsw2.c: 496: LedData.dLed1=LedData.dLed1&0b1110
      +                          1111;
  1985  003CA4  C1AF  FFE8         	movff	_LedData+1,wreg
  1986  003CA8  0BEF               	andlw	-17
  1987  003CAA  CFE8 F1AF          	movff	wreg,_LedData+1
  1988  003CAE                     l72:
  1989                           ;wsw2.c: 497: if (WswData.St.wygas0||LedData.set
      +                          Off)
  1990  003CAE  0101               	movlb	_WswData shr (0+8)
  1991  003CB0  BDB1               	btfsc	_WswData& (0+255),6,b
  1992  003CB2  D002               	goto	u770
  1993  003CB4  A1AE               	btfss	_LedData& (0+255),0,b
  1994  003CB6  D003               	goto	l73
  1995  003CB8                     u770:
  1996                           ;wsw2.c: 498: LedData.dLed0=0b11111111;
  1997  003CB8  0EFF               	movlw	255
  1998  003CBA  CFE8 F1B0          	movff	wreg,_LedData+2
  1999  003CBE                     l73:
  2000                           ;wsw2.c: 499: if (WswData.St.wygas1||LedData.set
      +                          Off)
  2001  003CBE  0101               	movlb	_WswData shr (0+8)
  2002  003CC0  BFB1               	btfsc	_WswData& (0+255),7,b
  2003  003CC2  D002               	goto	u800
  2004  003CC4  A1AE               	btfss	_LedData& (0+255),0,b
  2005  003CC6  D003               	goto	l74
  2006  003CC8                     u800:
  2007                           ;wsw2.c: 500: LedData.dLed1=0b11111111;
  2008  003CC8  0EFF               	movlw	255
  2009  003CCA  CFE8 F1AF          	movff	wreg,_LedData+1
  2010  003CCE                     l74:
  2011                           ;wsw2.c: 502: if (LedData.setOff)
  2012  003CCE  0101               	movlb	_LedData shr (0+8)
  2013  003CD0  A1AE               	btfss	_LedData& (0+255),0,b
  2014  003CD2  D004               	goto	l75
  2015                           ;wsw2.c: 503: {
  2016  003CD4  010F               	movlb	(_wbty+1) shr (0+8)
  2017  003CD6  0E0F               	movlw	15
  2018  003CD8  133A               	iorwf	(_wbty+1)& (0+255),f,b
  2019                           ;wsw2.c: 511: }
  2020  003CDA  0C0F               	retlw	15
  2021  003CDC                     l75:
  2022                           ;wsw2.c: 512: else
  2023  003CDC  EE01  F0B2         	lfsr	0,_WswData+1
  2024  003CE0  38EF               	swapf	indf0,w,c
  2025  003CE2  0B0F               	andlw	15
  2026  003CE4  E015               	bz	l77
  2027  003CE6  0101               	movlb	(_WswData+1) shr (0+8)
  2028  003CE8  B5B2               	btfsc	(_WswData+1)& (0+255),2,b
  2029  003CEA  D002               	goto	u860
  2030  003CEC  A7B2               	btfss	(_WswData+1)& (0+255),3,b
  2031  003CEE  D010               	goto	l77
  2032  003CF0                     u860:
  2033                           ;wsw2.c: 514: {
  2034  003CF0  0101               	movlb	(_WswData+1) shr (0+8)
  2035  003CF2  A5B2               	btfss	(_WswData+1)& (0+255),2,b
  2036  003CF4  D005               	goto	l78
  2037  003CF6  EE01  F0B2         	lfsr	0,_WswData+1
  2038  003CFA  38EF               	swapf	indf0,w,c
  2039  003CFC  0B0F               	andlw	15
  2040  003CFE  D08C               	goto	_Swbty
  2041  003D00                     l78:
  2042                           ;wsw2.c: 518: else
  2043  003D00  0101               	movlb	(_WswData+1) shr (0+8)
  2044  003D02  A7B2               	btfss	(_WswData+1)& (0+255),3,b
  2045  003D04  0012               	return	
  2046  003D06  EE01  F0B2         	lfsr	0,_WswData+1
  2047  003D0A  38EF               	swapf	indf0,w,c
  2048  003D0C  0B0F               	andlw	15
  2049  003D0E  D098               	goto	_Rwbty
  2050                           ;wsw2.c: 520: }
  2051  003D10                     l77:
  2052                           ;wsw2.c: 521: else
  2053  003D10  010F               	movlb	(_wbty+1) shr (0+8)
  2054  003D12  0E0F               	movlw	15
  2055  003D14  133A               	iorwf	(_wbty+1)& (0+255),f,b
  2056                           ;wsw2.c: 527: wbty[1]&=~(wsdid);
  2057  003D16  CF38  FFE8         	movff	_wsdid,wreg
  2058  003D1A  0AFF               	xorlw	255
  2059  003D1C  173A               	andwf	(_wbty+1)& (0+255),f,b
  2060                           ;wsw2.c: 533: }
  2061  003D1E  0012               	return	
  2062  003D20                     __end_of_FormatWswData:
  2063                           ;wsw2.c: 540: void PrintWswData(void)
  2064                           ;wsw2.c: 541: {
  2065  003D20                     _PrintWswData:
  2066  000000                     
  2067                           ;wsw2.c: 543: unsigned char i,j,k;
  2068  003D20  7641               	btg	_mux/(0+8),_mux& (0+7),c
  2069                           ;wsw2.c: 567: if (mux)
  2070  003D22  A641               	btfss	_mux/(0+8),_mux& (0+7),c
  2071  003D24  D003               	goto	l83
  2072                           ;wsw2.c: 568: wbty[0]=LedData.dLed0;
  2073  003D26  C1B0  FF39         	movff	_LedData+2,_wbty
  2074  003D2A  D002               	goto	l84
  2075  003D2C                     l83:
  2076                           ;wsw2.c: 569: else
  2077  003D2C  C1AF  FF39         	movff	_LedData+1,_wbty
  2078  003D30                     l84:
  2079                           ;wsw2.c: 577: for(k=0;k<1;k++)
  2080  003D30  6AD9               	clrf	fsr2l,c
  2081  003D32                     l85:
  2082                           ;wsw2.c: 578: {
  2083  003D32  6AE1               	clrf	fsr1l,c
  2084  003D34                     l88:
  2085                           ;wsw2.c: 580: {
  2086  003D34  50D9               	movf	fsr2l,w,c
  2087  003D36  6A00               	clrf	btemp,c
  2088  003D38  6A01               	clrf	btemp+1,c
  2089  003D3A  5E00               	subwf	btemp,f,c
  2090  003D3C  0E00               	movlw	0
  2091  003D3E  5A01               	subwfb	btemp+1,f,c
  2092  003D40  0E39               	movlw	low _wbty
  2093  003D42  2400               	addwf	btemp,w,c
  2094  003D44  6EE9               	movwf	fsr0l,c
  2095  003D46  0E0F               	movlw	high _wbty
  2096  003D48  2001               	addwfc	btemp+1,w,c
  2097  003D4A  6EEA               	movwf	fsr0h,c
  2098  003D4C  50EF               	movf	indf0,w,c
  2099  003D4E  6E01               	movwf	btemp+1,c
  2100  003D50  50E1               	movf	fsr1l,w,c
  2101  003D52  0807               	sublw	7
  2102  003D54  6E02               	movwf	btemp+2,c
  2103  003D56  0E01               	movlw	1
  2104  003D58  6E00               	movwf	btemp,c
  2105  003D5A  2A02               	incf	btemp+2,f,c
  2106  003D5C  D002               	goto	u904
  2107  003D5E                     u905:
  2108  003D5E  90D8               	bcf	status,0,c
  2109  003D60  3600               	rlcf	btemp,f,c
  2110  003D62                     u904:
  2111  003D62  2E02               	decfsz	btemp+2,f,c
  2112  003D64  D7FC               	goto	u905
  2113  003D66  5001               	movf	btemp+1,w,c
  2114  003D68  1400               	andwf	btemp,w,c
  2115  003D6A  E002               	bz	u910
  2116  003D6C  8284               	bsf	3972,1,c	;volatile
  2117  003D6E  D001               	goto	u925
  2118  003D70                     u910:
  2119  003D70  9284               	bcf	3972,1,c	;volatile
  2120  003D72                     u925:
  2121                           ;wsw2.c: 583: for(i=0;i<10;i++);
  2122                           ; _i allocated to fsr0l
  2123  003D72  6AE9               	clrf	fsr0l,c
  2124  003D74                     l91:
  2125  003D74  2AE9               	incf	fsr0l,f,c
  2126  003D76  0E09               	movlw	9
  2127  003D78  64E9               	cpfsgt	fsr0l,c
  2128  003D7A  D7FC               	goto	l91
  2129                           ;wsw2.c: 584: RE2=1;
  2130  003D7C  8484               	bsf	3972,2,c	;volatile
  2131                           ;wsw2.c: 585: for(i=0;i<10;i++);
  2132  003D7E  6AE9               	clrf	fsr0l,c
  2133  003D80                     l94:
  2134  003D80  2AE9               	incf	fsr0l,f,c
  2135  003D82  0E09               	movlw	9
  2136  003D84  64E9               	cpfsgt	fsr0l,c
  2137  003D86  D7FC               	goto	l94
  2138                           ;wsw2.c: 586: RE2=0;
  2139  003D88  9484               	bcf	3972,2,c	;volatile
  2140  003D8A  2AE1               	incf	fsr1l,f,c
  2141  003D8C  0E07               	movlw	7
  2142  003D8E  64E1               	cpfsgt	fsr1l,c
  2143  003D90  D7D1               	goto	l88
  2144  003D92  2AD9               	incf	fsr2l,f,c
  2145  003D94  0E00               	movlw	0
  2146  003D96  64D9               	cpfsgt	fsr2l,c
  2147  003D98  D7CC               	goto	l85
  2148                           ;wsw2.c: 587: }
  2149                           ; _i allocated to fsr2l
  2150  003D9A  6AD9               	clrf	fsr2l,c
  2151  003D9C                     l97:
  2152  003D9C  2AD9               	incf	fsr2l,f,c
  2153  003D9E  0E09               	movlw	9
  2154  003DA0  64D9               	cpfsgt	fsr2l,c
  2155  003DA2  D7FC               	goto	l97
  2156                           ;wsw2.c: 591: RE0=1;
  2157  003DA4  8084               	bsf	3972,0,c	;volatile
  2158                           ;wsw2.c: 592: RB3=(mux)?1:0;
  2159  003DA6  A641               	btfss	_mux/(0+8),_mux& (0+7),c
  2160  003DA8  D002               	goto	u980
  2161  003DAA  8681               	bsf	3969,3,c	;volatile
  2162  003DAC  D001               	goto	u995
  2163  003DAE                     u980:
  2164  003DAE  9681               	bcf	3969,3,c	;volatile
  2165  003DB0                     u995:
  2166                           ;wsw2.c: 593: for(i=0;i<10;i++);
  2167  003DB0  6AD9               	clrf	fsr2l,c
  2168  003DB2                     l100:
  2169  003DB2  2AD9               	incf	fsr2l,f,c
  2170  003DB4  0E09               	movlw	9
  2171  003DB6  64D9               	cpfsgt	fsr2l,c
  2172  003DB8  D7FC               	goto	l100
  2173                           ;wsw2.c: 594: RE0=0;
  2174  003DBA  9084               	bcf	3972,0,c	;volatile
  2175                           ;wsw2.c: 596: }
  2176  003DBC  0C09               	retlw	9
  2177  003DBE                     __end_of_PrintWswData:
  2178                           ;wsw2.c: 604: void SetWbtyBit(unsigned char nrbt
      +                          y, unsigned char nrbit, const unsigned char bt)
  2179                           ;wsw2.c: 605: {
  2180  003DBE  00A8               	dw	?_SetWbtyBit
  2181  003DC0                     _SetWbtyBit:
  2182  000000                     
  2183                           ; _nrbty loaded to fsr2l
  2184  003DC0  6ED9               	movwf	fsr2l,c
  2185                           ;wsw2.c: 606: if(nrbty>=1) nrbty=1-1;
  2186  003DC2  0E00               	movlw	0
  2187  003DC4  64D9               	cpfsgt	fsr2l,c
  2188  003DC6  D001               	goto	l104
  2189  003DC8  6AD9               	clrf	fsr2l,c
  2190  003DCA                     l104:
  2191                           ;wsw2.c: 607: if(bt) wbty[nrbty]|=1<<nrbit;
  2192  003DCA  0100               	movlb	__Lparam shr (0+8)
  2193  003DCC  51A9               	movf	(?_SetWbtyBit+1)^(__Lparam& (0+65280)),w
  2194  003DCE  C0A8  F001         	movff	?_SetWbtyBit,btemp+1
  2195  003DD2  0E01               	movlw	1
  2196  003DD4  E010               	bz	L5
  2197  003DD6  6E00               	movwf	btemp,c
  2198  003DD8  2A01               	incf	btemp+1,f,c
  2199  003DDA  D002               	goto	u1034
  2200  003DDC                     u1035:
  2201  003DDC  90D8               	bcf	status,0,c
  2202  003DDE  3600               	rlcf	btemp,f,c
  2203  003DE0                     u1034:
  2204  003DE0  2E01               	decfsz	btemp+1,f,c
  2205  003DE2  D7FC               	goto	u1035
  2206  003DE4  50D9               	movf	fsr2l,w,c
  2207  003DE6  EE0F  F039         	lfsr	0,_wbty
  2208  003DEA  26E9               	addwf	fsr0l,f,c
  2209  003DEC  0E00               	movlw	0
  2210  003DEE  22EA               	addwfc	fsr0h,f,c
  2211  003DF0  5000               	movf	btemp,w,c
  2212  003DF2  12EF               	iorwf	indf0,f,c
  2213  003DF4  0012               	return	
  2214                           ;wsw2.c: 608: else wbty[nrbty]&=~(1<<nrbit);
  2215  003DF6                     L5:
  2216  003DF6  6E00               	movwf	btemp,c
  2217  003DF8  2A01               	incf	btemp+1,f,c
  2218  003DFA  D002               	goto	u1044
  2219  003DFC                     u1045:
  2220  003DFC  90D8               	bcf	status,0,c
  2221  003DFE  3600               	rlcf	btemp,f,c
  2222  003E00                     u1044:
  2223  003E00  2E01               	decfsz	btemp+1,f,c
  2224  003E02  D7FC               	goto	u1045
  2225  003E04  1E00               	comf	btemp,f,c
  2226  003E06  50D9               	movf	fsr2l,w,c
  2227  003E08  EE0F  F039         	lfsr	0,_wbty
  2228  003E0C  26E9               	addwf	fsr0l,f,c
  2229  003E0E  0E00               	movlw	0
  2230  003E10  22EA               	addwfc	fsr0h,f,c
  2231  003E12  5000               	movf	btemp,w,c
  2232  003E14  16EF               	andwf	indf0,f,c
  2233                           ;wsw2.c: 609: }
  2234  003E16  0012               	return	
  2235  003E18                     __end_of_SetWbtyBit:
  2236                           ;wsw2.c: 612: void Swbty(unsigned char dtd)
  2237                           ;wsw2.c: 613: {
  2238  003E18                     _Swbty:
  2239  000000                     
  2240                           ; _dtd loaded to fsr2l
  2241  003E18  6ED9               	movwf	fsr2l,c
  2242                           ;wsw2.c: 614: unsigned char mask;
  2243  003E1A  0E0F               	movlw	15
  2244  003E1C  16D9               	andwf	fsr2l,f,c
  2245                           ;wsw2.c: 616: mask=~(wsdid&dtd);
  2246  003E1E  50D9               	movf	fsr2l,w,c
  2247  003E20  010F               	movlb	_wsdid shr (0+8)
  2248  003E22  1538               	andwf	_wsdid& (0+255),w,b
  2249  003E24  0AFF               	xorlw	255
  2250  003E26  6EE1               	movwf	fsr1l,c
  2251                           ;wsw2.c: 620: wbty[1]|=0x0f;
  2252  003E28  010F               	movlb	(_wbty+1) shr (0+8)
  2253  003E2A  0E0F               	movlw	15
  2254  003E2C  133A               	iorwf	(_wbty+1)& (0+255),f,b
  2255                           ;wsw2.c: 621: wbty[1]&=~(dtd|(wsdid&mask));
  2256  003E2E  50E1               	movf	fsr1l,w,c
  2257  003E30  010F               	movlb	_wsdid shr (0+8)
  2258  003E32  1538               	andwf	_wsdid& (0+255),w,b
  2259  003E34  6E00               	movwf	btemp,c
  2260  003E36  10D9               	iorwf	fsr2l,w,c
  2261  003E38  0AFF               	xorlw	255
  2262  003E3A  010F               	movlb	(_wbty+1) shr (0+8)
  2263  003E3C  173A               	andwf	(_wbty+1)& (0+255),f,b
  2264                           ;wsw2.c: 627: }
  2265  003E3E  0012               	return	
  2266  003E40                     __end_of_Swbty:
  2267                           ;wsw2.c: 629: void Rwbty(unsigned char dtd)
  2268                           ;wsw2.c: 630: {
  2269  003E40                     _Rwbty:
  2270  000000                     
  2271                           ; _dtd loaded to fsr2l
  2272  003E40  6ED9               	movwf	fsr2l,c
  2273                           ;wsw2.c: 631: unsigned char mask;
  2274  003E42  0E0F               	movlw	15
  2275  003E44  16D9               	andwf	fsr2l,f,c
  2276                           ;wsw2.c: 634: mask=~(wsdid&dtd);
  2277  003E46  50D9               	movf	fsr2l,w,c
  2278  003E48  010F               	movlb	_wsdid shr (0+8)
  2279  003E4A  1538               	andwf	_wsdid& (0+255),w,b
  2280  003E4C  0AFF               	xorlw	255
  2281  003E4E  6EE1               	movwf	fsr1l,c
  2282                           ;wsw2.c: 637: wbty[1]|=0x0f;
  2283  003E50  010F               	movlb	(_wbty+1) shr (0+8)
  2284  003E52  0E0F               	movlw	15
  2285  003E54  133A               	iorwf	(_wbty+1)& (0+255),f,b
  2286                           ;wsw2.c: 638: wbty[1]&=~((~dtd)&(wsdid&mask));
  2287  003E56  CF38  F000         	movff	_wsdid,btemp
  2288  003E5A  1CD9               	comf	fsr2l,w,c
  2289  003E5C  6E01               	movwf	btemp+1,c
  2290  003E5E  1600               	andwf	btemp,f,c
  2291  003E60  50E1               	movf	fsr1l,w,c
  2292  003E62  1400               	andwf	btemp,w,c
  2293  003E64  0AFF               	xorlw	255
  2294  003E66  173A               	andwf	(_wbty+1)& (0+255),f,b
  2295                           ;wsw2.c: 644: }
  2296  003E68  0012               	return	
  2297  003E6A                     __end_of_Rwbty:
  2298                           ;wsw2.c: 646: void Swsdid(unsigned char dtd)
  2299                           ;wsw2.c: 647: {
  2300  003E6A                     _Swsdid:
  2301  000000                     
  2302                           ; _dtd loaded to fsr2l
  2303  003E6A  6ED9               	movwf	fsr2l,c
  2304                           ;wsw2.c: 648: dtd=dtd&0x0f;
  2305  003E6C  0E0F               	movlw	15
  2306  003E6E  16D9               	andwf	fsr2l,f,c
  2307                           ;wsw2.c: 649: wsdid|=dtd;
  2308  003E70  50D9               	movf	fsr2l,w,c
  2309  003E72  010F               	movlb	_wsdid shr (0+8)
  2310  003E74  1338               	iorwf	_wsdid& (0+255),f,b
  2311                           ;wsw2.c: 650: }
  2312  003E76  0012               	return	
  2313  003E78                     __end_of_Swsdid:
  2314                           ;wsw2.c: 652: void Rwsdid(unsigned char dtd)
  2315                           ;wsw2.c: 653: {
  2316  003E78                     _Rwsdid:
  2317  000000                     
  2318                           ; _dtd loaded to fsr2l
  2319  003E78  6ED9               	movwf	fsr2l,c
  2320                           ;wsw2.c: 654: dtd=dtd&0x0f;
  2321  003E7A  0E0F               	movlw	15
  2322  003E7C  16D9               	andwf	fsr2l,f,c
  2323                           ;wsw2.c: 655: wsdid&=~(dtd);
  2324  003E7E  1CD9               	comf	fsr2l,w,c
  2325  003E80  010F               	movlb	_wsdid shr (0+8)
  2326  003E82  1738               	andwf	_wsdid& (0+255),f,b
  2327                           ;wsw2.c: 656: }
  2328  003E84  0012               	return	
  2329  003E86                     __end_of_Rwsdid:
  2330                           ;wsw2.c: 661: void WswOff(void)
  2331                           ;wsw2.c: 662: {
  2332  003E86                     _WswOff:
  2333  000000                     
  2334                           ;wsw2.c: 663: LedData.setOff=1;
  2335  003E86  0101               	movlb	_LedData shr (0+8)
  2336  003E88  81AE               	bsf	_LedData& (0+255),0,b
  2337                           ;wsw2.c: 664: }
  2338  003E8A  0012               	return	
  2339  003E8C                     __end_of_WswOff:
  2340                           ;wsw2.c: 666: void WswOn(void)
  2341                           ;wsw2.c: 667: {
  2342  003E8C                     _WswOn:
  2343  000000                     
  2344                           ;wsw2.c: 668: LedData.setOff=0;
  2345  003E8C  0101               	movlb	_LedData shr (0+8)
  2346  003E8E  91AE               	bcf	_LedData& (0+255),0,b
  2347                           ;wsw2.c: 669: }
  2348  003E90  0012               	return	
  2349  003E92                     __end_of_WswOn:
  2350                           ;wsw2.c: 674: void SetData(WPack *wData,const un
      +                          signed char wdt1,const unsigned char wdt0)
  2351                           ;wsw2.c: 675: {
  2352  003E92  00AB               	dw	?_SetData
  2353  003E94                     _SetData:
  2354  000000                     
  2355                           ;wsw2.c: 676: (*wData).Dt.Data1=wdt1;
  2356                           ; _wData loaded to fsr1
  2357  003E94  C0AB  FFE1         	movff	?_SetData,fsr1l
  2358  003E98  C0AC  FFE2         	movff	?_SetData+1,fsr1h
  2359  003E9C  EE00 F002          	lfsr	0,2
  2360  003EA0  50E1               	movf	fsr1l,w,c
  2361  003EA2  26E9               	addwf	fsr0l,f,c
  2362  003EA4  50E2               	movf	fsr1h,w,c
  2363  003EA6  22EA               	addwfc	fsr0h,f,c
  2364  003EA8  C0AD  FFEF         	movff	?_SetData+2,indf0
  2365                           ;wsw2.c: 677: (*wData).Dt.Data0=wdt0;
  2366  003EAC  EE00 F003          	lfsr	0,3
  2367  003EB0  50E1               	movf	fsr1l,w,c
  2368  003EB2  26E9               	addwf	fsr0l,f,c
  2369  003EB4  50E2               	movf	fsr1h,w,c
  2370  003EB6  22EA               	addwfc	fsr0h,f,c
  2371  003EB8  C0AE  FFEF         	movff	?_SetData+3,indf0
  2372                           ;wsw2.c: 678: }
  2373  003EBC  0012               	return	
  2374  003EBE                     __end_of_SetData:
  2375                           ;wsw2.c: 683: void SetStatus(WPack *wData,const 
      +                          unsigned int wst,const unsigned int mask)
  2376                           ;wsw2.c: 684: {
  2377  003EBE  00AB               	dw	?_SetStatus
  2378  003EC0                     _SetStatus:
  2379  000000                     
  2380                           ; _wData loaded to fsr1
  2381  003EC0  C0AB  FFE1         	movff	?_SetStatus,fsr1l
  2382  003EC4  C0AC  FFE2         	movff	?_SetStatus+1,fsr1h
  2383                           ;wsw2.c: 685: if (mask&0b1000000000000000)(*wDat
      +                          a).St.focus=(wst&0b1000000000000000)?1:0;
  2384  003EC8  0100               	movlb	__Lparam shr (0+8)
  2385  003ECA  AFB0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),7,b
  2386  003ECC  D008               	goto	l115
  2387  003ECE  0E00               	movlw	0
  2388  003ED0  BFAE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),7,b
  2389  003ED2  0E01               	movlw	1
  2390  003ED4  6E00               	movwf	btemp,c
  2391  003ED6  18E7               	xorwf	indf1,w,c
  2392  003ED8  0BFE               	andlw	-2
  2393  003EDA  1800               	xorwf	btemp,w,c
  2394  003EDC  6EE7               	movwf	indf1,c
  2395  003EDE                     l115:
  2396                           ;wsw2.c: 686: if (mask&0b0100000000000000)(*wDat
      +                          a).St.dec=(wst&0b0100000000000000)?1:0;
  2397  003EDE  0100               	movlb	__Lparam shr (0+8)
  2398  003EE0  ADB0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),6,b
  2399  003EE2  D00A               	goto	l116
  2400  003EE4  0E00               	movlw	0
  2401  003EE6  BDAE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),6,b
  2402  003EE8  0E01               	movlw	1
  2403  003EEA  6E00               	movwf	btemp,c
  2404  003EEC  3600               	rlcf	btemp,f,c
  2405  003EEE  50E7               	movf	indf1,w,c
  2406  003EF0  1800               	xorwf	btemp,w,c
  2407  003EF2  0BFD               	andlw	-3
  2408  003EF4  1800               	xorwf	btemp,w,c
  2409  003EF6  6EE7               	movwf	indf1,c
  2410  003EF8                     l116:
  2411                           ;wsw2.c: 687: if (mask&0b0010000000000000)(*wDat
      +                          a).St.hex=(wst&0b0010000000000000)?1:0;
  2412  003EF8  0100               	movlb	__Lparam shr (0+8)
  2413  003EFA  ABB0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),5,b
  2414  003EFC  D00B               	goto	l117
  2415  003EFE  0E00               	movlw	0
  2416  003F00  BBAE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),5,b
  2417  003F02  0E01               	movlw	1
  2418  003F04  6E00               	movwf	btemp,c
  2419  003F06  3600               	rlcf	btemp,f,c
  2420  003F08  3600               	rlcf	btemp,f,c
  2421  003F0A  50E7               	movf	indf1,w,c
  2422  003F0C  1800               	xorwf	btemp,w,c
  2423  003F0E  0BFB               	andlw	-5
  2424  003F10  1800               	xorwf	btemp,w,c
  2425  003F12  6EE7               	movwf	indf1,c
  2426  003F14                     l117:
  2427                           ;wsw2.c: 688: if (mask&0b0001000000000000)(*wDat
      +                          a).St.autoOFF=(wst&0b0001000000000000)?1:0;
  2428  003F14  0100               	movlb	__Lparam shr (0+8)
  2429  003F16  A9B0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),4,b
  2430  003F18  D00C               	goto	l118
  2431  003F1A  0E00               	movlw	0
  2432  003F1C  B9AE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),4,b
  2433  003F1E  0E01               	movlw	1
  2434  003F20  6E00               	movwf	btemp,c
  2435  003F22  3600               	rlcf	btemp,f,c
  2436  003F24  3600               	rlcf	btemp,f,c
  2437  003F26  3600               	rlcf	btemp,f,c
  2438  003F28  50E7               	movf	indf1,w,c
  2439  003F2A  1800               	xorwf	btemp,w,c
  2440  003F2C  0BF7               	andlw	-9
  2441  003F2E  1800               	xorwf	btemp,w,c
  2442  003F30  6EE7               	movwf	indf1,c
  2443  003F32                     l118:
  2444                           ;wsw2.c: 689: if (mask&0b0000100000000000)(*wDat
      +                          a).St.kropka0=(wst&0b0000100000000000)?1:0;
  2445  003F32  0100               	movlb	__Lparam shr (0+8)
  2446  003F34  A7B0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),3,b
  2447  003F36  D00A               	goto	l119
  2448  003F38  0E00               	movlw	0
  2449  003F3A  B7AE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),3,b
  2450  003F3C  0E01               	movlw	1
  2451  003F3E  6E00               	movwf	btemp,c
  2452  003F40  3A00               	swapf	btemp,f,c
  2453  003F42  50E7               	movf	indf1,w,c
  2454  003F44  1800               	xorwf	btemp,w,c
  2455  003F46  0BEF               	andlw	-17
  2456  003F48  1800               	xorwf	btemp,w,c
  2457  003F4A  6EE7               	movwf	indf1,c
  2458  003F4C                     l119:
  2459                           ;wsw2.c: 690: if (mask&0b0000010000000000)(*wDat
      +                          a).St.kropka1=(wst&0b0000010000000000)?1:0;
  2460  003F4C  0100               	movlb	__Lparam shr (0+8)
  2461  003F4E  A5B0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),2,b
  2462  003F50  D00B               	goto	l120
  2463  003F52  0E00               	movlw	0
  2464  003F54  B5AE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),2,b
  2465  003F56  0E01               	movlw	1
  2466  003F58  6E00               	movwf	btemp,c
  2467  003F5A  3A00               	swapf	btemp,f,c
  2468  003F5C  3600               	rlcf	btemp,f,c
  2469  003F5E  50E7               	movf	indf1,w,c
  2470  003F60  1800               	xorwf	btemp,w,c
  2471  003F62  0BDF               	andlw	-33
  2472  003F64  1800               	xorwf	btemp,w,c
  2473  003F66  6EE7               	movwf	indf1,c
  2474  003F68                     l120:
  2475                           ;wsw2.c: 691: if (mask&0b0000001000000000)(*wDat
      +                          a).St.wygas0=(wst&0b0000001000000000)?1:0;
  2476  003F68  0100               	movlb	__Lparam shr (0+8)
  2477  003F6A  A3B0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),1,b
  2478  003F6C  D00C               	goto	l121
  2479  003F6E  0E00               	movlw	0
  2480  003F70  B3AE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),1,b
  2481  003F72  0E01               	movlw	1
  2482  003F74  6E00               	movwf	btemp,c
  2483  003F76  3A00               	swapf	btemp,f,c
  2484  003F78  3600               	rlcf	btemp,f,c
  2485  003F7A  3600               	rlcf	btemp,f,c
  2486  003F7C  50E7               	movf	indf1,w,c
  2487  003F7E  1800               	xorwf	btemp,w,c
  2488  003F80  0BBF               	andlw	-65
  2489  003F82  1800               	xorwf	btemp,w,c
  2490  003F84  6EE7               	movwf	indf1,c
  2491  003F86                     l121:
  2492                           ;wsw2.c: 692: if (mask&0b0000000100000000)(*wDat
      +                          a).St.wygas1=(wst&0b0000000100000000)?1:0;
  2493  003F86  0100               	movlb	__Lparam shr (0+8)
  2494  003F88  A1B0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),0,b
  2495  003F8A  D00B               	goto	l122
  2496  003F8C  0E00               	movlw	0
  2497  003F8E  B1AE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),0,b
  2498  003F90  0E01               	movlw	1
  2499  003F92  6E00               	movwf	btemp,c
  2500  003F94  3200               	rrcf	btemp,f,c
  2501  003F96  3200               	rrcf	btemp,f,c
  2502  003F98  50E7               	movf	indf1,w,c
  2503  003F9A  1800               	xorwf	btemp,w,c
  2504  003F9C  0B7F               	andlw	-129
  2505  003F9E  1800               	xorwf	btemp,w,c
  2506  003FA0  6EE7               	movwf	indf1,c
  2507  003FA2                     l122:
  2508                           ;wsw2.c: 693: if (mask&0b0000000010000000)(*wDat
      +                          a).St.led0=(wst&0b0000000010000000)?1:0;
  2509  003FA2  0100               	movlb	__Lparam shr (0+8)
  2510  003FA4  AFAF               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),7,b
  2511  003FA6  D00F               	goto	l123
  2512  003FA8  0E00               	movlw	0
  2513  003FAA  BFAD               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),7,b
  2514  003FAC  0E01               	movlw	1
  2515  003FAE  6E00               	movwf	btemp,c
  2516  003FB0  EE00 F001          	lfsr	0,1
  2517  003FB4  50E1               	movf	fsr1l,w,c
  2518  003FB6  26E9               	addwf	fsr0l,f,c
  2519  003FB8  50E2               	movf	fsr1h,w,c
  2520  003FBA  22EA               	addwfc	fsr0h,f,c
  2521  003FBC  50EF               	movf	indf0,w,c
  2522  003FBE  1800               	xorwf	btemp,w,c
  2523  003FC0  0BFE               	andlw	-2
  2524  003FC2  1800               	xorwf	btemp,w,c
  2525  003FC4  6EEF               	movwf	indf0,c
  2526  003FC6                     l123:
  2527                           ;wsw2.c: 694: if (mask&0b0000000001000000)(*wDat
      +                          a).St.led1=(wst&0b0000000001000000)?1:0;
  2528  003FC6  0100               	movlb	__Lparam shr (0+8)
  2529  003FC8  ADAF               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),6,b
  2530  003FCA  D010               	goto	l124
  2531  003FCC  0E00               	movlw	0
  2532  003FCE  BDAD               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),6,b
  2533  003FD0  0E01               	movlw	1
  2534  003FD2  6E00               	movwf	btemp,c
  2535  003FD4  EE00 F001          	lfsr	0,1
  2536  003FD8  50E1               	movf	fsr1l,w,c
  2537  003FDA  26E9               	addwf	fsr0l,f,c
  2538  003FDC  50E2               	movf	fsr1h,w,c
  2539  003FDE  22EA               	addwfc	fsr0h,f,c
  2540  003FE0  3600               	rlcf	btemp,f,c
  2541  003FE2  50EF               	movf	indf0,w,c
  2542  003FE4  1800               	xorwf	btemp,w,c
  2543  003FE6  0BFD               	andlw	-3
  2544  003FE8  1800               	xorwf	btemp,w,c
  2545  003FEA  6EEF               	movwf	indf0,c
  2546  003FEC                     l124:
  2547                           ;wsw2.c: 695: if (mask&0b0000000000100000)(*wDat
      +                          a).St.sdiode=(wst&0b0000000000100000)?1:0;
  2548  003FEC  0100               	movlb	__Lparam shr (0+8)
  2549  003FEE  ABAF               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),5,b
  2550  003FF0  D011               	goto	l125
  2551  003FF2  0E00               	movlw	0
  2552  003FF4  BBAD               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),5,b
  2553  003FF6  0E01               	movlw	1
  2554  003FF8  6E00               	movwf	btemp,c
  2555  003FFA  EE00 F001          	lfsr	0,1
  2556  003FFE  50E1               	movf	fsr1l,w,c
  2557  004000  26E9               	addwf	fsr0l,f,c
  2558  004002  50E2               	movf	fsr1h,w,c
  2559  004004  22EA               	addwfc	fsr0h,f,c
  2560  004006  3600               	rlcf	btemp,f,c
  2561  004008  3600               	rlcf	btemp,f,c
  2562  00400A  50EF               	movf	indf0,w,c
  2563  00400C  1800               	xorwf	btemp,w,c
  2564  00400E  0BFB               	andlw	-5
  2565  004010  1800               	xorwf	btemp,w,c
  2566  004012  6EEF               	movwf	indf0,c
  2567  004014                     l125:
  2568                           ;wsw2.c: 696: if (mask&0b0000000000010000)(*wDat
      +                          a).St.rdiode=(wst&0b0000000000010000)?1:0;
  2569  004014  0100               	movlb	__Lparam shr (0+8)
  2570  004016  A9AF               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),4,b
  2571  004018  D012               	goto	l126
  2572  00401A  0E00               	movlw	0
  2573  00401C  B9AD               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),4,b
  2574  00401E  0E01               	movlw	1
  2575  004020  6E00               	movwf	btemp,c
  2576  004022  EE00 F001          	lfsr	0,1
  2577  004026  50E1               	movf	fsr1l,w,c
  2578  004028  26E9               	addwf	fsr0l,f,c
  2579  00402A  50E2               	movf	fsr1h,w,c
  2580  00402C  22EA               	addwfc	fsr0h,f,c
  2581  00402E  3600               	rlcf	btemp,f,c
  2582  004030  3600               	rlcf	btemp,f,c
  2583  004032  3600               	rlcf	btemp,f,c
  2584  004034  50EF               	movf	indf0,w,c
  2585  004036  1800               	xorwf	btemp,w,c
  2586  004038  0BF7               	andlw	-9
  2587  00403A  1800               	xorwf	btemp,w,c
  2588  00403C  6EEF               	movwf	indf0,c
  2589  00403E                     l126:
  2590                           ;wsw2.c: 698: if (mask&0b0000000000001111)
  2591  00403E  0E0F               	movlw	15
  2592  004040  C0AF  F000         	movff	?_SetStatus+4,btemp
  2593  004044  C0B0  F001         	movff	?_SetStatus+5,btemp+1
  2594  004048  1600               	andwf	btemp,f,c
  2595  00404A  6A01               	clrf	btemp+1,c
  2596  00404C  5001               	movf	btemp+1,w,c
  2597  00404E  1000               	iorwf	btemp,w,c
  2598  004050  B4D8               	btfsc	status,2,c
  2599  004052  0012               	return	
  2600                           ;wsw2.c: 699: if(((*wData).St.sdiode||(*wData).S
      +                          t.rdiode)&&(wst&0b0000000000001111))
  2601  004054  EE00 F001          	lfsr	0,1
  2602  004058  50E1               	movf	fsr1l,w,c
  2603  00405A  26E9               	addwf	fsr0l,f,c
  2604  00405C  50E2               	movf	fsr1h,w,c
  2605  00405E  22EA               	addwfc	fsr0h,f,c
  2606  004060  50EF               	movf	indf0,w,c
  2607  004062  6E00               	movwf	btemp,c
  2608  004064  B400               	btfsc	btemp,2,c
  2609  004066  D00A               	goto	u1200
  2610  004068  EE00 F001          	lfsr	0,1
  2611  00406C  50E1               	movf	fsr1l,w,c
  2612  00406E  26E9               	addwf	fsr0l,f,c
  2613  004070  50E2               	movf	fsr1h,w,c
  2614  004072  22EA               	addwfc	fsr0h,f,c
  2615  004074  50EF               	movf	indf0,w,c
  2616  004076  6E00               	movwf	btemp,c
  2617  004078  A600               	btfss	btemp,3,c
  2618  00407A  0012               	return	
  2619  00407C                     u1200:
  2620  00407C  0E0F               	movlw	15
  2621  00407E  C0AD  F000         	movff	?_SetStatus+2,btemp
  2622  004082  C0AE  F001         	movff	?_SetStatus+3,btemp+1
  2623  004086  1600               	andwf	btemp,f,c
  2624  004088  6A01               	clrf	btemp+1,c
  2625  00408A  5001               	movf	btemp+1,w,c
  2626  00408C  1000               	iorwf	btemp,w,c
  2627  00408E  B4D8               	btfsc	status,2,c
  2628  004090  0012               	return	
  2629                           ;wsw2.c: 700: {
  2630  004092  C0AD  F000         	movff	?_SetStatus+2,btemp
  2631  004096  0E0F               	movlw	15
  2632  004098  1600               	andwf	btemp,f,c
  2633  00409A  EE00 F001          	lfsr	0,1
  2634  00409E  50E1               	movf	fsr1l,w,c
  2635  0040A0  26E9               	addwf	fsr0l,f,c
  2636  0040A2  50E2               	movf	fsr1h,w,c
  2637  0040A4  22EA               	addwfc	fsr0h,f,c
  2638  0040A6  3A00               	swapf	btemp,f,c
  2639  0040A8  50EF               	movf	indf0,w,c
  2640  0040AA  1800               	xorwf	btemp,w,c
  2641  0040AC  0B0F               	andlw	-241
  2642  0040AE  1800               	xorwf	btemp,w,c
  2643  0040B0  6EEF               	movwf	indf0,c
  2644                           ;wsw2.c: 702: }
  2645  0040B2  0012               	return	
  2646  0040B4                     __end_of_SetStatus:
  2647                           ;wsw2.c: 708: bit GetPoz(const unsigned char nrk
      +                          ol,const unsigned char nrpoz)
  2648                           ;wsw2.c: 709: {
  2649  0040B4  00A8               	dw	?_GetPoz
  2650  0040B6                     _GetPoz:
  2651  000000                     
  2652                           ; _nrkol loaded to fsr2l
  2653  0040B6  6ED9               	movwf	fsr2l,c
  2654                           ;wsw2.c: 710: if ((nrkol>=4)||(nrpoz>=Klj[nrkol]
      +                          .nPzc)) asm("RESET");
  2655  0040B8  0E03               	movlw	3
  2656  0040BA  64D9               	cpfsgt	fsr2l,c
  2657  0040BC  D001               	goto	u1231
  2658  0040BE  D012               	goto	u1250
  2659  0040C0                     u1231:
  2660  0040C0  50D9               	movf	fsr2l,w,c
  2661  0040C2  0D03               	mullw	3
  2662  0040C4  50F3               	movf	prodl,w,c
  2663  0040C6  0F88               	addlw	low _Klj
  2664  0040C8  6EF6               	movwf	tblptrl,c
  2665  0040CA  50F4               	movf	prodh,w,c
  2666  0040CC  6EF7               	movwf	tblptrh,c
  2667  0040CE  0E10               	movlw	high _Klj
  2668  0040D0  22F7               	addwfc	tblptrh,f,c
  2669  0040D2  0E02               	movlw	2
  2670  0040D4  26F6               	addwf	tblptrl,f,c
  2671  0040D6  0E00               	movlw	0
  2672  0040D8  22F7               	addwfc	tblptrh,f,c
  2673  0040DA  0008               	tblrd		*
  2674  0040DC  50F5               	movf	tablat,w,c
  2675  0040DE  0100               	movlb	__Lparam shr (0+8)
  2676  0040E0  5DA8               	subwf	?_GetPoz^(__Lparam& (0+65280)),w
  2677  0040E2  B0D8               	btfsc	status,0,c
  2678  0040E4                     u1250:
  2679  0040E4  00FF               	reset		;#
  2680                           ;wsw2.c: 711: return (*Klj[nrkol].KL).KFc[nrpoz]
      +                          .focus;
  2681  0040E6  50D9               	movf	fsr2l,w,c
  2682  0040E8  0D03               	mullw	3
  2683  0040EA  50F3               	movf	prodl,w,c
  2684  0040EC  0F88               	addlw	low _Klj
  2685  0040EE  6EF6               	movwf	tblptrl,c
  2686  0040F0  50F4               	movf	prodh,w,c
  2687  0040F2  6EF7               	movwf	tblptrh,c
  2688  0040F4  0E10               	movlw	high _Klj
  2689  0040F6  22F7               	addwfc	tblptrh,f,c
  2690  0040F8  0009               	tblrd		*+
  2691  0040FA  CFF5 F000          	movff	tablat,btemp
  2692  0040FE  0009               	tblrd		*+
  2693  004100  CFF5 F001          	movff	tablat,btemp+1
  2694  004104  0E06               	movlw	6
  2695  004106  2600               	addwf	btemp,f,c
  2696  004108  0E00               	movlw	0
  2697  00410A  2201               	addwfc	btemp+1,f,c
  2698  00410C  C000  FFF6         	movff	btemp,tblptrl
  2699  004110  C001  FFF7         	movff	btemp+1,tblptrh
  2700  004114  0E0F               	movlw	(high __ramtop+-1)
  2701  004116  64F7               	cpfsgt	tblptrh,c
  2702  004118  D007               	bra	u1267
  2703  00411A  0009               	tblrd		*+
  2704  00411C  CFF5 F000          	movff	tablat,btemp
  2705  004120  0009               	tblrd		*+
  2706  004122  CFF5 F001          	movff	tablat,btemp+1
  2707  004126  D008               	bra	u1260
  2708  004128                     u1267:
  2709  004128  CFF6 FFE9          	movff	tblptrl,fsr0l
  2710  00412C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2711  004130  CFEE F000          	movff	postinc0,btemp
  2712  004134  CFEE F001          	movff	postinc0,btemp+1
  2713  004138                     u1260:
  2714  004138  0100               	movlb	__Lparam shr (0+8)
  2715  00413A  51A8               	movf	?_GetPoz^(__Lparam& (0+65280)),w
  2716  00413C  2400               	addwf	btemp,w,c
  2717  00413E  6EE9               	movwf	fsr0l,c
  2718  004140  0E00               	movlw	0
  2719  004142  2001               	addwfc	btemp+1,w,c
  2720  004144  6EEA               	movwf	fsr0h,c
  2721  004146  50EF               	movf	indf0,w,c
  2722  004148  0B01               	andlw	1
  2723  00414A  6E00               	movwf	btemp,c
  2724  00414C  3000               	rrcf	btemp,w,c
  2725  00414E  0012               	return	
  2726                           ;wsw2.c: 712: }
  2727  004150                     __end_of_GetPoz:
  2728                           ;wsw2.c: 714: void SetPoz(const unsigned char nr
      +                          kol,const unsigned char nrpoz)
  2729                           ;wsw2.c: 715: {
  2730  004150  00AB               	dw	?_SetPoz
  2731  004152                     _SetPoz:
  2732  000000                     
  2733                           ; _nrkol loaded to fsr2l
  2734  004152  6ED9               	movwf	fsr2l,c
  2735                           ;wsw2.c: 716: if ((nrkol>=4)||(nrpoz>=Klj[nrkol]
      +                          .nPzc)) asm("RESET");
  2736  004154  0E03               	movlw	3
  2737  004156  64D9               	cpfsgt	fsr2l,c
  2738  004158  D001               	goto	u1271
  2739  00415A  D012               	goto	u1290
  2740  00415C                     u1271:
  2741  00415C  50D9               	movf	fsr2l,w,c
  2742  00415E  0D03               	mullw	3
  2743  004160  50F3               	movf	prodl,w,c
  2744  004162  0F88               	addlw	low _Klj
  2745  004164  6EF6               	movwf	tblptrl,c
  2746  004166  50F4               	movf	prodh,w,c
  2747  004168  6EF7               	movwf	tblptrh,c
  2748  00416A  0E10               	movlw	high _Klj
  2749  00416C  22F7               	addwfc	tblptrh,f,c
  2750  00416E  0E02               	movlw	2
  2751  004170  26F6               	addwf	tblptrl,f,c
  2752  004172  0E00               	movlw	0
  2753  004174  22F7               	addwfc	tblptrh,f,c
  2754  004176  0008               	tblrd		*
  2755  004178  50F5               	movf	tablat,w,c
  2756  00417A  0100               	movlb	__Lparam shr (0+8)
  2757  00417C  5DAB               	subwf	?_SetPoz^(__Lparam& (0+65280)),w
  2758  00417E  B0D8               	btfsc	status,0,c
  2759  004180                     u1290:
  2760  004180  00FF               	reset		;#
  2761                           ;wsw2.c: 717: (*Klj[nrkol].KL).KFc[nrpoz].focus=
      +                          1;
  2762  004182  50D9               	movf	fsr2l,w,c
  2763  004184  0D03               	mullw	3
  2764  004186  50F3               	movf	prodl,w,c
  2765  004188  0F88               	addlw	low _Klj
  2766  00418A  6EF6               	movwf	tblptrl,c
  2767  00418C  50F4               	movf	prodh,w,c
  2768  00418E  6EF7               	movwf	tblptrh,c
  2769  004190  0E10               	movlw	high _Klj
  2770  004192  22F7               	addwfc	tblptrh,f,c
  2771  004194  0009               	tblrd		*+
  2772  004196  CFF5 F000          	movff	tablat,btemp
  2773  00419A  0009               	tblrd		*+
  2774  00419C  CFF5 F001          	movff	tablat,btemp+1
  2775  0041A0  0E06               	movlw	6
  2776  0041A2  2600               	addwf	btemp,f,c
  2777  0041A4  0E00               	movlw	0
  2778  0041A6  2201               	addwfc	btemp+1,f,c
  2779  0041A8  C000  FFF6         	movff	btemp,tblptrl
  2780  0041AC  C001  FFF7         	movff	btemp+1,tblptrh
  2781  0041B0  0E0F               	movlw	(high __ramtop+-1)
  2782  0041B2  64F7               	cpfsgt	tblptrh,c
  2783  0041B4  D007               	bra	u1307
  2784  0041B6  0009               	tblrd		*+
  2785  0041B8  CFF5 F000          	movff	tablat,btemp
  2786  0041BC  0009               	tblrd		*+
  2787  0041BE  CFF5 F001          	movff	tablat,btemp+1
  2788  0041C2  D008               	bra	u1300
  2789  0041C4                     u1307:
  2790  0041C4  CFF6 FFE9          	movff	tblptrl,fsr0l
  2791  0041C8  CFF7 FFEA          	movff	tblptrh,fsr0h
  2792  0041CC  CFEE F000          	movff	postinc0,btemp
  2793  0041D0  CFEE F001          	movff	postinc0,btemp+1
  2794  0041D4                     u1300:
  2795  0041D4  0100               	movlb	__Lparam shr (0+8)
  2796  0041D6  51AB               	movf	?_SetPoz^(__Lparam& (0+65280)),w
  2797  0041D8  2400               	addwf	btemp,w,c
  2798  0041DA  6EE9               	movwf	fsr0l,c
  2799  0041DC  0E00               	movlw	0
  2800  0041DE  2001               	addwfc	btemp+1,w,c
  2801  0041E0  6EEA               	movwf	fsr0h,c
  2802  0041E2  50EF               	movf	indf0,w,c
  2803  0041E4  0BFE               	andlw	-2
  2804  0041E6  0901               	iorlw	1
  2805  0041E8  6EEF               	movwf	indf0,c
  2806                           ;wsw2.c: 718: KInd[nrkol].reset=0;
  2807  0041EA  50D9               	movf	fsr2l,w,c
  2808  0041EC  EE0F  F03B         	lfsr	0,_KInd
  2809  0041F0  26E9               	addwf	fsr0l,f,c
  2810  0041F2  0E00               	movlw	0
  2811  0041F4  22EA               	addwfc	fsr0h,f,c
  2812  0041F6  0EFD               	movlw	-3
  2813  0041F8  16EF               	andwf	indf0,f,c
  2814                           ;wsw2.c: 719: }
  2815  0041FA  0CFD               	retlw	253
  2816  0041FC                     __end_of_SetPoz:
  2817                           ;wsw2.c: 721: void ResetPoz(const unsigned char 
      +                          nrkol,const unsigned char nrpoz)
  2818                           ;wsw2.c: 722: {
  2819  0041FC  00A8               	dw	?_ResetPoz
  2820  0041FE                     _ResetPoz:
  2821  000000                     
  2822                           ; _nrkol loaded to fsr2l
  2823  0041FE  6ED9               	movwf	fsr2l,c
  2824                           ;wsw2.c: 723: if ((nrkol>=4)||(nrpoz>=Klj[nrkol]
      +                          .nPzc)) asm("RESET");
  2825  004200  0E03               	movlw	3
  2826  004202  64D9               	cpfsgt	fsr2l,c
  2827  004204  D001               	goto	u1311
  2828  004206  D012               	goto	u1330
  2829  004208                     u1311:
  2830  004208  50D9               	movf	fsr2l,w,c
  2831  00420A  0D03               	mullw	3
  2832  00420C  50F3               	movf	prodl,w,c
  2833  00420E  0F88               	addlw	low _Klj
  2834  004210  6EF6               	movwf	tblptrl,c
  2835  004212  50F4               	movf	prodh,w,c
  2836  004214  6EF7               	movwf	tblptrh,c
  2837  004216  0E10               	movlw	high _Klj
  2838  004218  22F7               	addwfc	tblptrh,f,c
  2839  00421A  0E02               	movlw	2
  2840  00421C  26F6               	addwf	tblptrl,f,c
  2841  00421E  0E00               	movlw	0
  2842  004220  22F7               	addwfc	tblptrh,f,c
  2843  004222  0008               	tblrd		*
  2844  004224  50F5               	movf	tablat,w,c
  2845  004226  0100               	movlb	__Lparam shr (0+8)
  2846  004228  5DA8               	subwf	?_ResetPoz^(__Lparam& (0+65280)),w
  2847  00422A  B0D8               	btfsc	status,0,c
  2848  00422C                     u1330:
  2849  00422C  00FF               	reset		;#
  2850                           ;wsw2.c: 724: (*Klj[nrkol].KL).KFc[nrpoz].focus=
      +                          0;
  2851  00422E  50D9               	movf	fsr2l,w,c
  2852  004230  0D03               	mullw	3
  2853  004232  50F3               	movf	prodl,w,c
  2854  004234  0F88               	addlw	low _Klj
  2855  004236  6EF6               	movwf	tblptrl,c
  2856  004238  50F4               	movf	prodh,w,c
  2857  00423A  6EF7               	movwf	tblptrh,c
  2858  00423C  0E10               	movlw	high _Klj
  2859  00423E  22F7               	addwfc	tblptrh,f,c
  2860  004240  0009               	tblrd		*+
  2861  004242  CFF5 F000          	movff	tablat,btemp
  2862  004246  0009               	tblrd		*+
  2863  004248  CFF5 F001          	movff	tablat,btemp+1
  2864  00424C  0E06               	movlw	6
  2865  00424E  2600               	addwf	btemp,f,c
  2866  004250  0E00               	movlw	0
  2867  004252  2201               	addwfc	btemp+1,f,c
  2868  004254  C000  FFF6         	movff	btemp,tblptrl
  2869  004258  C001  FFF7         	movff	btemp+1,tblptrh
  2870  00425C  0E0F               	movlw	(high __ramtop+-1)
  2871  00425E  64F7               	cpfsgt	tblptrh,c
  2872  004260  D007               	bra	u1347
  2873  004262  0009               	tblrd		*+
  2874  004264  CFF5 F000          	movff	tablat,btemp
  2875  004268  0009               	tblrd		*+
  2876  00426A  CFF5 F001          	movff	tablat,btemp+1
  2877  00426E  D008               	bra	u1340
  2878  004270                     u1347:
  2879  004270  CFF6 FFE9          	movff	tblptrl,fsr0l
  2880  004274  CFF7 FFEA          	movff	tblptrh,fsr0h
  2881  004278  CFEE F000          	movff	postinc0,btemp
  2882  00427C  CFEE F001          	movff	postinc0,btemp+1
  2883  004280                     u1340:
  2884  004280  0100               	movlb	__Lparam shr (0+8)
  2885  004282  51A8               	movf	?_ResetPoz^(__Lparam& (0+65280)),w
  2886  004284  2400               	addwf	btemp,w,c
  2887  004286  6EE9               	movwf	fsr0l,c
  2888  004288  0E00               	movlw	0
  2889  00428A  2001               	addwfc	btemp+1,w,c
  2890  00428C  6EEA               	movwf	fsr0h,c
  2891  00428E  0EFE               	movlw	-2
  2892  004290  16EF               	andwf	indf0,f,c
  2893                           ;wsw2.c: 725: }
  2894  004292  0CFE               	retlw	254
  2895  004294                     __end_of_ResetPoz:
  2896                           ;wsw2.c: 727: void ResetKol(const unsigned char 
      +                          nrkol)
  2897                           ;wsw2.c: 728: {
  2898  004294                     _ResetKol:
  2899  000000                     
  2900                           ; _nrkol loaded to fsr2l
  2901  004294  6ED9               	movwf	fsr2l,c
  2902                           ;wsw2.c: 729: if (nrkol>=4) asm("RESET");
  2903  004296  0E03               	movlw	3
  2904  004298  64D9               	cpfsgt	fsr2l,c
  2905  00429A  D001               	goto	l136
  2906  00429C  00FF               	reset		;#
  2907  00429E                     l136:
  2908                           ;wsw2.c: 730: KInd[nrkol].reset=1;
  2909  00429E  50D9               	movf	fsr2l,w,c
  2910  0042A0  EE0F  F03B         	lfsr	0,_KInd
  2911  0042A4  26E9               	addwf	fsr0l,f,c
  2912  0042A6  0E00               	movlw	0
  2913  0042A8  22EA               	addwfc	fsr0h,f,c
  2914  0042AA  50EF               	movf	indf0,w,c
  2915  0042AC  0BFD               	andlw	-3
  2916  0042AE  0902               	iorlw	2
  2917  0042B0  6EEF               	movwf	indf0,c
  2918                           ;wsw2.c: 731: }
  2919  0042B2  0012               	return	
  2920  0042B4                     __end_of_ResetKol:
  2921                           ;wsw2.c: 734: void RestartKol(const unsigned cha
      +                          r nrkol)
  2922                           ;wsw2.c: 735: {
  2923  0042B4                     _RestartKol:
  2924  000000                     
  2925                           ; _nrkol loaded to fsr2l
  2926  0042B4  6ED9               	movwf	fsr2l,c
  2927                           ;wsw2.c: 736: if (nrkol>=4) asm("RESET");
  2928  0042B6  0E03               	movlw	3
  2929  0042B8  64D9               	cpfsgt	fsr2l,c
  2930  0042BA  D001               	goto	l138
  2931  0042BC  00FF               	reset		;#
  2932  0042BE                     l138:
  2933                           ;wsw2.c: 737: KInd[nrkol].restart=1;
  2934  0042BE  50D9               	movf	fsr2l,w,c
  2935  0042C0  EE0F  F03B         	lfsr	0,_KInd
  2936  0042C4  26E9               	addwf	fsr0l,f,c
  2937  0042C6  0E00               	movlw	0
  2938  0042C8  22EA               	addwfc	fsr0h,f,c
  2939  0042CA  50EF               	movf	indf0,w,c
  2940  0042CC  0BFE               	andlw	-2
  2941  0042CE  0901               	iorlw	1
  2942  0042D0  6EEF               	movwf	indf0,c
  2943                           ;wsw2.c: 738: }
  2944  0042D2  0012               	return	
  2945  0042D4                     __end_of_RestartKol:
  2946                           ;wsw2.c: 740: void AllKolToFirstPoz(void)
  2947                           ;wsw2.c: 741: {
  2948  0042D4                     _AllKolToFirstPoz:
  2949  000000                     
  2950                           ;wsw2.c: 742: unsigned char j;
  2951  0042D4  6AD9               	clrf	fsr2l,c
  2952  0042D6                     l140:
  2953                           ;wsw2.c: 744: {
  2954  0042D6  50D9               	movf	fsr2l,w,c
  2955  0042D8  EE0F  F03B         	lfsr	0,_KInd
  2956  0042DC  26E9               	addwf	fsr0l,f,c
  2957  0042DE  0E00               	movlw	0
  2958  0042E0  22EA               	addwfc	fsr0h,f,c
  2959  0042E2  0E03               	movlw	-253
  2960  0042E4  16EF               	andwf	indf0,f,c
  2961                           ;wsw2.c: 746: KTim[j].ncS=0;
  2962  0042E6  50D9               	movf	fsr2l,w,c
  2963  0042E8  0D03               	mullw	3
  2964  0042EA  0EB5               	movlw	low _KTim
  2965  0042EC  24F3               	addwf	prodl,w,c
  2966  0042EE  6EE9               	movwf	fsr0l,c
  2967  0042F0  0E01               	movlw	high _KTim
  2968  0042F2  20F4               	addwfc	prodh,w,c
  2969  0042F4  6EEA               	movwf	fsr0h,c
  2970  0042F6  6AEF               	clrf	indf0,c
  2971                           ;wsw2.c: 747: KTim[j].ndS=0;
  2972  0042F8  50D9               	movf	fsr2l,w,c
  2973  0042FA  0D03               	mullw	3
  2974  0042FC  0EB6               	movlw	low (_KTim+1)
  2975  0042FE  24F3               	addwf	prodl,w,c
  2976  004300  6EE9               	movwf	fsr0l,c
  2977  004302  0E01               	movlw	high (_KTim+1)
  2978  004304  20F4               	addwfc	prodh,w,c
  2979  004306  6EEA               	movwf	fsr0h,c
  2980  004308  6AEF               	clrf	indf0,c
  2981  00430A  2AD9               	incf	fsr2l,f,c
  2982  00430C  0E03               	movlw	3
  2983  00430E  64D9               	cpfsgt	fsr2l,c
  2984  004310  D7E2               	goto	l140
  2985  004312  0C03               	retlw	3
  2986                           ;wsw2.c: 748: }
  2987  004314                     __end_of_AllKolToFirstPoz:
  2988  000000                     
  2989  000000                     
  2990  000000                     
  2991  000000                     
  2992  000000                     
  2993  000000                     
  2994  000000                     
  2995  000000                     
  2996  000000                     
  2997  000000                     
  2998  000000                     
  2999  000000                     
  3000  000000                     
  3001  000000                     
  3002  000000                     
  3003  000000                     
  3004  000000                     
  3005  000000                     
  3006  000000                     
  3007  000000                     
  3008  000000                     
  3009  000000                     
  3010  000000                     
  3011  000000                     
  3012  000000                     
  3013  000000                     
  3014  000000                     
  3015  000000                     
  3016  000000                     
  3017  000000                     
  3018  000000                     
  3019  000000                     
  3020  000000                     
  3021  000000                     
  3022  000000                     
  3023  000000                     
  3024  000000                     
  3025  000000                     
  3026  000000                     
  3027  000000                     
  3028  000000                     
  3029  000000                     
  3030  000000                     
  3031  000000                     
  3032  000000                     
  3033  000000                     
  3034  000000                     
  3035  000000                     
  3036  000000                     
  3037  000000                     
  3038  000000                     
  3039  000000                     
  3040  000000                     
  3041  000000                     
  3042  000000                     
  3043  000000                     
  3044  000000                     
  3045  000000                     
  3046  000000                     
  3047  000000                     
  3048  000000                     
  3049  000000                     
  3050  000000                     
  3051  000000                     
  3052  000000                     
  3053  000000                     
  3054  000000                     
  3055  000000                     
  3056  000000                     
  3057  000000                     
  3058  000000                     
  3059  000000                     
  3060  000000                     
  3061  000000                     
  3062  000000                     
  3063  000000                     
  3064  000000                     
  3065  000000                     
  3066  000000                     
  3067  000000                     
  3068  000000                     
  3069  000000                     
  3070  000000                     
  3071  000000                     
  3072  000000                     
  3073  000000                     
  3074  000000                     
  3075  000000                     
  3076  000000                     
  3077  000000                     
  3078  000000                     
  3079  000000                     
  3080  000000                     
  3081  000000                     
  3082  000000                     
  3083  000000                     
  3084  000000                     
  3085  000000                     
  3086  000000                     
  3087  000000                     
  3088  000000                     
  3089  000000                     
  3090  000000                     
  3091  000000                     
  3092  000000                     
  3093  000000                     
  3094  000000                     
  3095  000000                     
  3096  000000                     
  3097  000000                     
  3098  000000                     
  3099  000000                     
  3100  000000                     
  3101  000000                     
  3102  000000                     
  3103  000000                     
  3104  000000                     
  3105  000000                     
  3106  000000                     
  3107  000000                     
  3108  000000                     
  3109  000000                     
  3110  000000                     
  3111  000000                     
  3112  000000                     
  3113  000000                     
  3114  000000                     
  3115  000000                     
  3116  000000                     
  3117  000000                     
  3118  000000                     
  3119  000000                     
  3120  000000                     
  3121  000000                     
  3122  000000                     
  3123  000000                     
  3124  000000                     
  3125  000000                     
  3126  000000                     
  3127  000000                     
  3128  000000                     
  3129  000000                     
  3130  000000                     
  3131  000000                     
  3132  000000                     
  3133  000000                     
  3134  000000                     
  3135  000000                     
  3136  000000                     
  3137  000000                     
  3138  000000                     
  3139  000000                     
  3140  000000                     
  3141  000000                     
  3142  000000                     
  3143  000000                     
  3144  000000                     
  3145  000000                     
  3146  000000                     
  3147  000000                     
  3148  000000                     
  3149  000000                     
  3150  000000                     
  3151  000000                     
  3152  000000                     
  3153  000000                     
  3154  000000                     
  3155  000000                     
  3156  000000                     
  3157  000000                     
  3158  000000                     
  3159  000000                     
  3160  000000                     
  3161  000000                     
  3162  000000                     
  3163  000000                     
  3164  000000                     
  3165  000000                     
  3166  000000                     
  3167  000000                     
  3168  000000                     
  3169  000000                     
  3170  000000                     
  3171  000000                     
  3172  000000                     
  3173  000000                     
  3174  000000                     
  3175  000000                     
  3176  000000                     
  3177  000000                     
  3178  000000                     
  3179  000000                     
  3180  000000                     
  3181  000000                     
  3182  000000                     
  3183  000000                     
  3184  000000                     
  3185  000000                     
  3186  000000                     
  3187  000000                     
  3188  000000                     
  3189  000000                     
  3190  000000                     
  3191  000000                     
  3192  000000                     
  3193  000000                     
  3194  000000                     
  3195  000000                     
  3196  000000                     
  3197  000000                     
  3198  000000                     
  3199  000000                     
  3200  000000                     
  3201  000000                     
  3202  000000                     
  3203  000000                     
  3204  000000                     
  3205  000000                     
  3206  000000                     
  3207  000000                     
  3208  000000                     
  3209  000000                     
  3210  000000                     
  3211  000000                     
  3212  000000                     
  3213  000000                     
  3214  000000                     
  3215  000000                     
  3216  000000                     
  3217  000000                     
  3218  000000                     
  3219  000000                     
  3220  000000                     
  3221  000000                     
  3222  000000                     
  3223  000000                     
  3224  000000                     
  3225  000000                     
  3226  000000                     
  3227  000000                     
  3228  000000                     
  3229  000000                     
  3230  000000                     
  3231  000000                     
  3232  000000                     
  3233  000000                     
  3234  000000                     
  3235  000000                     
  3236  000000                     
  3237  000000                     
  3238  000000                     
  3239  000000                     
  3240  000000                     
  3241  000000                     
  3242  000000                     
  3243  000000                     
  3244  000000                     
  3245  000000                     
  3246  000000                     
  3247  000000                     
  3248  000000                     
  3249  000000                     
  3250  000000                     
  3251  000000                     
  3252  000000                     
  3253  000000                     
  3254  000000                     
  3255  000000                     
  3256  000000                     
  3257  000000                     
  3258  000000                     
  3259  000000                     
  3260  000000                     
  3261  000000                     
  3262  000000                     
  3263  000000                     
  3264  000000                     
  3265  000000                     
  3266  000000                     
  3267  000000                     
  3268  000000                     
  3269  000000                     
  3270  000000                     
  3271  000000                     
  3272  000000                     
  3273  000000                     
  3274  000000                     
  3275  000000                     
  3276  000000                     
  3277  000000                     
  3278  000000                     
  3279  000000                     
  3280  000000                     
  3281  000000                     
  3282  000000                     
  3283  000000                     
  3284  000000                     
  3285  000000                     
  3286  000000                     
  3287  000000                     
  3288  000000                     
  3289  000000                     
  3290  000000                     
  3291  000000                     
  3292  000000                     
  3293  000000                     
  3294  000000                     
  3295  000000                     
  3296  000000                     
  3297  000000                     
  3298  000000                     
  3299  000000                     
  3300  000000                     
  3301  000000                     
  3302  000000                     
  3303  000000                     
  3304  000000                     
  3305  000000                     
  3306  000000                     
  3307  000000                     
  3308  000000                     
  3309  000000                     
  3310  000000                     
  3311  000000                     
  3312  000000                     
  3313  000000                     
  3314  000000                     
  3315  000000                     
  3316  000000                     
  3317  000000                     
  3318  000000                     
  3319  000000                     
  3320  000000                     
  3321  000000                     
  3322  000000                     
  3323  000000                     
  3324  000000                     
  3325  000000                     
  3326  000000                     
  3327  000000                     
  3328  000000                     
  3329  000000                     
  3330  000000                     
  3331  000000                     
  3332  000000                     
  3333  000000                     
  3334  000000                     
  3335  000000                     
  3336  000000                     
  3337  000000                     
  3338  000000                     
  3339  000000                     
  3340  000000                     
  3341  000000                     
  3342  000000                     
  3343  000000                     
  3344  000000                     
  3345  000000                     
  3346  000000                     
  3347  000000                     
  3348  000000                     
  3349  000000                     
  3350  000000                     
  3351  000000                     
  3352  000000                     
  3353  000000                     
  3354  000000                     
  3355  000000                     
  3356  000000                     
  3357  000000                     
  3358  000000                     
  3359  000000                     
  3360  000000                     
  3361  000000                     
  3362  000000                     
  3363  000000                     
  3364  000000                     
  3365  000000                     
  3366  000000                     
  3367  000000                     
  3368  000000                     
  3369  000000                     
  3370  000000                     
  3371  000000                     
  3372  000000                     
  3373  000000                     
  3374  000000                     
  3375  000000                     
  3376  000000                     
  3377  000000                     
  3378  000000                     
  3379  000000                     
  3380  000000                     
  3381  000000                     
  3382  000000                     
  3383  000000                     
  3384  000000                     
  3385  000000                     
  3386  000000                     
  3387  000000                     
  3388  000000                     
  3389  000000                     
  3390  000000                     
  3391  000000                     
  3392  000000                     
  3393  000000                     
  3394  000000                     
  3395  000000                     
  3396  000000                     
  3397  000000                     
  3398  000000                     
  3399  000000                     
  3400  000000                     
  3401  000000                     
  3402  000000                     
  3403  000000                     
  3404  000000                     
  3405  000000                     
  3406  000000                     
  3407  000000                     
  3408  000000                     
  3409  000000                     
  3410  000000                     
  3411  000000                     
  3412  000000                     
  3413  000000                     
  3414  000000                     
  3415  000000                     
  3416  000000                     
  3417  000000                     
  3418  000000                     
  3419  000000                     
  3420  000000                     
  3421  000000                     
  3422  000000                     
  3423  000000                     
  3424                           
  3425                           	psect	const
  3426  001018                     _KL0_AP:
  3427  001018  01D9               	dw	_DWD
  3428  00101A  01DD               	dw	_DWD+4
  3429                           ;wsw2.c: 107: const KAdrPoz KL0_AP[2]= {
  3430                           ;wsw2.c: 108: DWD,
  3431                           ;wsw2.c: 109: DWD+1
  3432                           ;wsw2.c: 110: };
  3433  00101C                     _KL1_AP:
  3434  00101C  01E1               	dw	_DWD+8
  3435  00101E  01E1               	dw	_DWD+8
  3436                           ;wsw2.c: 112: const KAdrPoz KL1_AP[2]= {
  3437                           ;wsw2.c: 113: DWD+2,
  3438                           ;wsw2.c: 114: DWD+2
  3439                           ;wsw2.c: 115: };
  3440  001020                     _KL2_AP:
  3441  001020  01E5               	dw	_DWD+12
  3442  001022  01E9               	dw	_DWD+16
  3443                           ;wsw2.c: 117: const KAdrPoz KL2_AP[2]= {
  3444                           ;wsw2.c: 118: DWD+3,
  3445                           ;wsw2.c: 119: DWD+4
  3446                           ;wsw2.c: 120: };
  3447  001024                     _KL3_AP:
  3448  001024  01ED               	dw	_DWD+20
  3449  001026  01F1               	dw	_DWD+24
  3450                           ;wsw2.c: 122: const KAdrPoz KL3_AP[2]= {
  3451                           ;wsw2.c: 123: DWD+5,
  3452                           ;wsw2.c: 124: DWD+6
  3453                           ;wsw2.c: 125: };
  3454  001028                     _KL0_WP:
  3455  001028  00                 	db	0
  3456  001029  00                 	db	0
  3457  00102A  06                 	db	6
  3458  00102B  00                 	db	0
  3459  00102C  00                 	db	0
  3460  00102D  06                 	db	6
  3461                           ;wsw2.c: 157: const KWrtPoz KL0_WP[2]={
  3462                           ;wsw2.c: 158: 0,0,6,
  3463                           ;wsw2.c: 159: 0,0,6
  3464                           ;wsw2.c: 160: };
  3465  00102E                     _KL1_WP:
  3466  00102E  00                 	db	0
  3467  00102F  00                 	db	0
  3468  001030  06                 	db	6
  3469  001031  00                 	db	0
  3470  001032  00                 	db	0
  3471  001033  06                 	db	6
  3472                           ;wsw2.c: 162: const KWrtPoz KL1_WP[2]={
  3473                           ;wsw2.c: 163: 0,0,6,
  3474                           ;wsw2.c: 164: 0,0,6
  3475                           ;wsw2.c: 165: };
  3476  001034                     _KL2_WP:
  3477  001034  00                 	db	0
  3478  001035  00                 	db	0
  3479  001036  06                 	db	6
  3480  001037  00                 	db	0
  3481  001038  00                 	db	0
  3482  001039  06                 	db	6
  3483                           ;wsw2.c: 167: const KWrtPoz KL2_WP[2]={
  3484                           ;wsw2.c: 168: 0,0,6,
  3485                           ;wsw2.c: 169: 0,0,6
  3486                           ;wsw2.c: 170: };
  3487  00103A                     _KL3_WP:
  3488  00103A  00                 	db	0
  3489  00103B  00                 	db	0
  3490  00103C  06                 	db	6
  3491  00103D  00                 	db	0
  3492  00103E  00                 	db	0
  3493  00103F  06                 	db	6
  3494                           ;wsw2.c: 172: const KWrtPoz KL3_WP[2]={
  3495                           ;wsw2.c: 173: 0,0,6,
  3496                           ;wsw2.c: 174: 0,0,6
  3497                           ;wsw2.c: 175: };
  3498  001040                     _KL0_FP:
  3499  001040  00                 	db	0
  3500  001041  00                 	db	0
  3501  001042  00                 	db	0
  3502  001043  00                 	db	0
  3503                           ;wsw2.c: 184: const KFrmPoz KL0_FP[2]={
  3504                           ;wsw2.c: 185: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3505                           ;wsw2.c: 186: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3506                           ;wsw2.c: 187: };
  3507  001044                     _KL1_FP:
  3508  001044  00                 	db	0
  3509  001045  00                 	db	0
  3510  001046  00                 	db	0
  3511  001047  00                 	db	0
  3512                           ;wsw2.c: 189: const KFrmPoz KL1_FP[2]={
  3513                           ;wsw2.c: 190: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3514                           ;wsw2.c: 191: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3515                           ;wsw2.c: 192: };
  3516  001048                     _KL2_FP:
  3517  001048  00                 	db	0
  3518  001049  00                 	db	0
  3519  00104A  00                 	db	0
  3520  00104B  00                 	db	0
  3521                           ;wsw2.c: 194: const KFrmPoz KL2_FP[2]={
  3522                           ;wsw2.c: 195: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3523                           ;wsw2.c: 196: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3524                           ;wsw2.c: 197: };
  3525  00104C                     _KL3_FP:
  3526  00104C  00                 	db	0
  3527  00104D  00                 	db	0
  3528  00104E  00                 	db	0
  3529  00104F  00                 	db	0
  3530                           ;wsw2.c: 223: static KFocus KL3_FC[2]= {
  3531                           ;wsw2.c: 224: 0,
  3532                           ;wsw2.c: 225: 0
  3533                           ;wsw2.c: 226: };
  3534  001050                     _KL0_OUT:
  3535  001050  01C1               	dw	_PWD
  3536  001052  00                 	db	0
  3537  001053  00                 	db	0
  3538                           ;wsw2.c: 231: const KOutput KL0_OUT= {PWD,0,0};
  3539  001054                     _KL1_OUT:
  3540  001054  01C5               	dw	_PWD+4
  3541  001056  00                 	db	0
  3542  001057  00                 	db	0
  3543                           ;wsw2.c: 232: const KOutput KL1_OUT= {PWD+1,0,0}
      +                          ;
  3544  001058                     _KL2_OUT:
  3545  001058  01C9               	dw	_PWD+8
  3546  00105A  04                 	db	4
  3547  00105B  00                 	db	0
  3548                           ;wsw2.c: 233: const KOutput KL2_OUT= {PWD+2,4,0}
      +                          ;
  3549  00105C                     _KL3_OUT:
  3550  00105C  01CD               	dw	_PWD+12
  3551  00105E  00                 	db	0
  3552  00105F  00                 	db	0
  3553                           ;wsw2.c: 234: const KOutput KL3_OUT= {PWD+3,0,0}
      +                          ;
  3554  001060                     _KL0:
  3555  001060  1018               	dw	_KL0_AP
  3556  001062  1028               	dw	_KL0_WP
  3557  001064  1040               	dw	_KL0_FP
  3558  001066  0EDA               	dw	_KL0_FC
  3559  001068  1050               	dw	_KL0_OUT
  3560                           ;wsw2.c: 238: const Kolejka KL0={KL0_AP,KL0_WP,K
      +                          L0_FP,KL0_FC,&KL0_OUT};
  3561  00106A                     _KL1:
  3562  00106A  101C               	dw	_KL1_AP
  3563  00106C  102E               	dw	_KL1_WP
  3564  00106E  1044               	dw	_KL1_FP
  3565  001070  0EDC               	dw	_KL1_FC
  3566  001072  1054               	dw	_KL1_OUT
  3567                           ;wsw2.c: 239: const Kolejka KL1={KL1_AP,KL1_WP,K
      +                          L1_FP,KL1_FC,&KL1_OUT};
  3568  001074                     _KL2:
  3569  001074  1020               	dw	_KL2_AP
  3570  001076  1034               	dw	_KL2_WP
  3571  001078  1048               	dw	_KL2_FP
  3572  00107A  0EDE               	dw	_KL2_FC
  3573  00107C  1058               	dw	_KL2_OUT
  3574                           ;wsw2.c: 240: const Kolejka KL2={KL2_AP,KL2_WP,K
      +                          L2_FP,KL2_FC,&KL2_OUT};
  3575  00107E                     _KL3:
  3576  00107E  1024               	dw	_KL3_AP
  3577  001080  103A               	dw	_KL3_WP
  3578  001082  104C               	dw	_KL3_FP
  3579  001084  0EE0               	dw	_KL3_FC
  3580  001086  105C               	dw	_KL3_OUT
  3581                           ;wsw2.c: 241: const Kolejka KL3={KL3_AP,KL3_WP,K
      +                          L3_FP,KL3_FC,&KL3_OUT};
  3582  001088                     _Klj:
  3583  001088  1060               	dw	_KL0
  3584  00108A  02                 	db	2
  3585  00108B  106A               	dw	_KL1
  3586  00108D  02                 	db	2
  3587  00108E  1074               	dw	_KL2
  3588  001090  02                 	db	2
  3589  001091  107E               	dw	_KL3
  3590  001093  02                 	db	2
  3591                           ;wsw2.c: 247: const KGlobal Klj[4]= {
  3592                           ;wsw2.c: 248: &KL0,2,
  3593                           ;wsw2.c: 249: &KL1,2,
  3594                           ;wsw2.c: 250: &KL2,2,
  3595                           ;wsw2.c: 251: &KL3,2
  3596                           ;wsw2.c: 252: };
  3597                           ;wsw2.c: 286: static KIndeks KInd[4];
  3598                           ;wsw2.c: 287: static KTime KTim[4];
  3599  001094                     _Znak:
  3600  001094  50                 	db	80
  3601  001095  F9                 	db	-7
  3602  001096  32                 	db	50
  3603  001097  31                 	db	49
  3604  001098  99                 	db	-103
  3605  001099  15                 	db	21
  3606  00109A  14                 	db	20
  3607  00109B  79                 	db	121
  3608  00109C  10                 	db	16
  3609  00109D  11                 	db	17
  3610  00109E  18                 	db	24
  3611  00109F  94                 	db	-108
  3612  0010A0  56                 	db	86
  3613  0010A1  B0                 	db	-80
  3614  0010A2  16                 	db	22
  3615  0010A3  1E                 	db	30
  3616                           
  3617                           	psect	bigdata
  3618                           ;wsw2.c: 199: const KFrmPoz KL3_FP[2]={
  3619                           ;wsw2.c: 200: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3620                           ;wsw2.c: 201: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3621                           ;wsw2.c: 202: };
  3622  000EDA                     _KL0_FC:
  3623  000EDA                     	ds	1
  3624  000EDA                     	ds	1
  3625                           ;wsw2.c: 208: static KFocus KL0_FC[2]= {
  3626                           ;wsw2.c: 209: 0,
  3627                           ;wsw2.c: 210: 0
  3628                           ;wsw2.c: 211: };
  3629  000EDA                     _KL1_FC:
  3630  000EDA                     	ds	1
  3631  000EDA                     	ds	1
  3632                           ;wsw2.c: 213: static KFocus KL1_FC[2]= {
  3633                           ;wsw2.c: 214: 0,
  3634                           ;wsw2.c: 215: 0
  3635                           ;wsw2.c: 216: };
  3636  000EDA                     _KL2_FC:
  3637  000EDA                     	ds	1
  3638  000EDA                     	ds	1
  3639                           ;wsw2.c: 218: static KFocus KL2_FC[2]= {
  3640                           ;wsw2.c: 219: 0,
  3641                           ;wsw2.c: 220: 0
  3642                           ;wsw2.c: 221: };
  3643  000EDA                     _KL3_FC:
  3644  000EDA                     	ds	1
  3645  000EDA                     	ds	1
  3646                           
  3647                           	psect	ibigdata
  3648  0010CB  00                 	db	0
  3649  0010CC  00                 	db	0
  3650  0010CD  00                 	db	0
  3651  0010CE  00                 	db	0
  3652  0010CF  00                 	db	0
  3653  0010D0  00                 	db	0
  3654  0010D1  00                 	db	0
  3655  0010D2  00                 	db	0
  3656                           
  3657                           	psect	rbit
  3658  00020B                     _mux:
  3659  00020B                     	ds	1
  3660  000000                     
  3661  000000                     
  3662  000000                     
  3663  000000                     
  3664  000000                     
  3665  000000                     
  3666  000000                     
  3667  000000                     
  3668  000000                     
  3669  000000                     
  3670  000000                     
  3671  000000                     
  3672  000000                     
  3673  000000                     
  3674  000000                     
  3675  000000                     
  3676  000000                     
  3677  000000                     
  3678  000000                     
  3679  000000                     
  3680                           
  3681                           	psect	bigbss
  3682  000F37                     _Dmask:
  3683  000F37                     	ds	1
  3684  000000                     
  3685  000000                     
  3686  000000                     
  3687  000000                     
  3688  000000                     
  3689  000000                     
  3690  000000                     
  3691  000000                     
  3692  000000                     
  3693  000000                     
  3694  000000                     
  3695  000000                     
  3696  000000                     
  3697  000000                     
  3698  000000                     
  3699  000000                     
  3700  000000                     
  3701  000000                     
  3702  000000                     
  3703  000000                     
  3704  000000                     
  3705  000000                     
  3706  000000                     
  3707  000000                     
  3708  000000                     
  3709  000000                     
  3710  000000                     
  3711  000000                     
  3712  000000                     
  3713  000000                     
  3714  000000                     
  3715  000000                     
  3716  000000                     
  3717  000000                     
  3718  000000                     
  3719  000000                     
  3720  000000                     
  3721  000000                     
  3722  000000                     
  3723  000000                     
  3724  000000                     
  3725  000000                     
  3726  000000                     
  3727  000000                     
  3728  000000                     
  3729  000000                     
  3730  000000                     
  3731  000000                     
  3732  000000                     
  3733  000000                     
  3734  000000                     
  3735  000000                     
  3736  000000                     
  3737  000000                     
  3738  000000                     
  3739  000000                     
  3740  000000                     
  3741  000000                     
  3742  000000                     
  3743  000000                     
  3744  000000                     
  3745  000000                     
  3746  000000                     
  3747  000000                     
  3748  000000                     
  3749  000000                     
  3750  000000                     
  3751  000000                     
  3752  000000                     
  3753  000000                     
  3754  000000                     
  3755  000000                     
  3756  000000                     
  3757  000000                     
  3758  000000                     
  3759  000000                     
  3760  000000                     
  3761  000000                     
  3762  000000                     
  3763  000000                     
  3764  000000                     
  3765  000000                     
  3766  000000                     
  3767  000000                     
  3768  000000                     
  3769  000000                     
  3770  000000                     
  3771  000000                     
  3772  000000                     
  3773  000000                     
  3774  000000                     
  3775  000000                     
  3776  000000                     
  3777  000000                     
  3778  000000                     
  3779  000000                     
  3780  000000                     
  3781  000000                     
  3782  000000                     
  3783  000000                     
  3784  000000                     
  3785  000000                     
  3786  000000                     
  3787  000000                     
  3788  000000                     
  3789  000F37                     _wsdid:
  3790  000F37                     	ds	1
  3791  000000                     
  3792  000000                     
  3793  000000                     
  3794  000000                     
  3795  000000                     
  3796  000000                     
  3797  000000                     
  3798  000F37                     _wbty:
  3799  000F37                     	ds	2
  3800  000F37                     _KInd:
  3801  000F37                     	ds	4
  3802                           
  3803                           	psect	bss
  3804  0001AE                     _LedData:
  3805  0001AE                     	ds	3
  3806  0001AE                     _WswData:
  3807  0001AE                     	ds	4
  3808  0001AE                     _KTim:
  3809  0001AE                     	ds	12
  3810  0001AE                     _PWD:
  3811  0001AE                     	ds	24
  3812  0001AE                     _DWD:
  3813  0001AE                     	ds	28
  3814                           
  3815                           	psect	temp
  3816  000000                     btemp:
  3817  000000                     	ds	5
  3818                           tblptrh	equ	0xFF7
  3819                           tblptrl	equ	0xFF6
  3820                           tablat	equ	0xFF5
  3821                           prodh	equ	0xFF4
  3822                           prodl	equ	0xFF3
  3823                           indf0	equ	0xFEF
  3824                           postinc0	equ	0xFEE
  3825                           postdec0	equ	0xFED
  3826                           fsr0h	equ	0xFEA
  3827                           fsr0l	equ	0xFE9
  3828                           wreg	equ	0xFE8
  3829                           indf1	equ	0xFE7
  3830                           postinc1	equ	0xFE6
  3831                           postdec1	equ	0xFE5
  3832                           fsr1h	equ	0xFE2
  3833                           fsr1l	equ	0xFE1
  3834                           fsr2l	equ	0xFD9
  3835                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Thu Jul 12 08:02:18 2018

      __end_of_RefreshWSW 2E44                  _ResetKol 4294  
                _ResetPoz 41FE                 _SetStatus 3EC0  
       __end_of_SetStatus 40B4                 ?_ResetPoz 00A8  
                      l20 2E46                        l23 2F9E  
                      l15 2DEA                        l32 2FCA  
                      l41 32D8                        l33 313C  
              _SetWbtyBit 3DC0                        l35 3B6C  
                      l27 2F16                        l60 3B7A  
                      l52 3AC0                        l44 33F0  
                      l36 3B64                        l28 3056  
                      l53 3638                        l37 31DE  
                      l70 3C8E                        l54 3906  
                      l38 32B4                        l71 3C9E  
                      l63 3BB8                        l55 3A30  
                      l72 3CAE                        l48 3356  
                      l73 3CBE                        l65 3C0A  
                      l49 33FE                        l74 3CCE  
                      l66 3C72                        l91 3D74  
                      l83 3D2C                        l75 3CDC  
                      l67 3C6A                        l84 3D30  
                      l68 3C1A                        l85 3D32  
                      l77 3D10                        l94 3D80  
                      l78 3D00                        l88 3D34  
                      l97 3D9C                        u20 2E98  
                      u30 2EBE                        u27 2E88  
                      u37 2EB4                        u80 2EF2  
                      u90 2F8A                        u97 2F7A  
               ?a_KolProc 00F7        __end_of_SetWbtyBit 3E18  
              ?_SetStatus 00AB                       l100 3DB2  
                     l120 3F68                       l104 3DCA  
                     l121 3F86                       l122 3FA2  
                     l123 3FC6                       l115 3EDE  
                     l140 42D6                       l124 3FEC  
                     l116 3EF8                       l125 4014  
                     l117 3F14                       l126 403E  
                     l118 3F32                       l119 3F4C  
                     l136 429E                       l138 42BE  
                     _KL0 1060                       _KL1 106A  
                     _KL2 1074                       _KL3 107E  
                     _DWD 01D9                       u210 318E  
                     u220 31BA                       u140 303E  
                     u310 33CA                       u230 3258  
                     u400 35AC                       u320 33DE  
                     u217 317E                       u410 35E2  
                     u170 30BC                       u227 31AA  
                     u147 302E                       u500 37D4  
                     u180 30E8                       u317 33BA  
                     u237 3248                       u510 3836  
                     u407 359C                       u255 32B0  
                     u600 3AAE                       u520 3872  
                     u440 3682                       u360 348C  
                     u280 332A                       u417 35D8  
                     u177 30AC                       u530 38C4  
                     u450 36C0                       u370 34B8  
                     u290 3350                       u507 37C4  
                     u187 30D8                       u540 38F0  
                     u380 351A                       u517 3826  
                     u550 3950                       u470 371A  
                     u390 3540                       u615 3B3C  
                     u607 3A9E                       u527 3862  
                     u447 3672                       u367 347C  
                     u287 331A                       u800 3CC8  
                     u560 398E                       u480 3756  
                     u537 38B4                       u457 36B0  
                     u377 34A8                       u297 3346  
                     u570 39E8                       u490 37A8  
                     u547 38E0                       u387 350A  
                     u580 3A14                       u557 3940  
                     u477 370A                       u397 3536  
                     u910 3D70                       u590 3A82  
                     u567 397E                       u487 3746  
                     u904 3D62                       u905 3D5E  
                     u577 39D8                       u497 3798  
                     u770 3CB8                       u587 3A04  
                     u860 3CF0                       u925 3D72  
                     u597 3A72                       _PWD 01C1  
                     u980 3DAE                       u995 3DB0  
            _SetPrWswData 3B78                       _Klj 1088  
                     _mux 020B               ?_SetWbtyBit 00A8  
                     wreg 000FE8                _RestartKol 42B4  
      __end_of_RestartKol 42D4      __end_of_SetPrWswData 3BD2  
                    f6123 00F8                      u1200 407C  
                    u1034 3DE0                      u1035 3DDC  
                    u1300 41D4                      u1044 3E00  
                    u1045 3DFC                      u1311 4208  
                    u1231 40C0                      u1330 422C  
                    u1250 40E4                      u1307 41C4  
                    u1340 4280                      u1260 4138  
                    u1271 415C                      u1290 4180  
                    u1347 4270                      u1267 4128  
                    _KInd 0F3B                      _KTim 01B5  
                    _Znak 1094                      fsr0h 000FEA  
                    fsr1h 000FE2                      indf0 000FEF  
                    fsr0l 000FE9                      indf1 000FE7  
                    fsr1l 000FE1                      fsr2l 000FD9  
                    _wbty 0F39                      btemp 0000  
                    lbdiv 95C4                      lbmod 95C4  
                    prodh 000FF4                      prodl 000FF3  
                 ?_GetPoz 00A8           __end_of_KolProc 3B78  
         __end_of_InitWsw 2E36           __end_of_SetData 3EBE  
                 ?_SetPoz 00AB          _AllKolToFirstPoz 42D4  
           __end_of_Rwbty 3E6A             __end_of_Swbty 3E40  
           __end_of_WswOn 3E92                   _KL0_OUT 1050  
                 _KL1_OUT 1054                   _KL2_OUT 1058  
                 _KL3_OUT 105C                     _Dmask 0F37  
              used_btemp0 0001                used_btemp1 0001  
              used_btemp2 0001                used_btemp3 0001  
              used_btemp4 0001                     _Rwbty 3E40  
                   _Swbty 3E18                     _WswOn 3E8C  
                   _wsdid 0F38                     tablat 000FF5  
                 _LedData 01AE                     status 000FD8  
                 _KolProc 2E44                   _InitWsw 2DD4  
                 _SetData 3E94                  ?_SetData 00AB  
                 __Lparam 00A8                 ??_KolProc 00F7  
        __end_of_ResetKol 42B4          __end_of_ResetPoz 4294  
                 _WswData 01B1                   __ramtop 1000  
          __end_of_GetPoz 4150            __end_of_SetPoz 41FC  
          __end_of_Rwsdid 3E86            __end_of_Swsdid 3E78  
          __end_of_WswOff 3E8C                    _KL0_FC 0EDA  
                  _KL0_AP 1018                    _KL1_FC 0EDC  
                  _KL1_AP 101C                    _KL0_FP 1040  
                  _KL2_FC 0EDE                    _KL2_AP 1020  
                  _KL1_FP 1044                    _KL3_FC 0EE0  
                  _KL3_AP 1024                    _KL2_FP 1048  
                  _KL3_FP 104C                    _KL0_WP 1028  
                  _KL1_WP 102E                    _KL2_WP 1034  
                  _KL3_WP 103A              _PrintWswData 3D20  
    __end_of_PrintWswData 3DBE                    _GetPoz 40B6  
                  _SetPoz 4152                    _Rwsdid 3E78  
                  _Swsdid 3E6A                    _WswOff 3E86  
                 postdec0 000FED                   postdec1 000FE5  
                 postinc0 000FEE                   postinc1 000FE6  
           _FormatWswData 3BD2                    tblptrh 000FF7  
                  tblptrl 000FF6     __end_of_FormatWswData 3D20  
__end_of_AllKolToFirstPoz 4314                _RefreshWSW 2E36  
