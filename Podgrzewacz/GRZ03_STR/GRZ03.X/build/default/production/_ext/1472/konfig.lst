

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Thu Jul 12 08:02:18 2018


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	eeprom_data,global,class=EEDATA,delta=1
     5                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     6                           	psect	bss,global,class=RAM,space=1,delta=1
     7                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     	;#
    98                           
    99                           	psect	text
   100                           ;pomiar.tp.h: 7: typedef struct {
   101                           ;pomiar.tp.h: 8: unsigned _err_CO:1;
   102                           ;pomiar.tp.h: 9: unsigned _su_CO:1;
   103                           ;pomiar.tp.h: 10: unsigned _ad_CO:1;
   104                           ;pomiar.tp.h: 11: unsigned _su_SRW_CO:1;
   105                           ;pomiar.tp.h: 12: unsigned _ad_SRW_CO:1;
   106                           ;pomiar.tp.h: 13: unsigned _on_DZ_CO:1;
   107                           ;pomiar.tp.h: 14: unsigned _su_DZ_CO:1;
   108                           ;pomiar.tp.h: 15: unsigned _ad_DZ_CO:1;
   109                           ;pomiar.tp.h: 16: unsigned _ptwp_CO:1;
   110                           ;pomiar.tp.h: 17: unsigned _pz_CO:1;
   111                           ;pomiar.tp.h: 18: unsigned _cold_CO:1;
   112                           ;pomiar.tp.h: 19: unsigned _hot_CO:1;
   113                           ;pomiar.tp.h: 20: unsigned _ldDCO:1;
   114                           ;pomiar.tp.h: 21: unsigned _zroPCO:1;
   115                           ;pomiar.tp.h: 22: unsigned _resPCO:1;
   116                           ;pomiar.tp.h: 23: unsigned _newPCO:1;
   117                           ;pomiar.tp.h: 24: unsigned char CO;
   118                           ;pomiar.tp.h: 25: unsigned char PCO;
   119                           ;pomiar.tp.h: 26: unsigned char PPCO;
   120                           ;pomiar.tp.h: 27: unsigned char minPCO;
   121                           ;pomiar.tp.h: 28: unsigned char maxPCO;
   122                           ;pomiar.tp.h: 29: unsigned char PGDPCO;
   123                           ;pomiar.tp.h: 30: signed char DCO;
   124                           ;pomiar.tp.h: 31: signed char dDCO;
   125                           ;pomiar.tp.h: 32: unsigned char indCO;
   126                           ;pomiar.tp.h: 33: unsigned char SCO;
   127                           ;pomiar.tp.h: 34: unsigned char AC_CO;
   128                           ;pomiar.tp.h: 35: unsigned char MAD_CO;
   129                           ;pomiar.tp.h: 36: unsigned char DAD_CO;
   130                           ;pomiar.tp.h: 37: }DataCO;
   131                           ;pomiar.tp.h: 39: typedef struct {
   132                           ;pomiar.tp.h: 40: unsigned _err_CW:1;
   133                           ;pomiar.tp.h: 41: unsigned _su_CW:1;
   134                           ;pomiar.tp.h: 42: unsigned _ad_CW:1;
   135                           ;pomiar.tp.h: 43: unsigned _wpz_CW:1;
   136                           ;pomiar.tp.h: 44: unsigned _on_DZ_CW:1;
   137                           ;pomiar.tp.h: 45: unsigned _su_DZ_CW:1;
   138                           ;pomiar.tp.h: 46: unsigned _ad_DZ_CW:1;
   139                           ;pomiar.tp.h: 47: unsigned _cold_CW:1;
   140                           ;pomiar.tp.h: 48: unsigned _newPCW:1;
   141                           ;pomiar.tp.h: 49: unsigned _wrtPCW:1;
   142                           ;pomiar.tp.h: 50: unsigned _fpCW:1;
   143                           ;pomiar.tp.h: 51: unsigned char CW;
   144                           ;pomiar.tp.h: 52: unsigned char PCW;
   145                           ;pomiar.tp.h: 53: unsigned char PPCW;
   146                           ;pomiar.tp.h: 54: unsigned char minPCW;
   147                           ;pomiar.tp.h: 55: unsigned char maxPCW;
   148                           ;pomiar.tp.h: 56: signed char DCW;
   149                           ;pomiar.tp.h: 57: signed char dDCW;
   150                           ;pomiar.tp.h: 58: signed char ddDCW;
   151                           ;pomiar.tp.h: 59: unsigned char indCW;
   152                           ;pomiar.tp.h: 60: unsigned char SCW;
   153                           ;pomiar.tp.h: 61: unsigned char AC_CW;
   154                           ;pomiar.tp.h: 62: unsigned char MAD_CW;
   155                           ;pomiar.tp.h: 63: unsigned char DAD_CW;
   156                           ;pomiar.tp.h: 64: }DataCW;
   157                           ;pomiar.tp.h: 66: typedef struct {
   158                           ;pomiar.tp.h: 67: unsigned _on_ZW:1;
   159                           ;pomiar.tp.h: 68: unsigned char AC_ZW;
   160                           ;pomiar.tp.h: 69: signed char ZW;
   161                           ;pomiar.tp.h: 70: signed char SZW;
   162                           ;pomiar.tp.h: 71: }DataZW;
   163                           ;pomiar.tp.h: 73: typedef struct {
   164                           ;pomiar.tp.h: 75: unsigned _csn:1;
   165                           ;pomiar.tp.h: 76: unsigned _off:1;
   166                           ;pomiar.tp.h: 77: unsigned _lato:1;
   167                           ;pomiar.tp.h: 78: unsigned _zima:1;
   168                           ;pomiar.tp.h: 79: unsigned poz;
   169                           ;pomiar.tp.h: 80: unsigned AC;
   170                           ;pomiar.tp.h: 81: }DataPFN;
   171                           ;pomiar.tp.h: 83: typedef struct {
   172                           ;pomiar.tp.h: 84: unsigned _hi:1;
   173                           ;pomiar.tp.h: 85: unsigned _lo:1;
   174                           ;pomiar.tp.h: 86: unsigned _no:1;
   175                           ;pomiar.tp.h: 87: unsigned _error:1;
   176                           ;pomiar.tp.h: 88: unsigned _work:1;
   177                           ;pomiar.tp.h: 89: unsigned char CS;
   178                           ;pomiar.tp.h: 90: }DataCSN;
   179                           ;pomiar.h: 141: unsigned char GetPGD_PCO(void);
   180                           ;pomiar.h: 143: extern unsigned char ReadAC(unsi
      +                          gned char chanel);
   181                           ;pomiar.h: 144: extern unsigned char ReadTabNTC(
      +                          unsigned char zrAC);
   182                           ;pomiar.h: 145: extern unsigned char ReturnACfro
      +                          mNTC(unsigned char data);
   183                           ;pomiar.h: 146: extern signed char ReadTabZNTC(u
      +                          nsigned char zrAC);
   184                           ;pomiar.h: 148: extern bit RdPrt(const unsigned 
      +                          char Index);
   185                           ;pomiar.h: 150: extern unsigned char ReadDataXON
      +                          LI(unsigned char k,unsigned char *dt,unsigned ch
      +                          ar max,const unsigned char step,const unsigned c
      +                          har step2);
   186                           ;pomiar.h: 151: extern unsigned char ReadDataXON
      +                          LD(unsigned char k,unsigned char *dt,unsigned ch
      +                          ar min,const unsigned char step,const unsigned c
      +                          har step2);
   187                           ;pomiar.h: 153: extern void RNst(const unsigned 
      +                          char nst);
   188                           ;pomiar.h: 155: extern void WriteEEPCW(void);
   189                           ;pomiar.h: 157: extern unsigned char RTdS(const 
      +                          unsigned char Index);
   190                           ;pomiar.h: 158: extern void StartRTdS(const unsi
      +                          gned char Index);
   191                           ;wsw2.tp.h: 11: typedef struct {
   192                           ;wsw2.tp.h: 12: unsigned focus:1;
   193                           ;wsw2.tp.h: 13: unsigned dec:1;
   194                           ;wsw2.tp.h: 14: unsigned hex:1;
   195                           ;wsw2.tp.h: 15: unsigned autoOFF:1;
   196                           ;wsw2.tp.h: 16: unsigned kropka0:1;
   197                           ;wsw2.tp.h: 17: unsigned kropka1:1;
   198                           ;wsw2.tp.h: 18: unsigned wygas0:1;
   199                           ;wsw2.tp.h: 19: unsigned wygas1:1;
   200  006486                     _EnKonf:
   201                           ;	_d assigned to ?a_ReadEEVNT7_P+0
   202  000000                     _ReadEEVNT7_P$d	set	?a_ReadEEVNT7_P
   203                           ;	_d assigned to ?a_ReadEEVNT7_V+0
   204  000000                     _ReadEEVNT7_V$d	set	?a_ReadEEVNT7_V
   205                           ;	_d assigned to ?a_WriteEEVNT7+1
   206  000000                     _WriteEEVNT7$d	set	?a_WriteEEVNT7+1
   207                           ;	_v assigned to ?a_WriteEEVNT7+0
   208  000000                     _WriteEEVNT7$v	set	?a_WriteEEVNT7
   209                           ;       param _p assigned to ?_WriteEEVNT7+0
   210  000000                     _WriteEEVNT7$p	set	?_WriteEEVNT7
   211                           ;	_d assigned to ?a_ReadEEVNT6_P+0
   212  000000                     _ReadEEVNT6_P$d	set	?a_ReadEEVNT6_P
   213                           ;	_d assigned to ?a_ReadEEVNT6_V+0
   214  000000                     _ReadEEVNT6_V$d	set	?a_ReadEEVNT6_V
   215                           ;	_d assigned to ?a_WriteEEVNT6+1
   216  000000                     _WriteEEVNT6$d	set	?a_WriteEEVNT6+1
   217                           ;	_v assigned to ?a_WriteEEVNT6+0
   218  000000                     _WriteEEVNT6$v	set	?a_WriteEEVNT6
   219                           ;       param _p assigned to ?_WriteEEVNT6+0
   220  000000                     _WriteEEVNT6$p	set	?_WriteEEVNT6
   221                           ;	_d assigned to ?a_ReadEEVNT5_P+0
   222  000000                     _ReadEEVNT5_P$d	set	?a_ReadEEVNT5_P
   223                           ;	_d assigned to ?a_ReadEEVNT5_V+0
   224  000000                     _ReadEEVNT5_V$d	set	?a_ReadEEVNT5_V
   225                           ;	_d assigned to ?a_WriteEEVNT5+1
   226  000000                     _WriteEEVNT5$d	set	?a_WriteEEVNT5+1
   227                           ;	_v assigned to ?a_WriteEEVNT5+0
   228  000000                     _WriteEEVNT5$v	set	?a_WriteEEVNT5
   229                           ;       param _p assigned to ?_WriteEEVNT5+0
   230  000000                     _WriteEEVNT5$p	set	?_WriteEEVNT5
   231                           ;	_d assigned to ?a_ReadEEVNT4_P+0
   232  000000                     _ReadEEVNT4_P$d	set	?a_ReadEEVNT4_P
   233                           ;	_d assigned to ?a_ReadEEVNT4_V+0
   234  000000                     _ReadEEVNT4_V$d	set	?a_ReadEEVNT4_V
   235                           ;	_d assigned to ?a_WriteEEVNT4+1
   236  000000                     _WriteEEVNT4$d	set	?a_WriteEEVNT4+1
   237                           ;	_v assigned to ?a_WriteEEVNT4+0
   238  000000                     _WriteEEVNT4$v	set	?a_WriteEEVNT4
   239                           ;       param _p assigned to ?_WriteEEVNT4+0
   240  000000                     _WriteEEVNT4$p	set	?_WriteEEVNT4
   241                           ;	_d assigned to ?a_ReadEEVNT3_P+0
   242  000000                     _ReadEEVNT3_P$d	set	?a_ReadEEVNT3_P
   243                           ;	_d assigned to ?a_ReadEEVNT3_V+0
   244  000000                     _ReadEEVNT3_V$d	set	?a_ReadEEVNT3_V
   245                           ;	_d assigned to ?a_WriteEEVNT3+1
   246  000000                     _WriteEEVNT3$d	set	?a_WriteEEVNT3+1
   247                           ;	_v assigned to ?a_WriteEEVNT3+0
   248  000000                     _WriteEEVNT3$v	set	?a_WriteEEVNT3
   249                           ;       param _p assigned to ?_WriteEEVNT3+0
   250  000000                     _WriteEEVNT3$p	set	?_WriteEEVNT3
   251                           ;	_d assigned to ?a_ReadEEVNT2_P+0
   252  000000                     _ReadEEVNT2_P$d	set	?a_ReadEEVNT2_P
   253                           ;	_d assigned to ?a_ReadEEVNT2_V+0
   254  000000                     _ReadEEVNT2_V$d	set	?a_ReadEEVNT2_V
   255                           ;	_d assigned to ?a_WriteEEVNT2+1
   256  000000                     _WriteEEVNT2$d	set	?a_WriteEEVNT2+1
   257                           ;	_v assigned to ?a_WriteEEVNT2+0
   258  000000                     _WriteEEVNT2$v	set	?a_WriteEEVNT2
   259                           ;       param _p assigned to ?_WriteEEVNT2+0
   260  000000                     _WriteEEVNT2$p	set	?_WriteEEVNT2
   261                           ;	_d assigned to ?a_ReadEEVNT1_P+0
   262  000000                     _ReadEEVNT1_P$d	set	?a_ReadEEVNT1_P
   263                           ;	_d assigned to ?a_ReadEEVNT1_V+0
   264  000000                     _ReadEEVNT1_V$d	set	?a_ReadEEVNT1_V
   265                           ;	_d assigned to ?a_WriteEEVNT1+1
   266  000000                     _WriteEEVNT1$d	set	?a_WriteEEVNT1+1
   267                           ;	_v assigned to ?a_WriteEEVNT1+0
   268  000000                     _WriteEEVNT1$v	set	?a_WriteEEVNT1
   269                           ;       param _p assigned to ?_WriteEEVNT1+0
   270  000000                     _WriteEEVNT1$p	set	?_WriteEEVNT1
   271                           ;	_d assigned to ?a_ReadEEVNT0_P+0
   272  000000                     _ReadEEVNT0_P$d	set	?a_ReadEEVNT0_P
   273                           ;	_d assigned to ?a_ReadEEVNT0_V+0
   274  000000                     _ReadEEVNT0_V$d	set	?a_ReadEEVNT0_V
   275                           ;	_d assigned to ?a_WriteEEVNT0+1
   276  000000                     _WriteEEVNT0$d	set	?a_WriteEEVNT0+1
   277                           ;	_v assigned to ?a_WriteEEVNT0+0
   278  000000                     _WriteEEVNT0$v	set	?a_WriteEEVNT0
   279                           ;       param _p assigned to ?_WriteEEVNT0+0
   280  000000                     _WriteEEVNT0$p	set	?_WriteEEVNT0
   281  000000                     
   282                           ;konfig.c: 27: bfrs=0;
   283  006486  010F               	movlb	_bfrs shr (0+8)
   284  006488  6B35               	clrf	_bfrs& (0+255),b
   285                           ;konfig.c: 28: DtKNF.KRK=0;
   286  00648A  0100               	movlb	(_DtKNF+2) shr (0+8)
   287  00648C  6B47               	clrf	(_DtKNF+2)& (0+255),b
   288                           ;konfig.c: 29: StartRTS(0);
   289  00648E  0E00               	movlw	0
   290  006490  EC10  F046         	call	_StartRTS
   291                           ;konfig.c: 30: DtKNF.enknf=1;
   292  006494  0100               	movlb	_DtKNF shr (0+8)
   293  006496  8145               	bsf	_DtKNF& (0+255),0,b
   294                           ;konfig.c: 31: }
   295  006498  0012               	return	
   296  00649A                     __end_of_EnKonf:
   297                           ;konfig.c: 33: void ExitKonf(void)
   298                           ;konfig.c: 34: {
   299  00649A                     _ExitKonf:
   300  000000                     
   301                           ;konfig.c: 35: M._AKTYWNE_KNF=0;
   302  00649A  EE00  F06B         	lfsr	0,_M+22
   303  00649E  6AEE               	clrf	postinc0,c
   304  0064A0  6AEE               	clrf	postinc0,c
   305                           ;konfig.c: 36: DtKNF.wymCW=0;
   306  0064A2  0100               	movlb	_DtKNF shr (0+8)
   307  0064A4  9545               	bcf	_DtKNF& (0+255),2,b
   308                           ;konfig.c: 37: EndPR();
   309  0064A6  ECFE  F03F         	call	_EndPR	;wreg free
   310                           ;konfig.c: 38: DtKNF.enknf=0;
   311  0064AA  0100               	movlb	_DtKNF shr (0+8)
   312  0064AC  9145               	bcf	_DtKNF& (0+255),0,b
   313                           ;konfig.c: 39: DtKNF.PRM=1;
   314  0064AE  0E01               	movlw	1
   315  0064B0  CFE8 F046          	movff	wreg,_DtKNF+1
   316                           ;konfig.c: 40: DtKNF.KRK=0;
   317  0064B4  6B47               	clrf	(_DtKNF+2)& (0+255),b
   318                           ;konfig.c: 41: bfrs=0;
   319  0064B6  010F               	movlb	_bfrs shr (0+8)
   320  0064B8  6B35               	clrf	_bfrs& (0+255),b
   321                           ;konfig.c: 42: RdEEParam();
   322  0064BA  DA85               	call	_RdEEParam	;wreg free
   323                           ;konfig.c: 43: PomiarPCW();
   324  0064BC  ECA4  F03C         	call	_PomiarPCW	;wreg free
   325                           ;konfig.c: 44: DtCW._newPCW=0;
   326  0064C0  0102               	movlb	(_DtCW+1) shr (0+8)
   327  0064C2  914F               	bcf	(_DtCW+1)& (0+255),0,b
   328                           ;konfig.c: 45: DtCW._wrtPCW=0;
   329  0064C4  934F               	bcf	(_DtCW+1)& (0+255),1,b
   330                           ;konfig.c: 46: }
   331  0064C6  0012               	return	
   332  0064C8                     __end_of_ExitKonf:
   333                           ;konfig.c: 48: void MKonfiguracja(void)
   334                           ;konfig.c: 49: {
   335  0064C8                     _MKonfiguracja:
   336  000000                     
   337                           ;konfig.c: 50: unsigned char key=0,prm=0,rgz=0,m
      +                          str=1,mxco=1,mxcw=1;
   338  0064C8  6AD9               	clrf	fsr2l,c
   339  0064CA  6AE1               	clrf	fsr1l,c
   340  0064CC  6AE9               	clrf	fsr0l,c
   341  0064CE  0E01               	movlw	1
   342  0064D0  6ED9               	movwf	fsr2l,c
   343  0064D2  6EE1               	movwf	fsr1l,c
   344  0064D4  6EE9               	movwf	fsr0l,c
   345                           ;konfig.c: 51: static unsigned char zustr;
   346  0064D6  0100               	movlb	_DtKNF shr (0+8)
   347  0064D8  A145               	btfss	_DtKNF& (0+255),0,b
   348  0064DA  0C01               	retlw	1
   349                           ;konfig.c: 54: if(DtKNF.KRK&&(RTM(0)>=10))
   350  0064DC  EE00  F047         	lfsr	0,_DtKNF+2
   351  0064E0  50EF               	movf	indf0,w,c
   352  0064E2  E101 D264          	bz	l27
   353  0064E6  0E00               	movlw	0
   354  0064E8  EC40  F046         	call	_RTM
   355  0064EC  6E00               	movwf	btemp,c
   356  0064EE  0E0A               	movlw	10
   357  0064F0  5C00               	subwf	btemp,w,c
   358  0064F2  E201 D25C          	bnc	l27
   359                           ;konfig.c: 55: {
   360  0064F6  D7D1               	goto	_ExitKonf	;wreg free
   361                           ;konfig.c: 57: return;
   362                           ;konfig.c: 58: }
   363  0064F8                     l28:
   364                           ;konfig.c: 60: {
   365                           ;konfig.c: 63: {
   366  0064F8  0E00               	movlw	0
   367  0064FA  EC22  F046         	call	_RTS
   368  0064FE  6E00               	movwf	btemp,c
   369  006500  0E14               	movlw	20
   370  006502  5C00               	subwf	btemp,w,c
   371  006504  E309               	bnc	l29
   372                           ;konfig.c: 66: {
   373  006506  010F               	movlb	_bfrs shr (0+8)
   374  006508  6B35               	clrf	_bfrs& (0+255),b
   375                           ;konfig.c: 68: DtKNF.enknf=0;
   376  00650A  0100               	movlb	_DtKNF shr (0+8)
   377  00650C  9145               	bcf	_DtKNF& (0+255),0,b
   378                           ;konfig.c: 69: M._AKTYWNE_KNF=0;
   379  00650E  EE00  F06B         	lfsr	0,_M+22
   380  006512  6AEE               	clrf	postinc0,c
   381  006514  6AEE               	clrf	postinc0,c
   382                           ;konfig.c: 70: return;
   383  006516  0012               	return	
   384  006518                     l29:
   385                           ;konfig.c: 71: }
   386  006518  010F               	movlb	_bfrs shr (0+8)
   387  00651A  5335               	movf	_bfrs& (0+255),f,b
   388  00651C  E10D               	bnz	l30
   389  00651E  0E01               	movlw	1
   390  006520  EC6F  F042         	call	_RdPrt
   391  006524  E309               	bnc	l30
   392  006526  0E00               	movlw	0
   393  006528  EC6F  F042         	call	_RdPrt
   394  00652C  E305               	bnc	l30
   395                           ;konfig.c: 74: {
   396  00652E  0E01               	movlw	1
   397  006530  CFE8 FF35          	movff	wreg,_bfrs
   398                           ;konfig.c: 76: StartRTS(1);
   399  006534  EC10  F046         	call	_StartRTS
   400  006538                     l30:
   401                           ;konfig.c: 77: }
   402  006538  010F               	movlb	_bfrs shr (0+8)
   403  00653A  5335               	movf	_bfrs& (0+255),f,b
   404  00653C  0E01               	movlw	1
   405  00653E  E01F               	bz	L1
   406  006540  EC6F  F042         	call	_RdPrt
   407  006544  E31B               	bnc	l31
   408  006546  0E00               	movlw	0
   409  006548  EC6F  F042         	call	_RdPrt
   410                           ;konfig.c: 80: {
   411  00654C  0E01               	movlw	1
   412  00654E  E317               	bnc	L1
   413  006550  EC22  F046         	call	_RTS
   414  006554  6E00               	movwf	btemp,c
   415  006556  0E05               	movlw	5
   416  006558  5C00               	subwf	btemp,w,c
   417  00655A  A0D8               	btfss	status,0,c
   418  00655C  0012               	return	
   419                           ;konfig.c: 82: {
   420  00655E  0100               	movlb	(_M+22) shr (0+8)
   421  006560  0E01               	movlw	1
   422  006562  6F6B               	movwf	(_M+22)& (0+255),b
   423  006564  6B6C               	clrf	(_M+23)& (0+255),b
   424                           ;konfig.c: 85: DtKNF.PRM=1;
   425  006566  CFE8 F046          	movff	wreg,_DtKNF+1
   426                           ;konfig.c: 86: DtKNF.KRK=1;
   427  00656A  CFE8 F047          	movff	wreg,_DtKNF+2
   428                           ;konfig.c: 87: StartRTM(0);
   429  00656E  0E00               	movlw	0
   430  006570  EC2E  F046         	call	_StartRTM
   431                           ;konfig.c: 88: SetBufKey1();
   432  006574  ECC8  F042         	call	_SetBufKey1	;wreg free
   433                           ;konfig.c: 89: SetBufKey2();
   434  006578  EFFC  F042         	goto	_SetBufKey2	;wreg free
   435                           ;konfig.c: 90: }
   436  00657C                     l31:
   437                           ;konfig.c: 92: else
   438  00657C  0E01               	movlw	1
   439  00657E                     L1:
   440  00657E  CFE8 F046          	movff	wreg,_DtKNF+1
   441                           ;konfig.c: 95: DtKNF.KRK=0;
   442  006582  0100               	movlb	(_DtKNF+2) shr (0+8)
   443  006584  6B47               	clrf	(_DtKNF+2)& (0+255),b
   444                           ;konfig.c: 96: bfrs=0;
   445  006586  010F               	movlb	_bfrs shr (0+8)
   446  006588  6B35               	clrf	_bfrs& (0+255),b
   447                           ;konfig.c: 97: return;
   448  00658A  0012               	return	
   449                           ;konfig.c: 98: }
   450  00658C                     l34:
   451                           ;konfig.c: 100: }
   452                           ;konfig.c: 103: {
   453  00658C  EC72  F040         	call	_EndOFF	;wreg free
   454                           ;konfig.c: 105: if(PresKey2(RdPrt(1)))
   455  006590  0E01               	movlw	1
   456  006592  EC6F  F042         	call	_RdPrt
   457  006596  0E00               	movlw	0
   458  006598  B0D8               	btfsc	status,0,c
   459  00659A  0E01               	movlw	1
   460  00659C  EC02  F043         	call	_PresKey2
   461  0065A0  0900               	iorlw	0
   462  0065A2  E008               	bz	l35
   463                           ;konfig.c: 106: {
   464  0065A4  0100               	movlb	(_DtKNF+1) shr (0+8)
   465  0065A6  2B46               	incf	(_DtKNF+1)& (0+255),f,b
   466                           ;konfig.c: 108: if(DtKNF.PRM>7) DtKNF.PRM=1;
   467  0065A8  0E07               	movlw	7
   468  0065AA  6546               	cpfsgt	(_DtKNF+1)& (0+255),b
   469  0065AC  D003               	goto	l35
   470  0065AE  0E01               	movlw	1
   471  0065B0  CFE8 F046          	movff	wreg,_DtKNF+1
   472  0065B4                     l35:
   473                           ;konfig.c: 109: }
   474  0065B4  0E07               	movlw	7
   475  0065B6  0100               	movlb	(_DtKNF+1) shr (0+8)
   476  0065B8  6146               	cpfslt	(_DtKNF+1)& (0+255),b
   477  0065BA  D008               	goto	l37
   478  0065BC  C046  F0A9         	movff	_DtKNF+1,?_PrintPR
   479  0065C0  0100               	movlb	__Lparam shr (0+8)
   480  0065C2  6BAA               	clrf	(?_PrintPR+1)^(__Lparam& (0+65280)),b
   481  0065C4  0EBE               	movlw	190
   482  0065C6  ECA9  F03F         	call	_PrintPR
   483  0065CA  D008               	goto	l38
   484  0065CC                     l37:
   485                           ;konfig.c: 111: else PrintPR(0b00010110,0b101111
      +                          00,1);
   486  0065CC  0EBC               	movlw	188
   487  0065CE  0100               	movlb	__Lparam shr (0+8)
   488  0065D0  6FA9               	movwf	?_PrintPR^(__Lparam& (0+65280)),b
   489  0065D2  0E01               	movlw	1
   490  0065D4  6FAA               	movwf	(?_PrintPR+1)^(__Lparam& (0+65280)),b
   491  0065D6  0E16               	movlw	22
   492  0065D8  ECA9  F03F         	call	_PrintPR
   493  0065DC                     l38:
   494                           ;konfig.c: 112: if(DtKNF.PRM==7)
   495  0065DC  C046  FFE8         	movff	_DtKNF+1,wreg
   496  0065E0  0A07               	xorlw	7
   497  0065E2  E111               	bnz	l39
   498                           ;konfig.c: 113: {
   499  0065E4  0E00               	movlw	0
   500  0065E6  EC6F  F042         	call	_RdPrt
   501  0065EA  0E00               	movlw	0
   502  0065EC  B0D8               	btfsc	status,0,c
   503  0065EE  0E01               	movlw	1
   504  0065F0  ECCE  F042         	call	_PresKey1
   505  0065F4  0900               	iorlw	0
   506  0065F6  B4D8               	btfsc	status,2,c
   507  0065F8  0012               	return	
   508                           ;konfig.c: 115: {
   509  0065FA  0E02               	movlw	2
   510  0065FC  CFE8 F047          	movff	wreg,_DtKNF+2
   511                           ;konfig.c: 117: DtKNF.PRM=0;
   512  006600  0100               	movlb	(_DtKNF+1) shr (0+8)
   513  006602  6B46               	clrf	(_DtKNF+1)& (0+255),b
   514                           ;konfig.c: 118: }
   515  006604  0012               	return	
   516  006606                     l39:
   517                           ;konfig.c: 120: else
   518  006606  C046  FFE8         	movff	_DtKNF+1,wreg
   519  00660A  0A07               	xorlw	7
   520  00660C  B4D8               	btfsc	status,2,c
   521  00660E  0012               	return	
   522                           ;konfig.c: 122: {
   523  006610  0E00               	movlw	0
   524  006612  EC6F  F042         	call	_RdPrt
   525  006616  0E00               	movlw	0
   526  006618  B0D8               	btfsc	status,0,c
   527  00661A  0E01               	movlw	1
   528  00661C  ECCE  F042         	call	_PresKey1
   529  006620  0900               	iorlw	0
   530  006622  B4D8               	btfsc	status,2,c
   531  006624  0012               	return	
   532                           ;konfig.c: 124: {
   533  006626  ECC8  F042         	call	_SetBufKey1	;wreg free
   534                           ;konfig.c: 126: DtKNF.KRK=2;
   535  00662A  0E02               	movlw	2
   536  00662C  CFE8 F047          	movff	wreg,_DtKNF+2
   537                           ;konfig.c: 127: }
   538  006630  0C02               	retlw	2
   539  006632                     l44:
   540                           ;konfig.c: 130: }
   541                           ;konfig.c: 133: {
   542  006632  A083               	btfss	3971,0,c	;volatile
   543  006634  D007               	goto	l45
   544  006636  0E05               	movlw	5
   545  006638  EC6F  F042         	call	_RdPrt
   546  00663C  E203               	bc	l45
   547                           ;konfig.c: 135: {
   548  00663E  EC56  F040         	call	_PrintOFF	;wreg free
   549                           ;konfig.c: 137: }
   550  006642  D19E               	goto	l48
   551  006644                     l45:
   552                           ;konfig.c: 138: else
   553  006644  EC72  F040         	call	_EndOFF	;wreg free
   554                           ;konfig.c: 141: }
   555  006648  D19B               	goto	l48
   556  00664A                     l49:
   557                           ;konfig.c: 143: {
   558                           ;konfig.c: 146: {
   559  00664A  0E00               	movlw	0
   560  00664C  EC6F  F042         	call	_RdPrt
   561  006650  A0D8               	btfss	status,0,c
   562                           ;konfig.c: 149: {
   563  006652  DF23               	call	_ExitKonf	;wreg free
   564                           ;konfig.c: 151: return;
   565  006654  0012               	return	
   566                           ;konfig.c: 152: }
   567  006656                     l51:
   568                           ;konfig.c: 154: }
   569                           ;konfig.c: 157: {
   570  006656  0100               	movlb	__Lparam shr (0+8)
   571  006658  0E48               	movlw	low (_DtKNF+3)
   572  00665A  6FA8               	movwf	?_ReadDataXONL^(__Lparam& (0+65280)),b
   573  00665C  0E00               	movlw	high (_DtKNF+3)
   574  00665E  6FA9               	movwf	(?_ReadDataXONL+1)^(__Lparam& (0+65280)),
      +                          b
   575  006660  6BAA               	clrf	(?_ReadDataXONL+2)^(__Lparam& (0+65280)),b
   576  006662  0E63               	movlw	99
   577  006664  6FAB               	movwf	(?_ReadDataXONL+3)^(__Lparam& (0+65280)),
      +                          b
   578  006666  0E01               	movlw	1
   579  006668  6FAC               	movwf	(?_ReadDataXONL+4)^(__Lparam& (0+65280)),
      +                          b
   580  00666A  6FAD               	movwf	(?_ReadDataXONL+5)^(__Lparam& (0+65280)),
      +                          b
   581  00666C  0E00               	movlw	0
   582  00666E  EC6F  F042         	call	_RdPrt
   583  006672  0E00               	movlw	0
   584  006674  B0D8               	btfsc	status,0,c
   585  006676  0E01               	movlw	1
   586  006678  ECCE  F042         	call	_PresKey1
   587  00667C  0100               	movlb	__Lparam shr (0+8)
   588  00667E  6FAE               	movwf	(?_ReadDataXONL+6)^(__Lparam& (0+65280)),
      +                          b
   589  006680  0E01               	movlw	1
   590  006682  EC6F  F042         	call	_RdPrt
   591  006686  0E00               	movlw	0
   592  006688  B0D8               	btfsc	status,0,c
   593  00668A  0E01               	movlw	1
   594  00668C  EC9C  F03D         	call	_ReadDataXONL
   595  006690  0A00               	xorlw	0
   596  006692  E10D               	bnz	l52
   597                           ;konfig.c: 167: {
   598  006694  C048  FFE8         	movff	_DtKNF+3,wreg
   599  006698  ECDD  F03F         	call	_PrintWPR
   600                           ;konfig.c: 170: if(RdPrt(6)) DtKNF.wymCW=1;
   601  00669C  0E06               	movlw	6
   602  00669E  EC6F  F042         	call	_RdPrt
   603  0066A2  0100               	movlb	_DtKNF shr (0+8)
   604  0066A4  E302               	bnc	L2
   605  0066A6  8545               	bsf	_DtKNF& (0+255),2,b
   606  0066A8  0012               	return	
   607                           ;konfig.c: 171: else DtKNF.wymCW=0;
   608  0066AA                     L2:
   609  0066AA  9545               	bcf	_DtKNF& (0+255),2,b
   610                           ;konfig.c: 172: }
   611  0066AC  0012               	return	
   612  0066AE                     l52:
   613                           ;konfig.c: 173: else
   614  0066AE  0100               	movlb	_DtKNF shr (0+8)
   615  0066B0  9545               	bcf	_DtKNF& (0+255),2,b
   616                           ;konfig.c: 176: if(DtKNF.mstr!=eeprom_read(0x00C
      +                          1))
   617  0066B2  0EC1               	movlw	193
   618  0066B4  0100               	movlb	__Lparam shr (0+8)
   619  0066B6  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   620  0066B8  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   621  0066BA  EC33  F04C         	call	_eeprom_read	;wreg free
   622  0066BE  6E00               	movwf	btemp,c
   623  0066C0  C000  F002         	movff	btemp,btemp+2
   624  0066C4  6A03               	clrf	btemp+3,c
   625  0066C6  C048  FFE8         	movff	_DtKNF+3,wreg
   626  0066CA  1802               	xorwf	btemp+2,w,c
   627  0066CC  E101               	bnz	u305
   628  0066CE  5203               	movf	btemp+3,f,c
   629  0066D0                     u305:
   630  0066D0  E008               	bz	l56
   631                           ;konfig.c: 177: {
   632  0066D2  0EC1               	movlw	193
   633  0066D4  0100               	movlb	__Lparam shr (0+8)
   634  0066D6  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   635  0066D8  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   636  0066DA  C048  F0AB         	movff	_DtKNF+3,?_eeprom_write+2
   637  0066DE  EC72  F04B         	call	_eeprom_write	;wreg free
   638  0066E2                     l56:
   639                           ;konfig.c: 179: }
   640  0066E2  0E01               	movlw	1
   641  0066E4  CFE8 F047          	movff	wreg,_DtKNF+2
   642                           ;konfig.c: 181: }
   643  0066E8  0C01               	retlw	1
   644  0066EA                     l57:
   645                           ;konfig.c: 183: }
   646                           ;konfig.c: 186: {
   647  0066EA  0100               	movlb	__Lparam shr (0+8)
   648  0066EC  0E49               	movlw	low (_DtKNF+4)
   649  0066EE  6FA8               	movwf	?_ReadDataXONL^(__Lparam& (0+65280)),b
   650  0066F0  0E00               	movlw	high (_DtKNF+4)
   651  0066F2  6FA9               	movwf	(?_ReadDataXONL+1)^(__Lparam& (0+65280)),
      +                          b
   652  0066F4  6BAA               	clrf	(?_ReadDataXONL+2)^(__Lparam& (0+65280)),b
   653  0066F6  0E63               	movlw	99
   654  0066F8  6FAB               	movwf	(?_ReadDataXONL+3)^(__Lparam& (0+65280)),
      +                          b
   655  0066FA  0E01               	movlw	1
   656  0066FC  6FAC               	movwf	(?_ReadDataXONL+4)^(__Lparam& (0+65280)),
      +                          b
   657  0066FE  6FAD               	movwf	(?_ReadDataXONL+5)^(__Lparam& (0+65280)),
      +                          b
   658  006700  0E00               	movlw	0
   659  006702  EC6F  F042         	call	_RdPrt
   660  006706  0E00               	movlw	0
   661  006708  B0D8               	btfsc	status,0,c
   662  00670A  0E01               	movlw	1
   663  00670C  ECCE  F042         	call	_PresKey1
   664  006710  0100               	movlb	__Lparam shr (0+8)
   665  006712  6FAE               	movwf	(?_ReadDataXONL+6)^(__Lparam& (0+65280)),
      +                          b
   666  006714  0E01               	movlw	1
   667  006716  EC6F  F042         	call	_RdPrt
   668  00671A  0E00               	movlw	0
   669  00671C  B0D8               	btfsc	status,0,c
   670  00671E  0E01               	movlw	1
   671  006720  EC9C  F03D         	call	_ReadDataXONL
   672  006724  0A00               	xorlw	0
   673  006726  E10D               	bnz	l58
   674                           ;konfig.c: 196: {
   675  006728  C049  FFE8         	movff	_DtKNF+4,wreg
   676  00672C  ECDD  F03F         	call	_PrintWPR
   677                           ;konfig.c: 199: if(RdPrt(6)) DtKNF.wymCW=1;
   678  006730  0E06               	movlw	6
   679  006732  EC6F  F042         	call	_RdPrt
   680  006736  0100               	movlb	_DtKNF shr (0+8)
   681  006738  E302               	bnc	L3
   682  00673A  8545               	bsf	_DtKNF& (0+255),2,b
   683  00673C  0012               	return	
   684                           ;konfig.c: 200: else DtKNF.wymCW=0;
   685  00673E                     L3:
   686  00673E  9545               	bcf	_DtKNF& (0+255),2,b
   687                           ;konfig.c: 201: }
   688  006740  0012               	return	
   689  006742                     l58:
   690                           ;konfig.c: 202: else
   691  006742  0100               	movlb	_DtKNF shr (0+8)
   692  006744  9545               	bcf	_DtKNF& (0+255),2,b
   693                           ;konfig.c: 205: if(DtKNF.mxcw!=eeprom_read(0x00C
      +                          2))
   694  006746  0EC2               	movlw	194
   695  006748  0100               	movlb	__Lparam shr (0+8)
   696  00674A  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   697  00674C  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   698  00674E  EC33  F04C         	call	_eeprom_read	;wreg free
   699  006752  6E00               	movwf	btemp,c
   700  006754  C000  F002         	movff	btemp,btemp+2
   701  006758  6A03               	clrf	btemp+3,c
   702  00675A  C049  FFE8         	movff	_DtKNF+4,wreg
   703  00675E  1802               	xorwf	btemp+2,w,c
   704  006760  E101               	bnz	u335
   705  006762  5203               	movf	btemp+3,f,c
   706  006764                     u335:
   707  006764  E008               	bz	l62
   708                           ;konfig.c: 206: {
   709  006766  0EC2               	movlw	194
   710  006768  0100               	movlb	__Lparam shr (0+8)
   711  00676A  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   712  00676C  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   713  00676E  C049  F0AB         	movff	_DtKNF+4,?_eeprom_write+2
   714  006772  EC72  F04B         	call	_eeprom_write	;wreg free
   715  006776                     l62:
   716                           ;konfig.c: 208: }
   717  006776  0E01               	movlw	1
   718  006778  CFE8 F047          	movff	wreg,_DtKNF+2
   719                           ;konfig.c: 210: }
   720  00677C  0C01               	retlw	1
   721  00677E                     l63:
   722                           ;konfig.c: 212: }
   723                           ;konfig.c: 215: {
   724  00677E  0100               	movlb	__Lparam shr (0+8)
   725  006780  0E51               	movlw	low (_DtKNF+12)
   726  006782  6FA8               	movwf	?_ReadDataONL^(__Lparam& (0+65280)),b
   727  006784  0E00               	movlw	high (_DtKNF+12)
   728  006786  6FA9               	movwf	(?_ReadDataONL+1)^(__Lparam& (0+65280)),b
   729  006788  0E0A               	movlw	10
   730  00678A  6FAA               	movwf	(?_ReadDataONL+2)^(__Lparam& (0+65280)),b
   731  00678C  0E14               	movlw	20
   732  00678E  6FAB               	movwf	(?_ReadDataONL+3)^(__Lparam& (0+65280)),b
   733  006790  0E01               	movlw	1
   734  006792  6FAC               	movwf	(?_ReadDataONL+4)^(__Lparam& (0+65280)),b
   735  006794  0E00               	movlw	0
   736  006796  EC6F  F042         	call	_RdPrt
   737  00679A  0E00               	movlw	0
   738  00679C  B0D8               	btfsc	status,0,c
   739  00679E  0E01               	movlw	1
   740  0067A0  ECCE  F042         	call	_PresKey1
   741  0067A4  0100               	movlb	__Lparam shr (0+8)
   742  0067A6  6FAD               	movwf	(?_ReadDataONL+5)^(__Lparam& (0+65280)),b
   743  0067A8  0E01               	movlw	1
   744  0067AA  EC6F  F042         	call	_RdPrt
   745  0067AE  0E00               	movlw	0
   746  0067B0  B0D8               	btfsc	status,0,c
   747  0067B2  0E01               	movlw	1
   748  0067B4  EC48  F03D         	call	_ReadDataONL
   749  0067B8  0A00               	xorlw	0
   750  0067BA  E104               	bnz	l64
   751                           ;konfig.c: 218: PrintWPR(DtKNF.mmin);
   752  0067BC  C051  FFE8         	movff	_DtKNF+12,wreg
   753  0067C0  EFDD  F03F         	goto	_PrintWPR
   754  0067C4                     l64:
   755                           ;konfig.c: 219: else
   756  0067C4  0EC3               	movlw	195
   757  0067C6  0100               	movlb	__Lparam shr (0+8)
   758  0067C8  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   759  0067CA  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   760  0067CC  EC33  F04C         	call	_eeprom_read	;wreg free
   761  0067D0  6E00               	movwf	btemp,c
   762  0067D2  C000  F002         	movff	btemp,btemp+2
   763  0067D6  6A03               	clrf	btemp+3,c
   764  0067D8  C051  FFE8         	movff	_DtKNF+12,wreg
   765  0067DC  1802               	xorwf	btemp+2,w,c
   766  0067DE  E101               	bnz	u355
   767  0067E0  5203               	movf	btemp+3,f,c
   768  0067E2                     u355:
   769  0067E2  E00A               	bz	l66
   770                           ;konfig.c: 222: {
   771  0067E4  0EC3               	movlw	195
   772  0067E6  0100               	movlb	__Lparam shr (0+8)
   773  0067E8  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   774  0067EA  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   775  0067EC  C051  F0AB         	movff	_DtKNF+12,?_eeprom_write+2
   776  0067F0  EC72  F04B         	call	_eeprom_write	;wreg free
   777                           ;konfig.c: 224: ModParam();
   778  0067F4  EC9E  F044         	call	_ModParam	;wreg free
   779  0067F8                     l66:
   780                           ;konfig.c: 225: }
   781  0067F8  0E01               	movlw	1
   782  0067FA  CFE8 F047          	movff	wreg,_DtKNF+2
   783                           ;konfig.c: 227: }
   784  0067FE  0C01               	retlw	1
   785  006800                     l67:
   786                           ;konfig.c: 229: }
   787                           ;konfig.c: 232: {
   788  006800  0100               	movlb	__Lparam shr (0+8)
   789  006802  0E52               	movlw	low (_DtKNF+13)
   790  006804  6FA8               	movwf	?_ReadDataONL^(__Lparam& (0+65280)),b
   791  006806  0E00               	movlw	high (_DtKNF+13)
   792  006808  6FA9               	movwf	(?_ReadDataONL+1)^(__Lparam& (0+65280)),b
   793  00680A  0E19               	movlw	25
   794  00680C  6FAA               	movwf	(?_ReadDataONL+2)^(__Lparam& (0+65280)),b
   795  00680E  0E5F               	movlw	95
   796  006810  6FAB               	movwf	(?_ReadDataONL+3)^(__Lparam& (0+65280)),b
   797  006812  0E01               	movlw	1
   798  006814  6FAC               	movwf	(?_ReadDataONL+4)^(__Lparam& (0+65280)),b
   799  006816  0E00               	movlw	0
   800  006818  EC6F  F042         	call	_RdPrt
   801  00681C  0E00               	movlw	0
   802  00681E  B0D8               	btfsc	status,0,c
   803  006820  0E01               	movlw	1
   804  006822  ECCE  F042         	call	_PresKey1
   805  006826  0100               	movlb	__Lparam shr (0+8)
   806  006828  6FAD               	movwf	(?_ReadDataONL+5)^(__Lparam& (0+65280)),b
   807  00682A  0E01               	movlw	1
   808  00682C  EC6F  F042         	call	_RdPrt
   809  006830  0E00               	movlw	0
   810  006832  B0D8               	btfsc	status,0,c
   811  006834  0E01               	movlw	1
   812  006836  EC48  F03D         	call	_ReadDataONL
   813  00683A  0A00               	xorlw	0
   814  00683C  E104               	bnz	l68
   815                           ;konfig.c: 235: PrintWPR(DtKNF.mmax);
   816  00683E  C052  FFE8         	movff	_DtKNF+13,wreg
   817  006842  EFDD  F03F         	goto	_PrintWPR
   818  006846                     l68:
   819                           ;konfig.c: 236: else
   820  006846  0EC4               	movlw	196
   821  006848  0100               	movlb	__Lparam shr (0+8)
   822  00684A  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   823  00684C  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   824  00684E  EC33  F04C         	call	_eeprom_read	;wreg free
   825  006852  6E00               	movwf	btemp,c
   826  006854  C000  F002         	movff	btemp,btemp+2
   827  006858  6A03               	clrf	btemp+3,c
   828  00685A  C052  FFE8         	movff	_DtKNF+13,wreg
   829  00685E  1802               	xorwf	btemp+2,w,c
   830  006860  E101               	bnz	u375
   831  006862  5203               	movf	btemp+3,f,c
   832  006864                     u375:
   833  006864  E00A               	bz	l70
   834                           ;konfig.c: 239: {
   835  006866  0EC4               	movlw	196
   836  006868  0100               	movlb	__Lparam shr (0+8)
   837  00686A  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   838  00686C  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   839  00686E  C052  F0AB         	movff	_DtKNF+13,?_eeprom_write+2
   840  006872  EC72  F04B         	call	_eeprom_write	;wreg free
   841                           ;konfig.c: 241: ModParam();
   842  006876  EC9E  F044         	call	_ModParam	;wreg free
   843  00687A                     l70:
   844                           ;konfig.c: 242: }
   845  00687A  0E01               	movlw	1
   846  00687C  CFE8 F047          	movff	wreg,_DtKNF+2
   847                           ;konfig.c: 244: }
   848  006880  0C01               	retlw	1
   849  006882                     l71:
   850                           ;konfig.c: 246: }
   851                           ;konfig.c: 249: {
   852  006882  0100               	movlb	__Lparam shr (0+8)
   853  006884  0E50               	movlw	low (_DtKNF+11)
   854  006886  6FA8               	movwf	?_ReadDataONL^(__Lparam& (0+65280)),b
   855  006888  0E00               	movlw	high (_DtKNF+11)
   856  00688A  6FA9               	movwf	(?_ReadDataONL+1)^(__Lparam& (0+65280)),b
   857  00688C  0E01               	movlw	1
   858  00688E  6FAA               	movwf	(?_ReadDataONL+2)^(__Lparam& (0+65280)),b
   859  006890  0E04               	movlw	4
   860  006892  6FAB               	movwf	(?_ReadDataONL+3)^(__Lparam& (0+65280)),b
   861  006894  0E01               	movlw	1
   862  006896  6FAC               	movwf	(?_ReadDataONL+4)^(__Lparam& (0+65280)),b
   863  006898  0E00               	movlw	0
   864  00689A  EC6F  F042         	call	_RdPrt
   865  00689E  0E00               	movlw	0
   866  0068A0  B0D8               	btfsc	status,0,c
   867  0068A2  0E01               	movlw	1
   868  0068A4  ECCE  F042         	call	_PresKey1
   869  0068A8  0100               	movlb	__Lparam shr (0+8)
   870  0068AA  6FAD               	movwf	(?_ReadDataONL+5)^(__Lparam& (0+65280)),b
   871  0068AC  0E01               	movlw	1
   872  0068AE  EC6F  F042         	call	_RdPrt
   873  0068B2  0E00               	movlw	0
   874  0068B4  B0D8               	btfsc	status,0,c
   875  0068B6  0E01               	movlw	1
   876  0068B8  EC48  F03D         	call	_ReadDataONL
   877  0068BC  0A00               	xorlw	0
   878  0068BE  E104               	bnz	l72
   879                           ;konfig.c: 252: PrintWPR(DtKNF.nokr);
   880  0068C0  C050  FFE8         	movff	_DtKNF+11,wreg
   881  0068C4  EFDD  F03F         	goto	_PrintWPR
   882  0068C8                     l72:
   883                           ;konfig.c: 253: else
   884  0068C8  0EC5               	movlw	197
   885  0068CA  0100               	movlb	__Lparam shr (0+8)
   886  0068CC  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   887  0068CE  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   888  0068D0  EC33  F04C         	call	_eeprom_read	;wreg free
   889  0068D4  6E00               	movwf	btemp,c
   890  0068D6  C000  F002         	movff	btemp,btemp+2
   891  0068DA  6A03               	clrf	btemp+3,c
   892  0068DC  C050  FFE8         	movff	_DtKNF+11,wreg
   893  0068E0  1802               	xorwf	btemp+2,w,c
   894  0068E2  E101               	bnz	u395
   895  0068E4  5203               	movf	btemp+3,f,c
   896  0068E6                     u395:
   897  0068E6  E008               	bz	l74
   898  0068E8  0EC5               	movlw	197
   899  0068EA  0100               	movlb	__Lparam shr (0+8)
   900  0068EC  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   901  0068EE  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   902  0068F0  C050  F0AB         	movff	_DtKNF+11,?_eeprom_write+2
   903  0068F4  EC72  F04B         	call	_eeprom_write	;wreg free
   904  0068F8                     l74:
   905                           ;konfig.c: 256: DtKNF.KRK=1;
   906  0068F8  0E01               	movlw	1
   907  0068FA  CFE8 F047          	movff	wreg,_DtKNF+2
   908                           ;konfig.c: 257: }
   909  0068FE  0C01               	retlw	1
   910  006900                     l75:
   911                           ;konfig.c: 259: }
   912                           ;konfig.c: 262: {
   913  006900  0100               	movlb	__Lparam shr (0+8)
   914  006902  0E53               	movlw	low (_DtKNF+14)
   915  006904  6FA8               	movwf	?_ReadDataONL^(__Lparam& (0+65280)),b
   916  006906  0E00               	movlw	high (_DtKNF+14)
   917  006908  6FA9               	movwf	(?_ReadDataONL+1)^(__Lparam& (0+65280)),b
   918  00690A  6BAA               	clrf	(?_ReadDataONL+2)^(__Lparam& (0+65280)),b
   919  00690C  0E02               	movlw	2
   920  00690E  6FAB               	movwf	(?_ReadDataONL+3)^(__Lparam& (0+65280)),b
   921  006910  0E01               	movlw	1
   922  006912  6FAC               	movwf	(?_ReadDataONL+4)^(__Lparam& (0+65280)),b
   923  006914  0E00               	movlw	0
   924  006916  EC6F  F042         	call	_RdPrt
   925  00691A  0E00               	movlw	0
   926  00691C  B0D8               	btfsc	status,0,c
   927  00691E  0E01               	movlw	1
   928  006920  ECCE  F042         	call	_PresKey1
   929  006924  0100               	movlb	__Lparam shr (0+8)
   930  006926  6FAD               	movwf	(?_ReadDataONL+5)^(__Lparam& (0+65280)),b
   931  006928  0E01               	movlw	1
   932  00692A  EC6F  F042         	call	_RdPrt
   933  00692E  0E00               	movlw	0
   934  006930  B0D8               	btfsc	status,0,c
   935  006932  0E01               	movlw	1
   936  006934  EC48  F03D         	call	_ReadDataONL
   937  006938  0A00               	xorlw	0
   938  00693A  E104               	bnz	l76
   939                           ;konfig.c: 265: PrintWPR(DtKNF.rfan);
   940  00693C  C053  FFE8         	movff	_DtKNF+14,wreg
   941  006940  EFDD  F03F         	goto	_PrintWPR
   942  006944                     l76:
   943                           ;konfig.c: 266: else
   944  006944  0EC6               	movlw	198
   945  006946  0100               	movlb	__Lparam shr (0+8)
   946  006948  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   947  00694A  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   948  00694C  EC33  F04C         	call	_eeprom_read	;wreg free
   949  006950  6E00               	movwf	btemp,c
   950  006952  C000  F002         	movff	btemp,btemp+2
   951  006956  6A03               	clrf	btemp+3,c
   952  006958  C053  FFE8         	movff	_DtKNF+14,wreg
   953  00695C  1802               	xorwf	btemp+2,w,c
   954  00695E  E101               	bnz	u415
   955  006960  5203               	movf	btemp+3,f,c
   956  006962                     u415:
   957  006962  E008               	bz	l78
   958  006964  0EC6               	movlw	198
   959  006966  0100               	movlb	__Lparam shr (0+8)
   960  006968  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   961  00696A  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   962  00696C  C053  F0AB         	movff	_DtKNF+14,?_eeprom_write+2
   963  006970  EC72  F04B         	call	_eeprom_write	;wreg free
   964  006974                     l78:
   965                           ;konfig.c: 269: ModParam();
   966  006974  EC9E  F044         	call	_ModParam	;wreg free
   967                           ;konfig.c: 270: DtKNF.KRK=1;
   968  006978  0E01               	movlw	1
   969  00697A  CFE8 F047          	movff	wreg,_DtKNF+2
   970                           ;konfig.c: 271: }
   971  00697E  0C01               	retlw	1
   972  006980                     l48:
   973  006980  C046  FFE8         	movff	_DtKNF+1,wreg
   974  006984  0A00               	xorlw	0
   975  006986  E101 D660          	bz	l49
   976  00698A  0A01               	xorlw	1
   977  00698C  E101 D663          	bz	l51
   978  006990  0A03               	xorlw	3
   979  006992  E101 D6AA          	bz	l57
   980  006996  0A01               	xorlw	1
   981  006998  E101 D6F1          	bz	l63
   982  00699C  0A07               	xorlw	7
   983  00699E  E101 D72F          	bz	l67
   984  0069A2  0A01               	xorlw	1
   985  0069A4  E101 D76D          	bz	l71
   986  0069A8  0A03               	xorlw	3
   987  0069AA  E0AA               	bz	l75
   988  0069AC  0012               	return	
   989                           ;konfig.c: 275: break;
   990  0069AE                     l27:
   991  0069AE  C047  FFE8         	movff	_DtKNF+2,wreg
   992  0069B2  0A00               	xorlw	0
   993  0069B4  E101 D5A0          	bz	l28
   994  0069B8  0A01               	xorlw	1
   995  0069BA  E101 D5E7          	bz	l34
   996  0069BE  0A03               	xorlw	3
   997  0069C0  E101 D637          	bz	l44
   998  0069C4  0012               	return	
   999                           ;konfig.c: 278: }
  1000  0069C6                     __end_of_MKonfiguracja:
  1001                           ;konfig.c: 281: void RdEEParam(void)
  1002                           ;konfig.c: 282: {
  1003  0069C6                     _RdEEParam:
  1004  000000                     
  1005                           ;konfig.c: 283: DtKNF.tpkt=eeprom_read(0x00C7);
  1006  0069C6  0EC7               	movlw	199
  1007  0069C8  0100               	movlb	__Lparam shr (0+8)
  1008  0069CA  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1009  0069CC  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1010  0069CE  EC33  F04C         	call	_eeprom_read	;wreg free
  1011  0069D2  CFE8 F04C          	movff	wreg,_DtKNF+7
  1012                           ;konfig.c: 284: SetTpKtParam();
  1013  0069D6  D83D               	call	_SetTpKtParam	;wreg free
  1014                           ;konfig.c: 288: DtKNF.mstr=eeprom_read(0x00C1);
  1015  0069D8  0EC1               	movlw	193
  1016  0069DA  0100               	movlb	__Lparam shr (0+8)
  1017  0069DC  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1018  0069DE  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1019  0069E0  EC33  F04C         	call	_eeprom_read	;wreg free
  1020  0069E4  CFE8 F048          	movff	wreg,_DtKNF+3
  1021                           ;konfig.c: 289: DtKNF.mxcw=eeprom_read(0x00C2);
  1022  0069E8  0EC2               	movlw	194
  1023  0069EA  0100               	movlb	__Lparam shr (0+8)
  1024  0069EC  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1025  0069EE  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1026  0069F0  EC33  F04C         	call	_eeprom_read	;wreg free
  1027  0069F4  CFE8 F049          	movff	wreg,_DtKNF+4
  1028                           ;konfig.c: 290: DtKNF.rfan=eeprom_read(0x00C6);
  1029  0069F8  0EC6               	movlw	198
  1030  0069FA  0100               	movlb	__Lparam shr (0+8)
  1031  0069FC  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1032  0069FE  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1033  006A00  EC33  F04C         	call	_eeprom_read	;wreg free
  1034  006A04  CFE8 F053          	movff	wreg,_DtKNF+14
  1035                           ;konfig.c: 291: DtKNF.mmin=eeprom_read(0x00C3);
  1036  006A08  0EC3               	movlw	195
  1037  006A0A  0100               	movlb	__Lparam shr (0+8)
  1038  006A0C  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1039  006A0E  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1040  006A10  EC33  F04C         	call	_eeprom_read	;wreg free
  1041  006A14  CFE8 F051          	movff	wreg,_DtKNF+12
  1042                           ;konfig.c: 292: DtKNF.mmax=eeprom_read(0x00C4);
  1043  006A18  0EC4               	movlw	196
  1044  006A1A  0100               	movlb	__Lparam shr (0+8)
  1045  006A1C  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1046  006A1E  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1047  006A20  EC33  F04C         	call	_eeprom_read	;wreg free
  1048  006A24  CFE8 F052          	movff	wreg,_DtKNF+13
  1049                           ;konfig.c: 293: ModParam();
  1050  006A28  EC9E  F044         	call	_ModParam	;wreg free
  1051                           ;konfig.c: 294: DtKNF.nokr=eeprom_read(0x00C5);
  1052  006A2C  0EC5               	movlw	197
  1053  006A2E  0100               	movlb	__Lparam shr (0+8)
  1054  006A30  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1055  006A32  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1056  006A34  EC33  F04C         	call	_eeprom_read	;wreg free
  1057  006A38  CFE8 F050          	movff	wreg,_DtKNF+11
  1058                           ;konfig.c: 295: DtCW.PCW=eeprom_read(0x00C8);
  1059  006A3C  0EC8               	movlw	200
  1060  006A3E  0100               	movlb	__Lparam shr (0+8)
  1061  006A40  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1062  006A42  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1063  006A44  EC33  F04C         	call	_eeprom_read	;wreg free
  1064  006A48  CFE8 F251          	movff	wreg,_DtCW+3
  1065                           ;konfig.c: 296: DtKNF.wymCW=0;
  1066  006A4C  0100               	movlb	_DtKNF shr (0+8)
  1067  006A4E  9545               	bcf	_DtKNF& (0+255),2,b
  1068                           ;konfig.c: 297: }
  1069  006A50  0012               	return	
  1070  006A52                     __end_of_RdEEParam:
  1071                           ;konfig.c: 300: void SetTpKtParam(void)
  1072                           ;konfig.c: 301: {
  1073  006A52                     _SetTpKtParam:
  1074  000000                     
  1075                           ;konfig.c: 302: DtKNF.czpr=0;
  1076  006A52  0100               	movlb	(_DtKNF+6) shr (0+8)
  1077  006A54  6B4B               	clrf	(_DtKNF+6)& (0+255),b
  1078                           ;konfig.c: 303: DtKNF.rdpm=0;
  1079  006A56  6B4E               	clrf	(_DtKNF+9)& (0+255),b
  1080                           ;konfig.c: 304: DtKNF.tpwm=0;
  1081  006A58  6B4F               	clrf	(_DtKNF+10)& (0+255),b
  1082                           ;konfig.c: 305: }
  1083  006A5A  0012               	return	
  1084  006A5C                     __end_of_SetTpKtParam:
  1085                           ;konfig.c: 307: void WriteEEPCW(void)
  1086                           ;konfig.c: 308: {
  1087  006A5C                     _WriteEEPCW:
  1088  000000                     
  1089                           ;konfig.c: 309: eeprom_write(0x00C8,DtCW.PCW);
  1090  006A5C  0EC8               	movlw	200
  1091  006A5E  0100               	movlb	__Lparam shr (0+8)
  1092  006A60  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1093  006A62  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1094  006A64  C251  F0AB         	movff	_DtCW+3,?_eeprom_write+2
  1095  006A68  EF72  F04B         	goto	_eeprom_write	;wreg free
  1096                           ;konfig.c: 310: }
  1097  006A6C                     __end_of_WriteEEPCW:
  1098                           ;konfig.c: 317: unsigned char ReadEERFAN()
  1099                           ;konfig.c: 318: {
  1100  006A6C                     _ReadEERFAN:
  1101  000000                     
  1102                           ;konfig.c: 319: return eeprom_read(0x00C6);
  1103  006A6C  0EC6               	movlw	198
  1104  006A6E  0100               	movlb	__Lparam shr (0+8)
  1105  006A70  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1106  006A72  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1107  006A74  EF33  F04C         	goto	_eeprom_read	;wreg free
  1108                           ;konfig.c: 320: }
  1109  006A78                     __end_of_ReadEERFAN:
  1110                           ;konfig.c: 322: void WriteEEVNT0(unsigned char v
      +                          ,unsigned char p)
  1111                           ;konfig.c: 323: {
  1112  006A78  00A8               	dw	?_WriteEEVNT0
  1113  006A7A                     _WriteEEVNT0:
  1114  000000                     
  1115                           ;_v stored from wreg
  1116  006A7A  0100               	movlb	__Lparam shr (0+8)
  1117  006A7C  6FA8               	movwf	?a_WriteEEVNT0^(__Lparam& (0+65280)),b
  1118                           ;konfig.c: 324: volatile unsigned char d;
  1119  006A7E  DFF6               	call	_ReadEERFAN	;wreg free
  1120  006A80  6E00               	movwf	btemp,c
  1121  006A82  3800               	swapf	btemp,w,c
  1122  006A84  0BF0               	andlw	240
  1123  006A86  0100               	movlb	__Lparam shr (0+8)
  1124  006A88  6FA8               	movwf	?_WriteEEVNT0^(__Lparam& (0+65280)),b
  1125                           ;konfig.c: 327: eeprom_write(0x00D0+d,v);
  1126  006A8A  0ED0               	movlw	208
  1127  006A8C  25A9               	addwf	(?a_WriteEEVNT0+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1128  006A8E  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1129  006A90  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1130  006A92  0E00               	movlw	0
  1131  006A94  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1132  006A96  51A8               	movf	?a_WriteEEVNT0^(__Lparam& (0+65280)),w
  1133  006A98  6FAB               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  1134  006A9A  EC72  F04B         	call	_eeprom_write	;wreg free
  1135                           ;konfig.c: 328: eeprom_write(0x00D1+d,p);
  1136  006A9E  0100               	movlb	__Lparam shr (0+8)
  1137  006AA0  0ED1               	movlw	209
  1138  006AA2  25A9               	addwf	(?a_WriteEEVNT0+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1139  006AA4  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1140  006AA6  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1141  006AA8  0E00               	movlw	0
  1142  006AAA  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1143  006AAC  51A8               	movf	?_WriteEEVNT0^(__Lparam& (0+65280)),w
  1144  006AAE  D141               	goto	L22
  1145                           ;konfig.c: 329: }
  1146  006AB0                     __end_of_WriteEEVNT0:
  1147                           ;konfig.c: 330: unsigned char ReadEEVNT0_V()
  1148                           ;konfig.c: 331: {
  1149  006AB0                     _ReadEEVNT0_V:
  1150  000000                     
  1151                           ;konfig.c: 332: volatile unsigned char d;
  1152  006AB0  DFDD               	call	_ReadEERFAN	;wreg free
  1153  006AB2  6E00               	movwf	btemp,c
  1154  006AB4  3800               	swapf	btemp,w,c
  1155  006AB6  0BF0               	andlw	240
  1156  006AB8  0100               	movlb	__Lparam shr (0+8)
  1157  006ABA  6FA9               	movwf	?a_ReadEEVNT0_V^(__Lparam& (0+65280)),b	;
      +                          volatile
  1158                           ;konfig.c: 335: return eeprom_read(0x00D0+d);
  1159  006ABC  0ED0               	movlw	208
  1160  006ABE  25A9               	addwf	?a_ReadEEVNT0_V^(__Lparam& (0+65280)),w	;
      +                          volatile
  1161  006AC0  D14C               	goto	L25
  1162                           ;konfig.c: 336: }
  1163  006AC2                     __end_of_ReadEEVNT0_V:
  1164                           ;konfig.c: 337: unsigned char ReadEEVNT0_P()
  1165                           ;konfig.c: 338: {
  1166  006AC2                     _ReadEEVNT0_P:
  1167  000000                     
  1168                           ;konfig.c: 339: volatile unsigned char d;
  1169  006AC2  DFD4               	call	_ReadEERFAN	;wreg free
  1170  006AC4  6E00               	movwf	btemp,c
  1171  006AC6  3800               	swapf	btemp,w,c
  1172  006AC8  0BF0               	andlw	240
  1173  006ACA  0100               	movlb	__Lparam shr (0+8)
  1174  006ACC  6FA9               	movwf	?a_ReadEEVNT0_P^(__Lparam& (0+65280)),b	;
      +                          volatile
  1175                           ;konfig.c: 342: return eeprom_read(0x00D1+d);
  1176  006ACE  0ED1               	movlw	209
  1177  006AD0  25A9               	addwf	?a_ReadEEVNT0_P^(__Lparam& (0+65280)),w	;
      +                          volatile
  1178  006AD2  D143               	goto	L25
  1179                           ;konfig.c: 343: }
  1180  006AD4                     __end_of_ReadEEVNT0_P:
  1181                           ;konfig.c: 345: void WriteEEVNT1(unsigned char v
      +                          ,unsigned char p)
  1182                           ;konfig.c: 346: {
  1183  006AD4  00A8               	dw	?_WriteEEVNT1
  1184  006AD6                     _WriteEEVNT1:
  1185  000000                     
  1186                           ;_v stored from wreg
  1187  006AD6  0100               	movlb	__Lparam shr (0+8)
  1188  006AD8  6FA8               	movwf	?a_WriteEEVNT1^(__Lparam& (0+65280)),b
  1189                           ;konfig.c: 347: volatile unsigned char d;
  1190  006ADA  DFC8               	call	_ReadEERFAN	;wreg free
  1191  006ADC  6E00               	movwf	btemp,c
  1192  006ADE  3800               	swapf	btemp,w,c
  1193  006AE0  0BF0               	andlw	240
  1194  006AE2  0100               	movlb	__Lparam shr (0+8)
  1195  006AE4  6FA9               	movwf	(?a_WriteEEVNT1+1)^(__Lparam& (0+65280)),
      +                          b	;volatile
  1196                           ;konfig.c: 350: eeprom_write(0x00D2+d,v);
  1197  006AE6  0ED2               	movlw	210
  1198  006AE8  25A9               	addwf	(?a_WriteEEVNT1+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1199  006AEA  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1200  006AEC  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1201  006AEE  0E00               	movlw	0
  1202  006AF0  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1203  006AF2  51A8               	movf	?a_WriteEEVNT1^(__Lparam& (0+65280)),w
  1204  006AF4  6FAB               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  1205  006AF6  EC72  F04B         	call	_eeprom_write	;wreg free
  1206                           ;konfig.c: 351: eeprom_write(0x00D3+d,p);
  1207  006AFA  0100               	movlb	__Lparam shr (0+8)
  1208  006AFC  0ED3               	movlw	211
  1209  006AFE  25A9               	addwf	(?a_WriteEEVNT1+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1210  006B00  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1211  006B02  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1212  006B04  0E00               	movlw	0
  1213  006B06  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1214  006B08  51A8               	movf	?_WriteEEVNT1^(__Lparam& (0+65280)),w
  1215  006B0A  D113               	goto	L22
  1216                           ;konfig.c: 352: }
  1217  006B0C                     __end_of_WriteEEVNT1:
  1218                           ;konfig.c: 353: unsigned char ReadEEVNT1_V()
  1219                           ;konfig.c: 354: {
  1220  006B0C                     _ReadEEVNT1_V:
  1221  000000                     
  1222                           ;konfig.c: 355: volatile unsigned char d;
  1223  006B0C  DFAF               	call	_ReadEERFAN	;wreg free
  1224  006B0E  6E00               	movwf	btemp,c
  1225  006B10  3800               	swapf	btemp,w,c
  1226  006B12  0BF0               	andlw	240
  1227  006B14  0100               	movlb	__Lparam shr (0+8)
  1228  006B16  6FA9               	movwf	?a_ReadEEVNT1_V^(__Lparam& (0+65280)),b	;
      +                          volatile
  1229                           ;konfig.c: 358: return eeprom_read(0x00D2+d);
  1230  006B18  0ED2               	movlw	210
  1231  006B1A  25A9               	addwf	?a_ReadEEVNT1_V^(__Lparam& (0+65280)),w	;
      +                          volatile
  1232  006B1C  D11E               	goto	L25
  1233                           ;konfig.c: 359: }
  1234  006B1E                     __end_of_ReadEEVNT1_V:
  1235                           ;konfig.c: 360: unsigned char ReadEEVNT1_P()
  1236                           ;konfig.c: 361: {
  1237  006B1E                     _ReadEEVNT1_P:
  1238  000000                     
  1239                           ;konfig.c: 362: volatile unsigned char d;
  1240  006B1E  DFA6               	call	_ReadEERFAN	;wreg free
  1241  006B20  6E00               	movwf	btemp,c
  1242  006B22  3800               	swapf	btemp,w,c
  1243  006B24  0BF0               	andlw	240
  1244  006B26  0100               	movlb	__Lparam shr (0+8)
  1245  006B28  6FA9               	movwf	?a_ReadEEVNT1_P^(__Lparam& (0+65280)),b	;
      +                          volatile
  1246                           ;konfig.c: 365: return eeprom_read(0x00D3+d);
  1247  006B2A  0ED3               	movlw	211
  1248  006B2C  25A9               	addwf	?a_ReadEEVNT1_P^(__Lparam& (0+65280)),w	;
      +                          volatile
  1249  006B2E  D115               	goto	L25
  1250                           ;konfig.c: 366: }
  1251  006B30                     __end_of_ReadEEVNT1_P:
  1252                           ;konfig.c: 368: void WriteEEVNT2(unsigned char v
      +                          ,unsigned char p)
  1253                           ;konfig.c: 369: {
  1254  006B30  00A8               	dw	?_WriteEEVNT2
  1255  006B32                     _WriteEEVNT2:
  1256  000000                     
  1257                           ;_v stored from wreg
  1258  006B32  0100               	movlb	__Lparam shr (0+8)
  1259  006B34  6FA8               	movwf	?a_WriteEEVNT2^(__Lparam& (0+65280)),b
  1260                           ;konfig.c: 370: volatile unsigned char d;
  1261  006B36  DF9A               	call	_ReadEERFAN	;wreg free
  1262  006B38  6E00               	movwf	btemp,c
  1263  006B3A  3800               	swapf	btemp,w,c
  1264  006B3C  0BF0               	andlw	240
  1265  006B3E  0100               	movlb	__Lparam shr (0+8)
  1266  006B40  6FA9               	movwf	(?a_WriteEEVNT2+1)^(__Lparam& (0+65280)),
      +                          b	;volatile
  1267                           ;konfig.c: 373: eeprom_write(0x00D4+d,v);
  1268  006B42  0ED4               	movlw	212
  1269  006B44  25A9               	addwf	(?a_WriteEEVNT2+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1270  006B46  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1271  006B48  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1272  006B4A  0E00               	movlw	0
  1273  006B4C  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1274  006B4E  51A8               	movf	?a_WriteEEVNT2^(__Lparam& (0+65280)),w
  1275  006B50  6FAB               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  1276  006B52  EC72  F04B         	call	_eeprom_write	;wreg free
  1277                           ;konfig.c: 374: eeprom_write(0x00D5+d,p);
  1278  006B56  0100               	movlb	__Lparam shr (0+8)
  1279  006B58  0ED5               	movlw	213
  1280  006B5A  25A9               	addwf	(?a_WriteEEVNT2+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1281  006B5C  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1282  006B5E  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1283  006B60  0E00               	movlw	0
  1284  006B62  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1285  006B64  51A8               	movf	?_WriteEEVNT2^(__Lparam& (0+65280)),w
  1286  006B66  D0E5               	goto	L22
  1287                           ;konfig.c: 375: }
  1288  006B68                     __end_of_WriteEEVNT2:
  1289                           ;konfig.c: 376: unsigned char ReadEEVNT2_V()
  1290                           ;konfig.c: 377: {
  1291  006B68                     _ReadEEVNT2_V:
  1292  000000                     
  1293                           ;konfig.c: 378: volatile unsigned char d;
  1294  006B68  DF81               	call	_ReadEERFAN	;wreg free
  1295  006B6A  6E00               	movwf	btemp,c
  1296  006B6C  3800               	swapf	btemp,w,c
  1297  006B6E  0BF0               	andlw	240
  1298  006B70  0100               	movlb	__Lparam shr (0+8)
  1299  006B72  6FA9               	movwf	?a_ReadEEVNT2_V^(__Lparam& (0+65280)),b	;
      +                          volatile
  1300                           ;konfig.c: 381: return eeprom_read(0x00D4+d);
  1301  006B74  0ED4               	movlw	212
  1302  006B76  25A9               	addwf	?a_ReadEEVNT2_V^(__Lparam& (0+65280)),w	;
      +                          volatile
  1303  006B78  D0F0               	goto	L25
  1304                           ;konfig.c: 382: }
  1305  006B7A                     __end_of_ReadEEVNT2_V:
  1306                           ;konfig.c: 383: unsigned char ReadEEVNT2_P()
  1307                           ;konfig.c: 384: {
  1308  006B7A                     _ReadEEVNT2_P:
  1309  000000                     
  1310                           ;konfig.c: 385: volatile unsigned char d;
  1311  006B7A  DF78               	call	_ReadEERFAN	;wreg free
  1312  006B7C  6E00               	movwf	btemp,c
  1313  006B7E  3800               	swapf	btemp,w,c
  1314  006B80  0BF0               	andlw	240
  1315  006B82  0100               	movlb	__Lparam shr (0+8)
  1316  006B84  6FA9               	movwf	?a_ReadEEVNT2_P^(__Lparam& (0+65280)),b	;
      +                          volatile
  1317                           ;konfig.c: 388: return eeprom_read(0x00D5+d);
  1318  006B86  0ED5               	movlw	213
  1319  006B88  25A9               	addwf	?a_ReadEEVNT2_P^(__Lparam& (0+65280)),w	;
      +                          volatile
  1320  006B8A  D0E7               	goto	L25
  1321                           ;konfig.c: 389: }
  1322  006B8C                     __end_of_ReadEEVNT2_P:
  1323                           ;konfig.c: 391: void WriteEEVNT3(unsigned char v
      +                          ,unsigned char p)
  1324                           ;konfig.c: 392: {
  1325  006B8C  00A8               	dw	?_WriteEEVNT3
  1326  006B8E                     _WriteEEVNT3:
  1327  000000                     
  1328                           ;_v stored from wreg
  1329  006B8E  0100               	movlb	__Lparam shr (0+8)
  1330  006B90  6FA8               	movwf	?a_WriteEEVNT3^(__Lparam& (0+65280)),b
  1331                           ;konfig.c: 393: volatile unsigned char d;
  1332  006B92  DF6C               	call	_ReadEERFAN	;wreg free
  1333  006B94  6E00               	movwf	btemp,c
  1334  006B96  3800               	swapf	btemp,w,c
  1335  006B98  0BF0               	andlw	240
  1336  006B9A  0100               	movlb	__Lparam shr (0+8)
  1337  006B9C  6FA9               	movwf	(?a_WriteEEVNT3+1)^(__Lparam& (0+65280)),
      +                          b	;volatile
  1338                           ;konfig.c: 396: eeprom_write(0x00D6+d,v);
  1339  006B9E  0ED6               	movlw	214
  1340  006BA0  25A9               	addwf	(?a_WriteEEVNT3+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1341  006BA2  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1342  006BA4  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1343  006BA6  0E00               	movlw	0
  1344  006BA8  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1345  006BAA  51A8               	movf	?a_WriteEEVNT3^(__Lparam& (0+65280)),w
  1346  006BAC  6FAB               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  1347  006BAE  EC72  F04B         	call	_eeprom_write	;wreg free
  1348                           ;konfig.c: 397: eeprom_write(0x00D7+d,p);
  1349  006BB2  0100               	movlb	__Lparam shr (0+8)
  1350  006BB4  0ED7               	movlw	215
  1351  006BB6  25A9               	addwf	(?a_WriteEEVNT3+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1352  006BB8  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1353  006BBA  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1354  006BBC  0E00               	movlw	0
  1355  006BBE  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1356  006BC0  51A8               	movf	?_WriteEEVNT3^(__Lparam& (0+65280)),w
  1357  006BC2  D0B7               	goto	L22
  1358                           ;konfig.c: 398: }
  1359  006BC4                     __end_of_WriteEEVNT3:
  1360                           ;konfig.c: 399: unsigned char ReadEEVNT3_V()
  1361                           ;konfig.c: 400: {
  1362  006BC4                     _ReadEEVNT3_V:
  1363  000000                     
  1364                           ;konfig.c: 401: volatile unsigned char d;
  1365  006BC4  DF53               	call	_ReadEERFAN	;wreg free
  1366  006BC6  6E00               	movwf	btemp,c
  1367  006BC8  3800               	swapf	btemp,w,c
  1368  006BCA  0BF0               	andlw	240
  1369  006BCC  0100               	movlb	__Lparam shr (0+8)
  1370  006BCE  6FA9               	movwf	?a_ReadEEVNT3_V^(__Lparam& (0+65280)),b	;
      +                          volatile
  1371                           ;konfig.c: 404: return eeprom_read(0x00D6+d);
  1372  006BD0  0ED6               	movlw	214
  1373  006BD2  25A9               	addwf	?a_ReadEEVNT3_V^(__Lparam& (0+65280)),w	;
      +                          volatile
  1374  006BD4  D0C2               	goto	L25
  1375                           ;konfig.c: 405: }
  1376  006BD6                     __end_of_ReadEEVNT3_V:
  1377                           ;konfig.c: 406: unsigned char ReadEEVNT3_P()
  1378                           ;konfig.c: 407: {
  1379  006BD6                     _ReadEEVNT3_P:
  1380  000000                     
  1381                           ;konfig.c: 408: volatile unsigned char d;
  1382  006BD6  DF4A               	call	_ReadEERFAN	;wreg free
  1383  006BD8  6E00               	movwf	btemp,c
  1384  006BDA  3800               	swapf	btemp,w,c
  1385  006BDC  0BF0               	andlw	240
  1386  006BDE  0100               	movlb	__Lparam shr (0+8)
  1387  006BE0  6FA9               	movwf	?a_ReadEEVNT3_P^(__Lparam& (0+65280)),b	;
      +                          volatile
  1388                           ;konfig.c: 411: return eeprom_read(0x00D7+d);
  1389  006BE2  0ED7               	movlw	215
  1390  006BE4  25A9               	addwf	?a_ReadEEVNT3_P^(__Lparam& (0+65280)),w	;
      +                          volatile
  1391  006BE6  D0B9               	goto	L25
  1392                           ;konfig.c: 412: }
  1393  006BE8                     __end_of_ReadEEVNT3_P:
  1394                           ;konfig.c: 414: void WriteEEVNT4(unsigned char v
      +                          ,unsigned char p)
  1395                           ;konfig.c: 415: {
  1396  006BE8  00A8               	dw	?_WriteEEVNT4
  1397  006BEA                     _WriteEEVNT4:
  1398  000000                     
  1399                           ;_v stored from wreg
  1400  006BEA  0100               	movlb	__Lparam shr (0+8)
  1401  006BEC  6FA8               	movwf	?a_WriteEEVNT4^(__Lparam& (0+65280)),b
  1402                           ;konfig.c: 416: volatile unsigned char d;
  1403  006BEE  DF3E               	call	_ReadEERFAN	;wreg free
  1404  006BF0  6E00               	movwf	btemp,c
  1405  006BF2  3800               	swapf	btemp,w,c
  1406  006BF4  0BF0               	andlw	240
  1407  006BF6  0100               	movlb	__Lparam shr (0+8)
  1408  006BF8  6FA9               	movwf	(?a_WriteEEVNT4+1)^(__Lparam& (0+65280)),
      +                          b	;volatile
  1409                           ;konfig.c: 419: eeprom_write(0x00D8+d,v);
  1410  006BFA  0ED8               	movlw	216
  1411  006BFC  25A9               	addwf	(?a_WriteEEVNT4+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1412  006BFE  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1413  006C00  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1414  006C02  0E00               	movlw	0
  1415  006C04  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1416  006C06  51A8               	movf	?a_WriteEEVNT4^(__Lparam& (0+65280)),w
  1417  006C08  6FAB               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  1418  006C0A  EC72  F04B         	call	_eeprom_write	;wreg free
  1419                           ;konfig.c: 420: eeprom_write(0x00D9+d,p);
  1420  006C0E  0100               	movlb	__Lparam shr (0+8)
  1421  006C10  0ED9               	movlw	217
  1422  006C12  25A9               	addwf	(?a_WriteEEVNT4+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1423  006C14  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1424  006C16  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1425  006C18  0E00               	movlw	0
  1426  006C1A  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1427  006C1C  51A8               	movf	?_WriteEEVNT4^(__Lparam& (0+65280)),w
  1428  006C1E  D089               	goto	L22
  1429                           ;konfig.c: 421: }
  1430  006C20                     __end_of_WriteEEVNT4:
  1431                           ;konfig.c: 422: unsigned char ReadEEVNT4_V()
  1432                           ;konfig.c: 423: {
  1433  006C20                     _ReadEEVNT4_V:
  1434  000000                     
  1435                           ;konfig.c: 424: volatile unsigned char d;
  1436  006C20  DF25               	call	_ReadEERFAN	;wreg free
  1437  006C22  6E00               	movwf	btemp,c
  1438  006C24  3800               	swapf	btemp,w,c
  1439  006C26  0BF0               	andlw	240
  1440  006C28  0100               	movlb	__Lparam shr (0+8)
  1441  006C2A  6FA9               	movwf	?a_ReadEEVNT4_V^(__Lparam& (0+65280)),b	;
      +                          volatile
  1442                           ;konfig.c: 427: return eeprom_read(0x00D8+d);
  1443  006C2C  0ED8               	movlw	216
  1444  006C2E  25A9               	addwf	?a_ReadEEVNT4_V^(__Lparam& (0+65280)),w	;
      +                          volatile
  1445  006C30  D094               	goto	L25
  1446                           ;konfig.c: 428: }
  1447  006C32                     __end_of_ReadEEVNT4_V:
  1448                           ;konfig.c: 429: unsigned char ReadEEVNT4_P()
  1449                           ;konfig.c: 430: {
  1450  006C32                     _ReadEEVNT4_P:
  1451  000000                     
  1452                           ;konfig.c: 431: volatile unsigned char d;
  1453  006C32  DF1C               	call	_ReadEERFAN	;wreg free
  1454  006C34  6E00               	movwf	btemp,c
  1455  006C36  3800               	swapf	btemp,w,c
  1456  006C38  0BF0               	andlw	240
  1457  006C3A  0100               	movlb	__Lparam shr (0+8)
  1458  006C3C  6FA9               	movwf	?a_ReadEEVNT4_P^(__Lparam& (0+65280)),b	;
      +                          volatile
  1459                           ;konfig.c: 434: return eeprom_read(0x00D9+d);
  1460  006C3E  0ED9               	movlw	217
  1461  006C40  25A9               	addwf	?a_ReadEEVNT4_P^(__Lparam& (0+65280)),w	;
      +                          volatile
  1462  006C42  D08B               	goto	L25
  1463                           ;konfig.c: 435: }
  1464  006C44                     __end_of_ReadEEVNT4_P:
  1465                           ;konfig.c: 437: void WriteEEVNT5(unsigned char v
      +                          ,unsigned char p)
  1466                           ;konfig.c: 438: {
  1467  006C44  00A8               	dw	?_WriteEEVNT5
  1468  006C46                     _WriteEEVNT5:
  1469  000000                     
  1470                           ;_v stored from wreg
  1471  006C46  0100               	movlb	__Lparam shr (0+8)
  1472  006C48  6FA8               	movwf	?a_WriteEEVNT5^(__Lparam& (0+65280)),b
  1473                           ;konfig.c: 439: volatile unsigned char d;
  1474  006C4A  DF10               	call	_ReadEERFAN	;wreg free
  1475  006C4C  6E00               	movwf	btemp,c
  1476  006C4E  3800               	swapf	btemp,w,c
  1477  006C50  0BF0               	andlw	240
  1478  006C52  0100               	movlb	__Lparam shr (0+8)
  1479  006C54  6FA9               	movwf	(?a_WriteEEVNT5+1)^(__Lparam& (0+65280)),
      +                          b	;volatile
  1480                           ;konfig.c: 442: eeprom_write(0x00DA+d,v);
  1481  006C56  0EDA               	movlw	218
  1482  006C58  25A9               	addwf	(?a_WriteEEVNT5+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1483  006C5A  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1484  006C5C  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1485  006C5E  0E00               	movlw	0
  1486  006C60  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1487  006C62  51A8               	movf	?a_WriteEEVNT5^(__Lparam& (0+65280)),w
  1488  006C64  6FAB               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  1489  006C66  EC72  F04B         	call	_eeprom_write	;wreg free
  1490                           ;konfig.c: 443: eeprom_write(0x00DB+d,p);
  1491  006C6A  0100               	movlb	__Lparam shr (0+8)
  1492  006C6C  0EDB               	movlw	219
  1493  006C6E  25A9               	addwf	(?a_WriteEEVNT5+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1494  006C70  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1495  006C72  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1496  006C74  0E00               	movlw	0
  1497  006C76  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1498  006C78  51A8               	movf	?_WriteEEVNT5^(__Lparam& (0+65280)),w
  1499  006C7A  D05B               	goto	L22
  1500                           ;konfig.c: 444: }
  1501  006C7C                     __end_of_WriteEEVNT5:
  1502                           ;konfig.c: 445: unsigned char ReadEEVNT5_V()
  1503                           ;konfig.c: 446: {
  1504  006C7C                     _ReadEEVNT5_V:
  1505  000000                     
  1506                           ;konfig.c: 447: volatile unsigned char d;
  1507  006C7C  DEF7               	call	_ReadEERFAN	;wreg free
  1508  006C7E  6E00               	movwf	btemp,c
  1509  006C80  3800               	swapf	btemp,w,c
  1510  006C82  0BF0               	andlw	240
  1511  006C84  0100               	movlb	__Lparam shr (0+8)
  1512  006C86  6FA9               	movwf	?a_ReadEEVNT5_V^(__Lparam& (0+65280)),b	;
      +                          volatile
  1513                           ;konfig.c: 450: return eeprom_read(0x00DA+d);
  1514  006C88  0EDA               	movlw	218
  1515  006C8A  25A9               	addwf	?a_ReadEEVNT5_V^(__Lparam& (0+65280)),w	;
      +                          volatile
  1516  006C8C  D066               	goto	L25
  1517                           ;konfig.c: 451: }
  1518  006C8E                     __end_of_ReadEEVNT5_V:
  1519                           ;konfig.c: 452: unsigned char ReadEEVNT5_P()
  1520                           ;konfig.c: 453: {
  1521  006C8E                     _ReadEEVNT5_P:
  1522  000000                     
  1523                           ;konfig.c: 454: volatile unsigned char d;
  1524  006C8E  DEEE               	call	_ReadEERFAN	;wreg free
  1525  006C90  6E00               	movwf	btemp,c
  1526  006C92  3800               	swapf	btemp,w,c
  1527  006C94  0BF0               	andlw	240
  1528  006C96  0100               	movlb	__Lparam shr (0+8)
  1529  006C98  6FA9               	movwf	?a_ReadEEVNT5_P^(__Lparam& (0+65280)),b	;
      +                          volatile
  1530                           ;konfig.c: 457: return eeprom_read(0x00DB+d);
  1531  006C9A  0EDB               	movlw	219
  1532  006C9C  25A9               	addwf	?a_ReadEEVNT5_P^(__Lparam& (0+65280)),w	;
      +                          volatile
  1533  006C9E  D05D               	goto	L25
  1534                           ;konfig.c: 458: }
  1535  006CA0                     __end_of_ReadEEVNT5_P:
  1536                           ;konfig.c: 460: void WriteEEVNT6(unsigned char v
      +                          ,unsigned char p)
  1537                           ;konfig.c: 461: {
  1538  006CA0  00A8               	dw	?_WriteEEVNT6
  1539  006CA2                     _WriteEEVNT6:
  1540  000000                     
  1541                           ;_v stored from wreg
  1542  006CA2  0100               	movlb	__Lparam shr (0+8)
  1543  006CA4  6FA8               	movwf	?a_WriteEEVNT6^(__Lparam& (0+65280)),b
  1544                           ;konfig.c: 462: volatile unsigned char d;
  1545  006CA6  DEE2               	call	_ReadEERFAN	;wreg free
  1546  006CA8  6E00               	movwf	btemp,c
  1547  006CAA  3800               	swapf	btemp,w,c
  1548  006CAC  0BF0               	andlw	240
  1549  006CAE  0100               	movlb	__Lparam shr (0+8)
  1550  006CB0  6FA9               	movwf	(?a_WriteEEVNT6+1)^(__Lparam& (0+65280)),
      +                          b	;volatile
  1551                           ;konfig.c: 465: eeprom_write(0x00DC+d,v);
  1552  006CB2  0EDC               	movlw	220
  1553  006CB4  25A9               	addwf	(?a_WriteEEVNT6+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1554  006CB6  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1555  006CB8  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1556  006CBA  0E00               	movlw	0
  1557  006CBC  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1558  006CBE  51A8               	movf	?a_WriteEEVNT6^(__Lparam& (0+65280)),w
  1559  006CC0  6FAB               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  1560  006CC2  EC72  F04B         	call	_eeprom_write	;wreg free
  1561                           ;konfig.c: 466: eeprom_write(0x00DD+d,p);
  1562  006CC6  0100               	movlb	__Lparam shr (0+8)
  1563  006CC8  0EDD               	movlw	221
  1564  006CCA  25A9               	addwf	(?a_WriteEEVNT6+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1565  006CCC  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1566  006CCE  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1567  006CD0  0E00               	movlw	0
  1568  006CD2  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1569  006CD4  51A8               	movf	?_WriteEEVNT6^(__Lparam& (0+65280)),w
  1570  006CD6  D02D               	goto	L22
  1571                           ;konfig.c: 467: }
  1572  006CD8                     __end_of_WriteEEVNT6:
  1573                           ;konfig.c: 468: unsigned char ReadEEVNT6_V()
  1574                           ;konfig.c: 469: {
  1575  006CD8                     _ReadEEVNT6_V:
  1576  000000                     
  1577                           ;konfig.c: 470: volatile unsigned char d;
  1578  006CD8  DEC9               	call	_ReadEERFAN	;wreg free
  1579  006CDA  6E00               	movwf	btemp,c
  1580  006CDC  3800               	swapf	btemp,w,c
  1581  006CDE  0BF0               	andlw	240
  1582  006CE0  0100               	movlb	__Lparam shr (0+8)
  1583  006CE2  6FA9               	movwf	?a_ReadEEVNT6_V^(__Lparam& (0+65280)),b	;
      +                          volatile
  1584                           ;konfig.c: 473: return eeprom_read(0x00DC+d);
  1585  006CE4  0EDC               	movlw	220
  1586  006CE6  25A9               	addwf	?a_ReadEEVNT6_V^(__Lparam& (0+65280)),w	;
      +                          volatile
  1587  006CE8  D038               	goto	L25
  1588                           ;konfig.c: 474: }
  1589  006CEA                     __end_of_ReadEEVNT6_V:
  1590                           ;konfig.c: 475: unsigned char ReadEEVNT6_P()
  1591                           ;konfig.c: 476: {
  1592  006CEA                     _ReadEEVNT6_P:
  1593  000000                     
  1594                           ;konfig.c: 477: volatile unsigned char d;
  1595  006CEA  DEC0               	call	_ReadEERFAN	;wreg free
  1596  006CEC  6E00               	movwf	btemp,c
  1597  006CEE  3800               	swapf	btemp,w,c
  1598  006CF0  0BF0               	andlw	240
  1599  006CF2  0100               	movlb	__Lparam shr (0+8)
  1600  006CF4  6FA9               	movwf	?a_ReadEEVNT6_P^(__Lparam& (0+65280)),b	;
      +                          volatile
  1601                           ;konfig.c: 480: return eeprom_read(0x00DD+d);
  1602  006CF6  0EDD               	movlw	221
  1603  006CF8  25A9               	addwf	?a_ReadEEVNT6_P^(__Lparam& (0+65280)),w	;
      +                          volatile
  1604  006CFA  D02F               	goto	L25
  1605                           ;konfig.c: 481: }
  1606  006CFC                     __end_of_ReadEEVNT6_P:
  1607                           ;konfig.c: 483: void WriteEEVNT7(unsigned char v
      +                          ,unsigned char p)
  1608                           ;konfig.c: 484: {
  1609  006CFC  00A8               	dw	?_WriteEEVNT7
  1610  006CFE                     _WriteEEVNT7:
  1611  000000                     
  1612                           ;_v stored from wreg
  1613  006CFE  0100               	movlb	__Lparam shr (0+8)
  1614  006D00  6FA8               	movwf	?a_WriteEEVNT7^(__Lparam& (0+65280)),b
  1615                           ;konfig.c: 485: volatile unsigned char d;
  1616  006D02  DEB4               	call	_ReadEERFAN	;wreg free
  1617  006D04  6E00               	movwf	btemp,c
  1618  006D06  3800               	swapf	btemp,w,c
  1619  006D08  0BF0               	andlw	240
  1620  006D0A  0100               	movlb	__Lparam shr (0+8)
  1621  006D0C  6FA9               	movwf	(?a_WriteEEVNT7+1)^(__Lparam& (0+65280)),
      +                          b	;volatile
  1622                           ;konfig.c: 488: eeprom_write(0x00DE+d,v);
  1623  006D0E  0EDE               	movlw	222
  1624  006D10  25A9               	addwf	(?a_WriteEEVNT7+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1625  006D12  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1626  006D14  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1627  006D16  0E00               	movlw	0
  1628  006D18  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1629  006D1A  51A8               	movf	?a_WriteEEVNT7^(__Lparam& (0+65280)),w
  1630  006D1C  6FAB               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  1631  006D1E  EC72  F04B         	call	_eeprom_write	;wreg free
  1632                           ;konfig.c: 489: eeprom_write(0x00DF+d,p);
  1633  006D22  0100               	movlb	__Lparam shr (0+8)
  1634  006D24  0EDF               	movlw	223
  1635  006D26  25A9               	addwf	(?a_WriteEEVNT7+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1636  006D28  6FA9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1637  006D2A  6BAA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1638  006D2C  0E00               	movlw	0
  1639  006D2E  23AA               	addwfc	(?_eeprom_write+1)^(__Lparam& (0+65280))
      +                          ,f,b
  1640  006D30  51A8               	movf	?_WriteEEVNT7^(__Lparam& (0+65280)),w
  1641  006D32                     L22:
  1642  006D32  6FAB               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  1643  006D34  EF72  F04B         	goto	_eeprom_write	;wreg free
  1644                           ;konfig.c: 490: }
  1645  006D38                     __end_of_WriteEEVNT7:
  1646                           ;konfig.c: 491: unsigned char ReadEEVNT7_V()
  1647                           ;konfig.c: 492: {
  1648  006D38                     _ReadEEVNT7_V:
  1649  000000                     
  1650                           ;konfig.c: 493: volatile unsigned char d;
  1651  006D38  DE99               	call	_ReadEERFAN	;wreg free
  1652  006D3A  6E00               	movwf	btemp,c
  1653  006D3C  3800               	swapf	btemp,w,c
  1654  006D3E  0BF0               	andlw	240
  1655  006D40  0100               	movlb	__Lparam shr (0+8)
  1656  006D42  6FA9               	movwf	?a_ReadEEVNT7_V^(__Lparam& (0+65280)),b	;
      +                          volatile
  1657                           ;konfig.c: 496: return eeprom_read(0x00DE+d);
  1658  006D44  0EDE               	movlw	222
  1659  006D46  25A9               	addwf	?a_ReadEEVNT7_V^(__Lparam& (0+65280)),w	;
      +                          volatile
  1660  006D48  D008               	goto	L25
  1661                           ;konfig.c: 497: }
  1662  006D4A                     __end_of_ReadEEVNT7_V:
  1663                           ;konfig.c: 498: unsigned char ReadEEVNT7_P()
  1664                           ;konfig.c: 499: {
  1665  006D4A                     _ReadEEVNT7_P:
  1666  000000                     
  1667                           ;konfig.c: 500: volatile unsigned char d;
  1668  006D4A  DE90               	call	_ReadEERFAN	;wreg free
  1669  006D4C  6E00               	movwf	btemp,c
  1670  006D4E  3800               	swapf	btemp,w,c
  1671  006D50  0BF0               	andlw	240
  1672  006D52  0100               	movlb	__Lparam shr (0+8)
  1673  006D54  6FA9               	movwf	?a_ReadEEVNT7_P^(__Lparam& (0+65280)),b	;
      +                          volatile
  1674                           ;konfig.c: 503: return eeprom_read(0x00DF+d);
  1675  006D56  0EDF               	movlw	223
  1676  006D58  25A9               	addwf	?a_ReadEEVNT7_P^(__Lparam& (0+65280)),w	;
      +                          volatile
  1677  006D5A                     L25:
  1678  006D5A  6FAD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1679  006D5C  6BAE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1680  006D5E  0E00               	movlw	0
  1681  006D60  23AE               	addwfc	(?_eeprom_read+1)^(__Lparam& (0+65280)),
      +                          f,b
  1682  006D62  EF33  F04C         	goto	_eeprom_read	;wreg free
  1683                           ;konfig.c: 504: }
  1684  006D66                     __end_of_ReadEEVNT7_P:
  1685  000000                     
  1686  000000                     
  1687  000000                     
  1688  000000                     
  1689  000000                     
  1690  000000                     
  1691  000000                     
  1692  000000                     
  1693  000000                     
  1694  000000                     
  1695  000000                     
  1696  000000                     
  1697  000000                     
  1698  000000                     
  1699  000000                     
  1700  000000                     
  1701  000000                     
  1702  000000                     
  1703  000000                     
  1704  000000                     
  1705  000000                     
  1706  000000                     
  1707  000000                     
  1708  000000                     
  1709  000000                     
  1710  000000                     
  1711  000000                     
  1712  000000                     
  1713  000000                     
  1714  000000                     
  1715  000000                     
  1716  000000                     
  1717  000000                     
  1718  000000                     
  1719  000000                     
  1720  000000                     
  1721  000000                     
  1722  000000                     
  1723  000000                     
  1724  000000                     
  1725  000000                     
  1726  000000                     
  1727  000000                     
  1728  000000                     
  1729  000000                     
  1730  000000                     
  1731  000000                     
  1732  000000                     
  1733  000000                     
  1734  000000                     
  1735  000000                     
  1736  000000                     
  1737  000000                     
  1738  000000                     
  1739  000000                     
  1740  000000                     
  1741  000000                     
  1742  000000                     
  1743  000000                     
  1744  000000                     
  1745  000000                     
  1746  000000                     
  1747  000000                     
  1748  000000                     
  1749  000000                     
  1750  000000                     
  1751  000000                     
  1752  000000                     
  1753  000000                     
  1754  000000                     
  1755  000000                     
  1756  000000                     
  1757  000000                     
  1758  000000                     
  1759  000000                     
  1760  000000                     
  1761  000000                     
  1762  000000                     
  1763  000000                     
  1764  000000                     
  1765  000000                     
  1766  000000                     
  1767  000000                     
  1768  000000                     
  1769  000000                     
  1770  000000                     
  1771  000000                     
  1772  000000                     
  1773  000000                     
  1774  000000                     
  1775  000000                     
  1776  000000                     
  1777  000000                     
  1778  000000                     
  1779  000000                     
  1780  000000                     
  1781  000000                     
  1782  000000                     
  1783  000000                     
  1784  000000                     
  1785  000000                     
  1786  000000                     
  1787  000000                     
  1788  000000                     
  1789  000000                     
  1790  000000                     
  1791  000000                     
  1792  000000                     
  1793  000000                     
  1794  000000                     
  1795  000000                     
  1796  000000                     
  1797  000000                     
  1798  000000                     
  1799  000000                     
  1800  000000                     
  1801  000000                     
  1802  000000                     
  1803  000000                     
  1804  000000                     
  1805  000000                     
  1806  000000                     
  1807  000000                     
  1808  000000                     
  1809  000000                     
  1810  000000                     
  1811  000000                     
  1812  000000                     
  1813  000000                     
  1814  000000                     
  1815  000000                     
  1816  000000                     
  1817  000000                     
  1818  000000                     
  1819  000000                     
  1820  000000                     
  1821  000000                     
  1822  000000                     
  1823  000000                     
  1824  000000                     
  1825  000000                     
  1826  000000                     
  1827  000000                     
  1828  000000                     
  1829  000000                     
  1830  000000                     
  1831  000000                     
  1832  000000                     
  1833  000000                     
  1834  000000                     
  1835  000000                     
  1836  000000                     
  1837  000000                     
  1838  000000                     
  1839  000000                     
  1840  000000                     
  1841  000000                     
  1842  000000                     
  1843  000000                     
  1844  000000                     
  1845  000000                     
  1846  000000                     
  1847  000000                     
  1848  000000                     
  1849  000000                     
  1850  000000                     
  1851  000000                     
  1852  000000                     
  1853  000000                     
  1854  000000                     
  1855  000000                     
  1856  000000                     
  1857  000000                     
  1858  000000                     
  1859  000000                     
  1860  000000                     
  1861  000000                     
  1862  000000                     
  1863  000000                     
  1864  000000                     
  1865  000000                     
  1866  000000                     
  1867  000000                     
  1868  000000                     
  1869  000000                     
  1870  000000                     
  1871  000000                     
  1872  000000                     
  1873  000000                     
  1874  000000                     
  1875  000000                     
  1876  000000                     
  1877  000000                     
  1878  000000                     
  1879  000000                     
  1880  000000                     
  1881  000000                     
  1882  000000                     
  1883  000000                     
  1884  000000                     
  1885  000000                     
  1886  000000                     
  1887  000000                     
  1888  000000                     
  1889  000000                     
  1890  000000                     
  1891  000000                     
  1892  000000                     
  1893  000000                     
  1894  000000                     
  1895  000000                     
  1896  000000                     
  1897  000000                     
  1898  000000                     
  1899  000000                     
  1900  000000                     
  1901  000000                     
  1902  000000                     
  1903  000000                     
  1904  000000                     
  1905  000000                     
  1906  000000                     
  1907  000000                     
  1908  000000                     
  1909  000000                     
  1910  000000                     
  1911  000000                     
  1912  000000                     
  1913  000000                     
  1914  000000                     
  1915  000000                     
  1916  000000                     
  1917  000000                     
  1918  000000                     
  1919  000000                     
  1920  000000                     
  1921  000000                     
  1922  000000                     
  1923  000000                     
  1924  000000                     
  1925  000000                     
  1926  000000                     
  1927  000000                     
  1928  000000                     
  1929  000000                     
  1930  000000                     
  1931  000000                     
  1932  000000                     
  1933  000000                     
  1934  000000                     
  1935  000000                     
  1936  000000                     
  1937  000000                     
  1938  000000                     
  1939  000000                     
  1940  000000                     
  1941  000000                     
  1942  000000                     
  1943  000000                     
  1944  000000                     
  1945  000000                     
  1946  000000                     
  1947  000000                     
  1948  000000                     
  1949  000000                     
  1950  000000                     
  1951  000000                     
  1952  000000                     
  1953  000000                     
  1954  000000                     
  1955  000000                     
  1956  000000                     
  1957  000000                     
  1958  000000                     
  1959  000000                     
  1960  000000                     
  1961  000000                     
  1962  000000                     
  1963  000000                     
  1964  000000                     
  1965  000000                     
  1966  000000                     
  1967  000000                     
  1968  000000                     
  1969  000000                     
  1970  000000                     
  1971  000000                     
  1972  000000                     
  1973  000000                     
  1974  000000                     
  1975  000000                     
  1976  000000                     
  1977  000000                     
  1978  000000                     
  1979  000000                     
  1980  000000                     
  1981  000000                     
  1982  000000                     
  1983  000000                     
  1984  000000                     
  1985  000000                     
  1986  000000                     
  1987  000000                     
  1988  000000                     
  1989  000000                     
  1990  000000                     
  1991  000000                     
  1992  000000                     
  1993  000000                     
  1994  000000                     
  1995  000000                     
  1996  000000                     
  1997  000000                     
  1998  000000                     
  1999  000000                     
  2000  000000                     
  2001  000000                     
  2002  000000                     
  2003  000000                     
  2004  000000                     
  2005  000000                     
  2006  000000                     
  2007  000000                     
  2008  000000                     
  2009  000000                     
  2010  000000                     
  2011  000000                     
  2012  000000                     
  2013  000000                     
  2014  000000                     
  2015  000000                     
  2016  000000                     
  2017  000000                     
  2018  000000                     
  2019  000000                     
  2020  000000                     
  2021  000000                     
  2022  000000                     
  2023  000000                     
  2024  000000                     
  2025  000000                     
  2026  000000                     
  2027  000000                     
  2028  000000                     
  2029  000000                     
  2030  000000                     
  2031  000000                     
  2032  000000                     
  2033  000000                     
  2034  000000                     
  2035  000000                     
  2036  000000                     
  2037  000000                     
  2038  000000                     
  2039  000000                     
  2040  000000                     
  2041  000000                     
  2042  000000                     
  2043  000000                     
  2044  000000                     
  2045  000000                     
  2046  000000                     
  2047  000000                     
  2048  000000                     
  2049  000000                     
  2050  000000                     
  2051  000000                     
  2052  000000                     
  2053  000000                     
  2054  000000                     
  2055  000000                     
  2056  000000                     
  2057  000000                     
  2058  000000                     
  2059  000000                     
  2060  000000                     
  2061  000000                     
  2062  000000                     
  2063  000000                     
  2064  000000                     
  2065  000000                     
  2066  000000                     
  2067  000000                     
  2068  000000                     
  2069  000000                     
  2070  000000                     
  2071  000000                     
  2072  000000                     
  2073  000000                     
  2074  000000                     
  2075  000000                     
  2076  000000                     
  2077  000000                     
  2078  000000                     
  2079  000000                     
  2080  000000                     
  2081  000000                     
  2082  000000                     
  2083  000000                     
  2084  000000                     
  2085  000000                     
  2086  000000                     
  2087  000000                     
  2088  000000                     
  2089  000000                     
  2090  000000                     
  2091  000000                     
  2092  000000                     
  2093  000000                     
  2094  000000                     
  2095  000000                     
  2096  000000                     
  2097  000000                     
  2098  000000                     
  2099  000000                     
  2100  000000                     
  2101  000000                     
  2102  000000                     
  2103  000000                     
  2104  000000                     
  2105  000000                     
  2106  000000                     
  2107  000000                     
  2108  000000                     
  2109  000000                     
  2110  000000                     
  2111  000000                     
  2112  000000                     
  2113  000000                     
  2114  000000                     
  2115  000000                     
  2116  000000                     
  2117  000000                     
  2118  000000                     
  2119  000000                     
  2120  000000                     
  2121  000000                     
  2122  000000                     
  2123  000000                     
  2124  000000                     
  2125  000000                     
  2126  000000                     
  2127  000000                     
  2128  000000                     
  2129  000000                     
  2130  000000                     
  2131  000000                     
  2132  000000                     
  2133  000000                     
  2134  000000                     
  2135  000000                     
  2136  000000                     
  2137  000000                     
  2138  000000                     
  2139  000000                     
  2140  000000                     
  2141  000000                     
  2142  000000                     
  2143  000000                     
  2144  000000                     
  2145  000000                     
  2146  000000                     
  2147  000000                     
  2148  000000                     
  2149  000000                     
  2150  000000                     
  2151  000000                     
  2152  000000                     
  2153  000000                     
  2154  000000                     
  2155  000000                     
  2156  000000                     
  2157  000000                     
  2158  000000                     
  2159  000000                     
  2160  000000                     
  2161  000000                     
  2162  000000                     
  2163  000000                     
  2164  000000                     
  2165  000000                     
  2166  000000                     
  2167  000000                     
  2168  000000                     
  2169  000000                     
  2170  000000                     
  2171  000000                     
  2172  000000                     
  2173  000000                     
  2174  000000                     
  2175  000000                     
  2176  000000                     
  2177  000000                     
  2178  000000                     
  2179  000000                     
  2180  000000                     
  2181  000000                     
  2182  000000                     
  2183  000000                     
  2184  000000                     
  2185  000000                     
  2186  000000                     
  2187  000000                     
  2188  000000                     
  2189  000000                     
  2190  000000                     
  2191  000000                     
  2192  000000                     
  2193  000000                     
  2194  000000                     
  2195  000000                     
  2196  000000                     
  2197  000000                     
  2198  000000                     
  2199  000000                     
  2200  000000                     
  2201  000000                     
  2202  000000                     
  2203  000000                     
  2204  000000                     
  2205  000000                     
  2206  000000                     
  2207  000000                     
  2208  000000                     
  2209  000000                     
  2210  000000                     
  2211  000000                     
  2212  000000                     
  2213  000000                     
  2214  000000                     
  2215  000000                     
  2216  000000                     
  2217  000000                     
  2218  000000                     
  2219  000000                     
  2220  000000                     
  2221  000000                     
  2222  000000                     
  2223  000000                     
  2224  000000                     
  2225  000000                     
  2226  000000                     
  2227  000000                     
  2228  000000                     
  2229  000000                     
  2230  000000                     
  2231  000000                     
  2232  000000                     
  2233  000000                     
  2234  000000                     
  2235  000000                     
  2236  000000                     
  2237  000000                     
  2238  000000                     
  2239  000000                     
  2240  000000                     
  2241  000000                     
  2242  000000                     
  2243  000000                     
  2244  000000                     
  2245  000000                     
  2246                           
  2247                           	psect	eeprom_data
  2248                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
  2249                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
  2250                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
  2251                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
  2252                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
  2253                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
  2254                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
  2255                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
  2256                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
  2257                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
  2258                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
  2259                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
  2260                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
  2261                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
  2262                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
  2263                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
  2264                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
  2265                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
  2266                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
  2267                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
  2268                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
  2269                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
  2270                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
  2271                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
  2272                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
  2273                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
  2274                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
  2275                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
  2276                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
  2277                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
  2278                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
  2279                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
  2280                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
  2281                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
  2282                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
  2283                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
  2284                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
  2285                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
  2286                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
  2287                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
  2288                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
  2289                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
  2290                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
  2291                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
  2292                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
  2293                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
  2294                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
  2295                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
  2296                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
  2297                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
  2298                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
  2299                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
  2300                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
  2301                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
  2302                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
  2303                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
  2304                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
  2305                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
  2306                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
  2307                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
  2308                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
  2309                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
  2310                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
  2311                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
  2312                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
  2313                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
  2314                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
  2315                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
  2316                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
  2317                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
  2318                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
  2319                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
  2320                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
  2321                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
  2322                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
  2323                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
  2324                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
  2325                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
  2326                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
  2327                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
  2328                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
  2329                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
  2330                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
  2331                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
  2332                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
  2333                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
  2334                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
  2335                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
  2336                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
  2337                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
  2338                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
  2339                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
  2340                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
  2341                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
  2342                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
  2343                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
  2344                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
  2345                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
  2346                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
  2347                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
  2348  F00100  63 63 62 62 61 60  	db	99,99,98,98,97,96,95,95	;#
      +       5F 5F              
  2349                           ;eeprom.h: 83: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "94" "," "93" "," "92" "," 
      +                          "92" "," "91" "," "90" "," "90" "," "89");
  2350  F00108  5E 5D 5C 5C 5B 5A  	db	94,93,92,92,91,90,90,89	;#
      +       5A 59              
  2351                           ;eeprom.h: 84: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "88" "," "88" "," "87" "," 
      +                          "87" "," "86" "," "85" "," "85" "," "84");
  2352  F00110  58 58 57 57 56 55  	db	88,88,87,87,86,85,85,84	;#
      +       55 54              
  2353                           ;eeprom.h: 85: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "84" "," "83" "," "82" "," 
      +                          "82" "," "81" "," "81" "," "80" "," "80");
  2354  F00118  54 53 52 52 51 51  	db	84,83,82,82,81,81,80,80	;#
      +       50 50              
  2355                           ;eeprom.h: 86: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "79" "," "79" "," "78" "," 
      +                          "77" "," "77" "," "76" "," "76" "," "75");
  2356  F00120  4F 4F 4E 4D 4D 4C  	db	79,79,78,77,77,76,76,75	;#
      +       4C 4B              
  2357                           ;eeprom.h: 87: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "75" "," "74" "," "74" "," 
      +                          "73" "," "73" "," "72" "," "72" "," "71");
  2358  F00128  4B 4A 4A 49 49 48  	db	75,74,74,73,73,72,72,71	;#
      +       48 47              
  2359                           ;eeprom.h: 88: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "71" "," "70" "," "70" "," 
      +                          "70" "," "69" "," "69" "," "68" "," "68");
  2360  F00130  47 46 46 46 45 45  	db	71,70,70,70,69,69,68,68	;#
      +       44 44              
  2361                           ;eeprom.h: 89: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "67" "," "67" "," "66" "," 
      +                          "66" "," "65" "," "65" "," "64" "," "64");
  2362  F00138  43 43 42 42 41 41  	db	67,67,66,66,65,65,64,64	;#
      +       40 40              
  2363                           ;eeprom.h: 90: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "64" "," "63" "," "63" "," 
      +                          "62" "," "62" "," "61" "," "61" "," "61");
  2364  F00140  40 3F 3F 3E 3E 3D  	db	64,63,63,62,62,61,61,61	;#
      +       3D 3D              
  2365                           ;eeprom.h: 91: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "60" "," "60" "," "59" "," 
      +                          "59" "," "58" "," "58" "," "57" "," "57");
  2366  F00148  3C 3C 3B 3B 3A 3A  	db	60,60,59,59,58,58,57,57	;#
      +       39 39              
  2367                           ;eeprom.h: 92: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "57" "," "56" "," "56" "," 
      +                          "55" "," "55" "," "54" "," "54" "," "54");
  2368  F00150  39 38 38 37 37 36  	db	57,56,56,55,55,54,54,54	;#
      +       36 36              
  2369                           ;eeprom.h: 93: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "53" "," "53" "," "52" "," 
      +                          "52" "," "52" "," "51" "," "51" "," "50");
  2370  F00158  35 35 34 34 34 33  	db	53,53,52,52,52,51,51,50	;#
      +       33 32              
  2371                           ;eeprom.h: 94: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "50" "," "49" "," "49" "," 
      +                          "49" "," "48" "," "48" "," "47" "," "47");
  2372  F00160  32 31 31 31 30 30  	db	50,49,49,49,48,48,47,47	;#
      +       2F 2F              
  2373                           ;eeprom.h: 95: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "46" "," "46" "," "46" "," 
      +                          "45" "," "45" "," "44" "," "44" "," "44");
  2374  F00168  2E 2E 2E 2D 2D 2C  	db	46,46,46,45,45,44,44,44	;#
      +       2C 2C              
  2375                           ;eeprom.h: 96: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "43" "," "43" "," "42" "," 
      +                          "42" "," "41" "," "41" "," "41" "," "40");
  2376  F00170  2B 2B 2A 2A 29 29  	db	43,43,42,42,41,41,41,40	;#
      +       29 28              
  2377                           ;eeprom.h: 97: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "40" "," "39" "," "39" "," 
      +                          "38" "," "38" "," "37" "," "37" "," "37");
  2378  F00178  28 27 27 26 26 25  	db	40,39,39,38,38,37,37,37	;#
      +       25 25              
  2379                           ;eeprom.h: 98: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "36" "," "36" "," "35" "," 
      +                          "35" "," "34" "," "34" "," "33" "," "33");
  2380  F00180  24 24 23 23 22 22  	db	36,36,35,35,34,34,33,33	;#
      +       21 21              
  2381                           ;eeprom.h: 99: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "32" "," "32" "," "31" "," 
      +                          "31" "," "30" "," "30" "," "29" "," "29");
  2382  F00188  20 20 1F 1F 1E 1E  	db	32,32,31,31,30,30,29,29	;#
      +       1D 1D              
  2383                           ;eeprom.h: 100: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "28" "," "28" "," "27" ","
      +                           "27" "," "26" "," "26" "," "25" "," "24");
  2384  F00190  1C 1C 1B 1B 1A 1A  	db	28,28,27,27,26,26,25,24	;#
      +       19 18              
  2385                           ;eeprom.h: 101: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "24" "," "23" "," "23" ","
      +                           "22" "," "22" "," "21" "," "21" "," "20");
  2386  F00198  18 17 17 16 16 15  	db	24,23,23,22,22,21,21,20	;#
      +       15 14              
  2387                           ;eeprom.h: 102: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "19" "," "19" "," "18" ","
      +                           "17" "," "17" "," "16" "," "16" "," "15");
  2388  F001A0  13 13 12 11 11 10  	db	19,19,18,17,17,16,16,15	;#
      +       10 0F              
  2389                           ;eeprom.h: 103: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "14" "," "14" "," "13" ","
      +                           "12" "," "11" "," "11" "," "10" "," "09");
  2390  F001A8  0E 0E 0D 0C 0B 0B  	db	14,14,13,12,11,11,10,9	;#
      +       0A 09              
  2391                           ;eeprom.h: 104: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "08" "," "07" "," "06" ","
      +                           "06" "," "05" "," "04" "," "03" "," "02");
  2392  F001B0  08 07 06 06 05 04  	db	8,7,6,6,5,4,3,2	;#
      +       03 02              
  2393                           ;eeprom.h: 105: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "01" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  2394  F001B8  01 00 00 00 00 00  	db	1,0,0,0,0,0,0,0	;#
      +       00 00              
  2395                           ;eeprom.h: 135: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0" "," "80" "," "99" "," 
      +                          "9" "," "56" "," "2" "," "2" "," "1");
  2396  F001C0  00 50 63 09 38 02  	db	0,80,99,9,56,2,2,1	;#
      +       02 01              
  2397                           ;eeprom.h: 136: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "60" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  2398  F001C8  3C 00 00 00 00 00  	db	60,0,0,0,0,0,0,0	;#
      +       00 00              
  2399                           ;eeprom.h: 138: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0" "," "18" "," "23" "," 
      +                          "51" "," "45" "," "84" "," "62" "," "117");
  2400  F001D0  00 12 17 33 2D 54  	db	0,18,23,51,45,84,62,117	;#
      +       3E 75              
  2401                           ;eeprom.h: 139: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "75" "," "150" "," "89" ",
      +                          " "183" "," "100" "," "216" "," "109" "," "249")
      +                          ;
  2402  F001D8  4B 96 59 B7 64 D8  	db	75,150,89,183,100,216,109,249	;#
      +       6D F9              
  2403                           ;eeprom.h: 141: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "09" "," "33" "," "34" ","
      +                           "62" "," "52" "," "93" "," "67" "," "124");
  2404  F001E0  09 21 22 3E 34 5D  	db	9,33,34,62,52,93,67,124	;#
      +       43 7C              
  2405                           ;eeprom.h: 142: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "80" "," "155" "," "92" ",
      +                          " "186" "," "104" "," "217" "," "114" "," "248")
      +                          ;
  2406  F001E8  50 9B 5C BA 68 D9  	db	80,155,92,186,104,217,114,248	;#
      +       72 F8              
  2407                           ;eeprom.h: 150: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "10" "," "26" "," "30" ","
      +                           "58" "," "44" "," "90" "," "59" "," "122");
  2408  F001F0  0A 1A 1E 3A 2C 5A  	db	10,26,30,58,44,90,59,122	;#
      +       3B 7A              
  2409                           ;eeprom.h: 151: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "71" "," "154" "," "83" ",
      +                          " "186" "," "92" "," "218" "," "100" "," "250");
  2410  F001F8  47 9A 53 BA 5C DA  	db	71,154,83,186,92,218,100,250	;#
      +       64 FA              
  2411                           
  2412                           	psect	bigbss
  2413  000F35                     _bfrs:
  2414  000F35                     	ds	1
  2415  000F35                     _wf:
  2416  000F35                     	ds	1
  2417  000000                     
  2418  000000                     
  2419  000000                     
  2420  000000                     
  2421  000000                     
  2422  000000                     
  2423  000000                     
  2424                           
  2425                           	psect	bss
  2426  000045                     _DtKNF:
  2427  000045                     	ds	16
  2428                           
  2429                           	psect	temp
  2430  000000                     btemp:
  2431  000000                     	ds	4
  2432                           indf0	equ	0xFEF
  2433                           postinc0	equ	0xFEE
  2434                           fsr0l	equ	0xFE9
  2435                           wreg	equ	0xFE8
  2436                           fsr1l	equ	0xFE1
  2437                           fsr2l	equ	0xFD9
  2438                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Thu Jul 12 08:02:18 2018

             _PresKey1 859C               _PresKey2 8604  
                    _M 0055               _PrintOFF 80AC  
             _PrintWPR 7FBA                     l30 6538  
                   l31 657C                     l34 658C  
                   l51 6656                     l35 65B4  
                   l27 69AE                     l52 66AE  
                   l44 6632                     l28 64F8  
                   l45 6644                     l37 65CC  
                   l29 6518                     l70 687A  
                   l62 6776                     l38 65DC  
                   l71 6882                     l63 677E  
                   l39 6606                     l72 68C8  
                   l64 67C4                     l56 66E2  
                   l48 6980                     l57 66EA  
                   l49 664A                     l74 68F8  
                   l66 67F8                     l58 6742  
                   l75 6900                     l67 6800  
                   l76 6944                     l68 6846  
                   l78 6974              _PomiarPCW 7948  
                   _wf 0F36               _StartRTM 8C5C  
             _StartRTS 8C20           _SetTpKtParam 6A52  
                  u305 66D0                    u415 6962  
                  u335 6764                    u355 67E2  
                  u375 6864                    u395 68E6  
                  _RTM 8C80                    _RTS 8C44  
 __end_of_SetTpKtParam 6A5C                    wreg 000FE8  
        ?_eeprom_write 00A9           _ReadEEVNT0_P 6AC2  
         _ReadEEVNT1_P 6B1E           _ReadEEVNT0_V 6AB0  
         _ReadEEVNT2_P 6B7A           _ReadEEVNT1_V 6B0C  
         _ReadEEVNT3_P 6BD6           _ReadEEVNT2_V 6B68  
         _ReadEEVNT4_P 6C32           _ReadEEVNT3_V 6BC4  
         _ReadEEVNT5_P 6C8E           _ReadEEVNT4_V 6C20  
         _ReadEEVNT6_P 6CEA           _ReadEEVNT5_V 6C7C  
         _ReadEEVNT7_P 6D4A           _ReadEEVNT6_V 6CD8  
         _ReadEEVNT7_V 6D38   __end_of_ReadEEVNT0_P 6AD4  
 __end_of_ReadEEVNT1_P 6B30   __end_of_ReadEEVNT0_V 6AC2  
 __end_of_ReadEEVNT2_P 6B8C   __end_of_ReadEEVNT1_V 6B1E  
 __end_of_ReadEEVNT3_P 6BE8   __end_of_ReadEEVNT2_V 6B7A  
 __end_of_ReadEEVNT4_P 6C44   __end_of_ReadEEVNT3_V 6BD6  
 __end_of_ReadEEVNT5_P 6CA0   __end_of_ReadEEVNT4_V 6C32  
                 _DtCW 024E   __end_of_ReadEEVNT6_P 6CFC  
 __end_of_ReadEEVNT5_V 6C8E   __end_of_ReadEEVNT7_P 6D66  
 __end_of_ReadEEVNT6_V 6CEA   __end_of_ReadEEVNT7_V 6D4A  
                 _bfrs 0F35                   indf0 000FEF  
                 fsr0l 000FE9                   fsr1l 000FE1  
                 fsr2l 000FD9                   btemp 0000  
       ?a_ReadEEVNT0_P 00A9         ?a_ReadEEVNT1_P 00A9  
       ?a_ReadEEVNT0_V 00A9         ?a_ReadEEVNT2_P 00A9  
       ?a_ReadEEVNT1_V 00A9         ?a_ReadEEVNT3_P 00A9  
       ?a_ReadEEVNT2_V 00A9         ?a_ReadEEVNT4_P 00A9  
       ?a_ReadEEVNT3_V 00A9         ?a_ReadEEVNT5_P 00A9  
       ?a_ReadEEVNT4_V 00A9         ?a_ReadEEVNT6_P 00A9  
       ?a_ReadEEVNT5_V 00A9         ?a_ReadEEVNT7_P 00A9  
       ?a_ReadEEVNT6_V 00A9         ?a_ReadEEVNT7_V 00A9  
         _ReadDataXONL 7B38             _WriteEEPCW 6A5C  
   __end_of_WriteEEPCW 6A6C                  _DtKNF 0045  
                _EndPR 7FFC                  _RdPrt 84DE  
           used_btemp0 0001             used_btemp1 0001  
           used_btemp2 0001             used_btemp3 0001  
          _eeprom_read 9866                  status 000FD8  
     __end_of_ExitKonf 64C8                __Lparam 00A8  
              _PrintPR 7F52               ?_PrintPR 00A9  
         ?_eeprom_read 00AD                __ramtop 1000  
        ?_ReadDataXONL 00A8         __end_of_EnKonf 649A  
          _ReadDataONL 7A90            _WriteEEVNT0 6A7A  
          _WriteEEVNT1 6AD6            _WriteEEVNT2 6B32  
          _WriteEEVNT3 6B8E            _WriteEEVNT4 6BEA  
          _WriteEEVNT5 6C46            _WriteEEVNT6 6CA2  
          _WriteEEVNT7 6CFE    __end_of_WriteEEVNT0 6AB0  
  __end_of_WriteEEVNT1 6B0C    __end_of_WriteEEVNT2 6B68  
  __end_of_WriteEEVNT3 6BC4    __end_of_WriteEEVNT4 6C20  
  __end_of_WriteEEVNT5 6C7C    __end_of_WriteEEVNT6 6CD8  
  __end_of_WriteEEVNT7 6D38                 _EndOFF 80E4  
               _EnKonf 6486              _RdEEParam 69C6  
    __end_of_RdEEParam 6A52          ?a_WriteEEVNT0 00A8  
        ?a_WriteEEVNT1 00A8          ?a_WriteEEVNT2 00A8  
        ?a_WriteEEVNT3 00A8          ?a_WriteEEVNT4 00A8  
        ?a_WriteEEVNT5 00A8          ?a_WriteEEVNT6 00A8  
        ?a_WriteEEVNT7 00A8             _ReadEERFAN 6A6C  
              postinc0 000FEE           ?_ReadDataONL 00A8  
   __end_of_ReadEERFAN 6A78           ?_WriteEEVNT0 00A8  
         ?_WriteEEVNT1 00A8           ?_WriteEEVNT2 00A8  
         ?_WriteEEVNT3 00A8           ?_WriteEEVNT4 00A8  
         ?_WriteEEVNT5 00A8           ?_WriteEEVNT6 00A8  
         ?_WriteEEVNT7 00A8           _eeprom_write 96E4  
        _MKonfiguracja 64C8               _ModParam 893C  
           _SetBufKey1 8590             _SetBufKey2 85F8  
             _ExitKonf 649A  __end_of_MKonfiguracja 69C6  
