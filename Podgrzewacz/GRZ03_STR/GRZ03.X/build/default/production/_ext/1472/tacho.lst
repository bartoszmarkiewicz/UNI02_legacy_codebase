

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Thu Jul 12 08:02:18 2018


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	bigdata,global,class=BIGRAM,space=1,delta
      +                          =1
     4                           	psect	ibigdata,global,class=CODE,delta=1
     5                           	psect	text,global,reloc=2,class=CODE,delta=1
     6                           	psect	rbit,global,bit,common,class=COMRAM,space
      +                          =1,delta=1
     7                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     8                           	psect	bss,global,class=RAM,space=1,delta=1
     9                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100                           
   101                           	psect	bigdata
   102                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   103                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   104                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   105                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   106                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   107                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   108                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   109                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   110                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   111                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   112                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   113                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   114                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   115                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   116                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   117                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   118                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   119                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   120                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   121                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   122                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   123                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   124                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   125                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   126                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   127                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   128                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   129                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   130                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   131                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   132                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   133                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   134                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   135                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   136                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   137                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   138                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   139                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   140                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   141                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   142                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   143                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   144                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   145                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   146                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   147                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   148                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   149                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   150                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   151                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   152                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   153                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   154                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   155                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   156                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   157                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   158                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   159                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   160                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   161                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   162                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   163                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   164                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   165                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   166                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   167                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   168                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   169                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   170                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   171                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   172                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   173                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   174                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   175                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   176                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   177                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   178                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   179                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   180                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   181                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   182                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   183                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   184                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   185                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   186                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   187                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   188                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   189                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   190                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   191                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   192                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   193                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   194                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   195                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   196                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   197                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   198                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   199                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   200                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   201                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   202  000EE2                     _nokrobr:
   203  000EE2                     	ds	1
   204                           
   205                           	psect	ibigdata
   206  0010D3  02                 	db	2
   207                           
   208                           	psect	text
   209                           ;tacho.c: 22: unsigned char nokrobr=2;
   210                           ;tacho.c: 23: bit stn,new,zero;
   211                           ;tacho.c: 25: unsigned char tkrk=0;
   212                           ;tacho.c: 26: volatile signed int wvv[12];
   213                           ;tacho.c: 27: volatile signed int wv[12];
   214                           ;tacho.c: 28: volatile unsigned int VDoc;
   215                           ;tacho.c: 29: volatile signed long ddDVNT,v_ddt;
   216                           ;tacho.c: 30: volatile signed int DVNT,dDVNT,tdD
      +                          VNT,v_t,v_dt,v_tdt;
   217                           ;tacho.c: 33: volatile unsigned int zr0,ni0,ip0,
      +                          in0,bin0,nw0,tm0;
   218                           ;tacho.c: 38: void IntTacho(void)
   219                           ;tacho.c: 39: {
   220  004314                     _IntTacho:
   221                           ;       param _t assigned to ?_Vwyzsza+0
   222  000000                     _Vwyzsza$t	set	?_Vwyzsza
   223                           ;       param _t assigned to ?_Vnizsza+0
   224  000000                     _Vnizsza$t	set	?_Vnizsza
   225                           ;       param _t assigned to ?_Vmaleje+0
   226  000000                     _Vmaleje$t	set	?_Vmaleje
   227                           ;	_www assigned to ?a_FltParVNT+0
   228  000000                     _FltParVNT$www	set	?a_FltParVNT
   229                           ;	_w assigned to ?a_PredkoscZmianVNT+0
   230  000000                     _PredkoscZmianVNT$w	set	?a_PredkoscZmianVNT
   231                           ;	_wnk2 assigned to ?a_PomiarVNT+2
   232  000000                     _PomiarVNT$wnk2	set	?a_PomiarVNT+2
   233                           ;	_wnk assigned to ?a_PomiarVNT+0
   234  000000                     _PomiarVNT$wnk	set	?a_PomiarVNT
   235                           ;       param _wnk assigned to ?_TFlt+0
   236  000000                     _TFlt$wnk	set	?_TFlt
   237                           ;	_wb assigned to ?a_HistVal+0
   238  000000                     _HistVal$wb	set	?a_HistVal
   239                           ;       param _ndat assigned to ?_HistVal+2
   240  000000                     _HistVal$ndat	set	?_HistVal+2
   241                           ;       param _tbb assigned to ?_HistVal+0
   242  000000                     _HistVal$tbb	set	?_HistVal
   243                           ;	_tmx assigned to ?a_FindPropVal+22
   244  000000                     _FindPropVal$tmx	set	?a_FindPropVal+22
   245                           ;	_wb assigned to ?a_FindPropVal+2
   246  000000                     _FindPropVal$wb	set	?a_FindPropVal+2
   247                           ;	_min assigned to ?a_FindPropVal+0
   248  000000                     _FindPropVal$min	set	?a_FindPropVal
   249                           ;       param _ndat assigned to ?_FindPropVal+2
   250  000000                     _FindPropVal$ndat	set	?_FindPropVal+2
   251                           ;       param _tbb assigned to ?_FindPropVal+0
   252  000000                     _FindPropVal$tbb	set	?_FindPropVal
   253                           ;       param _wnk assigned to ?_AddTab+3
   254  000000                     _AddTab$wnk	set	?_AddTab+3
   255                           ;       param _ndat assigned to ?_AddTab+2
   256  000000                     _AddTab$ndat	set	?_AddTab+2
   257                           ;       param _tbb assigned to ?_AddTab+0
   258  000000                     _AddTab$tbb	set	?_AddTab
   259  000000                     
   260                           ;tacho.c: 40: if(ip0<4*1000) ip0++;
   261  004314  0101               	movlb	_ip0 shr (0+8)	;volatile
   262  004316  0E0F               	movlw	15
   263  004318  5D13               	subwf	(_ip0+1)& (0+255),w,b	;volatile
   264  00431A  0EA0               	movlw	160
   265  00431C  B4D8               	btfsc	status,2,c
   266  00431E  5D12               	subwf	_ip0& (0+255),w,b	;volatile
   267  004320  E202               	bc	l4
   268  004322  4B12               	infsnz	_ip0& (0+255),f,b	;volatile
   269  004324  2B13               	incf	(_ip0+1)& (0+255),f,b	;volatile
   270  004326                     l4:
   271                           ;tacho.c: 41: if(ip0>=4*1000)
   272  004326  0101               	movlb	_ip0 shr (0+8)	;volatile
   273  004328  0E0F               	movlw	15
   274  00432A  5D13               	subwf	(_ip0+1)& (0+255),w,b	;volatile
   275  00432C  0EA0               	movlw	160
   276  00432E  B4D8               	btfsc	status,2,c
   277  004330  5D12               	subwf	_ip0& (0+255),w,b	;volatile
   278  004332  A0D8               	btfss	status,0,c
   279  004334  0012               	return	
   280                           ;tacho.c: 42: {
   281  004336  0E01               	movlw	1
   282  004338  6F24               	movwf	_zr0& (0+255),b	;volatile
   283  00433A  6B25               	clrf	(_zr0+1)& (0+255),b	;volatile
   284                           ;tacho.c: 44: nw0=1;
   285  00433C  6F16               	movwf	_nw0& (0+255),b	;volatile
   286  00433E  6B17               	clrf	(_nw0+1)& (0+255),b	;volatile
   287                           ;tacho.c: 45: }
   288  004340  0C00               	retlw	0
   289  004342                     __end_of_IntTacho:
   290                           ;tacho.c: 51: unsigned char IntINT0(void)
   291                           ;tacho.c: 52: {
   292  004342                     _IntINT0:
   293  000000                     
   294                           ;tacho.c: 53: if(zr0)
   295  004342  0101               	movlb	_zr0 shr (0+8)	;volatile
   296  004344  5124               	movf	_zr0& (0+255),w,b	;volatile
   297  004346  1125               	iorwf	(_zr0+1)& (0+255),w,b	;volatile
   298  004348  E011               	bz	l7
   299                           ;tacho.c: 54: {
   300  00434A  90B1               	bcf	4017,0,c
   301                           ;tacho.c: 56: zr0=0;
   302  00434C  EE01  F024         	lfsr	0,_zr0	;volatile
   303  004350  6AEE               	clrf	postinc0,c
   304  004352  6AEE               	clrf	postinc0,c
   305                           ;tacho.c: 57: ip0=0;
   306  004354  EE01  F012         	lfsr	0,_ip0	;volatile
   307  004358  6AEE               	clrf	postinc0,c
   308  00435A  6AEE               	clrf	postinc0,c
   309                           ;tacho.c: 58: ni0=DtKNF.nokr;
   310  00435C  C050  F114         	movff	_DtKNF+11,_ni0	;volatile
   311  004360  6B15               	clrf	(_ni0+1)& (0+255),b	;volatile
   312                           ;tacho.c: 59: nw0=0;
   313  004362  EE01  F016         	lfsr	0,_nw0	;volatile
   314  004366  6AEE               	clrf	postinc0,c
   315  004368  6AEE               	clrf	postinc0,c
   316                           ;tacho.c: 60: return 1;
   317  00436A  0C01               	retlw	1
   318  00436C                     l7:
   319                           ;tacho.c: 62: else
   320  00436C  0101               	movlb	_ni0 shr (0+8)	;volatile
   321  00436E  5114               	movf	_ni0& (0+255),w,b	;volatile
   322  004370  1115               	iorwf	(_ni0+1)& (0+255),w,b	;volatile
   323  004372  E004               	bz	l9
   324  004374  0714               	decf	_ni0& (0+255),f,b	;volatile
   325  004376  0E00               	movlw	0
   326  004378  5B15               	subwfb	(_ni0+1)& (0+255),f,b	;volatile
   327  00437A  0C00               	retlw	0
   328  00437C                     l9:
   329                           ;tacho.c: 65: else
   330  00437C  90B1               	bcf	4017,0,c
   331                           ;tacho.c: 68: if(!nw0)
   332  00437E  0101               	movlb	_nw0 shr (0+8)	;volatile
   333  004380  5116               	movf	_nw0& (0+255),w,b	;volatile
   334  004382  1117               	iorwf	(_nw0+1)& (0+255),w,b	;volatile
   335  004384  E117               	bnz	l11
   336                           ;tacho.c: 69: {
   337  004386  C112  F000         	movff	_ip0,btemp	;volatile
   338  00438A  C113  F001         	movff	_ip0+1,btemp+1	;volatile
   339  00438E  C10C  FFE8         	movff	_bin0,wreg	;volatile
   340  004392  2400               	addwf	btemp,w,c
   341  004394  6E02               	movwf	btemp+2,c
   342  004396  C10D  FFE8         	movff	_bin0+1,wreg	;volatile
   343  00439A  2001               	addwfc	btemp+1,w,c
   344  00439C  6E03               	movwf	btemp+3,c
   345  00439E  90D8               	bcf	status,0,c
   346  0043A0  3003               	rrcf	btemp+3,w,c
   347  0043A2  CFE8 F111          	movff	wreg,_in0+1	;volatile
   348  0043A6  3002               	rrcf	btemp+2,w,c
   349  0043A8  CFE8 F110          	movff	wreg,_in0	;volatile
   350                           ;tacho.c: 71: bin0=in0;
   351  0043AC  C110  F10C         	movff	_in0,_bin0	;volatile
   352  0043B0  C111  F10D         	movff	_in0+1,_bin0+1	;volatile
   353  0043B4                     l11:
   354                           ;tacho.c: 72: }
   355  0043B4  0101               	movlb	_nw0 shr (0+8)	;volatile
   356  0043B6  0E01               	movlw	1
   357  0043B8  6F16               	movwf	_nw0& (0+255),b	;volatile
   358  0043BA  6B17               	clrf	(_nw0+1)& (0+255),b	;volatile
   359                           ;tacho.c: 74: ip0=0;
   360  0043BC  EE01  F012         	lfsr	0,_ip0	;volatile
   361  0043C0  6AEE               	clrf	postinc0,c
   362  0043C2  6AEE               	clrf	postinc0,c
   363                           ;tacho.c: 75: ni0=DtKNF.nokr;
   364  0043C4  C050  F114         	movff	_DtKNF+11,_ni0	;volatile
   365  0043C8  6B15               	clrf	(_ni0+1)& (0+255),b	;volatile
   366                           ;tacho.c: 76: return 1;
   367  0043CA  0C01               	retlw	1
   368                           ;tacho.c: 77: }
   369                           ;tacho.c: 80: }
   370  0043CC                     __end_of_IntINT0:
   371                           ;tacho.c: 85: void IncTimTacho(void)
   372                           ;tacho.c: 86: {
   373  0043CC                     _IncTimTacho:
   374  000000                     
   375                           ;tacho.c: 87: if(tm0<0xFFFF) tm0++;
   376  0043CC  0101               	movlb	_tm0 shr (0+8)	;volatile
   377  0043CE  1D1B               	comf	(_tm0+1)& (0+255),w,b	;volatile
   378  0043D0  0EFF               	movlw	255
   379  0043D2  B4D8               	btfsc	status,2,c
   380  0043D4  191A               	xorwf	_tm0& (0+255),w,b	;volatile
   381  0043D6  B4D8               	btfsc	status,2,c
   382  0043D8  0012               	return	
   383  0043DA  4B1A               	infsnz	_tm0& (0+255),f,b	;volatile
   384  0043DC  2B1B               	incf	(_tm0+1)& (0+255),f,b	;volatile
   385                           ;tacho.c: 88: }
   386  0043DE  0012               	return	
   387  0043E0                     __end_of_IncTimTacho:
   388                           ;tacho.c: 89: void StartTimTacho(void)
   389                           ;tacho.c: 90: {
   390  0043E0                     _StartTimTacho:
   391  000000                     
   392                           ;tacho.c: 91: tm0=0;
   393  0043E0  EE01  F01A         	lfsr	0,_tm0	;volatile
   394  0043E4  6AEE               	clrf	postinc0,c
   395  0043E6  6AEE               	clrf	postinc0,c
   396                           ;tacho.c: 92: }
   397  0043E8  0012               	return	
   398  0043EA                     __end_of_StartTimTacho:
   399                           ;tacho.c: 93: unsigned char TimTacho(void)
   400                           ;tacho.c: 94: {
   401  0043EA                     _TimTacho:
   402  000000                     
   403                           ;tacho.c: 95: return tm0;
   404  0043EA  C11A  FFE8         	movff	_tm0,wreg	;volatile
   405  0043EE  0012               	return	
   406                           ;tacho.c: 96: }
   407  0043F0                     __end_of_TimTacho:
   408                           ;tacho.c: 100: void AddTab(unsigned int *tbb,uns
      +                          igned char ndat,unsigned int wnk)
   409                           ;tacho.c: 101: {
   410  0043F0  00B6               	dw	?_AddTab
   411  0043F2                     _AddTab:
   412  000000                     
   413                           ;tacho.c: 102: unsigned char i;
   414  0043F2  0100               	movlb	__Lparam shr (0+8)
   415  0043F4  51B8               	movf	(?_AddTab+2)^(__Lparam& (0+65280)),w
   416  0043F6  0E14               	movlw	20
   417  0043F8  E002               	bz	L2
   418  0043FA  65B8               	cpfsgt	(?_AddTab+2)^(__Lparam& (0+65280)),b
   419  0043FC  D002               	goto	l17
   420  0043FE                     L2:
   421  0043FE  0100               	movlb	__Lparam shr (0+8)
   422  004400  6FB8               	movwf	(?_AddTab+2)^(__Lparam& (0+65280)),b
   423  004402                     l17:
   424                           ;tacho.c: 105: for(i=1;i<ndat;i++) tbb[i-1]=tbb[
      +                          i];
   425  004402  0E01               	movlw	1
   426  004404  6ED9               	movwf	fsr2l,c
   427  004406                     l21:
   428  004406  0100               	movlb	__Lparam shr (0+8)
   429  004408  51B8               	movf	(?_AddTab+2)^(__Lparam& (0+65280)),w
   430  00440A  5CD9               	subwf	fsr2l,w,c
   431  00440C  E21A               	bc	u100
   432  00440E  50D9               	movf	fsr2l,w,c
   433  004410  0D02               	mullw	2
   434  004412  51B6               	movf	?_AddTab^(__Lparam& (0+65280)),w
   435  004414  24F3               	addwf	prodl,w,c
   436  004416  6EE9               	movwf	fsr0l,c
   437  004418  51B7               	movf	(?_AddTab+1)^(__Lparam& (0+65280)),w
   438  00441A  20F4               	addwfc	prodh,w,c
   439  00441C  6EEA               	movwf	fsr0h,c
   440  00441E  50D9               	movf	fsr2l,w,c
   441  004420  0D02               	mullw	2
   442  004422  51B6               	movf	?_AddTab^(__Lparam& (0+65280)),w
   443  004424  26F3               	addwf	prodl,f,c
   444  004426  51B7               	movf	(?_AddTab+1)^(__Lparam& (0+65280)),w
   445  004428  22F4               	addwfc	prodh,f,c
   446  00442A  0EFE               	movlw	254
   447  00442C  24F3               	addwf	prodl,w,c
   448  00442E  6EE1               	movwf	fsr1l,c
   449  004430  0EFF               	movlw	255
   450  004432  20F4               	addwfc	prodh,w,c
   451  004434  6EE2               	movwf	fsr1h,c
   452  004436  CFEE FFE6          	movff	postinc0,postinc1
   453  00443A  CFED FFE5          	movff	postdec0,postdec1
   454  00443E  2AD9               	incf	fsr2l,f,c
   455  004440  D7E2               	goto	l21
   456  004442                     u100:
   457                           ;tacho.c: 106: tbb[ndat-1]=wnk;
   458  004442  0100               	movlb	__Lparam shr (0+8)
   459  004444  51B8               	movf	(?_AddTab+2)^(__Lparam& (0+65280)),w
   460  004446  0D02               	mullw	2
   461  004448  51B6               	movf	?_AddTab^(__Lparam& (0+65280)),w
   462  00444A  26F3               	addwf	prodl,f,c
   463  00444C  51B7               	movf	(?_AddTab+1)^(__Lparam& (0+65280)),w
   464  00444E  22F4               	addwfc	prodh,f,c
   465  004450  0EFE               	movlw	254
   466  004452  24F3               	addwf	prodl,w,c
   467  004454  6EE9               	movwf	fsr0l,c
   468  004456  0EFF               	movlw	255
   469  004458  20F4               	addwfc	prodh,w,c
   470  00445A  6EEA               	movwf	fsr0h,c
   471  00445C  C0B9  FFEE         	movff	?_AddTab+3,postinc0
   472  004460  C0BA  FFED         	movff	?_AddTab+4,postdec0
   473                           ;tacho.c: 107: }
   474  004464  0012               	return	
   475  004466                     __end_of_AddTab:
   476                           ;tacho.c: 110: unsigned int FindPropVal(unsigned
      +                           int *tbb,unsigned char ndat)
   477                           ;tacho.c: 111: {
   478  004466  00B6               	dw	?_FindPropVal
   479  004468                     _FindPropVal:
   480  000000                     
   481                           ;tacho.c: 112: unsigned int wrt;
   482  004468  0100               	movlb	__Lparam shr (0+8)
   483  00446A  51B8               	movf	(?_FindPropVal+2)^(__Lparam& (0+65280)),w
   484  00446C  0E14               	movlw	20
   485  00446E  E002               	bz	L3
   486  004470  65B8               	cpfsgt	(?_FindPropVal+2)^(__Lparam& (0+65280)),
      +                          b
   487  004472  D002               	goto	l23
   488  004474                     L3:
   489  004474  0100               	movlb	__Lparam shr (0+8)
   490  004476  6FB8               	movwf	(?_FindPropVal+2)^(__Lparam& (0+65280)),b
   491  004478                     l23:
   492                           ;tacho.c: 121: for(i=0;i<ndat;i++) tmx[i]=tbb[i]
      +                          ;
   493  004478  6AD9               	clrf	fsr2l,c
   494  00447A                     l27:
   495  00447A  0100               	movlb	__Lparam shr (0+8)
   496  00447C  51B8               	movf	(?_FindPropVal+2)^(__Lparam& (0+65280)),w
   497  00447E  5CD9               	subwf	fsr2l,w,c
   498  004480  E216               	bc	u140
   499  004482  50D9               	movf	fsr2l,w,c
   500  004484  0D02               	mullw	2
   501  004486  51B6               	movf	?_FindPropVal^(__Lparam& (0+65280)),w
   502  004488  24F3               	addwf	prodl,w,c
   503  00448A  6EE1               	movwf	fsr1l,c
   504  00448C  51B7               	movf	(?_FindPropVal+1)^(__Lparam& (0+65280)),w
   505  00448E  20F4               	addwfc	prodh,w,c
   506  004490  6EE2               	movwf	fsr1h,c
   507  004492  50D9               	movf	fsr2l,w,c
   508  004494  0D02               	mullw	2
   509  004496  0ECF               	movlw	low (?a_FindPropVal+22)
   510  004498  24F3               	addwf	prodl,w,c
   511  00449A  6EE9               	movwf	fsr0l,c
   512  00449C  0E00               	movlw	high (?a_FindPropVal+22)
   513  00449E  20F4               	addwfc	prodh,w,c
   514  0044A0  6EEA               	movwf	fsr0h,c
   515  0044A2  CFE6 FFEE          	movff	postinc1,postinc0
   516  0044A6  CFE5 FFED          	movff	postdec1,postdec0
   517  0044AA  2AD9               	incf	fsr2l,f,c
   518  0044AC  D7E6               	goto	l27
   519  0044AE                     u140:
   520                           ;tacho.c: 124: for(i=0;i<ndat;i++) wb[i]=0;
   521  0044AE  6AD9               	clrf	fsr2l,c
   522  0044B0                     l31:
   523  0044B0  0100               	movlb	__Lparam shr (0+8)
   524  0044B2  51B8               	movf	(?_FindPropVal+2)^(__Lparam& (0+65280)),w
   525  0044B4  5CD9               	subwf	fsr2l,w,c
   526  0044B6  E209               	bc	u150
   527  0044B8  50D9               	movf	fsr2l,w,c
   528  0044BA  EE00  F0BB         	lfsr	0,?a_FindPropVal+2
   529  0044BE  26E9               	addwf	fsr0l,f,c
   530  0044C0  0E00               	movlw	0
   531  0044C2  22EA               	addwfc	fsr0h,f,c
   532  0044C4  6AEF               	clrf	indf0,c
   533  0044C6  2AD9               	incf	fsr2l,f,c
   534  0044C8  D7F3               	goto	l31
   535  0044CA                     u150:
   536                           ;tacho.c: 125: for(j=0;j<(ndat/2);j++)
   537  0044CA  6AE1               	clrf	fsr1l,c
   538  0044CC                     l35:
   539  0044CC  0100               	movlb	__Lparam shr (0+8)
   540  0044CE  90D8               	bcf	status,0,c
   541  0044D0  31B8               	rrcf	(?_FindPropVal+2)^(__Lparam& (0+65280)),w
   542  0044D2  5CE1               	subwf	fsr1l,w,c
   543  0044D4  E26A               	bc	u210
   544                           ;tacho.c: 126: {
   545  0044D6  69B9               	setf	?a_FindPropVal^(__Lparam& (0+65280)),b
   546  0044D8  69BA               	setf	(?a_FindPropVal+1)^(__Lparam& (0+65280)),b
   547                           ;tacho.c: 128: max=0;
   548  0044DA  6A00               	clrf	btemp,c
   549  0044DC  6A01               	clrf	btemp+1,c
   550                           ;tacho.c: 129: for(i=0;i<ndat;i++)
   551  0044DE  6AD9               	clrf	fsr2l,c
   552  0044E0                     l39:
   553  0044E0  0100               	movlb	__Lparam shr (0+8)
   554  0044E2  51B8               	movf	(?_FindPropVal+2)^(__Lparam& (0+65280)),w
   555  0044E4  5CD9               	subwf	fsr2l,w,c
   556  0044E6  E22F               	bc	u190
   557                           ;tacho.c: 130: {
   558  0044E8  50D9               	movf	fsr2l,w,c
   559  0044EA  EE00  F0BB         	lfsr	0,?a_FindPropVal+2
   560  0044EE  26E9               	addwf	fsr0l,f,c
   561  0044F0  0E00               	movlw	0
   562  0044F2  22EA               	addwfc	fsr0h,f,c
   563  0044F4  50EF               	movf	indf0,w,c
   564  0044F6  E125               	bnz	l38
   565                           ;tacho.c: 132: wrt=tmx[i];
   566  0044F8  50D9               	movf	fsr2l,w,c
   567  0044FA  0D02               	mullw	2
   568  0044FC  0ECF               	movlw	low (?a_FindPropVal+22)
   569  0044FE  24F3               	addwf	prodl,w,c
   570  004500  6EE9               	movwf	fsr0l,c
   571  004502  0E00               	movlw	high (?a_FindPropVal+22)
   572  004504  20F4               	addwfc	prodh,w,c
   573  004506  6EEA               	movwf	fsr0h,c
   574  004508  CFEE FFF6          	movff	postinc0,tblptrl
   575  00450C  CFED FFF7          	movff	postdec0,tblptrh
   576                           ;tacho.c: 133: if(max<wrt)
   577  004510  50F7               	movf	tblptrh,w,c
   578  004512  5C01               	subwf	btemp+1,w,c
   579  004514  E102               	bnz	u175
   580  004516  50F6               	movf	tblptrl,w,c
   581  004518  5C00               	subwf	btemp,w,c
   582  00451A                     u175:
   583  00451A  E206               	bc	l41
   584                           ;tacho.c: 134: {
   585  00451C  CFF6 F000          	movff	tblptrl,btemp
   586  004520  CFF7 F001          	movff	tblptrh,btemp+1
   587                           ;tacho.c: 136: ix=i;
   588  004524  50D9               	movf	fsr2l,w,c
   589  004526  6E02               	movwf	btemp+2,c
   590  004528                     l41:
   591                           ;tacho.c: 137: }
   592  004528  0100               	movlb	__Lparam shr (0+8)
   593  00452A  51BA               	movf	(?a_FindPropVal+1)^(__Lparam& (0+65280)),w
   594  00452C  5CF7               	subwf	tblptrh,w,c
   595  00452E  E102               	bnz	u185
   596  004530  51B9               	movf	?a_FindPropVal^(__Lparam& (0+65280)),w
   597  004532  5CF6               	subwf	tblptrl,w,c
   598  004534                     u185:
   599  004534  E206               	bc	l38
   600                           ;tacho.c: 139: {
   601  004536  CFF6 F0B9          	movff	tblptrl,?a_FindPropVal
   602  00453A  CFF7 F0BA          	movff	tblptrh,?a_FindPropVal+1
   603                           ;tacho.c: 141: im=i;
   604  00453E  50D9               	movf	fsr2l,w,c
   605  004540  6E03               	movwf	btemp+3,c
   606  004542                     l38:
   607  004542  2AD9               	incf	fsr2l,f,c
   608  004544  D7CD               	goto	l39
   609  004546                     u190:
   610                           ;tacho.c: 142: }
   611  004546  5003               	movf	btemp+3,w,c
   612  004548  6202               	cpfseq	btemp+2,c
   613  00454A  D009               	goto	l43
   614                           ;tacho.c: 145: {
   615  00454C  50E1               	movf	fsr1l,w,c
   616  00454E  6E03               	movwf	btemp+3,c
   617                           ;tacho.c: 147: ix=(ndat-1-j);
   618  004550  C0B8  F000         	movff	?_FindPropVal+2,btemp
   619  004554  0EFF               	movlw	-1
   620  004556  2600               	addwf	btemp,f,c
   621  004558  50E1               	movf	fsr1l,w,c
   622  00455A  5C00               	subwf	btemp,w,c
   623  00455C  6E02               	movwf	btemp+2,c
   624  00455E                     l43:
   625                           ;tacho.c: 148: }
   626  00455E  5002               	movf	btemp+2,w,c
   627  004560  EE00  F0BB         	lfsr	0,?a_FindPropVal+2
   628  004564  26E9               	addwf	fsr0l,f,c
   629  004566  0E00               	movlw	0
   630  004568  22EA               	addwfc	fsr0h,f,c
   631  00456A  0E01               	movlw	1
   632  00456C  6EEF               	movwf	indf0,c
   633                           ;tacho.c: 150: wb[im]=1;
   634  00456E  5003               	movf	btemp+3,w,c
   635  004570  EE00  F0BB         	lfsr	0,?a_FindPropVal+2
   636  004574  26E9               	addwf	fsr0l,f,c
   637  004576  0E00               	movlw	0
   638  004578  22EA               	addwfc	fsr0h,f,c
   639  00457A  0E01               	movlw	1
   640  00457C  6EEF               	movwf	indf0,c
   641                           ;tacho.c: 151: tmx[ix]=0;
   642  00457E  5002               	movf	btemp+2,w,c
   643  004580  0D02               	mullw	2
   644  004582  0ECF               	movlw	low (?a_FindPropVal+22)
   645  004584  24F3               	addwf	prodl,w,c
   646  004586  6EE9               	movwf	fsr0l,c
   647  004588  0E00               	movlw	high (?a_FindPropVal+22)
   648  00458A  20F4               	addwfc	prodh,w,c
   649  00458C  6EEA               	movwf	fsr0h,c
   650  00458E  6AEE               	clrf	postinc0,c
   651  004590  6AED               	clrf	postdec0,c
   652                           ;tacho.c: 152: tmx[im]=0;
   653  004592  5003               	movf	btemp+3,w,c
   654  004594  0D02               	mullw	2
   655  004596  0ECF               	movlw	low (?a_FindPropVal+22)
   656  004598  24F3               	addwf	prodl,w,c
   657  00459A  6EE9               	movwf	fsr0l,c
   658  00459C  0E00               	movlw	high (?a_FindPropVal+22)
   659  00459E  20F4               	addwfc	prodh,w,c
   660  0045A0  6EEA               	movwf	fsr0h,c
   661  0045A2  6AEE               	clrf	postinc0,c
   662  0045A4  6AED               	clrf	postdec0,c
   663  0045A6  2AE1               	incf	fsr1l,f,c
   664  0045A8  D791               	goto	l35
   665  0045AA                     u210:
   666                           ;tacho.c: 153: }
   667  0045AA  6AD9               	clrf	fsr2l,c
   668  0045AC                     l47:
   669  0045AC  0100               	movlb	__Lparam shr (0+8)
   670  0045AE  51B8               	movf	(?_FindPropVal+2)^(__Lparam& (0+65280)),w
   671  0045B0  5CD9               	subwf	fsr2l,w,c
   672  0045B2  E211               	bc	l45
   673                           ;tacho.c: 156: {
   674  0045B4  50D9               	movf	fsr2l,w,c
   675  0045B6  0D02               	mullw	2
   676  0045B8  0ECF               	movlw	low (?a_FindPropVal+22)
   677  0045BA  24F3               	addwf	prodl,w,c
   678  0045BC  6EE9               	movwf	fsr0l,c
   679  0045BE  0E00               	movlw	high (?a_FindPropVal+22)
   680  0045C0  20F4               	addwfc	prodh,w,c
   681  0045C2  6EEA               	movwf	fsr0h,c
   682  0045C4  CFEE FFF6          	movff	postinc0,tblptrl
   683  0045C8  CFED FFF7          	movff	postdec0,tblptrh
   684                           ;tacho.c: 158: if(wrt) break;
   685  0045CC  50F7               	movf	tblptrh,w,c
   686  0045CE  10F6               	iorwf	tblptrl,w,c
   687  0045D0  E102               	bnz	l45
   688  0045D2  2AD9               	incf	fsr2l,f,c
   689  0045D4  D7EB               	goto	l47
   690  0045D6                     l45:
   691                           ;tacho.c: 159: }
   692  0045D6  CFF6 F000          	movff	tblptrl,btemp
   693  0045DA  CFF7 F001          	movff	tblptrh,btemp+1
   694  0045DE  0012               	return	
   695                           ;tacho.c: 161: }
   696  0045E0                     __end_of_FindPropVal:
   697                           ;tacho.c: 164: unsigned int HistVal(unsigned int
      +                           *tbb,unsigned char ndat)
   698                           ;tacho.c: 165: {
   699  0045E0  00B6               	dw	?_HistVal
   700  0045E2                     _HistVal:
   701  000000                     
   702                           ;tacho.c: 166: unsigned int wrt;
   703  0045E2  0100               	movlb	__Lparam shr (0+8)
   704  0045E4  51B8               	movf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   705  0045E6  0E14               	movlw	20
   706  0045E8  E002               	bz	L4
   707  0045EA  65B8               	cpfsgt	(?_HistVal+2)^(__Lparam& (0+65280)),b
   708  0045EC  D002               	goto	l50
   709  0045EE                     L4:
   710  0045EE  0100               	movlb	__Lparam shr (0+8)
   711  0045F0  6FB8               	movwf	(?_HistVal+2)^(__Lparam& (0+65280)),b
   712  0045F2                     l50:
   713                           ;tacho.c: 174: for(i=0;i<ndat;i++) wb[i]=0;
   714  0045F2  6AD9               	clrf	fsr2l,c
   715  0045F4                     l54:
   716  0045F4  0100               	movlb	__Lparam shr (0+8)
   717  0045F6  51B8               	movf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   718  0045F8  5CD9               	subwf	fsr2l,w,c
   719  0045FA  E209               	bc	u270
   720  0045FC  50D9               	movf	fsr2l,w,c
   721  0045FE  EE00  F0B9         	lfsr	0,?a_HistVal
   722  004602  26E9               	addwf	fsr0l,f,c
   723  004604  0E00               	movlw	0
   724  004606  22EA               	addwfc	fsr0h,f,c
   725  004608  6AEF               	clrf	indf0,c
   726  00460A  2AD9               	incf	fsr2l,f,c
   727  00460C  D7F3               	goto	l54
   728  00460E                     u270:
   729                           ;tacho.c: 175: for(j=0;j<ndat;j++)
   730  00460E  6AD9               	clrf	fsr2l,c
   731  004610                     l58:
   732  004610  0100               	movlb	__Lparam shr (0+8)
   733  004612  51B8               	movf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   734  004614  5CD9               	subwf	fsr2l,w,c
   735  004616  E22C               	bc	u300
   736                           ;tacho.c: 176: {
   737                           ; _wrt allocated to tablreg
   738  004618  50D9               	movf	fsr2l,w,c
   739  00461A  0D02               	mullw	2
   740  00461C  51B6               	movf	?_HistVal^(__Lparam& (0+65280)),w
   741  00461E  24F3               	addwf	prodl,w,c
   742  004620  6EE9               	movwf	fsr0l,c
   743  004622  51B7               	movf	(?_HistVal+1)^(__Lparam& (0+65280)),w
   744  004624  20F4               	addwfc	prodh,w,c
   745  004626  6EEA               	movwf	fsr0h,c
   746  004628  CFEE FFF6          	movff	postinc0,tblptrl
   747  00462C  CFED FFF7          	movff	postdec0,tblptrh
   748                           ;tacho.c: 178: for(i=0;i<ndat;i++)
   749                           ; _i allocated to btemp
   750  004630  6A00               	clrf	btemp,c
   751  004632                     l62:
   752  004632  0100               	movlb	__Lparam shr (0+8)
   753  004634  51B8               	movf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   754  004636  5C00               	subwf	btemp,w,c
   755  004638  E219               	bc	u290
   756                           ;tacho.c: 179: {
   757  00463A  5000               	movf	btemp,w,c
   758  00463C  0D02               	mullw	2
   759  00463E  51B6               	movf	?_HistVal^(__Lparam& (0+65280)),w
   760  004640  24F3               	addwf	prodl,w,c
   761  004642  6EE9               	movwf	fsr0l,c
   762  004644  51B7               	movf	(?_HistVal+1)^(__Lparam& (0+65280)),w
   763  004646  20F4               	addwfc	prodh,w,c
   764  004648  6EEA               	movwf	fsr0h,c
   765  00464A  52EE               	movf	postinc0,f,c
   766  00464C  50F7               	movf	tblptrh,w,c
   767  00464E  18ED               	xorwf	postdec0,w,c
   768  004650  CFF6 FFE8          	movff	tblptrl,wreg
   769  004654  B4D8               	btfsc	status,2,c
   770  004656  18EF               	xorwf	indf0,w,c
   771  004658  E107               	bnz	l63
   772  00465A  50D9               	movf	fsr2l,w,c
   773  00465C  EE00  F0B9         	lfsr	0,?a_HistVal
   774  004660  26E9               	addwf	fsr0l,f,c
   775  004662  0E00               	movlw	0
   776  004664  22EA               	addwfc	fsr0h,f,c
   777  004666  2AEF               	incf	indf0,f,c
   778  004668                     l63:
   779  004668  2A00               	incf	btemp,f,c
   780  00466A  D7E3               	goto	l62
   781  00466C                     u290:
   782  00466C  2AD9               	incf	fsr2l,f,c
   783  00466E  D7D0               	goto	l58
   784  004670                     u300:
   785                           ;tacho.c: 181: }
   786  004670  6AF6               	clrf	tblptrl,c
   787  004672  6AF7               	clrf	tblptrh,c
   788                           ;tacho.c: 185: im=ndat-1;
   789  004674  0100               	movlb	__Lparam shr (0+8)
   790  004676  05B8               	decf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   791  004678  6EE1               	movwf	fsr1l,c
   792                           ;tacho.c: 186: for(i=0;i<ndat;i++)
   793                           ; _i allocated to fsr2l
   794  00467A  6AD9               	clrf	fsr2l,c
   795  00467C                     l67:
   796  00467C  0100               	movlb	__Lparam shr (0+8)
   797  00467E  51B8               	movf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   798  004680  5CD9               	subwf	fsr2l,w,c
   799  004682  E217               	bc	u320
   800                           ;tacho.c: 187: {
   801                           ; _wrt allocated to wtemp0
   802  004684  50D9               	movf	fsr2l,w,c
   803  004686  EE00  F0B9         	lfsr	0,?a_HistVal
   804  00468A  26E9               	addwf	fsr0l,f,c
   805  00468C  0E00               	movlw	0
   806  00468E  22EA               	addwfc	fsr0h,f,c
   807  004690  50EF               	movf	indf0,w,c
   808  004692  6E00               	movwf	btemp,c
   809  004694  6A01               	clrf	btemp+1,c
   810                           ;tacho.c: 189: if(max<=wrt)
   811  004696  50F7               	movf	tblptrh,w,c
   812  004698  5C01               	subwf	btemp+1,w,c
   813  00469A  E102               	bnz	u315
   814  00469C  50F6               	movf	tblptrl,w,c
   815  00469E  5C00               	subwf	btemp,w,c
   816  0046A0                     u315:
   817  0046A0  E306               	bnc	l68
   818                           ;tacho.c: 190: {
   819  0046A2  C000  FFF6         	movff	btemp,tblptrl
   820  0046A6  C001  FFF7         	movff	btemp+1,tblptrh
   821                           ;tacho.c: 192: im=i;
   822  0046AA  50D9               	movf	fsr2l,w,c
   823  0046AC  6EE1               	movwf	fsr1l,c
   824  0046AE                     l68:
   825  0046AE  2AD9               	incf	fsr2l,f,c
   826  0046B0  D7E5               	goto	l67
   827  0046B2                     u320:
   828                           ;tacho.c: 193: }
   829  0046B2  6802               	setf	btemp+2,c
   830  0046B4  6A03               	clrf	btemp+3,c
   831                           ;tacho.c: 197: for(i=0;i<ndat;i++)
   832  0046B6  6AD9               	clrf	fsr2l,c
   833  0046B8                     l72:
   834  0046B8  0100               	movlb	__Lparam shr (0+8)
   835  0046BA  51B8               	movf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   836  0046BC  5CD9               	subwf	fsr2l,w,c
   837  0046BE  E227               	bc	u350
   838                           ;tacho.c: 198: {
   839  0046C0  50D9               	movf	fsr2l,w,c
   840  0046C2  EE00  F0B9         	lfsr	0,?a_HistVal
   841  0046C6  26E9               	addwf	fsr0l,f,c
   842  0046C8  0E00               	movlw	0
   843  0046CA  22EA               	addwfc	fsr0h,f,c
   844  0046CC  50EF               	movf	indf0,w,c
   845  0046CE  6E00               	movwf	btemp,c
   846  0046D0  18F6               	xorwf	tblptrl,w,c
   847  0046D2  E101               	bnz	u335
   848  0046D4  52F7               	movf	tblptrh,f,c
   849  0046D6                     u335:
   850  0046D6  E119               	bnz	l73
   851                           ;tacho.c: 200: {
   852  0046D8  50D9               	movf	fsr2l,w,c
   853  0046DA  0D02               	mullw	2
   854  0046DC  0100               	movlb	__Lparam shr (0+8)
   855  0046DE  51B6               	movf	?_HistVal^(__Lparam& (0+65280)),w
   856  0046E0  24F3               	addwf	prodl,w,c
   857  0046E2  6EE9               	movwf	fsr0l,c
   858  0046E4  51B7               	movf	(?_HistVal+1)^(__Lparam& (0+65280)),w
   859  0046E6  20F4               	addwfc	prodh,w,c
   860  0046E8  6EEA               	movwf	fsr0h,c
   861  0046EA  CFEE F000          	movff	postinc0,btemp
   862  0046EE  CFED F001          	movff	postdec0,btemp+1
   863                           ;tacho.c: 202: if(min>=wrt)
   864  0046F2  5001               	movf	btemp+1,w,c
   865  0046F4  5C03               	subwf	btemp+3,w,c
   866  0046F6  E102               	bnz	u345
   867  0046F8  5000               	movf	btemp,w,c
   868  0046FA  5C02               	subwf	btemp+2,w,c
   869  0046FC                     u345:
   870  0046FC  E306               	bnc	l73
   871                           ;tacho.c: 203: {
   872  0046FE  C000  F002         	movff	btemp,btemp+2
   873  004702  C001  F003         	movff	btemp+1,btemp+3
   874                           ;tacho.c: 205: im=i;
   875  004706  50D9               	movf	fsr2l,w,c
   876  004708  6EE1               	movwf	fsr1l,c
   877  00470A                     l73:
   878  00470A  2AD9               	incf	fsr2l,f,c
   879  00470C  D7D5               	goto	l72
   880  00470E                     u350:
   881                           ;tacho.c: 206: }
   882  00470E  50E1               	movf	fsr1l,w,c
   883  004710  0D02               	mullw	2
   884  004712  0100               	movlb	__Lparam shr (0+8)
   885  004714  51B6               	movf	?_HistVal^(__Lparam& (0+65280)),w
   886  004716  24F3               	addwf	prodl,w,c
   887  004718  6EE9               	movwf	fsr0l,c
   888  00471A  51B7               	movf	(?_HistVal+1)^(__Lparam& (0+65280)),w
   889  00471C  20F4               	addwfc	prodh,w,c
   890  00471E  6EEA               	movwf	fsr0h,c
   891  004720  CFEE F000          	movff	postinc0,btemp
   892  004724  CFED F001          	movff	postdec0,btemp+1
   893  004728  0012               	return	
   894                           ;tacho.c: 210: }
   895  00472A                     __end_of_HistVal:
   896                           ;tacho.c: 214: unsigned int TFlt(unsigned int wn
      +                          k)
   897                           ;tacho.c: 215: {
   898  00472A  00B6               	dw	?_TFlt
   899  00472C                     _TFlt:
   900  000000                     
   901                           ;tacho.c: 216: static unsigned int bwnk=0;
   902  00472C  C100  F000         	movff	F1280,btemp
   903  004730  C101  F001         	movff	F1280+1,btemp+1
   904  004734  0100               	movlb	__Lparam shr (0+8)
   905  004736  51B7               	movf	(?_TFlt+1)^(__Lparam& (0+65280)),w
   906  004738  5C01               	subwf	btemp+1,w,c
   907  00473A  E102               	bnz	u365
   908  00473C  51B6               	movf	?_TFlt^(__Lparam& (0+65280)),w
   909  00473E  5C00               	subwf	btemp,w,c
   910  004740                     u365:
   911  004740  E219               	bc	l76
   912                           ;tacho.c: 220: {
   913  004742  C100  FFE8         	movff	F1280,wreg
   914  004746  5DB6               	subwf	?_TFlt^(__Lparam& (0+65280)),w
   915  004748  6E00               	movwf	btemp,c
   916  00474A  C101  FFE8         	movff	F1280+1,wreg
   917  00474E  59B7               	subwfb	(?_TFlt+1)^(__Lparam& (0+65280)),w
   918  004750  6E01               	movwf	btemp+1,c
   919  004752  0E00               	movlw	0
   920  004754  5C01               	subwf	btemp+1,w,c
   921  004756  0EC8               	movlw	200
   922  004758  B4D8               	btfsc	status,2,c
   923  00475A  5C00               	subwf	btemp,w,c
   924  00475C  E336               	bnc	l81
   925                           ;tacho.c: 222: {
   926  00475E  010F               	movlb	F1281 shr (0+8)
   927  004760  6B40               	clrf	F1281& (0+255),b
   928                           ;tacho.c: 224: bwnk=wnk;
   929  004762  C0B6  F100         	movff	?_TFlt,F1280
   930  004766  C0B7  F101         	movff	?_TFlt+1,F1280+1
   931                           ;tacho.c: 225: return wnk;
   932  00476A  C0B6  F000         	movff	?_TFlt,btemp
   933  00476E  C0B7  F001         	movff	?_TFlt+1,btemp+1
   934  004772  0012               	return	
   935                           ;tacho.c: 226: }
   936  004774                     l76:
   937                           ;tacho.c: 228: else
   938  004774  C100  F000         	movff	F1280,btemp
   939  004778  C101  F001         	movff	F1280+1,btemp+1
   940  00477C  0100               	movlb	__Lparam shr (0+8)
   941  00477E  51B6               	movf	?_TFlt^(__Lparam& (0+65280)),w
   942  004780  5E00               	subwf	btemp,f,c
   943  004782  51B7               	movf	(?_TFlt+1)^(__Lparam& (0+65280)),w
   944  004784  5A01               	subwfb	btemp+1,f,c
   945  004786  0E00               	movlw	0
   946  004788  5C01               	subwf	btemp+1,w,c
   947  00478A  0EC8               	movlw	200
   948  00478C  B4D8               	btfsc	status,2,c
   949  00478E  5C00               	subwf	btemp,w,c
   950  004790  E31C               	bnc	l81
   951                           ;tacho.c: 231: {
   952  004792  010F               	movlb	F1281 shr (0+8)
   953  004794  6B40               	clrf	F1281& (0+255),b
   954                           ;tacho.c: 233: bwnk=wnk;
   955  004796  C0B6  F100         	movff	?_TFlt,F1280
   956  00479A  C0B7  F101         	movff	?_TFlt+1,F1280+1
   957                           ;tacho.c: 234: return wnk;
   958  00479E  C0B6  F000         	movff	?_TFlt,btemp
   959  0047A2  C0B7  F001         	movff	?_TFlt+1,btemp+1
   960  0047A6  0012               	return	
   961                           ;tacho.c: 235: }
   962  0047A8                     l82:
   963                           ;tacho.c: 239: {
   964                           ;tacho.c: 241: {
   965  0047A8  C0B6  F100         	movff	?_TFlt,F1280
   966  0047AC  C0B7  F101         	movff	?_TFlt+1,F1280+1
   967                           ;tacho.c: 243: StartTimTacho();
   968  0047B0  DE17               	call	_StartTimTacho	;wreg free
   969                           ;tacho.c: 244: krok=1;
   970  0047B2  0E01               	movlw	1
   971  0047B4  CFE8 FF40          	movff	wreg,F1281
   972                           ;tacho.c: 245: break;
   973  0047B8  D00E               	goto	l80
   974  0047BA                     l83:
   975                           ;tacho.c: 246: }
   976                           ;tacho.c: 248: {
   977  0047BA  DE17               	call	_TimTacho	;wreg free
   978  0047BC  6E00               	movwf	btemp,c
   979  0047BE  0E21               	movlw	33
   980  0047C0  5C00               	subwf	btemp,w,c
   981  0047C2  E309               	bnc	l80
   982                           ;tacho.c: 250: {
   983                           ;tacho.c: 252: }
   984  0047C4  010F               	movlb	F1281 shr (0+8)
   985  0047C6  6B40               	clrf	F1281& (0+255),b
   986                           ;tacho.c: 254: }
   987  0047C8  D006               	goto	l80
   988  0047CA                     l81:
   989  0047CA  CF40  FFE8         	movff	F1281,wreg
   990  0047CE  0A00               	xorlw	0
   991  0047D0  E0EB               	bz	l82
   992  0047D2  0A01               	xorlw	1
   993  0047D4  E0F2               	bz	l83
   994  0047D6                     l80:
   995                           ;tacho.c: 256: return bwnk;
   996  0047D6  C100  F000         	movff	F1280,btemp
   997  0047DA  C101  F001         	movff	F1280+1,btemp+1
   998  0047DE  0012               	return	
   999                           ;tacho.c: 257: }
  1000  0047E0                     __end_of_TFlt:
  1001                           ;tacho.c: 261: void PomiarVNT(void)
  1002                           ;tacho.c: 262: {
  1003  0047E0                     _PomiarVNT:
  1004  000000                     
  1005                           ;tacho.c: 263: static unsigned int tvv[20];
  1006  0047E0  0101               	movlb	_nw0 shr (0+8)	;volatile
  1007  0047E2  5116               	movf	_nw0& (0+255),w,b	;volatile
  1008  0047E4  1117               	iorwf	(_nw0+1)& (0+255),w,b	;volatile
  1009  0047E6  E101 D143          	bz	l86
  1010                           ;tacho.c: 271: {
  1011  0047EA  EE01  F016         	lfsr	0,_nw0	;volatile
  1012  0047EE  6AEE               	clrf	postinc0,c
  1013  0047F0  6AEE               	clrf	postinc0,c
  1014                           ;tacho.c: 273: if(zr0) wynik=0;
  1015  0047F2  5124               	movf	_zr0& (0+255),w,b	;volatile
  1016  0047F4  1125               	iorwf	(_zr0+1)& (0+255),w,b	;volatile
  1017  0047F6  E005               	bz	l87
  1018  0047F8  EE01  F022         	lfsr	0,_wynik
  1019  0047FC  6AEE               	clrf	postinc0,c
  1020  0047FE  6AEE               	clrf	postinc0,c
  1021  004800  D005               	goto	l88
  1022  004802                     l87:
  1023                           ;tacho.c: 274: else
  1024  004802  C110  F122         	movff	_in0,_wynik	;volatile
  1025  004806  C111  F123         	movff	_in0+1,_wynik+1	;volatile
  1026                           ;tacho.c: 277: zero=0;
  1027  00480A  9C41               	bcf	_zero/(0+8),_zero& (0+7),c
  1028  00480C                     l88:
  1029                           ;tacho.c: 278: }
  1030  00480C  C122  FFF3         	movff	_wynik,prodl
  1031  004810  C123  FFF4         	movff	_wynik+1,prodh
  1032                           ;tacho.c: 281: if(zr0)
  1033  004814  0101               	movlb	_zr0 shr (0+8)	;volatile
  1034  004816  5124               	movf	_zr0& (0+255),w,b	;volatile
  1035  004818  1125               	iorwf	(_zr0+1)& (0+255),w,b	;volatile
  1036  00481A  E020               	bz	l89
  1037                           ;tacho.c: 282: {
  1038  00481C  8C41               	bsf	_zero/(0+8),_zero& (0+7),c
  1039                           ;tacho.c: 284: for(i=0;i<20;i++)
  1040  00481E  6AD9               	clrf	fsr2l,c
  1041  004820                     l90:
  1042                           ;tacho.c: 285: {
  1043  004820  50D9               	movf	fsr2l,w,c
  1044  004822  0D02               	mullw	2
  1045  004824  0E86               	movlw	low _tnp
  1046  004826  24F3               	addwf	prodl,w,c
  1047  004828  6EE9               	movwf	fsr0l,c
  1048  00482A  0E01               	movlw	high _tnp
  1049  00482C  20F4               	addwfc	prodh,w,c
  1050  00482E  6EEA               	movwf	fsr0h,c
  1051  004830  68EE               	setf	postinc0,c
  1052  004832  68ED               	setf	postdec0,c
  1053                           ;tacho.c: 287: tvv[i]=0;
  1054  004834  50D9               	movf	fsr2l,w,c
  1055  004836  0D02               	mullw	2
  1056  004838  0E5E               	movlw	low F1284
  1057  00483A  24F3               	addwf	prodl,w,c
  1058  00483C  6EE9               	movwf	fsr0l,c
  1059  00483E  0E01               	movlw	high F1284
  1060  004840  20F4               	addwfc	prodh,w,c
  1061  004842  6EEA               	movwf	fsr0h,c
  1062  004844  6AEE               	clrf	postinc0,c
  1063  004846  6AED               	clrf	postdec0,c
  1064  004848  2AD9               	incf	fsr2l,f,c
  1065  00484A  0E13               	movlw	19
  1066  00484C  64D9               	cpfsgt	fsr2l,c
  1067  00484E  D7E8               	goto	l90
  1068                           ;tacho.c: 288: }
  1069  004850  EE01  F002         	lfsr	0,F1286
  1070  004854  6AEE               	clrf	postinc0,c
  1071  004856  6AEE               	clrf	postinc0,c
  1072                           ;tacho.c: 290: wnk=0xffff;
  1073  004858  68F3               	setf	prodl,c
  1074  00485A  68F4               	setf	prodh,c
  1075  00485C                     l89:
  1076                           ;tacho.c: 291: }
  1077  00485C  0100               	movlb	__Lparam shr (0+8)
  1078  00485E  0E86               	movlw	low _tnp
  1079  004860  6FB6               	movwf	?_AddTab^(__Lparam& (0+65280)),b
  1080  004862  0E01               	movlw	high _tnp
  1081  004864  6FB7               	movwf	(?_AddTab+1)^(__Lparam& (0+65280)),b
  1082  004866  0E0B               	movlw	11
  1083  004868  6FB8               	movwf	(?_AddTab+2)^(__Lparam& (0+65280)),b
  1084  00486A  CFF3 F0B9          	movff	prodl,?_AddTab+3
  1085  00486E  CFF4 F0BA          	movff	prodh,?_AddTab+4
  1086  004872  DDBF               	call	_AddTab	;wreg free
  1087                           ;tacho.c: 294: wnk=FindPropVal(tnp,11);
  1088  004874  0100               	movlb	__Lparam shr (0+8)
  1089  004876  0E86               	movlw	low _tnp
  1090  004878  6FB6               	movwf	?_FindPropVal^(__Lparam& (0+65280)),b
  1091  00487A  0E01               	movlw	high _tnp
  1092  00487C  6FB7               	movwf	(?_FindPropVal+1)^(__Lparam& (0+65280)),b
  1093  00487E  0E0B               	movlw	11
  1094  004880  6FB8               	movwf	(?_FindPropVal+2)^(__Lparam& (0+65280)),b
  1095  004882  DDF2               	call	_FindPropVal	;wreg free
  1096  004884  C000  F0A9         	movff	btemp,?a_PomiarVNT
  1097  004888  C001  F0AA         	movff	btemp+1,?a_PomiarVNT+1
  1098                           ;tacho.c: 295: wnk2=(unsigned int)(round(((1000.
      +                          0/((float)wnk/4))*60.0)));
  1099  00488C  6A00               	clrf	btemp,c
  1100  00488E  0E70               	movlw	112
  1101  004890  6E01               	movwf	btemp+1,c
  1102  004892  0E42               	movlw	66
  1103  004894  6E02               	movwf	btemp+2,c
  1104  004896  C000  F0AD         	movff	btemp,?a_PomiarVNT+4
  1105  00489A  C001  F0AE         	movff	btemp+1,?a_PomiarVNT+5
  1106  00489E  C002  F0AF         	movff	btemp+2,?a_PomiarVNT+6
  1107  0048A2  6A00               	clrf	btemp,c
  1108  0048A4  0E80               	movlw	128
  1109  0048A6  6E01               	movwf	btemp+1,c
  1110  0048A8  0E40               	movlw	64
  1111  0048AA  6E02               	movwf	btemp+2,c
  1112  0048AC  C000  F0B0         	movff	btemp,?a_PomiarVNT+7
  1113  0048B0  C001  F0B1         	movff	btemp+1,?a_PomiarVNT+8
  1114  0048B4  C002  F0B2         	movff	btemp+2,?a_PomiarVNT+9
  1115  0048B8  C0A9  F000         	movff	?a_PomiarVNT,btemp
  1116  0048BC  C0AA  F001         	movff	?a_PomiarVNT+1,btemp+1
  1117  0048C0  EC46  F04C         	call	lwtoft
  1118  0048C4  C0B0  F003         	movff	?a_PomiarVNT+7,btemp+3
  1119  0048C8  C0B1  F004         	movff	?a_PomiarVNT+8,btemp+4
  1120  0048CC  C0B2  F005         	movff	?a_PomiarVNT+9,btemp+5
  1121  0048D0  EC8F  F049         	call	ftdiv
  1122  0048D4  C000  F0B3         	movff	btemp,?a_PomiarVNT+10
  1123  0048D8  C001  F0B4         	movff	btemp+1,?a_PomiarVNT+11
  1124  0048DC  C002  F0B5         	movff	btemp+2,?a_PomiarVNT+12
  1125  0048E0  6A00               	clrf	btemp,c
  1126  0048E2  0E7A               	movlw	122
  1127  0048E4  6E01               	movwf	btemp+1,c
  1128  0048E6  0E44               	movlw	68
  1129  0048E8  6E02               	movwf	btemp+2,c
  1130  0048EA  C0B3  F003         	movff	?a_PomiarVNT+10,btemp+3
  1131  0048EE  C0B4  F004         	movff	?a_PomiarVNT+11,btemp+4
  1132  0048F2  C0B5  F005         	movff	?a_PomiarVNT+12,btemp+5
  1133  0048F6  EC8F  F049         	call	ftdiv
  1134  0048FA  C0AD  F003         	movff	?a_PomiarVNT+4,btemp+3
  1135  0048FE  C0AE  F004         	movff	?a_PomiarVNT+5,btemp+4
  1136  004902  C0AF  F005         	movff	?a_PomiarVNT+6,btemp+5
  1137  004906  ECFF  F048         	call	ftmul
  1138  00490A  C000  F0B6         	movff	btemp,?_round
  1139  00490E  C001  F0B7         	movff	btemp+1,?_round+1
  1140  004912  C002  F0B8         	movff	btemp+2,?_round+2
  1141  004916  EC12  F04A         	call	_round	;wreg free
  1142  00491A  EC10  F04B         	call	fttol
  1143  00491E  C000  F0AB         	movff	btemp,?a_PomiarVNT+2
  1144  004922  C001  F0AC         	movff	btemp+1,?a_PomiarVNT+3
  1145                           ;tacho.c: 297: if(wnk2&&bwnk2!=wnk2)
  1146  004926  0100               	movlb	__Lparam shr (0+8)
  1147  004928  51AC               	movf	(?a_PomiarVNT+3)^(__Lparam& (0+65280)),w
  1148  00492A  11AB               	iorwf	(?a_PomiarVNT+2)^(__Lparam& (0+65280)),w
  1149  00492C  E048               	bz	l93
  1150  00492E  C102  F000         	movff	F1286,btemp
  1151  004932  C103  F001         	movff	F1286+1,btemp+1
  1152  004936  51AC               	movf	(?a_PomiarVNT+3)^(__Lparam& (0+65280)),w
  1153  004938  1801               	xorwf	btemp+1,w,c
  1154  00493A  E102               	bnz	u455
  1155  00493C  51AB               	movf	(?a_PomiarVNT+2)^(__Lparam& (0+65280)),w
  1156  00493E  1800               	xorwf	btemp,w,c
  1157  004940                     u455:
  1158  004940  E03E               	bz	l93
  1159                           ;tacho.c: 298: {
  1160  004942  C102  F000         	movff	F1286,btemp
  1161  004946  C103  F001         	movff	F1286+1,btemp+1
  1162  00494A  0100               	movlb	__Lparam shr (0+8)
  1163  00494C  5001               	movf	btemp+1,w,c
  1164  00494E  5DAC               	subwf	(?a_PomiarVNT+3)^(__Lparam& (0+65280)),w
  1165  004950  E102               	bnz	u475
  1166  004952  5000               	movf	btemp,w,c
  1167  004954  5DAB               	subwf	(?a_PomiarVNT+2)^(__Lparam& (0+65280)),w
  1168  004956                     u475:
  1169  004956  E218               	bc	l94
  1170                           ;tacho.c: 300: {
  1171  004958  C102  F000         	movff	F1286,btemp
  1172  00495C  C103  F001         	movff	F1286+1,btemp+1
  1173  004960  51AB               	movf	(?a_PomiarVNT+2)^(__Lparam& (0+65280)),w
  1174  004962  5E00               	subwf	btemp,f,c
  1175  004964  51AC               	movf	(?a_PomiarVNT+3)^(__Lparam& (0+65280)),w
  1176  004966  5A01               	subwfb	btemp+1,f,c
  1177  004968  0E13               	movlw	19
  1178  00496A  5C01               	subwf	btemp+1,w,c
  1179  00496C  0E89               	movlw	137
  1180  00496E  B4D8               	btfsc	status,2,c
  1181  004970  5C00               	subwf	btemp,w,c
  1182  004972  E325               	bnc	l93
  1183                           ;tacho.c: 302: {
  1184  004974  0101               	movlb	F1286 shr (0+8)
  1185  004976  5102               	movf	F1286& (0+255),w,b
  1186  004978  1103               	iorwf	(F1286+1)& (0+255),w,b
  1187  00497A  E003               	bz	l96
  1188  00497C  0702               	decf	F1286& (0+255),f,b
  1189  00497E  0E00               	movlw	0
  1190  004980  5B03               	subwfb	(F1286+1)& (0+255),f,b
  1191  004982                     l96:
  1192                           ;tacho.c: 304: tkrk=0;
  1193  004982  010F               	movlb	_tkrk shr (0+8)
  1194  004984  6B44               	clrf	_tkrk& (0+255),b
  1195                           ;tacho.c: 305: return;
  1196  004986  0012               	return	
  1197                           ;tacho.c: 306: }
  1198  004988                     l94:
  1199                           ;tacho.c: 308: else
  1200  004988  0100               	movlb	__Lparam shr (0+8)
  1201  00498A  C102  FFE8         	movff	F1286,wreg
  1202  00498E  5DAB               	subwf	(?a_PomiarVNT+2)^(__Lparam& (0+65280)),w
  1203  004990  6E00               	movwf	btemp,c
  1204  004992  C103  FFE8         	movff	F1286+1,wreg
  1205  004996  59AC               	subwfb	(?a_PomiarVNT+3)^(__Lparam& (0+65280)),w
  1206  004998  6E01               	movwf	btemp+1,c
  1207  00499A  0E13               	movlw	19
  1208  00499C  5C01               	subwf	btemp+1,w,c
  1209  00499E  0E89               	movlw	137
  1210  0049A0  B4D8               	btfsc	status,2,c
  1211  0049A2  5C00               	subwf	btemp,w,c
  1212  0049A4  E30C               	bnc	l93
  1213                           ;tacho.c: 311: {
  1214  0049A6  0101               	movlb	F1286 shr (0+8)
  1215  0049A8  0E00               	movlw	0
  1216  0049AA  5D03               	subwf	(F1286+1)& (0+255),w,b
  1217  0049AC  0EFF               	movlw	255
  1218  0049AE  B4D8               	btfsc	status,2,c
  1219  0049B0  5D02               	subwf	F1286& (0+255),w,b
  1220  0049B2  E202               	bc	l99
  1221  0049B4  4B02               	infsnz	F1286& (0+255),f,b
  1222  0049B6  2B03               	incf	(F1286+1)& (0+255),f,b
  1223  0049B8                     l99:
  1224                           ;tacho.c: 313: tkrk=0;
  1225  0049B8  010F               	movlb	_tkrk shr (0+8)
  1226  0049BA  6B44               	clrf	_tkrk& (0+255),b
  1227                           ;tacho.c: 314: return;
  1228  0049BC  0012               	return	
  1229  0049BE                     l93:
  1230                           ;tacho.c: 315: }
  1231  0049BE  C0AB  F102         	movff	?a_PomiarVNT+2,F1286
  1232  0049C2  C0AC  F103         	movff	?a_PomiarVNT+3,F1286+1
  1233                           ;tacho.c: 320: AddTab(tvv,11,wnk2);
  1234  0049C6  0100               	movlb	__Lparam shr (0+8)
  1235  0049C8  0E5E               	movlw	low F1284
  1236  0049CA  6FB6               	movwf	?_AddTab^(__Lparam& (0+65280)),b
  1237  0049CC  0E01               	movlw	high F1284
  1238  0049CE  6FB7               	movwf	(?_AddTab+1)^(__Lparam& (0+65280)),b
  1239  0049D0  0E0B               	movlw	11
  1240  0049D2  6FB8               	movwf	(?_AddTab+2)^(__Lparam& (0+65280)),b
  1241  0049D4  C0AB  F0B9         	movff	?a_PomiarVNT+2,?_AddTab+3
  1242  0049D8  C0AC  F0BA         	movff	?a_PomiarVNT+3,?_AddTab+4
  1243  0049DC  DD0A               	call	_AddTab	;wreg free
  1244                           ;tacho.c: 321: wnk2=HistVal(tvv,11);
  1245  0049DE  0100               	movlb	__Lparam shr (0+8)
  1246  0049E0  0E5E               	movlw	low F1284
  1247  0049E2  6FB6               	movwf	?_HistVal^(__Lparam& (0+65280)),b
  1248  0049E4  0E01               	movlw	high F1284
  1249  0049E6  6FB7               	movwf	(?_HistVal+1)^(__Lparam& (0+65280)),b
  1250  0049E8  0E0B               	movlw	11
  1251  0049EA  6FB8               	movwf	(?_HistVal+2)^(__Lparam& (0+65280)),b
  1252  0049EC  DDFA               	call	_HistVal	;wreg free
  1253  0049EE  C000  F0AB         	movff	btemp,?a_PomiarVNT+2
  1254  0049F2  C001  F0AC         	movff	btemp+1,?a_PomiarVNT+3
  1255                           ;tacho.c: 322: M.rVVNT=TFlt(wnk2);
  1256  0049F6  C0AB  F0B6         	movff	?a_PomiarVNT+2,?_TFlt
  1257  0049FA  C0AC  F0B7         	movff	?a_PomiarVNT+3,?_TFlt+1
  1258  0049FE  DE96               	call	_TFlt	;wreg free
  1259  004A00  C000  F085         	movff	btemp,_M+48
  1260  004A04  C001  F086         	movff	btemp+1,_M+49
  1261                           ;tacho.c: 323: M.VVNT=(unsigned char)((M.rVVNT/1
      +                          00.0));
  1262  004A08  6A00               	clrf	btemp,c
  1263  004A0A  0EC8               	movlw	200
  1264  004A0C  6E01               	movwf	btemp+1,c
  1265  004A0E  0E42               	movlw	66
  1266  004A10  6E02               	movwf	btemp+2,c
  1267  004A12  C000  F0AD         	movff	btemp,?a_PomiarVNT+4
  1268  004A16  C001  F0AE         	movff	btemp+1,?a_PomiarVNT+5
  1269  004A1A  C002  F0AF         	movff	btemp+2,?a_PomiarVNT+6
  1270  004A1E  EE00  F085         	lfsr	0,_M+48
  1271  004A22  CFEE F000          	movff	postinc0,btemp
  1272  004A26  CFED F001          	movff	postdec0,btemp+1
  1273  004A2A  EC46  F04C         	call	lwtoft
  1274  004A2E  C0AD  F003         	movff	?a_PomiarVNT+4,btemp+3
  1275  004A32  C0AE  F004         	movff	?a_PomiarVNT+5,btemp+4
  1276  004A36  C0AF  F005         	movff	?a_PomiarVNT+6,btemp+5
  1277  004A3A  EC8F  F049         	call	ftdiv
  1278  004A3E  EC10  F04B         	call	fttol
  1279  004A42  C000  F084         	movff	btemp,_M+47
  1280                           ;tacho.c: 324: if((M.rVVNT%100)>=70) M.VVNT+=1;
  1281  004A46  0E64               	movlw	100
  1282  004A48  6E02               	movwf	btemp+2,c
  1283  004A4A  6A03               	clrf	btemp+3,c
  1284  004A4C  EE00  F085         	lfsr	0,_M+48
  1285  004A50  CFEE F000          	movff	postinc0,btemp
  1286  004A54  CFED F001          	movff	postdec0,btemp+1
  1287  004A58  ECAF  F04A         	call	lwmod
  1288  004A5C  0E00               	movlw	0
  1289  004A5E  5C01               	subwf	btemp+1,w,c
  1290  004A60  0E46               	movlw	70
  1291  004A62  B4D8               	btfsc	status,2,c
  1292  004A64  5C00               	subwf	btemp,w,c
  1293  004A66  E302               	bnc	l100
  1294  004A68  0100               	movlb	(_M+47) shr (0+8)
  1295  004A6A  2B84               	incf	(_M+47)& (0+255),f,b
  1296  004A6C                     l100:
  1297                           ;tacho.c: 325: tkrk=0;
  1298  004A6C  010F               	movlb	_tkrk shr (0+8)
  1299  004A6E  6B44               	clrf	_tkrk& (0+255),b
  1300  004A70                     l86:
  1301                           ;tacho.c: 326: }
  1302  004A70  D1CA               	goto	_FPmVNT	;wreg free
  1303                           ;tacho.c: 329: }
  1304  004A72                     __end_of_PomiarVNT:
  1305                           ;tacho.c: 333: void ClrDtV(void)
  1306                           ;tacho.c: 334: {
  1307  004A72                     _ClrDtV:
  1308  000000                     
  1309                           ;tacho.c: 335: DVNT=0;
  1310  004A72  EE01  F008         	lfsr	0,_DVNT	;volatile
  1311  004A76  6AEE               	clrf	postinc0,c
  1312  004A78  6AEE               	clrf	postinc0,c
  1313                           ;tacho.c: 336: dDVNT=0;
  1314  004A7A  EE01  F00E         	lfsr	0,_dDVNT	;volatile
  1315  004A7E  6AEE               	clrf	postinc0,c
  1316  004A80  6AEE               	clrf	postinc0,c
  1317                           ;tacho.c: 337: tdDVNT=0;
  1318  004A82  EE01  F018         	lfsr	0,_tdDVNT	;volatile
  1319  004A86  6AEE               	clrf	postinc0,c
  1320  004A88  6AEE               	clrf	postinc0,c
  1321                           ;tacho.c: 338: ddDVNT=0;
  1322  004A8A  EE01  F026         	lfsr	0,_ddDVNT	;volatile
  1323  004A8E  6AEE               	clrf	postinc0,c
  1324  004A90  6AEE               	clrf	postinc0,c
  1325  004A92  6AEE               	clrf	postinc0,c
  1326  004A94  6AEE               	clrf	postinc0,c
  1327                           ;tacho.c: 339: v_t=0;
  1328  004A96  EE01  F01E         	lfsr	0,_v_t	;volatile
  1329  004A9A  6AEE               	clrf	postinc0,c
  1330  004A9C  6AEE               	clrf	postinc0,c
  1331                           ;tacho.c: 340: v_dt=0;
  1332  004A9E  EE01  F01C         	lfsr	0,_v_dt	;volatile
  1333  004AA2  6AEE               	clrf	postinc0,c
  1334  004AA4  6AEE               	clrf	postinc0,c
  1335                           ;tacho.c: 341: v_tdt=0;
  1336  004AA6  EE01  F020         	lfsr	0,_v_tdt	;volatile
  1337  004AAA  6AEE               	clrf	postinc0,c
  1338  004AAC  6AEE               	clrf	postinc0,c
  1339                           ;tacho.c: 342: v_ddt=0;
  1340  004AAE  EE01  F02A         	lfsr	0,_v_ddt	;volatile
  1341  004AB2  6AEE               	clrf	postinc0,c
  1342  004AB4  6AEE               	clrf	postinc0,c
  1343  004AB6  6AEE               	clrf	postinc0,c
  1344  004AB8  6AEE               	clrf	postinc0,c
  1345                           ;tacho.c: 343: }
  1346  004ABA  0012               	return	
  1347  004ABC                     __end_of_ClrDtV:
  1348                           ;tacho.c: 345: void PredkoscZmianVNT(void)
  1349                           ;tacho.c: 346: {
  1350  004ABC                     _PredkoscZmianVNT:
  1351  000000                     
  1352                           ;tacho.c: 347: static unsigned int ffv;
  1353  004ABC  B683               	btfsc	3971,3,c	;volatile
  1354  004ABE  D007               	goto	l103
  1355                           ;tacho.c: 353: {
  1356  004AC0  EE01  F004         	lfsr	0,F1296
  1357  004AC4  6AEE               	clrf	postinc0,c
  1358  004AC6  6AEE               	clrf	postinc0,c
  1359                           ;tacho.c: 355: indff=0;
  1360  004AC8  010F               	movlb	F1297 shr (0+8)
  1361  004ACA  6B41               	clrf	F1297& (0+255),b
  1362                           ;tacho.c: 356: }
  1363  004ACC  D04E               	goto	l104
  1364  004ACE                     l103:
  1365                           ;tacho.c: 357: else
  1366  004ACE  010F               	movlb	F1297 shr (0+8)
  1367  004AD0  5341               	movf	F1297& (0+255),f,b
  1368  004AD2  E10F               	bnz	l105
  1369                           ;tacho.c: 360: {
  1370  004AD4  6AD9               	clrf	fsr2l,c
  1371  004AD6                     l106:
  1372  004AD6  50D9               	movf	fsr2l,w,c
  1373  004AD8  0D02               	mullw	2
  1374  004ADA  0E46               	movlw	low _wvv
  1375  004ADC  24F3               	addwf	prodl,w,c
  1376  004ADE  6EE9               	movwf	fsr0l,c
  1377  004AE0  0E01               	movlw	high _wvv
  1378  004AE2  20F4               	addwfc	prodh,w,c
  1379  004AE4  6EEA               	movwf	fsr0h,c
  1380  004AE6  6AEE               	clrf	postinc0,c
  1381  004AE8  6AED               	clrf	postdec0,c
  1382  004AEA  2AD9               	incf	fsr2l,f,c
  1383  004AEC  0E09               	movlw	9
  1384  004AEE  64D9               	cpfsgt	fsr2l,c
  1385  004AF0  D7F2               	goto	l106
  1386  004AF2                     l105:
  1387                           ;tacho.c: 362: }
  1388  004AF2  010F               	movlb	F1297 shr (0+8)
  1389  004AF4  2B41               	incf	F1297& (0+255),f,b
  1390                           ;tacho.c: 364: if(indff>=9)
  1391  004AF6  0E08               	movlw	8
  1392  004AF8  6541               	cpfsgt	F1297& (0+255),b
  1393  004AFA  D01C               	goto	l109
  1394                           ;tacho.c: 365: {
  1395  004AFC  0E09               	movlw	9
  1396  004AFE  CFE8 FF41          	movff	wreg,F1297
  1397                           ;tacho.c: 367: for(i=0;i<9;i++) wvv[i]=wvv[i+1];
  1398  004B02  6AD9               	clrf	fsr2l,c
  1399  004B04                     l110:
  1400  004B04  50D9               	movf	fsr2l,w,c
  1401  004B06  0D02               	mullw	2
  1402  004B08  0E48               	movlw	low (_wvv+2)
  1403  004B0A  24F3               	addwf	prodl,w,c
  1404  004B0C  6EE1               	movwf	fsr1l,c
  1405  004B0E  0E01               	movlw	high (_wvv+2)
  1406  004B10  20F4               	addwfc	prodh,w,c
  1407  004B12  6EE2               	movwf	fsr1h,c
  1408  004B14  50D9               	movf	fsr2l,w,c
  1409  004B16  0D02               	mullw	2
  1410  004B18  0E46               	movlw	low _wvv
  1411  004B1A  24F3               	addwf	prodl,w,c
  1412  004B1C  6EE9               	movwf	fsr0l,c
  1413  004B1E  0E01               	movlw	high _wvv
  1414  004B20  20F4               	addwfc	prodh,w,c
  1415  004B22  6EEA               	movwf	fsr0h,c
  1416  004B24  CFE6 FFEE          	movff	postinc1,postinc0
  1417  004B28  CFE5 FFED          	movff	postdec1,postdec0
  1418  004B2C  2AD9               	incf	fsr2l,f,c
  1419  004B2E  0E08               	movlw	8
  1420  004B30  64D9               	cpfsgt	fsr2l,c
  1421  004B32  D7E8               	goto	l110
  1422  004B34                     l109:
  1423                           ;tacho.c: 368: }
  1424  004B34  EE00  F085         	lfsr	0,_M+48
  1425  004B38  CFEE F000          	movff	postinc0,btemp
  1426  004B3C  CFED F001          	movff	postdec0,btemp+1
  1427  004B40  C104  FFE8         	movff	F1296,wreg
  1428  004B44  5C00               	subwf	btemp,w,c
  1429  004B46  6E02               	movwf	btemp+2,c
  1430  004B48  C105  FFE8         	movff	F1296+1,wreg
  1431  004B4C  5801               	subwfb	btemp+1,w,c
  1432  004B4E  6E03               	movwf	btemp+3,c
  1433  004B50  CF41  FFE8         	movff	F1297,wreg
  1434  004B54  0D02               	mullw	2
  1435  004B56  0E46               	movlw	low _wvv
  1436  004B58  24F3               	addwf	prodl,w,c
  1437  004B5A  6EE9               	movwf	fsr0l,c
  1438  004B5C  0E01               	movlw	high _wvv
  1439  004B5E  20F4               	addwfc	prodh,w,c
  1440  004B60  6EEA               	movwf	fsr0h,c
  1441  004B62  C002  FFEE         	movff	btemp+2,postinc0
  1442  004B66  C003  FFED         	movff	btemp+3,postdec0
  1443  004B6A                     l104:
  1444                           ;tacho.c: 370: }
  1445  004B6A  C085  F104         	movff	_M+48,F1296
  1446  004B6E  C086  F105         	movff	_M+49,F1296+1
  1447                           ;tacho.c: 372: w=0;
  1448  004B72  0100               	movlb	__Lparam shr (0+8)
  1449  004B74  6BBA               	clrf	?a_PredkoscZmianVNT^(__Lparam& (0+65280)),
      +                          b
  1450  004B76  6BBB               	clrf	(?a_PredkoscZmianVNT+1)^(__Lparam& (0+6528
      +                          0)),b
  1451  004B78  6BBC               	clrf	(?a_PredkoscZmianVNT+2)^(__Lparam& (0+6528
      +                          0)),b
  1452  004B7A  6BBD               	clrf	(?a_PredkoscZmianVNT+3)^(__Lparam& (0+6528
      +                          0)),b
  1453                           ;tacho.c: 373: for(i=0;i<10;i++) {if(w+wvv[i]<=0
      +                          xff) w+=wvv[i];}
  1454  004B7C  6AD9               	clrf	fsr2l,c
  1455  004B7E                     l113:
  1456  004B7E  50D9               	movf	fsr2l,w,c
  1457  004B80  0D02               	mullw	2
  1458  004B82  0E46               	movlw	low _wvv
  1459  004B84  24F3               	addwf	prodl,w,c
  1460  004B86  6EE9               	movwf	fsr0l,c
  1461  004B88  0E01               	movlw	high _wvv
  1462  004B8A  20F4               	addwfc	prodh,w,c
  1463  004B8C  6EEA               	movwf	fsr0h,c
  1464  004B8E  CFEE F000          	movff	postinc0,btemp
  1465  004B92  CFED F001          	movff	postdec0,btemp+1
  1466  004B96  0E00               	movlw	0
  1467  004B98  BE01               	btfsc	btemp+1,7,c
  1468  004B9A  0EFF               	movlw	255
  1469  004B9C  6E02               	movwf	btemp+2,c
  1470  004B9E  6E03               	movwf	btemp+3,c
  1471  004BA0  0100               	movlb	__Lparam shr (0+8)
  1472  004BA2  51BA               	movf	?a_PredkoscZmianVNT^(__Lparam& (0+65280)),
      +                          w
  1473  004BA4  2400               	addwf	btemp,w,c
  1474  004BA6  6E04               	movwf	btemp+4,c
  1475  004BA8  51BB               	movf	(?a_PredkoscZmianVNT+1)^(__Lparam& (0+6528
      +                          0)),w
  1476  004BAA  2001               	addwfc	btemp+1,w,c
  1477  004BAC  6E05               	movwf	btemp+5,c
  1478  004BAE  51BC               	movf	(?a_PredkoscZmianVNT+2)^(__Lparam& (0+6528
      +                          0)),w
  1479  004BB0  2002               	addwfc	btemp+2,w,c
  1480  004BB2  6E06               	movwf	btemp+6,c
  1481  004BB4  51BD               	movf	(?a_PredkoscZmianVNT+3)^(__Lparam& (0+6528
      +                          0)),w
  1482  004BB6  2003               	addwfc	btemp+3,w,c
  1483  004BB8  6E07               	movwf	btemp+7,c
  1484  004BBA  5007               	movf	btemp+7,w,c
  1485  004BBC  0A80               	xorlw	128
  1486  004BBE  0F80               	addlw	128
  1487  004BC0  E108               	bnz	u585
  1488  004BC2  0E00               	movlw	0
  1489  004BC4  5C06               	subwf	btemp+6,w,c
  1490  004BC6  E105               	bnz	u585
  1491  004BC8  0E01               	movlw	1
  1492  004BCA  5C05               	subwf	btemp+5,w,c
  1493  004BCC  E102               	bnz	u585
  1494  004BCE  0E00               	movlw	0
  1495  004BD0  5C04               	subwf	btemp+4,w,c
  1496  004BD2                     u585:
  1497  004BD2  E219               	bc	l116
  1498  004BD4  50D9               	movf	fsr2l,w,c
  1499  004BD6  0D02               	mullw	2
  1500  004BD8  0E46               	movlw	low _wvv
  1501  004BDA  24F3               	addwf	prodl,w,c
  1502  004BDC  6EE9               	movwf	fsr0l,c
  1503  004BDE  0E01               	movlw	high _wvv
  1504  004BE0  20F4               	addwfc	prodh,w,c
  1505  004BE2  6EEA               	movwf	fsr0h,c
  1506  004BE4  CFEE F000          	movff	postinc0,btemp
  1507  004BE8  CFED F001          	movff	postdec0,btemp+1
  1508  004BEC  0E00               	movlw	0
  1509  004BEE  BE01               	btfsc	btemp+1,7,c
  1510  004BF0  0EFF               	movlw	255
  1511  004BF2  6E02               	movwf	btemp+2,c
  1512  004BF4  6E03               	movwf	btemp+3,c
  1513  004BF6  5000               	movf	btemp,w,c
  1514  004BF8  27BA               	addwf	?a_PredkoscZmianVNT^(__Lparam& (0+65280))
      +                          ,f,b
  1515  004BFA  5001               	movf	btemp+1,w,c
  1516  004BFC  23BB               	addwfc	(?a_PredkoscZmianVNT+1)^(__Lparam& (0+65
      +                          280)),f,b
  1517  004BFE  5002               	movf	btemp+2,w,c
  1518  004C00  23BC               	addwfc	(?a_PredkoscZmianVNT+2)^(__Lparam& (0+65
      +                          280)),f,b
  1519  004C02  5003               	movf	btemp+3,w,c
  1520  004C04  23BD               	addwfc	(?a_PredkoscZmianVNT+3)^(__Lparam& (0+65
      +                          280)),f,b
  1521  004C06                     l116:
  1522  004C06  2AD9               	incf	fsr2l,f,c
  1523  004C08  0E09               	movlw	9
  1524  004C0A  64D9               	cpfsgt	fsr2l,c
  1525  004C0C  D7B8               	goto	l113
  1526                           ;tacho.c: 374: ddDVNT=w;
  1527  004C0E  C0BA  F126         	movff	?a_PredkoscZmianVNT,_ddDVNT	;volatile
  1528  004C12  C0BB  F127         	movff	?a_PredkoscZmianVNT+1,_ddDVNT+1	;volatile
  1529  004C16  C0BC  F128         	movff	?a_PredkoscZmianVNT+2,_ddDVNT+2	;volatile
  1530  004C1A  C0BD  F129         	movff	?a_PredkoscZmianVNT+3,_ddDVNT+3	;volatile
  1531                           ;tacho.c: 375: }
  1532  004C1E  0C09               	retlw	9
  1533  004C20                     __end_of_PredkoscZmianVNT:
  1534                           ;tacho.c: 378: void FltParVNT(void)
  1535                           ;tacho.c: 379: {
  1536  004C20                     _FltParVNT:
  1537  000000                     
  1538                           ;tacho.c: 380: static unsigned char indv,indtm;
  1539  004C20  EE00  F085         	lfsr	0,_M+48
  1540  004C24  CFEE F002          	movff	postinc0,btemp+2
  1541  004C28  CFED F003          	movff	postdec0,btemp+3
  1542  004C2C  C106  F000         	movff	F1304,btemp
  1543  004C30  C107  F001         	movff	F1304+1,btemp+1
  1544  004C34  5003               	movf	btemp+3,w,c
  1545  004C36  5C01               	subwf	btemp+1,w,c
  1546  004C38  E102               	bnz	u605
  1547  004C3A  5002               	movf	btemp+2,w,c
  1548  004C3C  5C00               	subwf	btemp,w,c
  1549  004C3E                     u605:
  1550  004C3E  E20D               	bc	l118
  1551  004C40  EE00  F085         	lfsr	0,_M+48
  1552  004C44  CFEE F000          	movff	postinc0,btemp
  1553  004C48  CFED F001          	movff	postdec0,btemp+1
  1554  004C4C  C106  FFE8         	movff	F1304,wreg
  1555  004C50  5C00               	subwf	btemp,w,c
  1556  004C52  6EF3               	movwf	prodl,c
  1557  004C54  C107  FFE8         	movff	F1304+1,wreg
  1558  004C58  D00A               	goto	L1
  1559  004C5A                     l118:
  1560                           ;tacho.c: 388: else wr=fv-M.rVVNT;
  1561  004C5A  C106  F000         	movff	F1304,btemp
  1562  004C5E  C107  F001         	movff	F1304+1,btemp+1
  1563  004C62  C085  FFE8         	movff	_M+48,wreg
  1564  004C66  5C00               	subwf	btemp,w,c
  1565  004C68  6EF3               	movwf	prodl,c
  1566  004C6A  C086  FFE8         	movff	_M+49,wreg
  1567  004C6E                     L1:
  1568  004C6E  5801               	subwfb	btemp+1,w,c
  1569  004C70  6EF4               	movwf	prodh,c
  1570                           ;tacho.c: 389: if(wr) indv++;
  1571  004C72  50F4               	movf	prodh,w,c
  1572  004C74  10F3               	iorwf	prodl,w,c
  1573  004C76  E002               	bz	l120
  1574  004C78  010F               	movlb	F1302 shr (0+8)
  1575  004C7A  2B42               	incf	F1302& (0+255),f,b
  1576  004C7C                     l120:
  1577                           ;tacho.c: 390: if(wr>=2) indv=10;
  1578  004C7C  0E00               	movlw	0
  1579  004C7E  5CF4               	subwf	prodh,w,c
  1580  004C80  0E02               	movlw	2
  1581  004C82  B4D8               	btfsc	status,2,c
  1582  004C84  5CF3               	subwf	prodl,w,c
  1583  004C86  E303               	bnc	l121
  1584  004C88  0E0A               	movlw	10
  1585  004C8A  CFE8 FF42          	movff	wreg,F1302
  1586  004C8E                     l121:
  1587                           ;tacho.c: 391: PredkoscZmianVNT();
  1588  004C8E  DF16               	call	_PredkoscZmianVNT	;wreg free
  1589                           ;tacho.c: 396: for(i=0;i<9;i++) wv[i]=wv[i+1];
  1590  004C90  6AF3               	clrf	prodl,c
  1591  004C92  6AF4               	clrf	prodh,c
  1592  004C94                     l122:
  1593  004C94  90D8               	bcf	status,0,c
  1594  004C96  34F3               	rlcf	prodl,w,c
  1595  004C98  6E00               	movwf	btemp,c
  1596  004C9A  34F4               	rlcf	prodh,w,c
  1597  004C9C  6E01               	movwf	btemp+1,c
  1598  004C9E  0E30               	movlw	low (_wv+2)
  1599  004CA0  2400               	addwf	btemp,w,c
  1600  004CA2  6EE1               	movwf	fsr1l,c
  1601  004CA4  0E01               	movlw	high (_wv+2)
  1602  004CA6  2001               	addwfc	btemp+1,w,c
  1603  004CA8  6EE2               	movwf	fsr1h,c
  1604  004CAA  90D8               	bcf	status,0,c
  1605  004CAC  34F3               	rlcf	prodl,w,c
  1606  004CAE  6E00               	movwf	btemp,c
  1607  004CB0  34F4               	rlcf	prodh,w,c
  1608  004CB2  6E01               	movwf	btemp+1,c
  1609  004CB4  0E2E               	movlw	low _wv
  1610  004CB6  2400               	addwf	btemp,w,c
  1611  004CB8  6EE9               	movwf	fsr0l,c
  1612  004CBA  0E01               	movlw	high _wv
  1613  004CBC  2001               	addwfc	btemp+1,w,c
  1614  004CBE  6EEA               	movwf	fsr0h,c
  1615  004CC0  CFE6 FFEE          	movff	postinc1,postinc0
  1616  004CC4  CFE5 FFED          	movff	postdec1,postdec0
  1617  004CC8  4AF3               	infsnz	prodl,f,c
  1618  004CCA  2AF4               	incf	prodh,f,c
  1619  004CCC  0E00               	movlw	0
  1620  004CCE  5CF4               	subwf	prodh,w,c
  1621  004CD0  0E09               	movlw	9
  1622  004CD2  B4D8               	btfsc	status,2,c
  1623  004CD4  5CF3               	subwf	prodl,w,c
  1624  004CD6  E3DE               	bnc	l122
  1625                           ;tacho.c: 397: wv[9]=M.rVVNT;
  1626  004CD8  C085  F140         	movff	_M+48,_wv+18
  1627  004CDC  C086  F141         	movff	_M+49,_wv+19
  1628                           ;tacho.c: 398: www=0;
  1629  004CE0  0100               	movlb	__Lparam shr (0+8)
  1630  004CE2  6BB6               	clrf	?a_FltParVNT^(__Lparam& (0+65280)),b
  1631  004CE4  6BB7               	clrf	(?a_FltParVNT+1)^(__Lparam& (0+65280)),b
  1632  004CE6  6BB8               	clrf	(?a_FltParVNT+2)^(__Lparam& (0+65280)),b
  1633  004CE8  6BB9               	clrf	(?a_FltParVNT+3)^(__Lparam& (0+65280)),b
  1634                           ;tacho.c: 399: for(i=0;i<9;i++) www+=wv[i];
  1635  004CEA  6AF3               	clrf	prodl,c
  1636  004CEC  6AF4               	clrf	prodh,c
  1637  004CEE                     l125:
  1638  004CEE  90D8               	bcf	status,0,c
  1639  004CF0  34F3               	rlcf	prodl,w,c
  1640  004CF2  6E00               	movwf	btemp,c
  1641  004CF4  34F4               	rlcf	prodh,w,c
  1642  004CF6  6E01               	movwf	btemp+1,c
  1643  004CF8  0E2E               	movlw	low _wv
  1644  004CFA  2400               	addwf	btemp,w,c
  1645  004CFC  6EE9               	movwf	fsr0l,c
  1646  004CFE  0E01               	movlw	high _wv
  1647  004D00  2001               	addwfc	btemp+1,w,c
  1648  004D02  6EEA               	movwf	fsr0h,c
  1649  004D04  CFEE F000          	movff	postinc0,btemp
  1650  004D08  CFED F001          	movff	postdec0,btemp+1
  1651  004D0C  0E00               	movlw	0
  1652  004D0E  BE01               	btfsc	btemp+1,7,c
  1653  004D10  0EFF               	movlw	255
  1654  004D12  6E02               	movwf	btemp+2,c
  1655  004D14  6E03               	movwf	btemp+3,c
  1656  004D16  0100               	movlb	__Lparam shr (0+8)
  1657  004D18  5000               	movf	btemp,w,c
  1658  004D1A  27B6               	addwf	?a_FltParVNT^(__Lparam& (0+65280)),f,b
  1659  004D1C  5001               	movf	btemp+1,w,c
  1660  004D1E  23B7               	addwfc	(?a_FltParVNT+1)^(__Lparam& (0+65280)),f
      +                          ,b
  1661  004D20  5002               	movf	btemp+2,w,c
  1662  004D22  23B8               	addwfc	(?a_FltParVNT+2)^(__Lparam& (0+65280)),f
      +                          ,b
  1663  004D24  5003               	movf	btemp+3,w,c
  1664  004D26  23B9               	addwfc	(?a_FltParVNT+3)^(__Lparam& (0+65280)),f
      +                          ,b
  1665  004D28  4AF3               	infsnz	prodl,f,c
  1666  004D2A  2AF4               	incf	prodh,f,c
  1667  004D2C  0E00               	movlw	0
  1668  004D2E  5CF4               	subwf	prodh,w,c
  1669  004D30  0E09               	movlw	9
  1670  004D32  B4D8               	btfsc	status,2,c
  1671  004D34  5CF3               	subwf	prodl,w,c
  1672  004D36  E3DB               	bnc	l125
  1673                           ;tacho.c: 400: tdDVNT=wv[9]-www/9;
  1674  004D38  0E09               	movlw	9
  1675  004D3A  6E04               	movwf	btemp+4,c
  1676  004D3C  6A05               	clrf	btemp+5,c
  1677  004D3E  6A06               	clrf	btemp+6,c
  1678  004D40  6A07               	clrf	btemp+7,c
  1679  004D42  C0B6  F000         	movff	?a_FltParVNT,btemp
  1680  004D46  C0B7  F001         	movff	?a_FltParVNT+1,btemp+1
  1681  004D4A  C0B8  F002         	movff	?a_FltParVNT+2,btemp+2
  1682  004D4E  C0B9  F003         	movff	?a_FltParVNT+3,btemp+3
  1683  004D52  EC58  F048         	call	lldiv
  1684  004D56  C000  F004         	movff	btemp,btemp+4
  1685  004D5A  C001  F005         	movff	btemp+1,btemp+5
  1686  004D5E  C002  F006         	movff	btemp+2,btemp+6
  1687  004D62  C003  F007         	movff	btemp+3,btemp+7
  1688  004D66  EE01  F040         	lfsr	0,_wv+18
  1689  004D6A  CFEE F000          	movff	postinc0,btemp
  1690  004D6E  CFED F001          	movff	postdec0,btemp+1
  1691  004D72  5004               	movf	btemp+4,w,c
  1692  004D74  5C00               	subwf	btemp,w,c
  1693  004D76  CFE8 F118          	movff	wreg,_tdDVNT	;volatile
  1694  004D7A  5005               	movf	btemp+5,w,c
  1695  004D7C  5801               	subwfb	btemp+1,w,c
  1696  004D7E  CFE8 F119          	movff	wreg,_tdDVNT+1	;volatile
  1697                           ;tacho.c: 401: if(tdDVNT>0&&tdDVNT<=3) tdDVNT=0;
  1698  004D82  0101               	movlb	_tdDVNT shr (0+8)	;volatile
  1699  004D84  5119               	movf	(_tdDVNT+1)& (0+255),w,b	;volatile
  1700  004D86  0A80               	xorlw	128
  1701  004D88  0F80               	addlw	128
  1702  004D8A  0E01               	movlw	1
  1703  004D8C  B4D8               	btfsc	status,2,c
  1704  004D8E  5D18               	subwf	_tdDVNT& (0+255),w,b	;volatile
  1705  004D90  E30B               	bnc	l128
  1706  004D92  5119               	movf	(_tdDVNT+1)& (0+255),w,b	;volatile
  1707  004D94  0A80               	xorlw	128
  1708  004D96  0F80               	addlw	128
  1709  004D98  0E04               	movlw	4
  1710  004D9A  B4D8               	btfsc	status,2,c
  1711  004D9C  5D18               	subwf	_tdDVNT& (0+255),w,b	;volatile
  1712  004D9E  E204               	bc	l128
  1713  004DA0  EE01  F018         	lfsr	0,_tdDVNT	;volatile
  1714  004DA4  6AEE               	clrf	postinc0,c
  1715  004DA6  6AEE               	clrf	postinc0,c
  1716  004DA8                     l128:
  1717                           ;tacho.c: 402: if(tdDVNT<0&&tdDVNT>=-3) tdDVNT=0
      +                          ;
  1718  004DA8  0101               	movlb	_tdDVNT shr (0+8)	;volatile
  1719  004DAA  AF19               	btfss	(_tdDVNT+1)& (0+255),7,b	;volatile
  1720  004DAC  D00B               	goto	l129
  1721  004DAE  5119               	movf	(_tdDVNT+1)& (0+255),w,b	;volatile
  1722  004DB0  0A80               	xorlw	128
  1723  004DB2  0F81               	addlw	-127
  1724  004DB4  0EFD               	movlw	253
  1725  004DB6  B4D8               	btfsc	status,2,c
  1726  004DB8  5D18               	subwf	_tdDVNT& (0+255),w,b	;volatile
  1727  004DBA  E304               	bnc	l129
  1728  004DBC  EE01  F018         	lfsr	0,_tdDVNT	;volatile
  1729  004DC0  6AEE               	clrf	postinc0,c
  1730  004DC2  6AEE               	clrf	postinc0,c
  1731  004DC4                     l129:
  1732                           ;tacho.c: 406: indtm++;
  1733  004DC4  010F               	movlb	F1303 shr (0+8)
  1734  004DC6  2B43               	incf	F1303& (0+255),f,b
  1735                           ;tacho.c: 407: if(indtm>9)
  1736  004DC8  0E09               	movlw	9
  1737  004DCA  6543               	cpfsgt	F1303& (0+255),b
  1738  004DCC  0C09               	retlw	9
  1739                           ;tacho.c: 408: {
  1740  004DCE  6B43               	clrf	F1303& (0+255),b
  1741                           ;tacho.c: 411: if(indv<=7)
  1742  004DD0  0E08               	movlw	8
  1743  004DD2  010F               	movlb	F1302 shr (0+8)
  1744  004DD4  6142               	cpfslt	F1302& (0+255),b
  1745  004DD6  D005               	goto	l131
  1746                           ;tacho.c: 412: {
  1747  004DD8  EE01  F00E         	lfsr	0,_dDVNT	;volatile
  1748  004DDC  6AEE               	clrf	postinc0,c
  1749  004DDE  6AEE               	clrf	postinc0,c
  1750                           ;tacho.c: 414: }
  1751  004DE0  D00F               	goto	l132
  1752  004DE2                     l131:
  1753                           ;tacho.c: 415: else
  1754  004DE2  0100               	movlb	(_M+48) shr (0+8)
  1755  004DE4  C106  FFE8         	movff	F1304,wreg
  1756  004DE8  5D85               	subwf	(_M+48)& (0+255),w,b
  1757  004DEA  CFE8 F10E          	movff	wreg,_dDVNT	;volatile
  1758  004DEE  C107  FFE8         	movff	F1304+1,wreg
  1759  004DF2  5986               	subwfb	(_M+49)& (0+255),w,b
  1760  004DF4  CFE8 F10F          	movff	wreg,_dDVNT+1	;volatile
  1761                           ;tacho.c: 418: fv=M.rVVNT;
  1762  004DF8  C085  F106         	movff	_M+48,F1304
  1763  004DFC  C086  F107         	movff	_M+49,F1304+1
  1764  004E00                     l132:
  1765                           ;tacho.c: 419: }
  1766  004E00  010F               	movlb	F1302 shr (0+8)
  1767  004E02  6B42               	clrf	F1302& (0+255),b
  1768                           ;tacho.c: 421: }
  1769  004E04  0012               	return	
  1770  004E06                     __end_of_FltParVNT:
  1771                           ;tacho.c: 425: void FPmVNT(void)
  1772                           ;tacho.c: 426: {
  1773  004E06                     _FPmVNT:
  1774  000000                     
  1775                           ;tacho.c: 429: DVNT=VDoc-M.rVVNT;
  1776  004E06  0101               	movlb	_VDoc shr (0+8)	;volatile
  1777  004E08  C085  FFE8         	movff	_M+48,wreg
  1778  004E0C  5D0A               	subwf	_VDoc& (0+255),w,b	;volatile
  1779  004E0E  CFE8 F108          	movff	wreg,_DVNT	;volatile
  1780  004E12  C086  FFE8         	movff	_M+49,wreg
  1781  004E16  590B               	subwfb	(_VDoc+1)& (0+255),w,b
  1782  004E18  CFE8 F109          	movff	wreg,_DVNT+1	;volatile
  1783                           ;tacho.c: 430: v_t=DVNT;
  1784  004E1C  C108  F11E         	movff	_DVNT,_v_t	;volatile
  1785  004E20  C109  F11F         	movff	_DVNT+1,_v_t+1	;volatile
  1786                           ;tacho.c: 431: if(RTdS(7)>1)
  1787  004E24  0E07               	movlw	7
  1788  004E26  EC04  F046         	call	_RTdS
  1789  004E2A  6E00               	movwf	btemp,c
  1790  004E2C  0E02               	movlw	2
  1791  004E2E  5C00               	subwf	btemp,w,c
  1792  004E30  A0D8               	btfss	status,0,c
  1793  004E32  0012               	return	
  1794                           ;tacho.c: 432: {
  1795  004E34  0E07               	movlw	7
  1796  004E36  ECF2  F045         	call	_StartRTdS
  1797                           ;tacho.c: 434: FltParVNT();
  1798  004E3A  DEF2               	call	_FltParVNT	;wreg free
  1799                           ;tacho.c: 435: v_dt=dDVNT;
  1800  004E3C  C10E  F11C         	movff	_dDVNT,_v_dt	;volatile
  1801  004E40  C10F  F11D         	movff	_dDVNT+1,_v_dt+1	;volatile
  1802                           ;tacho.c: 436: v_tdt=tdDVNT;
  1803  004E44  C118  F120         	movff	_tdDVNT,_v_tdt	;volatile
  1804  004E48  C119  F121         	movff	_tdDVNT+1,_v_tdt+1	;volatile
  1805                           ;tacho.c: 437: v_ddt=ddDVNT;
  1806  004E4C  C126  F12A         	movff	_ddDVNT,_v_ddt	;volatile
  1807  004E50  C127  F12B         	movff	_ddDVNT+1,_v_ddt+1	;volatile
  1808  004E54  C128  F12C         	movff	_ddDVNT+2,_v_ddt+2	;volatile
  1809  004E58  C129  F12D         	movff	_ddDVNT+3,_v_ddt+3	;volatile
  1810                           ;tacho.c: 438: }
  1811  004E5C  0012               	return	
  1812  004E5E                     __end_of_FPmVNT:
  1813                           ;tacho.c: 444: void SetNstVNT(unsigned char doc)
  1814                           ;tacho.c: 445: {
  1815  004E5E                     _SetNstVNT:
  1816  000000                     
  1817                           ; _doc loaded to fsr2l
  1818  004E5E  6ED9               	movwf	fsr2l,c
  1819                           ;tacho.c: 446: VDoc=doc*100;
  1820  004E60  50D9               	movf	fsr2l,w,c
  1821  004E62  0D64               	mullw	100
  1822  004E64  CFF3 F10A          	movff	prodl,_VDoc	;volatile
  1823  004E68  CFF4 F10B          	movff	prodh,_VDoc+1	;volatile
  1824                           ;tacho.c: 447: }
  1825  004E6C  0012               	return	
  1826  004E6E                     __end_of_SetNstVNT:
  1827                           ;tacho.c: 453: bit Vrosnie(const unsigned char t
      +                          )
  1828                           ;tacho.c: 454: {
  1829  004E6E                     _Vrosnie:
  1830  000000                     
  1831                           ; _t loaded to fsr2l
  1832  004E6E  6ED9               	movwf	fsr2l,c
  1833                           ;tacho.c: 458: return (v_dt>t)?1:0;
  1834  004E70  C11C  F000         	movff	_v_dt,btemp	;volatile
  1835  004E74  C11D  F001         	movff	_v_dt+1,btemp+1	;volatile
  1836  004E78  CFD9 F002          	movff	fsr2l,btemp+2
  1837  004E7C  6A03               	clrf	btemp+3,c
  1838  004E7E  5003               	movf	btemp+3,w,c
  1839  004E80  0A80               	xorlw	128
  1840  004E82  6E04               	movwf	btemp+4,c
  1841  004E84  5001               	movf	btemp+1,w,c
  1842  004E86  0A80               	xorlw	128
  1843  004E88  5C04               	subwf	btemp+4,w,c
  1844  004E8A  E102               	bnz	u745
  1845  004E8C  5000               	movf	btemp,w,c
  1846  004E8E  5C02               	subwf	btemp+2,w,c
  1847  004E90                     u745:
  1848  004E90  E202               	bc	u740
  1849  004E92  80D8               	bsf	status,0,c
  1850  004E94  0012               	return	
  1851  004E96                     u740:
  1852  004E96  90D8               	bcf	status,0,c
  1853  004E98  0012               	return	
  1854                           ;tacho.c: 459: }
  1855  004E9A                     __end_of_Vrosnie:
  1856                           ;tacho.c: 465: bit Vmaleje(const unsigned int t)
  1857                           ;tacho.c: 466: {
  1858  004E9A  00B2               	dw	?_Vmaleje
  1859  004E9C                     _Vmaleje:
  1860  000000                     
  1861                           ;tacho.c: 467: signed char w;
  1862  004E9C  0100               	movlb	__Lparam shr (0+8)
  1863  004E9E  51B2               	movf	?_Vmaleje^(__Lparam& (0+65280)),w
  1864  004EA0  0800               	sublw	0
  1865  004EA2  6ED9               	movwf	fsr2l,c
  1866                           ;tacho.c: 469: return (v_dt<w)?1:0;
  1867  004EA4  CFD9 F002          	movff	fsr2l,btemp+2
  1868  004EA8  6A03               	clrf	btemp+3,c
  1869  004EAA  BE02               	btfsc	btemp+2,7,c
  1870  004EAC  0603               	decf	btemp+3,f,c
  1871  004EAE  C11C  F000         	movff	_v_dt,btemp	;volatile
  1872  004EB2  C11D  F001         	movff	_v_dt+1,btemp+1	;volatile
  1873  004EB6  5001               	movf	btemp+1,w,c
  1874  004EB8  0A80               	xorlw	128
  1875  004EBA  6E04               	movwf	btemp+4,c
  1876  004EBC  5003               	movf	btemp+3,w,c
  1877  004EBE  0A80               	xorlw	128
  1878  004EC0  5C04               	subwf	btemp+4,w,c
  1879  004EC2  E102               	bnz	u765
  1880  004EC4  5002               	movf	btemp+2,w,c
  1881  004EC6  5C00               	subwf	btemp,w,c
  1882  004EC8                     u765:
  1883  004EC8  E202               	bc	u760
  1884  004ECA  80D8               	bsf	status,0,c
  1885  004ECC  0012               	return	
  1886  004ECE                     u760:
  1887  004ECE  90D8               	bcf	status,0,c
  1888  004ED0  0012               	return	
  1889                           ;tacho.c: 471: }
  1890  004ED2                     __end_of_Vmaleje:
  1891                           ;tacho.c: 475: bit Vstoi(void)
  1892                           ;tacho.c: 476: {
  1893  004ED2                     _Vstoi:
  1894  000000                     
  1895                           ;tacho.c: 477: return (!v_dt)?1:0;
  1896  004ED2  0101               	movlb	_v_dt shr (0+8)	;volatile
  1897  004ED4  511C               	movf	_v_dt& (0+255),w,b	;volatile
  1898  004ED6  111D               	iorwf	(_v_dt+1)& (0+255),w,b	;volatile
  1899  004ED8  90D8               	bcf	status,0,c
  1900  004EDA  B4D8               	btfsc	status,2,c
  1901  004EDC  80D8               	bsf	status,0,c
  1902  004EDE  0012               	return	
  1903                           ;tacho.c: 478: }
  1904  004EE0                     __end_of_Vstoi:
  1905                           ;tacho.c: 484: bit Vnizsza(const unsigned int t)
  1906                           ;tacho.c: 485: {
  1907  004EE0  00A8               	dw	?_Vnizsza
  1908  004EE2                     _Vnizsza:
  1909  000000                     
  1910                           ;tacho.c: 486: return (v_t>t)?1:0;
  1911  004EE2  C11E  F000         	movff	_v_t,btemp	;volatile
  1912  004EE6  C11F  F001         	movff	_v_t+1,btemp+1	;volatile
  1913  004EEA  0100               	movlb	__Lparam shr (0+8)
  1914  004EEC  5001               	movf	btemp+1,w,c
  1915  004EEE  5DA9               	subwf	(?_Vnizsza+1)^(__Lparam& (0+65280)),w
  1916  004EF0  E102               	bnz	u785
  1917  004EF2  5000               	movf	btemp,w,c
  1918  004EF4  5DA8               	subwf	?_Vnizsza^(__Lparam& (0+65280)),w
  1919  004EF6                     u785:
  1920  004EF6  E202               	bc	u780
  1921  004EF8  80D8               	bsf	status,0,c
  1922  004EFA  0012               	return	
  1923  004EFC                     u780:
  1924  004EFC  90D8               	bcf	status,0,c
  1925  004EFE  0012               	return	
  1926                           ;tacho.c: 487: }
  1927  004F00                     __end_of_Vnizsza:
  1928                           ;tacho.c: 493: bit Vwyzsza(const unsigned int t)
  1929                           ;tacho.c: 494: {
  1930  004F00  00A8               	dw	?_Vwyzsza
  1931  004F02                     _Vwyzsza:
  1932  000000                     
  1933                           ;tacho.c: 495: signed char w;
  1934  004F02  0100               	movlb	__Lparam shr (0+8)
  1935  004F04  51A8               	movf	?_Vwyzsza^(__Lparam& (0+65280)),w
  1936  004F06  0800               	sublw	0
  1937  004F08  6ED9               	movwf	fsr2l,c
  1938                           ;tacho.c: 497: return (v_t<w)?1:0;
  1939  004F0A  CFD9 F002          	movff	fsr2l,btemp+2
  1940  004F0E  6A03               	clrf	btemp+3,c
  1941  004F10  BE02               	btfsc	btemp+2,7,c
  1942  004F12  0603               	decf	btemp+3,f,c
  1943  004F14  C11E  F000         	movff	_v_t,btemp	;volatile
  1944  004F18  C11F  F001         	movff	_v_t+1,btemp+1	;volatile
  1945  004F1C  5001               	movf	btemp+1,w,c
  1946  004F1E  0A80               	xorlw	128
  1947  004F20  6E04               	movwf	btemp+4,c
  1948  004F22  5003               	movf	btemp+3,w,c
  1949  004F24  0A80               	xorlw	128
  1950  004F26  5C04               	subwf	btemp+4,w,c
  1951  004F28  E102               	bnz	u805
  1952  004F2A  5002               	movf	btemp+2,w,c
  1953  004F2C  5C00               	subwf	btemp,w,c
  1954  004F2E                     u805:
  1955  004F2E  E202               	bc	u800
  1956  004F30  80D8               	bsf	status,0,c
  1957  004F32  0012               	return	
  1958  004F34                     u800:
  1959  004F34  90D8               	bcf	status,0,c
  1960  004F36  0012               	return	
  1961                           ;tacho.c: 498: }
  1962  004F38                     __end_of_Vwyzsza:
  1963                           ;tacho.c: 502: bit Vrowna(void)
  1964                           ;tacho.c: 503: {
  1965  004F38                     _Vrowna:
  1966  000000                     
  1967                           ;tacho.c: 504: return (!v_t)?1:0;
  1968  004F38  0101               	movlb	_v_t shr (0+8)	;volatile
  1969  004F3A  511E               	movf	_v_t& (0+255),w,b	;volatile
  1970  004F3C  111F               	iorwf	(_v_t+1)& (0+255),w,b	;volatile
  1971  004F3E  90D8               	bcf	status,0,c
  1972  004F40  B4D8               	btfsc	status,2,c
  1973  004F42  80D8               	bsf	status,0,c
  1974  004F44  0012               	return	
  1975                           ;tacho.c: 505: }
  1976  004F46                     __end_of_Vrowna:
  1977                           ;tacho.c: 511: bit VTrosnacy(const unsigned char
      +                           t)
  1978                           ;tacho.c: 512: {
  1979  004F46                     _VTrosnacy:
  1980  000000                     
  1981                           ; _t loaded to fsr2l
  1982  004F46  6ED9               	movwf	fsr2l,c
  1983                           ;tacho.c: 513: return (v_tdt>t)?1:0;
  1984  004F48  C120  F000         	movff	_v_tdt,btemp	;volatile
  1985  004F4C  C121  F001         	movff	_v_tdt+1,btemp+1	;volatile
  1986  004F50  CFD9 F002          	movff	fsr2l,btemp+2
  1987  004F54  6A03               	clrf	btemp+3,c
  1988  004F56  5003               	movf	btemp+3,w,c
  1989  004F58  0A80               	xorlw	128
  1990  004F5A  6E04               	movwf	btemp+4,c
  1991  004F5C  5001               	movf	btemp+1,w,c
  1992  004F5E  0A80               	xorlw	128
  1993  004F60  5C04               	subwf	btemp+4,w,c
  1994  004F62  E102               	bnz	u825
  1995  004F64  5000               	movf	btemp,w,c
  1996  004F66  5C02               	subwf	btemp+2,w,c
  1997  004F68                     u825:
  1998  004F68  E202               	bc	u820
  1999  004F6A  80D8               	bsf	status,0,c
  2000  004F6C  0012               	return	
  2001  004F6E                     u820:
  2002  004F6E  90D8               	bcf	status,0,c
  2003  004F70  0012               	return	
  2004                           ;tacho.c: 514: }
  2005  004F72                     __end_of_VTrosnacy:
  2006                           ;tacho.c: 520: bit VTmalejacy(const unsigned cha
      +                          r t)
  2007                           ;tacho.c: 521: {
  2008  004F72                     _VTmalejacy:
  2009  000000                     
  2010                           ; _t loaded to fsr1l
  2011  004F72  6EE1               	movwf	fsr1l,c
  2012                           ;tacho.c: 522: signed char w;
  2013  004F74  50E1               	movf	fsr1l,w,c
  2014  004F76  0800               	sublw	0
  2015  004F78  6ED9               	movwf	fsr2l,c
  2016                           ;tacho.c: 524: return (v_tdt<w)?1:0;
  2017  004F7A  CFD9 F002          	movff	fsr2l,btemp+2
  2018  004F7E  6A03               	clrf	btemp+3,c
  2019  004F80  BE02               	btfsc	btemp+2,7,c
  2020  004F82  0603               	decf	btemp+3,f,c
  2021  004F84  C120  F000         	movff	_v_tdt,btemp	;volatile
  2022  004F88  C121  F001         	movff	_v_tdt+1,btemp+1	;volatile
  2023  004F8C  5001               	movf	btemp+1,w,c
  2024  004F8E  0A80               	xorlw	128
  2025  004F90  6E04               	movwf	btemp+4,c
  2026  004F92  5003               	movf	btemp+3,w,c
  2027  004F94  0A80               	xorlw	128
  2028  004F96  5C04               	subwf	btemp+4,w,c
  2029  004F98  E102               	bnz	u845
  2030  004F9A  5002               	movf	btemp+2,w,c
  2031  004F9C  5C00               	subwf	btemp,w,c
  2032  004F9E                     u845:
  2033  004F9E  E202               	bc	u840
  2034  004FA0  80D8               	bsf	status,0,c
  2035  004FA2  0012               	return	
  2036  004FA4                     u840:
  2037  004FA4  90D8               	bcf	status,0,c
  2038  004FA6  0012               	return	
  2039                           ;tacho.c: 525: }
  2040  004FA8                     __end_of_VTmalejacy:
  2041                           ;tacho.c: 529: bit VTzerowy(void)
  2042                           ;tacho.c: 530: {
  2043  004FA8                     _VTzerowy:
  2044  000000                     
  2045                           ;tacho.c: 531: return (!v_tdt)?1:0;
  2046  004FA8  0101               	movlb	_v_tdt shr (0+8)	;volatile
  2047  004FAA  5120               	movf	_v_tdt& (0+255),w,b	;volatile
  2048  004FAC  1121               	iorwf	(_v_tdt+1)& (0+255),w,b	;volatile
  2049  004FAE  90D8               	bcf	status,0,c
  2050  004FB0  B4D8               	btfsc	status,2,c
  2051  004FB2  80D8               	bsf	status,0,c
  2052  004FB4  0012               	return	
  2053                           ;tacho.c: 532: }
  2054  004FB6                     __end_of_VTzerowy:
  2055  000000                     
  2056  000000                     
  2057  000000                     
  2058  000000                     
  2059  000000                     
  2060  000000                     
  2061  000000                     
  2062  000000                     
  2063  000000                     
  2064  000000                     
  2065  000000                     
  2066  000000                     
  2067  000000                     
  2068  000000                     
  2069  000000                     
  2070  000000                     
  2071  000000                     
  2072  000000                     
  2073  000000                     
  2074  000000                     
  2075  000000                     
  2076  000000                     
  2077  000000                     
  2078  000000                     
  2079  000000                     
  2080  000000                     
  2081  000000                     
  2082  000000                     
  2083  000000                     
  2084  000000                     
  2085  000000                     
  2086  000000                     
  2087  000000                     
  2088  000000                     
  2089  000000                     
  2090  000000                     
  2091  000000                     
  2092  000000                     
  2093  000000                     
  2094  000000                     
  2095  000000                     
  2096  000000                     
  2097  000000                     
  2098  000000                     
  2099  000000                     
  2100  000000                     
  2101  000000                     
  2102  000000                     
  2103  000000                     
  2104  000000                     
  2105  000000                     
  2106  000000                     
  2107  000000                     
  2108  000000                     
  2109  000000                     
  2110  000000                     
  2111  000000                     
  2112  000000                     
  2113  000000                     
  2114  000000                     
  2115  000000                     
  2116  000000                     
  2117  000000                     
  2118  000000                     
  2119  000000                     
  2120  000000                     
  2121  000000                     
  2122  000000                     
  2123  000000                     
  2124  000000                     
  2125  000000                     
  2126  000000                     
  2127  000000                     
  2128  000000                     
  2129  000000                     
  2130  000000                     
  2131  000000                     
  2132  000000                     
  2133  000000                     
  2134  000000                     
  2135  000000                     
  2136  000000                     
  2137  000000                     
  2138  000000                     
  2139  000000                     
  2140  000000                     
  2141  000000                     
  2142  000000                     
  2143  000000                     
  2144  000000                     
  2145  000000                     
  2146  000000                     
  2147  000000                     
  2148  000000                     
  2149  000000                     
  2150  000000                     
  2151  000000                     
  2152  000000                     
  2153  000000                     
  2154  000000                     
  2155  000000                     
  2156  000000                     
  2157  000000                     
  2158  000000                     
  2159  000000                     
  2160  000000                     
  2161  000000                     
  2162  000000                     
  2163  000000                     
  2164  000000                     
  2165  000000                     
  2166  000000                     
  2167  000000                     
  2168  000000                     
  2169  000000                     
  2170  000000                     
  2171  000000                     
  2172  000000                     
  2173  000000                     
  2174  000000                     
  2175  000000                     
  2176  000000                     
  2177  000000                     
  2178  000000                     
  2179  000000                     
  2180  000000                     
  2181  000000                     
  2182  000000                     
  2183  000000                     
  2184  000000                     
  2185  000000                     
  2186  000000                     
  2187  000000                     
  2188  000000                     
  2189  000000                     
  2190  000000                     
  2191  000000                     
  2192  000000                     
  2193  000000                     
  2194  000000                     
  2195  000000                     
  2196  000000                     
  2197  000000                     
  2198  000000                     
  2199  000000                     
  2200  000000                     
  2201  000000                     
  2202  000000                     
  2203  000000                     
  2204  000000                     
  2205  000000                     
  2206  000000                     
  2207  000000                     
  2208  000000                     
  2209  000000                     
  2210  000000                     
  2211  000000                     
  2212  000000                     
  2213  000000                     
  2214  000000                     
  2215  000000                     
  2216  000000                     
  2217  000000                     
  2218  000000                     
  2219  000000                     
  2220  000000                     
  2221  000000                     
  2222  000000                     
  2223  000000                     
  2224  000000                     
  2225  000000                     
  2226  000000                     
  2227  000000                     
  2228  000000                     
  2229  000000                     
  2230  000000                     
  2231  000000                     
  2232  000000                     
  2233  000000                     
  2234  000000                     
  2235  000000                     
  2236  000000                     
  2237  000000                     
  2238  000000                     
  2239  000000                     
  2240  000000                     
  2241  000000                     
  2242  000000                     
  2243  000000                     
  2244  000000                     
  2245  000000                     
  2246  000000                     
  2247  000000                     
  2248  000000                     
  2249  000000                     
  2250  000000                     
  2251  000000                     
  2252  000000                     
  2253  000000                     
  2254  000000                     
  2255  000000                     
  2256  000000                     
  2257  000000                     
  2258  000000                     
  2259  000000                     
  2260  000000                     
  2261  000000                     
  2262  000000                     
  2263  000000                     
  2264  000000                     
  2265  000000                     
  2266  000000                     
  2267  000000                     
  2268  000000                     
  2269  000000                     
  2270  000000                     
  2271  000000                     
  2272  000000                     
  2273  000000                     
  2274  000000                     
  2275  000000                     
  2276  000000                     
  2277  000000                     
  2278  000000                     
  2279  000000                     
  2280  000000                     
  2281  000000                     
  2282  000000                     
  2283  000000                     
  2284  000000                     
  2285  000000                     
  2286  000000                     
  2287  000000                     
  2288  000000                     
  2289  000000                     
  2290  000000                     
  2291  000000                     
  2292  000000                     
  2293  000000                     
  2294  000000                     
  2295  000000                     
  2296  000000                     
  2297  000000                     
  2298  000000                     
  2299  000000                     
  2300  000000                     
  2301  000000                     
  2302  000000                     
  2303  000000                     
  2304  000000                     
  2305  000000                     
  2306  000000                     
  2307  000000                     
  2308  000000                     
  2309  000000                     
  2310  000000                     
  2311  000000                     
  2312  000000                     
  2313  000000                     
  2314  000000                     
  2315  000000                     
  2316  000000                     
  2317  000000                     
  2318  000000                     
  2319  000000                     
  2320  000000                     
  2321  000000                     
  2322  000000                     
  2323  000000                     
  2324  000000                     
  2325  000000                     
  2326  000000                     
  2327  000000                     
  2328  000000                     
  2329  000000                     
  2330  000000                     
  2331  000000                     
  2332  000000                     
  2333  000000                     
  2334  000000                     
  2335  000000                     
  2336  000000                     
  2337  000000                     
  2338  000000                     
  2339  000000                     
  2340  000000                     
  2341  000000                     
  2342  000000                     
  2343  000000                     
  2344  000000                     
  2345  000000                     
  2346  000000                     
  2347  000000                     
  2348  000000                     
  2349  000000                     
  2350  000000                     
  2351  000000                     
  2352  000000                     
  2353  000000                     
  2354  000000                     
  2355  000000                     
  2356  000000                     
  2357  000000                     
  2358  000000                     
  2359  000000                     
  2360  000000                     
  2361  000000                     
  2362  000000                     
  2363  000000                     
  2364  000000                     
  2365  000000                     
  2366  000000                     
  2367  000000                     
  2368  000000                     
  2369  000000                     
  2370  000000                     
  2371  000000                     
  2372  000000                     
  2373  000000                     
  2374  000000                     
  2375  000000                     
  2376  000000                     
  2377  000000                     
  2378  000000                     
  2379  000000                     
  2380  000000                     
  2381  000000                     
  2382  000000                     
  2383  000000                     
  2384  000000                     
  2385  000000                     
  2386  000000                     
  2387  000000                     
  2388  000000                     
  2389  000000                     
  2390  000000                     
  2391  000000                     
  2392  000000                     
  2393  000000                     
  2394  000000                     
  2395  000000                     
  2396  000000                     
  2397  000000                     
  2398  000000                     
  2399  000000                     
  2400  000000                     
  2401  000000                     
  2402  000000                     
  2403  000000                     
  2404  000000                     
  2405  000000                     
  2406  000000                     
  2407  000000                     
  2408  000000                     
  2409  000000                     
  2410  000000                     
  2411  000000                     
  2412  000000                     
  2413  000000                     
  2414  000000                     
  2415  000000                     
  2416  000000                     
  2417  000000                     
  2418  000000                     
  2419  000000                     
  2420  000000                     
  2421  000000                     
  2422  000000                     
  2423  000000                     
  2424  000000                     
  2425  000000                     
  2426  000000                     
  2427  000000                     
  2428  000000                     
  2429  000000                     
  2430  000000                     
  2431  000000                     
  2432  000000                     
  2433  000000                     
  2434  000000                     
  2435  000000                     
  2436  000000                     
  2437  000000                     
  2438  000000                     
  2439  000000                     
  2440  000000                     
  2441  000000                     
  2442  000000                     
  2443  000000                     
  2444  000000                     
  2445  000000                     
  2446  000000                     
  2447  000000                     
  2448  000000                     
  2449  000000                     
  2450  000000                     
  2451  000000                     
  2452  000000                     
  2453  000000                     
  2454  000000                     
  2455  000000                     
  2456  000000                     
  2457  000000                     
  2458  000000                     
  2459  000000                     
  2460  000000                     
  2461  000000                     
  2462  000000                     
  2463  000000                     
  2464  000000                     
  2465  000000                     
  2466  000000                     
  2467  000000                     
  2468  000000                     
  2469  000000                     
  2470  000000                     
  2471  000000                     
  2472  000000                     
  2473  000000                     
  2474  000000                     
  2475  000000                     
  2476  000000                     
  2477  000000                     
  2478  000000                     
  2479  000000                     
  2480  000000                     
  2481  000000                     
  2482  000000                     
  2483  000000                     
  2484  000000                     
  2485  000000                     
  2486  000000                     
  2487  000000                     
  2488  000000                     
  2489  000000                     
  2490  000000                     
  2491                           
  2492                           	psect	rbit
  2493  00020C                     _new:
  2494  00020C                     	ds	1
  2495  00020C                     _stn:
  2496  00020C                     	ds	1
  2497  00020C                     _zero:
  2498  00020C                     	ds	1
  2499                           
  2500                           	psect	bigbss
  2501  000F40                     F1281:
  2502  000F40                     	ds	1
  2503  000F40                     F1297:
  2504  000F40                     	ds	1
  2505  000F40                     F1302:
  2506  000F40                     	ds	1
  2507  000F40                     F1303:
  2508  000F40                     	ds	1
  2509  000000                     
  2510  000000                     
  2511  000000                     
  2512  000000                     
  2513  000000                     
  2514  000000                     
  2515  000000                     
  2516  000000                     
  2517  000000                     
  2518  000000                     
  2519  000000                     
  2520  000000                     
  2521  000000                     
  2522  000000                     
  2523  000000                     
  2524  000000                     
  2525  000000                     
  2526  000000                     
  2527  000000                     
  2528  000000                     
  2529  000000                     
  2530  000000                     
  2531  000000                     
  2532  000000                     
  2533  000000                     
  2534  000000                     
  2535  000000                     
  2536  000000                     
  2537  000000                     
  2538  000000                     
  2539  000000                     
  2540  000000                     
  2541  000000                     
  2542  000000                     
  2543  000000                     
  2544  000000                     
  2545  000000                     
  2546  000000                     
  2547  000000                     
  2548  000000                     
  2549  000000                     
  2550  000000                     
  2551  000000                     
  2552  000000                     
  2553  000000                     
  2554  000000                     
  2555  000000                     
  2556  000000                     
  2557  000000                     
  2558  000000                     
  2559  000000                     
  2560  000000                     
  2561  000000                     
  2562  000000                     
  2563  000000                     
  2564  000000                     
  2565  000000                     
  2566  000000                     
  2567  000000                     
  2568  000000                     
  2569  000000                     
  2570  000000                     
  2571  000000                     
  2572  000000                     
  2573  000000                     
  2574  000000                     
  2575  000000                     
  2576  000000                     
  2577  000000                     
  2578  000000                     
  2579  000000                     
  2580  000000                     
  2581  000000                     
  2582  000000                     
  2583  000000                     
  2584  000000                     
  2585  000000                     
  2586  000000                     
  2587  000000                     
  2588  000000                     
  2589  000000                     
  2590  000000                     
  2591  000000                     
  2592  000000                     
  2593  000000                     
  2594  000000                     
  2595  000000                     
  2596  000000                     
  2597  000000                     
  2598  000000                     
  2599  000000                     
  2600  000000                     
  2601  000000                     
  2602  000000                     
  2603  000000                     
  2604  000000                     
  2605  000000                     
  2606  000000                     
  2607  000000                     
  2608  000000                     
  2609  000000                     
  2610  000000                     
  2611  000000                     
  2612  000000                     
  2613  000000                     
  2614  000000                     
  2615  000000                     
  2616  000000                     
  2617  000000                     
  2618  000000                     
  2619  000000                     
  2620  000000                     
  2621  000000                     
  2622  000000                     
  2623  000000                     
  2624  000000                     
  2625  000000                     
  2626  000000                     
  2627  000000                     
  2628  000000                     
  2629  000000                     
  2630  000000                     
  2631  000000                     
  2632  000000                     
  2633  000000                     
  2634  000F40                     _tkrk:
  2635  000F40                     	ds	1
  2636                           
  2637                           	psect	bss
  2638  000100                     F1280:
  2639  000100                     	ds	2
  2640  000100                     F1286:
  2641  000100                     	ds	2
  2642  000100                     F1296:
  2643  000100                     	ds	2
  2644  000100                     F1304:
  2645  000100                     	ds	2
  2646  000000                     
  2647  000000                     
  2648  000000                     
  2649  000100                     _DVNT:
  2650  000100                     	ds	2
  2651  000000                     
  2652  000000                     
  2653  000000                     
  2654  000000                     
  2655  000100                     _VDoc:
  2656  000100                     	ds	2
  2657  000100                     _bin0:
  2658  000100                     	ds	2
  2659  000100                     _dDVNT:
  2660  000100                     	ds	2
  2661  000100                     _in0:
  2662  000100                     	ds	2
  2663  000100                     _ip0:
  2664  000100                     	ds	2
  2665  000100                     _ni0:
  2666  000100                     	ds	2
  2667  000100                     _nw0:
  2668  000100                     	ds	2
  2669  000100                     _tdDVNT:
  2670  000100                     	ds	2
  2671  000100                     _tm0:
  2672  000100                     	ds	2
  2673  000100                     _v_dt:
  2674  000100                     	ds	2
  2675  000100                     _v_t:
  2676  000100                     	ds	2
  2677  000100                     _v_tdt:
  2678  000100                     	ds	2
  2679  000100                     _wynik:
  2680  000100                     	ds	2
  2681  000100                     _zr0:
  2682  000100                     	ds	2
  2683  000100                     _ddDVNT:
  2684  000100                     	ds	4
  2685  000100                     _v_ddt:
  2686  000100                     	ds	4
  2687  000100                     _wv:
  2688  000100                     	ds	24
  2689  000100                     _wvv:
  2690  000100                     	ds	24
  2691  000100                     F1284:
  2692  000100                     	ds	40
  2693  000100                     _tnp:
  2694  000100                     	ds	40
  2695                           
  2696                           	psect	temp
  2697  000000                     btemp:
  2698  000000                     	ds	8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           prodh	equ	0xFF4
  2702                           prodl	equ	0xFF3
  2703                           indf0	equ	0xFEF
  2704                           postinc0	equ	0xFEE
  2705                           postdec0	equ	0xFED
  2706                           fsr0h	equ	0xFEA
  2707                           fsr0l	equ	0xFE9
  2708                           wreg	equ	0xFE8
  2709                           postinc1	equ	0xFE6
  2710                           postdec1	equ	0xFE5
  2711                           fsr1h	equ	0xFE2
  2712                           fsr1l	equ	0xFE1
  2713                           fsr2l	equ	0xFD9
  2714                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Thu Jul 12 08:02:18 2018

               _SetNstVNT 4E5E                  _TimTacho 43EA  
   __end_of_StartTimTacho 43EA         __end_of_SetNstVNT 4E6E  
                       _M 0055                         l4 4326  
                       l7 436C                         l9 437C  
                      l11 43B4                        l21 4406  
                      l31 44B0                        l23 4478  
                      l41 4528                        l17 4402  
                      l50 45F2                        l43 455E  
                      l35 44CC                        l27 447A  
                      l45 45D6                        l62 4632  
                      l54 45F4                        l38 4542  
                      l63 4668                        l47 45AC  
                      l39 44E0                        l80 47D6  
                      l72 46B8                        l81 47CA  
                      l73 470A                        l90 4820  
                      l82 47A8                        l58 4610  
                      l83 47BA                        l67 467C  
                      l76 4774                        l68 46AE  
                      l93 49BE                        l94 4988  
                      l86 4A70                        l87 4802  
                      l96 4982                        l88 480C  
                      l89 485C                        l99 49B8  
               ?a_HistVal 00B9                 _PomiarVNT 47E0  
                      _wv 012E         __end_of_PomiarVNT 4A72  
                     l100 4A6C                       l110 4B04  
                     l103 4ACE                       l120 4C7C  
                     l104 4B6A                       l121 4C8E  
                     l113 4B7E                       l105 4AF2  
                     l122 4C94                       l106 4AD6  
                     l131 4DE2                       l132 4E00  
                     l116 4C06                       l125 4CEE  
                     l109 4B34                       l118 4C5A  
                     l128 4DA8                       l129 4DC4  
                     u100 4442                       u210 45AA  
                     u300 4670                       u140 44AE  
                     u150 44CA                       u320 46B2  
                     u315 46A0                       u350 470E  
                     u270 460E                       u190 4546  
                     u335 46D6                       u175 451A  
                     u345 46FC                       u185 4534  
                     u290 466C                       u605 4C3E  
                     u365 4740                       u455 4940  
                     u800 4F34                       u475 4956  
                     u820 4F6E                       u740 4E96  
                     u805 4F2E                       u840 4FA4  
                     u760 4ECE                       u825 4F68  
                     u745 4E90                       u585 4BD2  
                     u780 4EFC                       u845 4F9E  
                     u765 4EC8                       u785 4EF6  
                     _in0 0110                       _ip0 0112  
                     _ni0 0114                       _nw0 0116  
                     _tm0 011A                       _new 020C  
                     _zr0 0124                       _v_t 011E  
                     _tnp 0186                       _stn 020D  
                     _wvv 0146                       wreg 000FE8  
               _StartRTdS 8BE4               ?a_FltParVNT 00B6  
                    F1302 0F42                      F1303 0F43  
                    F1304 0106                      F1280 0100  
                    F1281 0F40                      F1284 015E  
                    F1286 0102                      F1296 0104  
                    F1297 0F41                      f6063 00AD  
                    _DVNT 0108                      _RTdS 8C08  
                    _VDoc 010A                      _TFlt 472C  
                    _bin0 010C                      _v_dt 011C  
                    fsr0h 000FEA                      fsr1h 000FE2  
                    _tkrk 0F44                      indf0 000FEF  
                    fsr0l 000FE9                      fsr1l 000FE1  
                    fsr2l 000FD9                      btemp 0000  
                    _zero 020E                   ?_AddTab 00B6  
                    ftdiv 931E                      lldiv 90B0  
                    ftmul 91FE           __end_of_IntINT0 43CC  
                    fttol 9620                      lwmod 955E  
                    prodh 000FF4                      prodl 000FF3  
         __end_of_HistVal 472A  __end_of_PredkoscZmianVNT 4C20  
         __end_of_Vmaleje 4ED2        ?a_PredkoscZmianVNT 00BA  
         __end_of_Vnizsza 4F00           __end_of_Vrosnie 4E9A  
                   ?_TFlt 00B6               _FindPropVal 4468  
             ?a_PomiarVNT 00A9             __end_of_Vstoi 4EE0  
         __end_of_Vwyzsza 4F38       __end_of_FindPropVal 45E0  
                   _DtKNF 0045                     _dDVNT 010E  
              used_btemp0 0001                used_btemp1 0001  
              used_btemp2 0001                used_btemp3 0001  
              used_btemp4 0001                used_btemp5 0001  
              used_btemp6 0001                used_btemp7 0001  
                   _Vstoi 4ED2             ?a_FindPropVal 00B9  
                   _v_ddt 012A                     _v_tdt 0120  
                   _round 9424                     _wynik 0122  
             _IncTimTacho 43CC                     lwtoft 988C  
            ?_FindPropVal 00B6       __end_of_IncTimTacho 43E0  
                   status 000FD8          __end_of_IntTacho 4342  
                 _IntINT0 4342                   _HistVal 45E2  
                ?_HistVal 00B6          __end_of_VTzerowy 4FB6  
                 __Lparam 00A8          __end_of_TimTacho 43F0  
                 _Vmaleje 4E9C                  ?_Vmaleje 00B2  
                 _Vnizsza 4EE2                   _Vrosnie 4E6E  
                ?_Vnizsza 00A8            __end_of_FPmVNT 4E5E  
                 __ramtop 1000                   _Vwyzsza 4F02  
          __end_of_AddTab 4466          _PredkoscZmianVNT 4ABC  
                ?_Vwyzsza 00A8            __end_of_ClrDtV 4ABC  
                 _nokrobr 0EE2              __end_of_TFlt 47E0  
          __end_of_Vrowna 4F46                    ?_round 00B6  
                  _FPmVNT 4E06                    _AddTab 43F2  
                  _ClrDtV 4A72                    _ddDVNT 0126  
                  _Vrowna 4F38                   postdec0 000FED  
                 postdec1 000FE5                   postinc0 000FEE  
                 postinc1 000FE6                    _tdDVNT 0118  
               _FltParVNT 4C20         __end_of_FltParVNT 4E06  
              _VTmalejacy 4F72        __end_of_VTmalejacy 4FA8  
                  tblptrl 000FF6             _StartTimTacho 43E0  
                _IntTacho 4314                 _VTrosnacy 4F46  
       __end_of_VTrosnacy 4F72                  _VTzerowy 4FA8  
